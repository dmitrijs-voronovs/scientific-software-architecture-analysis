id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/15076:504,Availability,alive,alive,504,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724); Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs.; I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:417,Deployability,pipeline,pipeline,417,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724); Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs.; I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:753,Deployability,Install,Installation,753,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724); Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs.; I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:531,Energy Efficiency,allocate,allocated,531,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724); Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs.; I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15076:625,Performance,perform,performs,625,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724); Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs.; I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15076
https://github.com/root-project/root/issues/15077:658,Availability,error,error,658,"### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:; https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with; ```cpp; auto dphi = DeltaPhi(3.14f, 1.23); ```; will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:; ```cpp; template <typename T, typename U = T>; std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { ; // implementation unchanged apart from updated static_assert to take into account T and U; }; ```; This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:859,Availability,error,error,859,"### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:; https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with; ```cpp; auto dphi = DeltaPhi(3.14f, 1.23); ```; will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:; ```cpp; template <typename T, typename U = T>; std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { ; // implementation unchanged apart from updated static_assert to take into account T and U; }; ```; This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:1499,Deployability,update,updated,1499,"### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:; https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with; ```cpp; auto dphi = DeltaPhi(3.14f, 1.23); ```; will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:; ```cpp; template <typename T, typename U = T>; std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { ; // implementation unchanged apart from updated static_assert to take into account T and U; }; ```; This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:1821,Deployability,Install,Installation,1821,"### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:; https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with; ```cpp; auto dphi = DeltaPhi(3.14f, 1.23); ```; will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:; ```cpp; template <typename T, typename U = T>; std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { ; // implementation unchanged apart from updated static_assert to take into account T and U; }; ```; This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:367,Integrability,interface,interface,367,"### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:; https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with; ```cpp; auto dphi = DeltaPhi(3.14f, 1.23); ```; will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:; ```cpp; template <typename T, typename U = T>; std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { ; // implementation unchanged apart from updated static_assert to take into account T and U; }; ```; This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:865,Integrability,message,message,865,"### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:; https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with; ```cpp; auto dphi = DeltaPhi(3.14f, 1.23); ```; will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:; ```cpp; template <typename T, typename U = T>; std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { ; // implementation unchanged apart from updated static_assert to take into account T and U; }; ```; This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/issues/15077:1045,Modifiability,variab,variable,1045,"### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:; https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with; ```cpp; auto dphi = DeltaPhi(3.14f, 1.23); ```; will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:; ```cpp; template <typename T, typename U = T>; std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { ; // implementation unchanged apart from updated static_assert to take into account T and U; }; ```; This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15077
https://github.com/root-project/root/pull/15078:152,Deployability,update,updated,152,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/12091. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15078
https://github.com/root-project/root/pull/15078:122,Testability,test,tested,122,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/12091. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15078
https://github.com/root-project/root/issues/15079:226,Availability,error,error-during-rdataframe-snapshot,226,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop).; This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```; #include <ROOT/RDataFrame.hxx>; #include <TROOT.h>; #include <vector>; #include <string>. int main(); {; ROOT::EnableImplicitMT();; ; for (UInt_t i = 0 ; i < 100; i++){; 	std::vector<std::string> input_files;; 	input_files.emplace_back(""test1.root"");; 	input_files.emplace_back(""test2.root"");	; std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrigPassed"", ""IsSingleMuonTrigMatched"", ""IsSingleMuonTrigPa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8285,Availability,error,error,8285,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>; (""test"", ""test_out.root"", columnList); .GetValue();; }; }; ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8439,Availability,error,errors,8439,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>; (""test"", ""test_out.root"", columnList); .GetValue();; }; }; ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8534,Availability,error,errors,8534,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>; (""test"", ""test_out.root"", columnList); .GetValue();; }; }; ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8574,Deployability,Install,Installation,8574,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>; (""test"", ""test_out.root"", columnList); .GetValue();; }; }; ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:664,Safety,safe,safe,664,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop).; This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```; #include <ROOT/RDataFrame.hxx>; #include <TROOT.h>; #include <vector>; #include <string>. int main(); {; ROOT::EnableImplicitMT();; ; for (UInt_t i = 0 ; i < 100; i++){; 	std::vector<std::string> input_files;; 	input_files.emplace_back(""test1.root"");; 	input_files.emplace_back(""test2.root"");	; std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrigPassed"", ""IsSingleMuonTrigMatched"", ""IsSingleMuonTrigPa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:7913,Testability,test,test,7913,":vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<int>,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<float>, Double_t, Double_t, Float_t, Float_t, Char_t, Char_t, Char_t, Char_t, Char_t, Double_t, Double_t, Double_t, Float_t, Int_t, Bool_t, Float_t, Int_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<int>,std::vector<char>,std::vector<float>,std::vector<float>, Double_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>; (""test"", ""test_out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8306,Testability,assert,asserts,8306,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>; (""test"", ""test_out.root"", columnList); .GetValue();; }; }; ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8364,Testability,assert,asserts,8364,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>; (""test"", ""test_out.root"", columnList); .GetValue();; }; }; ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:623,Usability,simpl,simply,623,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop).; This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```; #include <ROOT/RDataFrame.hxx>; #include <TROOT.h>; #include <vector>; #include <string>. int main(); {; ROOT::EnableImplicitMT();; ; for (UInt_t i = 0 ; i < 100; i++){; 	std::vector<std::string> input_files;; 	input_files.emplace_back(""test1.root"");; 	input_files.emplace_back(""test2.root"");	; std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrigPassed"", ""IsSingleMuonTrigMatched"", ""IsSingleMuonTrigPa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15079:8007,Usability,clear,clear,8007,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>; (""test"", ""test_out.root"", columnList); .GetValue();; }; }; ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15079
https://github.com/root-project/root/issues/15080:424,Deployability,Install,Installation,424,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:279,Performance,concurren,concurrent,279,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:335,Performance,concurren,concurrent,335,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/issues/15080:318,Testability,test,test,318,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15080
https://github.com/root-project/root/pull/15081:348,Energy Efficiency,Reduce,Reducer,348,"The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:563,Energy Efficiency,reduce,reducer,563,"The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:547,Integrability,wrap,wrapper,547,"The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:4,Testability,log,logic,4,"The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:338,Testability,log,logic,338,"The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/pull/15081:598,Testability,test,test,598,"The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15081
https://github.com/root-project/root/issues/15082:907,Deployability,Install,Installation,907,"### Explain what you would like to see improved and how. Moved from JIRA: [ROOT-10172](https://its.cern.ch/jira/browse/ROOT-10172). When using the `Histo2D` method of an `RDataFrame`, it'd be nice if the column used to fill the weights does not have to have the same type as the one used to fill the histogram, so one can e.g. fill all jets from an event into the histogram and have just one number as a weight for the whole event, as in the example below.; ```; #include <ROOT/RDataFrame.hxx>; #include <iostream>; int main() {; auto df = ROOT::RDataFrame(10).Define(""JetPt"", ""std::vector<float>; {1.,2.,3.}; ""); .Define(""Ntries"", ""10""); .Define(""Weight"", ""12"");; ROOT::RDF::TH2DModel histmodel(""moep"", ""moep"", 25, 0, 1000, 22, -2, 20);; auto temp = df.Histo2D(histmodel, ""JetPt"", ""Ntries"", ""Weight"");; std::cout << temp->GetXaxis()->GetNbins() << std::endl;; return 0;; }; ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15082
https://github.com/root-project/root/pull/15084:1182,Deployability,update,updated,1182,"This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR.; Other additions that will be accounted for in one or more follow-up PRs include:; - The possibility for users to provide their own entries/value pointers to the processor.; - The possibility for users to specify the `RNTupleModel` used to construct the processor entry.; - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:86,Integrability,interface,interface,86,"This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR.; Other additions that will be accounted for in one or more follow-up PRs include:; - The possibility for users to provide their own entries/value pointers to the processor.; - The possibility for users to specify the `RNTupleModel` used to construct the processor entry.; - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:212,Integrability,interface,interface,212,"This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR.; Other additions that will be accounted for in one or more follow-up PRs include:; - The possibility for users to provide their own entries/value pointers to the processor.; - The possibility for users to specify the `RNTupleModel` used to construct the processor entry.; - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:255,Security,access,access,255,"This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR.; Other additions that will be accounted for in one or more follow-up PRs include:; - The possibility for users to provide their own entries/value pointers to the processor.; - The possibility for users to specify the `RNTupleModel` used to construct the processor entry.; - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/pull/15084:1152,Testability,test,tested,1152,"This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR.; Other additions that will be accounted for in one or more follow-up PRs include:; - The possibility for users to provide their own entries/value pointers to the processor.; - The possibility for users to specify the `RNTupleModel` used to construct the processor entry.; - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15084
https://github.com/root-project/root/issues/15085:2096,Availability,error,errors,2096,"# Reproducer. ```python; import ROOT; print ( 'ROOT version' , ROOT.gROOT.GetVersion() ); ROOT.gInterpreter.Declare('''; #include <type_traits> ; #include <string> ; template <unsigned int N>; class A; {; public:; //; template <unsigned int K,; typename std::enable_if<(K<N),int>::type = 0 >; std::string fun_1 () { return ""ququ"" ;} ; //; template <unsigned int K,; typename std::enable_if<(N<=K),int>::type = 0 >; int fun_1 () { return K ;} ; };; // the same with functions; template <unsigned int K,unsigned int N, ; typename std::enable_if<(K<N),int>::type = 0 >; inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} ; //; template <unsigned int K,unsigned int N,; typename std::enable_if<(N<=K),int>::type = 0 >; inline int fun_2 ( A<N>& ) { return K ;} ; '''). N = 4 ; a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) ; for k in range ( 2 * N + 1 ) : ; print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) ; for k in range( 2 * N + 1 ) :; func = ROOT.fun_2[k,N]; print ( k , func ( a ) ) ; ```. And the output is: ; ```; ROOT version 6.31/01; Use templated method of templated class A<4> : it is OK; 0 ququ; 1 ququ; 2 ququ; 3 ququ; 4 4; 5 5; 6 6; 7 7; 8 8; Use templated function for templated class A<4> : it fails for k >=4; 0 ququ; 1 ququ; 2 ququ; 3 ququ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>; print ( k , func ( a ) ); TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 ; Linux, ; LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:1945,Deployability,RELEASE,RELEASE,1945,"# Reproducer. ```python; import ROOT; print ( 'ROOT version' , ROOT.gROOT.GetVersion() ); ROOT.gInterpreter.Declare('''; #include <type_traits> ; #include <string> ; template <unsigned int N>; class A; {; public:; //; template <unsigned int K,; typename std::enable_if<(K<N),int>::type = 0 >; std::string fun_1 () { return ""ququ"" ;} ; //; template <unsigned int K,; typename std::enable_if<(N<=K),int>::type = 0 >; int fun_1 () { return K ;} ; };; // the same with functions; template <unsigned int K,unsigned int N, ; typename std::enable_if<(K<N),int>::type = 0 >; inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} ; //; template <unsigned int K,unsigned int N,; typename std::enable_if<(N<=K),int>::type = 0 >; inline int fun_2 ( A<N>& ) { return K ;} ; '''). N = 4 ; a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) ; for k in range ( 2 * N + 1 ) : ; print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) ; for k in range( 2 * N + 1 ) :; func = ROOT.fun_2[k,N]; print ( k , func ( a ) ) ; ```. And the output is: ; ```; ROOT version 6.31/01; Use templated method of templated class A<4> : it is OK; 0 ququ; 1 ququ; 2 ququ; 3 ququ; 4 4; 5 5; 6 6; 7 7; 8 8; Use templated function for templated class A<4> : it fails for k >=4; 0 ququ; 1 ququ; 2 ququ; 3 ququ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>; print ( k , func ( a ) ); TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 ; Linux, ; LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:2227,Deployability,Install,Installation,2227,"# Reproducer. ```python; import ROOT; print ( 'ROOT version' , ROOT.gROOT.GetVersion() ); ROOT.gInterpreter.Declare('''; #include <type_traits> ; #include <string> ; template <unsigned int N>; class A; {; public:; //; template <unsigned int K,; typename std::enable_if<(K<N),int>::type = 0 >; std::string fun_1 () { return ""ququ"" ;} ; //; template <unsigned int K,; typename std::enable_if<(N<=K),int>::type = 0 >; int fun_1 () { return K ;} ; };; // the same with functions; template <unsigned int K,unsigned int N, ; typename std::enable_if<(K<N),int>::type = 0 >; inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} ; //; template <unsigned int K,unsigned int N,; typename std::enable_if<(N<=K),int>::type = 0 >; inline int fun_2 ( A<N>& ) { return K ;} ; '''). N = 4 ; a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) ; for k in range ( 2 * N + 1 ) : ; print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) ; for k in range( 2 * N + 1 ) :; func = ROOT.fun_2[k,N]; print ( k , func ( a ) ) ; ```. And the output is: ; ```; ROOT version 6.31/01; Use templated method of templated class A<4> : it is OK; 0 ququ; 1 ququ; 2 ququ; 3 ququ; 4 4; 5 5; 6 6; 7 7; 8 8; Use templated function for templated class A<4> : it fails for k >=4; 0 ququ; 1 ququ; 2 ququ; 3 ququ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>; print ( k , func ( a ) ); TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 ; Linux, ; LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15085:127,Usability,simpl,simple,127,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Recent version of PyROOT/cppyy fails for relatively simple templated function overload with SFINAE. The reproducer is here.; There is templated C++ class A; and there are template functions `fun_2` overloaded with SFINAE - see below. For completeness:; - for templated member functions SFINAE overload works ok.. [It was not the case for relatively old PyROOT/cppyy. I am using LCG-dev3 cvmfs nightly builds with ROOT 6.31/01. ### Reproducer. ```python; import ROOT; print ( 'ROOT version' , ROOT.gROOT.GetVersion() ); ROOT.gInterpreter.Declare('''; #include <type_traits> ; #include <string> ; template <unsigned int N>; class A; {; public:; //; template <unsigned int K,; typename std::enable_if<(K<N),int>::type = 0 >; std::string fun_1 () { return ""ququ"" ;} ; //; template <unsigned int K,; typename std::enable_if<(N<=K),int>::type = 0 >; int fun_1 () { return K ;} ; };; // the same with functions; template <unsigned int K,unsigned int N, ; typename std::enable_if<(K<N),int>::type = 0 >; inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} ; //; template <unsigned int K,unsigned int N,; typename std::enable_if<(N<=K),int>::type = 0 >; inline int fun_2 ( A<N>& ) { return K ;} ; '''). N = 4 ; a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) ; for k in range ( 2 * N + 1 ) : ; print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) ; for k in range( 2 * N + 1 ) :; func = ROOT.fun_2[k,N]; print ( k , func ( a ) ) ; ```. And the output is: ; ```; ROOT version 6.31/01; Use templated method of templated class A<4> : it is OK; 0 ququ; 1 ququ; 2 ququ; 3 ququ; 4 4; 5 5; 6 6; 7 7; 8 8; Use templated function for templated class A<4> : it fails for k >=4; 0 ququ; 1 ququ; 2 ququ; 3 ququ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>; p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15085
https://github.com/root-project/root/issues/15086:256,Deployability,update,update,256,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```; $: ./repro.out; +-----+-----------+; | Row | file_name |; +-----+-----------+; | 0 | """" |; +-----+-----------+; | 1 | """" |; +-----+-----------+; | 2 | """" |; +-----+-----------+; | 3 | """" |; +-----+-----------+; | 4 | """" |; +-----+-----------+; | 5 | """" |; +-----+-----------+; | 6 | """" |; +-----+-----------+; | 7 | """" |; +-----+-----------+; | 8 | """" |; +-----+-----------+; | 9 | """" |; +-----+-----------+; | 10 | """" |; +-----+-----------+; | 11 | """" |; +-----+-----------+; | 12 | """" |; +-----+-----------+; | 13 | """" |; +-----+-----------+; | 14 | """" |; +-----+-----------+; ```. ### Reproducer. ```cpp; #include <ROOT/RNTupleDS.hxx>; #include <ROOT/RNTupleWriter.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <TFile.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleReader.hxx>; #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;; using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames); {; for (const auto &fn : filenames); {; auto model = RNTupleModel::Create();; auto fldX = model->MakeField<ULong64_t>(""x"");; auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);; for (ULong64_t entry = 0; entry < 10; entry++); {; *fldX = entry;; ntpl->Fill();; }; }; }. int main(); {; std::vector<std::string>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:2407,Deployability,Install,Installation,2407,"cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```; $: ./repro.out; +-----+-----------+; | Row | file_name |; +-----+-----------+; | 0 | """" |; +-----+-----------+; | 1 | """" |; +-----+-----------+; | 2 | """" |; +-----+-----------+; | 3 | """" |; +-----+-----------+; | 4 | """" |; +-----+-----------+; | 5 | """" |; +-----+-----------+; | 6 | """" |; +-----+-----------+; | 7 | """" |; +-----+-----------+; | 8 | """" |; +-----+-----------+; | 9 | """" |; +-----+-----------+; | 10 | """" |; +-----+-----------+; | 11 | """" |; +-----+-----------+; | 12 | """" |; +-----+-----------+; | 13 | """" |; +-----+-----------+; | 14 | """" |; +-----+-----------+; ```. ### Reproducer. ```cpp; #include <ROOT/RNTupleDS.hxx>; #include <ROOT/RNTupleWriter.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <TFile.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleReader.hxx>; #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;; using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames); {; for (const auto &fn : filenames); {; auto model = RNTupleModel::Create();; auto fldX = model->MakeField<ULong64_t>(""x"");; auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);; for (ULong64_t entry = 0; entry < 10; entry++); {; *fldX = entry;; ntpl->Fill();; }; }; }. int main(); {; std::vector<std::string> filenames{; ""sample1.root"",; ""sample2.root"",; ""sample3.root""};; std::string ntpl_name = ""Events"";; create_definepersample(ntpl_name, filenames);; ROOT::RDataFrame df{ntpl_name, filenames};; auto df1 = df.DefinePerSample(""file_name"", [](unsigned int, const ROOT::RDF::RSampleInfo &si) {; return si.AsString();; });; df1.Display<std::string>({""file_name""}, 30)->Print();; }; ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15086:247,Testability,log,logic,247,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. [`RLoopManager::RunDataSource`](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L614) is lacking the logic to update the sample information which is present in the equivalent runners for the empty data source or the [TTree data source](https://github.com/root-project/root/blob/727181ec7612c44aa3d6f04fcccfc5b23834fec2/tree/dataframe/src/RLoopManager.cxx#L581-L583). This notably prevents using `DefinePerSample` effectively when the input data source is an `RNTuple`. ```; $: ./repro.out; +-----+-----------+; | Row | file_name |; +-----+-----------+; | 0 | """" |; +-----+-----------+; | 1 | """" |; +-----+-----------+; | 2 | """" |; +-----+-----------+; | 3 | """" |; +-----+-----------+; | 4 | """" |; +-----+-----------+; | 5 | """" |; +-----+-----------+; | 6 | """" |; +-----+-----------+; | 7 | """" |; +-----+-----------+; | 8 | """" |; +-----+-----------+; | 9 | """" |; +-----+-----------+; | 10 | """" |; +-----+-----------+; | 11 | """" |; +-----+-----------+; | 12 | """" |; +-----+-----------+; | 13 | """" |; +-----+-----------+; | 14 | """" |; +-----+-----------+; ```. ### Reproducer. ```cpp; #include <ROOT/RNTupleDS.hxx>; #include <ROOT/RNTupleWriter.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <TFile.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleReader.hxx>; #include <ROOT/RVec.hxx>. #include <iostream>. using RNTupleModel = ROOT::Experimental::RNTupleModel;; using RNTupleWriter = ROOT::Experimental::RNTupleWriter;. void create_definepersample(const std::string &ntpl_name, const std::vector<std::string> &filenames); {; for (const auto &fn : filenames); {; auto model = RNTupleModel::Create();; auto fldX = model->MakeField<ULong64_t>(""x"");; auto ntpl = RNTupleWriter::Recreate(std::move(model), ntpl_name, fn);; for (ULong64_t entry = 0; entry < 10; entry++); {; *fldX = entry;; ntpl->Fill();; }; }; }. int main(); {; std::vector<std::string>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15086
https://github.com/root-project/root/issues/15087:86,Availability,error,error,86,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt; Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ```; Also this throws an error; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'; 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);; ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82); ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:244,Availability,error,error,244,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt; Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ```; Also this throws an error; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'; 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);; ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82); ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:460,Availability,error,error,460,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt; Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ```; Also this throws an error; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'; 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);; ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82); ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:615,Availability,error,error,615,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt; Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ```; Also this throws an error; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'; 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);; ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82); ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:763,Availability,error,error,763,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt; Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ```; Also this throws an error; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'; 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);; ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82); ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1133,Deployability,Install,Installation,1133,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt; Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ```; Also this throws an error; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'; 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);; ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82); ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:940,Testability,log,log,940,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt; Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ```; Also this throws an error; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'; 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);; ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82); ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15087:1079,Testability,log,log,1079,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt; Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ```; Also this throws an error; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'; 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);; ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82); ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15087
https://github.com/root-project/root/issues/15090:902,Deployability,Install,Installation,902,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:225,Integrability,rout,routinely,225,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:669,Performance,multi-thread,multi-threaded,669,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:705,Performance,race condition,race condition,705,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:127,Safety,safe,safe,127,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:173,Safety,safe,safe,173,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15090:150,Testability,Test,TestBit,150,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15090
https://github.com/root-project/root/issues/15091:278,Availability,error,error,278,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```; Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ```. This is due to `TFormula` seemingly unconditionally running:; ```; IncludeCladRuntime; from TFormula::GenerateHessianPar(; from TFormula::HessianPar; from GeneralHessianCalc<T>::Hessian; from GeneralHessianCalc<T>::IsAvailable(fFunc); from WrappedMultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:496,Availability,error,error,496,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```; Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ```. This is due to `TFormula` seemingly unconditionally running:; ```; IncludeCladRuntime; from TFormula::GenerateHessianPar(; from TFormula::HessianPar; from GeneralHessianCalc<T>::Hessian; from GeneralHessianCalc<T>::IsAvailable(fFunc); from WrappedMultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2605,Availability,error,error,2605,"bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 8.36115e-22; NCalls = 47; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; <end of output>; Test time = 0.32 sec; ----------------------------------------------------------; Test Fail Reason:; Error regular expression found in output. Regex=[: error:]; ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT; ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00; ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2823,Availability,error,error,2823,"n:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 8.36115e-22; NCalls = 47; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; <end of output>; Test time = 0.32 sec; ----------------------------------------------------------; Test Fail Reason:; Error regular expression found in output. Regex=[: error:]; ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT; ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00; ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3307,Availability,Error,Error,3307,"n:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 8.36115e-22; NCalls = 47; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; <end of output>; Test time = 0.32 sec; ----------------------------------------------------------; Test Fail Reason:; Error regular expression found in output. Regex=[: error:]; ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT; ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00; ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3358,Availability,error,error,3358,"n:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 8.36115e-22; NCalls = 47; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; <end of output>; Test time = 0.32 sec; ----------------------------------------------------------; Test Fail Reason:; Error regular expression found in output. Regex=[: error:]; ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT; ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00; ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3570,Deployability,Install,Installation,3570,"n:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 8.36115e-22; NCalls = 47; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; <end of output>; Test time = 0.32 sec; ----------------------------------------------------------; Test Fail Reason:; Error regular expression found in output. Regex=[: error:]; ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT; ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00; ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:286,Modifiability,plugin,plugins,286,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```; Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ```. This is due to `TFormula` seemingly unconditionally running:; ```; IncludeCladRuntime; from TFormula::GenerateHessianPar(; from TFormula::HessianPar; from GeneralHessianCalc<T>::Hessian; from GeneralHessianCalc<T>::IsAvailable(fFunc); from WrappedMultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:366,Modifiability,plugin,plugins,366,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```; Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ```. This is due to `TFormula` seemingly unconditionally running:; ```; IncludeCladRuntime; from TFormula::GenerateHessianPar(; from TFormula::HessianPar; from GeneralHessianCalc<T>::Hessian; from GeneralHessianCalc<T>::IsAvailable(fFunc); from WrappedMultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2613,Modifiability,plugin,plugins,2613,"bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 8.36115e-22; NCalls = 47; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; <end of output>; Test time = 0.32 sec; ----------------------------------------------------------; Test Fail Reason:; Error regular expression found in output. Regex=[: error:]; ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT; ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00; ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:2693,Modifiability,plugin,plugins,2693,"n:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 8.36115e-22; NCalls = 47; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; <end of output>; Test time = 0.32 sec; ----------------------------------------------------------; Test Fail Reason:; Error regular expression found in output. Regex=[: error:]; ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT; ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00; ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:915,Security,HasH,HasHessian,915,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```; Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ```. This is due to `TFormula` seemingly unconditionally running:; ```; IncludeCladRuntime; from TFormula::GenerateHessianPar(; from TFormula::HessianPar; from GeneralHessianCalc<T>::Hessian; from GeneralHessianCalc<T>::IsAvailable(fFunc); from WrappedMultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1710,Security,secur,security,1710,"enerateHessianPar(; from TFormula::HessianPar; from GeneralHessianCalc<T>::Hessian; from GeneralHessianCalc<T>::IsAvailable(fFunc); from WrappedMultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1784,Security,secur,security,1784,":Hessian; from GeneralHessianCalc<T>::IsAvailable(fFunc); from WrappedMultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:1854,Security,secur,security,1854,"MultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3206,Testability,Test,Test,3206,"n:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 8.36115e-22; NCalls = 47; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; <end of output>; Test time = 0.32 sec; ----------------------------------------------------------; Test Fail Reason:; Error regular expression found in output. Regex=[: error:]; ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT; ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00; ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/issues/15091:3288,Testability,Test,Test,3288,"n:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 8.36115e-22; NCalls = 47; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; <end of output>; Test time = 0.32 sec; ----------------------------------------------------------; Test Fail Reason:; Error regular expression found in output. Regex=[: error:]; ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT; ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00; ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15091
https://github.com/root-project/root/pull/15092:298,Testability,test,testing,298,"Print warning if eve element does not have a dictionary. The commit 264404b also fixes the crash on streaming to client when element's dictionary is not existing and does not need non-REveElement remote method invocation. . The other 3 commits contains minor corrections to the problems located in testing of CMS event display (table view layout, debug prints, background color setting at connect time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15092
https://github.com/root-project/root/pull/15094:79,Availability,Error,Error,79,# This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:137,Deployability,update,updated,137,# This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:58,Security,access,access,58,# This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15094:107,Testability,test,tested,107,# This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15094
https://github.com/root-project/root/pull/15095:152,Deployability,update,updated,152,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11021. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15095
https://github.com/root-project/root/pull/15095:122,Testability,test,tested,122,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11021. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15095
https://github.com/root-project/root/pull/15096:188,Deployability,update,updated,188,# This Pull request:. ## Changes or fixes:. See https://root-forum.cern.ch/t/confusing-behavior-of-setrangeuser-and-fitting-range/58591. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15096
https://github.com/root-project/root/pull/15096:158,Testability,test,tested,158,# This Pull request:. ## Changes or fixes:. See https://root-forum.cern.ch/t/confusing-behavior-of-setrangeuser-and-fitting-range/58591. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15096
https://github.com/root-project/root/pull/15097:141,Deployability,update,update,141,"# This Pull request:. ## Changes or fixes:; Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me?. I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #14258; [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:442,Deployability,update,updated,442,"# This Pull request:. ## Changes or fixes:; Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me?. I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #14258; [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:412,Testability,test,tested,412,"# This Pull request:. ## Changes or fixes:; Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me?. I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #14258; [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:507,Testability,log,log,507,"# This Pull request:. ## Changes or fixes:; Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me?. I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #14258; [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:580,Testability,log,log,580,"# This Pull request:. ## Changes or fixes:; Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me?. I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #14258; [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:296,Usability,guid,guide,296,"# This Pull request:. ## Changes or fixes:; Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me?. I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #14258; [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15097:365,Usability,feedback,feedback,365,"# This Pull request:. ## Changes or fixes:; Dear all. This pull request adds moving mean, moving median and mode to Root's TMath. I tried to update the documentation (https://root.cern/doc/v630/namespaceTMath.html) but I could not figure out where to find the files on Github. Please can someone guide me?. I will leave the PR in draft state. I will appreciate any feedback you can give me. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #14258; [LastTest.log.tar.gz](https://github.com/root-project/root/files/14910072/LastTest.log.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15097
https://github.com/root-project/root/pull/15099:40,Availability,failure,failures,40,Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:56,Deployability,integrat,integration,56,Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15099:56,Integrability,integrat,integration,56,Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15099
https://github.com/root-project/root/pull/15100:387,Deployability,update,updated,387,# This Pull request:. ## Changes or fixes:. Dear All. This pull request adds gradient and Laplacian methods for arrays. These can be used to calculate one-dimensional first and second order derivatives. Should there also be methods for calculating higher order derivatives and dimensions?. I am open to any feedback regarding the code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #14304,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15100
https://github.com/root-project/root/pull/15100:357,Testability,test,tested,357,# This Pull request:. ## Changes or fixes:. Dear All. This pull request adds gradient and Laplacian methods for arrays. These can be used to calculate one-dimensional first and second order derivatives. Should there also be methods for calculating higher order derivatives and dimensions?. I am open to any feedback regarding the code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #14304,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15100
https://github.com/root-project/root/pull/15100:307,Usability,feedback,feedback,307,# This Pull request:. ## Changes or fixes:. Dear All. This pull request adds gradient and Laplacian methods for arrays. These can be used to calculate one-dimensional first and second order derivatives. Should there also be methods for calculating higher order derivatives and dimensions?. I am open to any feedback regarding the code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #14304,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15100
https://github.com/root-project/root/pull/15101:1273,Deployability,update,updated,1273,"# This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #15077",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15101:1024,Testability,test,tests,1024,"# This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #15077",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15101:1243,Testability,test,tested,1243,"# This Pull request:. Makes it possible to call `VecOps::DeltaPhi`, `VecOps::DeltaR`, `VecOps::DeltaR2`, `VecOps::InvariantMass` and `VecOps::InvariantMasses` with different floating point types. ## Changes or fixes:. Previously all arguments where deduced to be the same types which does not allow to call these with mixed floating point type arguments. Now each argument get's its own template type, making it possible to call them with mixed floating point types. The return type and any intermediate calculations will be done by the largest necessary floating point type, as determined via `std::common_type`. I tried to follow existing conventions, e.g. using `Common_t` as an additional defaulted template argument for a bit less typing in the implementations. This also requires at least c++14 as it uses the `common_type_t` helper type for a bit less typing. Some of the functions now are quite heavily templated, I am not entirely sure the full combinatorial explosion is necessary for all of them. I haven't added tests yet. There are some pre-existing where I could ""attach"" them. I could also just stick a bunch of `static_assert`s for the return types etc into the implementation directly if you prefer that. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #15077",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15101
https://github.com/root-project/root/pull/15103:252,Testability,log,logs,252,"# This Pull request:. ## Changes or fixes:. Changes the letter case in the minuit2 status report when the minimum is invalid such that the report is consistent with the case when the minimum is valid. Currently, I get the following output when grep my logs:; ```; Minuit2Minimizer : Invalid Minimum - status = 3; Minuit2Minimizer : Valid minimum - status = 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15103
https://github.com/root-project/root/issues/15104:418,Availability,error,error,418,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build.; and I've observed that for new PyROOT/cppyy at leats some enum objects ; are not pickleable anymore . ### Reproducer. Reproducer is very trivial; ```python; import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT; print ( 'enum:', a ). ## error here:; pickle.dumps ( a ); ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build ; . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/issues/15104:528,Deployability,Install,Installation,528,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build.; and I've observed that for new PyROOT/cppyy at leats some enum objects ; are not pickleable anymore . ### Reproducer. Reproducer is very trivial; ```python; import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT; print ( 'enum:', a ). ## error here:; pickle.dumps ( a ); ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build ; . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15104
https://github.com/root-project/root/pull/15105:1500,Availability,down,downloading,1500,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:900,Deployability,update,updated,900,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1194,Deployability,configurat,configuration,1194,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1534,Integrability,depend,dependencies,1534,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:643,Modifiability,variab,variables,643,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:838,Modifiability,variab,variables,838,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:1194,Modifiability,config,configuration,1194,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:471,Performance,perform,performed,471,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:91,Testability,test,tested,91,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:231,Testability,test,test,231,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15105:870,Testability,test,tested,870,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15105
https://github.com/root-project/root/pull/15106:954,Availability,error,error,954,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1000,Deployability,upgrade,upgrade,1000,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1191,Energy Efficiency,reduce,reduce,1191,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1169,Modifiability,refactor,refactoring,1169,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1309,Safety,timeout,timeouts,1309,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:948,Testability,log,logic,948,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:1304,Testability,test,test,1304,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/pull/15106:57,Usability,Clear,ClearProxiedObjects,57,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15106
https://github.com/root-project/root/issues/15107:179,Availability,echo,echo,179,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```; + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'; Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d; ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d; ++ grep -i -v LinkDef; ++ sed -E 's,^.[[:space:]]+,,'; ++ grep -v -E '^D +'; fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d; + COMMIT_FILES=; +++ which clang-format; ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format; fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d; + RESULT_OUTPUT=; ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:895,Deployability,Install,Installation,895,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```; + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'; Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d; ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d; ++ grep -i -v LinkDef; ++ sed -E 's,^.[[:space:]]+,,'; ++ grep -v -E '^D +'; fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d; + COMMIT_FILES=; +++ which clang-format; ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format; fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d; + RESULT_OUTPUT=; ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:234,Security,hash,hash,234,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```; + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'; Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d; ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d; ++ grep -i -v LinkDef; ++ sed -E 's,^.[[:space:]]+,,'; ++ grep -v -E '^D +'; fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d; + COMMIT_FILES=; +++ which clang-format; ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format; fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d; + RESULT_OUTPUT=; ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15107:331,Security,hash,hash,331,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```; + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'; Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d; ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d; ++ grep -i -v LinkDef; ++ sed -E 's,^.[[:space:]]+,,'; ++ grep -v -E '^D +'; fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d; + COMMIT_FILES=; +++ which clang-format; ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format; fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d; + RESULT_OUTPUT=; ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15107
https://github.com/root-project/root/issues/15108:263,Deployability,Install,Installation,263,### Explain what you would like to see improved and how. Linkdef files should not be subject to clang-format checks. They force us to write lines such as. ```; #pragma link C++ class Event + ;; ```. (Note the blanks around the `+`). ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15108
https://github.com/root-project/root/pull/15109:36,Availability,failure,failures,36,This PR should fix some of sporadic failures observed in some TMVA tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15109
https://github.com/root-project/root/pull/15110:252,Deployability,update,updated,252,# This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15110
https://github.com/root-project/root/pull/15110:85,Safety,safe,safety-bounds-checking,85,# This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15110
https://github.com/root-project/root/pull/15110:222,Testability,test,tested,222,# This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15110
https://github.com/root-project/root/pull/15112:308,Deployability,update,updated,308,"# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14765. @jjerhot this class is marked as legacy, but if you want, feel free to propose how the normalization factor should look like and I can try to implement it. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15112
https://github.com/root-project/root/pull/15112:278,Testability,test,tested,278,"# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14765. @jjerhot this class is marked as legacy, but if you want, feel free to propose how the normalization factor should look like and I can try to implement it. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15112
https://github.com/root-project/root/pull/15113:5,Energy Efficiency,reduce,reduces,5,This reduces the amount of potential undefined behavior. Fixes #15090. Related to https://github.com/cms-sw/cmssw/issues/33084,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15113
https://github.com/root-project/root/pull/15115:8,Integrability,depend,dependency,8,Fix the dependency of Python and C++ tutorials using the Higgs_trained_model.h5 file,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15115
https://github.com/root-project/root/pull/15116:902,Availability,avail,available,902,"This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:439,Integrability,interface,interface,439,"This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:674,Integrability,interface,interface,674,"This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:604,Security,hash,hash-based,604,"This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:725,Testability,benchmark,benchmark,725,"This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/pull/15116:925,Usability,clear,clear,925,"This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15116
https://github.com/root-project/root/issues/15117:1960,Availability,error,error,1960,"< ""via unique_ptr: "" << basePtr->func() << std::endl;; }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&; !std::is_lvalue_reference_v<T>>>; void foo(T&& t) {; std::cout << ""via template func: "" << t.func() << std::endl;; }. } // namespace repro; """"""; ). from ROOT import repro. c = repro.Derived(123); repro.foo(ROOT.std.move(c)); ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console; $ python repro.py; via template func: 123; ```. However, with the updated cppyy I get:; ```console; $ python repro.py ; input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'; ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here; unique_ptr(const unique_ptr&) = delete;; ^; ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change; ```diff; - void foo(std::unique_ptr<Base> basePtr) {; + void foo(std::unique_ptr<Base>&& basePtr) {; ```; However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:; ```console; $ python repro.py ; via unique_ptr: 123; ```; Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload.; <details>; <summary>stack trace</summary>. `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:86,Deployability,update,update,86,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.LoadText(; """"""; #include <memory>; #include <iostream>; #include <type_traits>. namespace repro {. struct Base {; virtual ~Base() = default;; virtual int func() const = 0;; };. struct Derived : public Base {; Derived(int i) : m_i(i) {}; ~Derived() = default;; Derived(const Derived&) = delete;; Derived& operator=(const Derived&) = delete;; Derived(Derived&&) = default;; Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }; private:; int m_i{42};; };. void foo(std::unique_ptr<Base> basePtr) {; std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;; }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&; !std::is_lvalue_reference_v<T>>>; void foo(T&& t) {; std::cout << ""via template func: "" << t.func() << std::endl;; }. } // namespace repro; """"""; ). from ROOT import repro. c = repro.Derived(123); repro.foo(ROOT.std.move(c)); ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console; $ python repro.py; via template func: 123; ```. However, with the updated cppyy I get:; ```console; $ python repro.py ; input_line_42:6:92: error: call to deleted constructor of 'st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1646,Deployability,Install,Installation,1646,"eam>; #include <type_traits>. namespace repro {. struct Base {; virtual ~Base() = default;; virtual int func() const = 0;; };. struct Derived : public Base {; Derived(int i) : m_i(i) {}; ~Derived() = default;; Derived(const Derived&) = delete;; Derived& operator=(const Derived&) = delete;; Derived(Derived&&) = default;; Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }; private:; int m_i{42};; };. void foo(std::unique_ptr<Base> basePtr) {; std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;; }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&; !std::is_lvalue_reference_v<T>>>; void foo(T&& t) {; std::cout << ""via template func: "" << t.func() << std::endl;; }. } // namespace repro; """"""; ). from ROOT import repro. c = repro.Derived(123); repro.foo(ROOT.std.move(c)); ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console; $ python repro.py; via template func: 123; ```. However, with the updated cppyy I get:; ```console; $ python repro.py ; input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'; ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here; unique_ptr(const unique_ptr&) = delete;; ^; ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:1886,Deployability,update,updated,1886,"ived& operator=(const Derived&) = delete;; Derived(Derived&&) = default;; Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }; private:; int m_i{42};; };. void foo(std::unique_ptr<Base> basePtr) {; std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;; }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&; !std::is_lvalue_reference_v<T>>>; void foo(T&& t) {; std::cout << ""via template func: "" << t.func() << std::endl;; }. } // namespace repro; """"""; ). from ROOT import repro. c = repro.Derived(123); repro.foo(ROOT.std.move(c)); ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console; $ python repro.py; via template func: 123; ```. However, with the updated cppyy I get:; ```console; $ python repro.py ; input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'; ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here; unique_ptr(const unique_ptr&) = delete;; ^; ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change; ```diff; - void foo(std::unique_ptr<Base> basePtr) {; + void foo(std::unique_ptr<Base>&& basePtr) {; ```; However, that changes behavior slightly because now this calls the `unique_ptr` overload in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11475,Integrability,Wrap,WrapperCall,11475,"cypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196; #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626; #8 <signal handler called>; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18429,Integrability,Wrap,WrapperCall,18429,"h. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16517,Modifiability,config,config,16517,"out>, filename=filename; entry=0x7af5865a5e30, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200, flags=flags; entry=0x7ffea3a92318, arena=arena; entry=0x7af5865026f0) at Python/pythonrun.c:1312; #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208; #35 _PyRun_SimpleFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17561,Modifiability,variab,variable,17561,"pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23471,Modifiability,config,config,23471,"out>, filename=filename; entry=0x7af5865a5e30, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200, flags=flags; entry=0x7ffea3a92318, arena=arena; entry=0x7af5865026f0) at Python/pythonrun.c:1312; #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208; #35 _PyRun_SimpleFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. Traceback (most recent call last):; File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>; repro.foo(cppyy.gbl.std.mov",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:603,Performance,Load,LoadText,603,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.LoadText(; """"""; #include <memory>; #include <iostream>; #include <type_traits>. namespace repro {. struct Base {; virtual ~Base() = default;; virtual int func() const = 0;; };. struct Derived : public Base {; Derived(int i) : m_i(i) {}; ~Derived() = default;; Derived(const Derived&) = delete;; Derived& operator=(const Derived&) = delete;; Derived(Derived&&) = default;; Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }; private:; int m_i{42};; };. void foo(std::unique_ptr<Base> basePtr) {; std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;; }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&; !std::is_lvalue_reference_v<T>>>; void foo(T&& t) {; std::cout << ""via template func: "" << t.func() << std::endl;; }. } // namespace repro; """"""; ). from ROOT import repro. c = repro.Derived(123); repro.foo(ROOT.std.move(c)); ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console; $ python repro.py; via template func: 123; ```. However, with the updated cppyy I get:; ```console; $ python repro.py ; input_line_42:6:92: error: call to deleted constructor of 'st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4567,Performance,optimiz,optimized,4567,"x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57; #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87; #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word; entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected; entry=0, clockid=clockid; entry=1, abstime=abstime; entry=0x7af5721fe520, private=private; entry=0) at ./nptl/futex-internal.c:139; #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503; #4 ___pthread_cond_timedwait64 (cond=cond; entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex; entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime; entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652; #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73; #6 take_gil (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval_gil.h:256; #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4906,Performance,optimiz,optimized,4906,"ble64 (futex_word=futex_word; entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected; entry=0, clockid=clockid; entry=1, abstime=abstime; entry=0x7af5721fe520, private=private; entry=0) at ./nptl/futex-internal.c:139; #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503; #4 ___pthread_cond_timedwait64 (cond=cond; entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex; entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime; entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652; #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73; #6 take_gil (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval_gil.h:256; #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4975,Performance,optimiz,optimized,4975,"ntry=0, clockid=clockid; entry=1, abstime=abstime; entry=0x7af5721fe520, private=private; entry=0) at ./nptl/futex-internal.c:139; #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503; #4 ___pthread_cond_timedwait64 (cond=cond; entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex; entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime; entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652; #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73; #6 take_gil (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval_gil.h:256; #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:4996,Performance,optimiz,optimized,4996,"ntry=0, clockid=clockid; entry=1, abstime=abstime; entry=0x7af5721fe520, private=private; entry=0) at ./nptl/futex-internal.c:139; #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503; #4 ___pthread_cond_timedwait64 (cond=cond; entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex; entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime; entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652; #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73; #6 take_gil (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval_gil.h:256; #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5143,Performance,optimiz,optimized,5143,"af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503; #4 ___pthread_cond_timedwait64 (cond=cond; entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex; entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime; entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652; #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73; #6 take_gil (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval_gil.h:256; #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5168,Performance,optimiz,optimized,5168,"af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503; #4 ___pthread_cond_timedwait64 (cond=cond; entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex; entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime; entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652; #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73; #6 take_gil (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval_gil.h:256; #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5488,Performance,optimiz,optimized,5488,"7af5721fe520) at ./nptl/pthread_cond_wait.c:652; #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73; #6 take_gil (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval_gil.h:256; #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5749,Performance,optimiz,optimized,5749,"0007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5768,Performance,optimiz,optimized,5768,"0007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:5795,Performance,optimiz,optimized,5795,"0007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6046,Performance,optimiz,optimized,6046,"15dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, arg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6068,Performance,optimiz,optimized,6068,"15dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, arg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6094,Performance,optimiz,optimized,6094,"15dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, arg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6119,Performance,optimiz,optimized,6119,"15dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, arg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6380,Performance,optimiz,optimized,6380,"hon/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6399,Performance,optimiz,optimized,6399,"hon/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6426,Performance,optimiz,optimized,6426,"hon/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6677,Performance,optimiz,optimized,6677,"ython/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwname",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6699,Performance,optimiz,optimized,6699,"ython/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwname",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6725,Performance,optimiz,optimized,6725,"ython/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwname",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:6750,Performance,optimiz,optimized,6750,"ython/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwname",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7063,Performance,optimiz,optimized,7063,"optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7324,Performance,optimiz,optimized,7324,"; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7343,Performance,optimiz,optimized,7343,"; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7370,Performance,optimiz,optimized,7370,"; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7621,Performance,optimiz,optimized,7621,"5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwname",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7643,Performance,optimiz,optimized,7643,"5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwname",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7669,Performance,optimiz,optimized,7669,"5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwname",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:7694,Performance,optimiz,optimized,7694,"5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwname",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8007,Performance,optimiz,optimized,8007," #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8268,Performance,optimiz,optimized,8268,"; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8287,Performance,optimiz,optimized,8287,"; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8314,Performance,optimiz,optimized,8314,"; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8565,Performance,optimiz,optimized,8565,"5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8587,Performance,optimiz,optimized,8587,"5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8613,Performance,optimiz,optimized,8613,"5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8638,Performance,optimiz,optimized,8638,"5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysde",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8892,Performance,optimiz,optimized,8892,"stract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:8937,Performance,optimiz,optimized,8937,"stract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9142,Performance,optimiz,optimized,9142,"=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9235,Performance,optimiz,optimized,9235,"al.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9656,Performance,optimiz,optimized,9656,"067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9806,Performance,optimiz,optimized,9806,"64a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:9910,Performance,optimiz,optimized,9910,"gs=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196; #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:10630,Performance,optimiz,optimized,10630,"x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196; #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626; #8 <signal handler called>; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:11496,Performance,optimiz,optimized,11496,"cypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196; #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626; #8 <signal handler called>; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12098,Performance,optimiz,optimized,12098,"signal handler called>; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12406,Performance,optimiz,optimized,12406,"000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12430,Performance,optimiz,optimized,12430,"000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12452,Performance,optimiz,optimized,12452,"000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:12474,Performance,optimiz,optimized,12474,"000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13053,Performance,optimiz,optimized,13053,"nymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567; #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13077,Performance,optimiz,optimized,13077,"nymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567; #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:13099,Performance,optimiz,optimized,13099,"nymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567; #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14550,Performance,optimiz,optimized,14550,"rc/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567; #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywords=keywords; entry=0x0) at Objects/call.c:215; #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112; #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99; #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123; #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067; #31 PyEval_EvalCode (co=co; entry=0x7af586c71b00, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200) at Python/ceval.c:1134; #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291; #33 run_mod (mod=<optimized out>, filena",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14811,Performance,optimiz,optimized,14811,"s/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywords=keywords; entry=0x0) at Objects/call.c:215; #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112; #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99; #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123; #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067; #31 PyEval_EvalCode (co=co; entry=0x7af586c71b00, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200) at Python/ceval.c:1134; #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291; #33 run_mod (mod=<optimized out>, filename=filename; entry=0x7af5865a5e30, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200, flags=flags; entry=0x7ffea3a92318, arena=arena; entry=0x7af5865026f0) at Python/pythonrun.c:1312; #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14830,Performance,optimiz,optimized,14830,"s/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywords=keywords; entry=0x0) at Objects/call.c:215; #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112; #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99; #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123; #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067; #31 PyEval_EvalCode (co=co; entry=0x7af586c71b00, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200) at Python/ceval.c:1134; #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291; #33 run_mod (mod=<optimized out>, filename=filename; entry=0x7af5865a5e30, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200, flags=flags; entry=0x7ffea3a92318, arena=arena; entry=0x7af5865026f0) at Python/pythonrun.c:1312; #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:14857,Performance,optimiz,optimized,14857,"s/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywords=keywords; entry=0x0) at Objects/call.c:215; #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112; #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99; #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123; #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067; #31 PyEval_EvalCode (co=co; entry=0x7af586c71b00, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200) at Python/ceval.c:1134; #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291; #33 run_mod (mod=<optimized out>, filename=filename; entry=0x7af5865a5e30, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200, flags=flags; entry=0x7ffea3a92318, arena=arena; entry=0x7af5865026f0) at Python/pythonrun.c:1312; #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:15512,Performance,optimiz,optimized,15512,"n/abstract.h:123; #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067; #31 PyEval_EvalCode (co=co; entry=0x7af586c71b00, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200) at Python/ceval.c:1134; #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291; #33 run_mod (mod=<optimized out>, filename=filename; entry=0x7af5865a5e30, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200, flags=flags; entry=0x7ffea3a92318, arena=arena; entry=0x7af5865026f0) at Python/pythonrun.c:1312; #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208; #35 _PyRun_SimpleFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16782,Performance,optimiz,optimized,16782,"a3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208; #35 _PyRun_SimpleFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:16804,Performance,optimiz,optimized,16804,"a3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208; #35 _PyRun_SimpleFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17145,Performance,optimiz,optimized,17145,".c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #9 0x00007af5858a404a in ?? (); #10 0x00007af5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17167,Performance,optimiz,optimized,17167,".c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #9 0x00007af5858a404a in ?? (); #10 0x00007af5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:17194,Performance,optimiz,optimized,17194,".c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #9 0x00007af5858a404a in ?? (); #10 0x00007af5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:18450,Performance,optimiz,optimized,18450,"h. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19052,Performance,optimiz,optimized,19052,"======================; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19360,Performance,optimiz,optimized,19360,"000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19384,Performance,optimiz,optimized,19384,"000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19406,Performance,optimiz,optimized,19406,"000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:19428,Performance,optimiz,optimized,19428,"000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20007,Performance,optimiz,optimized,20007,"nymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567; #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20031,Performance,optimiz,optimized,20031,"nymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567; #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:20053,Performance,optimiz,optimized,20053,"nymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567; #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21504,Performance,optimiz,optimized,21504,"rc/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567; #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywords=keywords; entry=0x0) at Objects/call.c:215; #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112; #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99; #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123; #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067; #31 PyEval_EvalCode (co=co; entry=0x7af586c71b00, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200) at Python/ceval.c:1134; #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291; #33 run_mod (mod=<optimized out>, filena",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21765,Performance,optimiz,optimized,21765,"s/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywords=keywords; entry=0x0) at Objects/call.c:215; #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112; #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99; #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123; #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067; #31 PyEval_EvalCode (co=co; entry=0x7af586c71b00, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200) at Python/ceval.c:1134; #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291; #33 run_mod (mod=<optimized out>, filename=filename; entry=0x7af5865a5e30, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200, flags=flags; entry=0x7ffea3a92318, arena=arena; entry=0x7af5865026f0) at Python/pythonrun.c:1312; #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21784,Performance,optimiz,optimized,21784,"s/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywords=keywords; entry=0x0) at Objects/call.c:215; #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112; #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99; #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123; #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067; #31 PyEval_EvalCode (co=co; entry=0x7af586c71b00, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200) at Python/ceval.c:1134; #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291; #33 run_mod (mod=<optimized out>, filename=filename; entry=0x7af5865a5e30, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200, flags=flags; entry=0x7ffea3a92318, arena=arena; entry=0x7af5865026f0) at Python/pythonrun.c:1312; #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:21811,Performance,optimiz,optimized,21811,"s/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywords=keywords; entry=0x0) at Objects/call.c:215; #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112; #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99; #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123; #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067; #31 PyEval_EvalCode (co=co; entry=0x7af586c71b00, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200) at Python/ceval.c:1134; #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291; #33 run_mod (mod=<optimized out>, filename=filename; entry=0x7af5865a5e30, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200, flags=flags; entry=0x7ffea3a92318, arena=arena; entry=0x7af5865026f0) at Python/pythonrun.c:1312; #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:22466,Performance,optimiz,optimized,22466,"n/abstract.h:123; #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067; #31 PyEval_EvalCode (co=co; entry=0x7af586c71b00, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200) at Python/ceval.c:1134; #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291; #33 run_mod (mod=<optimized out>, filename=filename; entry=0x7af5865a5e30, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200, flags=flags; entry=0x7ffea3a92318, arena=arena; entry=0x7af5865026f0) at Python/pythonrun.c:1312; #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208; #35 _PyRun_SimpleFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23736,Performance,optimiz,optimized,23736,"a3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208; #35 _PyRun_SimpleFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. Traceback (most recent call last):; File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>; repro.foo(cppyy.gbl.std.move(c)); TypeError: Template method resolution failed:; void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>; SegmentationViolation: segfault in C++; program state was reset; Failed to instantiate ""foo(repro::Derived&)""; Failed to instantiate ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:23758,Performance,optimiz,optimized,23758,"a3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208; #35 _PyRun_SimpleFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. Traceback (most recent call last):; File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>; repro.foo(cppyy.gbl.std.move(c)); TypeError: Template method resolution failed:; void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>; SegmentationViolation: segfault in C++; program state was reset; Failed to instantiate ""foo(repro::Derived&)""; Failed to instantiate ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24099,Performance,optimiz,optimized,24099,".c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. Traceback (most recent call last):; File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>; repro.foo(cppyy.gbl.std.move(c)); TypeError: Template method resolution failed:; void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>; SegmentationViolation: segfault in C++; program state was reset; Failed to instantiate ""foo(repro::Derived&)""; Failed to instantiate ""foo(repro::Derived*)""; void repro::foo(repro::Derived&& t) =>; ValueError: could not convert argument 1 (object is not an rvalue); ```; </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:; - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24121,Performance,optimiz,optimized,24121,".c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. Traceback (most recent call last):; File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>; repro.foo(cppyy.gbl.std.move(c)); TypeError: Template method resolution failed:; void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>; SegmentationViolation: segfault in C++; program state was reset; Failed to instantiate ""foo(repro::Derived&)""; Failed to instantiate ""foo(repro::Derived*)""; void repro::foo(repro::Derived&& t) =>; ValueError: could not convert argument 1 (object is not an rvalue); ```; </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:; - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15117:24148,Performance,optimiz,optimized,24148,".c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. Traceback (most recent call last):; File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>; repro.foo(cppyy.gbl.std.move(c)); TypeError: Template method resolution failed:; void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>; SegmentationViolation: segfault in C++; program state was reset; Failed to instantiate ""foo(repro::Derived&)""; Failed to instantiate ""foo(repro::Derived*)""; void repro::foo(repro::Derived&& t) =>; ValueError: could not convert argument 1 (object is not an rvalue); ```; </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:; - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15117
https://github.com/root-project/root/issues/15118:245,Deployability,configurat,configuration,245,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:771,Deployability,configurat,configuration,771,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:878,Deployability,install,installation,878,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:967,Deployability,Install,Installation,967,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:178,Modifiability,variab,variables,178,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:245,Modifiability,config,configuration,245,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:525,Modifiability,variab,variables,525,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:646,Modifiability,variab,variables,646,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:771,Modifiability,config,configuration,771,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/issues/15118:840,Modifiability,variab,variables,840,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15118
https://github.com/root-project/root/pull/15123:8,Testability,test,tests,8,This PR tests the CI builds. It is same as #15115,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15123
https://github.com/root-project/root/pull/15124:55,Testability,test,test,55,"This PR is the same of #15078 but adds a commit with a test of the new feature. @ferdymercury , feel free to cherry-pick the commit in your code, if you think it's adequate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15124
https://github.com/root-project/root/pull/15125:456,Safety,safe,safest,456,"The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:; https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/pull/15125:499,Testability,test,test,499,"The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:; https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15125
https://github.com/root-project/root/issues/15129:144,Availability,error,error,144,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. ; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 03 2024, 10:22:56 |; | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);; root [1] h->Fill(5);; root [2] h->Draw();. *** Break *** bus error; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info); [/System/Library/Fram",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:784,Availability,error,error,784,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. ; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 03 2024, 10:22:56 |; | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);; root [1] h->Fill(5);; root [2] h->Draw();. *** Break *** bus error; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info); [/System/Library/Fram",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8710,Availability,error,error,8710," (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info); [/Applications/root_v6.30.06/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); Root > ; ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:; ```; root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);; root [1] h->Fill(5);; root [2] h->Draw();; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 03 2024, 10:22:56 |; | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it.; I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8258,Deployability,Install,Installation,8258," (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info); [/Applications/root_v6.30.06/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); Root > ; ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:; ```; root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);; root [1] h->Fill(5);; root [2] h->Draw();; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 03 2024, 10:22:56 |; | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it.; I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8332,Deployability,install,installer,8332," (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info); [/Applications/root_v6.30.06/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); Root > ; ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:; ```; root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);; root [1] h->Fill(5);; root [2] h->Draw();; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 03 2024, 10:22:56 |; | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it.; I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8425,Deployability,install,installed,8425," (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info); [/Applications/root_v6.30.06/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); Root > ; ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:; ```; root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);; root [1] h->Fill(5);; root [2] h->Draw();; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 03 2024, 10:22:56 |; | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it.; I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8480,Deployability,update,updated,8480," (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info); [/Applications/root_v6.30.06/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); Root > ; ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:; ```; root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);; root [1] h->Fill(5);; root [2] h->Draw();; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 03 2024, 10:22:56 |; | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it.; I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8557,Deployability,install,install,8557," (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info); [/Applications/root_v6.30.06/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); Root > ; ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:; ```; root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);; root [1] h->Fill(5);; root [2] h->Draw();; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 03 2024, 10:22:56 |; | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it.; I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8629,Deployability,upgrade,upgrade,8629," (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info); [/Applications/root_v6.30.06/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); Root > ; ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:; ```; root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);; root [1] h->Fill(5);; root [2] h->Draw();; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 03 2024, 10:22:56 |; | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it.; I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15129:8738,Deployability,install,installed,8738," (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info); [/Applications/root_v6.30.06/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); Root > ; ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:; ```; root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);; root [1] h->Fill(5);; root [2] h->Draw();; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 03 2024, 10:22:56 |; | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it.; I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15129
https://github.com/root-project/root/issues/15136:771,Deployability,Install,Installation,771,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using the following cmake statement specifying a specific python version works in v6.30.x but not in the master:. cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 .. In the master python3 (i.e. Python 3.12.2) will be used. `-- PyROOT will be built for version 3.12.2`. while in v6.30.x this, correctly, results in python3.9 (i.e. Python 3.9.19) to be used:. `-- PyROOT will be built for version 3.9.19`. Has the method to specify a specific python version to cmake been changed?. Thanks, Fons. ### Reproducer. Run this statement. `cmake -G Ninja -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. on the master and v6-30-06. ### ROOT version. Use git `master` and `v6-30-06`. ### Installation method. Building from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15136
https://github.com/root-project/root/pull/15137:3,Safety,avoid,avoid,3,To avoid warnings such as `_rvec.py:95: SyntaxWarning: invalid escape sequence '\p'`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15137
https://github.com/root-project/root/pull/15138:42,Deployability,install,installing,42,"# This Pull request:; fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory.; ## Changes or fixes:; The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:; ```; Permissions Size User Date Modified Name; drwxr-xr-x - root 3 Apr 18:08 bin; drwxr-xr-x - root 3 Apr 18:08 cmake; drwxr-xr-x - root 3 Apr 18:08 config; drwx------ - root 3 Apr 18:08 etc; drwxr-xr-x - root 28 Jan 09:45 fonts; drwxr-xr-x - root 28 Jan 09:45 icons; drwxr-xr-x - root 3 Apr 18:08 include; drwxr-xr-x - root 3 Apr 18:08 js; drwxr-xr-x - root 3 Apr 18:08 lib; .rw-r--r-- 847 root 29 Oct 2023 LICENSE; drwxr-xr-x - root 28 Jan 09:45 macros; drwxr-xr-x - root 28 Jan 09:44 man; drwxr-xr-x - root 28 Jan 09:45 README; drwxr-xr-x - root 3 Apr 18:08 tutorials; drwxr-xr-x - root 28 Jan 09:45 ui; ```; This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:119,Deployability,install,installation,119,"# This Pull request:; fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory.; ## Changes or fixes:; The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:; ```; Permissions Size User Date Modified Name; drwxr-xr-x - root 3 Apr 18:08 bin; drwxr-xr-x - root 3 Apr 18:08 cmake; drwxr-xr-x - root 3 Apr 18:08 config; drwx------ - root 3 Apr 18:08 etc; drwxr-xr-x - root 28 Jan 09:45 fonts; drwxr-xr-x - root 28 Jan 09:45 icons; drwxr-xr-x - root 3 Apr 18:08 include; drwxr-xr-x - root 3 Apr 18:08 js; drwxr-xr-x - root 3 Apr 18:08 lib; .rw-r--r-- 847 root 29 Oct 2023 LICENSE; drwxr-xr-x - root 28 Jan 09:45 macros; drwxr-xr-x - root 28 Jan 09:44 man; drwxr-xr-x - root 28 Jan 09:45 README; drwxr-xr-x - root 3 Apr 18:08 tutorials; drwxr-xr-x - root 28 Jan 09:45 ui; ```; This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:283,Deployability,install,installation,283,"# This Pull request:; fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory.; ## Changes or fixes:; The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:; ```; Permissions Size User Date Modified Name; drwxr-xr-x - root 3 Apr 18:08 bin; drwxr-xr-x - root 3 Apr 18:08 cmake; drwxr-xr-x - root 3 Apr 18:08 config; drwx------ - root 3 Apr 18:08 etc; drwxr-xr-x - root 28 Jan 09:45 fonts; drwxr-xr-x - root 28 Jan 09:45 icons; drwxr-xr-x - root 3 Apr 18:08 include; drwxr-xr-x - root 3 Apr 18:08 js; drwxr-xr-x - root 3 Apr 18:08 lib; .rw-r--r-- 847 root 29 Oct 2023 LICENSE; drwxr-xr-x - root 28 Jan 09:45 macros; drwxr-xr-x - root 28 Jan 09:44 man; drwxr-xr-x - root 28 Jan 09:45 README; drwxr-xr-x - root 3 Apr 18:08 tutorials; drwxr-xr-x - root 28 Jan 09:45 ui; ```; This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:474,Deployability,install,install,474,"# This Pull request:; fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory.; ## Changes or fixes:; The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:; ```; Permissions Size User Date Modified Name; drwxr-xr-x - root 3 Apr 18:08 bin; drwxr-xr-x - root 3 Apr 18:08 cmake; drwxr-xr-x - root 3 Apr 18:08 config; drwx------ - root 3 Apr 18:08 etc; drwxr-xr-x - root 28 Jan 09:45 fonts; drwxr-xr-x - root 28 Jan 09:45 icons; drwxr-xr-x - root 3 Apr 18:08 include; drwxr-xr-x - root 3 Apr 18:08 js; drwxr-xr-x - root 3 Apr 18:08 lib; .rw-r--r-- 847 root 29 Oct 2023 LICENSE; drwxr-xr-x - root 28 Jan 09:45 macros; drwxr-xr-x - root 28 Jan 09:44 man; drwxr-xr-x - root 28 Jan 09:45 README; drwxr-xr-x - root 3 Apr 18:08 tutorials; drwxr-xr-x - root 28 Jan 09:45 ui; ```; This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:550,Deployability,install,installation,550,"# This Pull request:; fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory.; ## Changes or fixes:; The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:; ```; Permissions Size User Date Modified Name; drwxr-xr-x - root 3 Apr 18:08 bin; drwxr-xr-x - root 3 Apr 18:08 cmake; drwxr-xr-x - root 3 Apr 18:08 config; drwx------ - root 3 Apr 18:08 etc; drwxr-xr-x - root 28 Jan 09:45 fonts; drwxr-xr-x - root 28 Jan 09:45 icons; drwxr-xr-x - root 3 Apr 18:08 include; drwxr-xr-x - root 3 Apr 18:08 js; drwxr-xr-x - root 3 Apr 18:08 lib; .rw-r--r-- 847 root 29 Oct 2023 LICENSE; drwxr-xr-x - root 28 Jan 09:45 macros; drwxr-xr-x - root 28 Jan 09:44 man; drwxr-xr-x - root 28 Jan 09:45 README; drwxr-xr-x - root 3 Apr 18:08 tutorials; drwxr-xr-x - root 28 Jan 09:45 ui; ```; This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:577,Deployability,install,install,577,"# This Pull request:; fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory.; ## Changes or fixes:; The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:; ```; Permissions Size User Date Modified Name; drwxr-xr-x - root 3 Apr 18:08 bin; drwxr-xr-x - root 3 Apr 18:08 cmake; drwxr-xr-x - root 3 Apr 18:08 config; drwx------ - root 3 Apr 18:08 etc; drwxr-xr-x - root 28 Jan 09:45 fonts; drwxr-xr-x - root 28 Jan 09:45 icons; drwxr-xr-x - root 3 Apr 18:08 include; drwxr-xr-x - root 3 Apr 18:08 js; drwxr-xr-x - root 3 Apr 18:08 lib; .rw-r--r-- 847 root 29 Oct 2023 LICENSE; drwxr-xr-x - root 28 Jan 09:45 macros; drwxr-xr-x - root 28 Jan 09:44 man; drwxr-xr-x - root 28 Jan 09:45 README; drwxr-xr-x - root 3 Apr 18:08 tutorials; drwxr-xr-x - root 28 Jan 09:45 ui; ```; This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1268,Deployability,install,installation,1268,"# This Pull request:; fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory.; ## Changes or fixes:; The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:; ```; Permissions Size User Date Modified Name; drwxr-xr-x - root 3 Apr 18:08 bin; drwxr-xr-x - root 3 Apr 18:08 cmake; drwxr-xr-x - root 3 Apr 18:08 config; drwx------ - root 3 Apr 18:08 etc; drwxr-xr-x - root 28 Jan 09:45 fonts; drwxr-xr-x - root 28 Jan 09:45 icons; drwxr-xr-x - root 3 Apr 18:08 include; drwxr-xr-x - root 3 Apr 18:08 js; drwxr-xr-x - root 3 Apr 18:08 lib; .rw-r--r-- 847 root 29 Oct 2023 LICENSE; drwxr-xr-x - root 28 Jan 09:45 macros; drwxr-xr-x - root 28 Jan 09:44 man; drwxr-xr-x - root 28 Jan 09:45 README; drwxr-xr-x - root 3 Apr 18:08 tutorials; drwxr-xr-x - root 28 Jan 09:45 ui; ```; This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1395,Deployability,update,updated,1395,"# This Pull request:; fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory.; ## Changes or fixes:; The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:; ```; Permissions Size User Date Modified Name; drwxr-xr-x - root 3 Apr 18:08 bin; drwxr-xr-x - root 3 Apr 18:08 cmake; drwxr-xr-x - root 3 Apr 18:08 config; drwx------ - root 3 Apr 18:08 etc; drwxr-xr-x - root 28 Jan 09:45 fonts; drwxr-xr-x - root 28 Jan 09:45 icons; drwxr-xr-x - root 3 Apr 18:08 include; drwxr-xr-x - root 3 Apr 18:08 js; drwxr-xr-x - root 3 Apr 18:08 lib; .rw-r--r-- 847 root 29 Oct 2023 LICENSE; drwxr-xr-x - root 28 Jan 09:45 macros; drwxr-xr-x - root 28 Jan 09:44 man; drwxr-xr-x - root 28 Jan 09:45 README; drwxr-xr-x - root 3 Apr 18:08 tutorials; drwxr-xr-x - root 28 Jan 09:45 ui; ```; This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:752,Modifiability,config,config,752,"# This Pull request:; fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory.; ## Changes or fixes:; The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:; ```; Permissions Size User Date Modified Name; drwxr-xr-x - root 3 Apr 18:08 bin; drwxr-xr-x - root 3 Apr 18:08 cmake; drwxr-xr-x - root 3 Apr 18:08 config; drwx------ - root 3 Apr 18:08 etc; drwxr-xr-x - root 28 Jan 09:45 fonts; drwxr-xr-x - root 28 Jan 09:45 icons; drwxr-xr-x - root 3 Apr 18:08 include; drwxr-xr-x - root 3 Apr 18:08 js; drwxr-xr-x - root 3 Apr 18:08 lib; .rw-r--r-- 847 root 29 Oct 2023 LICENSE; drwxr-xr-x - root 28 Jan 09:45 macros; drwxr-xr-x - root 28 Jan 09:44 man; drwxr-xr-x - root 28 Jan 09:45 README; drwxr-xr-x - root 3 Apr 18:08 tutorials; drwxr-xr-x - root 28 Jan 09:45 ui; ```; This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/pull/15138:1365,Testability,test,tested,1365,"# This Pull request:; fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory.; ## Changes or fixes:; The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:; ```; Permissions Size User Date Modified Name; drwxr-xr-x - root 3 Apr 18:08 bin; drwxr-xr-x - root 3 Apr 18:08 cmake; drwxr-xr-x - root 3 Apr 18:08 config; drwx------ - root 3 Apr 18:08 etc; drwxr-xr-x - root 28 Jan 09:45 fonts; drwxr-xr-x - root 28 Jan 09:45 icons; drwxr-xr-x - root 3 Apr 18:08 include; drwxr-xr-x - root 3 Apr 18:08 js; drwxr-xr-x - root 3 Apr 18:08 lib; .rw-r--r-- 847 root 29 Oct 2023 LICENSE; drwxr-xr-x - root 28 Jan 09:45 macros; drwxr-xr-x - root 28 Jan 09:44 man; drwxr-xr-x - root 28 Jan 09:45 README; drwxr-xr-x - root 3 Apr 18:08 tutorials; drwxr-xr-x - root 28 Jan 09:45 ui; ```; This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15138
https://github.com/root-project/root/issues/15139:266,Availability,Error,Error,266,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined. -- Generating done (0.8s); CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:353,Availability,Error,Error,353,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined. -- Generating done (0.8s); CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:513,Availability,Error,Error,513,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined. -- Generating done (0.8s); CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:600,Availability,Error,Error,600,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined. -- Generating done (0.8s); CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/issues/15139:1038,Deployability,Install,Installation,1038,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined. -- Generating done (0.8s); CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15139
https://github.com/root-project/root/pull/15141:1526,Availability,Error,Error,1526,"`TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H << std::endl;; TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;; std::system(""tree"");. fs::current_path(prev);; fs::remove_all(tmp);; if (not fs::exists(tmp)); std::cout << ""Temporary directory deleted"" << std::endl;; else; std::cerr << ""Failed to delete temporary directory"" << std::endl;; return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:526,Deployability,update,updated,526,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:711,Deployability,patch,patched,711,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:974,Deployability,a/b,a/b,974,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1253,Deployability,a/b,a/b,1253,"modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H << std::endl;; TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;; std::system(""tree"");. fs::current_path(prev);; fs::remove_all(tmp);; if (not fs::exists(tmp)); std::cout << ""Temporary directory deleted"" <<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1284,Deployability,a/b,a/b,1284,"` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H << std::endl;; TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;; std::system(""tree"");. fs::current_path(prev);; fs::remove_all(tmp);; if (not fs::exists(tmp)); std::cout << ""Temporary directory deleted"" << std::endl;; else; std::cerr <<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:684,Integrability,message,message,684,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:4,Testability,log,log,4,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:64,Testability,log,log,64,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:261,Testability,log,logic,261,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:496,Testability,test,tested,496,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:568,Testability,test,test,568,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:636,Testability,test,test,636,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:697,Testability,log,log,697,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:793,Testability,test,test,793,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:908,Testability,test,test,908,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:980,Testability,test,test,980,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1228,Testability,test,test,1228," not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H << std::endl;; TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;; std::system(""tree"");. fs::current_path(prev);; fs::remove_all(tmp);; if (not fs::exists(tmp)); std::cout << ""Tempor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/pull/15141:1259,Testability,test,test,1259,"modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H << std::endl;; TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;; std::system(""tree"");. fs::current_path(prev);; fs::remove_all(tmp);; if (not fs::exists(tmp)); std::cout << ""Temporary directory deleted"" <<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15141
https://github.com/root-project/root/issues/15144:321,Deployability,Install,Installation,321,### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:136,Safety,timeout,timeout,136,### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:223,Safety,timeout,timeout,223,### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:108,Testability,test,tests,108,### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/issues/15144:166,Testability,log,log,166,### Explain what you would like to see improved and how. It would be very helpful for debugging purposes if tests that are stopped by a timeout actually print to the log file the stack trace for all threads at the time the timeout is reached. (It may or may not be 'possible' to add this). ### ROOT version. master	. ### Installation method. from source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15144
https://github.com/root-project/root/pull/15148:47,Deployability,release,release,47,"We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15148
https://github.com/root-project/root/pull/15148:201,Deployability,release,release,201,"We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15148
https://github.com/root-project/root/pull/15148:223,Deployability,release,release,223,"We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15148
https://github.com/root-project/root/pull/15148:135,Safety,avoid,avoid,135,"We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15148
https://github.com/root-project/root/issues/15150:2131,Deployability,Install,Installation,2131,"4-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'; 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON); | ^~~~~~~~~~~~~~~~~~~~~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'; 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3; | ^~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'; 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y); | ^~~~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'; 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON); | ^~~~~~~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'; 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");; | ^~~~~~~~~~~~~; ```. ### Reproducer. ```term; cat > main.cpp << EOF; #include <RooDataSet.h>; int main() {; return 0;; }; EOF; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh; g++ -I $ROOTSYS/include main.cpp -o a.out; ```. ### ROOT version. ```; $ root --version; ROOT Version: 6.33/01; Built for linuxx8664gcc on Apr 04 2024, 22:54:25; From heads/master@v6-31-01-1587-gaf0e1abffd; ```. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. alma9, alma8, ubuntu20, ubuntu22. ### Additional context. This breaks packages that are not careful about `-isystem` and use `-Werror`, other are just flooded with useless warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/issues/15150:307,Energy Efficiency,Watt,Wattributes,307,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Just including RooDataSet leads to spurious warnings; ```; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:500:73: warning: 'REMOVE_THIS_NOW' attribute directive ignored [-Wattributes]; 500 | #define _R_DEPRECATED_REMOVE_NOW(REASON) __attribute__((REMOVE_THIS_NOW)); | ^; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:508:37: note: in expansion of macro '_R_DEPRECATED_REMOVE_NOW'; 508 | # define _R__DEPRECATED_634(REASON) _R_DEPRECATED_REMOVE_NOW(REASON); | ^~~~~~~~~~~~~~~~~~~~~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:460:39: note: in expansion of macro '_R__DEPRECATED_634'; 460 | # define _NAME3_(name1,name2,name3) name1##name2##name3; | ^~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:477:30: note: in expansion of macro '_NAME3_'; 477 | # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y); | ^~~~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/ROOT/RConfig.hxx:522:3: note: in expansion of macro '_R__JOIN3_'; 522 | _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON); | ^~~~~~~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/include/RooDataSet.h:93:6: note: in expansion of macro 'R__DEPRECATED'; 93 | R__DEPRECATED(6,34, ""Use RooDataSet(name, title, vars, Import(*tree), Cut(cutVar), WeightVar(wgtVarName))."");; | ^~~~~~~~~~~~~; ```. ### Reproducer. ```term; cat > main.cpp << EOF; #include <RooDataSet.h>; int main() {; return 0;; }; EOF; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc12-opt/ROOT-env.sh; g++ -I $ROOTSYS/include main.cpp -o a.out; ```. ### ROOT version. ```; $ root --versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15150
https://github.com/root-project/root/pull/15151:81,Deployability,patch,patches,81,Closes #15104. Thank you very much @wlav for helping out here!. Also adds revert patches for a sequence of upstream commits that broke our `string_view` conversion usecases. In order:; 1. https://github.com/wlav/CPyCppyy/commit/fce87d5e0125bb9e84ea3472dae6643faa5b8aed; 2. https://github.com/wlav/CPyCppyy/commit/c06170389ea6e37fc6f25f9f0e44940fb1035625; 3. https://github.com/wlav/CPyCppyy/commit/b62b2561322b6c1fdc37ac525077524ea5b02fa0. Needs to be followed-up later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15151
https://github.com/root-project/root/pull/15152:4,Testability,log,logic,4,"The logic in `RNTupleDS::PrepareNextRanges` and `RNTupleDS::GetRanges` had to be changed a bit to accommodate the new case, I think it could be streamlined but I didn't want to change too many things in the same PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15152
https://github.com/root-project/root/issues/15153:316,Deployability,Install,Installation,316,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. repr() of cppyy.gbl.std.string objects now comes with a ""b"" prefix. ### Reproducer. ```python; import cppyy; s = cppyy.gbl.std.string(""XXXX""); s; b'XXXX'; str(s); 'XXXX'; repr(s); ""b'XXXX'""; ```. ### ROOT version. ROOT 6.31/01 (master). ### Installation method. dev3. ### Operating system. Alma9. ### Additional context. Is this a bug or intentional?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15153
https://github.com/root-project/root/pull/15155:305,Availability,Error,Error,305,"In the ROOT build system, `CheckCompiler` is included before `RootBuildOptions`. The problem with this is that when building with `-Dall=ON`, the `cuda` flag is only set in `RootBuildOptions`, which is too late to find the CUDA compiler in `CheckCompiler`. This results in issues like #15139:; ```; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined; ```. This commit suggests a solution to this problem: just always enable the CUDA language in CMake if it is found, and only set the `cuda` flag with `-Dall=ON` if the CUDA language is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15155
https://github.com/root-project/root/issues/15156:1710,Availability,Error,Error,1710,"ld](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1795,Availability,Error,Error,1795,"ld](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1820,Availability,Error,Error,1820,"ld](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:114,Deployability,integrat,integration,114,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances.; In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` na",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:2256,Deployability,Install,Installation,2256,"ld](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:114,Integrability,integrat,integration,114,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances.; In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` na",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:80,Testability,test,tests,80,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances.; In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` na",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:224,Testability,test,test,224,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances.; In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` na",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1331,Testability,test,test,1331,"ld](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1591,Testability,test,test,1591,"ld](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:1746,Testability,test,test,1746,"ld](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:278,Usability,clear,clear,278,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances.; In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` na",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/issues/15156:466,Usability,clear,clearly,466,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances.; In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` na",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15156
https://github.com/root-project/root/pull/15158:9,Deployability,release,release,9,since no release is in sight to be able to have the same PR and nightly builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15158
https://github.com/root-project/root/pull/15159:74,Deployability,release,release,74,"The option was deprecated in ROOT 6.32 and should be removed for the next release, as anticipated by the deprecation warnings in 6.32. Follows up on https://github.com/root-project/root/pull/14395.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15159
https://github.com/root-project/root/pull/15160:1155,Availability,mainten,maintenance,1155,"reak the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090; - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947; - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [x] Update rootspi scripts to build docu in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:139,Deployability,integrat,integrating,139,"# This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090; - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947; - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1201,Deployability,update,update,1201,"reak the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090; - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947; - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [x] Update rootspi scripts to build docu in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2093,Deployability,update,update,2093,"at needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [x] Update rootspi scripts to build docu in CI accordingly; - [ ] tutorial generation does not work yet as ""out of source"". To-do...; - [x] require min doxygen version 1.9.4; - [ ] pre-check that output directory is empty ?; - [ ] if GVIZ not found, disable dot; - [ ] Stamp file generation to only recompile when changes; - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source); - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc; - [x] set NUM_PROC_THREADS; - [x] listLibs pass ROOT_CMD as variable; - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so; - [x] check why there are stdout.dat and NumberOfImages not being removed; - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing; - [ ] Fix strip_from_path in root-tag https://github.com/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2185,Deployability,Update,Update,2185," version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [x] Update rootspi scripts to build docu in CI accordingly; - [ ] tutorial generation does not work yet as ""out of source"". To-do...; - [x] require min doxygen version 1.9.4; - [ ] pre-check that output directory is empty ?; - [ ] if GVIZ not found, disable dot; - [ ] Stamp file generation to only recompile when changes; - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source); - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc; - [x] set NUM_PROC_THREADS; - [x] listLibs pass ROOT_CMD as variable; - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so; - [x] check why there are stdout.dat and NumberOfImages not being removed; - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing; - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059; - [x] Check compress https://github.com/root-project/root/issues/10066; - [x] Upgrade mathjax https://github.com/root-project/root/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:3186,Deployability,Upgrade,Upgrade,3186,"ses, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [x] Update rootspi scripts to build docu in CI accordingly; - [ ] tutorial generation does not work yet as ""out of source"". To-do...; - [x] require min doxygen version 1.9.4; - [ ] pre-check that output directory is empty ?; - [ ] if GVIZ not found, disable dot; - [ ] Stamp file generation to only recompile when changes; - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source); - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc; - [x] set NUM_PROC_THREADS; - [x] listLibs pass ROOT_CMD as variable; - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so; - [x] check why there are stdout.dat and NumberOfImages not being removed; - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing; - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059; - [x] Check compress https://github.com/root-project/root/issues/10066; - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:972,Energy Efficiency,Monitor,Monitoring,972,"# This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090; - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947; - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:139,Integrability,integrat,integrating,139,"# This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090; - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947; - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2753,Modifiability,variab,variable,2753,"ses, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [x] Update rootspi scripts to build docu in CI accordingly; - [ ] tutorial generation does not work yet as ""out of source"". To-do...; - [x] require min doxygen version 1.9.4; - [ ] pre-check that output directory is empty ?; - [ ] if GVIZ not found, disable dot; - [ ] Stamp file generation to only recompile when changes; - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source); - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc; - [x] set NUM_PROC_THREADS; - [x] listLibs pass ROOT_CMD as variable; - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so; - [x] check why there are stdout.dat and NumberOfImages not being removed; - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing; - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059; - [x] Check compress https://github.com/root-project/root/issues/10066; - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2979,Modifiability,config,config,2979,"ses, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [x] Update rootspi scripts to build docu in CI accordingly; - [ ] tutorial generation does not work yet as ""out of source"". To-do...; - [x] require min doxygen version 1.9.4; - [ ] pre-check that output directory is empty ?; - [ ] if GVIZ not found, disable dot; - [ ] Stamp file generation to only recompile when changes; - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source); - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc; - [x] set NUM_PROC_THREADS; - [x] listLibs pass ROOT_CMD as variable; - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so; - [x] check why there are stdout.dat and NumberOfImages not being removed; - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing; - [ ] Fix strip_from_path in root-tag https://github.com/root-project/root/issues/10059; - [x] Check compress https://github.com/root-project/root/issues/10066; - [x] Upgrade mathjax https://github.com/root-project/root/issues/10067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:1874,Safety,safe,safe,1874,"ject/root/issues/8947; - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [x] Update rootspi scripts to build docu in CI accordingly; - [ ] tutorial generation does not work yet as ""out of source"". To-do...; - [x] require min doxygen version 1.9.4; - [ ] pre-check that output directory is empty ?; - [ ] if GVIZ not found, disable dot; - [ ] Stamp file generation to only recompile when changes; - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source); - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc; - [x] set NUM_PROC_THREADS; - [x] listLibs pass ROOT_CMD as variable; - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so; - [x] check why there are stdout.dat and N",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:181,Testability,test,test,181,"# This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090; - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947; - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/pull/15160:2046,Testability,test,tested,2046,"at needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [x] Update rootspi scripts to build docu in CI accordingly; - [ ] tutorial generation does not work yet as ""out of source"". To-do...; - [x] require min doxygen version 1.9.4; - [ ] pre-check that output directory is empty ?; - [ ] if GVIZ not found, disable dot; - [ ] Stamp file generation to only recompile when changes; - [x] Remove unneeded unnecessary files Images.dat etc ? (or prevent that they appear in root source); - [x] Make filter.cxx threadsafe but giving unique names to ImageSizes.dat .root etc; - [x] set NUM_PROC_THREADS; - [x] listLibs pass ROOT_CMD as variable; - [x] Understand why libs.C does not find classes such as TBrowserTimer in libCore.so; - [x] check why there are stdout.dat and NumberOfImages not being removed; - [ ] Consider enabling https://www.doxygen.nl/manual/config.html#cfg_clang_assisted_parsing; - [ ] Fix strip_from_path in root-tag https://github.com/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15160
https://github.com/root-project/root/issues/15161:1267,Deployability,Install,Installation,1267,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```; $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));""; ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python; import cppyy. cppyy.cppdef(""""""; struct foo {};; """"""). bar = cppyy.gbl.foo(); print(f""cppyy version {cppyy.__version__}""); print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""); This gives:; ```. This returns:. ```; cppyy version 1.6.2; Does foo have __getitem__()? False; ```. vs. ```; cppyy version 3.1.2; Does foo have __getitem__()? True; ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas?. ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:244,Performance,Load,LoadText,244,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```; $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));""; ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python; import cppyy. cppyy.cppdef(""""""; struct foo {};; """"""). bar = cppyy.gbl.foo(); print(f""cppyy version {cppyy.__version__}""); print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""); This gives:; ```. This returns:. ```; cppyy version 1.6.2; Does foo have __getitem__()? False; ```. vs. ```; cppyy version 3.1.2; Does foo have __getitem__()? True; ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas?. ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:175,Usability,simpl,simple,175,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```; $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));""; ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python; import cppyy. cppyy.cppdef(""""""; struct foo {};; """"""). bar = cppyy.gbl.foo(); print(f""cppyy version {cppyy.__version__}""); print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""); This gives:; ```. This returns:. ```; cppyy version 1.6.2; Does foo have __getitem__()? False; ```. vs. ```; cppyy version 3.1.2; Does foo have __getitem__()? True; ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas?. ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/issues/15161:864,Usability,clear,clearly,864,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```; $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));""; ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python; import cppyy. cppyy.cppdef(""""""; struct foo {};; """"""). bar = cppyy.gbl.foo(); print(f""cppyy version {cppyy.__version__}""); print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""); This gives:; ```. This returns:. ```; cppyy version 1.6.2; Does foo have __getitem__()? False; ```. vs. ```; cppyy version 3.1.2; Does foo have __getitem__()? True; ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas?. ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15161
https://github.com/root-project/root/pull/15163:546,Modifiability,Extend,Extends,546,"* remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15163
https://github.com/root-project/root/pull/15163:220,Safety,avoid,avoid,220,"* remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15163
https://github.com/root-project/root/pull/15163:346,Safety,avoid,avoid,346,"* remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15163
https://github.com/root-project/root/pull/15163:131,Security,access,accessors,131,"* remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15163
https://github.com/root-project/root/pull/15165:14,Security,secur,secure,14,which is more secure. BP of https://github.com/root-project/root/pull/15134,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15165
https://github.com/root-project/root/pull/15168:218,Availability,redundant,redundant,218,"We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python; 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:74,Deployability,configurat,configuration,74,"We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python; 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:74,Modifiability,config,configuration,74,"We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python; 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:218,Safety,redund,redundant,218,"We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python; 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15168:88,Testability,log,logs,88,"We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python; 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15168
https://github.com/root-project/root/pull/15169:57,Deployability,patch,patch,57,"# This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:269,Deployability,update,updated,269,"# This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:27,Modifiability,plugin,plugin,27,"# This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:90,Modifiability,plugin,plugins,90,"# This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:151,Modifiability,plugin,plugin,151,"# This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:168,Modifiability,plugin,plugin,168,"# This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:183,Modifiability,plugin,plugin,183,"# This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:71,Performance,load,loading,71,"# This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15169:239,Testability,test,tested,239,"# This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15169
https://github.com/root-project/root/pull/15173:356,Integrability,interface,interface,356,"Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:; the logic from the FastForest library:; https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in; CMSSW:; https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:388,Integrability,interface,interface,388,"Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:; the logic from the FastForest library:; https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in; CMSSW:; https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:771,Modifiability,variab,variables,771,"Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:; the logic from the FastForest library:; https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in; CMSSW:; https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1106,Modifiability,variab,variables,1106,"with a single new backend:; the logic from the FastForest library:; https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in; CMSSW:; https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction; y_pred_ref = xbdt.predict_proba(x)[:, 1]; y_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1165,Modifiability,variab,variables,1165,"ibrary:; https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in; CMSSW:; https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction; y_pred_ref = xbdt.predict_proba(x)[:, 1]; y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1516,Performance,Load,Load,1516,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction; y_pred_ref = xbdt.predict_proba(x)[:, 1]; y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))); ```; Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1857,Performance,Load,Load,1857,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction; y_pred_ref = xbdt.predict_proba(x)[:, 1]; y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))); ```; Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1940,Performance,Load,Load,1940,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction; y_pred_ref = xbdt.predict_proba(x)[:, 1]; y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))); ```; Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:2040,Safety,predict,prediction,2040,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction; y_pred_ref = xbdt.predict_proba(x)[:, 1]; y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))); ```; Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:127,Testability,log,logic,127,"Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:; the logic from the FastForest library:; https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in; CMSSW:; https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:217,Testability,log,logic,217,"Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:; the logic from the FastForest library:; https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in; CMSSW:; https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:546,Testability,log,logic,546,"Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:; the logic from the FastForest library:; https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in; CMSSW:; https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15173:1046,Usability,learn,learning,1046,"e ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:; the logic from the FastForest library:; https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in; CMSSW:; https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15173
https://github.com/root-project/root/pull/15175:295,Deployability,update,updated,295,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8129. The other option would be to add safety-checks in the code, but that would be probably detrimental to efficiency and defeat the purpose of option B ?. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15175
https://github.com/root-project/root/pull/15175:126,Safety,safe,safety-checks,126,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8129. The other option would be to add safety-checks in the code, but that would be probably detrimental to efficiency and defeat the purpose of option B ?. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15175
https://github.com/root-project/root/pull/15175:265,Testability,test,tested,265,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8129. The other option would be to add safety-checks in the code, but that would be probably detrimental to efficiency and defeat the purpose of option B ?. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15175
https://github.com/root-project/root/pull/15176:356,Deployability,update,updated,356,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8269; Fixes https://its.cern.ch/jira/browse/ROOT-7993; Probably fixes https://its.cern.ch/jira/browse/ROOT-8709. I am not sure if the full function code itself is correct, ie why fNcodes is bigger than fLeaves.size(). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15176
https://github.com/root-project/root/pull/15176:326,Testability,test,tested,326,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8269; Fixes https://its.cern.ch/jira/browse/ROOT-7993; Probably fixes https://its.cern.ch/jira/browse/ROOT-8709. I am not sure if the full function code itself is correct, ie why fNcodes is bigger than fLeaves.size(). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15176
https://github.com/root-project/root/pull/15177:0,Deployability,Update,Updates,0,"Updates xroofit code to latest commit. No major changes to functionality, just minor bug fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15177
https://github.com/root-project/root/issues/15178:145,Deployability,configurat,configuration,145,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:; ```; -- Found Git: /usr/bin/git (found version ""2.44.0""); CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):; GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the; commit.; Call Stack (most recent call first):; cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION); CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06; ```; Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:679,Deployability,Install,Installation,679,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:; ```; -- Found Git: /usr/bin/git (found version ""2.44.0""); CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):; GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the; commit.; Call Stack (most recent call first):; cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION); CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06; ```; Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:124,Integrability,message,message,124,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:; ```; -- Found Git: /usr/bin/git (found version ""2.44.0""); CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):; GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the; commit.; Call Stack (most recent call first):; cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION); CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06; ```; Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:275,Integrability,message,message,275,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:; ```; -- Found Git: /usr/bin/git (found version ""2.44.0""); CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):; GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the; commit.; Call Stack (most recent call first):; cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION); CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06; ```; Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/issues/15178:145,Modifiability,config,configuration,145,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:; ```; -- Found Git: /usr/bin/git (found version ""2.44.0""); CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):; GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the; commit.; Call Stack (most recent call first):; cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION); CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06; ```; Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15178
https://github.com/root-project/root/pull/15180:122,Integrability,depend,depended,122,"The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:155,Performance,optimiz,optimization,155,"The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:338,Safety,avoid,avoids,338,"The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15180:400,Testability,log,logic,400,"The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15180
https://github.com/root-project/root/pull/15183:31,Testability,test,test,31,This should be added so we can test RBDT in the CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15183
https://github.com/root-project/root/pull/15187:147,Deployability,install,installed,147,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:292,Deployability,install,installed,292,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:111,Testability,test,test,111,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:204,Testability,test,test,204,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15187:227,Testability,test,test,227,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15187
https://github.com/root-project/root/pull/15188:147,Deployability,install,installed,147,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:292,Deployability,install,installed,292,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:111,Testability,test,test,111,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:204,Testability,test,test,204,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15188:227,Testability,test,test,227,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15188
https://github.com/root-project/root/pull/15189:147,Deployability,install,installed,147,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:292,Deployability,install,installed,292,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:111,Testability,test,test,111,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:204,Testability,test,test,204,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15189:227,Testability,test,test,227,"Disabled because RBDT doesn't support the imbalanced tree structure of XGBoost models. We need to disable this test right now, because we have now installed XGBoost on the GitHub action runners, and this test will be red. This test never worked, we just never noticed because XGBoost was not installed on any CI platform. Backport of a commit from #15183.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15189
https://github.com/root-project/root/pull/15191:237,Deployability,update,updated,237,"# This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes.; See commit messages for details. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15191
https://github.com/root-project/root/pull/15191:164,Integrability,message,messages,164,"# This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes.; See commit messages for details. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15191
https://github.com/root-project/root/pull/15191:207,Testability,test,tested,207,"# This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes.; See commit messages for details. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15191
https://github.com/root-project/root/pull/15193:51,Energy Efficiency,green,green,51,Backporting parts of 363373bb987 to make the tests green.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15193
https://github.com/root-project/root/pull/15193:45,Testability,test,tests,45,Backporting parts of 363373bb987 to make the tests green.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15193
https://github.com/root-project/root/issues/15196:485,Availability,error,errors,485,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working.; The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors.; I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```; import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""); workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""); pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")); result.Print(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |; | From heads/master@tags/v6-30-04 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:554,Availability,error,errors,554,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working.; The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors.; I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```; import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""); workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""); pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")); result.Print(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |; | From heads/master@tags/v6-30-04 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:661,Availability,error,error,661,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working.; The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors.; I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```; import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""); workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""); pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")); result.Print(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |; | From heads/master@tags/v6-30-04 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:226,Deployability,update,updated,226,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working.; The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors.; I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```; import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""); workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""); pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")); result.Print(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |; | From heads/master@tags/v6-30-04 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:1596,Deployability,Install,Installation,1596,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working.; The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors.; I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```; import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""); workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""); pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")); result.Print(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |; | From heads/master@tags/v6-30-04 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:166,Integrability,wrap,wrapper,166,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working.; The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors.; I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```; import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""); workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""); pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")); result.Print(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |; | From heads/master@tags/v6-30-04 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:809,Testability,test,test,809,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working.; The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors.; I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```; import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""); workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""); pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")); result.Print(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |; | From heads/master@tags/v6-30-04 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15196:913,Testability,test,test,913,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working.; The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors.; I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```; import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""); workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""); pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")); result.Print(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |; | From heads/master@tags/v6-30-04 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15196
https://github.com/root-project/root/issues/15197:320,Availability,avail,available,320,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:620,Availability,failure,failures,620,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:886,Availability,FAILURE,FAILURES,886,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1274,Availability,fault,fault,1274,"nce the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, ; rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389; #6 0x0000557932280095 in _start (); ```. And the same ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2916,Availability,avail,available,2916,"t (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, ; rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389; #6 0x0000557932280095 in _start (); ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:; * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results); * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models; * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality; * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault; ```python; import xgboost; import ROOT; import numpy as np; import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):; x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype); if num_outputs == 1:; y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype); else:; y = np.random.choice(; a=range(num_outputs), size=(num_events), p=[1.0 / ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:281,Deployability,install,installed,281,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:567,Deployability,install,installed,567,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4431,Deployability,Install,Installation,4431,"n with RBDT is the following:; * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results); * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models; * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality; * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault; ```python; import xgboost; import ROOT; import numpy as np; import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):; x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype); if num_outputs == 1:; y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype); else:; y = np.random.choice(; a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs; ).astype(dtype=dtype); return x, y. def _test_XGBBinary(label):; """"""; Compare response of XGB classifier and TMVA tree inference system.; """"""; x, y = create_dataset(1000, 10, 2); xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3); xgb.fit(x, y); ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10); bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(); y_bdt = bdt.Compute(x).squeeze(); np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":; _test_XGBBinary(""default""); ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1096,Integrability,depend,depend,1096,"er handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:1744,Performance,optimiz,optimized,1744,"are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, ; rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389; #6 0x0000557932280095 in _start (); ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:; * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2073,Performance,optimiz,optimized,2073," at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, ; rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389; #6 0x0000557932280095 in _start (); ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:; * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results); * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models; * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality; * There seems to be a major issue with complex Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2095,Performance,optimiz,optimized,2095," at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, ; rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389; #6 0x0000557932280095 in _start (); ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:; * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results); * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models; * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality; * There seems to be a major issue with complex Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2124,Performance,optimiz,optimized,2124," at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, ; rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389; #6 0x0000557932280095 in _start (); ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:; * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results); * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models; * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality; * There seems to be a major issue with complex Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:90,Testability,test,testing,90,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:238,Testability,test,tested,238,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:330,Testability,test,test,330,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:482,Testability,test,test,482,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:515,Testability,test,test,515,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:772,Testability,test,tests,772,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:869,Testability,test,tests,869,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:881,Testability,TEST,TEST,881,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:901,Testability,test,test-tcollbm,901,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:2285,Testability,test,tests,2285,"egmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, ; rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389; #6 0x0000557932280095 in _start (); ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:; * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results); * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models; * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality; * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the sma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4074,Testability,test,testXGBBinary,4074,"n with RBDT is the following:; * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results); * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models; * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality; * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault; ```python; import xgboost; import ROOT; import numpy as np; import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):; x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype); if num_outputs == 1:; y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype); else:; y = np.random.choice(; a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs; ).astype(dtype=dtype); return x, y. def _test_XGBBinary(label):; """"""; Compare response of XGB classifier and TMVA tree inference system.; """"""; x, y = create_dataset(1000, 10, 2); xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3); xgb.fit(x, y); ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10); bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(); y_bdt = bdt.Compute(x).squeeze(); np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":; _test_XGBBinary(""default""); ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4173,Testability,test,testXGBBinary,4173,"n with RBDT is the following:; * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results); * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models; * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality; * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault; ```python; import xgboost; import ROOT; import numpy as np; import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):; x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype); if num_outputs == 1:; y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype); else:; y = np.random.choice(; a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs; ).astype(dtype=dtype); return x, y. def _test_XGBBinary(label):; """"""; Compare response of XGB classifier and TMVA tree inference system.; """"""; x, y = create_dataset(1000, 10, 2); xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3); xgb.fit(x, y); ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10); bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(); y_bdt = bdt.Compute(x).squeeze(); np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":; _test_XGBBinary(""default""); ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/issues/15197:4294,Testability,test,testing,4294,"n with RBDT is the following:; * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for correctness of results); * Even if it worked, it lacked the ability to handle imbalanced trees which is pretty common when using xgboost models; * The re-implementation of the feature available at https://github.com/root-project/root/pull/15173 vastly improves the functionality; * There seems to be a major issue with complex Python packages and C++ which looks like we can't solve and will make at least one platform always red on our CI if we leave things as they are. ### Reproducer. At least on Alma9, the following is the smallest reproducer of the aforementioned segfault; ```python; import xgboost; import ROOT; import numpy as np; import json. np.random.seed(1234). def create_dataset(num_events, num_features, num_outputs, dtype=np.float32):; x = np.random.normal(0.0, 1.0, (num_events, num_features)).astype(dtype=dtype); if num_outputs == 1:; y = np.random.normal(0.0, 1.0, (num_events)).astype(dtype=dtype); else:; y = np.random.choice(; a=range(num_outputs), size=(num_events), p=[1.0 / float(num_outputs)] * num_outputs; ).astype(dtype=dtype); return x, y. def _test_XGBBinary(label):; """"""; Compare response of XGB classifier and TMVA tree inference system.; """"""; x, y = create_dataset(1000, 10, 2); xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3); xgb.fit(x, y); ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myModel"", ""testXGBBinary{}.root"".format(label), num_inputs=10); bdt = ROOT.TMVA.Experimental.RBDT(""myModel"", ""testXGBBinary{}.root"".format(label)). y_xgb = xgb.predict_proba(x)[:, 1].squeeze(); y_bdt = bdt.Compute(x).squeeze(); np.testing.assert_array_almost_equal(y_xgb, y_bdt). if __name__ == ""__main__"":; _test_XGBBinary(""default""); ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Alma9 (others could be affected). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15197
https://github.com/root-project/root/pull/15200:152,Deployability,update,updated,152,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15200:122,Testability,test,tested,122,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14173. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15200
https://github.com/root-project/root/pull/15207:123,Deployability,update,updated,123,# This Pull request:. ## Changes or fixes:. Adds missing documentation. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15207
https://github.com/root-project/root/pull/15207:93,Testability,test,tested,93,# This Pull request:. ## Changes or fixes:. Adds missing documentation. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15207
https://github.com/root-project/root/pull/15209:25,Safety,timeout,timeouts,25,Maybe this can help with timeouts such as https://github.com/root-project/root/actions/runs/8645662018/job/23703294577?pr=15200,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15209
https://github.com/root-project/root/issues/15210:455,Availability,avail,available,455,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256; Script below. ```; root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'; Warning in <TClass::Init>: no dictionary for class TChannelInfo is available; ***********************************; * Row * Instance * llll_type *; ***********************************; * 0 * 0 * *; * 1 * 0 * *; * 2 * 0 * *; ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'; Warning in <TClass::Init>: no dictionary for class TChannelInfo is available; ***********************************; * Row * Instance * llll_type *; ***********************************; * 0 * 0 * *; * 1 * 0 * *; * 2 * 0 * *; * 3 * 0 * 1111 *; * 3 * 1 * 1111 *; * 3 * 2 * 1111 *; * 3 * 3 * 1111 *; * 3 * 4 * 1111 *; * 3 * 5 * 1111 *; * 3 * 6 * 1111 *; * 3 * 7 * 1111 *; * 3 * 8 * 1111 *; * 3 * 9 * 1111 *; * 3 * 10 * 1111 *; * 3 * 11 * 1111 *; * 3 * 12 * 1111 *; * 3 * 13 * 1111 *; * 3 * 14 * 1111 *; * 3 * 15 * 1111 *; * 3 * 16 * 1111 *; * 3 * 17 * 1111 *; * 3 * 18 * 1111 *; * 3 * 19 * 1111 *; * 3 * 20 * 1111 *; * 3 * 21 * 1111 *; Type <CR> to continue or q to quit ==> q; ***********************************; ```. ### ROOT version. ```; ROOT v6.30/04; Built for linuxx8664gcc on Jan 31 2024, 10:01:37; From heads/master@tags/v6-30-04; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:819,Availability,avail,available,819,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256; Script below. ```; root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'; Warning in <TClass::Init>: no dictionary for class TChannelInfo is available; ***********************************; * Row * Instance * llll_type *; ***********************************; * 0 * 0 * *; * 1 * 0 * *; * 2 * 0 * *; ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'; Warning in <TClass::Init>: no dictionary for class TChannelInfo is available; ***********************************; * Row * Instance * llll_type *; ***********************************; * 0 * 0 * *; * 1 * 0 * *; * 2 * 0 * *; * 3 * 0 * 1111 *; * 3 * 1 * 1111 *; * 3 * 2 * 1111 *; * 3 * 3 * 1111 *; * 3 * 4 * 1111 *; * 3 * 5 * 1111 *; * 3 * 6 * 1111 *; * 3 * 7 * 1111 *; * 3 * 8 * 1111 *; * 3 * 9 * 1111 *; * 3 * 10 * 1111 *; * 3 * 11 * 1111 *; * 3 * 12 * 1111 *; * 3 * 13 * 1111 *; * 3 * 14 * 1111 *; * 3 * 15 * 1111 *; * 3 * 16 * 1111 *; * 3 * 17 * 1111 *; * 3 * 18 * 1111 *; * 3 * 19 * 1111 *; * 3 * 20 * 1111 *; * 3 * 21 * 1111 *; Type <CR> to continue or q to quit ==> q; ***********************************; ```. ### ROOT version. ```; ROOT v6.30/04; Built for linuxx8664gcc on Jan 31 2024, 10:01:37; From heads/master@tags/v6-30-04; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:1678,Deployability,Install,Installation,1678,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256; Script below. ```; root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'; Warning in <TClass::Init>: no dictionary for class TChannelInfo is available; ***********************************; * Row * Instance * llll_type *; ***********************************; * 0 * 0 * *; * 1 * 0 * *; * 2 * 0 * *; ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'; Warning in <TClass::Init>: no dictionary for class TChannelInfo is available; ***********************************; * Row * Instance * llll_type *; ***********************************; * 0 * 0 * *; * 1 * 0 * *; * 2 * 0 * *; * 3 * 0 * 1111 *; * 3 * 1 * 1111 *; * 3 * 2 * 1111 *; * 3 * 3 * 1111 *; * 3 * 4 * 1111 *; * 3 * 5 * 1111 *; * 3 * 6 * 1111 *; * 3 * 7 * 1111 *; * 3 * 8 * 1111 *; * 3 * 9 * 1111 *; * 3 * 10 * 1111 *; * 3 * 11 * 1111 *; * 3 * 12 * 1111 *; * 3 * 13 * 1111 *; * 3 * 14 * 1111 *; * 3 * 15 * 1111 *; * 3 * 16 * 1111 *; * 3 * 17 * 1111 *; * 3 * 18 * 1111 *; * 3 * 19 * 1111 *; * 3 * 20 * 1111 *; * 3 * 21 * 1111 *; Type <CR> to continue or q to quit ==> q; ***********************************; ```. ### ROOT version. ```; ROOT v6.30/04; Built for linuxx8664gcc on Jan 31 2024, 10:01:37; From heads/master@tags/v6-30-04; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:1706,Deployability,Release,Release,1706,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256; Script below. ```; root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'; Warning in <TClass::Init>: no dictionary for class TChannelInfo is available; ***********************************; * Row * Instance * llll_type *; ***********************************; * 0 * 0 * *; * 1 * 0 * *; * 2 * 0 * *; ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'; Warning in <TClass::Init>: no dictionary for class TChannelInfo is available; ***********************************; * Row * Instance * llll_type *; ***********************************; * 0 * 0 * *; * 1 * 0 * *; * 2 * 0 * *; * 3 * 0 * 1111 *; * 3 * 1 * 1111 *; * 3 * 2 * 1111 *; * 3 * 3 * 1111 *; * 3 * 4 * 1111 *; * 3 * 5 * 1111 *; * 3 * 6 * 1111 *; * 3 * 7 * 1111 *; * 3 * 8 * 1111 *; * 3 * 9 * 1111 *; * 3 * 10 * 1111 *; * 3 * 11 * 1111 *; * 3 * 12 * 1111 *; * 3 * 13 * 1111 *; * 3 * 14 * 1111 *; * 3 * 15 * 1111 *; * 3 * 16 * 1111 *; * 3 * 17 * 1111 *; * 3 * 18 * 1111 *; * 3 * 19 * 1111 *; * 3 * 20 * 1111 *; * 3 * 21 * 1111 *; Type <CR> to continue or q to quit ==> q; ***********************************; ```. ### ROOT version. ```; ROOT v6.30/04; Built for linuxx8664gcc on Jan 31 2024, 10:01:37; From heads/master@tags/v6-30-04; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15210:206,Testability,test,test,206,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256; Script below. ```; root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'; Warning in <TClass::Init>: no dictionary for class TChannelInfo is available; ***********************************; * Row * Instance * llll_type *; ***********************************; * 0 * 0 * *; * 1 * 0 * *; * 2 * 0 * *; ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'; Warning in <TClass::Init>: no dictionary for class TChannelInfo is available; ***********************************; * Row * Instance * llll_type *; ***********************************; * 0 * 0 * *; * 1 * 0 * *; * 2 * 0 * *; * 3 * 0 * 1111 *; * 3 * 1 * 1111 *; * 3 * 2 * 1111 *; * 3 * 3 * 1111 *; * 3 * 4 * 1111 *; * 3 * 5 * 1111 *; * 3 * 6 * 1111 *; * 3 * 7 * 1111 *; * 3 * 8 * 1111 *; * 3 * 9 * 1111 *; * 3 * 10 * 1111 *; * 3 * 11 * 1111 *; * 3 * 12 * 1111 *; * 3 * 13 * 1111 *; * 3 * 14 * 1111 *; * 3 * 15 * 1111 *; * 3 * 16 * 1111 *; * 3 * 17 * 1111 *; * 3 * 18 * 1111 *; * 3 * 19 * 1111 *; * 3 * 20 * 1111 *; * 3 * 21 * 1111 *; Type <CR> to continue or q to quit ==> q; ***********************************; ```. ### ROOT version. ```; ROOT v6.30/04; Built for linuxx8664gcc on Jan 31 2024, 10:01:37; From heads/master@tags/v6-30-04; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15210
https://github.com/root-project/root/issues/15211:268,Availability,failure,failures,268,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures); or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on; ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch; and; ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:320,Availability,failure,failures,320,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures); or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on; ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch; and; ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:420,Availability,failure,failures,420,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures); or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on; ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch; and; ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:601,Availability,failure,failure,601,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures); or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on; ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch; and; ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:676,Availability,failure,failure,676,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures); or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on; ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch; and; ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:492,Deployability,configurat,configuration,492,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures); or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on; ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch; and; ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:830,Deployability,Install,Installation,830,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures); or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on; ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch; and; ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:492,Modifiability,config,configuration,492,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures); or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on; ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch; and; ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:634,Safety,detect,detect,634,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures); or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on; ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch; and; ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15211:703,Testability,log,log,703,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures); or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on; ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch; and; ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15211
https://github.com/root-project/root/issues/15212:1482,Availability,ERROR,ERROR,1482,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:408,Deployability,configurat,configuration,408,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:576,Deployability,install,installed,576,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1524,Deployability,Install,Installation,1524,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:530,Integrability,Depend,DependencyVersions,530,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1013,Integrability,depend,dependency,1013,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1045,Integrability,depend,dependency,1045,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1105,Integrability,depend,dependency,1105,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1304,Integrability,depend,dependencies,1304,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:408,Modifiability,config,configuration,408,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:304,Security,access,access,304,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:169,Testability,test,testReport,169,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:223,Testability,test,test,223,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:274,Testability,test,test,274,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:462,Testability,test,test,462,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:551,Testability,Test,Test,551,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:322,Usability,learn,learn,322,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:680,Usability,learn,learn,680,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15212:1333,Usability,learn,learn,1333,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15212
https://github.com/root-project/root/issues/15213:1158,Deployability,install,installroot,1158,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated.; -- 175/239 python tutorials have been activated.; -- Found roottest: /home/kristupas/root/../roottest; CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):; Policy CMP0153 is not set: The exec_program command should not be called.; Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning. Use execute_process() instead.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):; Policy CMP0153 is not set: The exec_program command should not be called.; Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning. Use execute_process() instead.; This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15213:1228,Deployability,Install,Installation,1228,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. -- 556/890 C++ tutorials have been activated.; -- 175/239 python tutorials have been activated.; -- Found roottest: /home/kristupas/root/../roottest; CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:132 (exec_program):; Policy CMP0153 is not set: The exec_program command should not be called.; Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning. Use execute_process() instead.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /home/kristupas/roottest/CMakeLists.txt:134 (exec_program):; Policy CMP0153 is not set: The exec_program command should not be called.; Run ""cmake --help-policy CMP0153"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning. Use execute_process() instead.; This warning is for project developers. Use -Wno-dev to suppress it. -- Check for bitness: Found 64 bit architecture. ### Reproducer. cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=installroot -B buildroot -S root. ### ROOT version. ROOT 6.33/01. ### Installation method. Build from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15213
https://github.com/root-project/root/issues/15217:772,Deployability,patch,patches,772,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right?. Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK; ### Reproducer; ```; import cppyy; cppyy.cppdef(""""""; class MyClass { public:; void static statMethod(const std::string& astr, const std::string& path = """") {}; };""""""); obj = cppyy.gbl.MyClass(); obj.statMethod(""first""); TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>; TypeError: could not convert argument 1; ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/issues/15217:785,Deployability,Install,Installation,785,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy in ROOT 6.32 has a problem calling a static class method when the call is done on an instance of that class. It worked before and I think conceptually it should still be ok, right?. Edit: actually, I now see that it has something to do with the optional parameter, because a call with 2 arguments works OK; ### Reproducer; ```; import cppyy; cppyy.cppdef(""""""; class MyClass { public:; void static statMethod(const std::string& astr, const std::string& path = """") {}; };""""""); obj = cppyy.gbl.MyClass(); obj.statMethod(""first""); TypeError: static void MyClass::statMethod(const string& astr, const string& path) =>; TypeError: could not convert argument 1; ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15217
https://github.com/root-project/root/pull/15218:264,Deployability,update,updated,264,# This Pull request:. ## Changes or fixes:. Function was removed here https://github.com/root-project/cling/commit/c23abbc88b6ee61b966291c785794743b1bd5c62. Fixes https://github.com/root-project/cling/issues/456. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15218
https://github.com/root-project/root/pull/15218:234,Testability,test,tested,234,# This Pull request:. ## Changes or fixes:. Function was removed here https://github.com/root-project/cling/commit/c23abbc88b6ee61b966291c785794743b1bd5c62. Fixes https://github.com/root-project/cling/issues/456. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15218
https://github.com/root-project/root/pull/15219:168,Deployability,update,updated,168,# This Pull request:. Adds a comment in a cmake file. ## Changes or fixes:. maybe improves notification probability. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15219
https://github.com/root-project/root/pull/15219:138,Testability,test,tested,138,# This Pull request:. Adds a comment in a cmake file. ## Changes or fixes:. maybe improves notification probability. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15219
https://github.com/root-project/root/issues/15221:174,Availability,Error,Error,174,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in ; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:; ```; The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before; see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh; ```; or; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh; ```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:210,Availability,Error,Error,210,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in ; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:; ```; The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before; see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh; ```; or; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh; ```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:923,Availability,Error,Error,923,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in ; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:; ```; The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before; see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh; ```; or; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh; ```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:959,Availability,Error,Error,959,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in ; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:; ```; The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before; see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh; ```; or; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh; ```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1934,Availability,Error,Error,1934,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2038,Availability,avail,available,2038,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2101,Availability,Error,Error,2101,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2205,Availability,avail,available,2205,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2268,Availability,Error,Error,2268,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2372,Availability,avail,available,2372,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:573,Deployability,patch,patches,573,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in ; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:; ```; The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before; see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh; ```; or; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh; ```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2534,Deployability,patch,patches,2534,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2568,Deployability,patch,patches,2568,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2610,Deployability,release,releases,2610,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2633,Deployability,Install,Installation,2633,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:398,Energy Efficiency,green,green,398,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in ; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:; ```; The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before; see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh; ```; or; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh; ```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2091,Integrability,rout,routine,2091,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2258,Integrability,rout,routine,2258,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2425,Integrability,rout,routine,2425,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:102,Modifiability,inherit,inheriting,102,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in ; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:; ```; The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before; see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh; ```; or; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh; ```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:1952,Performance,Load,LoadClassInfo,1952,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2119,Performance,Load,LoadClassInfo,2119,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/issues/15221:2286,Performance,Load,LoadClassInfo,2286,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15221
https://github.com/root-project/root/pull/15224:734,Deployability,release,release,734,"The `RooParamHistFunc` doesn't take any observable RooRealVar as; constructor argument. It assumes as observable the internal variables in; the passed RooDataHist. This means it is in most contexts unusable,; because the input can't be changed, other than loading a different bin; in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation; backend is the default, and it is more sentitive to these issues:; https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was; simply ignored. To fix all these problems, the existing constructors were replaced by a; new one that takes the observable explicitly, and this is mentioned in; the release notes. The class is not used much, because ussually people use HistFactory or; CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:126,Modifiability,variab,variables,126,"The `RooParamHistFunc` doesn't take any observable RooRealVar as; constructor argument. It assumes as observable the internal variables in; the passed RooDataHist. This means it is in most contexts unusable,; because the input can't be changed, other than loading a different bin; in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation; backend is the default, and it is more sentitive to these issues:; https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was; simply ignored. To fix all these problems, the existing constructors were replaced by a; new one that takes the observable explicitly, and this is mentioned in; the release notes. The class is not used much, because ussually people use HistFactory or; CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:256,Performance,load,loading,256,"The `RooParamHistFunc` doesn't take any observable RooRealVar as; constructor argument. It assumes as observable the internal variables in; the passed RooDataHist. This means it is in most contexts unusable,; because the input can't be changed, other than loading a different bin; in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation; backend is the default, and it is more sentitive to these issues:; https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was; simply ignored. To fix all these problems, the existing constructors were replaced by a; new one that takes the observable explicitly, and this is mentioned in; the release notes. The class is not used much, because ussually people use HistFactory or; CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15224:569,Usability,simpl,simply,569,"The `RooParamHistFunc` doesn't take any observable RooRealVar as; constructor argument. It assumes as observable the internal variables in; the passed RooDataHist. This means it is in most contexts unusable,; because the input can't be changed, other than loading a different bin; in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation; backend is the default, and it is more sentitive to these issues:; https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was; simply ignored. To fix all these problems, the existing constructors were replaced by a; new one that takes the observable explicitly, and this is mentioned in; the release notes. The class is not used much, because ussually people use HistFactory or; CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15224
https://github.com/root-project/root/pull/15229:354,Deployability,update,updated,354,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11238. Reverts https://github.com/root-project/root/pull/2585; Reverts https://github.com/root-project/root/commit/9d459ce6141daf108587d85737bdc50e70c775d3; Re-Fixes https://its.cern.ch/jira/browse/ROOT-9597. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15229
https://github.com/root-project/root/pull/15229:324,Testability,test,tested,324,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11238. Reverts https://github.com/root-project/root/pull/2585; Reverts https://github.com/root-project/root/commit/9d459ce6141daf108587d85737bdc50e70c775d3; Re-Fixes https://its.cern.ch/jira/browse/ROOT-9597. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15229
https://github.com/root-project/root/issues/15230:197,Deployability,Install,Installation,197,"### Explain what you would like to see improved and how. When a PR touches code within cling subdir, it would be great if the CI turns option clingtest ON automatically. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. https://github.com/root-project/root/pull/9272#issuecomment-2053640480; https://github.com/root-project/root/issues/6957; https://github.com/root-project/root/issues/10693",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15230
https://github.com/root-project/root/pull/15231:468,Deployability,update,updated,468,"# This Pull request:. When ? is used in TChain::Add in both the filename for globbing and as a starter for a string, TChain::Add fails to find the file, because everything after the ? is interpreted as the query string. This commit changes the behaviour so that `?` characters before the _last_ (should it be the first or something else?) '.root' are wildcard characters. ## Changes or fixes:; This PR fixes #10239 . ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15231
https://github.com/root-project/root/pull/15231:438,Testability,test,tested,438,"# This Pull request:. When ? is used in TChain::Add in both the filename for globbing and as a starter for a string, TChain::Add fails to find the file, because everything after the ? is interpreted as the query string. This commit changes the behaviour so that `?` characters before the _last_ (should it be the first or something else?) '.root' are wildcard characters. ## Changes or fixes:; This PR fixes #10239 . ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15231
https://github.com/root-project/root/pull/15232:399,Deployability,update,updated,399,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:929,Deployability,Update,Update,929,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:990,Deployability,Update,Update,990,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:22,Modifiability,Extend,Extends,22,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:369,Testability,test,tested,369,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:451,Testability,test,test,451,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:209,Usability,simpl,simply,209,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:553,Usability,Simpl,Simple,553,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15232:807,Usability,simpl,simple,807,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15232
https://github.com/root-project/root/pull/15233:38,Modifiability,config,config,38,Should fix a problem when using `root-config.bat` in `execute_process`; when the output of `root-config.bat` contains a newline,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15233
https://github.com/root-project/root/pull/15233:97,Modifiability,config,config,97,Should fix a problem when using `root-config.bat` in `execute_process`; when the output of `root-config.bat` contains a newline,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15233
https://github.com/root-project/root/issues/15234:779,Deployability,patch,patches,779,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python; import cppyy; cppyy.cppdef(""""""; class vertex { public:; virtual std::string idself() { return ""I am vertex""; }; };; class Mvertex : public vertex { public:; virtual std::string idself() { return ""I am Mvertex""; }; };; class vCont { public:; std::vector< vertex* > verts { new vertex(), new Mvertex() };; const std::vector<vertex*>& vertices() { return verts; }; };; """"""); cont = cppyy.gbl.vCont(); verts = cont.vertices(); for v in verts:; print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ); ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:; `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False ; I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`; which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:792,Deployability,Install,Installation,792,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python; import cppyy; cppyy.cppdef(""""""; class vertex { public:; virtual std::string idself() { return ""I am vertex""; }; };; class Mvertex : public vertex { public:; virtual std::string idself() { return ""I am Mvertex""; }; };; class vCont { public:; std::vector< vertex* > verts { new vertex(), new Mvertex() };; const std::vector<vertex*>& vertices() { return verts; }; };; """"""); cont = cppyy.gbl.vCont(); verts = cont.vertices(); for v in verts:; print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ); ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:; `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False ; I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`; which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:95,Modifiability,polymorphi,polymorphic,95,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python; import cppyy; cppyy.cppdef(""""""; class vertex { public:; virtual std::string idself() { return ""I am vertex""; }; };; class Mvertex : public vertex { public:; virtual std::string idself() { return ""I am Mvertex""; }; };; class vCont { public:; std::vector< vertex* > verts { new vertex(), new Mvertex() };; const std::vector<vertex*>& vertices() { return verts; }; };; """"""); cont = cppyy.gbl.vCont(); verts = cont.vertices(); for v in verts:; print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ); ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:; `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False ; I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`; which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/issues/15234:1240,Modifiability,variab,variable,1240,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python; import cppyy; cppyy.cppdef(""""""; class vertex { public:; virtual std::string idself() { return ""I am vertex""; }; };; class Mvertex : public vertex { public:; virtual std::string idself() { return ""I am Mvertex""; }; };; class vCont { public:; std::vector< vertex* > verts { new vertex(), new Mvertex() };; const std::vector<vertex*>& vertices() { return verts; }; };; """"""); cont = cppyy.gbl.vCont(); verts = cont.vertices(); for v in verts:; print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ); ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:; `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False ; I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`; which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15234
https://github.com/root-project/root/pull/15235:26,Safety,safe,safe,26,Mention that it is thread-safe and can be called after some data has already been written. Explain that the model is cloned internally and therefore recommend `RNTupleModel::CreateBare`. FYI @makortel @Dr15Jones,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15235
https://github.com/root-project/root/pull/15236:15,Testability,test,testing,15,This PR is for testing on 6.28 in the Linux CI the using of Python ML tools in TMVA,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15236
https://github.com/root-project/root/pull/15239:266,Integrability,interface,interface,266,"This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15239:468,Integrability,synchroniz,synchronize,468,"This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15239:480,Security,access,access,480,"This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15239
https://github.com/root-project/root/pull/15242:10,Deployability,install,installed,10,"If libbsd installed in custom location,; custom include path can be provided in LIBBSDINCPATH variable. This PR may fix #14958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15242
https://github.com/root-project/root/pull/15242:94,Modifiability,variab,variable,94,"If libbsd installed in custom location,; custom include path can be provided in LIBBSDINCPATH variable. This PR may fix #14958",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15242
https://github.com/root-project/root/pull/15243:73,Performance,optimiz,optimization,73,"It costs a factor 3x in memory, so experiments might want to disable the optimization for large models with many fields - in that case it is not expected to provide a sufficient benefit because most columns will have less elements per cluster than the target page size.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15243
https://github.com/root-project/root/pull/15244:191,Deployability,configurat,configuration,191,"It was effectively dead code since commit 4feecb3d63ab81344d66a54b4085a051c7ac35b2 (""Always assume we have xrootd >= 5.0.0"") last year. Users had to manually specify `-Dnetx=ON` during CMake configuration, which would not build with XRootD >= 5.1.0 that removed the `XrdClient` library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15244:191,Modifiability,config,configuration,191,"It was effectively dead code since commit 4feecb3d63ab81344d66a54b4085a051c7ac35b2 (""Always assume we have xrootd >= 5.0.0"") last year. Users had to manually specify `-Dnetx=ON` during CMake configuration, which would not build with XRootD >= 5.1.0 that removed the `XrdClient` library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15244
https://github.com/root-project/root/pull/15245:166,Deployability,update,updated,166,"## Changes or fixes:. I built from source using the default ""ROOT-llvm16"" branch of root-project/llvm-project. I didn't have to do much work to allow the creation of updated Jupyter kernels (C++20 and C++2b). I thought I might as well share the result. All the best, Daniel. (Nb: I moved this pull request from the root/cling mirror site as suggested by @ferdymercury ). ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15245
https://github.com/root-project/root/pull/15245:422,Deployability,update,updated,422,"## Changes or fixes:. I built from source using the default ""ROOT-llvm16"" branch of root-project/llvm-project. I didn't have to do much work to allow the creation of updated Jupyter kernels (C++20 and C++2b). I thought I might as well share the result. All the best, Daniel. (Nb: I moved this pull request from the root/cling mirror site as suggested by @ferdymercury ). ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15245
https://github.com/root-project/root/pull/15245:392,Testability,test,tested,392,"## Changes or fixes:. I built from source using the default ""ROOT-llvm16"" branch of root-project/llvm-project. I didn't have to do much work to allow the creation of updated Jupyter kernels (C++20 and C++2b). I thought I might as well share the result. All the best, Daniel. (Nb: I moved this pull request from the root/cling mirror site as suggested by @ferdymercury ). ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15245
https://github.com/root-project/root/pull/15246:160,Integrability,wrap,wrapped,160,"After discussion, we only want to use `RRawFile` for files of dynamic type `TFile`, `TDavixFile`, and `TNetXNGFile`. Otherwise the native `TFile` (subclass) is wrapped in a `RRawFileTFile`. FYI @makortel @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15246
https://github.com/root-project/root/pull/15247:33,Integrability,interface,interface,33,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:133,Integrability,interface,interface,133,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15247:198,Testability,test,tested,198,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15247
https://github.com/root-project/root/pull/15248:29,Modifiability,variab,variable,29,"Introduce `LIBBSDROOT` cmake variable with path to main directory, where include and library can be found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15248
https://github.com/root-project/root/pull/15249:100,Testability,test,tests,100,Several fixes to meta-data handling that grew quadratic in the number of fields. The RNTuple limits tests is adjusted from 10k to 40k fields (30s --> 2s). Finding pages in the RPagePool is a remaining contributor to a noticeable slowdown with a growing number of fields. That will be addressed in a follow-up PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15249
https://github.com/root-project/root/pull/15251:194,Modifiability,config,configure,194,"1. Do not use `Form` ; 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`; 3. Use JS module in `httptextlog.C` demo for custom class; 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro; 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15251
https://github.com/root-project/root/issues/15252:2816,Deployability,Install,Installation,2816,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:2399,Modifiability,extend,extend,2399,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:2003,Performance,perform,performance,2003,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:654,Usability,guid,guide,654,"### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:825,Usability,guid,guide,825,"### Explain what you would like to see improved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15252:1001,Usability,guid,guide,1001,"proved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and seve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15252
https://github.com/root-project/root/issues/15253:609,Deployability,patch,patches,609,"### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/issues/15253:624,Deployability,Install,Installation,624,"### Description. Commit https://github.com/root-project/root/commit/d487a42b311c5d0c7544031e3071a388c488c429 removed the C++ standard from `CMAKE_CXX_FLAGS` and also the `cxx_std_` compile feature from the library targets. As a result, the example given at https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project does *NOT* propagate the C++ standard anymore as advertised. ### Reproducer. Build ROOT with a specific `CMAKE_CXX_STANDARD` and an application with a C++ compiler that defaults to a different C++ standard. ### ROOT version. `master` (most likely also `v6-32-00-patches`). ### Installation method. from source. ### Operating system. Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15253
https://github.com/root-project/root/pull/15254:265,Deployability,patch,patches,265,"Partially revert commit d487a42b311 (""[cmake] Set CMAKE_CXX_STANDARD explicitly in RootUseFile.cmake"") because this is required to propagate the C++ standard via CMake library targets, as advertised on the website. Fixes #15253 (needs to be backported to `v6-32-00-patches`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15254
https://github.com/root-project/root/pull/15256:99,Availability,error,error,99,"The declaration of `obj` has been moved to an outer scope in PR #15179, resulting in a warning (or error) from `-Wshadow`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15256
https://github.com/root-project/root/pull/15257:188,Energy Efficiency,schedul,scheduling,188,"The RPageSourceFile's use of RRawFile should not use the raw file's block cache layer for the page reads. The page source knows exactly which byte ranges are required. It makes itself I/O scheduling decisions (e.g., coalescing, vector reads) to optimize the read pattern. For opening the file, getting the RNTuple anchor and meta-data, however, we keep the buffered reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15257
https://github.com/root-project/root/pull/15257:74,Performance,cache,cache,74,"The RPageSourceFile's use of RRawFile should not use the raw file's block cache layer for the page reads. The page source knows exactly which byte ranges are required. It makes itself I/O scheduling decisions (e.g., coalescing, vector reads) to optimize the read pattern. For opening the file, getting the RNTuple anchor and meta-data, however, we keep the buffered reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15257
https://github.com/root-project/root/pull/15257:245,Performance,optimiz,optimize,245,"The RPageSourceFile's use of RRawFile should not use the raw file's block cache layer for the page reads. The page source knows exactly which byte ranges are required. It makes itself I/O scheduling decisions (e.g., coalescing, vector reads) to optimize the read pattern. For opening the file, getting the RNTuple anchor and meta-data, however, we keep the buffered reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15257
https://github.com/root-project/root/pull/15260:33,Integrability,interface,interface,33,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:133,Integrability,interface,interface,133,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15260:198,Testability,test,tested,198,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15260
https://github.com/root-project/root/pull/15261:33,Integrability,interface,interface,33,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:133,Integrability,interface,interface,133,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15261:198,Testability,test,tested,198,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15261
https://github.com/root-project/root/pull/15262:33,Integrability,interface,interface,33,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:133,Integrability,interface,interface,133,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/pull/15262:198,Testability,test,tested,198,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15262
https://github.com/root-project/root/issues/15263:126,Availability,avail,available,126,"### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++; #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {; template <typename... A>; void Fill(A... a) {}; template <typename... A>; void Fill(typename A::type... a) {}; };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {; public:; using Result_t = Result;. private:; std::shared_ptr<Result_t> fResult;. public:; Helper() {; fResult = std::make_shared<Result_t>();; }; Helper(const Helper &) = delete;; Helper(Helper &&) = default;; std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; template <typename... ColumnTypes>; void Exec(unsigned int, ColumnTypes... values) {; fResult->Fill(values...);; }; void Finalize() {}; std::string GetActionName() const { return ""Helper""; }; };. int main() {; ROOT::RDataFrame df(1);; df.Book(Helper{}, {""rdfentry_""});. return 0;; }; ```. gives with GCC 8.5.0:; ```; book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous; fResult->Fill(values...);; ^~~~~~~; book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’; void Fill(A... a) {}; ^~~~; book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’; void Fill(typename A::type... a) {}; ^~~~; ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1221,Availability,error,error,1221,"### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++; #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {; template <typename... A>; void Fill(A... a) {}; template <typename... A>; void Fill(typename A::type... a) {}; };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {; public:; using Result_t = Result;. private:; std::shared_ptr<Result_t> fResult;. public:; Helper() {; fResult = std::make_shared<Result_t>();; }; Helper(const Helper &) = delete;; Helper(Helper &&) = default;; std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; template <typename... ColumnTypes>; void Exec(unsigned int, ColumnTypes... values) {; fResult->Fill(values...);; }; void Finalize() {}; std::string GetActionName() const { return ""Helper""; }; };. int main() {; ROOT::RDataFrame df(1);; df.Book(Helper{}, {""rdfentry_""});. return 0;; }; ```. gives with GCC 8.5.0:; ```; book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous; fResult->Fill(values...);; ^~~~~~~; book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’; void Fill(A... a) {}; ^~~~; book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’; void Fill(typename A::type... a) {}; ^~~~; ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/issues/15263:1575,Deployability,Install,Installation,1575,"### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++; #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {; template <typename... A>; void Fill(A... a) {}; template <typename... A>; void Fill(typename A::type... a) {}; };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {; public:; using Result_t = Result;. private:; std::shared_ptr<Result_t> fResult;. public:; Helper() {; fResult = std::make_shared<Result_t>();; }; Helper(const Helper &) = delete;; Helper(Helper &&) = default;; std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; template <typename... ColumnTypes>; void Exec(unsigned int, ColumnTypes... values) {; fResult->Fill(values...);; }; void Finalize() {}; std::string GetActionName() const { return ""Helper""; }; };. int main() {; ROOT::RDataFrame df(1);; df.Book(Helper{}, {""rdfentry_""});. return 0;; }; ```. gives with GCC 8.5.0:; ```; book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous; fResult->Fill(values...);; ^~~~~~~; book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’; void Fill(A... a) {}; ^~~~; book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’; void Fill(typename A::type... a) {}; ^~~~; ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15263
https://github.com/root-project/root/pull/15266:333,Energy Efficiency,reduce,reduce,333,"After commit a27e60a6d4f, it is not important anymore that only the variables used by the expression are passed to RooFormula. Removing the corresponding warnings helps to get rid of useless warnings in the case where you want to try out variations of the formula that omit certain terms, and in particular it helps in; `RooAbsData::reduce()`, where the formula is always passed all the varaiables in the dataset, whether the reduction uses them or not. To be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15266
https://github.com/root-project/root/pull/15266:68,Modifiability,variab,variables,68,"After commit a27e60a6d4f, it is not important anymore that only the variables used by the expression are passed to RooFormula. Removing the corresponding warnings helps to get rid of useless warnings in the case where you want to try out variations of the formula that omit certain terms, and in particular it helps in; `RooAbsData::reduce()`, where the formula is always passed all the varaiables in the dataset, whether the reduction uses them or not. To be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15266
https://github.com/root-project/root/issues/15267:1248,Deployability,Install,Installation,1248,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:; 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue.; 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15267:400,Security,access,accessible,400,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from sources without support for Vc, file `vc.modulemap` still gets created and registered in cling. This leads to problems when compiled ROOT is placed to read-only location (cvmfs) and user tries to use its own Vc library. ROOT tries to build `Vc.pcm` file and place it under `$ROOTSYS/lib` which is not accessible for writing. To fix this problem as I see it, 2 things need to be changed:; 1) In file `core/clingutils/CMakeLists.txt` code `set(custom_modulemaps ${custom_modulemaps} vc.modulemap)` (around line 119) should be called only if ROOT is built with Vc support. There is already FIXME placed so this seems to be a known issue.; 1) In file `interpreter/cling/lib/Interpreter/CIFactory.cpp` around line 722 adding `vc.modulemap` (maybeAppendOverlayEntry(...,vc.modulemap,...)) should not happen if ROOT is not built with Vc support/should be disabled. If not disabling this part, even removing `etc/cling/vc.modulemap` after build will not prevent ROOT from attempting to create the `lib/Vc.pcm` file. ### Reproducer. try to build ROOT from source. ### ROOT version. ROOT v6.30.06, looking at sources concerns v6.28.xx and master as well. ### Installation method. build from source. ### Operating system. CentOS 7, AlmaLinux 9.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15267
https://github.com/root-project/root/issues/15269:1042,Deployability,Install,Installation,1042,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've had a report that some behaviour of pyROOT for iterating over a class is not working in ROOT master but is working in ROOT 6.30. Here's the correct behaviour ... note the TYPE of the object in the for loop, it is another xRooNode, as it should be.; ```; >>> import ROOT; >>> from ROOT.Experimental import XRooFit; >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""); xRooNode{}; >>> for c in w: print(type(c)); ... ; <class cppyy.gbl.ROOT.Experimental.XRooFit.xRooNode at 0x8d0bd20>; >>> ROOT.gROOT.GetVersion(); '6.30/02'; ```. Same code in ROOT master:; ```; >>> import ROOT; >>> from ROOT.Experimental import XRooFit; >>> w = XRooFit.xRooNode(""RooWorkspace"",""w"",""w""); w.Add(""factory:mu[1]""); xRooNode{}; >>> for c in w: print(type(c)); ... ; <class 'cppyy.LowLevelView'>; >>> ROOT.gROOT.GetVersion(); '6.33/01'; ```. Is it known why the iteration functionality is different?. ### Reproducer. see above. ### ROOT version. ROOT master. ### Installation method. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. ### Operating system. lxplus el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15269
https://github.com/root-project/root/issues/15270:283,Deployability,Install,Installation,283,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. MakeClass/MakeSelector generate invalid code for branches with '#' or '@' in the name. ### Reproducer. Call MakeClass/MakeSelector with branches with '#' or '@' in the name. ### ROOT version. master/any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15270
https://github.com/root-project/root/pull/15272:1544,Availability,error,errors,1544,"master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2549,Availability,Error,Error,2549,"I. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2634,Availability,error,error,2634,"I. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:65,Deployability,install,install,65,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:129,Deployability,install,install,129,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:391,Deployability,configurat,configuration,391,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:502,Deployability,install,installed,502,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:77,Integrability,depend,dependencies,77,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:489,Integrability,depend,dependencies,489,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1238,Integrability,depend,dependency,1238,"This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requireme",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1270,Integrability,depend,dependency,1270,"d Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not match",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1330,Integrability,depend,dependency,1330,".py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2027,Integrability,depend,dependency,2027,"I. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2059,Integrability,depend,dependency,2059,"I. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2119,Integrability,depend,dependency,2119,"I. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2279,Integrability,depend,dependencies,2279,"I. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:2623,Integrability,message,message,2623,"I. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:391,Modifiability,config,configuration,391,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:5,Testability,test,test,5,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:303,Testability,test,test,303,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:440,Testability,test,test,440,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:593,Testability,test,test,593,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1471,Testability,test,test,1471,"the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:836,Usability,learn,learn,836,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15272:1625,Usability,learn,learn,1625,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15272
https://github.com/root-project/root/pull/15274:124,Availability,error,error,124,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:155,Availability,Error,Error,155,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:315,Deployability,update,updated,315,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:130,Integrability,message,messages,130,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15274:285,Testability,test,tested,285,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15274
https://github.com/root-project/root/pull/15279:254,Deployability,update,updated,254,"The addition of this function is in anticipation for horizontal joining of RNTuples, which will be handled in the context of the `RNTupleProcessor` that is currently under development (see also #15084). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15279
https://github.com/root-project/root/pull/15279:224,Testability,test,tested,224,"The addition of this function is in anticipation for horizontal joining of RNTuples, which will be handled in the context of the `RNTupleProcessor` that is currently under development (see also #15084). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15279
https://github.com/root-project/root/pull/15280:144,Deployability,update,updated,144,Fixes https://its.cern.ch/jira/browse/ROOT-5760. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15280
https://github.com/root-project/root/pull/15280:114,Testability,test,tested,114,Fixes https://its.cern.ch/jira/browse/ROOT-5760. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15280
https://github.com/root-project/root/pull/15281:37,Testability,test,testing,37,Backport some PRs related to TMVA CI testing:; * https://github.com/root-project/root/pull/15278; * https://github.com/root-project/root/pull/15276; * https://github.com/root-project/root/pull/15258; * https://github.com/root-project/root/pull/15275,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15281
https://github.com/root-project/root/pull/15282:37,Testability,test,testing,37,Backport some PRs related to TMVA CI testing:; * https://github.com/root-project/root/pull/15278; * https://github.com/root-project/root/pull/15276; * https://github.com/root-project/root/pull/15258; * https://github.com/root-project/root/pull/15275,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15282
https://github.com/root-project/root/pull/15283:145,Deployability,update,updated,145,# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-10390. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15283:115,Testability,test,tested,115,# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-10390. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15283
https://github.com/root-project/root/pull/15284:51,Safety,avoid,avoids,51,# This Pull request:. ## Changes or fixes:. Change avoids extra memory allocation in TDecompChol::TDecompChol. I have copied what is done in other TDecomp* classes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15284
https://github.com/root-project/root/issues/15285:1256,Deployability,Install,Installation,1256,"### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```; TMatrixDSym d(100);; for ( int i=0; i< 100; i++) d(i,i)=i;; ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of ; ```; d.GetMatrixArray()[i*100+i] = i;; ```; via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)?. ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1161,Integrability,interface,interface,1161,"### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```; TMatrixDSym d(100);; for ( int i=0; i< 100; i++) d(i,i)=i;; ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of ; ```; d.GetMatrixArray()[i*100+i] = i;; ```; via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)?. ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:854,Modifiability,layers,layers,854,"### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```; TMatrixDSym d(100);; for ( int i=0; i< 100; i++) d(i,i)=i;; ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of ; ```; d.GetMatrixArray()[i*100+i] = i;; ```; via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)?. ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:198,Performance,bottleneck,bottleneck,198,"### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```; TMatrixDSym d(100);; for ( int i=0; i< 100; i++) d(i,i)=i;; ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of ; ```; d.GetMatrixArray()[i*100+i] = i;; ```; via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)?. ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:870,Safety,sanity check,sanity checks,870,"### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```; TMatrixDSym d(100);; for ( int i=0; i< 100; i++) d(i,i)=i;; ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of ; ```; d.GetMatrixArray()[i*100+i] = i;; ```; via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)?. ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:1155,Safety,safe,safer,1155,"### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```; TMatrixDSym d(100);; for ( int i=0; i< 100; i++) d(i,i)=i;; ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of ; ```; d.GetMatrixArray()[i*100+i] = i;; ```; via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)?. ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/issues/15285:661,Security,access,access,661,"### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```; TMatrixDSym d(100);; for ( int i=0; i< 100; i++) d(i,i)=i;; ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of ; ```; d.GetMatrixArray()[i*100+i] = i;; ```; via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)?. ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15285
https://github.com/root-project/root/pull/15286:476,Deployability,install,installed,476,"The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:437,Safety,safe,safely,437,"The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:4,Testability,test,test,4,"The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15286:73,Testability,test,test,73,"The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15286
https://github.com/root-project/root/pull/15289:32,Testability,test,testing,32,Backport some PRs related to CI testing:; * https://github.com/root-project/root/pull/15278; * https://github.com/root-project/root/pull/15276; * https://github.com/root-project/root/pull/15275; * https://github.com/root-project/root/pull/14685; * https://github.com/root-project/root/pull/15286; * https://github.com/root-project/root/pull/15290,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15289
https://github.com/root-project/root/pull/15291:32,Testability,test,testing,32,Backport some PRs related to CI testing:; * https://github.com/root-project/root/pull/14685; * https://github.com/root-project/root/pull/15286; * https://github.com/root-project/root/pull/15290,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15291
https://github.com/root-project/root/pull/15292:32,Testability,test,testing,32,Backport some PRs related to CI testing:; * https://github.com/root-project/root/pull/14685; * https://github.com/root-project/root/pull/15286; * https://github.com/root-project/root/pull/15290,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15292
https://github.com/root-project/root/pull/15295:217,Availability,failure,failures,217,This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15295
https://github.com/root-project/root/pull/15295:144,Modifiability,variab,variables,144,This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15295
https://github.com/root-project/root/pull/15296:217,Availability,failure,failures,217,This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15296
https://github.com/root-project/root/pull/15296:144,Modifiability,variab,variables,144,This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15296
https://github.com/root-project/root/pull/15297:217,Availability,failure,failures,217,This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15297
https://github.com/root-project/root/pull/15297:144,Modifiability,variab,variables,144,This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15297
https://github.com/root-project/root/pull/15298:217,Availability,failure,failures,217,This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15298
https://github.com/root-project/root/pull/15298:144,Modifiability,variab,variables,144,This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15298
https://github.com/root-project/root/pull/15299:14,Deployability,patch,patch,14,"The next 6.30 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and is; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:20,Deployability,release,release,20,"The next 6.30 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and is; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:569,Deployability,patch,patch,569,"The next 6.30 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and is; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:575,Deployability,release,release,575,"The next 6.30 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and is; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15299:552,Usability,feedback,feedback,552,"The next 6.30 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and is; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15299
https://github.com/root-project/root/pull/15300:17485,Deployability,update,updated,17485,; 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302; 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302; 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307; 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022; 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022; 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027; 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027; 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031; 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031; 30: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033; 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125; 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125; /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700; /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728; /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx; ```. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15300:17455,Testability,test,tested,17455,; 19: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302; 20: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 21: Loop condition is false. Exiting loop in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4302; 22: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 23: Execution continues on line 4022 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4307; 24: 'i' is < field 'fNoper' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022; 25: Loop condition is true. Entering loop body in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4022; 26: Assuming 'newaction' is < kDefinedVariable in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027; 27: Taking true branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4027; 28: Assuming 'newaction' is not equal to kConstant in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031; 29: Taking false branch in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4031; 30: Control jumps to 'case kStringNotEqual:' at line 4125 in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4033; 31: The value -1 is assigned to 'pos2' in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125; 32: 2nd function call argument is an uninitialized value in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:4125; /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5700; /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728:13: warning: Value stored to 'last' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'last' is never read in /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx:5728; /opt/root_src/tree/treeplayer/src/TTreeFormula.cxx; ```. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15300
https://github.com/root-project/root/pull/15301:84,Security,access,accessing,84,"This PR includes fix to the pyroot iterator issue.; It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15301
https://github.com/root-project/root/pull/15301:156,Security,access,accessing,156,"This PR includes fix to the pyroot iterator issue.; It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15301
https://github.com/root-project/root/pull/15302:145,Deployability,install,installed,145,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15302:195,Performance,load,loaded,195,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15302
https://github.com/root-project/root/pull/15303:145,Deployability,install,installed,145,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15303:195,Performance,load,loaded,195,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15303
https://github.com/root-project/root/pull/15304:145,Deployability,install,installed,145,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15304:195,Performance,load,loaded,195,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15304
https://github.com/root-project/root/pull/15305:145,Deployability,install,installed,145,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15305:195,Performance,load,loaded,195,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15305
https://github.com/root-project/root/pull/15306:121,Deployability,install,installed,121,This is a testing PR to unveil all other possible remaining time bombs; in TMVA that blow off once some requirements are installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15306:10,Testability,test,testing,10,This is a testing PR to unveil all other possible remaining time bombs; in TMVA that blow off once some requirements are installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15306
https://github.com/root-project/root/pull/15307:58,Availability,error,error,58,`-Dmonalisa=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15307
https://github.com/root-project/root/pull/15308:57,Availability,error,error,57,"`-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has; ```cmake; target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc); ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/pull/15308:95,Integrability,depend,depends,95,"`-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has; ```cmake; target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc); ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15308
https://github.com/root-project/root/issues/15309:203,Performance,load,load,203,"## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy; SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support; PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy; The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}; Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:; * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:453,Testability,test,test,453,"## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy; SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support; PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy; The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}; Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:; * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/issues/15309:1505,Usability,learn,learning,1505,"## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy; SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support; PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy; The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}; Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:; * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15309
https://github.com/root-project/root/pull/15310:122,Deployability,release,release,122,Closes https://github.com/root-project/root/issues/14917. To backport to 6.32 for making the packagers happy with our new release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15310
https://github.com/root-project/root/pull/15311:456,Safety,safe,safest,456,"The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. Backport of https://github.com/root-project/root/pull/15125.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15311
https://github.com/root-project/root/pull/15313:132,Availability,avail,available,132,"Enabled when configured with `root --web` or `root --web=on`; It tries to use local displays like CEF or Qt6 or Qt5 first. ; If not available, try to use detected ""native"" browsers like Chrome or Firefox. ; All these display kinds provides comfortable window management which are very like to normal windows.; Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:13,Modifiability,config,configured,13,"Enabled when configured with `root --web` or `root --web=on`; It tries to use local displays like CEF or Qt6 or Qt5 first. ; If not available, try to use detected ""native"" browsers like Chrome or Firefox. ; All these display kinds provides comfortable window management which are very like to normal windows.; Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:407,Modifiability,Extend,Extend,407,"Enabled when configured with `root --web` or `root --web=on`; It tries to use local displays like CEF or Qt6 or Qt5 first. ; If not available, try to use detected ""native"" browsers like Chrome or Firefox. ; All these display kinds provides comfortable window management which are very like to normal windows.; Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15313:154,Safety,detect,detected,154,"Enabled when configured with `root --web` or `root --web=on`; It tries to use local displays like CEF or Qt6 or Qt5 first. ; If not available, try to use detected ""native"" browsers like Chrome or Firefox. ; All these display kinds provides comfortable window management which are very like to normal windows.; Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15313
https://github.com/root-project/root/pull/15314:295,Deployability,update,updated,295,# This Pull request:; Draft PR for testing the doxygen generation github action with our self-hosted runners ; **This PR generates doxygen via CMake with the changes from #15160 which need to be merged before this PR!!**. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15314
https://github.com/root-project/root/pull/15314:35,Testability,test,testing,35,# This Pull request:; Draft PR for testing the doxygen generation github action with our self-hosted runners ; **This PR generates doxygen via CMake with the changes from #15160 which need to be merged before this PR!!**. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15314
https://github.com/root-project/root/pull/15314:265,Testability,test,tested,265,# This Pull request:; Draft PR for testing the doxygen generation github action with our self-hosted runners ; **This PR generates doxygen via CMake with the changes from #15160 which need to be merged before this PR!!**. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15314
https://github.com/root-project/root/issues/15315:680,Availability,error,error,680,"### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:; https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python; import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):; def NDim( self ):; return 1. def DoEval( self, x ):; return (x[0] - 42) * (x[0] - 42). def Clone( self ):; x = MyMultiGenFCN(); ROOT.SetOwnership(x, False); return x. def main():; fitter = ROOT.Fit.Fitter(); myMultiGenFCN = MyMultiGenFCN(); params = array('d', [1.]); fitter.FitFCN(myMultiGenFCN, params); fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':; main(); ```; The error is:; ```txt; input_line_33:38:23: error: expected '(' for function-style cast or type construction; return unsigned int{};; ~~~~~~~~ ^; Traceback (most recent call last):; File ""/home/rembserj/example.py"", line 5, in <module>; class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):; TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. See:; * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction; * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15315:720,Availability,error,error,720,"### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:; https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python; import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):; def NDim( self ):; return 1. def DoEval( self, x ):; return (x[0] - 42) * (x[0] - 42). def Clone( self ):; x = MyMultiGenFCN(); ROOT.SetOwnership(x, False); return x. def main():; fitter = ROOT.Fit.Fitter(); myMultiGenFCN = MyMultiGenFCN(); params = array('d', [1.]); fitter.FitFCN(myMultiGenFCN, params); fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':; main(); ```; The error is:; ```txt; input_line_33:38:23: error: expected '(' for function-style cast or type construction; return unsigned int{};; ~~~~~~~~ ^; Traceback (most recent call last):; File ""/home/rembserj/example.py"", line 5, in <module>; class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):; TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. See:; * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction; * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15315
https://github.com/root-project/root/issues/15318:306,Availability,error,errors,306,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:362,Availability,Error,Error,362,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:529,Availability,Error,Error,529,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:621,Availability,Error,Error,621,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:710,Availability,avail,available,710,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:773,Availability,Error,Error,773,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:860,Availability,avail,available,860,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:197,Deployability,install,installs,197,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1325,Deployability,deploy,deployed,1325,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1634,Deployability,Install,Installation,1634,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:763,Integrability,rout,routine,763,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:913,Integrability,rout,routine,913,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1476,Modifiability,variab,variable,1476,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:380,Performance,Load,LoadPCM,380,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:547,Performance,Load,LoadPCM,547,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:639,Performance,Load,LoadClassInfo,639,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:791,Performance,Load,LoadClassInfo,791,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1176,Usability,simpl,simply,1176,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15318:1290,Usability,clear,clearly,1290,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15318
https://github.com/root-project/root/issues/15321:157,Availability,error,error,157,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022""; 2. git clone https://github.com/root-project/root.git; 3. mkdir root\build_amd64; 4. cd /d root\build_amd64; 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64; 6. python.exe -m pip install pytest 2>&1; 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1; 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:; Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:; [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:166,Availability,error,error,166,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022""; 2. git clone https://github.com/root-project/root.git; 3. mkdir root\build_amd64; 4. cd /d root\build_amd64; 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64; 6. python.exe -m pip install pytest 2>&1; 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1; 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:; Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:; [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:779,Deployability,install,install,779,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022""; 2. git clone https://github.com/root-project/root.git; 3. mkdir root\build_amd64; 4. cd /d root\build_amd64; 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64; 6. python.exe -m pip install pytest 2>&1; 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1; 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:; Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:; [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:961,Deployability,Configurat,Configuration,961,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022""; 2. git clone https://github.com/root-project/root.git; 3. mkdir root\build_amd64; 4. cd /d root\build_amd64; 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64; 6. python.exe -m pip install pytest 2>&1; 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1; 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:; Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:; [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:975,Deployability,Release,Release,975,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022""; 2. git clone https://github.com/root-project/root.git; 3. mkdir root\build_amd64; 4. cd /d root\build_amd64; 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64; 6. python.exe -m pip install pytest 2>&1; 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1; 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:; Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:; [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1113,Deployability,Install,Installation,1113,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022""; 2. git clone https://github.com/root-project/root.git; 3. mkdir root\build_amd64; 4. cd /d root\build_amd64; 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64; 6. python.exe -m pip install pytest 2>&1; 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1; 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:; Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:; [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:961,Modifiability,Config,Configuration,961,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022""; 2. git clone https://github.com/root-project/root.git; 3. mkdir root\build_amd64; 4. cd /d root\build_amd64; 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64; 6. python.exe -m pip install pytest 2>&1; 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1; 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:; Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:; [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1227,Testability,log,log,1227,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022""; 2. git clone https://github.com/root-project/root.git; 3. mkdir root\build_amd64; 4. cd /d root\build_amd64; 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64; 6. python.exe -m pip install pytest 2>&1; 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1; 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:; Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:; [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1240,Testability,log,log,1240,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022""; 2. git clone https://github.com/root-project/root.git; 3. mkdir root\build_amd64; 4. cd /d root\build_amd64; 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64; 6. python.exe -m pip install pytest 2>&1; 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1; 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:; Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:; [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15321:1303,Testability,log,log,1303,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022""; 2. git clone https://github.com/root-project/root.git; 3. mkdir root\build_amd64; 4. cd /d root\build_amd64; 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64; 6. python.exe -m pip install pytest 2>&1; 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1; 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:; Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:; [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15321
https://github.com/root-project/root/issues/15323:787,Deployability,Install,Installation,787,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++; void test() {. ROOT::RDataFrame df(100);; ROOT::RDF::Experimental::AddProgressBar(df);; auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });; auto max = def.Range(0, 10);; auto hist = max.Histo1D(""x"");; std::cout << hist->Integral() << ""\n"";; }; ```. The following code shows:; ```; root [0] ; Processing test.cxx...; [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] ; 10; ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:285,Testability,test,test,285,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++; void test() {. ROOT::RDataFrame df(100);; ROOT::RDF::Experimental::AddProgressBar(df);; auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });; auto max = def.Range(0, 10);; auto hist = max.Histo1D(""x"");; std::cout << hist->Integral() << ""\n"";; }; ```. The following code shows:; ```; root [0] ; Processing test.cxx...; [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] ; 10; ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:592,Testability,test,test,592,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++; void test() {. ROOT::RDataFrame df(100);; ROOT::RDF::Experimental::AddProgressBar(df);; auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });; auto max = def.Range(0, 10);; auto hist = max.Histo1D(""x"");; std::cout << hist->Integral() << ""\n"";; }; ```. The following code shows:; ```; root [0] ; Processing test.cxx...; [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] ; 10; ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:121,Usability,progress bar,progress bar,121,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++; void test() {. ROOT::RDataFrame df(100);; ROOT::RDF::Experimental::AddProgressBar(df);; auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });; auto max = def.Range(0, 10);; auto hist = max.Histo1D(""x"");; std::cout << hist->Integral() << ""\n"";; }; ```. The following code shows:; ```; root [0] ; Processing test.cxx...; [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] ; 10; ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:139,Usability,progress bar,progress bar,139,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++; void test() {. ROOT::RDataFrame df(100);; ROOT::RDF::Experimental::AddProgressBar(df);; auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });; auto max = def.Range(0, 10);; auto hist = max.Histo1D(""x"");; std::cout << hist->Integral() << ""\n"";; }; ```. The following code shows:; ```; root [0] ; Processing test.cxx...; [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] ; 10; ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/issues/15323:703,Usability,progress bar,progress bar,703,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When Range() is called on a RDF object with a progress bar, the progress bar seems to show all the events instead of reducing the events to the values provided in the Range() call. ### Reproducer. ```c++; void test() {. ROOT::RDataFrame df(100);; ROOT::RDF::Experimental::AddProgressBar(df);; auto def = df.Define(""x"", [](){ return gRandom->Rndm(); });; auto max = def.Range(0, 10);; auto hist = max.Histo1D(""x"");; std::cout << hist->Integral() << ""\n"";; }; ```. The following code shows:; ```; root [0] ; Processing test.cxx...; [Total elapsed time: 0:00m processed files: 0 / 0 processed evts: 100 / 100] ; 10; ```. While the progress bar should ideally show 10/10. ### ROOT version. Recent master branch. ### Installation method. git clone + local compilation. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15323
https://github.com/root-project/root/pull/15324:341,Deployability,update,updated,341,as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:200,Testability,test,test,200,as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15324:311,Testability,test,tested,311,as is the case with function GetReadStatus. This prevents the crash on line 35 (stack trace by @amadio on https://its.cern.ch/jira/browse/ROOT-11006):. # This Pull request:. ## Changes or fixes:. The test for this PR is the same as in https://github.com/root-project/root/pull/15317/files. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15324
https://github.com/root-project/root/pull/15325:3,Safety,avoid,avoid,3,To avoid compiler warning,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15325
https://github.com/root-project/root/pull/15330:14,Deployability,patch,patch,14,"The next 6.28 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and was; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28; because they are skipping this ROOT release for combine. However, for; the sake of consistency, the classes are retroactively removed from all; release branches <= 6.30. The corresponding PR in ROOT 6.30:; https://github.com/root-project/root/pull/15299",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:20,Deployability,release,release,20,"The next 6.28 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and was; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28; because they are skipping this ROOT release for combine. However, for; the sake of consistency, the classes are retroactively removed from all; release branches <= 6.30. The corresponding PR in ROOT 6.30:; https://github.com/root-project/root/pull/15299",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:570,Deployability,patch,patch,570,"The next 6.28 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and was; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28; because they are skipping this ROOT release for combine. However, for; the sake of consistency, the classes are retroactively removed from all; release branches <= 6.30. The corresponding PR in ROOT 6.30:; https://github.com/root-project/root/pull/15299",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:576,Deployability,release,release,576,"The next 6.28 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and was; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28; because they are skipping this ROOT release for combine. However, for; the sake of consistency, the classes are retroactively removed from all; release branches <= 6.30. The corresponding PR in ROOT 6.30:; https://github.com/root-project/root/pull/15299",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:794,Deployability,release,release,794,"The next 6.28 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and was; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28; because they are skipping this ROOT release for combine. However, for; the sake of consistency, the classes are retroactively removed from all; release branches <= 6.30. The corresponding PR in ROOT 6.30:; https://github.com/root-project/root/pull/15299",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:902,Deployability,release,release,902,"The next 6.28 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and was; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28; because they are skipping this ROOT release for combine. However, for; the sake of consistency, the classes are retroactively removed from all; release branches <= 6.30. The corresponding PR in ROOT 6.30:; https://github.com/root-project/root/pull/15299",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15330:553,Usability,feedback,feedback,553,"The next 6.28 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and was; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28; because they are skipping this ROOT release for combine. However, for; the sake of consistency, the classes are retroactively removed from all; release branches <= 6.30. The corresponding PR in ROOT 6.30:; https://github.com/root-project/root/pull/15299",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15330
https://github.com/root-project/root/pull/15335:443,Deployability,update,updated,443,"# This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:; switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15335
https://github.com/root-project/root/pull/15335:44,Safety,Avoid,Avoids,44,"# This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:; switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15335
https://github.com/root-project/root/pull/15335:413,Testability,test,tested,413,"# This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:; switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15335
https://github.com/root-project/root/issues/15336:143,Availability,error,error,143,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:989,Availability,Error,Error,989,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1093,Availability,error,error,1093,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1116,Availability,error,error,1116,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:932,Deployability,Configurat,Configuration,932,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:946,Deployability,Release,Release,946,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1697,Deployability,Install,Installation,1697,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:995,Integrability,Message,Message,995,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:932,Modifiability,Config,Configuration,932,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1478,Modifiability,Plug-in,Plug-in,1478,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1528,Modifiability,Plug-in,Plug-in,1528,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1023,Security,hash,hash,1023,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/issues/15336:1595,Testability,Test,Testing,1595,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15336
https://github.com/root-project/root/pull/15337:388,Deployability,Install,Install,388,"# This Pull request:; This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:595,Deployability,release,releases,595,"# This Pull request:; This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:856,Integrability,depend,dependencies,856,"# This Pull request:; This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:611,Performance,OPTIMIZ,OPTIMIZATION,611,"# This Pull request:; This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:40,Testability,test,testing,40,"# This Pull request:; This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:249,Testability,test,tests,249,"# This Pull request:; This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/pull/15337:320,Testability,Test,Test,320,"# This Pull request:; This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15337
https://github.com/root-project/root/issues/15340:817,Availability,Error,Error,817,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```; -> root --web; ------------------------------------------------------------------; | Welcome to ROOT 6.33/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 25 2024, 07:37:38 |; | From heads/master@v6-31-01-1759-ga6c7efff71 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4); (TH1F &) Name: h Title: h NbinsX: 64; root [1] h.FillRandom(""gaus""); root [2] h.Draw(); Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1097,Availability,Error,Error,1097,"ion. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```; -> root --web; ------------------------------------------------------------------; | Welcome to ROOT 6.33/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 25 2024, 07:37:38 |; | From heads/master@v6-31-01-1759-ga6c7efff71 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4); (TH1F &) Name: h Title: h NbinsX: 64; root [1] h.FillRandom(""gaus""); root [2] h.Draw(); Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1377,Availability,Error,Error,1377," ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 25 2024, 07:37:38 |; | From heads/master@v6-31-01-1759-ga6c7efff71 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4); (TH1F &) Name: h Title: h NbinsX: 64; root [1] h.FillRandom(""gaus""); root [2] h.Draw(); Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDis",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:1730,Availability,Error,Error,1730,"X: 64; root [1] h.FillRandom(""gaus""); root [2] h.Draw(); Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; Opening in existing browser session.; [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extensio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2010,Availability,Error,Error,2010,/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; Opening in existing browser session.; [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt; [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtg,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2290,Availability,Error,Error,2290,m::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; Opening in existing browser session.; [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt; [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt; ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2706,Availability,ERROR,ERROR,2706,m::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; Opening in existing browser session.; [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt; [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt; ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:2865,Availability,ERROR,ERROR,2865,m::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; Opening in existing browser session.; [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt; [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt; ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/issues/15340:3023,Deployability,Install,Installation,3023,m::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; Opening in existing browser session.; [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt; [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt; ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15340
https://github.com/root-project/root/pull/15341:87,Security,access,accessing,87,"This commit includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset. Backport of #15301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15341
https://github.com/root-project/root/pull/15341:159,Security,access,accessing,159,"This commit includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset. Backport of #15301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15341
https://github.com/root-project/root/pull/15345:21,Modifiability,config,configured,21,"If local web display configured,; only build variants will be tested. Fixes issue #15340",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15345
https://github.com/root-project/root/pull/15345:62,Testability,test,tested,62,"If local web display configured,; only build variants will be tested. Fixes issue #15340",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15345
https://github.com/root-project/root/pull/15346:27,Testability,test,test,27,This can be problematic in test environments.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15346
https://github.com/root-project/root/pull/15347:21,Modifiability,config,configured,21,"If local web display configured,; only build variants will be tested. Fixes issue #15340. Backport of #15345",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15347
https://github.com/root-project/root/pull/15347:62,Testability,test,tested,62,"If local web display configured,; only build variants will be tested. Fixes issue #15340. Backport of #15345",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15347
https://github.com/root-project/root/issues/15348:668,Deployability,Install,Installation,668,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```; -> root -l; root [0] TH1F h(""h"",""h"", 64, -4,4);; root [1] h.FillRandom(""gaus""); root [2] h.Draw(); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)); FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800; FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800; ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:357,Testability,log,log,357,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```; -> root -l; root [0] TH1F h(""h"",""h"", 64, -4,4);; root [1] h.FillRandom(""gaus""); root [2] h.Draw(); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)); FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800; FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800; ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:479,Testability,log,log,479,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```; -> root -l; root [0] TH1F h(""h"",""h"", 64, -4,4);; root [1] h.FillRandom(""gaus""); root [2] h.Draw(); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)); FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800; FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800; ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/issues/15348:555,Testability,log,log,555,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, drawing a histogram leads to nasty and confusing printouts on screen. ### Reproducer. ```; -> root -l; root [0] TH1F h(""h"",""h"", 64, -4,4);; root [1] h.FillRandom(""gaus""); root [2] h.Draw(); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; FALLBACK (log once): Fallback to SW vertex processing (lineMode && (localGroupInfo & GLRGroupInfoPrimitiveEmulatedFill)); FALLBACK (log once): Fallback to SW vertex processing, m_disable_code: 800; FALLBACK (log once): Fallback to SW vertex processing in drawCore, m_disable_code: 800; ```. ### ROOT version. master. ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15348
https://github.com/root-project/root/pull/15349:89,Safety,detect,detect,89,Check qt5/qt6/cef in cmake before building ROOTWebDisplay library. Required to correctly detect if such displays can be used by default,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15349
https://github.com/root-project/root/pull/15352:21,Deployability,release,release,21,JSROOT code for 6.32 release. It is copy of special branch from JSROOT repository: https://github.com/root-project/jsroot/tree/v6-32-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15352
https://github.com/root-project/root/pull/15352:136,Deployability,patch,patches,136,JSROOT code for 6.32 release. It is copy of special branch from JSROOT repository: https://github.com/root-project/jsroot/tree/v6-32-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15352
https://github.com/root-project/root/issues/15353:172,Deployability,update,updated,172,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```; TCanvas c1;; TH1F h(""h"",""h"", 64, -4,4);; h.FillRandom(""gaus"");; h.Draw();; TCanvas c2;; h.FillRandom(""gaus"",10000);; h.Draw();; ```; Classic graphics: One histo with 5k entries and one with 15k entries; Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/issues/15353:488,Deployability,Install,Installation,488,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a difference in the behaviour of the 2 graphics backends, when drawing on 2 canvases an updated historgam. ### Reproducer. ```; TCanvas c1;; TH1F h(""h"",""h"", 64, -4,4);; h.FillRandom(""gaus"");; h.Draw();; TCanvas c2;; h.FillRandom(""gaus"",10000);; h.Draw();; ```; Classic graphics: One histo with 5k entries and one with 15k entries; Web graphics: Two histos with 15k entries. ### ROOT version. master. ### Installation method. sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15353
https://github.com/root-project/root/pull/15355:24,Integrability,depend,depends,24,"It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:; * `GTEST_SKIP`; * `TestWithParam` with non-default constructible type; * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:144,Testability,Test,TestWithParam,144,"It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:; * `GTEST_SKIP`; * `TestWithParam` with non-default constructible type; * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:207,Testability,test,test,207,"It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:; * `GTEST_SKIP`; * `TestWithParam` with non-default constructible type; * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15355:246,Testability,test,test,246,"It appears ROOT already depends on at least GTest 1.10.0, by using the following in some places without compatibility code:; * `GTEST_SKIP`; * `TestWithParam` with non-default constructible type; * The new ""test suite"" naming instead of the old ""test case"" (I found at least `TYPED_TEST_SUITE` and `SetUpTestSuite` + `TearDownTestSuite`). Given that an older version is only found on EL8, where we have been using `builtin_gtest` since a while, I propose to drop the remaining compatibility code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15355
https://github.com/root-project/root/pull/15363:210,Deployability,update,updated,210,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/10010. All the credit for this fix goes to @pcanal and anaumann. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15363
https://github.com/root-project/root/pull/15363:180,Testability,test,tested,180,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/10010. All the credit for this fix goes to @pcanal and anaumann. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15363
https://github.com/root-project/root/issues/15364:268,Deployability,Install,Installation,268,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The tutorial tutorial-roostats-rs101_limitexample-py segfaults on windows 32 bit. ### Reproducer. Run tutorial-roostats-rs101_limitexample-py on Win 32 bit. ### ROOT version. master, 6.32. ### Installation method. all. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15364
https://github.com/root-project/root/pull/15367:40,Deployability,release,released,40,"Numba 0.59 with Python 3.12 was already released:; https://github.com/numba/numba/releases. With this change, we make sure the numba features in ROOT are still tested in environments with Python 3.12 (like for example Ubuntu 24.04 or Arch Linux as of today).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15367
https://github.com/root-project/root/pull/15367:82,Deployability,release,releases,82,"Numba 0.59 with Python 3.12 was already released:; https://github.com/numba/numba/releases. With this change, we make sure the numba features in ROOT are still tested in environments with Python 3.12 (like for example Ubuntu 24.04 or Arch Linux as of today).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15367
https://github.com/root-project/root/pull/15367:160,Testability,test,tested,160,"Numba 0.59 with Python 3.12 was already released:; https://github.com/numba/numba/releases. With this change, we make sure the numba features in ROOT are still tested in environments with Python 3.12 (like for example Ubuntu 24.04 or Arch Linux as of today).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15367
https://github.com/root-project/root/pull/15368:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8367,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15368:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8367,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15368
https://github.com/root-project/root/pull/15369:158,Deployability,update,updated,158,# This Pull request:. ## Changes or fixes:. Fixes crash seen in https://its.cern.ch/jira/browse/ROOT-9918. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15369
https://github.com/root-project/root/pull/15369:128,Testability,test,tested,128,# This Pull request:. ## Changes or fixes:. Fixes crash seen in https://its.cern.ch/jira/browse/ROOT-9918. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15369
https://github.com/root-project/root/issues/15370:291,Availability,avail,available,291,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,; https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message; ```; unable to export class 'RooBreitWigner' - no export keys available!; there are several possible reasons for this:; 1. RooBreitWigner is a custom class that you or some package you are using added.; 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for.; 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename); either way, please make sure that:; 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available; 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this!; (int) 0; ```. ### Reproducer. 1. Use the latest root,; `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`; ```c++; #include ""RooRealVar.h""; #include ""RooBreitWigner.h""; #include ""RooWorkspace.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(); {; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);; RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");; w.import(bw);. RooJSONFactoryWSTool tool(w);; tool.exportJSON(""standard_pdf.json"");; return 0;; }; ```. ### ROOT version. ```; root --version; ROOT Version: 6.33/01; Built for linuxx8664gcc on Apr 26 2024, 23:06:35; From heads/master@v6-31-01-1819-gb5ad658677; ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:874,Availability,avail,available,874,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,; https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message; ```; unable to export class 'RooBreitWigner' - no export keys available!; there are several possible reasons for this:; 1. RooBreitWigner is a custom class that you or some package you are using added.; 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for.; 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename); either way, please make sure that:; 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available; 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this!; (int) 0; ```. ### Reproducer. 1. Use the latest root,; `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`; ```c++; #include ""RooRealVar.h""; #include ""RooBreitWigner.h""; #include ""RooWorkspace.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(); {; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);; RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");; w.import(bw);. RooJSONFactoryWSTool tool(w);; tool.exportJSON(""standard_pdf.json"");; return 0;; }; ```. ### ROOT version. ```; root --version; ROOT Version: 6.33/01; Built for linuxx8664gcc on Apr 26 2024, 23:06:35; From heads/master@v6-31-01-1819-gb5ad658677; ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:1891,Deployability,Install,Installation,1891,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,; https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message; ```; unable to export class 'RooBreitWigner' - no export keys available!; there are several possible reasons for this:; 1. RooBreitWigner is a custom class that you or some package you are using added.; 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for.; 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename); either way, please make sure that:; 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available; 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this!; (int) 0; ```. ### Reproducer. 1. Use the latest root,; `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`; ```c++; #include ""RooRealVar.h""; #include ""RooBreitWigner.h""; #include ""RooWorkspace.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(); {; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);; RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");; w.import(bw);. RooJSONFactoryWSTool tool(w);; tool.exportJSON(""standard_pdf.json"");; return 0;; }; ```. ### ROOT version. ```; root --version; ROOT Version: 6.33/01; Built for linuxx8664gcc on Apr 26 2024, 23:06:35; From heads/master@v6-31-01-1819-gb5ad658677; ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:99,Integrability,message,message,99,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,; https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message; ```; unable to export class 'RooBreitWigner' - no export keys available!; there are several possible reasons for this:; 1. RooBreitWigner is a custom class that you or some package you are using added.; 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for.; 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename); either way, please make sure that:; 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available; 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this!; (int) 0; ```. ### Reproducer. 1. Use the latest root,; `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`; ```c++; #include ""RooRealVar.h""; #include ""RooBreitWigner.h""; #include ""RooWorkspace.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(); {; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);; RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");; w.import(bw);. RooJSONFactoryWSTool tool(w);; tool.exportJSON(""standard_pdf.json"");; return 0;; }; ```. ### ROOT version. ```; root --version; ROOT Version: 6.33/01; Built for linuxx8664gcc on Apr 26 2024, 23:06:35; From heads/master@v6-31-01-1819-gb5ad658677; ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:220,Integrability,message,message,220,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,; https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message; ```; unable to export class 'RooBreitWigner' - no export keys available!; there are several possible reasons for this:; 1. RooBreitWigner is a custom class that you or some package you are using added.; 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for.; 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename); either way, please make sure that:; 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available; 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this!; (int) 0; ```. ### Reproducer. 1. Use the latest root,; `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`; ```c++; #include ""RooRealVar.h""; #include ""RooBreitWigner.h""; #include ""RooWorkspace.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(); {; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);; RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");; w.import(bw);. RooJSONFactoryWSTool tool(w);; tool.exportJSON(""standard_pdf.json"");; return 0;; }; ```. ### ROOT version. ```; root --version; ROOT Version: 6.33/01; Built for linuxx8664gcc on Apr 26 2024, 23:06:35; From heads/master@v6-31-01-1819-gb5ad658677; ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:713,Performance,load,loadExportKeys,713,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,; https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message; ```; unable to export class 'RooBreitWigner' - no export keys available!; there are several possible reasons for this:; 1. RooBreitWigner is a custom class that you or some package you are using added.; 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for.; 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename); either way, please make sure that:; 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available; 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this!; (int) 0; ```. ### Reproducer. 1. Use the latest root,; `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`; ```c++; #include ""RooRealVar.h""; #include ""RooBreitWigner.h""; #include ""RooWorkspace.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(); {; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);; RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");; w.import(bw);. RooJSONFactoryWSTool tool(w);; tool.exportJSON(""standard_pdf.json"");; return 0;; }; ```. ### ROOT version. ```; root --version; ROOT Version: 6.33/01; Built for linuxx8664gcc on Apr 26 2024, 23:06:35; From heads/master@v6-31-01-1819-gb5ad658677; ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/issues/15370:616,Usability,clear,clearExportKeys,616,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,; https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message; ```; unable to export class 'RooBreitWigner' - no export keys available!; there are several possible reasons for this:; 1. RooBreitWigner is a custom class that you or some package you are using added.; 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for.; 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename); either way, please make sure that:; 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available; 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this!; (int) 0; ```. ### Reproducer. 1. Use the latest root,; `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`; ```c++; #include ""RooRealVar.h""; #include ""RooBreitWigner.h""; #include ""RooWorkspace.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(); {; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);; RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");; w.import(bw);. RooJSONFactoryWSTool tool(w);; tool.exportJSON(""standard_pdf.json"");; return 0;; }; ```. ### ROOT version. ```; root --version; ROOT Version: 6.33/01; Built for linuxx8664gcc on Apr 26 2024, 23:06:35; From heads/master@v6-31-01-1819-gb5ad658677; ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15370
https://github.com/root-project/root/pull/15371:231,Deployability,update,updated,231,# This Pull request:; roostats tutorials translated into Python; ## Changes or fixes:; The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3; - [ yes ] updated the docs . This PR fixes # ; https://github.com/root-project/root/issues/8758 ; and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15371:183,Testability,test,tested,183,# This Pull request:; roostats tutorials translated into Python; ## Changes or fixes:; The unmarked C++ roostats tutorials have been translated into python3. ## Checklist:. - [ yes ] tested changes locally with ipython3; - [ yes ] updated the docs . This PR fixes # ; https://github.com/root-project/root/issues/8758 ; and should close the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15371
https://github.com/root-project/root/pull/15374:316,Deployability,update,updated,316,# This Pull request:; Makes non-breaking changes to the existing code to make cling similar to upstream clang-repl. The idea is to make more changes in a similar fashion and completely swap out certain functions when they are similar enough.; ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/pull/15374:286,Testability,test,tested,286,# This Pull request:; Makes non-breaking changes to the existing code to make cling similar to upstream clang-repl. The idea is to make more changes in a similar fashion and completely swap out certain functions when they are similar enough.; ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15374
https://github.com/root-project/root/issues/15375:314,Deployability,update,update,314,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.LoadText(; """"""; class Foo {; public:; void bar() { throw std::logic_error(""This is fine""); }; void bar() const { throw std::logic_error(""This is fine""); }; };; """"""; ); foo = ROOT.Foo(); try:; foo.bar(); except ROOT.std.logic_error:; print(""Caught""); pass; ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:811,Deployability,release,release,811,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.LoadText(; """"""; class Foo {; public:; void bar() { throw std::logic_error(""This is fine""); }; void bar() const { throw std::logic_error(""This is fine""); }; };; """"""; ); foo = ROOT.Foo(); try:; foo.bar(); except ROOT.std.logic_error:; print(""Caught""); pass; ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:850,Deployability,release,release,850,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.LoadText(; """"""; class Foo {; public:; void bar() { throw std::logic_error(""This is fine""); }; void bar() const { throw std::logic_error(""This is fine""); }; };; """"""; ); foo = ROOT.Foo(); try:; foo.bar(); except ROOT.std.logic_error:; print(""Caught""); pass; ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:877,Deployability,Install,Installation,877,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.LoadText(; """"""; class Foo {; public:; void bar() { throw std::logic_error(""This is fine""); }; void bar() const { throw std::logic_error(""This is fine""); }; };; """"""; ); foo = ROOT.Foo(); try:; foo.bar(); except ROOT.std.logic_error:; print(""Caught""); pass; ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:918,Deployability,release,releases,918,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.LoadText(; """"""; class Foo {; public:; void bar() { throw std::logic_error(""This is fine""); }; void bar() const { throw std::logic_error(""This is fine""); }; };; """"""; ); foo = ROOT.Foo(); try:; foo.bar(); except ROOT.std.logic_error:; print(""Caught""); pass; ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/issues/15375:429,Performance,Load,LoadText,429,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.LoadText(; """"""; class Foo {; public:; void bar() { throw std::logic_error(""This is fine""); }; void bar() const { throw std::logic_error(""This is fine""); }; };; """"""; ); foo = ROOT.Foo(); try:; foo.bar(); except ROOT.std.logic_error:; print(""Caught""); pass; ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15375
https://github.com/root-project/root/pull/15376:123,Modifiability,refactor,refactoring,123,The `libcppyy` is an implementation detail of `cppyy` that we should not include directly. This is done to anticipate more refactoring later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15376
https://github.com/root-project/root/pull/15377:43,Modifiability,variab,variable,43,Make sure the saved TGraph is a proper C++ variable.; As suggested here: https://its.cern.ch/jira/browse/ROOT-8277; it works also for the classes inheriting from TGraph,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/pull/15377:146,Modifiability,inherit,inheriting,146,Make sure the saved TGraph is a proper C++ variable.; As suggested here: https://its.cern.ch/jira/browse/ROOT-8277; it works also for the classes inheriting from TGraph,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15377
https://github.com/root-project/root/issues/15378:542,Deployability,Install,Installation,542,"### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python; import cppyy. cppyy.cppdef("""""". template<class T>; struct Foo {; Foo(T v) : val{v} {}; T val;; };. template <class T>; Foo<T> operator+(Foo<T> const &a, Foo<T> const &b); {; return Foo<T>{a.val + b.val};; }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4); b = klass(7). a + b; ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:; https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer; * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/issues/15378:746,Usability,simpl,simplified,746,"### Description. Operators like `operator+` don't work in cppyy if they are implemented as template functions. ### Reproducer. ```python; import cppyy. cppyy.cppdef("""""". template<class T>; struct Foo {; Foo(T v) : val{v} {}; T val;; };. template <class T>; Foo<T> operator+(Foo<T> const &a, Foo<T> const &b); {; return Foo<T>{a.val + b.val};; }. """"""). klass = cppyy.gbl.Foo[""int""]. a = klass(4); b = klass(7). a + b; ```. ### ROOT version. At least ROOT 6.04 according to original Jira ticket:; https://its.cern.ch/jira/browse/ROOT-7717. ### Installation method. Build `master` from source. ### Operating system. Arch Linux. ### Additional context. * same problem as reported in [ROOT-7717](https://its.cern.ch/jira/browse/ROOT-7717), but with a simplified reproducer; * reproducer works with upstream cppyy, so the problem is likely related to the cppyy-backend (e.g. ROOT meta or CallFunc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15378
https://github.com/root-project/root/pull/15380:40,Deployability,release,release,40,"Fixes the `make distsrc` command in the release checklist, so far working until 6.30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15380
https://github.com/root-project/root/pull/15382:40,Availability,error,error,40,# This Pull request:; * Fixes rendering error of REveBoxSet on Chrome OSX and Safari.; https://github.com/UL-FRI-LGM/RenderCore/pull/18. * Fixes transparency settings of irregular REveBoxSet type . * Improve REveTable layout,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15382
https://github.com/root-project/root/issues/15384:168,Modifiability,variab,variable,168,"### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version.; The core of the code is this switch:; ```; switch(c) {; case '+': repl = ""pL""; break;; case '-': repl = ""mI""; break;; case '*': repl = ""mU""; break;; case '/': repl = ""dI""; break;; case '&': repl = ""aN""; break;; case '%': repl = ""pE""; break;; case '|': repl = ""oR""; break;; case '^': repl = ""hA""; break;; case '>': repl = ""gR""; break;; case '<': repl = ""lE""; break;; case '=': repl = ""eQ""; break;; case '~': repl = ""wA""; break;; case '.': repl = ""dO""; break;; case '(': repl = ""oP""; break;; case ')': repl = ""cP""; break;; case '[': repl = ""oB""; break;; case ']': repl = ""cB""; break;; case '!': repl = ""nO""; break;; case ',': repl = ""cO""; break;; case '$': repl = ""dA""; break;; case ' ': repl = ""sP""; break;; case ':': repl = ""cL""; break;; case '""': repl = ""dQ""; break;; case '@': repl = ""aT""; break;; case '\'': repl = ""sQ""; break;; case '\\': repl = ""fI""; break;; }; ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;; I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/issues/15384:252,Modifiability,variab,variable,252,"### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version.; The core of the code is this switch:; ```; switch(c) {; case '+': repl = ""pL""; break;; case '-': repl = ""mI""; break;; case '*': repl = ""mU""; break;; case '/': repl = ""dI""; break;; case '&': repl = ""aN""; break;; case '%': repl = ""pE""; break;; case '|': repl = ""oR""; break;; case '^': repl = ""hA""; break;; case '>': repl = ""gR""; break;; case '<': repl = ""lE""; break;; case '=': repl = ""eQ""; break;; case '~': repl = ""wA""; break;; case '.': repl = ""dO""; break;; case '(': repl = ""oP""; break;; case ')': repl = ""cP""; break;; case '[': repl = ""oB""; break;; case ']': repl = ""cB""; break;; case '!': repl = ""nO""; break;; case ',': repl = ""cO""; break;; case '$': repl = ""dA""; break;; case ' ': repl = ""sP""; break;; case ':': repl = ""cL""; break;; case '""': repl = ""dQ""; break;; case '@': repl = ""aT""; break;; case '\'': repl = ""sQ""; break;; case '\\': repl = ""fI""; break;; }; ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;; I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15384
https://github.com/root-project/root/pull/15385:62,Testability,test,testing,62,This is a temporary measure in the context of the large-scale testing of RNTuple with the CERN IT department.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15385
https://github.com/root-project/root/pull/15386:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/15384,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15386:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/15384,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15386
https://github.com/root-project/root/pull/15389:64,Testability,test,test,64,The distribution is at its EOL. [I tried to resubmit the PR and test automatic backporting],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15389
https://github.com/root-project/root/issues/15396:144,Availability,error,error,144,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:; ```; Error: [ERROR] Mean squared error is 115.737 (>30.0); ```; The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:157,Availability,Error,Error,157,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:; ```; Error: [ERROR] Mean squared error is 115.737 (>30.0); ```; The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:165,Availability,ERROR,ERROR,165,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:; ```; Error: [ERROR] Mean squared error is 115.737 (>30.0); ```; The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:185,Availability,error,error,185,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:; ```; Error: [ERROR] Mean squared error is 115.737 (>30.0); ```; The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:314,Deployability,release,release,314,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:; ```; Error: [ERROR] Mean squared error is 115.737 (>30.0); ```; The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:487,Deployability,Install,Installation,487,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:; ```; Error: [ERROR] Mean squared error is 115.737 (>30.0); ```; The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:79,Testability,test,test,79,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:; ```; Error: [ERROR] Mean squared error is 115.737 (>30.0); ```; The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/issues/15396:220,Testability,test,test,220,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:; ```; Error: [ERROR] Mean squared error is 115.737 (>30.0); ```; The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15396
https://github.com/root-project/root/pull/15398:22,Usability,simpl,simplify,22,This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/pull/15398:124,Usability,simpl,simplify,124,This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15398
https://github.com/root-project/root/issues/15399:2490,Deployability,Install,Installation,2490,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>; #include <TFile.h>; #include <TTree.h>; #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(); {. {; std::cout << ""Begin scope\n"";; ROOT::RDataFrame rdf(1);; auto df1 = rdf.Define(""x"", ""42"");; std::cout << ""End scope\n"";; }; }; ```. Compile and run with valgrind:; ```; $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`; valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1; ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2211,Modifiability,config,config,2211,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>; #include <TFile.h>; #include <TTree.h>; #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(); {. {; std::cout << ""Begin scope\n"";; ROOT::RDataFrame rdf(1);; auto df1 = rdf.Define(""x"", ""42"");; std::cout << ""End scope\n"";; }; }; ```. Compile and run with valgrind:; ```; $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`; valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1; ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:1292,Performance,optimiz,optimization,1292,"d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>; #include <TFile.h>; #include <TTree.h>; #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(); {. {; std::cout << ""Begin scope\n"";; ROOT::RDataFrame rdf(1);; auto df1 = rdf.Define(""x"", ""42"");; std::cout << ""End scope\n"";; }; }; ```. Compile and run with valgrind:; ```; $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`; valgrind --leak-check=full -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2339,Testability,log,log,2339,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>; #include <TFile.h>; #include <TTree.h>; #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(); {. {; std::cout << ""Begin scope\n"";; ROOT::RDataFrame rdf(1);; auto df1 = rdf.Define(""x"", ""42"");; std::cout << ""End scope\n"";; }; }; ```. Compile and run with valgrind:; ```; $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`; valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1; ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2371,Testability,log,log,2371,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>; #include <TFile.h>; #include <TTree.h>; #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(); {. {; std::cout << ""Begin scope\n"";; ROOT::RDataFrame rdf(1);; auto df1 = rdf.Define(""x"", ""42"");; std::cout << ""End scope\n"";; }; }; ```. Compile and run with valgrind:; ```; $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`; valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1; ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2391,Testability,log,log,2391,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>; #include <TFile.h>; #include <TTree.h>; #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(); {. {; std::cout << ""Begin scope\n"";; ROOT::RDataFrame rdf(1);; auto df1 = rdf.Define(""x"", ""42"");; std::cout << ""End scope\n"";; }; }; ```. Compile and run with valgrind:; ```; $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`; valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1; ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/issues/15399:2457,Testability,log,log,2457,"m/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>; #include <TFile.h>; #include <TTree.h>; #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(); {. {; std::cout << ""Begin scope\n"";; ROOT::RDataFrame rdf(1);; auto df1 = rdf.Define(""x"", ""42"");; std::cout << ""End scope\n"";; }; }; ```. Compile and run with valgrind:; ```; $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`; valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp ./repro_leak.out > valgrind.log 2>&1; ```. See the attached log file. [valgrind.log](https://github.com/root-project/root/files/15185034/valgrind.log). ### ROOT version. Any. ### Installation method. Build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15399
https://github.com/root-project/root/pull/15400:58,Energy Efficiency,allocate,allocate,58,"If a node of the computation graph needs JITting, it will allocate objects on the heap which are only freed if the JITting happens. In case the computation graph is never triggered, previously the code to be JITted was not run. Fix it by making sure that at destruction time an RDataFrame calls the JIT compilation through its RLoopManager. Also, move to a better read/write locking with the more modern ROOT::gCoreMutex. Fixes https://github.com/root-project/root/issues/15399",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15400
https://github.com/root-project/root/pull/15401:311,Availability,redundant,redundant,311,"After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:41,Deployability,configurat,configuration,41,"After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:41,Modifiability,config,configuration,41,"After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:305,Safety,avoid,avoid,305,"After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:311,Safety,redund,redundant,311,"After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15401:62,Usability,simpl,simplified,62,"After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15401
https://github.com/root-project/root/pull/15402:693,Deployability,update,update,693,"There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:; https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:76,Usability,clear,clearly,76,"There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:; https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:84,Usability,simpl,simplify,84,"There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:; https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:127,Usability,simpl,simplify,127,"There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:; https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15402:398,Usability,clear,clearly,398,"There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:; https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15402
https://github.com/root-project/root/pull/15403:69,Availability,Error,Error,69,This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/pull/15403:100,Testability,test,test,100,This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15403
https://github.com/root-project/root/issues/15405:838,Deployability,Install,Installation,838,"### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:536,Usability,simpl,simply,536,"### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15405:650,Usability,simpl,simply,650,"### Explain what you would like to see improved and how. The [documentation](https://root.cern.ch/doc/v632/classRooMCStudy.html#a8123a2ac2bfc1d97796224571b9e0e4a) for the `RooMCStudy` constructor says for the argument `ExternalConstraints`: ""Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy."" This is not correct. Looking at the [source code](https://root.cern.ch/doc/v632/RooMCStudy_8cxx_source.html#l00171), it appears that the `ExternalConstraints` are simply added to the fit options that are eventually passed internally to `fitTo`. It would be better, I think, to simply eliminate this as an argument to `RooMCStudy`. It should instead just be allowed as part of the arbitrary `FitOptions`. This would be more transparent. ### ROOT version. v6.32. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15405
https://github.com/root-project/root/issues/15406:715,Deployability,release,release,715,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first seen in https://github.com/cms-sw/cmssw/issues/44670, `TEnum::GetEnum` does not seem to see 'through' using statements. ```; root [1] namespace A { enum E { kOne }; }; root [2] namespace B { using A::E; }; root [3] TEnum::GetEnum(""A::E""); (TEnum *) 0x600000cc9770; root [4] TEnum::GetEnum(""B::E""); (TEnum *) nullptr; root [5] namespace C { using namespace A; }; root [6] TEnum::GetEnum(""C::E""); (TEnum *) nullptr; ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```; namespace reco; {; namespace btau; {; enum class TaggingVariableName {; kOne; };; } // namespace btau; using btau::TaggingVariableName;. struct TaggingVariableList {; bool get(TaggingVariableName in) { return true; };; };; } // namespace reco. int enumusing() ; {; 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");; if (!e1); return 1;; auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");; if (!e2); return 2;; return 0;; }. int related_enumusing(); {; auto c = TClass::GetClass(""reco::TaggingVariableList"");; auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));; if (!m); return 1;; auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));; if (!arg); return 2;; std::string target(""reco::btau::TaggingVariableName"");; std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()); return 0;. if (target == arg->GetTypeName()); return 3;. return 4;; }; ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. `TClass::GetClass` handles properly direct usin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15406:1877,Deployability,Install,Installation,1877,"m::GetEnum(""B::E""); (TEnum *) nullptr; root [5] namespace C { using namespace A; }; root [6] TEnum::GetEnum(""C::E""); (TEnum *) nullptr; ```. ### Reproducer. With file `enumusing.cxx` (see below) return 1 instead 0;. The issue was uncovered was investigating the change/improvement shown in `related_enumusing` where the return value on master and v6-32 release candidate (due to commit fa278745f2141ea02d40ed27af986ac8729dee2b), the execution now return `0` (new correct behavior) instead of `3` (old inaccurate behavior but expected by the user). ```; namespace reco; {; namespace btau; {; enum class TaggingVariableName {; kOne; };; } // namespace btau; using btau::TaggingVariableName;. struct TaggingVariableList {; bool get(TaggingVariableName in) { return true; };; };; } // namespace reco. int enumusing() ; {; 	auto e1 = TEnum::GetEnum(""reco::TaggingVariableName"");; if (!e1); return 1;; auto e2 = TEnum::GetEnum(""reco::btau::TaggingVariableName"");; if (!e2); return 2;; return 0;; }. int related_enumusing(); {; auto c = TClass::GetClass(""reco::TaggingVariableList"");; auto m = static_cast<TMethod*>(c->GetListOfMethods()->FindObject(""get""));; if (!m); return 1;; auto arg = static_cast<TMethodArg*>(m->GetListOfMethodArgs()->At(0));; if (!arg); return 2;; std::string target(""reco::btau::TaggingVariableName"");; std::string newtype(""reco::TaggingVariableName"");. if (newtype == arg->GetTypeName()); return 0;. if (target == arg->GetTypeName()); return 3;. return 4;; }; ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. `TClass::GetClass` handles properly direct using statement; ```; root [3] namespace A { class B {}; }; root [4] TClass::GetClass(""A::B""); (TClass *) 0x13af817f0; root [5] namespace C { using A::B; }; root [6] TClass::GetClass(""C::B""); (TClass *) 0x13af817f0; ```; but not using namespace statement:; ```; root [7] namespace D { using namespace A; }; root [8] TClass::GetClass(""D::B""); (TClass *) nullptr; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15406
https://github.com/root-project/root/issues/15407:982,Availability,avail,available,982,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:; ```; (lldb) p sofar->dumpAsDecl(); NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C; `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'; ```; will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```; root [0] namespace A { enum E { kOne }; class C; }; root [1] namespace B { using namespace A; }; root [2] TClass::GetClass(""A::C""); Warning in <TClass::Init>: no dictionary for class A::C is available; (TClass *) 0x12fe265f0; root [3] TClass::GetClass(""B::C""); (TClass *) nullptr; root [4] TEnum::GetEnum(""A::E""); (TEnum *) 0x600000e64c30; root [5] TEnum::GetEnum(""B::E""); (TEnum *) nullptr; ```. ```; namespace A { enum E { kOne }; class C; }; namespace B { using namespace A; }. int testing(); {; 	auto c = TClass::GetClass(""B::C"");; if (!c) ; return 1;; if (c != TClass::GetClass(""A::E"");; return 2;. // Should work when PR #15408 is merged but does not.; auto e = TEnum::GetEnum(""B::E""); if (!e); return 3;; if (e != TEnum::GetEnum(""A::E"");; return 4;; return 0;; }; ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1614,Deployability,Install,Installation,1614,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:; ```; (lldb) p sofar->dumpAsDecl(); NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C; `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'; ```; will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```; root [0] namespace A { enum E { kOne }; class C; }; root [1] namespace B { using namespace A; }; root [2] TClass::GetClass(""A::C""); Warning in <TClass::Init>: no dictionary for class A::C is available; (TClass *) 0x12fe265f0; root [3] TClass::GetClass(""B::C""); (TClass *) nullptr; root [4] TEnum::GetEnum(""A::E""); (TEnum *) 0x600000e64c30; root [5] TEnum::GetEnum(""B::E""); (TEnum *) nullptr; ```. ```; namespace A { enum E { kOne }; class C; }; namespace B { using namespace A; }. int testing(); {; 	auto c = TClass::GetClass(""B::C"");; if (!c) ; return 1;; if (c != TClass::GetClass(""A::E"");; return 2;. // Should work when PR #15408 is merged but does not.; auto e = TEnum::GetEnum(""B::E""); if (!e); return 3;; if (e != TEnum::GetEnum(""A::E"");; return 4;; return 0;; }; ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:240,Testability,test,test,240,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:; ```; (lldb) p sofar->dumpAsDecl(); NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C; `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'; ```; will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```; root [0] namespace A { enum E { kOne }; class C; }; root [1] namespace B { using namespace A; }; root [2] TClass::GetClass(""A::C""); Warning in <TClass::Init>: no dictionary for class A::C is available; (TClass *) 0x12fe265f0; root [3] TClass::GetClass(""B::C""); (TClass *) nullptr; root [4] TEnum::GetEnum(""A::E""); (TEnum *) 0x600000e64c30; root [5] TEnum::GetEnum(""B::E""); (TEnum *) nullptr; ```. ```; namespace A { enum E { kOne }; class C; }; namespace B { using namespace A; }. int testing(); {; 	auto c = TClass::GetClass(""B::C"");; if (!c) ; return 1;; if (c != TClass::GetClass(""A::E"");; return 2;. // Should work when PR #15408 is merged but does not.; auto e = TEnum::GetEnum(""B::E""); if (!e); return 3;; if (e != TEnum::GetEnum(""A::E"");; return 4;; return 0;; }; ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/issues/15407:1276,Testability,test,testing,1276,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:; ```; (lldb) p sofar->dumpAsDecl(); NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C; `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'; ```; will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```; root [0] namespace A { enum E { kOne }; class C; }; root [1] namespace B { using namespace A; }; root [2] TClass::GetClass(""A::C""); Warning in <TClass::Init>: no dictionary for class A::C is available; (TClass *) 0x12fe265f0; root [3] TClass::GetClass(""B::C""); (TClass *) nullptr; root [4] TEnum::GetEnum(""A::E""); (TEnum *) 0x600000e64c30; root [5] TEnum::GetEnum(""B::E""); (TEnum *) nullptr; ```. ```; namespace A { enum E { kOne }; class C; }; namespace B { using namespace A; }. int testing(); {; 	auto c = TClass::GetClass(""B::C"");; if (!c) ; return 1;; if (c != TClass::GetClass(""A::E"");; return 2;. // Should work when PR #15408 is merged but does not.; auto e = TEnum::GetEnum(""B::E""); if (!e); return 3;; if (e != TEnum::GetEnum(""A::E"");; return 4;; return 0;; }; ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15407
https://github.com/root-project/root/pull/15408:91,Testability,test,tested,91,This allows to resolved using statement and find the target enum. This fixes #15406 and is tested by https://github.com/root-project/roottest/pull/1118. This also fixes: https://github.com/root-project/root/issues/12685,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15408
https://github.com/root-project/root/pull/15410:20,Availability,avail,available,20,"Since they are only available for Define and Filter operations, the functionality is not ready yet for wider use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15410
https://github.com/root-project/root/pull/15412:53,Deployability,configurat,configurations,53,"Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:; - The ""march=native"" build, that fixes #12291; - The ""runtime modules off"" build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:122,Deployability,release,releases,122,"Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:; - The ""march=native"" build, that fixes #12291; - The ""runtime modules off"" build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:53,Modifiability,config,configurations,53,"Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:; - The ""march=native"" build, that fixes #12291; - The ""runtime modules off"" build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/pull/15412:37,Testability,test,test,37,"Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:; - The ""march=native"" build, that fixes #12291; - The ""runtime modules off"" build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15412
https://github.com/root-project/root/issues/15413:133,Availability,error,errors,133,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:; ```; /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined; cudnnStatus_t status = cudnnRNNForwardTraining(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:244,Availability,error,error,244,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:; ```; /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined; cudnnStatus_t status = cudnnRNNForwardTraining(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1037,Availability,error,error,1037,"ected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1832,Availability,error,error,1832,"t>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:2833,Availability,error,error,2833,"tatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(50",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:3897,Availability,error,error,3897,"t TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined; cudnnStatus_t status = cudnnRNNForwardTraining(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDesc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4691,Availability,error,error,4691,"ted during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5487,Availability,error,error,5487,"::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6489,Availability,error,error,6489,"atus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Arch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7459,Availability,error,errors,7459,"::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"".; ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7922,Deployability,Install,Installation,7922,"::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"".; ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:354,Safety,detect,detected,354,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:; ```; /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined; cudnnStatus_t status = cudnnRNNForwardTraining(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1149,Safety,detect,detected,1149,"ected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:1936,Safety,detect,detected,1936,"t>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:3000,Safety,detect,detected,3000,"sor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined; cudnnStatus_t status = cudnnRNNForwardTraining(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4007,Safety,detect,detected,4007,"t TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined; cudnnStatus_t status = cudnnRNNForwardTraining(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDesc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:4803,Safety,detect,detected,4803,"ted during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:5591,Safety,detect,detected,5591,"::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:6656,Safety,detect,detected,6656,"or_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"".; ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _N",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/issues/15413:7466,Safety,detect,detected,7466,"::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"".; ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15413
https://github.com/root-project/root/pull/15416:25,Integrability,depend,depend,25,"Building clad should not depend on the result of the connectivity check, but whether it is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15416
https://github.com/root-project/root/pull/15417:91,Security,secur,secure,91,"Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15417
https://github.com/root-project/root/issues/15418:217,Deployability,Install,Installation,217,### Explain what you would like to see improved and how. The RNTuple cluster pool read-ahead window is currently steered by number of clusters. This should be changed to number of bytes. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15418
https://github.com/root-project/root/issues/15419:471,Deployability,Install,Installation,471,"### Explain what you would like to see improved and how. (This description is work in progress). The TKey payload size is limited to a few (1?) GB, which may be too little to store all the required header data of a RNTuple.; The proposed solution is to add an explicit `maxKeySize` field to the RNTuple anchor which encodes this limit and, when a blob is read which exceeds this limit, to interpret it as a list of pointers to other blobs. ### ROOT version. 6.33/01. ### Installation method. source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15419
https://github.com/root-project/root/pull/15423:172,Deployability,update,updated,172,# This Pull request:. ## Changes or fixes:. The xrootd headers in proof/xrdinc are no longer used. This PR removes them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15423
https://github.com/root-project/root/pull/15423:142,Testability,test,tested,142,# This Pull request:. ## Changes or fixes:. The xrootd headers in proof/xrdinc are no longer used. This PR removes them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15423
https://github.com/root-project/root/issues/15425:1426,Deployability,Install,Installation,1426,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip); Run:; ```; mkdir files; root FillRootFiles.C; root TestMP.C+; ```; This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/issues/15425:1135,Testability,Test,TestMP,1135,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTreeProcessorMP process events multiple times when you read multiple files using TChain, and some of the files have fewer entries than there are threads. This has been observed using TChain and TSelector, but I haven't tried it out with any other methods of using TTreeProcessorMP. The attached reproducer minimally shows this bug by showing that the Process method is run more than it should be. Another observations that are not shown in the reproducer is that the additional events are repeats of existing events. In the code where I first observed this, we frequently have files where one thread is processing multiple events (5-10ish), and most of them are real events, with the last few being repeats. It also seems like it always tries to process at least 15 events for each file if you use 16 threads, even if those events don't exist; if there are more than 15 events than it seems to behave as expected. ### Reproducer. [mp_bug.zip](https://github.com/root-project/root/files/15226978/mp_bug.zip); Run:; ```; mkdir files; root FillRootFiles.C; root TestMP.C+; ```; This will create 100 root files with 1 entry each called `files/f_0###.root`. It will then use TTreeProcessorMP with 16 threads to read through the files and count the number of events read. This should be 100; instead it is 1500. ### ROOT version. v6.28/06 and 6.26/10. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15425
https://github.com/root-project/root/pull/15426:124,Deployability,release,release-notes,124,"The `builtin_openssl` option was specifically introduced with ROOT 6.06 for macOS support:. * https://root.cern.ch/doc/v606/release-notes.html. * https://github.com/root-project/root/commit/e113fd8e9c56f5cdf23f2fd7d5f2504234ffca0e. For Linux or Windows, it is not needed. @jblomer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15426
https://github.com/root-project/root/pull/15427:170,Deployability,update,updated,170,"# This Pull request:. ## Changes or fixes:. JsMVA was moved to ROOT.JsMVA, so ""from JsMVA import ..."" no longer works. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15427
https://github.com/root-project/root/pull/15427:140,Testability,test,tested,140,"# This Pull request:. ## Changes or fixes:. JsMVA was moved to ROOT.JsMVA, so ""from JsMVA import ..."" no longer works. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15427
https://github.com/root-project/root/issues/15430:75,Availability,Down,Downstream,75,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6.; 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only; AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr.; You can follow these instructions to test locally in mock if your package builds with Python 3.13:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:881,Availability,down,downstream,881,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6.; 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only; AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr.; You can follow these instructions to test locally in mock if your package builds with Python 3.13:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:998,Deployability,Install,Installation,998,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6.; 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only; AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr.; You can follow these instructions to test locally in mock if your package builds with Python 3.13:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:198,Testability,test,tests,198,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6.; 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only; AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr.; You can follow these instructions to test locally in mock if your package builds with Python 3.13:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:548,Testability,Test,Testing,548,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6.; 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only; AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr.; You can follow these instructions to test locally in mock if your package builds with Python 3.13:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:645,Testability,test,test,645,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6.; 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only; AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr.; You can follow these instructions to test locally in mock if your package builds with Python 3.13:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:661,Testability,mock,mock,661,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6.; 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only; AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr.; You can follow these instructions to test locally in mock if your package builds with Python 3.13:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15430:836,Testability,mock,mock,836,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6.; 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only; AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr.; You can follow these instructions to test locally in mock if your package builds with Python 3.13:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15430
https://github.com/root-project/root/issues/15434:661,Deployability,Install,Installation,661,"### Explain what you would like to see improved and how. The [TNamed ctor](https://root.cern/doc/master/classTNamed.html#a92b15a72a05ddf8f23c67023a29ee6a9) currently takes TString by const reference:. ```cpp; TNamed::TNamed(const TString& name, const TString& title); ```. Reading <https://www.cppstories.com/2018/08/init-string-member/> it seems, that it would be a good idea to instead pass it by value and then use move in the ctor?. ```diff; - TNamed(const TString &name, const TString &title) : fName(name), fTitle(title) { }; + TNamed(TString name, TString title) : fName(std::move(name)), fTitle(std::move(title)) { }; ```. ### ROOT version. master. ### Installation method. none, just looking at the source code. ### Operating system. any. ### Additional context. We're currently looking at improving the ctors of our classes and noticed the double construction of TString, if we don't pass as `const char*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15434
https://github.com/root-project/root/pull/15435:338,Deployability,install,installed,338,Make sure we're using the macOS-native framework version in the OpenGL case. See:; * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific; * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:300,Integrability,depend,dependency,300,Make sure we're using the macOS-native framework version in the OpenGL case. See:; * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific; * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15435:265,Safety,avoid,avoids,265,Make sure we're using the macOS-native framework version in the OpenGL case. See:; * https://cmake.org/cmake/help/latest/module/FindOpenGL.html#macos-specific; * https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L22. This avoids indirectly picking up a X11 dependency by using some other OpenGL installed on the system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15435
https://github.com/root-project/root/pull/15437:243,Integrability,depend,dependence,243,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:152,Testability,test,tests,152,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:211,Testability,test,test,211,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:261,Testability,test,test,261,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15437:382,Testability,test,tests,382,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15437
https://github.com/root-project/root/pull/15439:105,Testability,test,tests,105,"Now that we're using a system-compatible version of NumPy on the CI images for these platforms, the TMVA tests should all pass again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15439
https://github.com/root-project/root/issues/15442:462,Deployability,Install,Installation,462,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:132,Security,access,accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called,132,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/issues/15442:238,Usability,simpl,simply,238,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. See the report on the forum https://root-forum.cern.ch/t/accessing-attributes-of-distributed-rdataframe-instance-after-filter-and-define-are-called/59261. This is simply due to distributed RDataFrame not keeping track of the defined columns. In general, the inner, local RDataFrame object is really just an empty shell for now. ### Reproducer. See the report. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15442
https://github.com/root-project/root/pull/15444:80,Energy Efficiency,reduce,reduce,80,"Add member functions to RooAbsData and RooDataHist that forward to `RooAbsData::reduce()`, but cast the return value to the actual type. This is not that useful now except for avoiding some boiler plate code, but will be crucial once we change the return type to `std::unique_ptr` to fix memory leaks: in that case, PyROOT doesn't do the automatic conversion to the actual type anymore, and we would end up with RooDataHists or RooDataSets where we can't call their member functions (unless they are overrides of RooAbsData methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15444:176,Safety,avoid,avoiding,176,"Add member functions to RooAbsData and RooDataHist that forward to `RooAbsData::reduce()`, but cast the return value to the actual type. This is not that useful now except for avoiding some boiler plate code, but will be crucial once we change the return type to `std::unique_ptr` to fix memory leaks: in that case, PyROOT doesn't do the automatic conversion to the actual type anymore, and we would end up with RooDataHists or RooDataSets where we can't call their member functions (unless they are overrides of RooAbsData methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15444
https://github.com/root-project/root/pull/15446:3,Safety,avoid,avoid,3,to avoid warnings when building docu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15446
https://github.com/root-project/root/issues/15447:259,Deployability,Install,Installation,259,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Specifying `-Dminimal=ON` also disables runtime C++ modules on Linux, which is probably not what we want. ### Reproducer. ```; cmake -Dminimal=ON; ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15447
https://github.com/root-project/root/pull/15449:285,Deployability,integrat,integrate,285,"The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:285,Integrability,integrat,integrate,285,"The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:4,Testability,test,test,4,"The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:226,Testability,test,tested,226,"The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:237,Testability,test,testRooCrystalBall,237,"The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15449:336,Testability,test,test,336,"The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15449
https://github.com/root-project/root/pull/15451:190,Deployability,update,updated,190,"This ctor makes the following buggy code compile, but we would prefer it to rather not compile:. ```cpp; TList mylist = new TList();; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary) - added to deprecation list",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15451:160,Testability,test,tested,160,"This ctor makes the following buggy code compile, but we would prefer it to rather not compile:. ```cpp; TList mylist = new TList();; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary) - added to deprecation list",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15451
https://github.com/root-project/root/pull/15458:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/15407,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/pull/15458:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/15407,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15458
https://github.com/root-project/root/issues/15460:110,Modifiability,extend,extends,110,"As first reported in https://github.com/root-project/root/issues/12685:. The problem of not resolving typdefs extends to the specification of the underlying integer type, e.g.; ```; enum A : int {};; TEnum::GetEnum(""A"")->GetUnderlyingType() // --> (EDataType) (kInt_t) : (int) 3; ```; but; ```; enum B : std::int32_t {};; TEnum::GetEnum(""B"")->GetUnderlyingType() // --> (EDataType) (kNumDataTypes) : (int) 23; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15460
https://github.com/root-project/root/pull/15461:19,Modifiability,Extend,Extend,19,This fixes #15460. Extend the test accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15461
https://github.com/root-project/root/pull/15461:30,Testability,test,test,30,This fixes #15460. Extend the test accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15461
https://github.com/root-project/root/pull/15462:19,Modifiability,Extend,Extend,19,This fixes #15460. Extend the test accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15462
https://github.com/root-project/root/pull/15462:30,Testability,test,test,30,This fixes #15460. Extend the test accordingly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15462
https://github.com/root-project/root/pull/15464:381,Availability,failure,failure,381,"The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:367,Deployability,configurat,configuration,367,"The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:367,Modifiability,config,configuration,367,"The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:89,Testability,test,tests,89,"The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:108,Testability,test,tests,108,"The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:256,Testability,test,tests,256,"The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:316,Testability,test,tests,316,"The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15464:267,Usability,clear,clearly,267,"The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15464
https://github.com/root-project/root/pull/15465:31,Safety,avoid,avoid,31,"Remove trailing whitespaces to avoid warnings like these:; ```; /home/rembserj/code/root/tree/treeplayer/src/TTreeFormula.cxx:3760:97: warning: backslash and newline separated by space; 3760 | ""Could not init branch associated to this leaf (%s)."", leaf->GetName()); \; |; /home/rembserj/code/root/tree/treeplayer/src/TTreeFormula.cxx:3829:97: warning: backslash and newline separated by space; 3829 | } \; |; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15465
https://github.com/root-project/root/pull/15467:111,Availability,down,download,111,"The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:456,Availability,down,downloaded,456,"The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:497,Availability,failure,failure,497,"The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:377,Deployability,configurat,configuration,377,"The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:483,Deployability,configurat,configuration,483,"The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:642,Deployability,release,release,642,"The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:130,Integrability,depend,dependency,130,"The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:220,Integrability,depend,dependency,220,"The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:377,Modifiability,config,configuration,377,"The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15467:483,Modifiability,config,configuration,483,"The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15467
https://github.com/root-project/root/pull/15468:60,Deployability,release,release,60,Backport some recent relevant fixes and improvements to the release branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15468
https://github.com/root-project/root/pull/15469:333,Deployability,update,updated,333,"# This Pull request:. Passing by const-reference can mean two constructions (once on the caller, once in the ctor using the TString copy ctor). Instead passing by value and using move semantics in the ctor can reduce this to one construction on the caller and one move in the ctor. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). fixes: #15434",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:210,Energy Efficiency,reduce,reduce,210,"# This Pull request:. Passing by const-reference can mean two constructions (once on the caller, once in the ctor using the TString copy ctor). Instead passing by value and using move semantics in the ctor can reduce this to one construction on the caller and one move in the ctor. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). fixes: #15434",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15469:303,Testability,test,tested,303,"# This Pull request:. Passing by const-reference can mean two constructions (once on the caller, once in the ctor using the TString copy ctor). Instead passing by value and using move semantics in the ctor can reduce this to one construction on the caller and one move in the ctor. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). fixes: #15434",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15469
https://github.com/root-project/root/pull/15471:392,Availability,redundant,redundant,392,"This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:392,Safety,redund,redundant,392,"This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15471:612,Testability,log,logic,612,"This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15471
https://github.com/root-project/root/pull/15472:105,Testability,test,tested,105,No longer supported by (future) C standards. Currently just emits warnings (eg. MacOS 14). Currently not tested in CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15472
https://github.com/root-project/root/issues/15473:160,Availability,fault,fault,160,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here; ```; [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm; FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm; cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h TH",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2122,Availability,fault,fault,2122,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h; Segmentation fault; ```; I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer; ``` bash; # Install mold and have it available in PATH, for example in /usr/bin; export LDFLAGS=""-fuse-ld=mold""; # from the root source; mkdir builddir; cd builddir; cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja; ninja; ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2372,Availability,avail,available,2372,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h; Segmentation fault; ```; I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer; ``` bash; # Install mold and have it available in PATH, for example in /usr/bin; export LDFLAGS=""-fuse-ld=mold""; # from the root source; mkdir builddir; cd builddir; cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja; ninja; ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2347,Deployability,Install,Install,2347,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h; Segmentation fault; ```; I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer; ``` bash; # Install mold and have it available in PATH, for example in /usr/bin; export LDFLAGS=""-fuse-ld=mold""; # from the root source; mkdir builddir; cd builddir; cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja; ninja; ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15473:2632,Deployability,Install,Installation,2632,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h; Segmentation fault; ```; I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer; ``` bash; # Install mold and have it available in PATH, for example in /usr/bin; export LDFLAGS=""-fuse-ld=mold""; # from the root source; mkdir builddir; cd builddir; cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja; ninja; ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15473
https://github.com/root-project/root/issues/15474:399,Availability,error,error,399,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:452,Availability,ERROR,ERROR,452,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:483,Availability,Error,Error,483,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:511,Availability,ERROR,ERROR,511,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:575,Availability,ERROR,ERROR,575,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:836,Availability,Fault,Faulty,836,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:1286,Deployability,Install,Installation,1286,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:405,Integrability,message,message,405,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:249,Performance,load,loaded,249,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:309,Performance,load,loaded,309,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:881,Performance,load,loaded,881,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:497,Security,certificate,certificate,497,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:152,Usability,simpl,simple,152,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/issues/15474:1018,Usability,responsiv,responsive,1018,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15474
https://github.com/root-project/root/pull/15475:352,Deployability,update,updated,352,"…to push. ## Changes or fixes:; Adding a call to vector.reserve() to RField.cxx in (almost) all cases where we know the exact number of elements pushed. Saves a bunch of reallocation especially when the number of pushed elements is not strictly bounded (e.g. number of columns, number of subfields). ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary) - not necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15475
https://github.com/root-project/root/pull/15475:322,Testability,test,tested,322,"…to push. ## Changes or fixes:; Adding a call to vector.reserve() to RField.cxx in (almost) all cases where we know the exact number of elements pushed. Saves a bunch of reallocation especially when the number of pushed elements is not strictly bounded (e.g. number of columns, number of subfields). ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary) - not necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15475
https://github.com/root-project/root/pull/15476:22,Deployability,Update,Update,22,"# This Pull request:; Update the distributed RDataFrame to use the HeadNode _localrdf to keep track of transform operations, and add the ability to call GetColumnNames on a NodeProxy object. . ## Changes or fixes:; - Add GetColumnNames method to NodeProxy which calls the HeadNode GetColumnNames method; - Propagate transform operations to the HeadNode _localrdf, mainly to keep track of user-defined columns . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15442",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:462,Deployability,update,updated,462,"# This Pull request:; Update the distributed RDataFrame to use the HeadNode _localrdf to keep track of transform operations, and add the ability to call GetColumnNames on a NodeProxy object. . ## Changes or fixes:; - Add GetColumnNames method to NodeProxy which calls the HeadNode GetColumnNames method; - Propagate transform operations to the HeadNode _localrdf, mainly to keep track of user-defined columns . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15442",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15476:432,Testability,test,tested,432,"# This Pull request:; Update the distributed RDataFrame to use the HeadNode _localrdf to keep track of transform operations, and add the ability to call GetColumnNames on a NodeProxy object. . ## Changes or fixes:; - Add GetColumnNames method to NodeProxy which calls the HeadNode GetColumnNames method; - Propagate transform operations to the HeadNode _localrdf, mainly to keep track of user-defined columns . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15442",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15476
https://github.com/root-project/root/pull/15477:109,Availability,down,down,109,"In the jitted version of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:322,Availability,error,error,322,"In the jitted version of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:1971,Deployability,update,updated,1971,"on of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:61,Energy Efficiency,allocate,allocated,61,"In the jitted version of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:195,Energy Efficiency,allocate,allocated,195,"In the jitted version of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:697,Energy Efficiency,allocate,allocated,697,"In the jitted version of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:1124,Integrability,Interface,InterfaceUtils,1124,"In the jitted version of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:300,Safety,detect,detected,300,"In the jitted version of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:639,Security,sanitiz,sanitizer,639,"In the jitted version of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:1094,Testability,test,testing-asan,1094,"In the jitted version of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:1820,Testability,test,testing-asan,1820,"on of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15477:1941,Testability,test,tested,1941,"on of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15477
https://github.com/root-project/root/pull/15478:136,Deployability,release,release,136,"In particular, backport the deprecation of the old `TList` constructor and improvements in the build system for better packaging of the release. Corresponding PR in roottest:; https://github.com/root-project/roottest/pull/1124",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15478
https://github.com/root-project/root/issues/15479:285,Availability,error,error-cannot-allocate-memory,285,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi root team,. We are the ATLAS VHbbcc analysis team and we are testing with the new root preview version v6.32-rc1 since it has the bug fix related to the issue: https://root-forum.cern.ch/t/cling-jit-session-error-cannot-allocate-memory/56744. However we met some different behavior in this version compared to the previous 6.32/02 that we use. . 1) The pyROOT, we got a different type when access the RooCategory allowedState name. In the new version, it returns `cppyy.gbl.std.string` object, previously it is a python `str` object. May I ask it is designed or a bug? ; 2) We found this because it crushes when we tried to pass it to `re.findall()` function. But according to the cppyy document, the cppyy should convert `cppyy.gbl.std.string` to `str` automatically when the `str` is needed. So what is the reason for not being converted automatically?; 3) We also found that it takes much longer time to run the fit using the new root version, in our case, a 1-hour fit now takes 3-hours to finish. Is there any hint what may be the cause?. Thanks a lot for your time. Yuhao. ### Reproducer. ```; import ROOT. g = ROOT.TFile.Open(""/afs/cern.ch/work/y/yuhao/public/test.root""); ws=g.combined; simpdf=ws.pdf(""simPdf""); channelCat = simpdf.indexCat(); print(type(channelCat.begin().first)); ```. ### ROOT version. 6.32-rc1. ### Installation method. build from source. ### Operating system. Linux el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:1406,Deployability,Install,Installation,1406,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi root team,. We are the ATLAS VHbbcc analysis team and we are testing with the new root preview version v6.32-rc1 since it has the bug fix related to the issue: https://root-forum.cern.ch/t/cling-jit-session-error-cannot-allocate-memory/56744. However we met some different behavior in this version compared to the previous 6.32/02 that we use. . 1) The pyROOT, we got a different type when access the RooCategory allowedState name. In the new version, it returns `cppyy.gbl.std.string` object, previously it is a python `str` object. May I ask it is designed or a bug? ; 2) We found this because it crushes when we tried to pass it to `re.findall()` function. But according to the cppyy document, the cppyy should convert `cppyy.gbl.std.string` to `str` automatically when the `str` is needed. So what is the reason for not being converted automatically?; 3) We also found that it takes much longer time to run the fit using the new root version, in our case, a 1-hour fit now takes 3-hours to finish. Is there any hint what may be the cause?. Thanks a lot for your time. Yuhao. ### Reproducer. ```; import ROOT. g = ROOT.TFile.Open(""/afs/cern.ch/work/y/yuhao/public/test.root""); ws=g.combined; simpdf=ws.pdf(""simPdf""); channelCat = simpdf.indexCat(); print(type(channelCat.begin().first)); ```. ### ROOT version. 6.32-rc1. ### Installation method. build from source. ### Operating system. Linux el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:298,Energy Efficiency,allocate,allocate-memory,298,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi root team,. We are the ATLAS VHbbcc analysis team and we are testing with the new root preview version v6.32-rc1 since it has the bug fix related to the issue: https://root-forum.cern.ch/t/cling-jit-session-error-cannot-allocate-memory/56744. However we met some different behavior in this version compared to the previous 6.32/02 that we use. . 1) The pyROOT, we got a different type when access the RooCategory allowedState name. In the new version, it returns `cppyy.gbl.std.string` object, previously it is a python `str` object. May I ask it is designed or a bug? ; 2) We found this because it crushes when we tried to pass it to `re.findall()` function. But according to the cppyy document, the cppyy should convert `cppyy.gbl.std.string` to `str` automatically when the `str` is needed. So what is the reason for not being converted automatically?; 3) We also found that it takes much longer time to run the fit using the new root version, in our case, a 1-hour fit now takes 3-hours to finish. Is there any hint what may be the cause?. Thanks a lot for your time. Yuhao. ### Reproducer. ```; import ROOT. g = ROOT.TFile.Open(""/afs/cern.ch/work/y/yuhao/public/test.root""); ws=g.combined; simpdf=ws.pdf(""simPdf""); channelCat = simpdf.indexCat(); print(type(channelCat.begin().first)); ```. ### ROOT version. 6.32-rc1. ### Installation method. build from source. ### Operating system. Linux el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:468,Security,access,access,468,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi root team,. We are the ATLAS VHbbcc analysis team and we are testing with the new root preview version v6.32-rc1 since it has the bug fix related to the issue: https://root-forum.cern.ch/t/cling-jit-session-error-cannot-allocate-memory/56744. However we met some different behavior in this version compared to the previous 6.32/02 that we use. . 1) The pyROOT, we got a different type when access the RooCategory allowedState name. In the new version, it returns `cppyy.gbl.std.string` object, previously it is a python `str` object. May I ask it is designed or a bug? ; 2) We found this because it crushes when we tried to pass it to `re.findall()` function. But according to the cppyy document, the cppyy should convert `cppyy.gbl.std.string` to `str` automatically when the `str` is needed. So what is the reason for not being converted automatically?; 3) We also found that it takes much longer time to run the fit using the new root version, in our case, a 1-hour fit now takes 3-hours to finish. Is there any hint what may be the cause?. Thanks a lot for your time. Yuhao. ### Reproducer. ```; import ROOT. g = ROOT.TFile.Open(""/afs/cern.ch/work/y/yuhao/public/test.root""); ws=g.combined; simpdf=ws.pdf(""simPdf""); channelCat = simpdf.indexCat(); print(type(channelCat.begin().first)); ```. ### ROOT version. 6.32-rc1. ### Installation method. build from source. ### Operating system. Linux el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:139,Testability,test,testing,139,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi root team,. We are the ATLAS VHbbcc analysis team and we are testing with the new root preview version v6.32-rc1 since it has the bug fix related to the issue: https://root-forum.cern.ch/t/cling-jit-session-error-cannot-allocate-memory/56744. However we met some different behavior in this version compared to the previous 6.32/02 that we use. . 1) The pyROOT, we got a different type when access the RooCategory allowedState name. In the new version, it returns `cppyy.gbl.std.string` object, previously it is a python `str` object. May I ask it is designed or a bug? ; 2) We found this because it crushes when we tried to pass it to `re.findall()` function. But according to the cppyy document, the cppyy should convert `cppyy.gbl.std.string` to `str` automatically when the `str` is needed. So what is the reason for not being converted automatically?; 3) We also found that it takes much longer time to run the fit using the new root version, in our case, a 1-hour fit now takes 3-hours to finish. Is there any hint what may be the cause?. Thanks a lot for your time. Yuhao. ### Reproducer. ```; import ROOT. g = ROOT.TFile.Open(""/afs/cern.ch/work/y/yuhao/public/test.root""); ws=g.combined; simpdf=ws.pdf(""simPdf""); channelCat = simpdf.indexCat(); print(type(channelCat.begin().first)); ```. ### ROOT version. 6.32-rc1. ### Installation method. build from source. ### Operating system. Linux el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/issues/15479:1245,Testability,test,test,1245,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi root team,. We are the ATLAS VHbbcc analysis team and we are testing with the new root preview version v6.32-rc1 since it has the bug fix related to the issue: https://root-forum.cern.ch/t/cling-jit-session-error-cannot-allocate-memory/56744. However we met some different behavior in this version compared to the previous 6.32/02 that we use. . 1) The pyROOT, we got a different type when access the RooCategory allowedState name. In the new version, it returns `cppyy.gbl.std.string` object, previously it is a python `str` object. May I ask it is designed or a bug? ; 2) We found this because it crushes when we tried to pass it to `re.findall()` function. But according to the cppyy document, the cppyy should convert `cppyy.gbl.std.string` to `str` automatically when the `str` is needed. So what is the reason for not being converted automatically?; 3) We also found that it takes much longer time to run the fit using the new root version, in our case, a 1-hour fit now takes 3-hours to finish. Is there any hint what may be the cause?. Thanks a lot for your time. Yuhao. ### Reproducer. ```; import ROOT. g = ROOT.TFile.Open(""/afs/cern.ch/work/y/yuhao/public/test.root""); ws=g.combined; simpdf=ws.pdf(""simPdf""); channelCat = simpdf.indexCat(); print(type(channelCat.begin().first)); ```. ### ROOT version. 6.32-rc1. ### Installation method. build from source. ### Operating system. Linux el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15479
https://github.com/root-project/root/pull/15480:57,Modifiability,extend,extended-option-removed-from-fitto-and-createnll,57,Thanks to this forum post:; https://root-forum.cern.ch/t/extended-option-removed-from-fitto-and-createnll/59283. Needs to be backported to 6.32 and 6.30.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15480
https://github.com/root-project/root/issues/15481:582,Availability,error,error,582,"### Description. In an unnamed macro having:; ```; {; gROOT->ProcessLine(statement_1);; statement_2;; }; ```; is process line by line (per se) and `statement_2` should (and does in most case) be able to use declaration made in `statement_1`. In some circumstances it does not. One such circumstance is the test `roottest-cling-return-constRetrunTest_WILL_FAIL` which should actually succeed (the original problem is fixed by moving to `Cling`) but still fails (unexpectedly) with:; ```; Processing run.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./run.C:7:1: error: unknown type name 't02'; t02 t;; ^; ```. ### Reproducer. With the files in [trun.tar.gz](https://github.com/root-project/root/files/15279954/trun.tar.gz); we can set that the declaration in the `ProcessLine` are properly seen in the next lines. For example this version of `trun.C`:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; }; ```; works fine. Note that issuing on the prompt right after the `.x trun.C` the command `gROOT->SetDirLevel(t_1);` or `i123 = t_2;` works as well. But this version:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; gROOT->SetDirLevel(t_1);; }; ```; mysteriously fails with:; ```; Processing trun.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: error: cannot initialize an array element of type 'void *' with an rvalue of type 'TROOT *(*)()'; gROOT->SetDirLevel(t_1);; ^~~~~; /Users/pcanal/root_working/builds/master-pr/include/TROOT.h:407:16: note: expanded from macro 'gROOT'; #define gROOT (ROOT::GetROOT()); ^~~~~~~~~~~~~; ```; The error seems to indicate that the parser is 'prefixing' to `gROOT` something related to `array of void*` and initialization. Similarly; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; i123 = t_2;; }; ```; fails with:; ```; Processing tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:1417,Availability,error,error,1417,"/Users/pcanal/root_working/code/master/roottest/cling/return/./run.C:7:1: error: unknown type name 't02'; t02 t;; ^; ```. ### Reproducer. With the files in [trun.tar.gz](https://github.com/root-project/root/files/15279954/trun.tar.gz); we can set that the declaration in the `ProcessLine` are properly seen in the next lines. For example this version of `trun.C`:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; }; ```; works fine. Note that issuing on the prompt right after the `.x trun.C` the command `gROOT->SetDirLevel(t_1);` or `i123 = t_2;` works as well. But this version:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; gROOT->SetDirLevel(t_1);; }; ```; mysteriously fails with:; ```; Processing trun.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: error: cannot initialize an array element of type 'void *' with an rvalue of type 'TROOT *(*)()'; gROOT->SetDirLevel(t_1);; ^~~~~; /Users/pcanal/root_working/builds/master-pr/include/TROOT.h:407:16: note: expanded from macro 'gROOT'; #define gROOT (ROOT::GetROOT()); ^~~~~~~~~~~~~; ```; The error seems to indicate that the parser is 'prefixing' to `gROOT` something related to `array of void*` and initialization. Similarly; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; i123 = t_2;; }; ```; fails with:; ```; Processing trun.C...; Assertion failed: (Node->getDependence() == ExprDependence::None), function VisitBinaryOperator, file DynamicLookup.cpp, line 628.; Abort trap: 6; ```. And weirdly:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; t_1 = 3;; }; ```; fails with:; ```; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: warning: declaration without the 'auto' keyword is deprecated: function '__cling_Un1Qu30' [-Wdeprecated-declaration",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:1708,Availability,error,error,1708,"es/15279954/trun.tar.gz); we can set that the declaration in the `ProcessLine` are properly seen in the next lines. For example this version of `trun.C`:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; }; ```; works fine. Note that issuing on the prompt right after the `.x trun.C` the command `gROOT->SetDirLevel(t_1);` or `i123 = t_2;` works as well. But this version:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; gROOT->SetDirLevel(t_1);; }; ```; mysteriously fails with:; ```; Processing trun.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: error: cannot initialize an array element of type 'void *' with an rvalue of type 'TROOT *(*)()'; gROOT->SetDirLevel(t_1);; ^~~~~; /Users/pcanal/root_working/builds/master-pr/include/TROOT.h:407:16: note: expanded from macro 'gROOT'; #define gROOT (ROOT::GetROOT()); ^~~~~~~~~~~~~; ```; The error seems to indicate that the parser is 'prefixing' to `gROOT` something related to `array of void*` and initialization. Similarly; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; i123 = t_2;; }; ```; fails with:; ```; Processing trun.C...; Assertion failed: (Node->getDependence() == ExprDependence::None), function VisitBinaryOperator, file DynamicLookup.cpp, line 628.; Abort trap: 6; ```. And weirdly:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; t_1 = 3;; }; ```; fails with:; ```; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: warning: declaration without the 'auto' keyword is deprecated: function '__cling_Un1Qu30' [-Wdeprecated-declarations]; t_1 = 3;; ^~~; auto ; input_line_11:2:3: error: reference to 't_1' is ambiguous; (t_1); ^; /Users/pcanal/root_working/code/master/roottest/cling/return/t1.C:1:5: note: candidate found by name lookup is 't_1'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:2553,Availability,error,error,2553,"123 = t_1;; int j123 = t_2;; }; ```; works fine. Note that issuing on the prompt right after the `.x trun.C` the command `gROOT->SetDirLevel(t_1);` or `i123 = t_2;` works as well. But this version:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; gROOT->SetDirLevel(t_1);; }; ```; mysteriously fails with:; ```; Processing trun.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: error: cannot initialize an array element of type 'void *' with an rvalue of type 'TROOT *(*)()'; gROOT->SetDirLevel(t_1);; ^~~~~; /Users/pcanal/root_working/builds/master-pr/include/TROOT.h:407:16: note: expanded from macro 'gROOT'; #define gROOT (ROOT::GetROOT()); ^~~~~~~~~~~~~; ```; The error seems to indicate that the parser is 'prefixing' to `gROOT` something related to `array of void*` and initialization. Similarly; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; i123 = t_2;; }; ```; fails with:; ```; Processing trun.C...; Assertion failed: (Node->getDependence() == ExprDependence::None), function VisitBinaryOperator, file DynamicLookup.cpp, line 628.; Abort trap: 6; ```. And weirdly:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; t_1 = 3;; }; ```; fails with:; ```; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: warning: declaration without the 'auto' keyword is deprecated: function '__cling_Un1Qu30' [-Wdeprecated-declarations]; t_1 = 3;; ^~~; auto ; input_line_11:2:3: error: reference to 't_1' is ambiguous; (t_1); ^; /Users/pcanal/root_working/code/master/roottest/cling/return/t1.C:1:5: note: candidate found by name lookup is 't_1'; int t_1 = 3;; ^; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: note: candidate found by name lookup is '__cling_N50::t_1'; t_1 = 3;; ^; input_line_11:2:3: error: unknown type name 't_1'; (t_1); ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:2905,Availability,error,error,2905,"123 = t_1;; int j123 = t_2;; }; ```; works fine. Note that issuing on the prompt right after the `.x trun.C` the command `gROOT->SetDirLevel(t_1);` or `i123 = t_2;` works as well. But this version:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; gROOT->SetDirLevel(t_1);; }; ```; mysteriously fails with:; ```; Processing trun.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: error: cannot initialize an array element of type 'void *' with an rvalue of type 'TROOT *(*)()'; gROOT->SetDirLevel(t_1);; ^~~~~; /Users/pcanal/root_working/builds/master-pr/include/TROOT.h:407:16: note: expanded from macro 'gROOT'; #define gROOT (ROOT::GetROOT()); ^~~~~~~~~~~~~; ```; The error seems to indicate that the parser is 'prefixing' to `gROOT` something related to `array of void*` and initialization. Similarly; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; i123 = t_2;; }; ```; fails with:; ```; Processing trun.C...; Assertion failed: (Node->getDependence() == ExprDependence::None), function VisitBinaryOperator, file DynamicLookup.cpp, line 628.; Abort trap: 6; ```. And weirdly:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; t_1 = 3;; }; ```; fails with:; ```; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: warning: declaration without the 'auto' keyword is deprecated: function '__cling_Un1Qu30' [-Wdeprecated-declarations]; t_1 = 3;; ^~~; auto ; input_line_11:2:3: error: reference to 't_1' is ambiguous; (t_1); ^; /Users/pcanal/root_working/code/master/roottest/cling/return/t1.C:1:5: note: candidate found by name lookup is 't_1'; int t_1 = 3;; ^; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: note: candidate found by name lookup is '__cling_N50::t_1'; t_1 = 3;; ^; input_line_11:2:3: error: unknown type name 't_1'; (t_1); ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:2142,Safety,Abort,Abort,2142,"123 = t_1;; int j123 = t_2;; }; ```; works fine. Note that issuing on the prompt right after the `.x trun.C` the command `gROOT->SetDirLevel(t_1);` or `i123 = t_2;` works as well. But this version:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; gROOT->SetDirLevel(t_1);; }; ```; mysteriously fails with:; ```; Processing trun.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: error: cannot initialize an array element of type 'void *' with an rvalue of type 'TROOT *(*)()'; gROOT->SetDirLevel(t_1);; ^~~~~; /Users/pcanal/root_working/builds/master-pr/include/TROOT.h:407:16: note: expanded from macro 'gROOT'; #define gROOT (ROOT::GetROOT()); ^~~~~~~~~~~~~; ```; The error seems to indicate that the parser is 'prefixing' to `gROOT` something related to `array of void*` and initialization. Similarly; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; i123 = t_2;; }; ```; fails with:; ```; Processing trun.C...; Assertion failed: (Node->getDependence() == ExprDependence::None), function VisitBinaryOperator, file DynamicLookup.cpp, line 628.; Abort trap: 6; ```. And weirdly:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; t_1 = 3;; }; ```; fails with:; ```; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: warning: declaration without the 'auto' keyword is deprecated: function '__cling_Un1Qu30' [-Wdeprecated-declarations]; t_1 = 3;; ^~~; auto ; input_line_11:2:3: error: reference to 't_1' is ambiguous; (t_1); ^; /Users/pcanal/root_working/code/master/roottest/cling/return/t1.C:1:5: note: candidate found by name lookup is 't_1'; int t_1 = 3;; ^; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: note: candidate found by name lookup is '__cling_N50::t_1'; t_1 = 3;; ^; input_line_11:2:3: error: unknown type name 't_1'; (t_1); ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:306,Testability,test,test,306,"### Description. In an unnamed macro having:; ```; {; gROOT->ProcessLine(statement_1);; statement_2;; }; ```; is process line by line (per se) and `statement_2` should (and does in most case) be able to use declaration made in `statement_1`. In some circumstances it does not. One such circumstance is the test `roottest-cling-return-constRetrunTest_WILL_FAIL` which should actually succeed (the original problem is fixed by moving to `Cling`) but still fails (unexpectedly) with:; ```; Processing run.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./run.C:7:1: error: unknown type name 't02'; t02 t;; ^; ```. ### Reproducer. With the files in [trun.tar.gz](https://github.com/root-project/root/files/15279954/trun.tar.gz); we can set that the declaration in the `ProcessLine` are properly seen in the next lines. For example this version of `trun.C`:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; }; ```; works fine. Note that issuing on the prompt right after the `.x trun.C` the command `gROOT->SetDirLevel(t_1);` or `i123 = t_2;` works as well. But this version:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; gROOT->SetDirLevel(t_1);; }; ```; mysteriously fails with:; ```; Processing trun.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: error: cannot initialize an array element of type 'void *' with an rvalue of type 'TROOT *(*)()'; gROOT->SetDirLevel(t_1);; ^~~~~; /Users/pcanal/root_working/builds/master-pr/include/TROOT.h:407:16: note: expanded from macro 'gROOT'; #define gROOT (ROOT::GetROOT()); ^~~~~~~~~~~~~; ```; The error seems to indicate that the parser is 'prefixing' to `gROOT` something related to `array of void*` and initialization. Similarly; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; i123 = t_2;; }; ```; fails with:; ```; Processing tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/issues/15481:2010,Testability,Assert,Assertion,2010,"123 = t_1;; int j123 = t_2;; }; ```; works fine. Note that issuing on the prompt right after the `.x trun.C` the command `gROOT->SetDirLevel(t_1);` or `i123 = t_2;` works as well. But this version:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; gROOT->SetDirLevel(t_1);; }; ```; mysteriously fails with:; ```; Processing trun.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: error: cannot initialize an array element of type 'void *' with an rvalue of type 'TROOT *(*)()'; gROOT->SetDirLevel(t_1);; ^~~~~; /Users/pcanal/root_working/builds/master-pr/include/TROOT.h:407:16: note: expanded from macro 'gROOT'; #define gROOT (ROOT::GetROOT()); ^~~~~~~~~~~~~; ```; The error seems to indicate that the parser is 'prefixing' to `gROOT` something related to `array of void*` and initialization. Similarly; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; i123 = t_2;; }; ```; fails with:; ```; Processing trun.C...; Assertion failed: (Node->getDependence() == ExprDependence::None), function VisitBinaryOperator, file DynamicLookup.cpp, line 628.; Abort trap: 6; ```. And weirdly:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; t_1 = 3;; }; ```; fails with:; ```; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: warning: declaration without the 'auto' keyword is deprecated: function '__cling_Un1Qu30' [-Wdeprecated-declarations]; t_1 = 3;; ^~~; auto ; input_line_11:2:3: error: reference to 't_1' is ambiguous; (t_1); ^; /Users/pcanal/root_working/code/master/roottest/cling/return/t1.C:1:5: note: candidate found by name lookup is 't_1'; int t_1 = 3;; ^; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: note: candidate found by name lookup is '__cling_N50::t_1'; t_1 = 3;; ^; input_line_11:2:3: error: unknown type name 't_1'; (t_1); ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15481
https://github.com/root-project/root/pull/15483:227,Availability,error,errors,227,"Suppress warnings compiling the builtin LLVM and clang. It is not; maintained by ROOT, so warnings are not necessary here. This suppresses many warnings that flood the build logs, and also; prevent us from treating warnings as errors in the CI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15483
https://github.com/root-project/root/pull/15483:174,Testability,log,logs,174,"Suppress warnings compiling the builtin LLVM and clang. It is not; maintained by ROOT, so warnings are not necessary here. This suppresses many warnings that flood the build logs, and also; prevent us from treating warnings as errors in the CI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15483
https://github.com/root-project/root/pull/15488:318,Availability,error,error,318,"There is a `if(clad)` in the CMakeLists.txt to disable clad if there is no internet connection. However, it doesn't work right now, because it's after `include(RootBuildOptions)`, meaning the `clad` flag is not even set yet (only if explicitly set by the user, but not if we go with the default `clad=ON`). This logic error is fixed by this commit. To be backported to the 6.32 release branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15488
https://github.com/root-project/root/pull/15488:378,Deployability,release,release,378,"There is a `if(clad)` in the CMakeLists.txt to disable clad if there is no internet connection. However, it doesn't work right now, because it's after `include(RootBuildOptions)`, meaning the `clad` flag is not even set yet (only if explicitly set by the user, but not if we go with the default `clad=ON`). This logic error is fixed by this commit. To be backported to the 6.32 release branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15488
https://github.com/root-project/root/pull/15488:312,Testability,log,logic,312,"There is a `if(clad)` in the CMakeLists.txt to disable clad if there is no internet connection. However, it doesn't work right now, because it's after `include(RootBuildOptions)`, meaning the `clad` flag is not even set yet (only if explicitly set by the user, but not if we go with the default `clad=ON`). This logic error is fixed by this commit. To be backported to the 6.32 release branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15488
https://github.com/root-project/root/pull/15489:66,Safety,avoid,avoid,66,"This is a follow-up on c97ec173ee589ab2. In particular, this will avoid a flood of warnings on Jenkins, i.e. for roottest, where proof is still enabled, like here:; https://github.com/root-project/roottest/pull/1125. To be backported to 6.32, where this `TList` constructor is already deprecated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15489
https://github.com/root-project/root/pull/15490:59,Deployability,configurat,configuration,59,"Having tests in the `test/` directory is quite fragile for configuration reasons, because this is separate CMake project. Therefore, it doesn't share the same configuration variables, which is easy to forget. The RooFit stress tests have been moved already, and this commit moves the remaining RooFit tests. The code is reformatted with the ROOT `clang-format` style on this occasion. Also, the `longtest` label is removed form one of the tests because it doesn't actually take a long time to run (only a few seconds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:159,Deployability,configurat,configuration,159,"Having tests in the `test/` directory is quite fragile for configuration reasons, because this is separate CMake project. Therefore, it doesn't share the same configuration variables, which is easy to forget. The RooFit stress tests have been moved already, and this commit moves the remaining RooFit tests. The code is reformatted with the ROOT `clang-format` style on this occasion. Also, the `longtest` label is removed form one of the tests because it doesn't actually take a long time to run (only a few seconds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:59,Modifiability,config,configuration,59,"Having tests in the `test/` directory is quite fragile for configuration reasons, because this is separate CMake project. Therefore, it doesn't share the same configuration variables, which is easy to forget. The RooFit stress tests have been moved already, and this commit moves the remaining RooFit tests. The code is reformatted with the ROOT `clang-format` style on this occasion. Also, the `longtest` label is removed form one of the tests because it doesn't actually take a long time to run (only a few seconds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:159,Modifiability,config,configuration,159,"Having tests in the `test/` directory is quite fragile for configuration reasons, because this is separate CMake project. Therefore, it doesn't share the same configuration variables, which is easy to forget. The RooFit stress tests have been moved already, and this commit moves the remaining RooFit tests. The code is reformatted with the ROOT `clang-format` style on this occasion. Also, the `longtest` label is removed form one of the tests because it doesn't actually take a long time to run (only a few seconds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:173,Modifiability,variab,variables,173,"Having tests in the `test/` directory is quite fragile for configuration reasons, because this is separate CMake project. Therefore, it doesn't share the same configuration variables, which is easy to forget. The RooFit stress tests have been moved already, and this commit moves the remaining RooFit tests. The code is reformatted with the ROOT `clang-format` style on this occasion. Also, the `longtest` label is removed form one of the tests because it doesn't actually take a long time to run (only a few seconds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:7,Testability,test,tests,7,"Having tests in the `test/` directory is quite fragile for configuration reasons, because this is separate CMake project. Therefore, it doesn't share the same configuration variables, which is easy to forget. The RooFit stress tests have been moved already, and this commit moves the remaining RooFit tests. The code is reformatted with the ROOT `clang-format` style on this occasion. Also, the `longtest` label is removed form one of the tests because it doesn't actually take a long time to run (only a few seconds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:21,Testability,test,test,21,"Having tests in the `test/` directory is quite fragile for configuration reasons, because this is separate CMake project. Therefore, it doesn't share the same configuration variables, which is easy to forget. The RooFit stress tests have been moved already, and this commit moves the remaining RooFit tests. The code is reformatted with the ROOT `clang-format` style on this occasion. Also, the `longtest` label is removed form one of the tests because it doesn't actually take a long time to run (only a few seconds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:227,Testability,test,tests,227,"Having tests in the `test/` directory is quite fragile for configuration reasons, because this is separate CMake project. Therefore, it doesn't share the same configuration variables, which is easy to forget. The RooFit stress tests have been moved already, and this commit moves the remaining RooFit tests. The code is reformatted with the ROOT `clang-format` style on this occasion. Also, the `longtest` label is removed form one of the tests because it doesn't actually take a long time to run (only a few seconds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:301,Testability,test,tests,301,"Having tests in the `test/` directory is quite fragile for configuration reasons, because this is separate CMake project. Therefore, it doesn't share the same configuration variables, which is easy to forget. The RooFit stress tests have been moved already, and this commit moves the remaining RooFit tests. The code is reformatted with the ROOT `clang-format` style on this occasion. Also, the `longtest` label is removed form one of the tests because it doesn't actually take a long time to run (only a few seconds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15490:439,Testability,test,tests,439,"Having tests in the `test/` directory is quite fragile for configuration reasons, because this is separate CMake project. Therefore, it doesn't share the same configuration variables, which is easy to forget. The RooFit stress tests have been moved already, and this commit moves the remaining RooFit tests. The code is reformatted with the ROOT `clang-format` style on this occasion. Also, the `longtest` label is removed form one of the tests because it doesn't actually take a long time to run (only a few seconds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15490
https://github.com/root-project/root/pull/15491:167,Modifiability,variab,variable,167,Adding code generation and AD support for the final class in upstream RooFit that is used in the CMS Higgs discovery workspace: the RooBernstein. Also:. * fix missing variable warning in `RooCBShape.cxx`. * fix AD support for RooLandau by using code that clad can digest. * implement test for RooLandau fits with AD,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/pull/15491:284,Testability,test,test,284,Adding code generation and AD support for the final class in upstream RooFit that is used in the CMS Higgs discovery workspace: the RooBernstein. Also:. * fix missing variable warning in `RooCBShape.cxx`. * fix AD support for RooLandau by using code that clad can digest. * implement test for RooLandau fits with AD,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15491
https://github.com/root-project/root/issues/15494:883,Deployability,Install,Installation,883,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:183,Performance,Queue,Queue,183,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:358,Performance,Queue,Queue,358,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:168,Safety,timeout,timeout,168,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:404,Safety,Timeout,Timeout,404,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:189,Testability,test,test,189,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:218,Testability,test,test,218,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:291,Testability,Test,Test,291,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:328,Testability,test,test-test-RooFit-MultiProcess-Queue,328,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:541,Testability,test,tests,541,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:554,Testability,test,test,554,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:588,Testability,test,test,588,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15494:629,Testability,test,test,629,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15494
https://github.com/root-project/root/issues/15498:701,Deployability,Install,Installation,701,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If configuring any web display, gPad is not properly set.; As a result, `h.Draw` creates new canvas.; Code works properly when gROOT.SetWebDisplay(""off"") invoked. ### Reproducer. Here is reproducer:; ```; import ROOT. ROOT.gROOT.SetWebDisplay(""""). c = ROOT.TCanvas(). if ROOT.gPad:; print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()); else:; print(""gPad is not there - why?""). h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""). # this is a problem - histogram do not ""see"" gPad and creates new canvas; h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. master branch. Python 3.11.9. ### Installation method. build from source. ### Operating system. OpenSUSE linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/issues/15498:78,Modifiability,config,configuring,78,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If configuring any web display, gPad is not properly set.; As a result, `h.Draw` creates new canvas.; Code works properly when gROOT.SetWebDisplay(""off"") invoked. ### Reproducer. Here is reproducer:; ```; import ROOT. ROOT.gROOT.SetWebDisplay(""""). c = ROOT.TCanvas(). if ROOT.gPad:; print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()); else:; print(""gPad is not there - why?""). h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""). # this is a problem - histogram do not ""see"" gPad and creates new canvas; h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. master branch. Python 3.11.9. ### Installation method. build from source. ### Operating system. OpenSUSE linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15498
https://github.com/root-project/root/pull/15499:150,Availability,error,error,150,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:832,Deployability,update,updated,832,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:329,Energy Efficiency,efficient,efficiently,329,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:294,Integrability,message,messages,294,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:568,Modifiability,Extend,Extend,568,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:693,Modifiability,Extend,Extend,693,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:766,Safety,sanity check,sanity checks,766,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:363,Testability,Test,TestStatistics,363,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:583,Testability,test,test,583,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:710,Testability,test,test,710,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:802,Testability,test,tested,802,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15499:731,Usability,simpl,simple,731,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15499
https://github.com/root-project/root/pull/15501:209,Deployability,update,updated,209,"To avoid fallback to numeric differentiation because the function is not; inlined. The pullbacks were automatically generated with Clad master, and then; manually simplified. It was carefully checked that the updated unit; tests cover all code branches of the pullback.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15501
https://github.com/root-project/root/pull/15501:3,Safety,avoid,avoid,3,"To avoid fallback to numeric differentiation because the function is not; inlined. The pullbacks were automatically generated with Clad master, and then; manually simplified. It was carefully checked that the updated unit; tests cover all code branches of the pullback.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15501
https://github.com/root-project/root/pull/15501:223,Testability,test,tests,223,"To avoid fallback to numeric differentiation because the function is not; inlined. The pullbacks were automatically generated with Clad master, and then; manually simplified. It was carefully checked that the updated unit; tests cover all code branches of the pullback.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15501
https://github.com/root-project/root/pull/15501:163,Usability,simpl,simplified,163,"To avoid fallback to numeric differentiation because the function is not; inlined. The pullbacks were automatically generated with Clad master, and then; manually simplified. It was carefully checked that the updated unit; tests cover all code branches of the pullback.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15501
https://github.com/root-project/root/pull/15502:64,Availability,error,errors,64,"Using template functions in the generated code can cause linker errors,; which is avoided with this suggested commit. To be backported to the 6.32 branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15502
https://github.com/root-project/root/pull/15502:82,Safety,avoid,avoided,82,"Using template functions in the generated code can cause linker errors,; which is avoided with this suggested commit. To be backported to the 6.32 branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15502
https://github.com/root-project/root/issues/15503:249,Deployability,Install,Installation,249,### Explain what you would like to see improved and how. As proposed in the following forum post:; https://root-forum.cern.ch/t/how-to-stop-rdataframe-from-changing-column-type-from-std-vector-double-to-root-rvec/58971/3. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15503
https://github.com/root-project/root/pull/15504:222,Deployability,Update,Update,222,# This Pull request:; * Adds a `std::uint64_t fMaxKeySize` field to the RNTuple struct; * Adds the necessary machinery to serialize that field to the StreamerInfo; * Bumps the RNTuple class version from 4 to 5. ## TODO; * Update documentation; * Actually use the new field to do header chaining when size exceeds maxKeySize ; * Consider adding a fwd compatibility test (read version 5 on disk from version 4 in memory). ## Checklist:. - [x] tested changes locally (one test currently fails due to the tested file missing proper StreamerInfo); - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15504
https://github.com/root-project/root/pull/15504:549,Deployability,update,updated,549,# This Pull request:; * Adds a `std::uint64_t fMaxKeySize` field to the RNTuple struct; * Adds the necessary machinery to serialize that field to the StreamerInfo; * Bumps the RNTuple class version from 4 to 5. ## TODO; * Update documentation; * Actually use the new field to do header chaining when size exceeds maxKeySize ; * Consider adding a fwd compatibility test (read version 5 on disk from version 4 in memory). ## Checklist:. - [x] tested changes locally (one test currently fails due to the tested file missing proper StreamerInfo); - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15504
https://github.com/root-project/root/pull/15504:364,Testability,test,test,364,# This Pull request:; * Adds a `std::uint64_t fMaxKeySize` field to the RNTuple struct; * Adds the necessary machinery to serialize that field to the StreamerInfo; * Bumps the RNTuple class version from 4 to 5. ## TODO; * Update documentation; * Actually use the new field to do header chaining when size exceeds maxKeySize ; * Consider adding a fwd compatibility test (read version 5 on disk from version 4 in memory). ## Checklist:. - [x] tested changes locally (one test currently fails due to the tested file missing proper StreamerInfo); - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15504
https://github.com/root-project/root/pull/15504:441,Testability,test,tested,441,# This Pull request:; * Adds a `std::uint64_t fMaxKeySize` field to the RNTuple struct; * Adds the necessary machinery to serialize that field to the StreamerInfo; * Bumps the RNTuple class version from 4 to 5. ## TODO; * Update documentation; * Actually use the new field to do header chaining when size exceeds maxKeySize ; * Consider adding a fwd compatibility test (read version 5 on disk from version 4 in memory). ## Checklist:. - [x] tested changes locally (one test currently fails due to the tested file missing proper StreamerInfo); - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15504
https://github.com/root-project/root/pull/15504:469,Testability,test,test,469,# This Pull request:; * Adds a `std::uint64_t fMaxKeySize` field to the RNTuple struct; * Adds the necessary machinery to serialize that field to the StreamerInfo; * Bumps the RNTuple class version from 4 to 5. ## TODO; * Update documentation; * Actually use the new field to do header chaining when size exceeds maxKeySize ; * Consider adding a fwd compatibility test (read version 5 on disk from version 4 in memory). ## Checklist:. - [x] tested changes locally (one test currently fails due to the tested file missing proper StreamerInfo); - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15504
https://github.com/root-project/root/pull/15504:501,Testability,test,tested,501,# This Pull request:; * Adds a `std::uint64_t fMaxKeySize` field to the RNTuple struct; * Adds the necessary machinery to serialize that field to the StreamerInfo; * Bumps the RNTuple class version from 4 to 5. ## TODO; * Update documentation; * Actually use the new field to do header chaining when size exceeds maxKeySize ; * Consider adding a fwd compatibility test (read version 5 on disk from version 4 in memory). ## Checklist:. - [x] tested changes locally (one test currently fails due to the tested file missing proper StreamerInfo); - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15504
https://github.com/root-project/root/pull/15508:25,Integrability,depend,dependence,25,"This avoids the indirect dependence of ROOT on CURL, because the CURL dependence of CFITSIO is optional since version 3.49: https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/docs/changes.txt#L199. Note: I tested the `builtin_cfitsio` locally on Linux, and for macOS and Linux the CI will cover it because these platforms configure with `builtin_cfitsio=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:70,Integrability,depend,dependence,70,"This avoids the indirect dependence of ROOT on CURL, because the CURL dependence of CFITSIO is optional since version 3.49: https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/docs/changes.txt#L199. Note: I tested the `builtin_cfitsio` locally on Linux, and for macOS and Linux the CI will cover it because these platforms configure with `builtin_cfitsio=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:352,Modifiability,config,configure,352,"This avoids the indirect dependence of ROOT on CURL, because the CURL dependence of CFITSIO is optional since version 3.49: https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/docs/changes.txt#L199. Note: I tested the `builtin_cfitsio` locally on Linux, and for macOS and Linux the CI will cover it because these platforms configure with `builtin_cfitsio=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:5,Safety,avoid,avoids,5,"This avoids the indirect dependence of ROOT on CURL, because the CURL dependence of CFITSIO is optional since version 3.49: https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/docs/changes.txt#L199. Note: I tested the `builtin_cfitsio` locally on Linux, and for macOS and Linux the CI will cover it because these platforms configure with `builtin_cfitsio=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15508:236,Testability,test,tested,236,"This avoids the indirect dependence of ROOT on CURL, because the CURL dependence of CFITSIO is optional since version 3.49: https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/docs/changes.txt#L199. Note: I tested the `builtin_cfitsio` locally on Linux, and for macOS and Linux the CI will cover it because these platforms configure with `builtin_cfitsio=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15508
https://github.com/root-project/root/pull/15510:51,Performance,load,loading,51,"Fix detected bugs, add separate function for chunk loading with filters, add tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15510
https://github.com/root-project/root/pull/15510:4,Safety,detect,detected,4,"Fix detected bugs, add separate function for chunk loading with filters, add tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15510
https://github.com/root-project/root/pull/15510:77,Testability,test,tests,77,"Fix detected bugs, add separate function for chunk loading with filters, add tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15510
https://github.com/root-project/root/issues/15511:10130,Availability,error,error,10130,"ling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; #38 0x00007f0602e683c4 in TCling::ProcessLine (this=0x20461a0, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", error=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.0; #39 0x00007f060aab78bf in TApplication::ProcessLine (this=0x200fe60, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", sync=false, err=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/proj; #40 0x00007f060b14a763 in TRint::ProcessLineNr (this=0x200fe60, filestem=0x7f060b15c757 ""ROOT_prompt_"", line=0x419af40 ""#include <LoKi/ParticleCuts.h>"", error=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/projec; #41 0x00007f060b149fa1 in TRint::HandleTermInput (this=0x200fe60) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/rint/src/TRint.cxx:648; #42 0x00007f060b1477cd in TTermInputHandler::Notify (this=0x413b570) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/rint/src/TRint.cxx:133; #43 0x00007f060b14c187 in TTermInputHandler::ReadNotify (this=0x413b570) at /build/jenki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:10620,Availability,error,error,10620,"1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; #38 0x00007f0602e683c4 in TCling::ProcessLine (this=0x20461a0, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", error=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.0; #39 0x00007f060aab78bf in TApplication::ProcessLine (this=0x200fe60, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", sync=false, err=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/proj; #40 0x00007f060b14a763 in TRint::ProcessLineNr (this=0x200fe60, filestem=0x7f060b15c757 ""ROOT_prompt_"", line=0x419af40 ""#include <LoKi/ParticleCuts.h>"", error=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/projec; #41 0x00007f060b149fa1 in TRint::HandleTermInput (this=0x200fe60) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/rint/src/TRint.cxx:648; #42 0x00007f060b1477cd in TTermInputHandler::Notify (this=0x413b570) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/rint/src/TRint.cxx:133; #43 0x00007f060b14c187 in TTermInputHandler::ReadNotify (this=0x413b570) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/rint/src/TRint.cxx:125; #44 0x00007f060ac58367 in TUnixSystem::CheckDescriptors (this=0x1fbd500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:1322; #45 0x00007f060ac577bc in TUnixSystem::DispatchOneEvent (this=0x1fbd500, pendingOnly=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:1077; #46 0x00007f060ab4290f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1237,Deployability,release,releases,1237," specific header. What makes me think that there may be a memory corruption is that I tried to isolate which part of that header was triggering the segfault and I noticed that (on a subset of the header) I could make the segfault appear and disappear just shuffling some class definitions. I also find weird that the segfault seems to be related to an `atexit` function in `libCling.so`:; ```; ===========================================================; #10 0x00007f05fa744a7e in ?? (); #11 0x00007ffd45bee240 in ?? (); #12 0x00007f060b10d028 in ?? (); #13 0x00007ffd45bee270 in ?? (); #14 0x00007f05fa745920 in ?? (); #15 0x00007f060b10c1a0 in ?? (); #16 0x00007ffd45bee260 in ?? (); #17 0x00007ffd45bee2c0 in ?? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::Inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1467,Deployability,release,releases,1467,"appear and disappear just shuffling some class definitions. I also find weird that the segfault seems to be related to an `atexit` function in `libCling.so`:; ```; ===========================================================; #10 0x00007f05fa744a7e in ?? (); #11 0x00007ffd45bee240 in ?? (); #12 0x00007f060b10d028 in ?? (); #13 0x00007ffd45bee270 in ?? (); #14 0x00007f05fa745920 in ?? (); #15 0x00007f060b10c1a0 in ?? (); #16 0x00007ffd45bee260 in ?? (); #17 0x00007ffd45bee2c0 in ?? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::Poin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1747,Deployability,release,releases,1747," in ?? (); #12 0x00007f060b10d028 in ?? (); #13 0x00007ffd45bee270 in ?? (); #14 0x00007f05fa745920 in ?? (); #15 0x00007f060b10c1a0 in ?? (); #16 0x00007ffd45bee260 in ?? (); #17 0x00007ffd45bee2c0 in ?? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:1950,Deployability,release,releases,1950,"? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2138,Deployability,release,releases,2138,"ocal_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2557,Deployability,release,releases,2557,"?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Val",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:2770,Deployability,release,releases,2770,"db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3084,Deployability,release,releases,3084,"::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ===============================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3371,Deployability,release,releases,3371,"LikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ===========================================================; ```. ### Reproducer. With the `test_env.sh` included in [test_env.zip](https://github.com/root-project/root/files/15310428/test_env.zip) on lxplus.cern.ch:; ```; ❯ hx test_env.sh; -bash: hx: command not found; marcocle in 🌐 lxplus913 in ~/tmp/root-issue; ❯ vim test_env.sh;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:3607,Deployability,release,releases,3607,"/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ===========================================================; ```. ### Reproducer. With the `test_env.sh` included in [test_env.zip](https://github.com/root-project/root/files/15310428/test_env.zip) on lxplus.cern.ch:; ```; ❯ hx test_env.sh; -bash: hx: command not found; marcocle in 🌐 lxplus913 in ~/tmp/root-issue; ❯ vim test_env.sh; marcocle in 🌐 lxplus913 in ~/tmp/root-issue took 2m35s; ❯ bash; marcocle in 🌐 lxplus913 in ~/tmp/root-issue; ❯ . test_env.sh; marcocle in 🌐 lxplus913 in ~/tmp/root-issue; ❯ root; --------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:5517,Deployability,release,releases,5517,"us913 in ~/tmp/root-issue; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f060a0d89fa in wait4 () from /lib64/libc.so.6; #1 0x00007f060a04b243 in do_system () from /lib64/libc.so.6; #2 0x00007f060ac59eb2 in TUnixSystem::Exec (this=0x1fbd500, shellcmd=0x9457020 ""/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/gdb-backtrace.sh 212891 1>&2"") at /build/jenkins/workspace/lcg_release_pip; #3 0x00007f060ac5a753 in TUnixSystem::StackTrace (this=0x1fbd500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:2411; #4 0x00007f060ac5e16c in TUnixSystem::DispatchSignals (this=0x1fbd500, sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3631; #5 0x00007f060ac560e0 in SigHandler (sig=kSigSegmentationViolation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402; #6 0x00007f060ac5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602; #7 0x00007f060ac47a32 in textinput::TerminalConfigUnix::HandleSignal (this",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:7491,Deployability,release,releases,7491,"figUnix::HandleSignal (this=0x7f060af75d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.; #8 0x00007f060ac47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.; #9 <signal handler called>; #10 0x00007f05fa744a7e in ?? (); #11 0x00007ffd45bee240 in ?? (); #12 0x00007f060b10d028 in ?? (); #13 0x00007ffd45bee270 in ?? (); #14 0x00007f05fa745920 in ?? (); #15 0x00007f060b10c1a0 in ?? (); #16 0x00007ffd45bee260 in ?? (); #17 0x00007ffd45bee2c0 in ?? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::Inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:7721,Deployability,release,releases,7721,"space)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.; #9 <signal handler called>; #10 0x00007f05fa744a7e in ?? (); #11 0x00007ffd45bee240 in ?? (); #12 0x00007f060b10d028 in ?? (); #13 0x00007ffd45bee270 in ?? (); #14 0x00007f05fa745920 in ?? (); #15 0x00007f060b10c1a0 in ?? (); #16 0x00007ffd45bee260 in ?? (); #17 0x00007ffd45bee2c0 in ?? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling; #33 0x00007f0603128d98 in cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8001,Deployability,release,releases,8001," in ?? (); #12 0x00007f060b10d028 in ?? (); #13 0x00007ffd45bee270 in ?? (); #14 0x00007f05fa745920 in ?? (); #15 0x00007f060b10c1a0 in ?? (); #16 0x00007ffd45bee260 in ?? (); #17 0x00007ffd45bee2c0 in ?? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8204,Deployability,release,releases,8204,"? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern; #35 0x00007f0603095986 in cling::Interpreter::process(std::_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8392,Deployability,release,releases,8392,"ocal_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6; #36 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:8843,Deployability,release,releases,8843," ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9368,Deployability,release,releases,9368,"Cling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; #38 0x00007f0602e683c4 in TCling::ProcessLine (this=0x20461a0, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", error=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.0; #39 0x00007f060aab78bf in TApplication::ProcessLine (this=0x200fe60, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", sync=false, err=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:9555,Deployability,release,releases,9555,"ransaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; #38 0x00007f0602e683c4 in TCling::ProcessLine (this=0x20461a0, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", error=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.0; #39 0x00007f060aab78bf in TApplication::ProcessLine (this=0x200fe60, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", sync=false, err=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/proj; #40 0x00007f060b14a763 in TRint::ProcessLineNr (this=0x200fe60, filestem=0x7f060b15c757 ""RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:13977,Deployability,release,releases,13977,"https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 0x00007f05fa744a7e in ?? (); #11 0x00007ffd45bee240 in ?? (); #12 0x00007f060b10d028 in ?? (); #13 0x00007ffd45bee270 in ?? (); #14 0x00007f05fa745920 in ?? (); #15 0x00007f060b10c1a0 in ?? (); #16 0x00007ffd45bee260 in ?? (); #17 0x00007ffd45bee2c0 in ?? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::Inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:14207,Deployability,release,releases,14207,"(.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 0x00007f05fa744a7e in ?? (); #11 0x00007ffd45bee240 in ?? (); #12 0x00007f060b10d028 in ?? (); #13 0x00007ffd45bee270 in ?? (); #14 0x00007f05fa745920 in ?? (); #15 0x00007f060b10c1a0 in ?? (); #16 0x00007ffd45bee260 in ?? (); #17 0x00007ffd45bee2c0 in ?? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::Poin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:14487,Deployability,release,releases,14487," in ?? (); #12 0x00007f060b10d028 in ?? (); #13 0x00007ffd45bee270 in ?? (); #14 0x00007f05fa745920 in ?? (); #15 0x00007f060b10c1a0 in ?? (); #16 0x00007ffd45bee260 in ?? (); #17 0x00007ffd45bee2c0 in ?? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:14690,Deployability,release,releases,14690,"? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f060309016c in (anonymous namespace)::local_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:14878,Deployability,release,releases,14878,"ocal_cxa_atexit(void (*)(void*), void*, cling::Interpreter*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #23 0x00007ffd45bee260 in ?? (); #24 0x00007f060b10d110 in ?? (); #25 0x00007f060b10d020 in ?? (); #26 0x00007f0607fe2e7a in ?? () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #27 0x00007f05fa741095 in ?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:15297,Deployability,release,releases,15297,"?? (); #28 0x00007f05fa740f20 in ?? (); #29 0x00007f060471d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Val",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:15510,Deployability,release,releases,15510,"db/x86_64-el9-gcc13-dbg/lib/libCling.so; #30 0x00007f06031155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #31 0x00007f0603092698 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:15824,Deployability,release,releases,15824,"::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #32 0x00007f0603125b4a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ===============================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:16111,Deployability,release,releases,16111,"LikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ===========================================================. Root > .q; ```. ### ROOT version; ```; ❯ which root; /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/bin/root; ```. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 19",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:16347,Deployability,release,releases,16347,"/libCling.so; #33 0x00007f0603128d98 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ===========================================================. Root > .q; ```. ### ROOT version; ```; ❯ which root; /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/bin/root; ```. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.q",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:16922,Deployability,release,releases,16922,"el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ===========================================================. Root > .q; ```. ### ROOT version; ```; ❯ which root; /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/bin/root; ```. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. LCG builds. ### Operating system. Linux (EL9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:17440,Deployability,Install,Installation,17440,"el9-gcc13-dbg/lib/libCling.so; #34 0x00007f06030933dc in cling::Interpreter::DeclareInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #35 0x00007f0603095986 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ===========================================================. Root > .q; ```. ### ROOT version; ```; ❯ which root; /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/bin/root; ```. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. LCG builds. ### Operating system. Linux (EL9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/issues/15511:12908,Modifiability,variab,variable,12908,"rc/ROOT/6.30.04/core/base/src/TSystem.cxx:390; #47 0x00007f060ab426a4 in TSystem::Run (this=0x1fbd500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/base/src/TSystem.cxx:340; #48 0x00007f060aab8367 in TApplication::Run (this=0x200fe60, retrn=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/base/src/TApplication.cxx:1890; #49 0x00007f060b1492e2 in TRint::Run (this=0x200fe60, retrn=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/rint/src/TRint.cxx:501; #50 0x0000000000401447 in main (argc=1, argv=0x7ffd45bf1438) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/main/src/rmain.cxx:84; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 0x00007f05fa744a7e in ?? (); #11 0x00007ffd45bee240 in ?? (); #12 0x00007f060b10d028 in ?? (); #13 0x00007ffd45bee270 in ?? (); #14 0x00007f05fa745920 in ?? (); #15 0x00007f060b10c1a0 in ?? (); #16 0x00007ffd45bee260 in ?? (); #17 0x00007ffd45bee2c0 in ?? (); #18 0x00007f05fa745b0d in ?? (); #19 0x000000000204fc10 in ?? (); #20 0x00000000133b2cc8 in ?? (); #21 0x00000000133b2cc0 in ?? (); #22 0x00007f06030",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15511
https://github.com/root-project/root/pull/15512:75,Integrability,depend,dependencies,75,"Closes https://github.com/root-project/root/issues/14553. This PR adds the dependencies for the TMVA GNN unit tests to the; docker images via the `requirements.txt`. However, this will only have a; delayed effect until the images are re-built. Therefore, we can't; validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be; opened to revert this commit. For the JsMVA dependency, we don't have to worry about anything.; The JsMVA tests have already been temporarily disabled by @dpiparo 7 years ago:; https://github.com/root-project/roottest/blame/master/python/JsMVA/CMakeLists.txt. Note: adding the new dependencies only grows the environment by 20 MB, which is less then 1 % of a size increase (the size of the environment is currently 2.3 GB).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15512
https://github.com/root-project/root/pull/15512:426,Integrability,depend,dependency,426,"Closes https://github.com/root-project/root/issues/14553. This PR adds the dependencies for the TMVA GNN unit tests to the; docker images via the `requirements.txt`. However, this will only have a; delayed effect until the images are re-built. Therefore, we can't; validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be; opened to revert this commit. For the JsMVA dependency, we don't have to worry about anything.; The JsMVA tests have already been temporarily disabled by @dpiparo 7 years ago:; https://github.com/root-project/roottest/blame/master/python/JsMVA/CMakeLists.txt. Note: adding the new dependencies only grows the environment by 20 MB, which is less then 1 % of a size increase (the size of the environment is currently 2.3 GB).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15512
https://github.com/root-project/root/pull/15512:663,Integrability,depend,dependencies,663,"Closes https://github.com/root-project/root/issues/14553. This PR adds the dependencies for the TMVA GNN unit tests to the; docker images via the `requirements.txt`. However, this will only have a; delayed effect until the images are re-built. Therefore, we can't; validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be; opened to revert this commit. For the JsMVA dependency, we don't have to worry about anything.; The JsMVA tests have already been temporarily disabled by @dpiparo 7 years ago:; https://github.com/root-project/roottest/blame/master/python/JsMVA/CMakeLists.txt. Note: adding the new dependencies only grows the environment by 20 MB, which is less then 1 % of a size increase (the size of the environment is currently 2.3 GB).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15512
https://github.com/root-project/root/pull/15512:265,Security,validat,validate,265,"Closes https://github.com/root-project/root/issues/14553. This PR adds the dependencies for the TMVA GNN unit tests to the; docker images via the `requirements.txt`. However, this will only have a; delayed effect until the images are re-built. Therefore, we can't; validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be; opened to revert this commit. For the JsMVA dependency, we don't have to worry about anything.; The JsMVA tests have already been temporarily disabled by @dpiparo 7 years ago:; https://github.com/root-project/roottest/blame/master/python/JsMVA/CMakeLists.txt. Note: adding the new dependencies only grows the environment by 20 MB, which is less then 1 % of a size increase (the size of the environment is currently 2.3 GB).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15512
https://github.com/root-project/root/pull/15512:110,Testability,test,tests,110,"Closes https://github.com/root-project/root/issues/14553. This PR adds the dependencies for the TMVA GNN unit tests to the; docker images via the `requirements.txt`. However, this will only have a; delayed effect until the images are re-built. Therefore, we can't; validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be; opened to revert this commit. For the JsMVA dependency, we don't have to worry about anything.; The JsMVA tests have already been temporarily disabled by @dpiparo 7 years ago:; https://github.com/root-project/roottest/blame/master/python/JsMVA/CMakeLists.txt. Note: adding the new dependencies only grows the environment by 20 MB, which is less then 1 % of a size increase (the size of the environment is currently 2.3 GB).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15512
https://github.com/root-project/root/pull/15512:291,Testability,test,tests,291,"Closes https://github.com/root-project/root/issues/14553. This PR adds the dependencies for the TMVA GNN unit tests to the; docker images via the `requirements.txt`. However, this will only have a; delayed effect until the images are re-built. Therefore, we can't; validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be; opened to revert this commit. For the JsMVA dependency, we don't have to worry about anything.; The JsMVA tests have already been temporarily disabled by @dpiparo 7 years ago:; https://github.com/root-project/roottest/blame/master/python/JsMVA/CMakeLists.txt. Note: adding the new dependencies only grows the environment by 20 MB, which is less then 1 % of a size increase (the size of the environment is currently 2.3 GB).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15512
https://github.com/root-project/root/pull/15512:488,Testability,test,tests,488,"Closes https://github.com/root-project/root/issues/14553. This PR adds the dependencies for the TMVA GNN unit tests to the; docker images via the `requirements.txt`. However, this will only have a; delayed effect until the images are re-built. Therefore, we can't; validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be; opened to revert this commit. For the JsMVA dependency, we don't have to worry about anything.; The JsMVA tests have already been temporarily disabled by @dpiparo 7 years ago:; https://github.com/root-project/roottest/blame/master/python/JsMVA/CMakeLists.txt. Note: adding the new dependencies only grows the environment by 20 MB, which is less then 1 % of a size increase (the size of the environment is currently 2.3 GB).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15512
https://github.com/root-project/root/pull/15514:20,Deployability,update,updated,20,This PR is shipping updated minimized version of RenderCore (v14).; It has minor changes in the projected geo shape outlines and minor changes in geo_cms.C demo. Here is the reference to the change in RenderCore: ; https://github.com/UL-FRI-LGM/RenderCore/pull/19,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15514
https://github.com/root-project/root/pull/15516:407,Deployability,update,updated,407,"...instead of relying on ReadClassBuffer(). This is necessary for schema evolution with RNTuple's custom streamer. ## Changes or fixes:; Using `TBuffer::ReadClassBuffer` in `RNTuple::Streamer` is wrong because it doesn't handle cases where the schema of RNTuple changes. To do that, we need to manually read back the fields depending on the class version. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) - not necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15516
https://github.com/root-project/root/pull/15516:324,Integrability,depend,depending,324,"...instead of relying on ReadClassBuffer(). This is necessary for schema evolution with RNTuple's custom streamer. ## Changes or fixes:; Using `TBuffer::ReadClassBuffer` in `RNTuple::Streamer` is wrong because it doesn't handle cases where the schema of RNTuple changes. To do that, we need to manually read back the fields depending on the class version. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) - not necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15516
https://github.com/root-project/root/pull/15516:377,Testability,test,tested,377,"...instead of relying on ReadClassBuffer(). This is necessary for schema evolution with RNTuple's custom streamer. ## Changes or fixes:; Using `TBuffer::ReadClassBuffer` in `RNTuple::Streamer` is wrong because it doesn't handle cases where the schema of RNTuple changes. To do that, we need to manually read back the fields depending on the class version. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) - not necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15516
https://github.com/root-project/root/issues/15517:166,Availability,error,error,166,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. After I upgraded my M1 pro MacBook (2021) to MacOS 14.5 last night, I found there are many error printings every time I open the ROOT prompt or execute a program with ROOT libraries linked. Then I tried to update the ROOT to the master version last night and rebuild it. Now I found every time I create a TCanvas in the ROOT program, it prints the errors:. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 15 2024, 03:36:37 |; | From heads/master@v6-31-01-1952-gfb9ba02037 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TCanvas *tc1 = new TCanvas(); Error in <TGHScrollBar::TGHScrollBar>: arrow_*.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found. *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info) ; ```. ### Reproducer. 1. Open root prompt on MacOS 14.5; 2. type ""TCanvas *tc=new TCanvas();"". ### ROOT version. heads/master@v6-31-01-1952-gfb9ba02037. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/issues/15517:423,Availability,error,errors,423,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. After I upgraded my M1 pro MacBook (2021) to MacOS 14.5 last night, I found there are many error printings every time I open the ROOT prompt or execute a program with ROOT libraries linked. Then I tried to update the ROOT to the master version last night and rebuild it. Now I found every time I create a TCanvas in the ROOT program, it prints the errors:. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 15 2024, 03:36:37 |; | From heads/master@v6-31-01-1952-gfb9ba02037 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TCanvas *tc1 = new TCanvas(); Error in <TGHScrollBar::TGHScrollBar>: arrow_*.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found. *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info) ; ```. ### Reproducer. 1. Open root prompt on MacOS 14.5; 2. type ""TCanvas *tc=new TCanvas();"". ### ROOT version. heads/master@v6-31-01-1952-gfb9ba02037. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/issues/15517:955,Availability,Error,Error,955,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. After I upgraded my M1 pro MacBook (2021) to MacOS 14.5 last night, I found there are many error printings every time I open the ROOT prompt or execute a program with ROOT libraries linked. Then I tried to update the ROOT to the master version last night and rebuild it. Now I found every time I create a TCanvas in the ROOT program, it prints the errors:. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 15 2024, 03:36:37 |; | From heads/master@v6-31-01-1952-gfb9ba02037 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TCanvas *tc1 = new TCanvas(); Error in <TGHScrollBar::TGHScrollBar>: arrow_*.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found. *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info) ; ```. ### Reproducer. 1. Open root prompt on MacOS 14.5; 2. type ""TCanvas *tc=new TCanvas();"". ### ROOT version. heads/master@v6-31-01-1952-gfb9ba02037. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/issues/15517:1017,Availability,Error,Error,1017,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. After I upgraded my M1 pro MacBook (2021) to MacOS 14.5 last night, I found there are many error printings every time I open the ROOT prompt or execute a program with ROOT libraries linked. Then I tried to update the ROOT to the master version last night and rebuild it. Now I found every time I create a TCanvas in the ROOT program, it prints the errors:. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 15 2024, 03:36:37 |; | From heads/master@v6-31-01-1952-gfb9ba02037 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TCanvas *tc1 = new TCanvas(); Error in <TGHScrollBar::TGHScrollBar>: arrow_*.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found. *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info) ; ```. ### Reproducer. 1. Open root prompt on MacOS 14.5; 2. type ""TCanvas *tc=new TCanvas();"". ### ROOT version. heads/master@v6-31-01-1952-gfb9ba02037. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/issues/15517:83,Deployability,upgrade,upgraded,83,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. After I upgraded my M1 pro MacBook (2021) to MacOS 14.5 last night, I found there are many error printings every time I open the ROOT prompt or execute a program with ROOT libraries linked. Then I tried to update the ROOT to the master version last night and rebuild it. Now I found every time I create a TCanvas in the ROOT program, it prints the errors:. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 15 2024, 03:36:37 |; | From heads/master@v6-31-01-1952-gfb9ba02037 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TCanvas *tc1 = new TCanvas(); Error in <TGHScrollBar::TGHScrollBar>: arrow_*.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found. *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info) ; ```. ### Reproducer. 1. Open root prompt on MacOS 14.5; 2. type ""TCanvas *tc=new TCanvas();"". ### ROOT version. heads/master@v6-31-01-1952-gfb9ba02037. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/issues/15517:281,Deployability,update,update,281,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. After I upgraded my M1 pro MacBook (2021) to MacOS 14.5 last night, I found there are many error printings every time I open the ROOT prompt or execute a program with ROOT libraries linked. Then I tried to update the ROOT to the master version last night and rebuild it. Now I found every time I create a TCanvas in the ROOT program, it prints the errors:. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 15 2024, 03:36:37 |; | From heads/master@v6-31-01-1952-gfb9ba02037 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TCanvas *tc1 = new TCanvas(); Error in <TGHScrollBar::TGHScrollBar>: arrow_*.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found. *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info) ; ```. ### Reproducer. 1. Open root prompt on MacOS 14.5; 2. type ""TCanvas *tc=new TCanvas();"". ### ROOT version. heads/master@v6-31-01-1952-gfb9ba02037. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/issues/15517:1544,Deployability,Install,Installation,1544,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. After I upgraded my M1 pro MacBook (2021) to MacOS 14.5 last night, I found there are many error printings every time I open the ROOT prompt or execute a program with ROOT libraries linked. Then I tried to update the ROOT to the master version last night and rebuild it. Now I found every time I create a TCanvas in the ROOT program, it prints the errors:. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 15 2024, 03:36:37 |; | From heads/master@v6-31-01-1952-gfb9ba02037 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TCanvas *tc1 = new TCanvas(); Error in <TGHScrollBar::TGHScrollBar>: arrow_*.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found. *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info) ; ```. ### Reproducer. 1. Open root prompt on MacOS 14.5; 2. type ""TCanvas *tc=new TCanvas();"". ### ROOT version. heads/master@v6-31-01-1952-gfb9ba02037. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15517
https://github.com/root-project/root/pull/15518:209,Safety,avoid,avoids,209,Call `Modified()` method for the canvas itself - there are no logical reasons why `gPad->Modified()` was called. Instead calling `SetName(name)` directly set `fName` member in all TCanvas constructors. ; This avoids triggering of `Modified()` signal from the constructor itself. Fix logic around empty canvas name in `TCanvas::SaveSource`. ; There also use direct assignment of `fName` member.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15518
https://github.com/root-project/root/pull/15518:62,Testability,log,logical,62,Call `Modified()` method for the canvas itself - there are no logical reasons why `gPad->Modified()` was called. Instead calling `SetName(name)` directly set `fName` member in all TCanvas constructors. ; This avoids triggering of `Modified()` signal from the constructor itself. Fix logic around empty canvas name in `TCanvas::SaveSource`. ; There also use direct assignment of `fName` member.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15518
https://github.com/root-project/root/pull/15518:283,Testability,log,logic,283,Call `Modified()` method for the canvas itself - there are no logical reasons why `gPad->Modified()` was called. Instead calling `SetName(name)` directly set `fName` member in all TCanvas constructors. ; This avoids triggering of `Modified()` signal from the constructor itself. Fix logic around empty canvas name in `TCanvas::SaveSource`. ; There also use direct assignment of `fName` member.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15518
https://github.com/root-project/root/issues/15520:575,Availability,error,error-prone,575,"### Explain what you would like to see improved and how. The RDataFrame JIT logic makes use of a series of controlled memory leaks between different functions to ensure lifetime of objects that are needed by the JIT until that actually happens. This is an optimization but has certain fragilities, that were already analysed in a recent [bug report](https://github.com/root-project/root/issues/15399). The same topic surfaced in the past (see [this issue moved from JIRA](https://github.com/root-project/root/issues/15076)). And the fact we rely on leaking objects is subtly error-prone (see a recent [PR](https://github.com/root-project/root/pull/15477)). We should investigate how to implement a different way to handle the JIT machinery so that it does not require leaking objects. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15520
https://github.com/root-project/root/issues/15520:812,Deployability,Install,Installation,812,"### Explain what you would like to see improved and how. The RDataFrame JIT logic makes use of a series of controlled memory leaks between different functions to ensure lifetime of objects that are needed by the JIT until that actually happens. This is an optimization but has certain fragilities, that were already analysed in a recent [bug report](https://github.com/root-project/root/issues/15399). The same topic surfaced in the past (see [this issue moved from JIRA](https://github.com/root-project/root/issues/15076)). And the fact we rely on leaking objects is subtly error-prone (see a recent [PR](https://github.com/root-project/root/pull/15477)). We should investigate how to implement a different way to handle the JIT machinery so that it does not require leaking objects. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15520
https://github.com/root-project/root/issues/15520:256,Performance,optimiz,optimization,256,"### Explain what you would like to see improved and how. The RDataFrame JIT logic makes use of a series of controlled memory leaks between different functions to ensure lifetime of objects that are needed by the JIT until that actually happens. This is an optimization but has certain fragilities, that were already analysed in a recent [bug report](https://github.com/root-project/root/issues/15399). The same topic surfaced in the past (see [this issue moved from JIRA](https://github.com/root-project/root/issues/15076)). And the fact we rely on leaking objects is subtly error-prone (see a recent [PR](https://github.com/root-project/root/pull/15477)). We should investigate how to implement a different way to handle the JIT machinery so that it does not require leaking objects. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15520
https://github.com/root-project/root/issues/15520:76,Testability,log,logic,76,"### Explain what you would like to see improved and how. The RDataFrame JIT logic makes use of a series of controlled memory leaks between different functions to ensure lifetime of objects that are needed by the JIT until that actually happens. This is an optimization but has certain fragilities, that were already analysed in a recent [bug report](https://github.com/root-project/root/issues/15399). The same topic surfaced in the past (see [this issue moved from JIRA](https://github.com/root-project/root/issues/15076)). And the fact we rely on leaking objects is subtly error-prone (see a recent [PR](https://github.com/root-project/root/pull/15477)). We should investigate how to implement a different way to handle the JIT machinery so that it does not require leaking objects. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15520
https://github.com/root-project/root/pull/15521:24,Security,Access,AccessPath,24,"1. Do not use `gSystem->AccessPath` from CEF handler, may block because of mutex usage; 2. Remove debug output from THttpServer and TWebCanvas; 3. Properly handle `local` connection in auth check",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15521
https://github.com/root-project/root/pull/15523:0,Energy Efficiency,Schedul,Schedule,0,"Schedule nightly builds from 1 am onwards, spaced by 15 minutes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15523
https://github.com/root-project/root/pull/15524:18,Safety,detect,detected,18,"if ""[skip ci]"" is detected in the PR title, the CI does not start. This is done to have at least one string in common with the ones the GH CI uses for commits.; The test of this PR is that the CI does not start given its title.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15524
https://github.com/root-project/root/pull/15524:165,Testability,test,test,165,"if ""[skip ci]"" is detected in the PR title, the CI does not start. This is done to have at least one string in common with the ones the GH CI uses for commits.; The test of this PR is that the CI does not start given its title.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15524
https://github.com/root-project/root/pull/15526:5,Safety,avoid,avoids,5,"This avoids the following type of warning (obtained when compiling ROOT with -fsanitize=thread). ```; inlined from ‘virtual std::vector<ROOT::Experimental::RNTupleLocator> ROOT::Experimental::Internal::RPageSinkDaos::CommitSealedPageVImpl(std::__ROOT::span<ROOT::Experimental::Internal::RPageStorage::RSealedPageGroup>)’ at /rootproject/rootsrc/tree/ntuple/v7/src/RPageStorageDaos.cxx:417:28:; /usr/include/c++/13/bits/basic_string.h:1079:16: warning: ‘*(const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)((char*)&locator + offsetof(ROOT::Experimental::RNTupleLocator, ROOT::Experimental::RNTupleLocator::fPosition.std::variant<long unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, ROOT::Experimental::RNTupleLocatorObject64>::<unnamed>.std::__detail::__variant::_Variant_base<long unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, ROOT::Experimental::RNTupleLocatorObject64>::<unnamed>.std::__detail::__variant::_Move_assign_base<false, long unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, ROOT::Experimental::RNTupleLocatorObject64>::<unnamed>.std::__detail::__variant::_Copy_assign_base<false, long unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, ROOT::Experimental::RNTupleLocatorObject64>::<unnamed>.std::__detail::__variant::_Move_ctor_base<false, long unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, ROOT::Experimental::RNTupleLocatorObject64>::<unnamed>.std::__detail::__variant::_Copy_ctor_base<false, long unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, ROOT::Experimental::RNTupleLocatorObject64>::<unnamed>.std::__detail::__variant::_Variant_storage<false, long unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, ROOT::Experiment",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15526
https://github.com/root-project/root/pull/15528:5,Safety,avoid,avoid,5,This avoid compiler warnings with GCC version 12 and later. See also the reasoning in upstream commit: https://github.com/nigels-com/glew/commit/37e614480216ff1485366d97794cd1354ac07337,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15528
https://github.com/root-project/root/pull/15531:138,Availability,robust,robust,138,"Backports of recent fixes and improvements for the release. In particular, fixes unused variable warnings and makes the build system more robust.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15531
https://github.com/root-project/root/pull/15531:51,Deployability,release,release,51,"Backports of recent fixes and improvements for the release. In particular, fixes unused variable warnings and makes the build system more robust.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15531
https://github.com/root-project/root/pull/15531:88,Modifiability,variab,variable,88,"Backports of recent fixes and improvements for the release. In particular, fixes unused variable warnings and makes the build system more robust.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15531
https://github.com/root-project/root/pull/15532:14,Testability,test,test,14,"This is a new test that got introduced with eb7d8190ba3. Unfortunately, it didn't pass in the nightlies on Windows 10 x86 Debug, so it needs to be disabled on Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15532
https://github.com/root-project/root/issues/15534:1003,Availability,error,error,1003,"eck duplicate issues. - [X] Checked for duplicates. ### Description. When having fields with mixed STL types sometimes you run into issues when trying to fill them. I've attached an example below. ### Reproducer. This is a minimal script that shows that issue. ```cpp; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleWriter.hxx>; ; #include <TSystem.h>; ; #include <vector>; #include <variant>; #include <optional>; ; using RNTupleModel = ROOT::Experimental::RNTupleModel;; using RNTupleWriter = ROOT::Experimental::RNTupleWriter;; ; void ntpl_issue(); {; auto model = RNTupleModel::Create();; ; auto fldVvar = model->MakeField<std::vector<std::variant<std::optional<int>,float>>>(""vvar"");; ; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""F"", ""ntpl_issue.root"");; ; for (int i = 0; i < 10; i++) {; fldVvar->clear();; ; for (int j = 0; j < 5; ++j) {; std::variant<std::optional<int>,float> var(1.0);; fldVvar->emplace_back(var);; }; ; ntuple->Fill();; }; }; ```. And this is the error that it produces.; ```; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 2432 of `.../root_src/tree/ntuple/v7/src/RField.cxx'; aborting; ```. Another way to get it to fail is by using `std::vector<std::variant<std::atomic<int>,float>>`. ### ROOT version. 6.33/01 (commit eef2244). ### Installation method. Built from source. ### Operating system. macOS. ### Additional context. I found this issue while trying to generate `std::variant` types in an invalid state by doing something like this. ```cpp; struct S {; operator int() { throw 42; }; };. std::variant<int,float> var;; try {; var = S();; } catch (int) {}; fldVvar->emplace_back(var);; ```. The spec indicates that invalid states are supported, as shown in the line below. I wanted to ask what's the reason for them being supported given that they are not really supposed to be ""legal"", and it seems like one can't successfully generate an RNTuple with an invalid state. It either ends up initializing the first variant or it c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:1307,Deployability,Install,Installation,1307,"hen trying to fill them. I've attached an example below. ### Reproducer. This is a minimal script that shows that issue. ```cpp; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleWriter.hxx>; ; #include <TSystem.h>; ; #include <vector>; #include <variant>; #include <optional>; ; using RNTupleModel = ROOT::Experimental::RNTupleModel;; using RNTupleWriter = ROOT::Experimental::RNTupleWriter;; ; void ntpl_issue(); {; auto model = RNTupleModel::Create();; ; auto fldVvar = model->MakeField<std::vector<std::variant<std::optional<int>,float>>>(""vvar"");; ; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""F"", ""ntpl_issue.root"");; ; for (int i = 0; i < 10; i++) {; fldVvar->clear();; ; for (int j = 0; j < 5; ++j) {; std::variant<std::optional<int>,float> var(1.0);; fldVvar->emplace_back(var);; }; ; ntuple->Fill();; }; }; ```. And this is the error that it produces.; ```; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 2432 of `.../root_src/tree/ntuple/v7/src/RField.cxx'; aborting; ```. Another way to get it to fail is by using `std::vector<std::variant<std::atomic<int>,float>>`. ### ROOT version. 6.33/01 (commit eef2244). ### Installation method. Built from source. ### Operating system. macOS. ### Additional context. I found this issue while trying to generate `std::variant` types in an invalid state by doing something like this. ```cpp; struct S {; operator int() { throw 42; }; };. std::variant<int,float> var;; try {; var = S();; } catch (int) {}; fldVvar->emplace_back(var);; ```. The spec indicates that invalid states are supported, as shown in the line below. I wanted to ask what's the reason for them being supported given that they are not really supposed to be ""legal"", and it seems like one can't successfully generate an RNTuple with an invalid state. It either ends up initializing the first variant or it crashes. https://github.com/root-project/root/blob/95307116ca3dd811ac1b5e496ad7f9828402dc51/tree/ntuple/v7/doc/specifications.md?plain=1#L780",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:1149,Safety,abort,aborting,1149,"hen trying to fill them. I've attached an example below. ### Reproducer. This is a minimal script that shows that issue. ```cpp; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleWriter.hxx>; ; #include <TSystem.h>; ; #include <vector>; #include <variant>; #include <optional>; ; using RNTupleModel = ROOT::Experimental::RNTupleModel;; using RNTupleWriter = ROOT::Experimental::RNTupleWriter;; ; void ntpl_issue(); {; auto model = RNTupleModel::Create();; ; auto fldVvar = model->MakeField<std::vector<std::variant<std::optional<int>,float>>>(""vvar"");; ; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""F"", ""ntpl_issue.root"");; ; for (int i = 0; i < 10; i++) {; fldVvar->clear();; ; for (int j = 0; j < 5; ++j) {; std::variant<std::optional<int>,float> var(1.0);; fldVvar->emplace_back(var);; }; ; ntuple->Fill();; }; }; ```. And this is the error that it produces.; ```; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 2432 of `.../root_src/tree/ntuple/v7/src/RField.cxx'; aborting; ```. Another way to get it to fail is by using `std::vector<std::variant<std::atomic<int>,float>>`. ### ROOT version. 6.33/01 (commit eef2244). ### Installation method. Built from source. ### Operating system. macOS. ### Additional context. I found this issue while trying to generate `std::variant` types in an invalid state by doing something like this. ```cpp; struct S {; operator int() { throw 42; }; };. std::variant<int,float> var;; try {; var = S();; } catch (int) {}; fldVvar->emplace_back(var);; ```. The spec indicates that invalid states are supported, as shown in the line below. I wanted to ask what's the reason for them being supported given that they are not really supposed to be ""legal"", and it seems like one can't successfully generate an RNTuple with an invalid state. It either ends up initializing the first variant or it crashes. https://github.com/root-project/root/blob/95307116ca3dd811ac1b5e496ad7f9828402dc51/tree/ntuple/v7/doc/specifications.md?plain=1#L780",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15534:832,Usability,clear,clear,832,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When having fields with mixed STL types sometimes you run into issues when trying to fill them. I've attached an example below. ### Reproducer. This is a minimal script that shows that issue. ```cpp; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleWriter.hxx>; ; #include <TSystem.h>; ; #include <vector>; #include <variant>; #include <optional>; ; using RNTupleModel = ROOT::Experimental::RNTupleModel;; using RNTupleWriter = ROOT::Experimental::RNTupleWriter;; ; void ntpl_issue(); {; auto model = RNTupleModel::Create();; ; auto fldVvar = model->MakeField<std::vector<std::variant<std::optional<int>,float>>>(""vvar"");; ; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""F"", ""ntpl_issue.root"");; ; for (int i = 0; i < 10; i++) {; fldVvar->clear();; ; for (int j = 0; j < 5; ++j) {; std::variant<std::optional<int>,float> var(1.0);; fldVvar->emplace_back(var);; }; ; ntuple->Fill();; }; }; ```. And this is the error that it produces.; ```; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 2432 of `.../root_src/tree/ntuple/v7/src/RField.cxx'; aborting; ```. Another way to get it to fail is by using `std::vector<std::variant<std::atomic<int>,float>>`. ### ROOT version. 6.33/01 (commit eef2244). ### Installation method. Built from source. ### Operating system. macOS. ### Additional context. I found this issue while trying to generate `std::variant` types in an invalid state by doing something like this. ```cpp; struct S {; operator int() { throw 42; }; };. std::variant<int,float> var;; try {; var = S();; } catch (int) {}; fldVvar->emplace_back(var);; ```. The spec indicates that invalid states are supported, as shown in the line below. I wanted to ask what's the reason for them being supported given that they are not really supposed to be ""legal"", and it seems like one can't successfully generate an RNTuple with an invalid state. It either ends up initializing the first variant or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15534
https://github.com/root-project/root/issues/15537:2422,Availability,error,error,2422,"7d431bb3c767 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #22 0x00007d431bb3e1d9 in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #23 0x00007d431bb27790 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #24 0x00007d431b7e903e in HandleInterpreterException (metaProcessor=0x5ab8d59e1470, input_line=0x5ab8d6536800 "".X /tmp/./badcast.cpp"", compRes=; 0x7fffe3dd2650: cling::Interpreter::kSuccess, result=0x7fffe3dd26a0) at /opt/root_src/core/metacling/src/TCling.cxx:2438; ===========================================================; ```. root -l badcast.cpp+. ```; root [0] ; Processing badcast.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./badcast_cpp.so; In file included from input_line_9:6:; ././badcast.cpp:3:1: error: non-void function does not return a value [-Werror,-Wreturn-type]; }; ^; In file included from /tmp//tmp/badcast_cpp_ACLiC_dict.cxx:41:; /tmp/./badcast.cpp: In function ‘int badcast()’:; /tmp/./badcast.cpp:3:1: warning: no return statement in function returning non-void [-Wreturn-type]; 3 | }; | ^; In file included from /tmp//tmp/badcast_cpp_ACLiC_dict.cxx:41:; /tmp/./badcast.cpp: In function ‘int badcast()’:; /tmp/./badcast.cpp:3:1: warning: no return statement in function returning non-void [-Wreturn-type]; 3 | }; | ^; (int) 1116738714; root [1] ; ```. ### ROOT version. ```; ROOT v6.33/01; Built for linuxx8664gcc on May 10 2024, 07:02:39; From heads/cdoxy@v6-31-01-1881-g0b545d9b06; With g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /home/user/build/build-root-Desktop-Debug/bin; ```. ### Installation method. From source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/issues/15537:3244,Deployability,Install,Installation,3244,"7d431bb3c767 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #22 0x00007d431bb3e1d9 in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #23 0x00007d431bb27790 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #24 0x00007d431b7e903e in HandleInterpreterException (metaProcessor=0x5ab8d59e1470, input_line=0x5ab8d6536800 "".X /tmp/./badcast.cpp"", compRes=; 0x7fffe3dd2650: cling::Interpreter::kSuccess, result=0x7fffe3dd26a0) at /opt/root_src/core/metacling/src/TCling.cxx:2438; ===========================================================; ```. root -l badcast.cpp+. ```; root [0] ; Processing badcast.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./badcast_cpp.so; In file included from input_line_9:6:; ././badcast.cpp:3:1: error: non-void function does not return a value [-Werror,-Wreturn-type]; }; ^; In file included from /tmp//tmp/badcast_cpp_ACLiC_dict.cxx:41:; /tmp/./badcast.cpp: In function ‘int badcast()’:; /tmp/./badcast.cpp:3:1: warning: no return statement in function returning non-void [-Wreturn-type]; 3 | }; | ^; In file included from /tmp//tmp/badcast_cpp_ACLiC_dict.cxx:41:; /tmp/./badcast.cpp: In function ‘int badcast()’:; /tmp/./badcast.cpp:3:1: warning: no return statement in function returning non-void [-Wreturn-type]; 3 | }; | ^; (int) 1116738714; root [1] ; ```. ### ROOT version. ```; ROOT v6.33/01; Built for linuxx8664gcc on May 10 2024, 07:02:39; From heads/cdoxy@v6-31-01-1881-g0b545d9b06; With g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /home/user/build/build-root-Desktop-Debug/bin; ```. ### Installation method. From source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15537
https://github.com/root-project/root/pull/15542:38,Testability,test,tests,38,This PR can be merged only when Ubu24 tests are all passing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15542
https://github.com/root-project/root/pull/15543:794,Energy Efficiency,Reduce,Reduce,794,"The PiecewiseInterpolation class is used in the context of HistFactory models, where is is always used the same way: all RooAbsReals in _lowSet, _histSet, and also nominal are 1D RooHistFuncs with with same structure. Therefore, we can make a big optimization: we get the bin index ony once here in the generated code for PiecewiseInterpolation. Then, we also rearrange the histogram data in such a way that we can always pass the same arrays to the free function that implements the interpolation, just with a dynamic offset calculated from the bin index. This change is covered by the `testHistFactory` unit test. Together with the change suggested in the other draft PR, where the generated code is split up into separate functions for each channel, this PR addresses the plan of work item ""Reduce JITting time for AD in RooFit"". Different from that optimization, this one doesn't depend on the upcoming Clad 1.5, so it can be merged without upgrading Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15543
https://github.com/root-project/root/pull/15543:884,Integrability,depend,depend,884,"The PiecewiseInterpolation class is used in the context of HistFactory models, where is is always used the same way: all RooAbsReals in _lowSet, _histSet, and also nominal are 1D RooHistFuncs with with same structure. Therefore, we can make a big optimization: we get the bin index ony once here in the generated code for PiecewiseInterpolation. Then, we also rearrange the histogram data in such a way that we can always pass the same arrays to the free function that implements the interpolation, just with a dynamic offset calculated from the bin index. This change is covered by the `testHistFactory` unit test. Together with the change suggested in the other draft PR, where the generated code is split up into separate functions for each channel, this PR addresses the plan of work item ""Reduce JITting time for AD in RooFit"". Different from that optimization, this one doesn't depend on the upcoming Clad 1.5, so it can be merged without upgrading Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15543
https://github.com/root-project/root/pull/15543:247,Performance,optimiz,optimization,247,"The PiecewiseInterpolation class is used in the context of HistFactory models, where is is always used the same way: all RooAbsReals in _lowSet, _histSet, and also nominal are 1D RooHistFuncs with with same structure. Therefore, we can make a big optimization: we get the bin index ony once here in the generated code for PiecewiseInterpolation. Then, we also rearrange the histogram data in such a way that we can always pass the same arrays to the free function that implements the interpolation, just with a dynamic offset calculated from the bin index. This change is covered by the `testHistFactory` unit test. Together with the change suggested in the other draft PR, where the generated code is split up into separate functions for each channel, this PR addresses the plan of work item ""Reduce JITting time for AD in RooFit"". Different from that optimization, this one doesn't depend on the upcoming Clad 1.5, so it can be merged without upgrading Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15543
https://github.com/root-project/root/pull/15543:853,Performance,optimiz,optimization,853,"The PiecewiseInterpolation class is used in the context of HistFactory models, where is is always used the same way: all RooAbsReals in _lowSet, _histSet, and also nominal are 1D RooHistFuncs with with same structure. Therefore, we can make a big optimization: we get the bin index ony once here in the generated code for PiecewiseInterpolation. Then, we also rearrange the histogram data in such a way that we can always pass the same arrays to the free function that implements the interpolation, just with a dynamic offset calculated from the bin index. This change is covered by the `testHistFactory` unit test. Together with the change suggested in the other draft PR, where the generated code is split up into separate functions for each channel, this PR addresses the plan of work item ""Reduce JITting time for AD in RooFit"". Different from that optimization, this one doesn't depend on the upcoming Clad 1.5, so it can be merged without upgrading Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15543
https://github.com/root-project/root/pull/15543:588,Testability,test,testHistFactory,588,"The PiecewiseInterpolation class is used in the context of HistFactory models, where is is always used the same way: all RooAbsReals in _lowSet, _histSet, and also nominal are 1D RooHistFuncs with with same structure. Therefore, we can make a big optimization: we get the bin index ony once here in the generated code for PiecewiseInterpolation. Then, we also rearrange the histogram data in such a way that we can always pass the same arrays to the free function that implements the interpolation, just with a dynamic offset calculated from the bin index. This change is covered by the `testHistFactory` unit test. Together with the change suggested in the other draft PR, where the generated code is split up into separate functions for each channel, this PR addresses the plan of work item ""Reduce JITting time for AD in RooFit"". Different from that optimization, this one doesn't depend on the upcoming Clad 1.5, so it can be merged without upgrading Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15543
https://github.com/root-project/root/pull/15543:610,Testability,test,test,610,"The PiecewiseInterpolation class is used in the context of HistFactory models, where is is always used the same way: all RooAbsReals in _lowSet, _histSet, and also nominal are 1D RooHistFuncs with with same structure. Therefore, we can make a big optimization: we get the bin index ony once here in the generated code for PiecewiseInterpolation. Then, we also rearrange the histogram data in such a way that we can always pass the same arrays to the free function that implements the interpolation, just with a dynamic offset calculated from the bin index. This change is covered by the `testHistFactory` unit test. Together with the change suggested in the other draft PR, where the generated code is split up into separate functions for each channel, this PR addresses the plan of work item ""Reduce JITting time for AD in RooFit"". Different from that optimization, this one doesn't depend on the upcoming Clad 1.5, so it can be merged without upgrading Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15543
https://github.com/root-project/root/pull/15544:341,Deployability,Upgrade,Upgrade,341,"1. Correctly scale size of axis ticks - take into account NDC axis length; 2. Remove source_dir output in node.js https://github.com/root-project/jsroot/issues/296; 3. Set name and userData in geometry `build()` function https://github.com/root-project/jsroot/issues/303; 4. Draw histogram title afterwards - place in front of stats box; 5. Upgrade three.js r158 -> r162, last with WebGL1 support; 6. Split extras into three_addons.mjs, provide jsroot geometry build without three.js; 7. Fix - correctly draw only grids with AXIG draw option; 8. Fix - let read object from TFile with empty name; 9. Fix - graph drawing fix custom labels on X axis https://github.com/root-project/jsroot/issues/297; 10. Fix - draw at least line for TGraphErrors ROOT-8131; 11. Fix - log scales on TH3 drawings https://github.com/root-project/jsroot/issues/306; 12. Fix - preserve attributes and draw options when call drawingJSON() https://github.com/root-project/jsroot/issues/307; 13. Fix - draw geometry top node volume if all childs not visible https://github.com/root-project/jsroot/issues/308",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15544
https://github.com/root-project/root/pull/15544:765,Testability,log,log,765,"1. Correctly scale size of axis ticks - take into account NDC axis length; 2. Remove source_dir output in node.js https://github.com/root-project/jsroot/issues/296; 3. Set name and userData in geometry `build()` function https://github.com/root-project/jsroot/issues/303; 4. Draw histogram title afterwards - place in front of stats box; 5. Upgrade three.js r158 -> r162, last with WebGL1 support; 6. Split extras into three_addons.mjs, provide jsroot geometry build without three.js; 7. Fix - correctly draw only grids with AXIG draw option; 8. Fix - let read object from TFile with empty name; 9. Fix - graph drawing fix custom labels on X axis https://github.com/root-project/jsroot/issues/297; 10. Fix - draw at least line for TGraphErrors ROOT-8131; 11. Fix - log scales on TH3 drawings https://github.com/root-project/jsroot/issues/306; 12. Fix - preserve attributes and draw options when call drawingJSON() https://github.com/root-project/jsroot/issues/307; 13. Fix - draw geometry top node volume if all childs not visible https://github.com/root-project/jsroot/issues/308",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15544
https://github.com/root-project/root/issues/15549:270,Availability,Error,Error,270,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. last version `07d2b27d192bd20bea8421da7b1c6c381376cfb2`; build on macos ; cmake ; ```; cmake version 3.29.3. CMake suite maintained and supported by Kitware (kitware.com/cmake).; ```; ```; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information.; ```. ### Reproducer. mkdir build; cmake ../root. ### ROOT version. last commit `07d2b27d192bd20bea8421da7b1c6c381376cfb2`. ### Installation method. build from source. ### Operating system. macos 14.4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15549
https://github.com/root-project/root/issues/15549:362,Deployability,INSTALL,INSTALL,362,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. last version `07d2b27d192bd20bea8421da7b1c6c381376cfb2`; build on macos ; cmake ; ```; cmake version 3.29.3. CMake suite maintained and supported by Kitware (kitware.com/cmake).; ```; ```; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information.; ```. ### Reproducer. mkdir build; cmake ../root. ### ROOT version. last commit `07d2b27d192bd20bea8421da7b1c6c381376cfb2`. ### Installation method. build from source. ### Operating system. macos 14.4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15549
https://github.com/root-project/root/issues/15549:520,Deployability,Install,Installation,520,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. last version `07d2b27d192bd20bea8421da7b1c6c381376cfb2`; build on macos ; cmake ; ```; cmake version 3.29.3. CMake suite maintained and supported by Kitware (kitware.com/cmake).; ```; ```; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information.; ```. ### Reproducer. mkdir build; cmake ../root. ### ROOT version. last commit `07d2b27d192bd20bea8421da7b1c6c381376cfb2`. ### Installation method. build from source. ### Operating system. macos 14.4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15549
https://github.com/root-project/root/issues/15549:298,Integrability,message,message,298,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. last version `07d2b27d192bd20bea8421da7b1c6c381376cfb2`; build on macos ; cmake ; ```; cmake version 3.29.3. CMake suite maintained and supported by Kitware (kitware.com/cmake).; ```; ```; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information.; ```. ### Reproducer. mkdir build; cmake ../root. ### ROOT version. last commit `07d2b27d192bd20bea8421da7b1c6c381376cfb2`. ### Installation method. build from source. ### Operating system. macos 14.4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15549
https://github.com/root-project/root/pull/15550:61,Performance,load,loads,61,"When reloading web widget in QT5/QT6/CEF widget,; new widget loads faster than old connection is closed.; Therefore allow new key checks when loading HTML page. Remove debug output from firefox start script",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15550
https://github.com/root-project/root/pull/15550:142,Performance,load,loading,142,"When reloading web widget in QT5/QT6/CEF widget,; new widget loads faster than old connection is closed.; Therefore allow new key checks when loading HTML page. Remove debug output from firefox start script",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15550
https://github.com/root-project/root/pull/15553:529,Deployability,update,updated,529,"Checksum is now excluded from the on-disk representation and it's not; stored in the anchor. This allows to leverage the ROOT I/O machinery for; schema evolution rather than having to rely entirely on custom code in; RNTuple::Streamer(). The RNTuple class version gets bumped from 4 to 5. This is a breaking change, but backwards compatibility with version 4; will be preserved for a while for easing the transition. Support for; version 4 will be dropped before stabilization. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15553
https://github.com/root-project/root/pull/15553:0,Security,Checksum,Checksum,0,"Checksum is now excluded from the on-disk representation and it's not; stored in the anchor. This allows to leverage the ROOT I/O machinery for; schema evolution rather than having to rely entirely on custom code in; RNTuple::Streamer(). The RNTuple class version gets bumped from 4 to 5. This is a breaking change, but backwards compatibility with version 4; will be preserved for a while for easing the transition. Support for; version 4 will be dropped before stabilization. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15553
https://github.com/root-project/root/pull/15553:499,Testability,test,tested,499,"Checksum is now excluded from the on-disk representation and it's not; stored in the anchor. This allows to leverage the ROOT I/O machinery for; schema evolution rather than having to rely entirely on custom code in; RNTuple::Streamer(). The RNTuple class version gets bumped from 4 to 5. This is a breaking change, but backwards compatibility with version 4; will be preserved for a while for easing the transition. Support for; version 4 will be dropped before stabilization. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15553
https://github.com/root-project/root/pull/15554:548,Safety,avoid,avoids,548,"Introduce a new method to get a label for the data source that the current RDataFrame is processing. There are three major types:; * The dataframe will process a TTree dataset; * The dataframe will process an empty dataset; * The dataframe will process data from an RDataSource. The function returns a label with the suffix ""DS"" also for the first two cases, to be aligned as much as possible with the RDataSource infrastructure. Make use of this function in distributed RDataFrame to create the headnode of the Python computation graph. This also avoids extra parsing in the factory function which includes opening the first input file once more to distinguish between TTree or RNTuple input (in case the first input argument is a string).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15554
https://github.com/root-project/root/pull/15557:606,Deployability,update,update,606,"For simplicity and code reusability, this PR suggests to merge the `EvaluateFuncs.h` header and the `AnalyticalIntegrals.h` header into a single header. Also, use `ROOT::Math::inc_gamma_(c)` directly in RooPoisson implementation. This saves us a few function calls and will also make it easier to implement custom pullbacks for the gradient, since the callstack is not as deep. Also, slightly refactor the code for evaluating the interpolations and improve the AD tests for the RooLandau to get more coverage. This is a part of #15502, factored out because these are already meaningful changes without the update to Clad 1.5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15557
https://github.com/root-project/root/pull/15557:393,Modifiability,refactor,refactor,393,"For simplicity and code reusability, this PR suggests to merge the `EvaluateFuncs.h` header and the `AnalyticalIntegrals.h` header into a single header. Also, use `ROOT::Math::inc_gamma_(c)` directly in RooPoisson implementation. This saves us a few function calls and will also make it easier to implement custom pullbacks for the gradient, since the callstack is not as deep. Also, slightly refactor the code for evaluating the interpolations and improve the AD tests for the RooLandau to get more coverage. This is a part of #15502, factored out because these are already meaningful changes without the update to Clad 1.5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15557
https://github.com/root-project/root/pull/15557:464,Testability,test,tests,464,"For simplicity and code reusability, this PR suggests to merge the `EvaluateFuncs.h` header and the `AnalyticalIntegrals.h` header into a single header. Also, use `ROOT::Math::inc_gamma_(c)` directly in RooPoisson implementation. This saves us a few function calls and will also make it easier to implement custom pullbacks for the gradient, since the callstack is not as deep. Also, slightly refactor the code for evaluating the interpolations and improve the AD tests for the RooLandau to get more coverage. This is a part of #15502, factored out because these are already meaningful changes without the update to Clad 1.5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15557
https://github.com/root-project/root/pull/15557:4,Usability,simpl,simplicity,4,"For simplicity and code reusability, this PR suggests to merge the `EvaluateFuncs.h` header and the `AnalyticalIntegrals.h` header into a single header. Also, use `ROOT::Math::inc_gamma_(c)` directly in RooPoisson implementation. This saves us a few function calls and will also make it easier to implement custom pullbacks for the gradient, since the callstack is not as deep. Also, slightly refactor the code for evaluating the interpolations and improve the AD tests for the RooLandau to get more coverage. This is a part of #15502, factored out because these are already meaningful changes without the update to Clad 1.5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15557
https://github.com/root-project/root/pull/15558:163,Deployability,update,updated,163,…avoid clash with classes that CMS Combine will eventually provide. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15558
https://github.com/root-project/root/pull/15558:1,Safety,avoid,avoid,1,…avoid clash with classes that CMS Combine will eventually provide. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15558
https://github.com/root-project/root/pull/15558:133,Testability,test,tested,133,…avoid clash with classes that CMS Combine will eventually provide. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15558
https://github.com/root-project/root/pull/15559:121,Deployability,release,release,121,"# This Pull request:; Adds brief documentation to `R__ASSERT` and `R__CHECK` underlining how they do not get stripped in release mode (which might be unexpected for some users).; Additionally, it uses `R__likely` for the check itself, since the condition is expected to be true. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15559
https://github.com/root-project/root/pull/15559:330,Deployability,update,updated,330,"# This Pull request:; Adds brief documentation to `R__ASSERT` and `R__CHECK` underlining how they do not get stripped in release mode (which might be unexpected for some users).; Additionally, it uses `R__likely` for the check itself, since the condition is expected to be true. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15559
https://github.com/root-project/root/pull/15559:300,Testability,test,tested,300,"# This Pull request:; Adds brief documentation to `R__ASSERT` and `R__CHECK` underlining how they do not get stripped in release mode (which might be unexpected for some users).; Additionally, it uses `R__likely` for the check itself, since the condition is expected to be true. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15559
https://github.com/root-project/root/pull/15563:466,Integrability,interface,interface,466,"The officially supported way to build LLVM/Clang as a shared library is via the LLVM_BUILD_LLVM_DYLIB and LLVM_LINK_LLVM_DYLIB CMake options (see: https://llvm.org/docs/BuildingADistribution.html). When built this way, the whole of Clang API is exposed as a shared library (libclang-cpp.so). * CMakeLists.txt: Query if we're in shared mode via llvm-config, and register the result as LLVM_LIB_IS_SHARED.; [LLVM_LIB_IS_SHARED] <target_link_libraries>: Use the PUBLIC interface of the LLVM shared library.; * lib/Interpreter/CMakeLists.txt [LLVM_LIB_IS_SHARED]: When defined, replace the individual Clang components by clang-cpp.; * lib/MetaProcessor/CMakeLists.txt: Likewise.; * lib/Utils/CMakeLists.txt: Likewise.; * tools/Jupyter/CMakeLists.txt: Likewise.; * tools/driver/CMakeLists.txt: Likewise.; * tools/libcling/CMakeLists.txt: Likewise. Fixes: <https://github.com/root-project/cling/issues/430>. - [x ] tested changes locally; -> Yes, using the Guix packages for building cling. This PR fixes https://github.com/root-project/cling/issues/430",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:349,Modifiability,config,config,349,"The officially supported way to build LLVM/Clang as a shared library is via the LLVM_BUILD_LLVM_DYLIB and LLVM_LINK_LLVM_DYLIB CMake options (see: https://llvm.org/docs/BuildingADistribution.html). When built this way, the whole of Clang API is exposed as a shared library (libclang-cpp.so). * CMakeLists.txt: Query if we're in shared mode via llvm-config, and register the result as LLVM_LIB_IS_SHARED.; [LLVM_LIB_IS_SHARED] <target_link_libraries>: Use the PUBLIC interface of the LLVM shared library.; * lib/Interpreter/CMakeLists.txt [LLVM_LIB_IS_SHARED]: When defined, replace the individual Clang components by clang-cpp.; * lib/MetaProcessor/CMakeLists.txt: Likewise.; * lib/Utils/CMakeLists.txt: Likewise.; * tools/Jupyter/CMakeLists.txt: Likewise.; * tools/driver/CMakeLists.txt: Likewise.; * tools/libcling/CMakeLists.txt: Likewise. Fixes: <https://github.com/root-project/cling/issues/430>. - [x ] tested changes locally; -> Yes, using the Guix packages for building cling. This PR fixes https://github.com/root-project/cling/issues/430",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:245,Security,expose,exposed,245,"The officially supported way to build LLVM/Clang as a shared library is via the LLVM_BUILD_LLVM_DYLIB and LLVM_LINK_LLVM_DYLIB CMake options (see: https://llvm.org/docs/BuildingADistribution.html). When built this way, the whole of Clang API is exposed as a shared library (libclang-cpp.so). * CMakeLists.txt: Query if we're in shared mode via llvm-config, and register the result as LLVM_LIB_IS_SHARED.; [LLVM_LIB_IS_SHARED] <target_link_libraries>: Use the PUBLIC interface of the LLVM shared library.; * lib/Interpreter/CMakeLists.txt [LLVM_LIB_IS_SHARED]: When defined, replace the individual Clang components by clang-cpp.; * lib/MetaProcessor/CMakeLists.txt: Likewise.; * lib/Utils/CMakeLists.txt: Likewise.; * tools/Jupyter/CMakeLists.txt: Likewise.; * tools/driver/CMakeLists.txt: Likewise.; * tools/libcling/CMakeLists.txt: Likewise. Fixes: <https://github.com/root-project/cling/issues/430>. - [x ] tested changes locally; -> Yes, using the Guix packages for building cling. This PR fixes https://github.com/root-project/cling/issues/430",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15563:909,Testability,test,tested,909,"The officially supported way to build LLVM/Clang as a shared library is via the LLVM_BUILD_LLVM_DYLIB and LLVM_LINK_LLVM_DYLIB CMake options (see: https://llvm.org/docs/BuildingADistribution.html). When built this way, the whole of Clang API is exposed as a shared library (libclang-cpp.so). * CMakeLists.txt: Query if we're in shared mode via llvm-config, and register the result as LLVM_LIB_IS_SHARED.; [LLVM_LIB_IS_SHARED] <target_link_libraries>: Use the PUBLIC interface of the LLVM shared library.; * lib/Interpreter/CMakeLists.txt [LLVM_LIB_IS_SHARED]: When defined, replace the individual Clang components by clang-cpp.; * lib/MetaProcessor/CMakeLists.txt: Likewise.; * lib/Utils/CMakeLists.txt: Likewise.; * tools/Jupyter/CMakeLists.txt: Likewise.; * tools/driver/CMakeLists.txt: Likewise.; * tools/libcling/CMakeLists.txt: Likewise. Fixes: <https://github.com/root-project/cling/issues/430>. - [x ] tested changes locally; -> Yes, using the Guix packages for building cling. This PR fixes https://github.com/root-project/cling/issues/430",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15563
https://github.com/root-project/root/pull/15564:509,Deployability,update,updated,509,"# This Pull request:; Adds a Complete translation of the Geometry-Tutorials into python. ## Changes or fixes:; It runs, it re-reruns, and it gets out of IPython without crashing memory.; The Root-Objects have been cautiously removed once they have been created by `pyroot`, this helps to run the scripts again-and-again without crashing memory, since ROOT hasn't the ownership of the Objects anymore.; Enjoy the `pygeom` tutorials, if so. ## Checklist:. - [ yes] tested changes locally # Very much.; - [ yes] updated the docs (if necessary). This PR fixes # ; It doesn't fix anything but adds alternatives approach to use `pyroot` with ; the Geometry Package.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15564
https://github.com/root-project/root/pull/15564:463,Testability,test,tested,463,"# This Pull request:; Adds a Complete translation of the Geometry-Tutorials into python. ## Changes or fixes:; It runs, it re-reruns, and it gets out of IPython without crashing memory.; The Root-Objects have been cautiously removed once they have been created by `pyroot`, this helps to run the scripts again-and-again without crashing memory, since ROOT hasn't the ownership of the Objects anymore.; Enjoy the `pygeom` tutorials, if so. ## Checklist:. - [ yes] tested changes locally # Very much.; - [ yes] updated the docs (if necessary). This PR fixes # ; It doesn't fix anything but adds alternatives approach to use `pyroot` with ; the Geometry Package.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15564
https://github.com/root-project/root/pull/15565:118,Deployability,update,updated,118,# This Pull request:; Translated FOAM tutorials into Python. ## Checklist:. - [ yes] tested changes locally; - [ yes] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15565
https://github.com/root-project/root/pull/15565:85,Testability,test,tested,85,# This Pull request:; Translated FOAM tutorials into Python. ## Checklist:. - [ yes] tested changes locally; - [ yes] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15565
https://github.com/root-project/root/pull/15566:129,Deployability,update,updated,129,# This Pull request:; Adds translation of Matrix Tutorials into Python. ## Checklist:. - [ yes] tested changes locally; - [yes ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15566
https://github.com/root-project/root/pull/15566:96,Testability,test,tested,96,# This Pull request:; Adds translation of Matrix Tutorials into Python. ## Checklist:. - [ yes] tested changes locally; - [yes ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15566
https://github.com/root-project/root/pull/15567:127,Deployability,update,updated,127,# This Pull request:; Adds a Physics Tutorials translation into Python. ## Checklist:. - [yes] tested changes locally; - [yes] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15567
https://github.com/root-project/root/pull/15567:95,Testability,test,tested,95,# This Pull request:; Adds a Physics Tutorials translation into Python. ## Checklist:. - [yes] tested changes locally; - [yes] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15567
https://github.com/root-project/root/pull/15573:492,Deployability,update,updated,492,"# This Pull request:; Adds a Complete translation of the Geometry-Tutorials into python. ## Changes or fixes:; It runs, it re-reruns, and it gets out of IPython without crashing memory.; The Root-Objects have been cautiously removed once they have been created by pyroot, this helps to run the scripts again-and-again without crashing memory, since ROOT hasn't the ownership of the Objects anymore.; Enjoy the pygeom tutorials, if so. ## Checklist:. - [ yes] tested changes locally; - [ yes] updated the docs (if necessary); - [ yes] synchronized forked with master(latest-stable). This PR fixes # . It doesn't fix anything but adds alternatives approach to use pyroot with; the Geometry Package.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15573
https://github.com/root-project/root/pull/15573:534,Integrability,synchroniz,synchronized,534,"# This Pull request:; Adds a Complete translation of the Geometry-Tutorials into python. ## Changes or fixes:; It runs, it re-reruns, and it gets out of IPython without crashing memory.; The Root-Objects have been cautiously removed once they have been created by pyroot, this helps to run the scripts again-and-again without crashing memory, since ROOT hasn't the ownership of the Objects anymore.; Enjoy the pygeom tutorials, if so. ## Checklist:. - [ yes] tested changes locally; - [ yes] updated the docs (if necessary); - [ yes] synchronized forked with master(latest-stable). This PR fixes # . It doesn't fix anything but adds alternatives approach to use pyroot with; the Geometry Package.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15573
https://github.com/root-project/root/pull/15573:459,Testability,test,tested,459,"# This Pull request:; Adds a Complete translation of the Geometry-Tutorials into python. ## Changes or fixes:; It runs, it re-reruns, and it gets out of IPython without crashing memory.; The Root-Objects have been cautiously removed once they have been created by pyroot, this helps to run the scripts again-and-again without crashing memory, since ROOT hasn't the ownership of the Objects anymore.; Enjoy the pygeom tutorials, if so. ## Checklist:. - [ yes] tested changes locally; - [ yes] updated the docs (if necessary); - [ yes] synchronized forked with master(latest-stable). This PR fixes # . It doesn't fix anything but adds alternatives approach to use pyroot with; the Geometry Package.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15573
https://github.com/root-project/root/pull/15574:121,Deployability,update,updated,121,# This Pull request:; Addition of FOAM tutorials into Python. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] synchronized forked with master(latest-stable),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15574
https://github.com/root-project/root/pull/15574:164,Integrability,synchroniz,synchronized,164,# This Pull request:; Addition of FOAM tutorials into Python. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] synchronized forked with master(latest-stable),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15574
https://github.com/root-project/root/pull/15574:87,Testability,test,tested,87,# This Pull request:; Addition of FOAM tutorials into Python. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] synchronized forked with master(latest-stable),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15574
https://github.com/root-project/root/pull/15575:122,Deployability,update,updated,122,# This Pull request:; Translated Matrix-Tutorials into Python. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] synchronized forked with master(latest-stable),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15575
https://github.com/root-project/root/pull/15575:165,Integrability,synchroniz,synchronized,165,# This Pull request:; Translated Matrix-Tutorials into Python. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] synchronized forked with master(latest-stable),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15575
https://github.com/root-project/root/pull/15575:88,Testability,test,tested,88,# This Pull request:; Translated Matrix-Tutorials into Python. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] synchronized forked with master(latest-stable),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15575
https://github.com/root-project/root/pull/15576:120,Deployability,update,updated,120,# This Pull request:; Adds the Physics Tutorial into Python. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] synchronized forked with master(latest-stable),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15576
https://github.com/root-project/root/pull/15576:163,Integrability,synchroniz,synchronized,163,# This Pull request:; Adds the Physics Tutorial into Python. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] synchronized forked with master(latest-stable),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15576
https://github.com/root-project/root/pull/15576:86,Testability,test,tested,86,# This Pull request:; Adds the Physics Tutorial into Python. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] synchronized forked with master(latest-stable),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15576
https://github.com/root-project/root/pull/15578:1031,Availability,down,down,1031,"For now just add a test for the specific scenario, see description in the commit message. The test will likely fail on many platforms, for reference I leave a log with the RDataFrame verbosity turned up. [many_threads.log](https://github.com/root-project/root/files/15387003/many_threads.log). Look for the lines with `Jitting and executing the following code`, there will be (at least) one like; ```; Info in <[ROOT.RDF] Debug /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:329 in Long64_t ROOT::Internal::RDF::InterpreterCalc(const std::string &, const std::string &)>: Jitting and executing the following code:. Info in <[ROOT.RDF] Info /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:917 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000169039s elapsed).; ```. Note that after the line there is an empty space. This means that the thread is trying to JIT an empty string, which will trigger an exception, as it boils down to doing; ```; root [0] TInterpreter::EErrorCode errorCode(TInterpreter::kNoError);; root [1] gInterpreter->Calc("""", &errorCode);; root [2] errorCode; (TInterpreter::EErrorCode) (TInterpreter::kDangerous) : (unsigned int) 2; ```; And RDF throws always unless the return code is `kNoError`. **Note**: I will introduce the commit with the fix after a first round of failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:1085,Availability,error,errorCode,1085,"For now just add a test for the specific scenario, see description in the commit message. The test will likely fail on many platforms, for reference I leave a log with the RDataFrame verbosity turned up. [many_threads.log](https://github.com/root-project/root/files/15387003/many_threads.log). Look for the lines with `Jitting and executing the following code`, there will be (at least) one like; ```; Info in <[ROOT.RDF] Debug /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:329 in Long64_t ROOT::Internal::RDF::InterpreterCalc(const std::string &, const std::string &)>: Jitting and executing the following code:. Info in <[ROOT.RDF] Info /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:917 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000169039s elapsed).; ```. Note that after the line there is an empty space. This means that the thread is trying to JIT an empty string, which will trigger an exception, as it boils down to doing; ```; root [0] TInterpreter::EErrorCode errorCode(TInterpreter::kNoError);; root [1] gInterpreter->Calc("""", &errorCode);; root [2] errorCode; (TInterpreter::EErrorCode) (TInterpreter::kDangerous) : (unsigned int) 2; ```; And RDF throws always unless the return code is `kNoError`. **Note**: I will introduce the commit with the fix after a first round of failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:1154,Availability,error,errorCode,1154,"For now just add a test for the specific scenario, see description in the commit message. The test will likely fail on many platforms, for reference I leave a log with the RDataFrame verbosity turned up. [many_threads.log](https://github.com/root-project/root/files/15387003/many_threads.log). Look for the lines with `Jitting and executing the following code`, there will be (at least) one like; ```; Info in <[ROOT.RDF] Debug /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:329 in Long64_t ROOT::Internal::RDF::InterpreterCalc(const std::string &, const std::string &)>: Jitting and executing the following code:. Info in <[ROOT.RDF] Info /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:917 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000169039s elapsed).; ```. Note that after the line there is an empty space. This means that the thread is trying to JIT an empty string, which will trigger an exception, as it boils down to doing; ```; root [0] TInterpreter::EErrorCode errorCode(TInterpreter::kNoError);; root [1] gInterpreter->Calc("""", &errorCode);; root [2] errorCode; (TInterpreter::EErrorCode) (TInterpreter::kDangerous) : (unsigned int) 2; ```; And RDF throws always unless the return code is `kNoError`. **Note**: I will introduce the commit with the fix after a first round of failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:1176,Availability,error,errorCode,1176,"For now just add a test for the specific scenario, see description in the commit message. The test will likely fail on many platforms, for reference I leave a log with the RDataFrame verbosity turned up. [many_threads.log](https://github.com/root-project/root/files/15387003/many_threads.log). Look for the lines with `Jitting and executing the following code`, there will be (at least) one like; ```; Info in <[ROOT.RDF] Debug /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:329 in Long64_t ROOT::Internal::RDF::InterpreterCalc(const std::string &, const std::string &)>: Jitting and executing the following code:. Info in <[ROOT.RDF] Info /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:917 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000169039s elapsed).; ```. Note that after the line there is an empty space. This means that the thread is trying to JIT an empty string, which will trigger an exception, as it boils down to doing; ```; root [0] TInterpreter::EErrorCode errorCode(TInterpreter::kNoError);; root [1] gInterpreter->Calc("""", &errorCode);; root [2] errorCode; (TInterpreter::EErrorCode) (TInterpreter::kDangerous) : (unsigned int) 2; ```; And RDF throws always unless the return code is `kNoError`. **Note**: I will introduce the commit with the fix after a first round of failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:81,Integrability,message,message,81,"For now just add a test for the specific scenario, see description in the commit message. The test will likely fail on many platforms, for reference I leave a log with the RDataFrame verbosity turned up. [many_threads.log](https://github.com/root-project/root/files/15387003/many_threads.log). Look for the lines with `Jitting and executing the following code`, there will be (at least) one like; ```; Info in <[ROOT.RDF] Debug /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:329 in Long64_t ROOT::Internal::RDF::InterpreterCalc(const std::string &, const std::string &)>: Jitting and executing the following code:. Info in <[ROOT.RDF] Info /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:917 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000169039s elapsed).; ```. Note that after the line there is an empty space. This means that the thread is trying to JIT an empty string, which will trigger an exception, as it boils down to doing; ```; root [0] TInterpreter::EErrorCode errorCode(TInterpreter::kNoError);; root [1] gInterpreter->Calc("""", &errorCode);; root [2] errorCode; (TInterpreter::EErrorCode) (TInterpreter::kDangerous) : (unsigned int) 2; ```; And RDF throws always unless the return code is `kNoError`. **Note**: I will introduce the commit with the fix after a first round of failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:19,Testability,test,test,19,"For now just add a test for the specific scenario, see description in the commit message. The test will likely fail on many platforms, for reference I leave a log with the RDataFrame verbosity turned up. [many_threads.log](https://github.com/root-project/root/files/15387003/many_threads.log). Look for the lines with `Jitting and executing the following code`, there will be (at least) one like; ```; Info in <[ROOT.RDF] Debug /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:329 in Long64_t ROOT::Internal::RDF::InterpreterCalc(const std::string &, const std::string &)>: Jitting and executing the following code:. Info in <[ROOT.RDF] Info /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:917 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000169039s elapsed).; ```. Note that after the line there is an empty space. This means that the thread is trying to JIT an empty string, which will trigger an exception, as it boils down to doing; ```; root [0] TInterpreter::EErrorCode errorCode(TInterpreter::kNoError);; root [1] gInterpreter->Calc("""", &errorCode);; root [2] errorCode; (TInterpreter::EErrorCode) (TInterpreter::kDangerous) : (unsigned int) 2; ```; And RDF throws always unless the return code is `kNoError`. **Note**: I will introduce the commit with the fix after a first round of failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:94,Testability,test,test,94,"For now just add a test for the specific scenario, see description in the commit message. The test will likely fail on many platforms, for reference I leave a log with the RDataFrame verbosity turned up. [many_threads.log](https://github.com/root-project/root/files/15387003/many_threads.log). Look for the lines with `Jitting and executing the following code`, there will be (at least) one like; ```; Info in <[ROOT.RDF] Debug /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:329 in Long64_t ROOT::Internal::RDF::InterpreterCalc(const std::string &, const std::string &)>: Jitting and executing the following code:. Info in <[ROOT.RDF] Info /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:917 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000169039s elapsed).; ```. Note that after the line there is an empty space. This means that the thread is trying to JIT an empty string, which will trigger an exception, as it boils down to doing; ```; root [0] TInterpreter::EErrorCode errorCode(TInterpreter::kNoError);; root [1] gInterpreter->Calc("""", &errorCode);; root [2] errorCode; (TInterpreter::EErrorCode) (TInterpreter::kDangerous) : (unsigned int) 2; ```; And RDF throws always unless the return code is `kNoError`. **Note**: I will introduce the commit with the fix after a first round of failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:159,Testability,log,log,159,"For now just add a test for the specific scenario, see description in the commit message. The test will likely fail on many platforms, for reference I leave a log with the RDataFrame verbosity turned up. [many_threads.log](https://github.com/root-project/root/files/15387003/many_threads.log). Look for the lines with `Jitting and executing the following code`, there will be (at least) one like; ```; Info in <[ROOT.RDF] Debug /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:329 in Long64_t ROOT::Internal::RDF::InterpreterCalc(const std::string &, const std::string &)>: Jitting and executing the following code:. Info in <[ROOT.RDF] Info /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:917 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000169039s elapsed).; ```. Note that after the line there is an empty space. This means that the thread is trying to JIT an empty string, which will trigger an exception, as it boils down to doing; ```; root [0] TInterpreter::EErrorCode errorCode(TInterpreter::kNoError);; root [1] gInterpreter->Calc("""", &errorCode);; root [2] errorCode; (TInterpreter::EErrorCode) (TInterpreter::kDangerous) : (unsigned int) 2; ```; And RDF throws always unless the return code is `kNoError`. **Note**: I will introduce the commit with the fix after a first round of failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:218,Testability,log,log,218,"For now just add a test for the specific scenario, see description in the commit message. The test will likely fail on many platforms, for reference I leave a log with the RDataFrame verbosity turned up. [many_threads.log](https://github.com/root-project/root/files/15387003/many_threads.log). Look for the lines with `Jitting and executing the following code`, there will be (at least) one like; ```; Info in <[ROOT.RDF] Debug /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:329 in Long64_t ROOT::Internal::RDF::InterpreterCalc(const std::string &, const std::string &)>: Jitting and executing the following code:. Info in <[ROOT.RDF] Info /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:917 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000169039s elapsed).; ```. Note that after the line there is an empty space. This means that the thread is trying to JIT an empty string, which will trigger an exception, as it boils down to doing; ```; root [0] TInterpreter::EErrorCode errorCode(TInterpreter::kNoError);; root [1] gInterpreter->Calc("""", &errorCode);; root [2] errorCode; (TInterpreter::EErrorCode) (TInterpreter::kDangerous) : (unsigned int) 2; ```; And RDF throws always unless the return code is `kNoError`. **Note**: I will introduce the commit with the fix after a first round of failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:288,Testability,log,log,288,"For now just add a test for the specific scenario, see description in the commit message. The test will likely fail on many platforms, for reference I leave a log with the RDataFrame verbosity turned up. [many_threads.log](https://github.com/root-project/root/files/15387003/many_threads.log). Look for the lines with `Jitting and executing the following code`, there will be (at least) one like; ```; Info in <[ROOT.RDF] Debug /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:329 in Long64_t ROOT::Internal::RDF::InterpreterCalc(const std::string &, const std::string &)>: Jitting and executing the following code:. Info in <[ROOT.RDF] Info /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:917 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000169039s elapsed).; ```. Note that after the line there is an empty space. This means that the thread is trying to JIT an empty string, which will trigger an exception, as it boils down to doing; ```; root [0] TInterpreter::EErrorCode errorCode(TInterpreter::kNoError);; root [1] gInterpreter->Calc("""", &errorCode);; root [2] errorCode; (TInterpreter::EErrorCode) (TInterpreter::kDangerous) : (unsigned int) 2; ```; And RDF throws always unless the return code is `kNoError`. **Note**: I will introduce the commit with the fix after a first round of failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/pull/15578:1408,Testability,test,tests,1408,"For now just add a test for the specific scenario, see description in the commit message. The test will likely fail on many platforms, for reference I leave a log with the RDataFrame verbosity turned up. [many_threads.log](https://github.com/root-project/root/files/15387003/many_threads.log). Look for the lines with `Jitting and executing the following code`, there will be (at least) one like; ```; Info in <[ROOT.RDF] Debug /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:329 in Long64_t ROOT::Internal::RDF::InterpreterCalc(const std::string &, const std::string &)>: Jitting and executing the following code:. Info in <[ROOT.RDF] Info /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:917 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000169039s elapsed).; ```. Note that after the line there is an empty space. This means that the thread is trying to JIT an empty string, which will trigger an exception, as it boils down to doing; ```; root [0] TInterpreter::EErrorCode errorCode(TInterpreter::kNoError);; root [1] gInterpreter->Calc("""", &errorCode);; root [2] errorCode; (TInterpreter::EErrorCode) (TInterpreter::kDangerous) : (unsigned int) 2; ```; And RDF throws always unless the return code is `kNoError`. **Note**: I will introduce the commit with the fix after a first round of failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15578
https://github.com/root-project/root/issues/15579:1123,Deployability,Install,Installation,1123,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. 10-20fold slowdown of running a particular ALICE event generation process, where the generator is compiled just-in-time from a ROOT macro (see reproducer). Slowdown observed when switching from ROOT tag 6.28.04 to 6.28.08. In particular, bisecting this slowdown shows that it is caused by this commit https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 (from #11631). Reverting this single commit brings back the original performance. ### Reproducer. On lxplus7.cern.ch, run:. ```; #!/usr/bin/env bash. # good software version; /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 > env.txt. # bad software version; #/cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1 > env.txt. source env.txt. time o2-sim-dpl-eventgen --nEvents 5 --generator external --configFile ${O2DPG_ROOT}/MC/config/PWGEM/ini/GeneratorEMCocktail.ini --seed 11. ```. ### ROOT version. Everything having https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 included. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:891,Modifiability,config,configFile,891,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. 10-20fold slowdown of running a particular ALICE event generation process, where the generator is compiled just-in-time from a ROOT macro (see reproducer). Slowdown observed when switching from ROOT tag 6.28.04 to 6.28.08. In particular, bisecting this slowdown shows that it is caused by this commit https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 (from #11631). Reverting this single commit brings back the original performance. ### Reproducer. On lxplus7.cern.ch, run:. ```; #!/usr/bin/env bash. # good software version; /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 > env.txt. # bad software version; #/cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1 > env.txt. source env.txt. time o2-sim-dpl-eventgen --nEvents 5 --generator external --configFile ${O2DPG_ROOT}/MC/config/PWGEM/ini/GeneratorEMCocktail.ini --seed 11. ```. ### ROOT version. Everything having https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 included. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:919,Modifiability,config,config,919,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. 10-20fold slowdown of running a particular ALICE event generation process, where the generator is compiled just-in-time from a ROOT macro (see reproducer). Slowdown observed when switching from ROOT tag 6.28.04 to 6.28.08. In particular, bisecting this slowdown shows that it is caused by this commit https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 (from #11631). Reverting this single commit brings back the original performance. ### Reproducer. On lxplus7.cern.ch, run:. ```; #!/usr/bin/env bash. # good software version; /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 > env.txt. # bad software version; #/cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1 > env.txt. source env.txt. time o2-sim-dpl-eventgen --nEvents 5 --generator external --configFile ${O2DPG_ROOT}/MC/config/PWGEM/ini/GeneratorEMCocktail.ini --seed 11. ```. ### ROOT version. Everything having https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 included. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/issues/15579:542,Performance,perform,performance,542,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. 10-20fold slowdown of running a particular ALICE event generation process, where the generator is compiled just-in-time from a ROOT macro (see reproducer). Slowdown observed when switching from ROOT tag 6.28.04 to 6.28.08. In particular, bisecting this slowdown shows that it is caused by this commit https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 (from #11631). Reverting this single commit brings back the original performance. ### Reproducer. On lxplus7.cern.ch, run:. ```; #!/usr/bin/env bash. # good software version; /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 > env.txt. # bad software version; #/cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1 > env.txt. source env.txt. time o2-sim-dpl-eventgen --nEvents 5 --generator external --configFile ${O2DPG_ROOT}/MC/config/PWGEM/ini/GeneratorEMCocktail.ini --seed 11. ```. ### ROOT version. Everything having https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 included. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15579
https://github.com/root-project/root/pull/15580:318,Deployability,update,updated,318,"Also apply clang-format to the involved files in the process. ## Changes or fixes:; `RNTupleFileWriter::Recreate` and `RNTupleFileWriter::Append ` now return a `unique_ptr` rather than a raw pointer, to make it obvious that the caller gets ownership of that pointer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15580
https://github.com/root-project/root/pull/15580:288,Testability,test,tested,288,"Also apply clang-format to the involved files in the process. ## Changes or fixes:; `RNTupleFileWriter::Recreate` and `RNTupleFileWriter::Append ` now return a `unique_ptr` rather than a raw pointer, to make it obvious that the caller gets ownership of that pointer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15580
https://github.com/root-project/root/pull/15581:0,Deployability,update,update,0,update 6.32 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15581
https://github.com/root-project/root/pull/15581:12,Deployability,release,release,12,update 6.32 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15581
https://github.com/root-project/root/pull/15583:25,Integrability,depend,dependencies,25,"The last commit adds the dependencies for the TMVA GNN unit tests to the docker images via the `requirements.txt`. However, this will only have a delayed effect until the images are re-built. Therefore, we can't validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be opened to revert this commit. Backport of https://github.com/root-project/root/pull/15512.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15583
https://github.com/root-project/root/pull/15583:212,Security,validat,validate,212,"The last commit adds the dependencies for the TMVA GNN unit tests to the docker images via the `requirements.txt`. However, this will only have a delayed effect until the images are re-built. Therefore, we can't validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be opened to revert this commit. Backport of https://github.com/root-project/root/pull/15512.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15583
https://github.com/root-project/root/pull/15583:60,Testability,test,tests,60,"The last commit adds the dependencies for the TMVA GNN unit tests to the docker images via the `requirements.txt`. However, this will only have a delayed effect until the images are re-built. Therefore, we can't validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be opened to revert this commit. Backport of https://github.com/root-project/root/pull/15512.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15583
https://github.com/root-project/root/pull/15583:238,Testability,test,tests,238,"The last commit adds the dependencies for the TMVA GNN unit tests to the docker images via the `requirements.txt`. However, this will only have a delayed effect until the images are re-built. Therefore, we can't validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be opened to revert this commit. Backport of https://github.com/root-project/root/pull/15512.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15583
https://github.com/root-project/root/pull/15584:25,Integrability,depend,dependencies,25,"The last commit adds the dependencies for the TMVA GNN unit tests to the docker images via the `requirements.txt`. However, this will only have a delayed effect until the images are re-built. Therefore, we can't validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be opened to revert this commit. Backport of https://github.com/root-project/root/pull/15512.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15584
https://github.com/root-project/root/pull/15584:212,Security,validat,validate,212,"The last commit adds the dependencies for the TMVA GNN unit tests to the docker images via the `requirements.txt`. However, this will only have a delayed effect until the images are re-built. Therefore, we can't validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be opened to revert this commit. Backport of https://github.com/root-project/root/pull/15512.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15584
https://github.com/root-project/root/pull/15584:60,Testability,test,tests,60,"The last commit adds the dependencies for the TMVA GNN unit tests to the docker images via the `requirements.txt`. However, this will only have a delayed effect until the images are re-built. Therefore, we can't validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be opened to revert this commit. Backport of https://github.com/root-project/root/pull/15512.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15584
https://github.com/root-project/root/pull/15584:238,Testability,test,tests,238,"The last commit adds the dependencies for the TMVA GNN unit tests to the docker images via the `requirements.txt`. However, this will only have a delayed effect until the images are re-built. Therefore, we can't validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be opened to revert this commit. Backport of https://github.com/root-project/root/pull/15512.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15584
https://github.com/root-project/root/issues/15585:142,Availability,error,errors,142,### Check duplicate issues. - [X] Checked for duplicates. ### Description. After updating from gcc 13.2.1 to gcc 14.1.1 I get several compile errors starting with e.g.; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:10:; In file included from /usr/include/c++/14.1.1/chrono:49:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr.h:53:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr_base.h:66:; /usr/include/c++/14.1.1/bits/align.h:93:21: error: call to 'has_single_bit' is ambiguous; static_assert(std::has_single_bit(_Align));; ^~~~~~~~~~~~~~~~~~~; /usr/include/c++/14.1.1/bit:439:5: note: candidate function [with _Tp = unsigned long]; has_single_bit(_Tp __x) noexcept; ^; ```; The full log is ; [install.txt](https://github.com/root-project/root/files/15391030/install.txt). ### Reproducer. ```bash; git clone https://github.com/root-project/root.git; cd root/; git checkout v6-30-06; mkdir build install; cd build; cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=20 ../; cmake --build . --target install -j 12 &> install.txt; ```. ### ROOT version. v6-30-06. ### Installation method. from source. ### Operating system. Linux (arch linux). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:554,Availability,error,error,554,### Check duplicate issues. - [X] Checked for duplicates. ### Description. After updating from gcc 13.2.1 to gcc 14.1.1 I get several compile errors starting with e.g.; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:10:; In file included from /usr/include/c++/14.1.1/chrono:49:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr.h:53:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr_base.h:66:; /usr/include/c++/14.1.1/bits/align.h:93:21: error: call to 'has_single_bit' is ambiguous; static_assert(std::has_single_bit(_Align));; ^~~~~~~~~~~~~~~~~~~; /usr/include/c++/14.1.1/bit:439:5: note: candidate function [with _Tp = unsigned long]; has_single_bit(_Tp __x) noexcept; ^; ```; The full log is ; [install.txt](https://github.com/root-project/root/files/15391030/install.txt). ### Reproducer. ```bash; git clone https://github.com/root-project/root.git; cd root/; git checkout v6-30-06; mkdir build install; cd build; cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=20 ../; cmake --build . --target install -j 12 &> install.txt; ```. ### ROOT version. v6-30-06. ### Installation method. from source. ### Operating system. Linux (arch linux). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:815,Deployability,install,install,815,### Check duplicate issues. - [X] Checked for duplicates. ### Description. After updating from gcc 13.2.1 to gcc 14.1.1 I get several compile errors starting with e.g.; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:10:; In file included from /usr/include/c++/14.1.1/chrono:49:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr.h:53:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr_base.h:66:; /usr/include/c++/14.1.1/bits/align.h:93:21: error: call to 'has_single_bit' is ambiguous; static_assert(std::has_single_bit(_Align));; ^~~~~~~~~~~~~~~~~~~; /usr/include/c++/14.1.1/bit:439:5: note: candidate function [with _Tp = unsigned long]; has_single_bit(_Tp __x) noexcept; ^; ```; The full log is ; [install.txt](https://github.com/root-project/root/files/15391030/install.txt). ### Reproducer. ```bash; git clone https://github.com/root-project/root.git; cd root/; git checkout v6-30-06; mkdir build install; cd build; cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=20 ../; cmake --build . --target install -j 12 &> install.txt; ```. ### ROOT version. v6-30-06. ### Installation method. from source. ### Operating system. Linux (arch linux). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:880,Deployability,install,install,880,### Check duplicate issues. - [X] Checked for duplicates. ### Description. After updating from gcc 13.2.1 to gcc 14.1.1 I get several compile errors starting with e.g.; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:10:; In file included from /usr/include/c++/14.1.1/chrono:49:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr.h:53:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr_base.h:66:; /usr/include/c++/14.1.1/bits/align.h:93:21: error: call to 'has_single_bit' is ambiguous; static_assert(std::has_single_bit(_Align));; ^~~~~~~~~~~~~~~~~~~; /usr/include/c++/14.1.1/bit:439:5: note: candidate function [with _Tp = unsigned long]; has_single_bit(_Tp __x) noexcept; ^; ```; The full log is ; [install.txt](https://github.com/root-project/root/files/15391030/install.txt). ### Reproducer. ```bash; git clone https://github.com/root-project/root.git; cd root/; git checkout v6-30-06; mkdir build install; cd build; cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=20 ../; cmake --build . --target install -j 12 &> install.txt; ```. ### ROOT version. v6-30-06. ### Installation method. from source. ### Operating system. Linux (arch linux). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:1016,Deployability,install,install,1016,### Check duplicate issues. - [X] Checked for duplicates. ### Description. After updating from gcc 13.2.1 to gcc 14.1.1 I get several compile errors starting with e.g.; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:10:; In file included from /usr/include/c++/14.1.1/chrono:49:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr.h:53:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr_base.h:66:; /usr/include/c++/14.1.1/bits/align.h:93:21: error: call to 'has_single_bit' is ambiguous; static_assert(std::has_single_bit(_Align));; ^~~~~~~~~~~~~~~~~~~; /usr/include/c++/14.1.1/bit:439:5: note: candidate function [with _Tp = unsigned long]; has_single_bit(_Tp __x) noexcept; ^; ```; The full log is ; [install.txt](https://github.com/root-project/root/files/15391030/install.txt). ### Reproducer. ```bash; git clone https://github.com/root-project/root.git; cd root/; git checkout v6-30-06; mkdir build install; cd build; cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=20 ../; cmake --build . --target install -j 12 &> install.txt; ```. ### ROOT version. v6-30-06. ### Installation method. from source. ### Operating system. Linux (arch linux). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:1067,Deployability,install,install,1067,### Check duplicate issues. - [X] Checked for duplicates. ### Description. After updating from gcc 13.2.1 to gcc 14.1.1 I get several compile errors starting with e.g.; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:10:; In file included from /usr/include/c++/14.1.1/chrono:49:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr.h:53:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr_base.h:66:; /usr/include/c++/14.1.1/bits/align.h:93:21: error: call to 'has_single_bit' is ambiguous; static_assert(std::has_single_bit(_Align));; ^~~~~~~~~~~~~~~~~~~; /usr/include/c++/14.1.1/bit:439:5: note: candidate function [with _Tp = unsigned long]; has_single_bit(_Tp __x) noexcept; ^; ```; The full log is ; [install.txt](https://github.com/root-project/root/files/15391030/install.txt). ### Reproducer. ```bash; git clone https://github.com/root-project/root.git; cd root/; git checkout v6-30-06; mkdir build install; cd build; cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=20 ../; cmake --build . --target install -j 12 &> install.txt; ```. ### ROOT version. v6-30-06. ### Installation method. from source. ### Operating system. Linux (arch linux). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:1129,Deployability,install,install,1129,### Check duplicate issues. - [X] Checked for duplicates. ### Description. After updating from gcc 13.2.1 to gcc 14.1.1 I get several compile errors starting with e.g.; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:10:; In file included from /usr/include/c++/14.1.1/chrono:49:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr.h:53:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr_base.h:66:; /usr/include/c++/14.1.1/bits/align.h:93:21: error: call to 'has_single_bit' is ambiguous; static_assert(std::has_single_bit(_Align));; ^~~~~~~~~~~~~~~~~~~; /usr/include/c++/14.1.1/bit:439:5: note: candidate function [with _Tp = unsigned long]; has_single_bit(_Tp __x) noexcept; ^; ```; The full log is ; [install.txt](https://github.com/root-project/root/files/15391030/install.txt). ### Reproducer. ```bash; git clone https://github.com/root-project/root.git; cd root/; git checkout v6-30-06; mkdir build install; cd build; cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=20 ../; cmake --build . --target install -j 12 &> install.txt; ```. ### ROOT version. v6-30-06. ### Installation method. from source. ### Operating system. Linux (arch linux). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:1146,Deployability,install,install,1146,### Check duplicate issues. - [X] Checked for duplicates. ### Description. After updating from gcc 13.2.1 to gcc 14.1.1 I get several compile errors starting with e.g.; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:10:; In file included from /usr/include/c++/14.1.1/chrono:49:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr.h:53:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr_base.h:66:; /usr/include/c++/14.1.1/bits/align.h:93:21: error: call to 'has_single_bit' is ambiguous; static_assert(std::has_single_bit(_Align));; ^~~~~~~~~~~~~~~~~~~; /usr/include/c++/14.1.1/bit:439:5: note: candidate function [with _Tp = unsigned long]; has_single_bit(_Tp __x) noexcept; ^; ```; The full log is ; [install.txt](https://github.com/root-project/root/files/15391030/install.txt). ### Reproducer. ```bash; git clone https://github.com/root-project/root.git; cd root/; git checkout v6-30-06; mkdir build install; cd build; cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=20 ../; cmake --build . --target install -j 12 &> install.txt; ```. ### ROOT version. v6-30-06. ### Installation method. from source. ### Operating system. Linux (arch linux). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:1196,Deployability,Install,Installation,1196,### Check duplicate issues. - [X] Checked for duplicates. ### Description. After updating from gcc 13.2.1 to gcc 14.1.1 I get several compile errors starting with e.g.; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:10:; In file included from /usr/include/c++/14.1.1/chrono:49:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr.h:53:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr_base.h:66:; /usr/include/c++/14.1.1/bits/align.h:93:21: error: call to 'has_single_bit' is ambiguous; static_assert(std::has_single_bit(_Align));; ^~~~~~~~~~~~~~~~~~~; /usr/include/c++/14.1.1/bit:439:5: note: candidate function [with _Tp = unsigned long]; has_single_bit(_Tp __x) noexcept; ^; ```; The full log is ; [install.txt](https://github.com/root-project/root/files/15391030/install.txt). ### Reproducer. ```bash; git clone https://github.com/root-project/root.git; cd root/; git checkout v6-30-06; mkdir build install; cd build; cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=20 ../; cmake --build . --target install -j 12 &> install.txt; ```. ### ROOT version. v6-30-06. ### Installation method. from source. ### Operating system. Linux (arch linux). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:805,Testability,log,log,805,### Check duplicate issues. - [X] Checked for duplicates. ### Description. After updating from gcc 13.2.1 to gcc 14.1.1 I get several compile errors starting with e.g.; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:10:; In file included from /usr/include/c++/14.1.1/chrono:49:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr.h:53:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr_base.h:66:; /usr/include/c++/14.1.1/bits/align.h:93:21: error: call to 'has_single_bit' is ambiguous; static_assert(std::has_single_bit(_Align));; ^~~~~~~~~~~~~~~~~~~; /usr/include/c++/14.1.1/bit:439:5: note: candidate function [with _Tp = unsigned long]; has_single_bit(_Tp __x) noexcept; ^; ```; The full log is ; [install.txt](https://github.com/root-project/root/files/15391030/install.txt). ### Reproducer. ```bash; git clone https://github.com/root-project/root.git; cd root/; git checkout v6-30-06; mkdir build install; cd build; cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=20 ../; cmake --build . --target install -j 12 &> install.txt; ```. ### ROOT version. v6-30-06. ### Installation method. from source. ### Operating system. Linux (arch linux). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/pull/15586:68,Deployability,release,release,68,"Backport of #13771, for more flexibility in packaging the ROOT 6.32 release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15586
https://github.com/root-project/root/pull/15587:64,Availability,error,errors,64,"Using template functions in the generated code can cause linker errors, which is avoided with this suggested commit. Backport of https://github.com/root-project/root/pull/15502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15587
https://github.com/root-project/root/pull/15587:81,Safety,avoid,avoided,81,"Using template functions in the generated code can cause linker errors, which is avoided with this suggested commit. Backport of https://github.com/root-project/root/pull/15502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15587
https://github.com/root-project/root/pull/15588:91,Availability,failure,failures,91,Re-opening [this PR](https://github.com/root-project/root/pull/15578) to check if the clad failures were real.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15588
https://github.com/root-project/root/pull/15592:5,Deployability,release,release,5,REve release notes for v632,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15592
https://github.com/root-project/root/pull/15594:183,Availability,failure,failures,183,"This is a follow-up on 98ca55239, consistent with what is already done in the code for `png` and `jpeg`. Essentially, this reverts #15191 on macOS. This will fix the occasional build failures on macOS beta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15594
https://github.com/root-project/root/pull/15595:140,Availability,failure,failures,140,"This is a follow-up on 98ca55239, consistent with what is already done in the code for `png` and `jpeg`. This will fix the occasional build failures on macOS beta. Backport of #15594.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15595
https://github.com/root-project/root/pull/15596:100,Testability,test,tests,100,"This reverts commit baf092324e6e2a9301daff36a780cd064b232c2d. We can either merge this as-is if the tests pass, or if they don't I'll close this PR without merging and open a GitHub issue about fixing these tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:207,Testability,test,tests,207,"This reverts commit baf092324e6e2a9301daff36a780cd064b232c2d. We can either merge this as-is if the tests pass, or if they don't I'll close this PR without merging and open a GitHub issue about fixing these tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15597:31,Deployability,release,release,31,"Backport of #14751 to the 6.32 release branch. Thanks again, @langenbruch!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15597
https://github.com/root-project/root/pull/15599:254,Integrability,depend,depends,254,"Reformulation of https://github.com/root-project/root/pull/12480. ---. Both `Foo<double>` and `Foo<Double32_t>` have the same typeid.; Before this commit, TClass::GetClass(typeid(Foo)) would return; whatever was registered last. This is not ""stable""; it depends on which; branch is accessed first, or which TClass::GetClass call happens first, or; which library is loaded first. Make this more reporducible by consistently preferring types will less; Double32_t / Float16_t occurrences in the typename. While at this, only remove a TClass from the typeid=>TClass map if it; really is the value for the typename. ---. This PR fixes #12509",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15599
https://github.com/root-project/root/pull/15599:365,Performance,load,loaded,365,"Reformulation of https://github.com/root-project/root/pull/12480. ---. Both `Foo<double>` and `Foo<Double32_t>` have the same typeid.; Before this commit, TClass::GetClass(typeid(Foo)) would return; whatever was registered last. This is not ""stable""; it depends on which; branch is accessed first, or which TClass::GetClass call happens first, or; which library is loaded first. Make this more reporducible by consistently preferring types will less; Double32_t / Float16_t occurrences in the typename. While at this, only remove a TClass from the typeid=>TClass map if it; really is the value for the typename. ---. This PR fixes #12509",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15599
https://github.com/root-project/root/pull/15599:282,Security,access,accessed,282,"Reformulation of https://github.com/root-project/root/pull/12480. ---. Both `Foo<double>` and `Foo<Double32_t>` have the same typeid.; Before this commit, TClass::GetClass(typeid(Foo)) would return; whatever was registered last. This is not ""stable""; it depends on which; branch is accessed first, or which TClass::GetClass call happens first, or; which library is loaded first. Make this more reporducible by consistently preferring types will less; Double32_t / Float16_t occurrences in the typename. While at this, only remove a TClass from the typeid=>TClass map if it; really is the value for the typename. ---. This PR fixes #12509",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15599
https://github.com/root-project/root/pull/15601:31,Usability,Learn,Learning,31,This PR migrates the TMVA Deep Learning classes (RNN) for new cud version 9,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15601
https://github.com/root-project/root/pull/15603:214,Deployability,Update,Update,214,"By default saved points is fallback solution when evaluation on the client fails.; But one can force usage of saved points with ""WebGui.TF1UseSave: 2""; Or one can disable saved points usage ""WebGui.TF1UseSave: 0"". Update JSROOT to v 7.7.0 which will be reference for 6.32 release",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15603
https://github.com/root-project/root/pull/15603:272,Deployability,release,release,272,"By default saved points is fallback solution when evaluation on the client fails.; But one can force usage of saved points with ""WebGui.TF1UseSave: 2""; Or one can disable saved points usage ""WebGui.TF1UseSave: 0"". Update JSROOT to v 7.7.0 which will be reference for 6.32 release",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15603
https://github.com/root-project/root/pull/15605:336,Deployability,update,updated,336,"The name of the most up-to-date `sonnet` packge is actually `dm-sonnet`:. https://github.com/google-deepmind/sonnet. The old `sonnet` can't be used, because it maximally supports Python 3.8. With ROOT, we want to support all Python versions starting from 3.8. Follows up on 7d83c00605c4. I tested locally that the GNN tests work in the updated Python environment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15605
https://github.com/root-project/root/pull/15605:290,Testability,test,tested,290,"The name of the most up-to-date `sonnet` packge is actually `dm-sonnet`:. https://github.com/google-deepmind/sonnet. The old `sonnet` can't be used, because it maximally supports Python 3.8. With ROOT, we want to support all Python versions starting from 3.8. Follows up on 7d83c00605c4. I tested locally that the GNN tests work in the updated Python environment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15605
https://github.com/root-project/root/pull/15605:318,Testability,test,tests,318,"The name of the most up-to-date `sonnet` packge is actually `dm-sonnet`:. https://github.com/google-deepmind/sonnet. The old `sonnet` can't be used, because it maximally supports Python 3.8. With ROOT, we want to support all Python versions starting from 3.8. Follows up on 7d83c00605c4. I tested locally that the GNN tests work in the updated Python environment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15605
https://github.com/root-project/root/pull/15606:167,Deployability,update,updated,167,# This Pull request:. This PR defines a new method `SetElement()` that allows to efficiently set matrix elements. . ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes [#15285](https://github.com/root-project/root/issues/15285),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15606
https://github.com/root-project/root/pull/15606:81,Energy Efficiency,efficient,efficiently,81,# This Pull request:. This PR defines a new method `SetElement()` that allows to efficiently set matrix elements. . ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes [#15285](https://github.com/root-project/root/issues/15285),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15606
https://github.com/root-project/root/pull/15606:137,Testability,test,tested,137,# This Pull request:. This PR defines a new method `SetElement()` that allows to efficiently set matrix elements. . ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes [#15285](https://github.com/root-project/root/issues/15285),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15606
https://github.com/root-project/root/pull/15607:260,Deployability,update,updated,260,"# This Pull request:. ## Changes or fixes:. Using `pm->SetPoint(pm->GetN(), x, y)` iteratively, as is usual with `TGraph`, leads to an exponentially growing result. Prevent it by clarifying the documentation. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15607
https://github.com/root-project/root/pull/15607:230,Testability,test,tested,230,"# This Pull request:. ## Changes or fixes:. Using `pm->SetPoint(pm->GetN(), x, y)` iteratively, as is usual with `TGraph`, leads to an exponentially growing result. Prevent it by clarifying the documentation. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15607
https://github.com/root-project/root/pull/15608:347,Deployability,upgrade,upgrade,347,"Fixes https://github.com/root-project/root/issues/15610. As reported on the forum:; https://root-forum.cern.ch/t/memory-leak-in-pyroot-when-using-user-defined-c-macros-from-python-and-ttree-friends/59432. According to that post, the problem is present at least since 6.26/04, but I suspect it has been there forever (at least 6.22 with with cppyy upgrade in 2019). . I fixed the memory leak in the Pythonization is in the usual way how I fix problems with the PyROOT CPython extension: re-implementing the offending parts in Python and hoping that the problem is gone. Which it is!. Note that the code also had no obvious memory leak before. where it was; using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy; API. If similar problems appear, this function might have to be; investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic; into the Python layer is better anyway. The problem can be reproduced with a variation of the forum reproducer:; ```python; import ROOT; import numpy as np. ROOT.gInterpreter.Declare(; """"""; template<class T>; void * MyGetAddress(T * b) {; return *(void**)b->GetAddress();; }; """"""; ). def macro(tree, *args, **kwargs):. import cppyy.ll. # manually; v1 = cppyy.ll.cast[tree.GetBranch(""value1"").GetClassName() + ""*""](ROOT.MyGetAddress(tree.GetBranch(""value1""))); # using the Pythonization; v2 = getattr(tree, ""value2""); return None. pinfo = ROOT.ProcInfo_t(). def print_memory(i):; ROOT.gSystem.GetProcInfo(pinfo); print(i, ""memory usage"", pinfo.fMemResident, pinfo.fMemVirtual). class reTupler:; def __init__(self, tree_name, new_file, src_file):; self.src_file = ROOT.TFile.Open(src_file); self.src_tree = self.src_file.Get(tree_name). self.new_file = ROOT.TFile.Open(new_file, ""recreate""); self.new_tree = ROOT.TTree(tree_name, tree_name). # To access branches in 'src_tree' from 'new_tree':; self.new_tree.AddFriend(self.src_tree). # To keep track of new branches and store values:; self.new_branches = {}.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:1839,Security,access,access,1839,"oving more Pythonization logic; into the Python layer is better anyway. The problem can be reproduced with a variation of the forum reproducer:; ```python; import ROOT; import numpy as np. ROOT.gInterpreter.Declare(; """"""; template<class T>; void * MyGetAddress(T * b) {; return *(void**)b->GetAddress();; }; """"""; ). def macro(tree, *args, **kwargs):. import cppyy.ll. # manually; v1 = cppyy.ll.cast[tree.GetBranch(""value1"").GetClassName() + ""*""](ROOT.MyGetAddress(tree.GetBranch(""value1""))); # using the Pythonization; v2 = getattr(tree, ""value2""); return None. pinfo = ROOT.ProcInfo_t(). def print_memory(i):; ROOT.gSystem.GetProcInfo(pinfo); print(i, ""memory usage"", pinfo.fMemResident, pinfo.fMemVirtual). class reTupler:; def __init__(self, tree_name, new_file, src_file):; self.src_file = ROOT.TFile.Open(src_file); self.src_tree = self.src_file.Get(tree_name). self.new_file = ROOT.TFile.Open(new_file, ""recreate""); self.new_tree = ROOT.TTree(tree_name, tree_name). # To access branches in 'src_tree' from 'new_tree':; self.new_tree.AddFriend(self.src_tree). # To keep track of new branches and store values:; self.new_branches = {}. def add_branch(self, name, f, value_type=""float""):; self.new_branches[name] = {}; self.new_branches[name][""f""] = f; self.new_branches[name][""name""] = name; self.new_branches[name][""value_type""] = value_type; self.new_branches[name][""value""] = value = ROOT.std.vector(value_type)(); self.new_branches[name][""tbranch""] = self.new_tree.Branch(name, value). def run(self):; nentries = self.src_tree.GetEntries(); for i in range(nentries):; # Get entry and make sure src_tree and new_tree are synced; self.src_tree.GetEntry(i); self.new_tree.GetEntry(i). # Now loop on all the branches that have been added:; for branch_name, branch_dict in self.new_branches.items():; branch_dict[""value""].clear(); # self.new_tree; branch_dict[""f""](self.new_tree); # [branch_dict['value'].push_back(result) for result in branch_dict['f'](self.new_tree)]. # Fill entry with all compu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:887,Testability,log,logic,887,"Fixes https://github.com/root-project/root/issues/15610. As reported on the forum:; https://root-forum.cern.ch/t/memory-leak-in-pyroot-when-using-user-defined-c-macros-from-python-and-ttree-friends/59432. According to that post, the problem is present at least since 6.26/04, but I suspect it has been there forever (at least 6.22 with with cppyy upgrade in 2019). . I fixed the memory leak in the Pythonization is in the usual way how I fix problems with the PyROOT CPython extension: re-implementing the offending parts in Python and hoping that the problem is gone. Which it is!. Note that the code also had no obvious memory leak before. where it was; using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy; API. If similar problems appear, this function might have to be; investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic; into the Python layer is better anyway. The problem can be reproduced with a variation of the forum reproducer:; ```python; import ROOT; import numpy as np. ROOT.gInterpreter.Declare(; """"""; template<class T>; void * MyGetAddress(T * b) {; return *(void**)b->GetAddress();; }; """"""; ). def macro(tree, *args, **kwargs):. import cppyy.ll. # manually; v1 = cppyy.ll.cast[tree.GetBranch(""value1"").GetClassName() + ""*""](ROOT.MyGetAddress(tree.GetBranch(""value1""))); # using the Pythonization; v2 = getattr(tree, ""value2""); return None. pinfo = ROOT.ProcInfo_t(). def print_memory(i):; ROOT.gSystem.GetProcInfo(pinfo); print(i, ""memory usage"", pinfo.fMemResident, pinfo.fMemVirtual). class reTupler:; def __init__(self, tree_name, new_file, src_file):; self.src_file = ROOT.TFile.Open(src_file); self.src_tree = self.src_file.Get(tree_name). self.new_file = ROOT.TFile.Open(new_file, ""recreate""); self.new_tree = ROOT.TTree(tree_name, tree_name). # To access branches in 'src_tree' from 'new_tree':; self.new_tree.AddFriend(self.src_tree). # To keep track of new branches and store values:; self.new_branches = {}.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:2687,Usability,clear,clear,2687,"e = self.src_file.Get(tree_name). self.new_file = ROOT.TFile.Open(new_file, ""recreate""); self.new_tree = ROOT.TTree(tree_name, tree_name). # To access branches in 'src_tree' from 'new_tree':; self.new_tree.AddFriend(self.src_tree). # To keep track of new branches and store values:; self.new_branches = {}. def add_branch(self, name, f, value_type=""float""):; self.new_branches[name] = {}; self.new_branches[name][""f""] = f; self.new_branches[name][""name""] = name; self.new_branches[name][""value_type""] = value_type; self.new_branches[name][""value""] = value = ROOT.std.vector(value_type)(); self.new_branches[name][""tbranch""] = self.new_tree.Branch(name, value). def run(self):; nentries = self.src_tree.GetEntries(); for i in range(nentries):; # Get entry and make sure src_tree and new_tree are synced; self.src_tree.GetEntry(i); self.new_tree.GetEntry(i). # Now loop on all the branches that have been added:; for branch_name, branch_dict in self.new_branches.items():; branch_dict[""value""].clear(); # self.new_tree; branch_dict[""f""](self.new_tree); # [branch_dict['value'].push_back(result) for result in branch_dict['f'](self.new_tree)]. # Fill entry with all computed branches; self.new_tree.Fill(). if i % 10000 == 0:; print_memory(i). self.new_tree.Write(); self.new_file.Close(); self.src_file.Close(). file_path = ""_src.root"". file = ROOT.TFile.Open(file_path, ""recreate""); tree = ROOT.TTree(""DDTree"", ""DDTree""). # Branch: value1; value1_value = ROOT.std.vector(""float"")(); value1_branch = tree.Branch(""value1"", value1_value). # Branch: value2; value2_value = ROOT.std.vector(""float"")(); value2_branch = tree.Branch(""value2"", value2_value). value_length = 20; nentries = 100000; for i in range(nentries):; tree.GetEntry(i). value1_value.clear(); [value1_value.push_back(result) for result in np.random.uniform(-999, 999, value_length)]. value2_value.clear(); [value2_value.push_back(result) for result in np.random.uniform(-99, 999, value_length)]. tree.Fill(). file.Write(); file.Close(). tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:3440,Usability,clear,clear,3440,"nd make sure src_tree and new_tree are synced; self.src_tree.GetEntry(i); self.new_tree.GetEntry(i). # Now loop on all the branches that have been added:; for branch_name, branch_dict in self.new_branches.items():; branch_dict[""value""].clear(); # self.new_tree; branch_dict[""f""](self.new_tree); # [branch_dict['value'].push_back(result) for result in branch_dict['f'](self.new_tree)]. # Fill entry with all computed branches; self.new_tree.Fill(). if i % 10000 == 0:; print_memory(i). self.new_tree.Write(); self.new_file.Close(); self.src_file.Close(). file_path = ""_src.root"". file = ROOT.TFile.Open(file_path, ""recreate""); tree = ROOT.TTree(""DDTree"", ""DDTree""). # Branch: value1; value1_value = ROOT.std.vector(""float"")(); value1_branch = tree.Branch(""value1"", value1_value). # Branch: value2; value2_value = ROOT.std.vector(""float"")(); value2_branch = tree.Branch(""value2"", value2_value). value_length = 20; nentries = 100000; for i in range(nentries):; tree.GetEntry(i). value1_value.clear(); [value1_value.push_back(result) for result in np.random.uniform(-999, 999, value_length)]. value2_value.clear(); [value2_value.push_back(result) for result in np.random.uniform(-99, 999, value_length)]. tree.Fill(). file.Write(); file.Close(). tree_name = ""DDTree""; src_path = ""_src.root""; new_path = ""_new.root"". retupler = reTupler(""DDTree"", new_path, src_path); retupler.add_branch(""new_branch"", macro, ""float""). retupler.run(); ```. Output without this PR:; ```txt; 0 memory usage 361424 1544100; 10000 memory usage 380580 1548912; 20000 memory usage 386148 1554504; 30000 memory usage 391332 1559540; 40000 memory usage 396324 1565324; 50000 memory usage 402084 1572740; 60000 memory usage 407652 1577572; 70000 memory usage 413028 1582796; 80000 memory usage 418596 1588976; 90000 memory usage 423780 1594012. ________________________________________________________; Executed in 3.40 secs fish external; usr time 3.33 secs 399.00 micros 3.33 secs; sys time 1.96 secs 106.00 micros 1.96 secs; ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:3553,Usability,clear,clear,3553,"n all the branches that have been added:; for branch_name, branch_dict in self.new_branches.items():; branch_dict[""value""].clear(); # self.new_tree; branch_dict[""f""](self.new_tree); # [branch_dict['value'].push_back(result) for result in branch_dict['f'](self.new_tree)]. # Fill entry with all computed branches; self.new_tree.Fill(). if i % 10000 == 0:; print_memory(i). self.new_tree.Write(); self.new_file.Close(); self.src_file.Close(). file_path = ""_src.root"". file = ROOT.TFile.Open(file_path, ""recreate""); tree = ROOT.TTree(""DDTree"", ""DDTree""). # Branch: value1; value1_value = ROOT.std.vector(""float"")(); value1_branch = tree.Branch(""value1"", value1_value). # Branch: value2; value2_value = ROOT.std.vector(""float"")(); value2_branch = tree.Branch(""value2"", value2_value). value_length = 20; nentries = 100000; for i in range(nentries):; tree.GetEntry(i). value1_value.clear(); [value1_value.push_back(result) for result in np.random.uniform(-999, 999, value_length)]. value2_value.clear(); [value2_value.push_back(result) for result in np.random.uniform(-99, 999, value_length)]. tree.Fill(). file.Write(); file.Close(). tree_name = ""DDTree""; src_path = ""_src.root""; new_path = ""_new.root"". retupler = reTupler(""DDTree"", new_path, src_path); retupler.add_branch(""new_branch"", macro, ""float""). retupler.run(); ```. Output without this PR:; ```txt; 0 memory usage 361424 1544100; 10000 memory usage 380580 1548912; 20000 memory usage 386148 1554504; 30000 memory usage 391332 1559540; 40000 memory usage 396324 1565324; 50000 memory usage 402084 1572740; 60000 memory usage 407652 1577572; 70000 memory usage 413028 1582796; 80000 memory usage 418596 1588976; 90000 memory usage 423780 1594012. ________________________________________________________; Executed in 3.40 secs fish external; usr time 3.33 secs 399.00 micros 3.33 secs; sys time 1.96 secs 106.00 micros 1.96 secs; ```. Output with this PR:; ```txt; 0 memory usage 361396 1544116; 10000 memory usage 375848 1544304; 20000 memory usa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/issues/15610:284,Deployability,Install,Installation,284,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root-forum.cern.ch/t/memory-leak-in-pyroot-when-using-user-defined-c-macros-from-python-and-ttree-friends/59432. ### Reproducer. Please see the forum post. ### ROOT version. at least 6.26 onwards. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/pull/15611:0,Deployability,Update,Update,0,Update 6.32 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15611
https://github.com/root-project/root/pull/15611:12,Deployability,release,release,12,Update 6.32 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15611
https://github.com/root-project/root/pull/15613:252,Deployability,update,updated,252,"# This Pull request:. ## Changes or fixes:; When copying the registered identity transformation, the registered flag was not reset appropriately. Observed when rotating overlapping volumes in the pad. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15613
https://github.com/root-project/root/pull/15613:222,Testability,test,tested,222,"# This Pull request:. ## Changes or fixes:; When copying the registered identity transformation, the registered flag was not reset appropriately. Observed when rotating overlapping volumes in the pad. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15613
https://github.com/root-project/root/pull/15614:21,Deployability,release,release,21,Needs to go into the release. * https://github.com/root-project/root/pull/15605; * https://github.com/root-project/root/pull/15602; * https://github.com/root-project/root/pull/15608,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15614
https://github.com/root-project/root/issues/15615:379,Deployability,configurat,configuration,379,"### Explain what you would like to see improved and how. Taking as an example; ![image](https://github.com/root-project/root/assets/15638895/8fe5f2bc-0fee-4290-9487-7ff78eeee57a). From https://github.com/root-project/root/actions/runs/9201095928/job/25318040512 . The label of the build says the build type should be debug and it should have the LLVM assertions enabled, but the configuration of the nightly job doesn't have either. One of the two should be fixed to reflect the other. ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=Release ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=off"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=off"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=on"" ""-Dgdml=on"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=on"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15615
https://github.com/root-project/root/issues/15615:578,Deployability,Release,Release,578," ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=Release ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=off"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=off"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=on"" ""-Dgdml=on"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=on"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15615
https://github.com/root-project/root/issues/15615:2670,Deployability,Install,Installation,2670,"Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=off"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=off"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=on"" ""-Dgdml=on"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=on"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drpath=on"" ""-Druntime_cxxmodules=on"" ""-Dshadowpw=off"" ""-Dshared=on"" ""-Dsoversion=off"" ""-Dspectrum=on"" ""-Dsqlite=on"" ""-Dssl=on"" ""-Dtcmalloc=off"" ""-Dtest_distrdf_dask=on"" ""-Dtest_distrdf_pyspark=on"" ""-Dtesting=on"" ""-Dtmva-cpu=off"" ""-Dtmva-gpu=off"" ""-Dtmva-pymva=on"" ""-Dtmva-rmva=off"" ""-Dtmva-sofie=off"" ""-Dtmva=on"" ""-Dunfold=on"" ""-Dunuran=on"" ""-During=off"" ""-Dvc=off"" ""-Dvdt=on"" ""-Dveccore=off"" ""-Dvecgeom=off"" ""-Dwebgui=on"" ""-Dwin_broken_tests=off"" ""-Dwinrtdebug=off"" ""-Dx11=on"" ""-Dxml=on"" ""-Dxrootd=on""; ```. I do not know to how many builds this applies, I just noticed it on this one. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15615
https://github.com/root-project/root/issues/15615:379,Modifiability,config,configuration,379,"### Explain what you would like to see improved and how. Taking as an example; ![image](https://github.com/root-project/root/assets/15638895/8fe5f2bc-0fee-4290-9487-7ff78eeee57a). From https://github.com/root-project/root/actions/runs/9201095928/job/25318040512 . The label of the build says the build type should be debug and it should have the LLVM assertions enabled, but the configuration of the nightly job doesn't have either. One of the two should be fixed to reflect the other. ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=Release ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=off"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=off"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=on"" ""-Dgdml=on"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=on"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15615
https://github.com/root-project/root/issues/15615:351,Testability,assert,assertions,351,"### Explain what you would like to see improved and how. Taking as an example; ![image](https://github.com/root-project/root/assets/15638895/8fe5f2bc-0fee-4290-9487-7ff78eeee57a). From https://github.com/root-project/root/actions/runs/9201095928/job/25318040512 . The label of the build says the build type should be debug and it should have the LLVM assertions enabled, but the configuration of the nightly job doesn't have either. One of the two should be fixed to reflect the other. ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=Release ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=off"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=off"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=on"" ""-Dgdml=on"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=on"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15615
https://github.com/root-project/root/pull/15616:0,Deployability,Update,Update,0,Update RooFit AD to support ATLAS and CMS Higgs combinations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/issues/15617:742,Deployability,Install,Installation,742,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Calling `GetNFiles()` on the object returned by `Define` gives an incorrect value. The underlying issue is the fact that the `RDFDescription` gets constructed without this number and thus `fFileCount` does not get properly initialized. It should be fixable by adding it as an argument in this line:; https://github.com/root-project/root/blob/f53eb1b4f7c5df1350b0a2756695c8e951e8a34f/tree/dataframe/src/RInterfaceBase.cxx#L286; Additionally, perhaps the constructor without this arguments should be removed altogether to avoid similar bugs in the future. ### Reproducer. ```; ROOT::RDataFrame df(1);; df.Describe.GetNFiles();; ```. ### ROOT version. v6.30 and up. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15617
https://github.com/root-project/root/issues/15617:595,Safety,avoid,avoid,595,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Calling `GetNFiles()` on the object returned by `Define` gives an incorrect value. The underlying issue is the fact that the `RDFDescription` gets constructed without this number and thus `fFileCount` does not get properly initialized. It should be fixable by adding it as an argument in this line:; https://github.com/root-project/root/blob/f53eb1b4f7c5df1350b0a2756695c8e951e8a34f/tree/dataframe/src/RInterfaceBase.cxx#L286; Additionally, perhaps the constructor without this arguments should be removed altogether to avoid similar bugs in the future. ### Reproducer. ```; ROOT::RDataFrame df(1);; df.Describe.GetNFiles();; ```. ### ROOT version. v6.30 and up. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15617
https://github.com/root-project/root/pull/15618:552,Deployability,update,updated,552,"# This Pull request:; depends on https://github.com/root-project/root/pull/15553. The interesting file to look at is `ntuple_compat.cxx`. Adding some RNTuple compat tests where we handcraft an on-disk representation for a RNTuple (and its wrapping TKey) and we try to read it back to verify it works.; The reason to do this is that we can then mess around with the binary representation to simulate both a corrupted payload and a future version of RNTuple, which allows to test forward compatibility. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15618
https://github.com/root-project/root/pull/15618:22,Integrability,depend,depends,22,"# This Pull request:; depends on https://github.com/root-project/root/pull/15553. The interesting file to look at is `ntuple_compat.cxx`. Adding some RNTuple compat tests where we handcraft an on-disk representation for a RNTuple (and its wrapping TKey) and we try to read it back to verify it works.; The reason to do this is that we can then mess around with the binary representation to simulate both a corrupted payload and a future version of RNTuple, which allows to test forward compatibility. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15618
https://github.com/root-project/root/pull/15618:239,Integrability,wrap,wrapping,239,"# This Pull request:; depends on https://github.com/root-project/root/pull/15553. The interesting file to look at is `ntuple_compat.cxx`. Adding some RNTuple compat tests where we handcraft an on-disk representation for a RNTuple (and its wrapping TKey) and we try to read it back to verify it works.; The reason to do this is that we can then mess around with the binary representation to simulate both a corrupted payload and a future version of RNTuple, which allows to test forward compatibility. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15618
https://github.com/root-project/root/pull/15618:165,Testability,test,tests,165,"# This Pull request:; depends on https://github.com/root-project/root/pull/15553. The interesting file to look at is `ntuple_compat.cxx`. Adding some RNTuple compat tests where we handcraft an on-disk representation for a RNTuple (and its wrapping TKey) and we try to read it back to verify it works.; The reason to do this is that we can then mess around with the binary representation to simulate both a corrupted payload and a future version of RNTuple, which allows to test forward compatibility. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15618
https://github.com/root-project/root/pull/15618:473,Testability,test,test,473,"# This Pull request:; depends on https://github.com/root-project/root/pull/15553. The interesting file to look at is `ntuple_compat.cxx`. Adding some RNTuple compat tests where we handcraft an on-disk representation for a RNTuple (and its wrapping TKey) and we try to read it back to verify it works.; The reason to do this is that we can then mess around with the binary representation to simulate both a corrupted payload and a future version of RNTuple, which allows to test forward compatibility. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15618
https://github.com/root-project/root/pull/15618:522,Testability,test,tested,522,"# This Pull request:; depends on https://github.com/root-project/root/pull/15553. The interesting file to look at is `ntuple_compat.cxx`. Adding some RNTuple compat tests where we handcraft an on-disk representation for a RNTuple (and its wrapping TKey) and we try to read it back to verify it works.; The reason to do this is that we can then mess around with the binary representation to simulate both a corrupted payload and a future version of RNTuple, which allows to test forward compatibility. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15618
https://github.com/root-project/root/pull/15620:236,Availability,failure,failures,236,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Fixes the recent ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15620
https://github.com/root-project/root/pull/15620:116,Modifiability,variab,variable,116,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Fixes the recent ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15620
https://github.com/root-project/root/pull/15620:487,Safety,timeout,timeout,487,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Fixes the recent ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15620
https://github.com/root-project/root/pull/15620:839,Safety,detect,detected,839,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Fixes the recent ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15620
https://github.com/root-project/root/pull/15620:865,Safety,Abort,Aborted,865,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Fixes the recent ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15620
https://github.com/root-project/root/pull/15620:273,Testability,Test,Test,273,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Fixes the recent ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15620
https://github.com/root-project/root/pull/15620:407,Testability,TEST,TEST,407,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Fixes the recent ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15620
https://github.com/root-project/root/pull/15620:544,Testability,TEST,TEST,544,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Fixes the recent ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15620
https://github.com/root-project/root/pull/15620:587,Testability,test,test,587,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Fixes the recent ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15620
https://github.com/root-project/root/issues/15621:106,Availability,failure,failures,106,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have seen recently ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510). ### Reproducer. The reproducer is the roottest test at https://github.com/root-project/roottest/blob/a05d63796f584020aa2e749d95218434ef28cc37/root/tree/branches/runnoname.C. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15621
https://github.com/root-project/root/issues/15621:1164,Deployability,Install,Installation,1164,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have seen recently ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510). ### Reproducer. The reproducer is the roottest test at https://github.com/root-project/roottest/blob/a05d63796f584020aa2e749d95218434ef28cc37/root/tree/branches/runnoname.C. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15621
https://github.com/root-project/root/issues/15621:357,Safety,timeout,timeout,357,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have seen recently ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510). ### Reproducer. The reproducer is the roottest test at https://github.com/root-project/roottest/blob/a05d63796f584020aa2e749d95218434ef28cc37/root/tree/branches/runnoname.C. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15621
https://github.com/root-project/root/issues/15621:709,Safety,detect,detected,709,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have seen recently ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510). ### Reproducer. The reproducer is the roottest test at https://github.com/root-project/roottest/blob/a05d63796f584020aa2e749d95218434ef28cc37/root/tree/branches/runnoname.C. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15621
https://github.com/root-project/root/issues/15621:735,Safety,Abort,Aborted,735,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have seen recently ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510). ### Reproducer. The reproducer is the roottest test at https://github.com/root-project/roottest/blob/a05d63796f584020aa2e749d95218434ef28cc37/root/tree/branches/runnoname.C. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15621
https://github.com/root-project/root/issues/15621:143,Testability,Test,Test,143,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have seen recently ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510). ### Reproducer. The reproducer is the roottest test at https://github.com/root-project/roottest/blob/a05d63796f584020aa2e749d95218434ef28cc37/root/tree/branches/runnoname.C. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15621
https://github.com/root-project/root/issues/15621:277,Testability,TEST,TEST,277,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have seen recently ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510). ### Reproducer. The reproducer is the roottest test at https://github.com/root-project/roottest/blob/a05d63796f584020aa2e749d95218434ef28cc37/root/tree/branches/runnoname.C. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15621
https://github.com/root-project/root/issues/15621:414,Testability,TEST,TEST,414,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have seen recently ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510). ### Reproducer. The reproducer is the roottest test at https://github.com/root-project/roottest/blob/a05d63796f584020aa2e749d95218434ef28cc37/root/tree/branches/runnoname.C. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15621
https://github.com/root-project/root/issues/15621:457,Testability,test,test,457,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have seen recently ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510). ### Reproducer. The reproducer is the roottest test at https://github.com/root-project/roottest/blob/a05d63796f584020aa2e749d95218434ef28cc37/root/tree/branches/runnoname.C. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15621
https://github.com/root-project/root/issues/15621:1010,Testability,test,test,1010,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have seen recently ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510). ### Reproducer. The reproducer is the roottest test at https://github.com/root-project/roottest/blob/a05d63796f584020aa2e749d95218434ef28cc37/root/tree/branches/runnoname.C. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15621
https://github.com/root-project/root/pull/15622:93,Safety,avoid,avoid,93,"Change the name of the file where the tutorial TMVA_SOFIE_RDataFrame.py writes the model, to avoid a conflict with TMVA_SOFIE_RDataFrame.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15622
https://github.com/root-project/root/pull/15626:116,Modifiability,variab,variable,116,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Related to https://github.com/root-project/root/issues/15621,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15626
https://github.com/root-project/root/pull/15628:80,Availability,failure,failures,80,It's a small change and it may help with the sporadic `dataframe-vary` unittest failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15628
https://github.com/root-project/root/issues/15638:1860,Availability,down,download,1860,"sToFourLeptons_8C.html) crashes when it is compiled and run (it runs fine if interpreted).; This is due to jitted code in some filters that call user-defined functions whose signature is unknown to Cling. This is a general problem with functions that evaluate code at runtime and, while it might not be possible to fix in all cases, it should at least be better documented. The tutorials themselves should be written to work both when compiled and when interpreted, or specify why they cannot be run as-is if compiled. There is also a more general discussion to be made about RDF and the kind of guarantees that it should provide to its users. Ideally there should be a way to use RDF such that it will be guaranteed to run correctly regardless of being compiled or interpreted. Finally, the documentation of RDF should be updated to better clarify the caveats and limitations of passing C++ expressions as strings, both in terms of performance and, especially, in terms of compatibility with compiled code (i.e. it should be clear to a user that a filter using an interpreted string containing a user-defined function may not work when AOT-compiled without additional efforts on the user side - like manually passing the signatures to cling beforehand). ### Bullet point recap; - [ ] fix the tutorials so they run properly when compiled AOT; - [ ] update the doc of RDF to include caveats and limitations of using jitted expressions; - [ ] (to be discussed) introduce an opt-in ""strict mode"" for RDF (C++ only) that checks and rejects all cases when jitting is required. This would allow a user to catch code that may incur in performance penalties and may not work properly when AOT-compiled. . ### Reproducer. 1. download the source code of [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html); 2. compile it; 3. run it. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Debian GNU/Linux trixie. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15638
https://github.com/root-project/root/issues/15638:967,Deployability,update,updated,967,"ked for duplicates. ### Description. [df106_HiggsToFourLeptons.C](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html) crashes when it is compiled and run (it runs fine if interpreted).; This is due to jitted code in some filters that call user-defined functions whose signature is unknown to Cling. This is a general problem with functions that evaluate code at runtime and, while it might not be possible to fix in all cases, it should at least be better documented. The tutorials themselves should be written to work both when compiled and when interpreted, or specify why they cannot be run as-is if compiled. There is also a more general discussion to be made about RDF and the kind of guarantees that it should provide to its users. Ideally there should be a way to use RDF such that it will be guaranteed to run correctly regardless of being compiled or interpreted. Finally, the documentation of RDF should be updated to better clarify the caveats and limitations of passing C++ expressions as strings, both in terms of performance and, especially, in terms of compatibility with compiled code (i.e. it should be clear to a user that a filter using an interpreted string containing a user-defined function may not work when AOT-compiled without additional efforts on the user side - like manually passing the signatures to cling beforehand). ### Bullet point recap; - [ ] fix the tutorials so they run properly when compiled AOT; - [ ] update the doc of RDF to include caveats and limitations of using jitted expressions; - [ ] (to be discussed) introduce an opt-in ""strict mode"" for RDF (C++ only) that checks and rejects all cases when jitting is required. This would allow a user to catch code that may incur in performance penalties and may not work properly when AOT-compiled. . ### Reproducer. 1. download the source code of [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html); 2. compile it; 3. run it. ### ROOT version. 6.33.01. ### Installation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15638
https://github.com/root-project/root/issues/15638:1493,Deployability,update,update,1493,"sToFourLeptons_8C.html) crashes when it is compiled and run (it runs fine if interpreted).; This is due to jitted code in some filters that call user-defined functions whose signature is unknown to Cling. This is a general problem with functions that evaluate code at runtime and, while it might not be possible to fix in all cases, it should at least be better documented. The tutorials themselves should be written to work both when compiled and when interpreted, or specify why they cannot be run as-is if compiled. There is also a more general discussion to be made about RDF and the kind of guarantees that it should provide to its users. Ideally there should be a way to use RDF such that it will be guaranteed to run correctly regardless of being compiled or interpreted. Finally, the documentation of RDF should be updated to better clarify the caveats and limitations of passing C++ expressions as strings, both in terms of performance and, especially, in terms of compatibility with compiled code (i.e. it should be clear to a user that a filter using an interpreted string containing a user-defined function may not work when AOT-compiled without additional efforts on the user side - like manually passing the signatures to cling beforehand). ### Bullet point recap; - [ ] fix the tutorials so they run properly when compiled AOT; - [ ] update the doc of RDF to include caveats and limitations of using jitted expressions; - [ ] (to be discussed) introduce an opt-in ""strict mode"" for RDF (C++ only) that checks and rejects all cases when jitting is required. This would allow a user to catch code that may incur in performance penalties and may not work properly when AOT-compiled. . ### Reproducer. 1. download the source code of [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html); 2. compile it; 3. run it. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Debian GNU/Linux trixie. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15638
https://github.com/root-project/root/issues/15638:2026,Deployability,Install,Installation,2026,"sToFourLeptons_8C.html) crashes when it is compiled and run (it runs fine if interpreted).; This is due to jitted code in some filters that call user-defined functions whose signature is unknown to Cling. This is a general problem with functions that evaluate code at runtime and, while it might not be possible to fix in all cases, it should at least be better documented. The tutorials themselves should be written to work both when compiled and when interpreted, or specify why they cannot be run as-is if compiled. There is also a more general discussion to be made about RDF and the kind of guarantees that it should provide to its users. Ideally there should be a way to use RDF such that it will be guaranteed to run correctly regardless of being compiled or interpreted. Finally, the documentation of RDF should be updated to better clarify the caveats and limitations of passing C++ expressions as strings, both in terms of performance and, especially, in terms of compatibility with compiled code (i.e. it should be clear to a user that a filter using an interpreted string containing a user-defined function may not work when AOT-compiled without additional efforts on the user side - like manually passing the signatures to cling beforehand). ### Bullet point recap; - [ ] fix the tutorials so they run properly when compiled AOT; - [ ] update the doc of RDF to include caveats and limitations of using jitted expressions; - [ ] (to be discussed) introduce an opt-in ""strict mode"" for RDF (C++ only) that checks and rejects all cases when jitting is required. This would allow a user to catch code that may incur in performance penalties and may not work properly when AOT-compiled. . ### Reproducer. 1. download the source code of [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html); 2. compile it; 3. run it. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Debian GNU/Linux trixie. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15638
https://github.com/root-project/root/issues/15638:1077,Performance,perform,performance,1077,"ked for duplicates. ### Description. [df106_HiggsToFourLeptons.C](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html) crashes when it is compiled and run (it runs fine if interpreted).; This is due to jitted code in some filters that call user-defined functions whose signature is unknown to Cling. This is a general problem with functions that evaluate code at runtime and, while it might not be possible to fix in all cases, it should at least be better documented. The tutorials themselves should be written to work both when compiled and when interpreted, or specify why they cannot be run as-is if compiled. There is also a more general discussion to be made about RDF and the kind of guarantees that it should provide to its users. Ideally there should be a way to use RDF such that it will be guaranteed to run correctly regardless of being compiled or interpreted. Finally, the documentation of RDF should be updated to better clarify the caveats and limitations of passing C++ expressions as strings, both in terms of performance and, especially, in terms of compatibility with compiled code (i.e. it should be clear to a user that a filter using an interpreted string containing a user-defined function may not work when AOT-compiled without additional efforts on the user side - like manually passing the signatures to cling beforehand). ### Bullet point recap; - [ ] fix the tutorials so they run properly when compiled AOT; - [ ] update the doc of RDF to include caveats and limitations of using jitted expressions; - [ ] (to be discussed) introduce an opt-in ""strict mode"" for RDF (C++ only) that checks and rejects all cases when jitting is required. This would allow a user to catch code that may incur in performance penalties and may not work properly when AOT-compiled. . ### Reproducer. 1. download the source code of [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html); 2. compile it; 3. run it. ### ROOT version. 6.33.01. ### Installation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15638
https://github.com/root-project/root/issues/15638:1772,Performance,perform,performance,1772,"sToFourLeptons_8C.html) crashes when it is compiled and run (it runs fine if interpreted).; This is due to jitted code in some filters that call user-defined functions whose signature is unknown to Cling. This is a general problem with functions that evaluate code at runtime and, while it might not be possible to fix in all cases, it should at least be better documented. The tutorials themselves should be written to work both when compiled and when interpreted, or specify why they cannot be run as-is if compiled. There is also a more general discussion to be made about RDF and the kind of guarantees that it should provide to its users. Ideally there should be a way to use RDF such that it will be guaranteed to run correctly regardless of being compiled or interpreted. Finally, the documentation of RDF should be updated to better clarify the caveats and limitations of passing C++ expressions as strings, both in terms of performance and, especially, in terms of compatibility with compiled code (i.e. it should be clear to a user that a filter using an interpreted string containing a user-defined function may not work when AOT-compiled without additional efforts on the user side - like manually passing the signatures to cling beforehand). ### Bullet point recap; - [ ] fix the tutorials so they run properly when compiled AOT; - [ ] update the doc of RDF to include caveats and limitations of using jitted expressions; - [ ] (to be discussed) introduce an opt-in ""strict mode"" for RDF (C++ only) that checks and rejects all cases when jitting is required. This would allow a user to catch code that may incur in performance penalties and may not work properly when AOT-compiled. . ### Reproducer. 1. download the source code of [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html); 2. compile it; 3. run it. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Debian GNU/Linux trixie. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15638
https://github.com/root-project/root/issues/15638:1170,Usability,clear,clear,1170,"sToFourLeptons_8C.html) crashes when it is compiled and run (it runs fine if interpreted).; This is due to jitted code in some filters that call user-defined functions whose signature is unknown to Cling. This is a general problem with functions that evaluate code at runtime and, while it might not be possible to fix in all cases, it should at least be better documented. The tutorials themselves should be written to work both when compiled and when interpreted, or specify why they cannot be run as-is if compiled. There is also a more general discussion to be made about RDF and the kind of guarantees that it should provide to its users. Ideally there should be a way to use RDF such that it will be guaranteed to run correctly regardless of being compiled or interpreted. Finally, the documentation of RDF should be updated to better clarify the caveats and limitations of passing C++ expressions as strings, both in terms of performance and, especially, in terms of compatibility with compiled code (i.e. it should be clear to a user that a filter using an interpreted string containing a user-defined function may not work when AOT-compiled without additional efforts on the user side - like manually passing the signatures to cling beforehand). ### Bullet point recap; - [ ] fix the tutorials so they run properly when compiled AOT; - [ ] update the doc of RDF to include caveats and limitations of using jitted expressions; - [ ] (to be discussed) introduce an opt-in ""strict mode"" for RDF (C++ only) that checks and rejects all cases when jitting is required. This would allow a user to catch code that may incur in performance penalties and may not work properly when AOT-compiled. . ### Reproducer. 1. download the source code of [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html); 2. compile it; 3. run it. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Debian GNU/Linux trixie. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15638
https://github.com/root-project/root/pull/15639:301,Deployability,update,updated,301,# This Pull request:; Explicitly declares the signatures of types that are used in jitted expressions so that the tutorial runs properly even when compiled AOT. ## Changes or fixes:; Partially fixes https://github.com/root-project/root/issues/15638. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15639
https://github.com/root-project/root/pull/15639:271,Testability,test,tested,271,# This Pull request:; Explicitly declares the signatures of types that are used in jitted expressions so that the tutorial runs properly even when compiled AOT. ## Changes or fixes:; Partially fixes https://github.com/root-project/root/issues/15638. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15639
https://github.com/root-project/root/issues/15640:92,Availability,reliab,reliable,92,"### Explain what you would like to see improved and how. Currently custom streamers have no reliable way to communicate failure to the calling code (e.g. to have it skip the current object).; A possible way to add this capability would be through exceptions, but the I/O code must be made exception safe and properly handle the exceptions if that is the way we wanna go. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Linux. ### Additional context. RNTuple::Streamer currently uses exceptions to communicate failure, but this is not necessarily handled corrently in the calling code right now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15640
https://github.com/root-project/root/issues/15640:120,Availability,failure,failure,120,"### Explain what you would like to see improved and how. Currently custom streamers have no reliable way to communicate failure to the calling code (e.g. to have it skip the current object).; A possible way to add this capability would be through exceptions, but the I/O code must be made exception safe and properly handle the exceptions if that is the way we wanna go. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Linux. ### Additional context. RNTuple::Streamer currently uses exceptions to communicate failure, but this is not necessarily handled corrently in the calling code right now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15640
https://github.com/root-project/root/issues/15640:548,Availability,failure,failure,548,"### Explain what you would like to see improved and how. Currently custom streamers have no reliable way to communicate failure to the calling code (e.g. to have it skip the current object).; A possible way to add this capability would be through exceptions, but the I/O code must be made exception safe and properly handle the exceptions if that is the way we wanna go. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Linux. ### Additional context. RNTuple::Streamer currently uses exceptions to communicate failure, but this is not necessarily handled corrently in the calling code right now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15640
https://github.com/root-project/root/issues/15640:402,Deployability,Install,Installation,402,"### Explain what you would like to see improved and how. Currently custom streamers have no reliable way to communicate failure to the calling code (e.g. to have it skip the current object).; A possible way to add this capability would be through exceptions, but the I/O code must be made exception safe and properly handle the exceptions if that is the way we wanna go. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Linux. ### Additional context. RNTuple::Streamer currently uses exceptions to communicate failure, but this is not necessarily handled corrently in the calling code right now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15640
https://github.com/root-project/root/issues/15640:299,Safety,safe,safe,299,"### Explain what you would like to see improved and how. Currently custom streamers have no reliable way to communicate failure to the calling code (e.g. to have it skip the current object).; A possible way to add this capability would be through exceptions, but the I/O code must be made exception safe and properly handle the exceptions if that is the way we wanna go. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Linux. ### Additional context. RNTuple::Streamer currently uses exceptions to communicate failure, but this is not necessarily handled corrently in the calling code right now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15640
https://github.com/root-project/root/pull/15641:230,Availability,avail,available,230,"This PR introduces the logic necessary in TTreeReader to detect when an entry being read is ""incomplete"" for the following situations:; * When switching to a new tree in the chain, if a branch that was expected to be found is not available; * When doing event matching with TTreeIndex, in case one or more of the friend trees did not match the index value for the current entry. It also introduces new functionality in RDataFrame to allow users to act upon the situations described above:; * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing.; * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded.; * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded. The tutorials `df036_missingBranches` and `df037_TTreeEventMatching` show example usage of the new functionalities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:777,Availability,avail,available,777,"This PR introduces the logic necessary in TTreeReader to detect when an entry being read is ""incomplete"" for the following situations:; * When switching to a new tree in the chain, if a branch that was expected to be found is not available; * When doing event matching with TTreeIndex, in case one or more of the friend trees did not match the index value for the current entry. It also introduces new functionality in RDataFrame to allow users to act upon the situations described above:; * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing.; * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded.; * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded. The tutorials `df036_missingBranches` and `df037_TTreeEventMatching` show example usage of the new functionalities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:57,Safety,detect,detect,57,"This PR introduces the logic necessary in TTreeReader to detect when an entry being read is ""incomplete"" for the following situations:; * When switching to a new tree in the chain, if a branch that was expected to be found is not available; * When doing event matching with TTreeIndex, in case one or more of the friend trees did not match the index value for the current entry. It also introduces new functionality in RDataFrame to allow users to act upon the situations described above:; * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing.; * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded.; * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded. The tutorials `df036_missingBranches` and `df037_TTreeEventMatching` show example usage of the new functionalities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:23,Testability,log,logic,23,"This PR introduces the logic necessary in TTreeReader to detect when an entry being read is ""incomplete"" for the following situations:; * When switching to a new tree in the chain, if a branch that was expected to be found is not available; * When doing event matching with TTreeIndex, in case one or more of the friend trees did not match the index value for the current entry. It also introduces new functionality in RDataFrame to allow users to act upon the situations described above:; * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing.; * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded.; * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded. The tutorials `df036_missingBranches` and `df037_TTreeEventMatching` show example usage of the new functionalities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15642:6,Testability,test,tested,6,- [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15642
https://github.com/root-project/root/issues/15643:309,Deployability,Install,Installation,309,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `pyroot`.; Right after declaring an instance of `TGFileContainer`, ROOT crashes. ### Reproducer. import ROOT; myContainer = ROOT.TGFileContainer(). ### ROOT version. 6.30/06; Built for linuxx8664gcc; From heads/latest-stable@. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15643
https://github.com/root-project/root/pull/15647:66,Testability,test,test,66,"One of the RBatchGenerator possible implementations. From the eye test should be faster, but needs measuring",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15647
https://github.com/root-project/root/pull/15650:91,Modifiability,variab,variable,91,"ParamHistFunc currently does not adhere to the convention that if it is independent of the variable passed to binBoundaries method that it should return nullptr. This is fixed, along with more correct obtaining of the bin boundaries, from the RooDataHist itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15650
https://github.com/root-project/root/pull/15651:63,Testability,test,testing,63,"Addresses several bugs on big-endian architecture, some in the testing code only, some in the actual code. Tested manually on Power8/EL7. Also tested that RNTuple data written on little-endian can be read on big-endian and vice versa. Fixes #12426",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15651
https://github.com/root-project/root/pull/15651:107,Testability,Test,Tested,107,"Addresses several bugs on big-endian architecture, some in the testing code only, some in the actual code. Tested manually on Power8/EL7. Also tested that RNTuple data written on little-endian can be read on big-endian and vice versa. Fixes #12426",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15651
https://github.com/root-project/root/pull/15651:143,Testability,test,tested,143,"Addresses several bugs on big-endian architecture, some in the testing code only, some in the actual code. Tested manually on Power8/EL7. Also tested that RNTuple data written on little-endian can be read on big-endian and vice versa. Fixes #12426",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15651
https://github.com/root-project/root/pull/15652:220,Availability,failure,failures,220,"Implement and use a thread-safe container for caching strings that are created and used in the computation graph. Notably, these include the strings representing column names generated by `Define`. This fixes the recent failures seen on MacOS in the `dataframe-vary` unittest. Since that underlines a thread-safety issue in the overall initialisation phase of MT RDF runs, it should be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15652
https://github.com/root-project/root/pull/15652:27,Safety,safe,safe,27,"Implement and use a thread-safe container for caching strings that are created and used in the computation graph. Notably, these include the strings representing column names generated by `Define`. This fixes the recent failures seen on MacOS in the `dataframe-vary` unittest. Since that underlines a thread-safety issue in the overall initialisation phase of MT RDF runs, it should be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15652
https://github.com/root-project/root/pull/15652:308,Safety,safe,safety,308,"Implement and use a thread-safe container for caching strings that are created and used in the computation graph. Notably, these include the strings representing column names generated by `Define`. This fixes the recent failures seen on MacOS in the `dataframe-vary` unittest. Since that underlines a thread-safety issue in the overall initialisation phase of MT RDF runs, it should be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15652
https://github.com/root-project/root/pull/15653:325,Deployability,update,updated,325,"This PR fixes #15617, where the number of files is incorrectly returned by `RInterfaceBase`/`RDFDescription` for RDF's constructed from an `RDataSource`. It involves the addition of `GetNFiles` to the public interface of `RDataSource` and calling it in the relevant places. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15653
https://github.com/root-project/root/pull/15653:208,Integrability,interface,interface,208,"This PR fixes #15617, where the number of files is incorrectly returned by `RInterfaceBase`/`RDFDescription` for RDF's constructed from an `RDataSource`. It involves the addition of `GetNFiles` to the public interface of `RDataSource` and calling it in the relevant places. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15653
https://github.com/root-project/root/pull/15653:295,Testability,test,tested,295,"This PR fixes #15617, where the number of files is incorrectly returned by `RInterfaceBase`/`RDFDescription` for RDF's constructed from an `RDataSource`. It involves the addition of `GetNFiles` to the public interface of `RDataSource` and calling it in the relevant places. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15653
https://github.com/root-project/root/pull/15654:34,Availability,error,error,34,Add the physical column ID to the error message shown when a different compression setting than expected is encountered. This should help in locating potential bugs/mistakes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15654
https://github.com/root-project/root/pull/15654:40,Integrability,message,message,40,Add the physical column ID to the error message shown when a different compression setting than expected is encountered. This should help in locating potential bugs/mistakes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15654
https://github.com/root-project/root/pull/15660:170,Availability,error,errors,170,"Same as https://github.com/root-project/root/commit/19caf55b88d16ac67d9bfb39380a4d1c89f935e6 but this time moving RKeyBlob out of the anon namespace which causes compile errors on windows (I missed this in the previous commit, now reverted). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15660
https://github.com/root-project/root/pull/15660:337,Deployability,update,updated,337,"Same as https://github.com/root-project/root/commit/19caf55b88d16ac67d9bfb39380a4d1c89f935e6 but this time moving RKeyBlob out of the anon namespace which causes compile errors on windows (I missed this in the previous commit, now reverted). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15660
https://github.com/root-project/root/pull/15660:307,Testability,test,tested,307,"Same as https://github.com/root-project/root/commit/19caf55b88d16ac67d9bfb39380a4d1c89f935e6 but this time moving RKeyBlob out of the anon namespace which causes compile errors on windows (I missed this in the previous commit, now reverted). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15660
https://github.com/root-project/root/issues/15661:1573,Availability,fault,faulty,1573,"nges of the backfilled fields are 0 for the first cluster.; * `RNTupleReader::PrintInfo` with `kStorageDetails` may reports incorrect information for columns belonging to the backfilled fields.; * When opening the RNTuple in the browser, attempting to draw a histogram for a backfilled collection field causes an entry-index-out-of-bounds crash. This happens both in situations where the total number of collection elements (so the sum of elements over all fields) is less and greater than the number of entries, and this issue does not appear for non-backfilled fields (with the same types and contents). #### Apparent cause. Upon reading, the metadata for columns belonging to backfilled fields gets synthesized for the clusters that do not actually contain these columns, through [`RClusterDescriptorBuilder::AddDeferredColumnRanges`](https://github.com/root-project/root/blob/4215ae1461a5a11f0ae82447ada7f6b39ff9907b/tree/ntuple/v7/src/RNTupleDescriptor.cxx#L555). The construction of the column ranges is faulty in two regards:. * It uses the default initialized compression settings, which is 0, meaning there is no distinction between uncompressed columns and columns that were not compressed because they never existed on disk.; * The columns belonging to subfields of backfilled fields are not properly recognized as deferred, so those column ranges are always zero-initialized. ### Reproducer. ```cpp; using ROOT::Experimental::ENTupleInfo;; using ROOT::Experimental::RNTupleInspector;; using ROOT::Experimental::RNTupleModel;; using ROOT::Experimental::RNTupleReader;; using ROOT::Experimental::RNTupleWriter;. void modelextension() {; {; auto model = RNTupleModel::Create();. auto fld = model->MakeField<float>(""fld"", 42.0);. auto ntuple = RNTupleWriter::Recreate(std::move(model), ""ntuple"",; ""modelext.root"");. ntuple->Fill();; ntuple->CommitCluster();. auto modelUpdater = ntuple->CreateModelUpdater();. modelUpdater->BeginUpdate();; auto extField = modelUpdater->MakeField<std::vector<f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15661
https://github.com/root-project/root/issues/15661:5756,Deployability,Install,Installation,5756,"-----------------------------------; extVecFld [#0] -- SplitIndex64 {id:1}; # Elements: 2; # Pages: 2; Avg elements / page: 1; Avg page size: 8 B; Size on storage: 16 B; Compression: 1.00; ............................................................; extVecFld._0 [#0] -- SplitReal32 {id:2}; # Elements: 2; # Pages: 1; Avg elements / page: 2; Avg page size: 12 B; Size on storage: 12 B; Compression: 0.67; ............................................................; fld [#0] -- SplitReal32 {id:0}; # Elements: 2; # Pages: 2; Avg elements / page: 1; Avg page size: 4 B; Size on storage: 8 B; Compression: 1.00; ............................................................; ```; Note the column with ID 2 (middle row of the column details). This column contains the actual elements of `extVecFld`. As can be seen in the macro, there should be three elements, but it is reported to only contain two. To reproduce the `TBrowser` issue, open a ROOT promt with the RNTuple and start a browser session (N.B., web graphics need to be used):; ```sh; $ root -l modelext.root; root [0] ; Attaching file modelext.root as _file0...; (TFile *) 0x2e48180; root [1] TBrowser t; ```; In the browser window, double-click on `modelext.root`, decollapse the field list of `ntuple;1`, decollapse the field list of `extVecFld` and double click on the leaf field named `_0`. ROOT then crashes with the following message:; ```txt; terminate called after throwing an instance of 'ROOT::Experimental::RException'; what(): entry with index 3 out of bounds; At:; virtual ROOT::Experimental::Internal::RPage ROOT::Experimental::Internal::RPageSourceFile::PopulatePage(ROOT::Experimental::Internal::RPageStorage::ColumnHandle_t, ROOT::Experimental::NTupleSize_t) [/home/florine/cern/root/src/tree/ntuple/v7/src/RPageStorageFile.cxx:435]; ```. ### ROOT version. 6.30 and up (most likely also 6.28, haven't verified yet). ### Installation method. built from source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15661
https://github.com/root-project/root/issues/15661:2953,Integrability,message,message,2953,"l::RNTupleReader;; using ROOT::Experimental::RNTupleWriter;. void modelextension() {; {; auto model = RNTupleModel::Create();. auto fld = model->MakeField<float>(""fld"", 42.0);. auto ntuple = RNTupleWriter::Recreate(std::move(model), ""ntuple"",; ""modelext.root"");. ntuple->Fill();; ntuple->CommitCluster();. auto modelUpdater = ntuple->CreateModelUpdater();. modelUpdater->BeginUpdate();; auto extField = modelUpdater->MakeField<std::vector<float>>(""extVecFld"", std::vector<float>{1., 2., 3.});; modelUpdater->CommitUpdate();. ntuple->Fill();; ntuple->CommitCluster();; }. auto ntuple = RNTupleReader::Open(""ntuple"", ""modelext.root"");; ntuple->PrintInfo(ENTupleInfo::kStorageDetails);. auto inspector = RNTupleInspector::Create(""ntuple"", ""modelext.root"");; }; ```; Running this macro will result in an exception with the following message:; ```txt; compression setting mismatch between column ranges (505 vs 0); ```; The output of `PrintInfo` is as follows:; ```txt; ============================================================; NTUPLE: ntuple; Compression: 505; ------------------------------------------------------------; # Entries: 2; # Fields: 4; # Columns: 3; # Alias Columns: 0; # Pages: 5; # Clusters: 2; Size on storage: 36 B; Compression rate: 1.00; Header size: 110 B; Footer size: 304 B; Meta-data / data: 11.500; ------------------------------------------------------------; CLUSTER DETAILS; ------------------------------------------------------------; # 0 Entry range: [0..0] -- 1; # Pages: 2; Size on storage: 12 B; Compression: 1.00; # 1 Entry range: [1..1] -- 1; # Pages: 3; Size on storage: 24 B; Compression: 1.00; ------------------------------------------------------------; COLUMN DETAILS; ------------------------------------------------------------; extVecFld [#0] -- SplitIndex64 {id:1}; # Elements: 2; # Pages: 2; Avg elements / page: 1; Avg page size: 8 B; Size on storage: 16 B; Compression: 1.00; ............................................................; extVecFld._0 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15661
https://github.com/root-project/root/issues/15661:5251,Integrability,message,message,5251,"-----------------------------------; extVecFld [#0] -- SplitIndex64 {id:1}; # Elements: 2; # Pages: 2; Avg elements / page: 1; Avg page size: 8 B; Size on storage: 16 B; Compression: 1.00; ............................................................; extVecFld._0 [#0] -- SplitReal32 {id:2}; # Elements: 2; # Pages: 1; Avg elements / page: 2; Avg page size: 12 B; Size on storage: 12 B; Compression: 0.67; ............................................................; fld [#0] -- SplitReal32 {id:0}; # Elements: 2; # Pages: 2; Avg elements / page: 1; Avg page size: 4 B; Size on storage: 8 B; Compression: 1.00; ............................................................; ```; Note the column with ID 2 (middle row of the column details). This column contains the actual elements of `extVecFld`. As can be seen in the macro, there should be three elements, but it is reported to only contain two. To reproduce the `TBrowser` issue, open a ROOT promt with the RNTuple and start a browser session (N.B., web graphics need to be used):; ```sh; $ root -l modelext.root; root [0] ; Attaching file modelext.root as _file0...; (TFile *) 0x2e48180; root [1] TBrowser t; ```; In the browser window, double-click on `modelext.root`, decollapse the field list of `ntuple;1`, decollapse the field list of `extVecFld` and double click on the leaf field named `_0`. ROOT then crashes with the following message:; ```txt; terminate called after throwing an instance of 'ROOT::Experimental::RException'; what(): entry with index 3 out of bounds; At:; virtual ROOT::Experimental::Internal::RPage ROOT::Experimental::Internal::RPageSourceFile::PopulatePage(ROOT::Experimental::Internal::RPageStorage::ColumnHandle_t, ROOT::Experimental::NTupleSize_t) [/home/florine/cern/root/src/tree/ntuple/v7/src/RPageStorageFile.cxx:435]; ```. ### ROOT version. 6.30 and up (most likely also 6.28, haven't verified yet). ### Installation method. built from source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15661
https://github.com/root-project/root/issues/15666:174,Deployability,Install,Installation,174,### Explain what you would like to see improved and how. The schema of the RNTuple anchor should be documented in the `specification.md` file. ### ROOT version. 6.33.01. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15666
https://github.com/root-project/root/pull/15670:45,Availability,redundant,redundant,45,# This Pull request:; - Removes some dead or redundant code from RMiniFile.cxx (see commit comment for more details); - adds a utility to FileRaii to preserve the file after running. Useful to quickly debug a test file locally without having to recompile ntuple_test.hxx or doing some weird tricks. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15670
https://github.com/root-project/root/pull/15670:335,Deployability,update,updated,335,# This Pull request:; - Removes some dead or redundant code from RMiniFile.cxx (see commit comment for more details); - adds a utility to FileRaii to preserve the file after running. Useful to quickly debug a test file locally without having to recompile ntuple_test.hxx or doing some weird tricks. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15670
https://github.com/root-project/root/pull/15670:45,Safety,redund,redundant,45,# This Pull request:; - Removes some dead or redundant code from RMiniFile.cxx (see commit comment for more details); - adds a utility to FileRaii to preserve the file after running. Useful to quickly debug a test file locally without having to recompile ntuple_test.hxx or doing some weird tricks. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15670
https://github.com/root-project/root/pull/15670:209,Testability,test,test,209,# This Pull request:; - Removes some dead or redundant code from RMiniFile.cxx (see commit comment for more details); - adds a utility to FileRaii to preserve the file after running. Useful to quickly debug a test file locally without having to recompile ntuple_test.hxx or doing some weird tricks. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15670
https://github.com/root-project/root/pull/15670:305,Testability,test,tested,305,# This Pull request:; - Removes some dead or redundant code from RMiniFile.cxx (see commit comment for more details); - adds a utility to FileRaii to preserve the file after running. Useful to quickly debug a test file locally without having to recompile ntuple_test.hxx or doing some weird tricks. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15670
https://github.com/root-project/root/pull/15671:218,Deployability,update,updated,218,# This Pull request:; removes commented-out code from TKey involving `kMAXFILEBUFFER`. That code has been commented-out since 2001 and it's unlikely to see use again. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15671
https://github.com/root-project/root/pull/15671:188,Testability,test,tested,188,# This Pull request:; removes commented-out code from TKey involving `kMAXFILEBUFFER`. That code has been commented-out since 2001 and it's unlikely to see use again. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15671
https://github.com/root-project/root/pull/15672:121,Availability,avail,available,121,"This PR supersedes https://github.com/root-project/root/pull/15476 since there were changes to be made also in roottest, available at https://github.com/root-project/roottest/pull/1127. From the original PR:. # This Pull request:; Update the distributed RDataFrame to use the HeadNode _localrdf to keep track of transform operations, and add the ability to call GetColumnNames on a NodeProxy object. . ## Changes or fixes:; - Add GetColumnNames method to NodeProxy which calls the HeadNode GetColumnNames method; - Propagate transform operations to the HeadNode _localrdf, mainly to keep track of user-defined columns",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15672
https://github.com/root-project/root/pull/15672:231,Deployability,Update,Update,231,"This PR supersedes https://github.com/root-project/root/pull/15476 since there were changes to be made also in roottest, available at https://github.com/root-project/roottest/pull/1127. From the original PR:. # This Pull request:; Update the distributed RDataFrame to use the HeadNode _localrdf to keep track of transform operations, and add the ability to call GetColumnNames on a NodeProxy object. . ## Changes or fixes:; - Add GetColumnNames method to NodeProxy which calls the HeadNode GetColumnNames method; - Propagate transform operations to the HeadNode _localrdf, mainly to keep track of user-defined columns",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15672
https://github.com/root-project/root/pull/15673:212,Deployability,update,updated,212,# This Pull request:; adds documentation for the RNTuple anchor structure in the ntuple specifications. Fixes https://github.com/root-project/root/issues/15666. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15673
https://github.com/root-project/root/pull/15673:182,Testability,test,tested,182,# This Pull request:; adds documentation for the RNTuple anchor structure in the ntuple specifications. Fixes https://github.com/root-project/root/issues/15666. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15673
https://github.com/root-project/root/pull/15674:80,Deployability,patch,patches,80,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[skip-ci] improve labeling in candle plot examples.](https://github.com/root-project/root/pull/15659); - [Fix warnings in timeaxis3.C](https://github.com/root-project/root/pull/15659); - [Simplify timeonaxis.C and make the year labels clearer](https://github.com/root-project/root/pull/15659); - [simplify timeonaxis examples.](https://github.com/root-project/root/pull/15659); - [Remove an unused variable and use exact dates.](https://github.com/root-project/root/pull/15659). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15674
https://github.com/root-project/root/pull/15674:492,Modifiability,variab,variable,492,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[skip-ci] improve labeling in candle plot examples.](https://github.com/root-project/root/pull/15659); - [Fix warnings in timeaxis3.C](https://github.com/root-project/root/pull/15659); - [Simplify timeonaxis.C and make the year labels clearer](https://github.com/root-project/root/pull/15659); - [simplify timeonaxis examples.](https://github.com/root-project/root/pull/15659); - [Remove an unused variable and use exact dates.](https://github.com/root-project/root/pull/15659). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15674
https://github.com/root-project/root/pull/15674:282,Usability,Simpl,Simplify,282,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[skip-ci] improve labeling in candle plot examples.](https://github.com/root-project/root/pull/15659); - [Fix warnings in timeaxis3.C](https://github.com/root-project/root/pull/15659); - [Simplify timeonaxis.C and make the year labels clearer](https://github.com/root-project/root/pull/15659); - [simplify timeonaxis examples.](https://github.com/root-project/root/pull/15659); - [Remove an unused variable and use exact dates.](https://github.com/root-project/root/pull/15659). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15674
https://github.com/root-project/root/pull/15674:329,Usability,clear,clearer,329,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[skip-ci] improve labeling in candle plot examples.](https://github.com/root-project/root/pull/15659); - [Fix warnings in timeaxis3.C](https://github.com/root-project/root/pull/15659); - [Simplify timeonaxis.C and make the year labels clearer](https://github.com/root-project/root/pull/15659); - [simplify timeonaxis examples.](https://github.com/root-project/root/pull/15659); - [Remove an unused variable and use exact dates.](https://github.com/root-project/root/pull/15659). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15674
https://github.com/root-project/root/pull/15674:391,Usability,simpl,simplify,391,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[skip-ci] improve labeling in candle plot examples.](https://github.com/root-project/root/pull/15659); - [Fix warnings in timeaxis3.C](https://github.com/root-project/root/pull/15659); - [Simplify timeonaxis.C and make the year labels clearer](https://github.com/root-project/root/pull/15659); - [simplify timeonaxis examples.](https://github.com/root-project/root/pull/15659); - [Remove an unused variable and use exact dates.](https://github.com/root-project/root/pull/15659). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15674
https://github.com/root-project/root/pull/15675:80,Deployability,patch,patches,80,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[RF][CMake] Use PUBLIC (not INTERFACE) for adding &#x60;res&#x60; to include dirs](https://github.com/root-project/root/pull/15664); - [[RF][CMake] Add missing dependencies](https://github.com/root-project/root/pull/15664). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15675
https://github.com/root-project/root/pull/15675:122,Integrability,INTERFACE,INTERFACE,122,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[RF][CMake] Use PUBLIC (not INTERFACE) for adding &#x60;res&#x60; to include dirs](https://github.com/root-project/root/pull/15664); - [[RF][CMake] Add missing dependencies](https://github.com/root-project/root/pull/15664). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15675
https://github.com/root-project/root/pull/15675:254,Integrability,depend,dependencies,254,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[RF][CMake] Use PUBLIC (not INTERFACE) for adding &#x60;res&#x60; to include dirs](https://github.com/root-project/root/pull/15664); - [[RF][CMake] Add missing dependencies](https://github.com/root-project/root/pull/15664). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15675
https://github.com/root-project/root/pull/15682:196,Testability,log,logic,196,"As explained in #15405, the documentation for the `ExternalConstraints` option in RooMCStudy is misleading. People should just pass this to the `FitOptions`, so it actually needs no own docs. The logic to forward the `ExternalConstraints` to the FitOptions is kept for backwards compatibility. Closes #15405.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15682
https://github.com/root-project/root/pull/15684:248,Deployability,update,updated,248,"# This Pull request:. ## Changes or fixes:. Warns user when resulting TGraph is empty, ie when no points were found in the file, most likely due to the format argument not matching the input file. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15684
https://github.com/root-project/root/pull/15684:218,Testability,test,tested,218,"# This Pull request:. ## Changes or fixes:. Warns user when resulting TGraph is empty, ie when no points were found in the file, most likely due to the format argument not matching the input file. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15684
https://github.com/root-project/root/issues/15686:3993,Deployability,Install,Installation,3993,"ootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:889 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000119925s elapsed).; graph: X: 42,Y:42; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; ```. ### Reproducer. compiled version; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RLogger.hxx>. #include <iostream>. auto verbosity =; ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kInfo);. void run(); {; ROOT::RDataFrame d{1};; int i{42};; auto graph = d.Define(""x"", [&i](); { ; std::cout << ""Defining 'x': address: "" << &i << "", value: "" << i << ""\n"";; return i; }); .Define(""y"", [&i](); {; std::cout << ""Defining 'y': address: "" << &i << "", value: "" << i << ""\n"";; auto j = i; i = 10; return j; }); .Graph<int, int>(""x"", ""y"");. assert(graph->GetN() == 1);; std::cout << ""graph: X: "" << graph->GetPointX(0) << "",Y:"" << graph->GetPointY(0) << ""\n"";; }. int main(); {; run();; }; ```. JITted version; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RLogger.hxx>. #include <iostream>. auto verbosity =; ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kInfo);. void run(); {; ROOT::RDataFrame d{1};; int i{42};; auto graph = d.Define(""x"", [&i](); { ; std::cout << ""Defining 'x': address: "" << &i << "", value: "" << i << ""\n"";; return i; }); .Define(""y"", [&i](); {; std::cout << ""Defining 'y': address: "" << &i << "", value: "" << i << ""\n"";; auto j = i; i = 10; return j; }); .Graph(""x"", ""y"");. assert(graph->GetN() == 1);; std::cout << ""graph: X: "" << graph->GetPointX(0) << "",Y:"" << graph->GetPointY(0) << ""\n"";; }. int main(); {; run();; }; ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Fedora 39. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15686
https://github.com/root-project/root/issues/15686:443,Integrability,depend,depending,443,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The RDataFrame execution order for branches of the computation graph is bottom-up: actions request values to the upstream readers traversing them one by one in reverse order w.r.t. their insertion. This logic seems to be flipped when the action is JITted. In a simple example with two `Define`d columns and one `Graph`, the order of execution of the `Define`s changes depending on whether the action needs to infer the column types or not. Correc order (bottom-up); ```; ./repro_graph_compiled.out ; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:852 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Starting event loop number 0.; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; Defining 'b2': address: 0x7ffe1477198c, value: 42; Defining 'b1': address: 0x7ffe1477198c, value: 10; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:889 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 6.10352e-05s elapsed).; graph: X: 10,Y:42; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; ```. Wrong order; ```; ./repro_graph_jitted.out ; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:852 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Starting event loop number 0.; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:825 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Just-in-time compilation phase completed in 1.388524 seconds.; Defining 'b1': address: 0x7ffd017cb8dc, value: 42;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15686
https://github.com/root-project/root/issues/15686:278,Testability,log,logic,278,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The RDataFrame execution order for branches of the computation graph is bottom-up: actions request values to the upstream readers traversing them one by one in reverse order w.r.t. their insertion. This logic seems to be flipped when the action is JITted. In a simple example with two `Define`d columns and one `Graph`, the order of execution of the `Define`s changes depending on whether the action needs to infer the column types or not. Correc order (bottom-up); ```; ./repro_graph_compiled.out ; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:852 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Starting event loop number 0.; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; Defining 'b2': address: 0x7ffe1477198c, value: 42; Defining 'b1': address: 0x7ffe1477198c, value: 10; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:889 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 6.10352e-05s elapsed).; graph: X: 10,Y:42; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; ```. Wrong order; ```; ./repro_graph_jitted.out ; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:852 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Starting event loop number 0.; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:825 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Just-in-time compilation phase completed in 1.388524 seconds.; Defining 'b1': address: 0x7ffd017cb8dc, value: 42;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15686
https://github.com/root-project/root/issues/15686:3087,Testability,assert,assert,3087,"ootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:889 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000119925s elapsed).; graph: X: 42,Y:42; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; ```. ### Reproducer. compiled version; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RLogger.hxx>. #include <iostream>. auto verbosity =; ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kInfo);. void run(); {; ROOT::RDataFrame d{1};; int i{42};; auto graph = d.Define(""x"", [&i](); { ; std::cout << ""Defining 'x': address: "" << &i << "", value: "" << i << ""\n"";; return i; }); .Define(""y"", [&i](); {; std::cout << ""Defining 'y': address: "" << &i << "", value: "" << i << ""\n"";; auto j = i; i = 10; return j; }); .Graph<int, int>(""x"", ""y"");. assert(graph->GetN() == 1);; std::cout << ""graph: X: "" << graph->GetPointX(0) << "",Y:"" << graph->GetPointY(0) << ""\n"";; }. int main(); {; run();; }; ```. JITted version; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RLogger.hxx>. #include <iostream>. auto verbosity =; ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kInfo);. void run(); {; ROOT::RDataFrame d{1};; int i{42};; auto graph = d.Define(""x"", [&i](); { ; std::cout << ""Defining 'x': address: "" << &i << "", value: "" << i << ""\n"";; return i; }); .Define(""y"", [&i](); {; std::cout << ""Defining 'y': address: "" << &i << "", value: "" << i << ""\n"";; auto j = i; i = 10; return j; }); .Graph(""x"", ""y"");. assert(graph->GetN() == 1);; std::cout << ""graph: X: "" << graph->GetPointX(0) << "",Y:"" << graph->GetPointY(0) << ""\n"";; }. int main(); {; run();; }; ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Fedora 39. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15686
https://github.com/root-project/root/issues/15686:3812,Testability,assert,assert,3812,"ootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:889 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000119925s elapsed).; graph: X: 42,Y:42; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; ```. ### Reproducer. compiled version; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RLogger.hxx>. #include <iostream>. auto verbosity =; ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kInfo);. void run(); {; ROOT::RDataFrame d{1};; int i{42};; auto graph = d.Define(""x"", [&i](); { ; std::cout << ""Defining 'x': address: "" << &i << "", value: "" << i << ""\n"";; return i; }); .Define(""y"", [&i](); {; std::cout << ""Defining 'y': address: "" << &i << "", value: "" << i << ""\n"";; auto j = i; i = 10; return j; }); .Graph<int, int>(""x"", ""y"");. assert(graph->GetN() == 1);; std::cout << ""graph: X: "" << graph->GetPointX(0) << "",Y:"" << graph->GetPointY(0) << ""\n"";; }. int main(); {; run();; }; ```. JITted version; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RLogger.hxx>. #include <iostream>. auto verbosity =; ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kInfo);. void run(); {; ROOT::RDataFrame d{1};; int i{42};; auto graph = d.Define(""x"", [&i](); { ; std::cout << ""Defining 'x': address: "" << &i << "", value: "" << i << ""\n"";; return i; }); .Define(""y"", [&i](); {; std::cout << ""Defining 'y': address: "" << &i << "", value: "" << i << ""\n"";; auto j = i; i = 10; return j; }); .Graph(""x"", ""y"");. assert(graph->GetN() == 1);; std::cout << ""graph: X: "" << graph->GetPointX(0) << "",Y:"" << graph->GetPointY(0) << ""\n"";; }. int main(); {; run();; }; ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Fedora 39. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15686
https://github.com/root-project/root/issues/15686:336,Usability,simpl,simple,336,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The RDataFrame execution order for branches of the computation graph is bottom-up: actions request values to the upstream readers traversing them one by one in reverse order w.r.t. their insertion. This logic seems to be flipped when the action is JITted. In a simple example with two `Define`d columns and one `Graph`, the order of execution of the `Define`s changes depending on whether the action needs to infer the column types or not. Correc order (bottom-up); ```; ./repro_graph_compiled.out ; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:852 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Starting event loop number 0.; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; Defining 'b2': address: 0x7ffe1477198c, value: 42; Defining 'b1': address: 0x7ffe1477198c, value: 10; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:889 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 6.10352e-05s elapsed).; graph: X: 10,Y:42; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; ```. Wrong order; ```; ./repro_graph_jitted.out ; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:852 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Starting event loop number 0.; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:825 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Just-in-time compilation phase completed in 1.388524 seconds.; Defining 'b1': address: 0x7ffd017cb8dc, value: 42;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15686
https://github.com/root-project/root/pull/15687:839,Deployability,update,updated,839,"## Backport of #14627. ## Changes or fixes:. ROOT is known to have a 1 GB maximum IO size, see https://github.com/root-project/root/issues/6734, but did not provide proper safety checks against this (since 18y). This lead to silent crashes in the WriteFastArray function. The length of the buffer Int_t l takes a negative value if we do not add these checks and n is high enough. This fixes the crash reported here: https://root-forum.cern.ch/t/crash-when-writing-canvas-to-tfile/58010/8?u=ferhue ; A reproducer of the crash is also in that link.; Seems there are more people seeing a similar crash on the forum https://root-forum.cern.ch/t/writing-out-events-larger-than-1-gb/33106. I did not check in depth, but this PR also probably fixes https://github.com/cms-sw/cmssw/issues/40132. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/14644",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15687
https://github.com/root-project/root/pull/15687:172,Safety,safe,safety,172,"## Backport of #14627. ## Changes or fixes:. ROOT is known to have a 1 GB maximum IO size, see https://github.com/root-project/root/issues/6734, but did not provide proper safety checks against this (since 18y). This lead to silent crashes in the WriteFastArray function. The length of the buffer Int_t l takes a negative value if we do not add these checks and n is high enough. This fixes the crash reported here: https://root-forum.cern.ch/t/crash-when-writing-canvas-to-tfile/58010/8?u=ferhue ; A reproducer of the crash is also in that link.; Seems there are more people seeing a similar crash on the forum https://root-forum.cern.ch/t/writing-out-events-larger-than-1-gb/33106. I did not check in depth, but this PR also probably fixes https://github.com/cms-sw/cmssw/issues/40132. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/14644",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15687
https://github.com/root-project/root/pull/15687:809,Testability,test,tested,809,"## Backport of #14627. ## Changes or fixes:. ROOT is known to have a 1 GB maximum IO size, see https://github.com/root-project/root/issues/6734, but did not provide proper safety checks against this (since 18y). This lead to silent crashes in the WriteFastArray function. The length of the buffer Int_t l takes a negative value if we do not add these checks and n is high enough. This fixes the crash reported here: https://root-forum.cern.ch/t/crash-when-writing-canvas-to-tfile/58010/8?u=ferhue ; A reproducer of the crash is also in that link.; Seems there are more people seeing a similar crash on the forum https://root-forum.cern.ch/t/writing-out-events-larger-than-1-gb/33106. I did not check in depth, but this PR also probably fixes https://github.com/cms-sw/cmssw/issues/40132. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/14644",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15687
https://github.com/root-project/root/issues/15688:419,Availability,error,error,419,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. It appears that some member function ambiguities prevent pyROOT from calling the proper function. This has been encountered specifically with TProfile2D with the Fill method (see reproducer below). ; The equivalent code runs fine in C++. ### Reproducer. import ROOT; h = ROOT.TProfile2D(""h"",""h"",1,0,1,1,0,1); h.Fill(""a"",""b"",1,1). Produces this error:. ```; input_line_40:8:47: error: call to member function 'Fill' is ambiguous; new (ret) (int) (((TProfile2D*)obj)->Fill(*(const char**)args[0], *(const char**)args[1],; ```. ### ROOT version. master, 6.32. ### Installation method. pre-built. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:452,Availability,error,error,452,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. It appears that some member function ambiguities prevent pyROOT from calling the proper function. This has been encountered specifically with TProfile2D with the Fill method (see reproducer below). ; The equivalent code runs fine in C++. ### Reproducer. import ROOT; h = ROOT.TProfile2D(""h"",""h"",1,0,1,1,0,1); h.Fill(""a"",""b"",1,1). Produces this error:. ```; input_line_40:8:47: error: call to member function 'Fill' is ambiguous; new (ret) (int) (((TProfile2D*)obj)->Fill(*(const char**)args[0], *(const char**)args[1],; ```. ### ROOT version. master, 6.32. ### Installation method. pre-built. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:636,Deployability,Install,Installation,636,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. It appears that some member function ambiguities prevent pyROOT from calling the proper function. This has been encountered specifically with TProfile2D with the Fill method (see reproducer below). ; The equivalent code runs fine in C++. ### Reproducer. import ROOT; h = ROOT.TProfile2D(""h"",""h"",1,0,1,1,0,1); h.Fill(""a"",""b"",1,1). Produces this error:. ```; input_line_40:8:47: error: call to member function 'Fill' is ambiguous; new (ret) (int) (((TProfile2D*)obj)->Fill(*(const char**)args[0], *(const char**)args[1],; ```. ### ROOT version. master, 6.32. ### Installation method. pre-built. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/pull/15689:262,Deployability,update,updated,262,"# This Pull request:; Disallows linking with mold, which doesn't work. Even when building is possible by changing some CMake, the build seems to be broken. See https://github.com/root-project/root/issues/15473. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15689
https://github.com/root-project/root/pull/15689:232,Testability,test,tested,232,"# This Pull request:; Disallows linking with mold, which doesn't work. Even when building is possible by changing some CMake, the build seems to be broken. See https://github.com/root-project/root/issues/15473. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15689
https://github.com/root-project/root/issues/15690:1150,Deployability,Install,Installation,1150,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. running some tests on 6.32 with the CMS Higgs workspace I am getting a crash with the top of the stack trace pointing to `RooBernstein::fillBuffer()` which was introduced in https://github.com/root-project/root/commit/50a1bddacc1cbd22d7ce0e184db42bc04e9b0088. I can confirm that I don't see the crash when I use a version of ROOT master from just before this commit. . Looking at the commit, it has introduced a new data member, `_buffer` ... but has not done any schema evolution. . I'm wondering if the crash is that the `_buffer` in the auto-evolved instance is empty, and then the `fillBuffer` method is trying to fill into this? The resize of `_buffer` only happens in the non-default-constructor, I note. ### Reproducer. In 6.32:; ```; import ROOT.Experimental.XRooFit as XRF; w = XRF.xRooNode(""/afs/cern.ch/work/w/will/public/cms_higgs_ws.root""); w[""model_s""][0].Draw(); ```; or in C++:; ```; using namespace ROOT::Experimental::XRooFit;; xRooNode w(""/afs/cern.ch/work/w/will/public/cms_higgs_ws.root"");; w[""model_s""]->at(0)->Draw();; ```. ### ROOT version. 6.32. ### Installation method. source. ### Operating system. el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15690
https://github.com/root-project/root/issues/15690:620,Modifiability,evolve,evolved,620,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. running some tests on 6.32 with the CMS Higgs workspace I am getting a crash with the top of the stack trace pointing to `RooBernstein::fillBuffer()` which was introduced in https://github.com/root-project/root/commit/50a1bddacc1cbd22d7ce0e184db42bc04e9b0088. I can confirm that I don't see the crash when I use a version of ROOT master from just before this commit. . Looking at the commit, it has introduced a new data member, `_buffer` ... but has not done any schema evolution. . I'm wondering if the crash is that the `_buffer` in the auto-evolved instance is empty, and then the `fillBuffer` method is trying to fill into this? The resize of `_buffer` only happens in the non-default-constructor, I note. ### Reproducer. In 6.32:; ```; import ROOT.Experimental.XRooFit as XRF; w = XRF.xRooNode(""/afs/cern.ch/work/w/will/public/cms_higgs_ws.root""); w[""model_s""][0].Draw(); ```; or in C++:; ```; using namespace ROOT::Experimental::XRooFit;; xRooNode w(""/afs/cern.ch/work/w/will/public/cms_higgs_ws.root"");; w[""model_s""]->at(0)->Draw();; ```. ### ROOT version. 6.32. ### Installation method. source. ### Operating system. el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15690
https://github.com/root-project/root/issues/15690:88,Testability,test,tests,88,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. running some tests on 6.32 with the CMS Higgs workspace I am getting a crash with the top of the stack trace pointing to `RooBernstein::fillBuffer()` which was introduced in https://github.com/root-project/root/commit/50a1bddacc1cbd22d7ce0e184db42bc04e9b0088. I can confirm that I don't see the crash when I use a version of ROOT master from just before this commit. . Looking at the commit, it has introduced a new data member, `_buffer` ... but has not done any schema evolution. . I'm wondering if the crash is that the `_buffer` in the auto-evolved instance is empty, and then the `fillBuffer` method is trying to fill into this? The resize of `_buffer` only happens in the non-default-constructor, I note. ### Reproducer. In 6.32:; ```; import ROOT.Experimental.XRooFit as XRF; w = XRF.xRooNode(""/afs/cern.ch/work/w/will/public/cms_higgs_ws.root""); w[""model_s""][0].Draw(); ```; or in C++:; ```; using namespace ROOT::Experimental::XRooFit;; xRooNode w(""/afs/cern.ch/work/w/will/public/cms_higgs_ws.root"");; w[""model_s""]->at(0)->Draw();; ```. ### ROOT version. 6.32. ### Installation method. source. ### Operating system. el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15690
https://github.com/root-project/root/pull/15691:66,Testability,test,test,66,"One of the RBatchGenerator possible implementations. From the eye test should be faster, but needs measuring",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15691
https://github.com/root-project/root/pull/15693:231,Integrability,interface,interface,231,"Don't use a default w=1.0 in the Fill functions, but instead declare inlined no-weight overloads to correctly override TH2 methods. Note that the overrides are actually quite questionable, because they don't respect the actual TH2 interface, where the third parameter is the weight ""w"" and not an additional coordinate ""z"". However, that's how the TProfile2D interface was defined a long time ago, so these overrides are preserved for backwards compatibility. The better design would have been to give the function a different name, or always require an explicit `w` parameter such that the signatures are always different. Closes #15688.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15693
https://github.com/root-project/root/pull/15693:359,Integrability,interface,interface,359,"Don't use a default w=1.0 in the Fill functions, but instead declare inlined no-weight overloads to correctly override TH2 methods. Note that the overrides are actually quite questionable, because they don't respect the actual TH2 interface, where the third parameter is the weight ""w"" and not an additional coordinate ""z"". However, that's how the TProfile2D interface was defined a long time ago, so these overrides are preserved for backwards compatibility. The better design would have been to give the function a different name, or always require an explicit `w` parameter such that the signatures are always different. Closes #15688.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15693
https://github.com/root-project/root/issues/15694:1203,Deployability,Install,Installation,1203,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While testing 6.32, it appears that the new default evaluation backend returns incorrect results for binned likelihoods. It is returning ""20"" in the example below when I'm pretty sure it should just return ""10"", which the legacy implementation does. . ### Reproducer. ```c++; {; using namespace ROOT::Experimental::XRooFit;. double n = 0;; double mu = 10;. // create a single-channel, single-bin model; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/SR""]->SetXaxis(1,0,1);; w[""simPdf/SR/bkg""]->SetBinContent(1,mu);; w[""simPdf/SR""]->SetBinData(1,n);. // activate binned likelihood; w[""simPdf/SR/samples""]->get<RooAbsArg>()->setAttribute(""BinnedLikelihood"");. double newVal = w[""simPdf""]->get<RooAbsPdf>()->createNLL(*w[""obsData""]->get<RooAbsData>())->getVal();; double legacyVal = w[""simPdf""]->get<RooAbsPdf>()->createNLL(*w[""obsData""]->get<RooAbsData>(),RooFit::EvalBackend(""legacy""))->getVal();; double ans = -log(TMath::Poisson(n,mu));. // correct answer should be -log(Pois(n|mu)). std::cout << newVal << std::endl << legacyVal << std::endl << ans << std::endl;. }; ```. ### ROOT version. 6.32, master. ### Installation method. source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15694
https://github.com/root-project/root/issues/15694:81,Testability,test,testing,81,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While testing 6.32, it appears that the new default evaluation backend returns incorrect results for binned likelihoods. It is returning ""20"" in the example below when I'm pretty sure it should just return ""10"", which the legacy implementation does. . ### Reproducer. ```c++; {; using namespace ROOT::Experimental::XRooFit;. double n = 0;; double mu = 10;. // create a single-channel, single-bin model; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/SR""]->SetXaxis(1,0,1);; w[""simPdf/SR/bkg""]->SetBinContent(1,mu);; w[""simPdf/SR""]->SetBinData(1,n);. // activate binned likelihood; w[""simPdf/SR/samples""]->get<RooAbsArg>()->setAttribute(""BinnedLikelihood"");. double newVal = w[""simPdf""]->get<RooAbsPdf>()->createNLL(*w[""obsData""]->get<RooAbsData>())->getVal();; double legacyVal = w[""simPdf""]->get<RooAbsPdf>()->createNLL(*w[""obsData""]->get<RooAbsData>(),RooFit::EvalBackend(""legacy""))->getVal();; double ans = -log(TMath::Poisson(n,mu));. // correct answer should be -log(Pois(n|mu)). std::cout << newVal << std::endl << legacyVal << std::endl << ans << std::endl;. }; ```. ### ROOT version. 6.32, master. ### Installation method. source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15694
https://github.com/root-project/root/issues/15694:1004,Testability,log,log,1004,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While testing 6.32, it appears that the new default evaluation backend returns incorrect results for binned likelihoods. It is returning ""20"" in the example below when I'm pretty sure it should just return ""10"", which the legacy implementation does. . ### Reproducer. ```c++; {; using namespace ROOT::Experimental::XRooFit;. double n = 0;; double mu = 10;. // create a single-channel, single-bin model; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/SR""]->SetXaxis(1,0,1);; w[""simPdf/SR/bkg""]->SetBinContent(1,mu);; w[""simPdf/SR""]->SetBinData(1,n);. // activate binned likelihood; w[""simPdf/SR/samples""]->get<RooAbsArg>()->setAttribute(""BinnedLikelihood"");. double newVal = w[""simPdf""]->get<RooAbsPdf>()->createNLL(*w[""obsData""]->get<RooAbsData>())->getVal();; double legacyVal = w[""simPdf""]->get<RooAbsPdf>()->createNLL(*w[""obsData""]->get<RooAbsData>(),RooFit::EvalBackend(""legacy""))->getVal();; double ans = -log(TMath::Poisson(n,mu));. // correct answer should be -log(Pois(n|mu)). std::cout << newVal << std::endl << legacyVal << std::endl << ans << std::endl;. }; ```. ### ROOT version. 6.32, master. ### Installation method. source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15694
https://github.com/root-project/root/issues/15694:1061,Testability,log,log,1061,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While testing 6.32, it appears that the new default evaluation backend returns incorrect results for binned likelihoods. It is returning ""20"" in the example below when I'm pretty sure it should just return ""10"", which the legacy implementation does. . ### Reproducer. ```c++; {; using namespace ROOT::Experimental::XRooFit;. double n = 0;; double mu = 10;. // create a single-channel, single-bin model; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/SR""]->SetXaxis(1,0,1);; w[""simPdf/SR/bkg""]->SetBinContent(1,mu);; w[""simPdf/SR""]->SetBinData(1,n);. // activate binned likelihood; w[""simPdf/SR/samples""]->get<RooAbsArg>()->setAttribute(""BinnedLikelihood"");. double newVal = w[""simPdf""]->get<RooAbsPdf>()->createNLL(*w[""obsData""]->get<RooAbsData>())->getVal();; double legacyVal = w[""simPdf""]->get<RooAbsPdf>()->createNLL(*w[""obsData""]->get<RooAbsData>(),RooFit::EvalBackend(""legacy""))->getVal();; double ans = -log(TMath::Poisson(n,mu));. // correct answer should be -log(Pois(n|mu)). std::cout << newVal << std::endl << legacyVal << std::endl << ans << std::endl;. }; ```. ### ROOT version. 6.32, master. ### Installation method. source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15694
https://github.com/root-project/root/pull/15695:160,Safety,safe,safe,160,"Setting the size of the transient buffer only in the constructor was a mistake, because it's never called when the RooBernstein is read back from a file. To be safe, the buffer size should be checked everytime that it's used. Closes #15690.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15695
https://github.com/root-project/root/pull/15696:2164,Deployability,update,updated,2164,"m/llvm-project/commit/8d67b9e2461d654c0a3657e511e2295006f23748; - https://github.com/llvm/llvm-project/commit/9478f661c26fbc22491218477917df5d8d73c51c; - https://github.com/llvm/llvm-project/commit/6a6994cc9bc0327aaf8b005c650ff5eb29d2bcce; - https://github.com/llvm/llvm-project/commit/8b1771bd9f304be39d4dcbdcccedb6d3bcd18200 . ### Notes; - Cling and Root commits for the rebase are kept separate for now (can squash similar commits together later).; - Also added a temporary commit https://github.com/root-project/llvm-project/commit/4066693bd33bc93bdee33415b7f5773bda1d1f49 in LLVM to prevent building of mlgo-utils, which will not compile when all the test folders are removed. We can either keep it or add an exception to this file in the Root GitHub workflow to not remove the test folders under mlgo-utils. #### TO DISCUSS/PROPERLY FIX; - [x] The commit 64f7cf6318ca9a4da766b02c45fc81aea7762f8e is memleaking; it is a temporary fix for now to prevent some failing tests, like `gtest-roofit-histfactory-test-testHistFactory`.; - Fixed with: https://github.com/root-project/root/pull/16314; - [x] This commit: https://github.com/root-project/root/pull/15696/commits/de5d1413e07170e396ac51d982c0844e4f548f4b is a temporarily fix reintroducing a memory leak. ; - Fixed with: https://github.com/root-project/root/pull/15696/commits/2c2d4dc2bf3ebe0f475b05a66a377c2467525d9d; - [x] This commit: d79963ecb74f957a332409ed91b106a0f53da10a fixes an issue with failing tests like `tutorial-hist-cumulative` when JITLink is turned on. This works for now, but will need to investigate further on why resource trackers were not destructed in the right order.; - Not a critical issue: Can also look into this later after the merge.; - [x] Discussion on a proper solution for the macOS modulemap issue; - Fixed with: https://github.com/root-project/root/pull/16315. ## Changes or fixes:. ## Checklist:; - [x] Fix mac13 build; - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:868,Testability,test,test,868,"# This Pull request:. ### Rebase. A few relevant LLVM commits that were referenced for the rebase:. - https://github.com/llvm/llvm-project/commit/95dd17848383315050a5d64051bd695d0a653c51; - https://github.com/llvm/llvm-project/commit/8d67b9e2461d654c0a3657e511e2295006f23748; - https://github.com/llvm/llvm-project/commit/9478f661c26fbc22491218477917df5d8d73c51c; - https://github.com/llvm/llvm-project/commit/6a6994cc9bc0327aaf8b005c650ff5eb29d2bcce; - https://github.com/llvm/llvm-project/commit/8b1771bd9f304be39d4dcbdcccedb6d3bcd18200 . ### Notes; - Cling and Root commits for the rebase are kept separate for now (can squash similar commits together later).; - Also added a temporary commit https://github.com/root-project/llvm-project/commit/4066693bd33bc93bdee33415b7f5773bda1d1f49 in LLVM to prevent building of mlgo-utils, which will not compile when all the test folders are removed. We can either keep it or add an exception to this file in the Root GitHub workflow to not remove the test folders under mlgo-utils. #### TO DISCUSS/PROPERLY FIX; - [x] The commit 64f7cf6318ca9a4da766b02c45fc81aea7762f8e is memleaking; it is a temporary fix for now to prevent some failing tests, like `gtest-roofit-histfactory-test-testHistFactory`.; - Fixed with: https://github.com/root-project/root/pull/16314; - [x] This commit: https://github.com/root-project/root/pull/15696/commits/de5d1413e07170e396ac51d982c0844e4f548f4b is a temporarily fix reintroducing a memory leak. ; - Fixed with: https://github.com/root-project/root/pull/15696/commits/2c2d4dc2bf3ebe0f475b05a66a377c2467525d9d; - [x] This commit: d79963ecb74f957a332409ed91b106a0f53da10a fixes an issue with failing tests like `tutorial-hist-cumulative` when JITLink is turned on. This works for now, but will need to investigate further on why resource trackers were not destructed in the right order.; - Not a critical issue: Can also look into this later after the merge.; - [x] Discussion on a proper solution for the macOS modulemap iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:995,Testability,test,test,995,"# This Pull request:. ### Rebase. A few relevant LLVM commits that were referenced for the rebase:. - https://github.com/llvm/llvm-project/commit/95dd17848383315050a5d64051bd695d0a653c51; - https://github.com/llvm/llvm-project/commit/8d67b9e2461d654c0a3657e511e2295006f23748; - https://github.com/llvm/llvm-project/commit/9478f661c26fbc22491218477917df5d8d73c51c; - https://github.com/llvm/llvm-project/commit/6a6994cc9bc0327aaf8b005c650ff5eb29d2bcce; - https://github.com/llvm/llvm-project/commit/8b1771bd9f304be39d4dcbdcccedb6d3bcd18200 . ### Notes; - Cling and Root commits for the rebase are kept separate for now (can squash similar commits together later).; - Also added a temporary commit https://github.com/root-project/llvm-project/commit/4066693bd33bc93bdee33415b7f5773bda1d1f49 in LLVM to prevent building of mlgo-utils, which will not compile when all the test folders are removed. We can either keep it or add an exception to this file in the Root GitHub workflow to not remove the test folders under mlgo-utils. #### TO DISCUSS/PROPERLY FIX; - [x] The commit 64f7cf6318ca9a4da766b02c45fc81aea7762f8e is memleaking; it is a temporary fix for now to prevent some failing tests, like `gtest-roofit-histfactory-test-testHistFactory`.; - Fixed with: https://github.com/root-project/root/pull/16314; - [x] This commit: https://github.com/root-project/root/pull/15696/commits/de5d1413e07170e396ac51d982c0844e4f548f4b is a temporarily fix reintroducing a memory leak. ; - Fixed with: https://github.com/root-project/root/pull/15696/commits/2c2d4dc2bf3ebe0f475b05a66a377c2467525d9d; - [x] This commit: d79963ecb74f957a332409ed91b106a0f53da10a fixes an issue with failing tests like `tutorial-hist-cumulative` when JITLink is turned on. This works for now, but will need to investigate further on why resource trackers were not destructed in the right order.; - Not a critical issue: Can also look into this later after the merge.; - [x] Discussion on a proper solution for the macOS modulemap iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:1183,Testability,test,tests,1183,"ject/commit/95dd17848383315050a5d64051bd695d0a653c51; - https://github.com/llvm/llvm-project/commit/8d67b9e2461d654c0a3657e511e2295006f23748; - https://github.com/llvm/llvm-project/commit/9478f661c26fbc22491218477917df5d8d73c51c; - https://github.com/llvm/llvm-project/commit/6a6994cc9bc0327aaf8b005c650ff5eb29d2bcce; - https://github.com/llvm/llvm-project/commit/8b1771bd9f304be39d4dcbdcccedb6d3bcd18200 . ### Notes; - Cling and Root commits for the rebase are kept separate for now (can squash similar commits together later).; - Also added a temporary commit https://github.com/root-project/llvm-project/commit/4066693bd33bc93bdee33415b7f5773bda1d1f49 in LLVM to prevent building of mlgo-utils, which will not compile when all the test folders are removed. We can either keep it or add an exception to this file in the Root GitHub workflow to not remove the test folders under mlgo-utils. #### TO DISCUSS/PROPERLY FIX; - [x] The commit 64f7cf6318ca9a4da766b02c45fc81aea7762f8e is memleaking; it is a temporary fix for now to prevent some failing tests, like `gtest-roofit-histfactory-test-testHistFactory`.; - Fixed with: https://github.com/root-project/root/pull/16314; - [x] This commit: https://github.com/root-project/root/pull/15696/commits/de5d1413e07170e396ac51d982c0844e4f548f4b is a temporarily fix reintroducing a memory leak. ; - Fixed with: https://github.com/root-project/root/pull/15696/commits/2c2d4dc2bf3ebe0f475b05a66a377c2467525d9d; - [x] This commit: d79963ecb74f957a332409ed91b106a0f53da10a fixes an issue with failing tests like `tutorial-hist-cumulative` when JITLink is turned on. This works for now, but will need to investigate further on why resource trackers were not destructed in the right order.; - Not a critical issue: Can also look into this later after the merge.; - [x] Discussion on a proper solution for the macOS modulemap issue; - Fixed with: https://github.com/root-project/root/pull/16315. ## Changes or fixes:. ## Checklist:; - [x] Fix mac13 build; - [x] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:1221,Testability,test,test-testHistFactory,1221,"ject/commit/95dd17848383315050a5d64051bd695d0a653c51; - https://github.com/llvm/llvm-project/commit/8d67b9e2461d654c0a3657e511e2295006f23748; - https://github.com/llvm/llvm-project/commit/9478f661c26fbc22491218477917df5d8d73c51c; - https://github.com/llvm/llvm-project/commit/6a6994cc9bc0327aaf8b005c650ff5eb29d2bcce; - https://github.com/llvm/llvm-project/commit/8b1771bd9f304be39d4dcbdcccedb6d3bcd18200 . ### Notes; - Cling and Root commits for the rebase are kept separate for now (can squash similar commits together later).; - Also added a temporary commit https://github.com/root-project/llvm-project/commit/4066693bd33bc93bdee33415b7f5773bda1d1f49 in LLVM to prevent building of mlgo-utils, which will not compile when all the test folders are removed. We can either keep it or add an exception to this file in the Root GitHub workflow to not remove the test folders under mlgo-utils. #### TO DISCUSS/PROPERLY FIX; - [x] The commit 64f7cf6318ca9a4da766b02c45fc81aea7762f8e is memleaking; it is a temporary fix for now to prevent some failing tests, like `gtest-roofit-histfactory-test-testHistFactory`.; - Fixed with: https://github.com/root-project/root/pull/16314; - [x] This commit: https://github.com/root-project/root/pull/15696/commits/de5d1413e07170e396ac51d982c0844e4f548f4b is a temporarily fix reintroducing a memory leak. ; - Fixed with: https://github.com/root-project/root/pull/15696/commits/2c2d4dc2bf3ebe0f475b05a66a377c2467525d9d; - [x] This commit: d79963ecb74f957a332409ed91b106a0f53da10a fixes an issue with failing tests like `tutorial-hist-cumulative` when JITLink is turned on. This works for now, but will need to investigate further on why resource trackers were not destructed in the right order.; - Not a critical issue: Can also look into this later after the merge.; - [x] Discussion on a proper solution for the macOS modulemap issue; - Fixed with: https://github.com/root-project/root/pull/16315. ## Changes or fixes:. ## Checklist:; - [x] Fix mac13 build; - [x] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:1676,Testability,test,tests,1676,"m/llvm-project/commit/8d67b9e2461d654c0a3657e511e2295006f23748; - https://github.com/llvm/llvm-project/commit/9478f661c26fbc22491218477917df5d8d73c51c; - https://github.com/llvm/llvm-project/commit/6a6994cc9bc0327aaf8b005c650ff5eb29d2bcce; - https://github.com/llvm/llvm-project/commit/8b1771bd9f304be39d4dcbdcccedb6d3bcd18200 . ### Notes; - Cling and Root commits for the rebase are kept separate for now (can squash similar commits together later).; - Also added a temporary commit https://github.com/root-project/llvm-project/commit/4066693bd33bc93bdee33415b7f5773bda1d1f49 in LLVM to prevent building of mlgo-utils, which will not compile when all the test folders are removed. We can either keep it or add an exception to this file in the Root GitHub workflow to not remove the test folders under mlgo-utils. #### TO DISCUSS/PROPERLY FIX; - [x] The commit 64f7cf6318ca9a4da766b02c45fc81aea7762f8e is memleaking; it is a temporary fix for now to prevent some failing tests, like `gtest-roofit-histfactory-test-testHistFactory`.; - Fixed with: https://github.com/root-project/root/pull/16314; - [x] This commit: https://github.com/root-project/root/pull/15696/commits/de5d1413e07170e396ac51d982c0844e4f548f4b is a temporarily fix reintroducing a memory leak. ; - Fixed with: https://github.com/root-project/root/pull/15696/commits/2c2d4dc2bf3ebe0f475b05a66a377c2467525d9d; - [x] This commit: d79963ecb74f957a332409ed91b106a0f53da10a fixes an issue with failing tests like `tutorial-hist-cumulative` when JITLink is turned on. This works for now, but will need to investigate further on why resource trackers were not destructed in the right order.; - Not a critical issue: Can also look into this later after the merge.; - [x] Discussion on a proper solution for the macOS modulemap issue; - Fixed with: https://github.com/root-project/root/pull/16315. ## Changes or fixes:. ## Checklist:; - [x] Fix mac13 build; - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:2134,Testability,test,tested,2134,"m/llvm-project/commit/8d67b9e2461d654c0a3657e511e2295006f23748; - https://github.com/llvm/llvm-project/commit/9478f661c26fbc22491218477917df5d8d73c51c; - https://github.com/llvm/llvm-project/commit/6a6994cc9bc0327aaf8b005c650ff5eb29d2bcce; - https://github.com/llvm/llvm-project/commit/8b1771bd9f304be39d4dcbdcccedb6d3bcd18200 . ### Notes; - Cling and Root commits for the rebase are kept separate for now (can squash similar commits together later).; - Also added a temporary commit https://github.com/root-project/llvm-project/commit/4066693bd33bc93bdee33415b7f5773bda1d1f49 in LLVM to prevent building of mlgo-utils, which will not compile when all the test folders are removed. We can either keep it or add an exception to this file in the Root GitHub workflow to not remove the test folders under mlgo-utils. #### TO DISCUSS/PROPERLY FIX; - [x] The commit 64f7cf6318ca9a4da766b02c45fc81aea7762f8e is memleaking; it is a temporary fix for now to prevent some failing tests, like `gtest-roofit-histfactory-test-testHistFactory`.; - Fixed with: https://github.com/root-project/root/pull/16314; - [x] This commit: https://github.com/root-project/root/pull/15696/commits/de5d1413e07170e396ac51d982c0844e4f548f4b is a temporarily fix reintroducing a memory leak. ; - Fixed with: https://github.com/root-project/root/pull/15696/commits/2c2d4dc2bf3ebe0f475b05a66a377c2467525d9d; - [x] This commit: d79963ecb74f957a332409ed91b106a0f53da10a fixes an issue with failing tests like `tutorial-hist-cumulative` when JITLink is turned on. This works for now, but will need to investigate further on why resource trackers were not destructed in the right order.; - Not a critical issue: Can also look into this later after the merge.; - [x] Discussion on a proper solution for the macOS modulemap issue; - Fixed with: https://github.com/root-project/root/pull/16315. ## Changes or fixes:. ## Checklist:; - [x] Fix mac13 build; - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15697:153,Performance,cache,cache,153,"It was tested that this works by building openssl on Arch Linux in a random directory and setting this as the `OPENSSL_ROOT_DIR`. Then, I checked in the cache for the xrootd builtin external project if openssl was found in the desired location:; ```; builtins/xrootd/BUILTIN_XROOTD-prefix/src/BUILTIN_XROOTD-build/CMakeCache.txt; ```. This was the case indeed. Closes #10075.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15697
https://github.com/root-project/root/pull/15697:7,Testability,test,tested,7,"It was tested that this works by building openssl on Arch Linux in a random directory and setting this as the `OPENSSL_ROOT_DIR`. Then, I checked in the cache for the xrootd builtin external project if openssl was found in the desired location:; ```; builtins/xrootd/BUILTIN_XROOTD-prefix/src/BUILTIN_XROOTD-build/CMakeCache.txt; ```. This was the case indeed. Closes #10075.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15697
https://github.com/root-project/root/pull/15699:464,Deployability,update,updated,464,"For deferred columns (i.e. columns created during late model extension) for subfields that have been created after one or more clusters have already been written, their (synthetic) column ranges were not properly initialized upon read back. This resulted in incorrect metadata and problems reading back the data in the subfields only (so not the complete field they are part of). This PR partly addresses #15661. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15699
https://github.com/root-project/root/pull/15699:434,Testability,test,tested,434,"For deferred columns (i.e. columns created during late model extension) for subfields that have been created after one or more clusters have already been written, their (synthetic) column ranges were not properly initialized upon read back. This resulted in incorrect metadata and problems reading back the data in the subfields only (so not the complete field they are part of). This PR partly addresses #15661. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15699
https://github.com/root-project/root/pull/15700:133,Deployability,update,updated,133,Explicitly specify that integers in the RNTuple anchor are encoded in big-endian. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15700
https://github.com/root-project/root/pull/15700:103,Testability,test,tested,103,Explicitly specify that integers in the RNTuple anchor are encoded in big-endian. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15700
https://github.com/root-project/root/issues/15701:1321,Deployability,Install,Installation,1321,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The legacy backend can be used with models with categorical parameters (minimization can proceed if it is held constant). ; The new cpu backend appears to not include the categorical param in its list of variables (from `getVariables()`) and also just crashes when you try to evaluate the function. ### Reproducer. ```; {; // create a one-channel on-bin model, with two samples in the channel, which are each scaled by a factor; // that depends on the state of a category; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/chan1""]->SetXaxis(1,0,1);; w[""simPdf/chan1/bkg1""]->SetBinContent(1,5);; w[""simPdf/chan1/bkg2""]->SetBinContent(1,10);; w[""simPdf/chan1/bkg1""]->Multiply(""fac1('myCat==0?1:0',myCat[a,b])"",""func"");; w[""simPdf/chan1/bkg2""]->Multiply(""fac2('myCat==0?0:1',myCat)"",""func"");; w[""simPdf/chan1""]->SetBinData(1,12);. w.pars()[""myCat""]->get<RooAbsArg>()->setAttribute(""Constant""); // how I would hold the param constant. auto nll = w[""simPdf""]->nll(""obsData"",{RooFit::EvalBackend(""cpu"")});; nll->getVariables()->Print(); // in cpu mode ""myCat"" doesn't appear here!!; nll->getVariables()->setCatLabel(""myCat"",""a"");. cout << nll->getVal() << endl; // this crashes for cpu mode. }; ```. ### ROOT version. 6.32 , master. ### Installation method. source. ### Operating system. all?. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15701
https://github.com/root-project/root/issues/15701:512,Integrability,depend,depends,512,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The legacy backend can be used with models with categorical parameters (minimization can proceed if it is held constant). ; The new cpu backend appears to not include the categorical param in its list of variables (from `getVariables()`) and also just crashes when you try to evaluate the function. ### Reproducer. ```; {; // create a one-channel on-bin model, with two samples in the channel, which are each scaled by a factor; // that depends on the state of a category; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/chan1""]->SetXaxis(1,0,1);; w[""simPdf/chan1/bkg1""]->SetBinContent(1,5);; w[""simPdf/chan1/bkg2""]->SetBinContent(1,10);; w[""simPdf/chan1/bkg1""]->Multiply(""fac1('myCat==0?1:0',myCat[a,b])"",""func"");; w[""simPdf/chan1/bkg2""]->Multiply(""fac2('myCat==0?0:1',myCat)"",""func"");; w[""simPdf/chan1""]->SetBinData(1,12);. w.pars()[""myCat""]->get<RooAbsArg>()->setAttribute(""Constant""); // how I would hold the param constant. auto nll = w[""simPdf""]->nll(""obsData"",{RooFit::EvalBackend(""cpu"")});; nll->getVariables()->Print(); // in cpu mode ""myCat"" doesn't appear here!!; nll->getVariables()->setCatLabel(""myCat"",""a"");. cout << nll->getVal() << endl; // this crashes for cpu mode. }; ```. ### ROOT version. 6.32 , master. ### Installation method. source. ### Operating system. all?. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15701
https://github.com/root-project/root/issues/15701:279,Modifiability,variab,variables,279,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The legacy backend can be used with models with categorical parameters (minimization can proceed if it is held constant). ; The new cpu backend appears to not include the categorical param in its list of variables (from `getVariables()`) and also just crashes when you try to evaluate the function. ### Reproducer. ```; {; // create a one-channel on-bin model, with two samples in the channel, which are each scaled by a factor; // that depends on the state of a category; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/chan1""]->SetXaxis(1,0,1);; w[""simPdf/chan1/bkg1""]->SetBinContent(1,5);; w[""simPdf/chan1/bkg2""]->SetBinContent(1,10);; w[""simPdf/chan1/bkg1""]->Multiply(""fac1('myCat==0?1:0',myCat[a,b])"",""func"");; w[""simPdf/chan1/bkg2""]->Multiply(""fac2('myCat==0?0:1',myCat)"",""func"");; w[""simPdf/chan1""]->SetBinData(1,12);. w.pars()[""myCat""]->get<RooAbsArg>()->setAttribute(""Constant""); // how I would hold the param constant. auto nll = w[""simPdf""]->nll(""obsData"",{RooFit::EvalBackend(""cpu"")});; nll->getVariables()->Print(); // in cpu mode ""myCat"" doesn't appear here!!; nll->getVariables()->setCatLabel(""myCat"",""a"");. cout << nll->getVal() << endl; // this crashes for cpu mode. }; ```. ### ROOT version. 6.32 , master. ### Installation method. source. ### Operating system. all?. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15701
https://github.com/root-project/root/pull/15702:142,Testability,log,logic,142,"This little bug was already introduced a few years ago in 1ecd30e, and became apparent now that the vectorized evaluation is the default. The logic should be to clip all values to be >= 0. Closes #15694.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15702
https://github.com/root-project/root/issues/15703:744,Deployability,Install,Installation,744,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. It looks like we're leaking memory dynamically allocated through `std::string`, e.g., `std::string::reserve` and/or `std::string::append` etc. It seems to be reproducible via vanilla `cppyy` as shown below. Can someone take a look, please? Many thanks. cc: @scott-snyder . ### Reproducer. ```; import cppyy. cppyy.cppdef(""""""; #include <string>; class foo {; public:; const std::string leak (std::size_t size) const {; std::string result;; result.reserve(size);; return result;; }; };; """"""). obj = cppyy.gbl.foo(); for i in range(1000000):; s = obj.leak(2048); ```. ### ROOT version. Tested in both tags/v6-28-12@v6-28-12 and heads/master@v6-31-01-2207-gbeb5aead7a. ### Installation method. LCG_104d_ATLAS_15 and LCG dev3 nightly. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:837,Deployability,release,release,837,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. It looks like we're leaking memory dynamically allocated through `std::string`, e.g., `std::string::reserve` and/or `std::string::append` etc. It seems to be reproducible via vanilla `cppyy` as shown below. Can someone take a look, please? Many thanks. cc: @scott-snyder . ### Reproducer. ```; import cppyy. cppyy.cppdef(""""""; #include <string>; class foo {; public:; const std::string leak (std::size_t size) const {; std::string result;; result.reserve(size);; return result;; }; };; """"""). obj = cppyy.gbl.foo(); for i in range(1000000):; s = obj.leak(2048); ```. ### ROOT version. Tested in both tags/v6-28-12@v6-28-12 and heads/master@v6-31-01-2207-gbeb5aead7a. ### Installation method. LCG_104d_ATLAS_15 and LCG dev3 nightly. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:122,Energy Efficiency,allocate,allocated,122,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. It looks like we're leaking memory dynamically allocated through `std::string`, e.g., `std::string::reserve` and/or `std::string::append` etc. It seems to be reproducible via vanilla `cppyy` as shown below. Can someone take a look, please? Many thanks. cc: @scott-snyder . ### Reproducer. ```; import cppyy. cppyy.cppdef(""""""; #include <string>; class foo {; public:; const std::string leak (std::size_t size) const {; std::string result;; result.reserve(size);; return result;; }; };; """"""). obj = cppyy.gbl.foo(); for i in range(1000000):; s = obj.leak(2048); ```. ### ROOT version. Tested in both tags/v6-28-12@v6-28-12 and heads/master@v6-31-01-2207-gbeb5aead7a. ### Installation method. LCG_104d_ATLAS_15 and LCG dev3 nightly. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:658,Testability,Test,Tested,658,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. It looks like we're leaking memory dynamically allocated through `std::string`, e.g., `std::string::reserve` and/or `std::string::append` etc. It seems to be reproducible via vanilla `cppyy` as shown below. Can someone take a look, please? Many thanks. cc: @scott-snyder . ### Reproducer. ```; import cppyy. cppyy.cppdef(""""""; #include <string>; class foo {; public:; const std::string leak (std::size_t size) const {; std::string result;; result.reserve(size);; return result;; }; };; """"""). obj = cppyy.gbl.foo(); for i in range(1000000):; s = obj.leak(2048); ```. ### ROOT version. Tested in both tags/v6-28-12@v6-28-12 and heads/master@v6-31-01-2207-gbeb5aead7a. ### Installation method. LCG_104d_ATLAS_15 and LCG dev3 nightly. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/pull/15704:34,Testability,test,testing,34,This is solely for the purpose of testing https://github.com/root-project/roottest/pull/1030,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15704
https://github.com/root-project/root/pull/15705:68,Availability,error,error,68,This PR:; * Removes CINT from function name; * Minor improvement in error ellipsoid example,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15705
https://github.com/root-project/root/pull/15707:101,Availability,ping,pinging,101,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14561. pinging @eoffermann. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15707
https://github.com/root-project/root/pull/15707:173,Deployability,update,updated,173,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14561. pinging @eoffermann. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15707
https://github.com/root-project/root/pull/15707:143,Testability,test,tested,143,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14561. pinging @eoffermann. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15707
https://github.com/root-project/root/pull/15714:557,Deployability,update,updated,557,"The enums inside `RCompressionSetting` are now enum classes rather than struct-wrapped enums. This means that converting between them and `int` requires an explicit cast. ## Remarks; While for old code I believe it's best to leave everything as-is (casts aside), it would be nice to review the root 7 code to assess where and why we still use `int` as the type for compression and see case-by-case if it would be best replaced by the strong enum type.; Of course this would be in one or more separate PRs. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR partially addresses #8444",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15714
https://github.com/root-project/root/pull/15714:79,Integrability,wrap,wrapped,79,"The enums inside `RCompressionSetting` are now enum classes rather than struct-wrapped enums. This means that converting between them and `int` requires an explicit cast. ## Remarks; While for old code I believe it's best to leave everything as-is (casts aside), it would be nice to review the root 7 code to assess where and why we still use `int` as the type for compression and see case-by-case if it would be best replaced by the strong enum type.; Of course this would be in one or more separate PRs. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR partially addresses #8444",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15714
https://github.com/root-project/root/pull/15714:527,Testability,test,tested,527,"The enums inside `RCompressionSetting` are now enum classes rather than struct-wrapped enums. This means that converting between them and `int` requires an explicit cast. ## Remarks; While for old code I believe it's best to leave everything as-is (casts aside), it would be nice to review the root 7 code to assess where and why we still use `int` as the type for compression and see case-by-case if it would be best replaced by the strong enum type.; Of course this would be in one or more separate PRs. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR partially addresses #8444",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15714
https://github.com/root-project/root/pull/15716:187,Deployability,update,updated,187,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/7236. This bug has been there since >24y. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15716
https://github.com/root-project/root/pull/15716:157,Testability,test,tested,157,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/7236. This bug has been there since >24y. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15716
https://github.com/root-project/root/pull/15718:204,Deployability,Update,Update,204,Title object always created - even when empty.; But if drawn - it must be hidden to remove TPave decoration. Fix problem with TFrame when `THStack` and `TMultiGraph` are drawn - frame object is required. Update JSROOT with recent changes in master,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15718
https://github.com/root-project/root/pull/15722:58,Testability,test,test,58,@pcanal IIRC you suggest a while ago that we should add a test for this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15722
https://github.com/root-project/root/issues/15723:641,Deployability,Install,Installation,641,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. When using root under Ubuntu 24_04 and the wayland graphics then graphical output is not possible. Only after xhost + a command like root -a is working properly.; It looks as if in the snap.yaml in the plug section wayland is missing. ### Reproducer. start a session under Ubuntu using Wayland, not X11.; root -a will not show the splash screen; workaround: issue xhost +. ### ROOT version. snap-id: XSlaE4S2cu0h5r6o7dFaFiQIsugKLFpa; tracking: latest/stable; refresh-date: vor 8 Tagen, um 12:59 CEST; channels:; latest/stable: v6-30-04 2024-02-03 (931) 1GB -; . ### Installation method. snap. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15727:86,Deployability,integrat,integrating,86,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:1027,Deployability,configurat,configuration,1027,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:1275,Deployability,Install,Installation,1275,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:86,Integrability,integrat,integrating,86,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:140,Integrability,depend,dependency,140,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:760,Integrability,depend,dependency,760,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:831,Integrability,depend,dependency,831,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:804,Modifiability,CONFIG,CONFIG,804,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:902,Modifiability,config,configure,902,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:965,Modifiability,config,configures,965,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:1027,Modifiability,config,configuration,1027,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:1145,Testability,log,logs,1145,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/pull/15728:64,Availability,error,error,64,This PR:. Removes CINT from function name; Minor improvement in error ellipsoid example,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15728
https://github.com/root-project/root/pull/15729:15,Deployability,update,update,15,"Unsplit fields update the extra type info block in the RNTuple meta-data, which needs to be explicitly merged. Also, the unsplit field revealed a lifetime issue with the output model, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15729
https://github.com/root-project/root/issues/15730:2532,Deployability,Install,Installation,2532,"e (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = ROOT::Math::KahanSum<double>; _Alloc = std::allocator<ROOT::Math::KahanSum<double> >; reference = ROOT::Math::KahanSum<double>&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; ```; The test hangs at this point, and is eventually killed by the timeout limit. ### Reproducer. Compile ROOT with `-Wp,-D_GLIBCXX_ASSERTIONS` in CXXFLAGS. This is part of the default flags for Fedora package builds. ### ROOT version. 6.32.00. ### Installation method. Package build on Fedora from source. ### Operating system. Fedora Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/issues/15730:2350,Safety,timeout,timeout,2350,"e (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = ROOT::Math::KahanSum<double>; _Alloc = std::allocator<ROOT::Math::KahanSum<double> >; reference = ROOT::Math::KahanSum<double>&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; ```; The test hangs at this point, and is eventually killed by the timeout limit. ### Reproducer. Compile ROOT with `-Wp,-D_GLIBCXX_ASSERTIONS` in CXXFLAGS. This is part of the default flags for Fedora package builds. ### ROOT version. 6.32.00. ### Installation method. Package build on Fedora from source. ### Operating system. Fedora Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/issues/15730:87,Testability,test,test,87,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Running the test suite for ROOT 6.32.00 fais in gtest-roofit-roofitcore-test-testLikelihoodJob:; ```; [==========] Running 45 tests from 4 test suites.; [----------] Global test environment set-up.; [----------] 9 tests from LikelihoodJobTest; [ RUN ] LikelihoodJobTest.UnbinnedGaussian1D; [ OK ] LikelihoodJobTest.UnbinnedGaussian1D (368 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues (233 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DTwice; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DTwice (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/issues/15730:147,Testability,test,test-testLikelihoodJob,147,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Running the test suite for ROOT 6.32.00 fais in gtest-roofit-roofitcore-test-testLikelihoodJob:; ```; [==========] Running 45 tests from 4 test suites.; [----------] Global test environment set-up.; [----------] 9 tests from LikelihoodJobTest; [ RUN ] LikelihoodJobTest.UnbinnedGaussian1D; [ OK ] LikelihoodJobTest.UnbinnedGaussian1D (368 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues (233 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DTwice; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DTwice (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/issues/15730:201,Testability,test,tests,201,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Running the test suite for ROOT 6.32.00 fais in gtest-roofit-roofitcore-test-testLikelihoodJob:; ```; [==========] Running 45 tests from 4 test suites.; [----------] Global test environment set-up.; [----------] 9 tests from LikelihoodJobTest; [ RUN ] LikelihoodJobTest.UnbinnedGaussian1D; [ OK ] LikelihoodJobTest.UnbinnedGaussian1D (368 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues (233 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DTwice; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DTwice (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/issues/15730:214,Testability,test,test,214,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Running the test suite for ROOT 6.32.00 fais in gtest-roofit-roofitcore-test-testLikelihoodJob:; ```; [==========] Running 45 tests from 4 test suites.; [----------] Global test environment set-up.; [----------] 9 tests from LikelihoodJobTest; [ RUN ] LikelihoodJobTest.UnbinnedGaussian1D; [ OK ] LikelihoodJobTest.UnbinnedGaussian1D (368 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues (233 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DTwice; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DTwice (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/issues/15730:248,Testability,test,test,248,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Running the test suite for ROOT 6.32.00 fais in gtest-roofit-roofitcore-test-testLikelihoodJob:; ```; [==========] Running 45 tests from 4 test suites.; [----------] Global test environment set-up.; [----------] 9 tests from LikelihoodJobTest; [ RUN ] LikelihoodJobTest.UnbinnedGaussian1D; [ OK ] LikelihoodJobTest.UnbinnedGaussian1D (368 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues (233 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DTwice; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DTwice (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/issues/15730:289,Testability,test,tests,289,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Running the test suite for ROOT 6.32.00 fais in gtest-roofit-roofitcore-test-testLikelihoodJob:; ```; [==========] Running 45 tests from 4 test suites.; [----------] Global test environment set-up.; [----------] 9 tests from LikelihoodJobTest; [ RUN ] LikelihoodJobTest.UnbinnedGaussian1D; [ OK ] LikelihoodJobTest.UnbinnedGaussian1D (368 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues (233 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DTwice; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DTwice (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/issues/15730:1278,Testability,test,tests,1278," ] LikelihoodJobTest.UnbinnedGaussian1D; [ OK ] LikelihoodJobTest.UnbinnedGaussian1D (368 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues (233 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DTwice; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DTwice (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = ROOT::Math::KahanSum<double>; _Alloc = std::allocator<ROOT::Math::KahanSum<double> >; reference = ROOT::Math::KahanSum<double>&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; ```; The test hangs at this point, and is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/issues/15730:1339,Testability,test,tests,1339," ] LikelihoodJobTest.UnbinnedGaussian1D; [ OK ] LikelihoodJobTest.UnbinnedGaussian1D (368 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DSelectedParameterValues (233 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussian1DTwice; [ OK ] LikelihoodJobTest.UnbinnedGaussian1DTwice (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = ROOT::Math::KahanSum<double>; _Alloc = std::allocator<ROOT::Math::KahanSum<double> >; reference = ROOT::Math::KahanSum<double>&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; ```; The test hangs at this point, and is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/issues/15730:1617,Testability,test,tests,1617,"e (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = ROOT::Math::KahanSum<double>; _Alloc = std::allocator<ROOT::Math::KahanSum<double> >; reference = ROOT::Math::KahanSum<double>&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; ```; The test hangs at this point, and is eventually killed by the timeout limit. ### Reproducer. Compile ROOT with `-Wp,-D_GLIBCXX_ASSERTIONS` in CXXFLAGS. This is part of the default flags for Fedora package builds. ### ROOT version. 6.32.00. ### Installation method. Package build on Fedora from source. ### Operating system. Fedora Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/issues/15730:1690,Testability,test,tests,1690,"e (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = ROOT::Math::KahanSum<double>; _Alloc = std::allocator<ROOT::Math::KahanSum<double> >; reference = ROOT::Math::KahanSum<double>&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; ```; The test hangs at this point, and is eventually killed by the timeout limit. ### Reproducer. Compile ROOT with `-Wp,-D_GLIBCXX_ASSERTIONS` in CXXFLAGS. This is part of the default flags for Fedora package builds. ### ROOT version. 6.32.00. ### Installation method. Package build on Fedora from source. ### Operating system. Fedora Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/issues/15730:2243,Testability,Assert,Assertion,2243,"e (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = ROOT::Math::KahanSum<double>; _Alloc = std::allocator<ROOT::Math::KahanSum<double> >; reference = ROOT::Math::KahanSum<double>&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; ```; The test hangs at this point, and is eventually killed by the timeout limit. ### Reproducer. Compile ROOT with `-Wp,-D_GLIBCXX_ASSERTIONS` in CXXFLAGS. This is part of the default flags for Fedora package builds. ### ROOT version. 6.32.00. ### Installation method. Package build on Fedora from source. ### Operating system. Fedora Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/issues/15730:2292,Testability,test,test,2292,"e (219 ms); [ RUN ] LikelihoodJobTest.UnbinnedGaussianND; [ OK ] LikelihoodJobTest.UnbinnedGaussianND (331 ms); [ RUN ] LikelihoodJobTest.SimBinned; [ OK ] LikelihoodJobTest.SimBinned (323 ms); [ RUN ] LikelihoodJobTest.BinnedConstrained; [ OK ] LikelihoodJobTest.BinnedConstrained (311 ms); [ RUN ] LikelihoodJobTest.SimUnbinned; [ OK ] LikelihoodJobTest.SimUnbinned (281 ms); [ RUN ] LikelihoodJobTest.SimUnbinnedNonExtended; [ OK ] LikelihoodJobTest.SimUnbinnedNonExtended (264 ms); [ RUN ] LikelihoodJobTest.BatchedUnbinnedGaussianND; [ OK ] LikelihoodJobTest.BatchedUnbinnedGaussianND (362 ms); [----------] 9 tests from LikelihoodJobTest (2698 ms total); [----------] 2 tests from LikelihoodJobBinnedDatasetTest; [ RUN ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf; [ OK ] LikelihoodJobBinnedDatasetTest.UnbinnedPdf (152 ms); [ RUN ] LikelihoodJobBinnedDatasetTest.BinnedNLL; [ OK ] LikelihoodJobBinnedDatasetTest.BinnedNLL (325 ms); [----------] 2 tests from LikelihoodJobBinnedDatasetTest (480 ms total); [----------] 2 tests from LikelihoodJobSimBinnedConstrainedTest; [ RUN ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters; [ OK ] LikelihoodJobSimBinnedConstrainedTest.BasicParameters (452 ms); [ RUN ] LikelihoodJobSimBinnedConstrainedTest.ConstrainedAndOffset; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = ROOT::Math::KahanSum<double>; _Alloc = std::allocator<ROOT::Math::KahanSum<double> >; reference = ROOT::Math::KahanSum<double>&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; ```; The test hangs at this point, and is eventually killed by the timeout limit. ### Reproducer. Compile ROOT with `-Wp,-D_GLIBCXX_ASSERTIONS` in CXXFLAGS. This is part of the default flags for Fedora package builds. ### ROOT version. 6.32.00. ### Installation method. Package build on Fedora from source. ### Operating system. Fedora Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15730
https://github.com/root-project/root/pull/15732:162,Deployability,update,updated,162,# This Pull request:. ## Changes or fixes:. Fixes compiler warnings from format strings (size_t not using %z). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15732
https://github.com/root-project/root/pull/15732:132,Testability,test,tested,132,# This Pull request:. ## Changes or fixes:. Fixes compiler warnings from format strings (size_t not using %z). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15732
https://github.com/root-project/root/pull/15733:30,Availability,error,errors,30,"Harmless change to circumvent errors like these when building RooFit standalone:. ```; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 1 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooPolynomial!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:87,Availability,Error,Error,87,"Harmless change to circumvent errors like these when building RooFit standalone:. ```; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 1 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooPolynomial!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:230,Availability,Error,Error,230,"Harmless change to circumvent errors like these when building RooFit standalone:. ```; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 1 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooPolynomial!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:372,Availability,Error,Error,372,"Harmless change to circumvent errors like these when building RooFit standalone:. ```; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 1 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooPolynomial!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:515,Availability,Error,Error,515,"Harmless change to circumvent errors like these when building RooFit standalone:. ```; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 1 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooPolynomial!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:657,Availability,Error,Error,657,"Harmless change to circumvent errors like these when building RooFit standalone:. ```; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 1 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooPolynomial!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:800,Availability,Error,Error,800,"Harmless change to circumvent errors like these when building RooFit standalone:. ```; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 1 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooPolynomial!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15734:745,Availability,Failure,Failure,745,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:1336,Availability,down,down,1336,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:1642,Deployability,update,updated,1642,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:58,Testability,Test,Test,58,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:85,Testability,test,test-,85,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:268,Testability,Test,Test,268,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:499,Testability,test,tests,499,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:512,Testability,test,test,512,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:545,Testability,test,test,545,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:586,Testability,test,tests,586,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:713,Testability,test,test,713,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:1251,Testability,test,tests,1251,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:1314,Testability,test,test,1314,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:1357,Testability,test,tests,1357,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:1370,Testability,test,test,1370,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:1417,Testability,test,tests,1417,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:1438,Testability,test,test,1438,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:1508,Testability,TEST,TEST,1508,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15734:1612,Testability,test,tested,1612,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15734
https://github.com/root-project/root/pull/15735:161,Deployability,update,updated,161,# This Pull request:. ## Changes or fixes:. This PR adjusts some limits in the stressGraphics reference file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:131,Testability,test,tested,131,# This Pull request:. ## Changes or fixes:. This PR adjusts some limits in the stressGraphics reference file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/issues/15736:697,Deployability,Install,Installation,697,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. While running a dataframe tutorial with the current master branch: df106_HiggsToFourLeptons, the number of files is now shown as 0 instead of 9 as expected. The issue arrises from this line: https://github.com/root-project/root/blob/00693233c08b5c63f684717a15115b96d5e60417/tree/dataframe/src/RInterfaceBase.cxx#L32 inside the GetNFiles function that is used by the ProgressBar. It was introduced with this commit: https://github.com/root-project/root/pull/15653/commits/bd5096500cda5cb98c8d87c17d3aef25424407ab# . ### Reproducer. root tutorials/dataframe/df106_HiggsToFourLeptons.C. ### ROOT version. current master. ### Installation method. na. ### Operating system. na. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15736
https://github.com/root-project/root/issues/15738:137,Availability,fault,fault,137,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The build of ROOT 6.32.00 on ix86 crashes with a segmentation fault during the generation of the tutorials/hsimple.root file:. ```; ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0xf7f03589 in __kernel_vsyscall (); #1 0xf76ada87 in wait4 () from /lib/libc.so.6; #2 0xf76adc06 in waitpid () from /lib/libc.so.6; #3 0xf76061d8 in do_system () from /lib/libc.so.6; #4 0xf7d17a81 in TUnixSystem::Exec (this=0x57816fd0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #6 0xf7d12654 in TUnixSystem::DispatchSignals (this=0x57816fd0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3662; #7 0xf7d126d8 in SigHandler (sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:410; #8 0xf7d02a21 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #9 <signal handler called>; #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61; #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071; #12 0xf7c419b2 in TArrayI::Streamer (this=0x58ac6028, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/cont/src/TArrayI.cxx:157; #13 0xf7d7f75c in ROOT::streamer_TArrayI (buf=..., obj=0x58ac6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:7614,Availability,echo,echo,7614,"dir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0xe4ba401e in ?? (); #41 0xf11db85c in cling::IncrementalExecutor::executeWrapper () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:217; #42 0xf1160628 in cling::Interpreter::RunFunction () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1180; #43 0xf11639fe in cling::Interpreter::EvaluateInternal () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1432; #44 0xf116431c in cling::Interpreter::echo () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1082; #45 0xf1246c9d in operator() () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:141; #46 cling::MetaSema::actOnxCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #47 0xf1258358 in cling::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:8868,Availability,error,error,8868,"aProcessor/MetaSema.cpp:141; #46 cling::MetaSema::actOnxCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #47 0xf1258358 in cling::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:9162,Availability,error,error,9162,":321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:9340,Availability,error,error,9340,"rser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see quest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:9570,Availability,error,error,9570,"line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:9816,Availability,error,error,9816," out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:17114,Availability,echo,echo,17114,"dir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0xe4ba401e in ?? (); #41 0xf11db85c in cling::IncrementalExecutor::executeWrapper () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:217; #42 0xf1160628 in cling::Interpreter::RunFunction () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1180; #43 0xf11639fe in cling::Interpreter::EvaluateInternal () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1432; #44 0xf116431c in cling::Interpreter::echo () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1082; #45 0xf1246c9d in operator() () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:141; #46 cling::MetaSema::actOnxCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #47 0xf1258358 in cling::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:18527,Availability,Error,Error,18527,"ng::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; ===========================================================; gmake[2]: Leaving directory '/builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build'; gmake[2]: *** [CMakeFiles/hsimple.dir/build.make:82: tutorials/hsimple.root] Error 129; gmake[2]: *** Deleting file 'tutorials/hsimple.root'; gmake[1]: *** [CMakeFiles/Makefile2:11941: CMakeFiles/hsimple.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ```. Looking att the code here:. https://github.com/root-project/root/blob/00693233c08b5c63f684717a15115b96d5e60417/io/io/src/TBufferFile.cxx#L40-L47. The `USE_BSWAPCPY` is only used if `defined(__i386__)`, i.e. on 32 bit intel only. The asm code in the `Bswapcpy.h` header seems to be intented to work for both ix86 and x86_64 though. So I don't know why it is only used for ix86 here. I have worked around this by replacing linr 40-41 with `#if 0`, i.e. not using the asm code on ix86 either, which gets rid of the crash. I didn't mak a PR of this change because I don't know if this is the preferred way to fix it. ### Reproducer. Build ROOT 6.32.00 on ix86. ### ROOT version. 6.32.00. ### Installation method. Package build on Fedora ix86 from source. ### Operating system. Fedora Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:18663,Availability,Error,Error,18663,"ng::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; ===========================================================; gmake[2]: Leaving directory '/builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build'; gmake[2]: *** [CMakeFiles/hsimple.dir/build.make:82: tutorials/hsimple.root] Error 129; gmake[2]: *** Deleting file 'tutorials/hsimple.root'; gmake[1]: *** [CMakeFiles/Makefile2:11941: CMakeFiles/hsimple.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ```. Looking att the code here:. https://github.com/root-project/root/blob/00693233c08b5c63f684717a15115b96d5e60417/io/io/src/TBufferFile.cxx#L40-L47. The `USE_BSWAPCPY` is only used if `defined(__i386__)`, i.e. on 32 bit intel only. The asm code in the `Bswapcpy.h` header seems to be intented to work for both ix86 and x86_64 though. So I don't know why it is only used for ix86 here. I have worked around this by replacing linr 40-41 with `#if 0`, i.e. not using the asm code on ix86 either, which gets rid of the crash. I didn't mak a PR of this change because I don't know if this is the preferred way to fix it. ### Reproducer. Build ROOT 6.32.00 on ix86. ### ROOT version. 6.32.00. ### Installation method. Package build on Fedora ix86 from source. ### Operating system. Fedora Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:19412,Deployability,Install,Installation,19412,"ng::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; ===========================================================; gmake[2]: Leaving directory '/builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build'; gmake[2]: *** [CMakeFiles/hsimple.dir/build.make:82: tutorials/hsimple.root] Error 129; gmake[2]: *** Deleting file 'tutorials/hsimple.root'; gmake[1]: *** [CMakeFiles/Makefile2:11941: CMakeFiles/hsimple.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ```. Looking att the code here:. https://github.com/root-project/root/blob/00693233c08b5c63f684717a15115b96d5e60417/io/io/src/TBufferFile.cxx#L40-L47. The `USE_BSWAPCPY` is only used if `defined(__i386__)`, i.e. on 32 bit intel only. The asm code in the `Bswapcpy.h` header seems to be intented to work for both ix86 and x86_64 though. So I don't know why it is only used for ix86 here. I have worked around this by replacing linr 40-41 with `#if 0`, i.e. not using the asm code on ix86 either, which gets rid of the crash. I didn't mak a PR of this change because I don't know if this is the preferred way to fix it. ### Reproducer. Build ROOT 6.32.00 on ix86. ### ROOT version. 6.32.00. ### Installation method. Package build on Fedora ix86 from source. ### Operating system. Fedora Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:3049,Modifiability,config,config,3049,"dhat-linux-build/core/G__Core.cxx:23134; #14 0xf6fa16a0 in TClass::Streamer (this=0x590e5010, obj=0x58ac6028, b=..., onfile_class=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/inc/TClass.h:614; #15 TBufferFile::WriteFastArray (streamer=0x0, this=0x58d8e800, start=0x58ac6028, cl=0x590e5010, n=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2354; #16 TBufferFile::WriteFastArray (this=0x58d8e800, start=0x58ac6028, cl=0x590e5010, n=1, streamer=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2336; #17 0xf722eaf7 in TStreamerInfo::WriteBufferAux<char**> (this=0x592155f0, b=..., arr=; 0xffefcb48: 0xffefcb44, compinfo=0x594d315c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:633; #18 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x594d3150) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #19 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x58dbeab4, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #20 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:4675,Modifiability,config,config,4675,"t-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""\260\360"", <incomplete sequence \344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x59354f60) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #27 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x594d4bc0, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:10469,Modifiability,variab,variable,10469,"D/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61; #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071; #12 0xf7c419b2 in TArrayI::Streamer (this=0x58ac6028, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:12552,Modifiability,config,config,12552,"dhat-linux-build/core/G__Core.cxx:23134; #14 0xf6fa16a0 in TClass::Streamer (this=0x590e5010, obj=0x58ac6028, b=..., onfile_class=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/inc/TClass.h:614; #15 TBufferFile::WriteFastArray (streamer=0x0, this=0x58d8e800, start=0x58ac6028, cl=0x590e5010, n=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2354; #16 TBufferFile::WriteFastArray (this=0x58d8e800, start=0x58ac6028, cl=0x590e5010, n=1, streamer=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2336; #17 0xf722eaf7 in TStreamerInfo::WriteBufferAux<char**> (this=0x592155f0, b=..., arr=; 0xffefcb48: 0xffefcb44, compinfo=0x594d315c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:633; #18 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x594d3150) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #19 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x58dbeab4, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #20 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:14175,Modifiability,config,config,14175,"root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""260360"", <incomplete sequence 344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x59354f60) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #27 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x594d4bc0, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:674,Performance,optimiz,optimized,674,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The build of ROOT 6.32.00 on ix86 crashes with a segmentation fault during the generation of the tutorials/hsimple.root file:. ```; ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0xf7f03589 in __kernel_vsyscall (); #1 0xf76ada87 in wait4 () from /lib/libc.so.6; #2 0xf76adc06 in waitpid () from /lib/libc.so.6; #3 0xf76061d8 in do_system () from /lib/libc.so.6; #4 0xf7d17a81 in TUnixSystem::Exec (this=0x57816fd0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #6 0xf7d12654 in TUnixSystem::DispatchSignals (this=0x57816fd0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3662; #7 0xf7d126d8 in SigHandler (sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:410; #8 0xf7d02a21 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #9 <signal handler called>; #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61; #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071; #12 0xf7c419b2 in TArrayI::Streamer (this=0x58ac6028, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/cont/src/TArrayI.cxx:157; #13 0xf7d7f75c in ROOT::streamer_TArrayI (buf=..., obj=0x58ac6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:817,Performance,optimiz,optimized,817,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The build of ROOT 6.32.00 on ix86 crashes with a segmentation fault during the generation of the tutorials/hsimple.root file:. ```; ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0xf7f03589 in __kernel_vsyscall (); #1 0xf76ada87 in wait4 () from /lib/libc.so.6; #2 0xf76adc06 in waitpid () from /lib/libc.so.6; #3 0xf76061d8 in do_system () from /lib/libc.so.6; #4 0xf7d17a81 in TUnixSystem::Exec (this=0x57816fd0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #6 0xf7d12654 in TUnixSystem::DispatchSignals (this=0x57816fd0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3662; #7 0xf7d126d8 in SigHandler (sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:410; #8 0xf7d02a21 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #9 <signal handler called>; #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61; #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071; #12 0xf7c419b2 in TArrayI::Streamer (this=0x58ac6028, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/cont/src/TArrayI.cxx:157; #13 0xf7d7f75c in ROOT::streamer_TArrayI (buf=..., obj=0x58ac6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:2806,Performance,optimiz,optimized,2806,"eamer (this=0x58ac6028, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/cont/src/TArrayI.cxx:157; #13 0xf7d7f75c in ROOT::streamer_TArrayI (buf=..., obj=0x58ac6028) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/core/G__Core.cxx:23134; #14 0xf6fa16a0 in TClass::Streamer (this=0x590e5010, obj=0x58ac6028, b=..., onfile_class=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/inc/TClass.h:614; #15 TBufferFile::WriteFastArray (streamer=0x0, this=0x58d8e800, start=0x58ac6028, cl=0x590e5010, n=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2354; #16 TBufferFile::WriteFastArray (this=0x58d8e800, start=0x58ac6028, cl=0x590e5010, n=1, streamer=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2336; #17 0xf722eaf7 in TStreamerInfo::WriteBufferAux<char**> (this=0x592155f0, b=..., arr=; 0xffefcb48: 0xffefcb44, compinfo=0x594d315c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:633; #18 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x594d3150) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #19 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x58dbeab4, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #20 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:3602,Performance,optimiz,optimized,3602,"build/root-6.32.00/io/io/src/TBufferFile.cxx:2336; #17 0xf722eaf7 in TStreamerInfo::WriteBufferAux<char**> (this=0x592155f0, b=..., arr=; 0xffefcb48: 0xffefcb44, compinfo=0x594d315c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:633; #18 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x594d3150) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #19 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x58dbeab4, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #20 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""\260\360"", <incomplete sequence \344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:3622,Performance,optimiz,optimized,3622,"build/root-6.32.00/io/io/src/TBufferFile.cxx:2336; #17 0xf722eaf7 in TStreamerInfo::WriteBufferAux<char**> (this=0x592155f0, b=..., arr=; 0xffefcb48: 0xffefcb44, compinfo=0x594d315c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:633; #18 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x594d3150) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #19 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x58dbeab4, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #20 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""\260\360"", <incomplete sequence \344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:3647,Performance,optimiz,optimized,3647,"build/root-6.32.00/io/io/src/TBufferFile.cxx:2336; #17 0xf722eaf7 in TStreamerInfo::WriteBufferAux<char**> (this=0x592155f0, b=..., arr=; 0xffefcb48: 0xffefcb44, compinfo=0x594d315c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:633; #18 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x594d3150) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #19 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x58dbeab4, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #20 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""\260\360"", <incomplete sequence \344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:4432,Performance,optimiz,optimized,4432,"0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""\260\360"", <incomplete sequence \344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x59354f60) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #27 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x594d4bc0, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:5228,Performance,optimiz,optimized,5228,"ot-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x59354f60) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #27 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x594d4bc0, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:5248,Performance,optimiz,optimized,5248,"ot-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x59354f60) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #27 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x594d4bc0, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:5273,Performance,optimiz,optimized,5273,"ot-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x59354f60) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #27 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x594d4bc0, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:5998,Performance,optimiz,optimized,5998,"(this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TObject.cxx:869; #35 0xe4203329 in TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9737; #36 TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:6019,Performance,optimiz,optimized,6019,"(this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TObject.cxx:869; #35 0xe4203329 in TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9737; #36 TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:6041,Performance,optimiz,optimized,6041,"(this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TObject.cxx:869; #35 0xe4203329 in TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9737; #36 TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:6065,Performance,optimiz,optimized,6065,"(this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TObject.cxx:869; #35 0xe4203329 in TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9737; #36 TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:6090,Performance,optimiz,optimized,6090,"(this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TObject.cxx:869; #35 0xe4203329 in TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9737; #36 TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:8605,Performance,optimiz,optimized,8605," () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1082; #45 0xf1246c9d in operator() () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:141; #46 cling::MetaSema::actOnxCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #47 0xf1258358 in cling::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:8830,Performance,optimiz,optimized,8830,"aProcessor/MetaSema.cpp:141; #46 cling::MetaSema::actOnxCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #47 0xf1258358 in cling::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:8852,Performance,optimiz,optimized,8852,"aProcessor/MetaSema.cpp:141; #46 cling::MetaSema::actOnxCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #47 0xf1258358 in cling::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:8875,Performance,optimiz,optimized,8875,"aProcessor/MetaSema.cpp:141; #46 cling::MetaSema::actOnxCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #47 0xf1258358 in cling::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:9324,Performance,optimiz,optimized,9324,"rser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see quest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:9347,Performance,optimiz,optimized,9347,"rser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see quest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:9369,Performance,optimiz,optimized,9369,"rser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see quest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:10096,Performance,optimiz,optimized,10096,"t-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:12309,Performance,optimiz,optimized,12309,"eamer (this=0x58ac6028, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/cont/src/TArrayI.cxx:157; #13 0xf7d7f75c in ROOT::streamer_TArrayI (buf=..., obj=0x58ac6028) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/core/G__Core.cxx:23134; #14 0xf6fa16a0 in TClass::Streamer (this=0x590e5010, obj=0x58ac6028, b=..., onfile_class=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/inc/TClass.h:614; #15 TBufferFile::WriteFastArray (streamer=0x0, this=0x58d8e800, start=0x58ac6028, cl=0x590e5010, n=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2354; #16 TBufferFile::WriteFastArray (this=0x58d8e800, start=0x58ac6028, cl=0x590e5010, n=1, streamer=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2336; #17 0xf722eaf7 in TStreamerInfo::WriteBufferAux<char**> (this=0x592155f0, b=..., arr=; 0xffefcb48: 0xffefcb44, compinfo=0x594d315c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:633; #18 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x594d3150) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #19 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x58dbeab4, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #20 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:13105,Performance,optimiz,optimized,13105,"build/root-6.32.00/io/io/src/TBufferFile.cxx:2336; #17 0xf722eaf7 in TStreamerInfo::WriteBufferAux<char**> (this=0x592155f0, b=..., arr=; 0xffefcb48: 0xffefcb44, compinfo=0x594d315c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:633; #18 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x594d3150) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #19 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x58dbeab4, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #20 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""260360"", <incomplete sequence 344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:13125,Performance,optimiz,optimized,13125,"build/root-6.32.00/io/io/src/TBufferFile.cxx:2336; #17 0xf722eaf7 in TStreamerInfo::WriteBufferAux<char**> (this=0x592155f0, b=..., arr=; 0xffefcb48: 0xffefcb44, compinfo=0x594d315c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:633; #18 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x594d3150) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #19 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x58dbeab4, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #20 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""260360"", <incomplete sequence 344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:13150,Performance,optimiz,optimized,13150,"build/root-6.32.00/io/io/src/TBufferFile.cxx:2336; #17 0xf722eaf7 in TStreamerInfo::WriteBufferAux<char**> (this=0x592155f0, b=..., arr=; 0xffefcb48: 0xffefcb44, compinfo=0x594d315c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:633; #18 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x594d3150) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #19 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x58dbeab4, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #20 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""260360"", <incomplete sequence 344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:13932,Performance,optimiz,optimized,13932,"bj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""260360"", <incomplete sequence 344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x59354f60) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #27 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x594d4bc0, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:14728,Performance,optimiz,optimized,14728,"ot-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x59354f60) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #27 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x594d4bc0, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:14748,Performance,optimiz,optimized,14748,"ot-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x59354f60) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #27 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x594d4bc0, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:14773,Performance,optimiz,optimized,14773,"ot-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x59354f60) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #27 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x594d4bc0, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:15498,Performance,optimiz,optimized,15498,"(this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TObject.cxx:869; #35 0xe4203329 in TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9737; #36 TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:15519,Performance,optimiz,optimized,15519,"(this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TObject.cxx:869; #35 0xe4203329 in TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9737; #36 TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:15541,Performance,optimiz,optimized,15541,"(this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TObject.cxx:869; #35 0xe4203329 in TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9737; #36 TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:15565,Performance,optimiz,optimized,15565,"(this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TObject.cxx:869; #35 0xe4203329 in TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9737; #36 TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:15590,Performance,optimiz,optimized,15590,"(this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TObject.cxx:869; #35 0xe4203329 in TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9737; #36 TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:18105,Performance,optimiz,optimized,18105," () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1082; #45 0xf1246c9d in operator() () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:141; #46 cling::MetaSema::actOnxCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #47 0xf1258358 in cling::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; ===========================================================; gmake[2]: Leaving directory '/builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build'; gmake[2]: *** [CMakeFiles/hsimple.dir/build.make:82: tutorials/hsimple.root] Error 129; gmake[2]: *** Deleting file 'tutorials/hsimple.root'; gmake[1]: *** [CMakeFiles/Makefile2:11941: CMakeFiles/hsimple.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ```. Looking att the code here:. https://github.com/root-project/root/blob/00693233c08b5c63f684717a15115b96d5e60417/io/io/src/TBufferFile.cxx#L40-L47. The `USE_BSWAPCPY` is only used if `defined(__i386__)`, i.e. on 32 bit intel only. The asm code in the `Bswapcpy.h` header seems to be intented to work for both ix86 and x86_64 though. So I don't know why it is only used for ix86 here. I have worke",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15740:481,Deployability,Install,Installation,481,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the first stack histogram has negative bin content - it will not be shown automatically.; The only chance to see negative bins is to set min/max values for THStack. . `df106` macro draws such a stack and one bin is hidden from the drawing. ### Reproducer. Here is a simple reproducer macro:; [hstack.C.txt](https://github.com/user-attachments/files/15551454/hstack.C.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE linux, Mac ...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:344,Usability,simpl,simple,344,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the first stack histogram has negative bin content - it will not be shown automatically.; The only chance to see negative bins is to set min/max values for THStack. . `df106` macro draws such a stack and one bin is hidden from the drawing. ### Reproducer. Here is a simple reproducer macro:; [hstack.C.txt](https://github.com/user-attachments/files/15551454/hstack.C.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE linux, Mac ...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15744:1312,Deployability,Install,Installation,1312,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The dataset produces by RooFit's built-in generate method appears to have some buggy behaviour, exhibited at least in its behaviour of the `reduce` method on it. ; The xRooFit built-in generate method's dataset does not exhibit these issues. ### Reproducer. ```; {; using namespace ROOT::Experimental::XRooFit;; // create a two-channel model; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/SR""]->SetXaxis(1,0,1);; w[""simPdf/CR""]->SetXaxis(1,0,1);; w[""simPdf/SR/bkg""]->SetBinContent(1,20);; w[""simPdf/CR/bkg""]->SetBinContent(1,20);. // xRooFit's generate method works fine:; auto toy = w[""simPdf""]->generate();; std::cout << toy.get<RooAbsData>()->reduce(""channelCat==0"")->sumEntries() << "" vs "" << toy.get<RooAbsData>()->sumEntries(""channelCat==0"") << std::endl;. // but RooFit's generate method produces a buggy dataset:. // extract list of obs and access RooAbsPdf:; RooArgSet obs( *w.obs().get<RooArgList>() );; auto pdf = w[""simPdf""]->get<RooAbsPdf>();. // call RooFit's generate method:; auto ds = pdf->generate(obs,RooFit::Extended());. std::cout << ds->reduce(""channelCat==0"")->sumEntries() << "" vs "" << ds->sumEntries(""channelCat==0"") << std::endl;; ; }; ```. ### ROOT version. 6.32, possibly 6.30 as well. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15744
https://github.com/root-project/root/issues/15744:215,Energy Efficiency,reduce,reduce,215,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The dataset produces by RooFit's built-in generate method appears to have some buggy behaviour, exhibited at least in its behaviour of the `reduce` method on it. ; The xRooFit built-in generate method's dataset does not exhibit these issues. ### Reproducer. ```; {; using namespace ROOT::Experimental::XRooFit;; // create a two-channel model; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/SR""]->SetXaxis(1,0,1);; w[""simPdf/CR""]->SetXaxis(1,0,1);; w[""simPdf/SR/bkg""]->SetBinContent(1,20);; w[""simPdf/CR/bkg""]->SetBinContent(1,20);. // xRooFit's generate method works fine:; auto toy = w[""simPdf""]->generate();; std::cout << toy.get<RooAbsData>()->reduce(""channelCat==0"")->sumEntries() << "" vs "" << toy.get<RooAbsData>()->sumEntries(""channelCat==0"") << std::endl;. // but RooFit's generate method produces a buggy dataset:. // extract list of obs and access RooAbsPdf:; RooArgSet obs( *w.obs().get<RooArgList>() );; auto pdf = w[""simPdf""]->get<RooAbsPdf>();. // call RooFit's generate method:; auto ds = pdf->generate(obs,RooFit::Extended());. std::cout << ds->reduce(""channelCat==0"")->sumEntries() << "" vs "" << ds->sumEntries(""channelCat==0"") << std::endl;; ; }; ```. ### ROOT version. 6.32, possibly 6.30 as well. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15744
https://github.com/root-project/root/issues/15744:740,Energy Efficiency,reduce,reduce,740,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The dataset produces by RooFit's built-in generate method appears to have some buggy behaviour, exhibited at least in its behaviour of the `reduce` method on it. ; The xRooFit built-in generate method's dataset does not exhibit these issues. ### Reproducer. ```; {; using namespace ROOT::Experimental::XRooFit;; // create a two-channel model; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/SR""]->SetXaxis(1,0,1);; w[""simPdf/CR""]->SetXaxis(1,0,1);; w[""simPdf/SR/bkg""]->SetBinContent(1,20);; w[""simPdf/CR/bkg""]->SetBinContent(1,20);. // xRooFit's generate method works fine:; auto toy = w[""simPdf""]->generate();; std::cout << toy.get<RooAbsData>()->reduce(""channelCat==0"")->sumEntries() << "" vs "" << toy.get<RooAbsData>()->sumEntries(""channelCat==0"") << std::endl;. // but RooFit's generate method produces a buggy dataset:. // extract list of obs and access RooAbsPdf:; RooArgSet obs( *w.obs().get<RooArgList>() );; auto pdf = w[""simPdf""]->get<RooAbsPdf>();. // call RooFit's generate method:; auto ds = pdf->generate(obs,RooFit::Extended());. std::cout << ds->reduce(""channelCat==0"")->sumEntries() << "" vs "" << ds->sumEntries(""channelCat==0"") << std::endl;; ; }; ```. ### ROOT version. 6.32, possibly 6.30 as well. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15744
https://github.com/root-project/root/issues/15744:1153,Energy Efficiency,reduce,reduce,1153,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The dataset produces by RooFit's built-in generate method appears to have some buggy behaviour, exhibited at least in its behaviour of the `reduce` method on it. ; The xRooFit built-in generate method's dataset does not exhibit these issues. ### Reproducer. ```; {; using namespace ROOT::Experimental::XRooFit;; // create a two-channel model; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/SR""]->SetXaxis(1,0,1);; w[""simPdf/CR""]->SetXaxis(1,0,1);; w[""simPdf/SR/bkg""]->SetBinContent(1,20);; w[""simPdf/CR/bkg""]->SetBinContent(1,20);. // xRooFit's generate method works fine:; auto toy = w[""simPdf""]->generate();; std::cout << toy.get<RooAbsData>()->reduce(""channelCat==0"")->sumEntries() << "" vs "" << toy.get<RooAbsData>()->sumEntries(""channelCat==0"") << std::endl;. // but RooFit's generate method produces a buggy dataset:. // extract list of obs and access RooAbsPdf:; RooArgSet obs( *w.obs().get<RooArgList>() );; auto pdf = w[""simPdf""]->get<RooAbsPdf>();. // call RooFit's generate method:; auto ds = pdf->generate(obs,RooFit::Extended());. std::cout << ds->reduce(""channelCat==0"")->sumEntries() << "" vs "" << ds->sumEntries(""channelCat==0"") << std::endl;; ; }; ```. ### ROOT version. 6.32, possibly 6.30 as well. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15744
https://github.com/root-project/root/issues/15744:1122,Modifiability,Extend,Extended,1122,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The dataset produces by RooFit's built-in generate method appears to have some buggy behaviour, exhibited at least in its behaviour of the `reduce` method on it. ; The xRooFit built-in generate method's dataset does not exhibit these issues. ### Reproducer. ```; {; using namespace ROOT::Experimental::XRooFit;; // create a two-channel model; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/SR""]->SetXaxis(1,0,1);; w[""simPdf/CR""]->SetXaxis(1,0,1);; w[""simPdf/SR/bkg""]->SetBinContent(1,20);; w[""simPdf/CR/bkg""]->SetBinContent(1,20);. // xRooFit's generate method works fine:; auto toy = w[""simPdf""]->generate();; std::cout << toy.get<RooAbsData>()->reduce(""channelCat==0"")->sumEntries() << "" vs "" << toy.get<RooAbsData>()->sumEntries(""channelCat==0"") << std::endl;. // but RooFit's generate method produces a buggy dataset:. // extract list of obs and access RooAbsPdf:; RooArgSet obs( *w.obs().get<RooArgList>() );; auto pdf = w[""simPdf""]->get<RooAbsPdf>();. // call RooFit's generate method:; auto ds = pdf->generate(obs,RooFit::Extended());. std::cout << ds->reduce(""channelCat==0"")->sumEntries() << "" vs "" << ds->sumEntries(""channelCat==0"") << std::endl;; ; }; ```. ### ROOT version. 6.32, possibly 6.30 as well. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15744
https://github.com/root-project/root/issues/15744:943,Security,access,access,943,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The dataset produces by RooFit's built-in generate method appears to have some buggy behaviour, exhibited at least in its behaviour of the `reduce` method on it. ; The xRooFit built-in generate method's dataset does not exhibit these issues. ### Reproducer. ```; {; using namespace ROOT::Experimental::XRooFit;; // create a two-channel model; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/SR""]->SetXaxis(1,0,1);; w[""simPdf/CR""]->SetXaxis(1,0,1);; w[""simPdf/SR/bkg""]->SetBinContent(1,20);; w[""simPdf/CR/bkg""]->SetBinContent(1,20);. // xRooFit's generate method works fine:; auto toy = w[""simPdf""]->generate();; std::cout << toy.get<RooAbsData>()->reduce(""channelCat==0"")->sumEntries() << "" vs "" << toy.get<RooAbsData>()->sumEntries(""channelCat==0"") << std::endl;. // but RooFit's generate method produces a buggy dataset:. // extract list of obs and access RooAbsPdf:; RooArgSet obs( *w.obs().get<RooArgList>() );; auto pdf = w[""simPdf""]->get<RooAbsPdf>();. // call RooFit's generate method:; auto ds = pdf->generate(obs,RooFit::Extended());. std::cout << ds->reduce(""channelCat==0"")->sumEntries() << "" vs "" << ds->sumEntries(""channelCat==0"") << std::endl;; ; }; ```. ### ROOT version. 6.32, possibly 6.30 as well. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15744
https://github.com/root-project/root/pull/15746:580,Integrability,depend,depend,580,"The goal is to make RooFit completely independent on the cuda flag, except for building the BatchCompute CUDA library or not. This commit is the first step towards this goal. What is changed:. 1) The RooBatchCompute library has now two initialization functions: one for the CPU and one for CUDA. Like this, the CUDA library is only attempted to get loaded by the `RooFit::Evaluator` if evaluation on the GPU is requested, and not always when ROOT was built with `cuda=ON`. 2) Some code that was behind `ROOFIT_CUDA` prepprocessor macro `ifdefs` is now always built, if it doesn't depend on any symbols from CUDA libraries anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15746
https://github.com/root-project/root/pull/15746:349,Performance,load,loaded,349,"The goal is to make RooFit completely independent on the cuda flag, except for building the BatchCompute CUDA library or not. This commit is the first step towards this goal. What is changed:. 1) The RooBatchCompute library has now two initialization functions: one for the CPU and one for CUDA. Like this, the CUDA library is only attempted to get loaded by the `RooFit::Evaluator` if evaluation on the GPU is requested, and not always when ROOT was built with `cuda=ON`. 2) Some code that was behind `ROOFIT_CUDA` prepprocessor macro `ifdefs` is now always built, if it doesn't depend on any symbols from CUDA libraries anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15746
https://github.com/root-project/root/pull/15747:93,Deployability,update,update,93,1. Handle Y-axis zooming from stack histogram; 2. Ignore drawing of empty stack; 3. Properly update `kIsZooming` bit on server side; 4. Adjust JSROOT code . Fully resolves #14051,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15747
https://github.com/root-project/root/pull/15749:236,Availability,error,errors,236,I'd like to start testing again the case highlighted by https://github.com/root-project/root/issues/13361. Note at the beginning: the issue arose with `runtime_cxxmodules=OFF` and I'm not sure we have that in the CI so we might not see errors right away,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15749
https://github.com/root-project/root/pull/15749:18,Testability,test,testing,18,I'd like to start testing again the case highlighted by https://github.com/root-project/root/issues/13361. Note at the beginning: the issue arose with `runtime_cxxmodules=OFF` and I'm not sure we have that in the CI so we might not see errors right away,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15749
https://github.com/root-project/root/pull/15750:2916,Availability,error,errors,2916,"or consistency). ### RLoopManager data source initialization (rev bbf221f); The snapshot action creates a new loop manager which manages the snapshotted data set. The loop manager gets initialized before the actual snapshotting takes place. Originally, the pointer to the data source owned by the loop manager was marked as `const`. Because the RNTuple's data source _has_ to be created after the loop manager, for this PR the `const` qualifier has been dropped. ### Move `ROOT::RDF::Experimental::FromRNTuple` (rev 0a29b02); For snapshotting RNTuples, we need to include the header file for RNTupleDS in `ActionHelpers.hxx`. To avoid dependency conflicts related to including `ROOT/RDataFrame.hxx`, the free `FromRNTuple` functions have been moved to a separate header. ## Current limitations and follow-ups; This PR adds the minimal functionality for (single-threaded) snapshotting to RNTuple. A number of follow-ups are foreseen:. ### RNTuple write options; Currently no RNTuple-specific write options have been added to `RSnapshotOptions` yet, except for compression settings which were already present as an option. Adding (a subset) of the other `RNTupleWriteOptions` is trivial. ### Default compression settings; `RSnapshotOptions`' default compression setting is 101 (Zlib). However, RNTuple's default compression setting is 505 (zstd). We could change the default compression setting to `kInherit` and decide which settings to use according to the target data format (unless explicitly set by the user, of course). ### Multithreaded snapshotting; This PR only adds single-threaded RNTuple snapshotting. Multithreaded (and parallel) snapshotting will be addressed in a follow-up PR. ## Tests. Corresponding `roottest` PR: https://github.com/root-project/roottest/pull/1178. Tests for Windows have been disabled, due to permission denied-errors related to trying to recreate currently open TFiles. The regular snapshot tests have also been disabled for Windows, presumably for the same reason.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:110,Integrability,interface,interface,110,"This PR adds a first iteration of snapshotting to RNTuple from an RDataFrame. It uses the existing `Snapshot` interface, with an addition to `RSnapshotOptions`, `kOutputFormat`. This option can be set to write to either TTree, RNTuple, or take the default choice. The table below describes how `Snapshot` behaves accoring to the output format option:; | | From TTree | From RNTuple | From other DS |; | -------------- | --------------------- | ------------------------- | ------------------------ |; | **To TTree** | `ESnapshotOutputFormat::kDefault` | `ESnapshotOutputFormat::kTTree` | `ESnapshotOutputFormat::kDefault` |; | **To RNTuple** | Not yet possible, will be added in a follow-up, using functionality from `RNTupleImporter` | `ESnapshotOutputFormat::kDefault` | `ESnapshotOutputFormat::kRNTuple` |. ## Implementation; As mentioned, the existing `Snapshot` interface is used. A new `SnapshotRNTupleHelper` has been created to handle the creation and writing of the RNTuple, akin to the existing `SnapshotHelper` (which has been renamed to `SnapshotTTreeHelper` for consistency). ### RLoopManager data source initialization (rev bbf221f); The snapshot action creates a new loop manager which manages the snapshotted data set. The loop manager gets initialized before the actual snapshotting takes place. Originally, the pointer to the data source owned by the loop manager was marked as `const`. Because the RNTuple's data source _has_ to be created after the loop manager, for this PR the `const` qualifier has been dropped. ### Move `ROOT::RDF::Experimental::FromRNTuple` (rev 0a29b02); For snapshotting RNTuples, we need to include the header file for RNTupleDS in `ActionHelpers.hxx`. To avoid dependency conflicts related to including `ROOT/RDataFrame.hxx`, the free `FromRNTuple` functions have been moved to a separate header. ## Current limitations and follow-ups; This PR adds the minimal functionality for (single-threaded) snapshotting to RNTuple. A number of follow-ups are foresee",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:866,Integrability,interface,interface,866,"This PR adds a first iteration of snapshotting to RNTuple from an RDataFrame. It uses the existing `Snapshot` interface, with an addition to `RSnapshotOptions`, `kOutputFormat`. This option can be set to write to either TTree, RNTuple, or take the default choice. The table below describes how `Snapshot` behaves accoring to the output format option:; | | From TTree | From RNTuple | From other DS |; | -------------- | --------------------- | ------------------------- | ------------------------ |; | **To TTree** | `ESnapshotOutputFormat::kDefault` | `ESnapshotOutputFormat::kTTree` | `ESnapshotOutputFormat::kDefault` |; | **To RNTuple** | Not yet possible, will be added in a follow-up, using functionality from `RNTupleImporter` | `ESnapshotOutputFormat::kDefault` | `ESnapshotOutputFormat::kRNTuple` |. ## Implementation; As mentioned, the existing `Snapshot` interface is used. A new `SnapshotRNTupleHelper` has been created to handle the creation and writing of the RNTuple, akin to the existing `SnapshotHelper` (which has been renamed to `SnapshotTTreeHelper` for consistency). ### RLoopManager data source initialization (rev bbf221f); The snapshot action creates a new loop manager which manages the snapshotted data set. The loop manager gets initialized before the actual snapshotting takes place. Originally, the pointer to the data source owned by the loop manager was marked as `const`. Because the RNTuple's data source _has_ to be created after the loop manager, for this PR the `const` qualifier has been dropped. ### Move `ROOT::RDF::Experimental::FromRNTuple` (rev 0a29b02); For snapshotting RNTuples, we need to include the header file for RNTupleDS in `ActionHelpers.hxx`. To avoid dependency conflicts related to including `ROOT/RDataFrame.hxx`, the free `FromRNTuple` functions have been moved to a separate header. ## Current limitations and follow-ups; This PR adds the minimal functionality for (single-threaded) snapshotting to RNTuple. A number of follow-ups are foresee",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:1706,Integrability,depend,dependency,1706,"er` | `ESnapshotOutputFormat::kDefault` | `ESnapshotOutputFormat::kRNTuple` |. ## Implementation; As mentioned, the existing `Snapshot` interface is used. A new `SnapshotRNTupleHelper` has been created to handle the creation and writing of the RNTuple, akin to the existing `SnapshotHelper` (which has been renamed to `SnapshotTTreeHelper` for consistency). ### RLoopManager data source initialization (rev bbf221f); The snapshot action creates a new loop manager which manages the snapshotted data set. The loop manager gets initialized before the actual snapshotting takes place. Originally, the pointer to the data source owned by the loop manager was marked as `const`. Because the RNTuple's data source _has_ to be created after the loop manager, for this PR the `const` qualifier has been dropped. ### Move `ROOT::RDF::Experimental::FromRNTuple` (rev 0a29b02); For snapshotting RNTuples, we need to include the header file for RNTupleDS in `ActionHelpers.hxx`. To avoid dependency conflicts related to including `ROOT/RDataFrame.hxx`, the free `FromRNTuple` functions have been moved to a separate header. ## Current limitations and follow-ups; This PR adds the minimal functionality for (single-threaded) snapshotting to RNTuple. A number of follow-ups are foreseen:. ### RNTuple write options; Currently no RNTuple-specific write options have been added to `RSnapshotOptions` yet, except for compression settings which were already present as an option. Adding (a subset) of the other `RNTupleWriteOptions` is trivial. ### Default compression settings; `RSnapshotOptions`' default compression setting is 101 (Zlib). However, RNTuple's default compression setting is 505 (zstd). We could change the default compression setting to `kInherit` and decide which settings to use according to the target data format (unless explicitly set by the user, of course). ### Multithreaded snapshotting; This PR only adds single-threaded RNTuple snapshotting. Multithreaded (and parallel) snapshotting will b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:1700,Safety,avoid,avoid,1700,"er` | `ESnapshotOutputFormat::kDefault` | `ESnapshotOutputFormat::kRNTuple` |. ## Implementation; As mentioned, the existing `Snapshot` interface is used. A new `SnapshotRNTupleHelper` has been created to handle the creation and writing of the RNTuple, akin to the existing `SnapshotHelper` (which has been renamed to `SnapshotTTreeHelper` for consistency). ### RLoopManager data source initialization (rev bbf221f); The snapshot action creates a new loop manager which manages the snapshotted data set. The loop manager gets initialized before the actual snapshotting takes place. Originally, the pointer to the data source owned by the loop manager was marked as `const`. Because the RNTuple's data source _has_ to be created after the loop manager, for this PR the `const` qualifier has been dropped. ### Move `ROOT::RDF::Experimental::FromRNTuple` (rev 0a29b02); For snapshotting RNTuples, we need to include the header file for RNTupleDS in `ActionHelpers.hxx`. To avoid dependency conflicts related to including `ROOT/RDataFrame.hxx`, the free `FromRNTuple` functions have been moved to a separate header. ## Current limitations and follow-ups; This PR adds the minimal functionality for (single-threaded) snapshotting to RNTuple. A number of follow-ups are foreseen:. ### RNTuple write options; Currently no RNTuple-specific write options have been added to `RSnapshotOptions` yet, except for compression settings which were already present as an option. Adding (a subset) of the other `RNTupleWriteOptions` is trivial. ### Default compression settings; `RSnapshotOptions`' default compression setting is 101 (Zlib). However, RNTuple's default compression setting is 505 (zstd). We could change the default compression setting to `kInherit` and decide which settings to use according to the target data format (unless explicitly set by the user, of course). ### Multithreaded snapshotting; This PR only adds single-threaded RNTuple snapshotting. Multithreaded (and parallel) snapshotting will b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:2765,Testability,Test,Tests,2765,"or consistency). ### RLoopManager data source initialization (rev bbf221f); The snapshot action creates a new loop manager which manages the snapshotted data set. The loop manager gets initialized before the actual snapshotting takes place. Originally, the pointer to the data source owned by the loop manager was marked as `const`. Because the RNTuple's data source _has_ to be created after the loop manager, for this PR the `const` qualifier has been dropped. ### Move `ROOT::RDF::Experimental::FromRNTuple` (rev 0a29b02); For snapshotting RNTuples, we need to include the header file for RNTupleDS in `ActionHelpers.hxx`. To avoid dependency conflicts related to including `ROOT/RDataFrame.hxx`, the free `FromRNTuple` functions have been moved to a separate header. ## Current limitations and follow-ups; This PR adds the minimal functionality for (single-threaded) snapshotting to RNTuple. A number of follow-ups are foreseen:. ### RNTuple write options; Currently no RNTuple-specific write options have been added to `RSnapshotOptions` yet, except for compression settings which were already present as an option. Adding (a subset) of the other `RNTupleWriteOptions` is trivial. ### Default compression settings; `RSnapshotOptions`' default compression setting is 101 (Zlib). However, RNTuple's default compression setting is 505 (zstd). We could change the default compression setting to `kInherit` and decide which settings to use according to the target data format (unless explicitly set by the user, of course). ### Multithreaded snapshotting; This PR only adds single-threaded RNTuple snapshotting. Multithreaded (and parallel) snapshotting will be addressed in a follow-up PR. ## Tests. Corresponding `roottest` PR: https://github.com/root-project/roottest/pull/1178. Tests for Windows have been disabled, due to permission denied-errors related to trying to recreate currently open TFiles. The regular snapshot tests have also been disabled for Windows, presumably for the same reason.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:2853,Testability,Test,Tests,2853,"or consistency). ### RLoopManager data source initialization (rev bbf221f); The snapshot action creates a new loop manager which manages the snapshotted data set. The loop manager gets initialized before the actual snapshotting takes place. Originally, the pointer to the data source owned by the loop manager was marked as `const`. Because the RNTuple's data source _has_ to be created after the loop manager, for this PR the `const` qualifier has been dropped. ### Move `ROOT::RDF::Experimental::FromRNTuple` (rev 0a29b02); For snapshotting RNTuples, we need to include the header file for RNTupleDS in `ActionHelpers.hxx`. To avoid dependency conflicts related to including `ROOT/RDataFrame.hxx`, the free `FromRNTuple` functions have been moved to a separate header. ## Current limitations and follow-ups; This PR adds the minimal functionality for (single-threaded) snapshotting to RNTuple. A number of follow-ups are foreseen:. ### RNTuple write options; Currently no RNTuple-specific write options have been added to `RSnapshotOptions` yet, except for compression settings which were already present as an option. Adding (a subset) of the other `RNTupleWriteOptions` is trivial. ### Default compression settings; `RSnapshotOptions`' default compression setting is 101 (Zlib). However, RNTuple's default compression setting is 505 (zstd). We could change the default compression setting to `kInherit` and decide which settings to use according to the target data format (unless explicitly set by the user, of course). ### Multithreaded snapshotting; This PR only adds single-threaded RNTuple snapshotting. Multithreaded (and parallel) snapshotting will be addressed in a follow-up PR. ## Tests. Corresponding `roottest` PR: https://github.com/root-project/roottest/pull/1178. Tests for Windows have been disabled, due to permission denied-errors related to trying to recreate currently open TFiles. The regular snapshot tests have also been disabled for Windows, presumably for the same reason.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:2997,Testability,test,tests,2997,"or consistency). ### RLoopManager data source initialization (rev bbf221f); The snapshot action creates a new loop manager which manages the snapshotted data set. The loop manager gets initialized before the actual snapshotting takes place. Originally, the pointer to the data source owned by the loop manager was marked as `const`. Because the RNTuple's data source _has_ to be created after the loop manager, for this PR the `const` qualifier has been dropped. ### Move `ROOT::RDF::Experimental::FromRNTuple` (rev 0a29b02); For snapshotting RNTuples, we need to include the header file for RNTupleDS in `ActionHelpers.hxx`. To avoid dependency conflicts related to including `ROOT/RDataFrame.hxx`, the free `FromRNTuple` functions have been moved to a separate header. ## Current limitations and follow-ups; This PR adds the minimal functionality for (single-threaded) snapshotting to RNTuple. A number of follow-ups are foreseen:. ### RNTuple write options; Currently no RNTuple-specific write options have been added to `RSnapshotOptions` yet, except for compression settings which were already present as an option. Adding (a subset) of the other `RNTupleWriteOptions` is trivial. ### Default compression settings; `RSnapshotOptions`' default compression setting is 101 (Zlib). However, RNTuple's default compression setting is 505 (zstd). We could change the default compression setting to `kInherit` and decide which settings to use according to the target data format (unless explicitly set by the user, of course). ### Multithreaded snapshotting; This PR only adds single-threaded RNTuple snapshotting. Multithreaded (and parallel) snapshotting will be addressed in a follow-up PR. ## Tests. Corresponding `roottest` PR: https://github.com/root-project/roottest/pull/1178. Tests for Windows have been disabled, due to permission denied-errors related to trying to recreate currently open TFiles. The regular snapshot tests have also been disabled for Windows, presumably for the same reason.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/issues/15751:1126,Deployability,release,release,1126," evaluation backend, because evaluating these unnecessary integrals takes too much time (although the result is correct). Since the RooFit AD backend uses the same ""`compileForNormSet`"" method to sanitize the computation graph, it's also a blocker for minimizing the CMS Higgs Run 1 likelihood with AD. ### Reproducer. ```c++; RooRealVar x{""x"", ""x"", 0, 1};; RooRealVar y{""y"", ""y"", 0, 1};. RooGenericPdf pdfx{""pdfx"", ""1.0 + x - x"", {x}};; RooGenericPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:1369,Deployability,release,release,1369,"oducer. ```c++; RooRealVar x{""x"", ""x"", 0, 1};; RooRealVar y{""y"", ""y"", 0, 1};. RooGenericPdf pdfx{""pdfx"", ""1.0 + x - x"", {x}};; RooGenericPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:1539,Deployability,integrat,integrator,1539,"oducer. ```c++; RooRealVar x{""x"", ""x"", 0, 1};; RooRealVar y{""y"", ""y"", 0, 1};. RooGenericPdf pdfx{""pdfx"", ""1.0 + x - x"", {x}};; RooGenericPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:1669,Deployability,integrat,integrator,1669,"oducer. ```c++; RooRealVar x{""x"", ""x"", 0, 1};; RooRealVar y{""y"", ""y"", 0, 1};. RooGenericPdf pdfx{""pdfx"", ""1.0 + x - x"", {x}};; RooGenericPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:1825,Deployability,integrat,integrator,1825,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:1964,Deployability,integrat,integrator,1964,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:2195,Deployability,integrat,integrator,2195,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:2346,Deployability,integrat,integrator,2346,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:2485,Deployability,integrat,integrator,2485,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:2623,Deployability,integrat,integrator,2623,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:1539,Integrability,integrat,integrator,1539,"oducer. ```c++; RooRealVar x{""x"", ""x"", 0, 1};; RooRealVar y{""y"", ""y"", 0, 1};. RooGenericPdf pdfx{""pdfx"", ""1.0 + x - x"", {x}};; RooGenericPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:1669,Integrability,integrat,integrator,1669,"oducer. ```c++; RooRealVar x{""x"", ""x"", 0, 1};; RooRealVar y{""y"", ""y"", 0, 1};. RooGenericPdf pdfx{""pdfx"", ""1.0 + x - x"", {x}};; RooGenericPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:1825,Integrability,integrat,integrator,1825,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:1964,Integrability,integrat,integrator,1964,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:2195,Integrability,integrat,integrator,2195,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:2346,Integrability,integrat,integrator,2346,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:2485,Integrability,integrat,integrator,2485,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:2623,Integrability,integrat,integrator,2623,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/issues/15751:427,Security,sanitiz,sanitize,427,"### Description. Using a conditional RooProdPdf in a RooSimultaneous spawns too many integrals with new CPU evaluation backend. This is a deal breaker for fitting the open likelihood of the CMS Run 1 Higgs analysis with the new CPU evaluation backend, because evaluating these unnecessary integrals takes too much time (although the result is correct). Since the RooFit AD backend uses the same ""`compileForNormSet`"" method to sanitize the computation graph, it's also a blocker for minimizing the CMS Higgs Run 1 likelihood with AD. ### Reproducer. ```c++; RooRealVar x{""x"", ""x"", 0, 1};; RooRealVar y{""y"", ""y"", 0, 1};. RooGenericPdf pdfx{""pdfx"", ""1.0 + x - x"", {x}};; RooGenericPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calcula",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15751
https://github.com/root-project/root/pull/15752:58,Availability,error,error,58,"# This Pull request:. ## Changes or fixes:. Fix an import error in JsMVA:. ```; $ ipython; Python 3.12.3 (main, Apr 17 2024, 00:00:00) [GCC 14.0.1 20240411 (Red Hat 14.0.1-0)]; Type 'copyright', 'credits' or 'license' for more information; IPython 8.23.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: from ROOT.JsMVA import JsMVAMagic. In [2]: %jsmva on; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); Cell In[2], line 1; ----> 1 get_ipython().run_line_magic('jsmva', 'on'). File /usr/lib/python3.12/site-packages/IPython/core/interactiveshell.py:2480, in InteractiveShell.run_line_magic(self, magic_name, line, _stack_depth); 2478 kwargs['local_ns'] = self.get_local_scope(stack_depth); 2479 with self.builtin_trap:; -> 2480 result = fn(*args, **kwargs); 2482 # The code below prevents the output from being displayed; 2483 # when using magics with decorator @output_can_be_silenced; 2484 # when the last Python token in the expression is a ';'.; 2485 if getattr(fn, magic.MAGIC_OUTPUT_CAN_BE_SILENCED, False):. File /usr/lib64/python3.12/site-packages/ROOT/JsMVA/JsMVAMagic.py:26, in JsMVAMagic.jsmva(self, line); 22 @line_magic; 23 @magic_arguments(); 24 @argument(""arg"", nargs=""?"", default=""on"", help=""Enable/Disable JavaScript visualisation for TMVA""); 25 def jsmva(self, line):; ---> 26 from JsMVA.JPyInterface import functions; 28 args = parse_argstring(self.jsmva, line); 29 if args.arg == ""on"":. ModuleNotFoundError: No module named 'JsMVA'. ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15752
https://github.com/root-project/root/pull/15752:1608,Deployability,update,updated,1608,"# This Pull request:. ## Changes or fixes:. Fix an import error in JsMVA:. ```; $ ipython; Python 3.12.3 (main, Apr 17 2024, 00:00:00) [GCC 14.0.1 20240411 (Red Hat 14.0.1-0)]; Type 'copyright', 'credits' or 'license' for more information; IPython 8.23.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: from ROOT.JsMVA import JsMVAMagic. In [2]: %jsmva on; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); Cell In[2], line 1; ----> 1 get_ipython().run_line_magic('jsmva', 'on'). File /usr/lib/python3.12/site-packages/IPython/core/interactiveshell.py:2480, in InteractiveShell.run_line_magic(self, magic_name, line, _stack_depth); 2478 kwargs['local_ns'] = self.get_local_scope(stack_depth); 2479 with self.builtin_trap:; -> 2480 result = fn(*args, **kwargs); 2482 # The code below prevents the output from being displayed; 2483 # when using magics with decorator @output_can_be_silenced; 2484 # when the last Python token in the expression is a ';'.; 2485 if getattr(fn, magic.MAGIC_OUTPUT_CAN_BE_SILENCED, False):. File /usr/lib64/python3.12/site-packages/ROOT/JsMVA/JsMVAMagic.py:26, in JsMVAMagic.jsmva(self, line); 22 @line_magic; 23 @magic_arguments(); 24 @argument(""arg"", nargs=""?"", default=""on"", help=""Enable/Disable JavaScript visualisation for TMVA""); 25 def jsmva(self, line):; ---> 26 from JsMVA.JPyInterface import functions; 28 args = parse_argstring(self.jsmva, line); 29 if args.arg == ""on"":. ModuleNotFoundError: No module named 'JsMVA'. ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15752
https://github.com/root-project/root/pull/15752:261,Modifiability,enhance,enhanced,261,"# This Pull request:. ## Changes or fixes:. Fix an import error in JsMVA:. ```; $ ipython; Python 3.12.3 (main, Apr 17 2024, 00:00:00) [GCC 14.0.1 20240411 (Red Hat 14.0.1-0)]; Type 'copyright', 'credits' or 'license' for more information; IPython 8.23.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: from ROOT.JsMVA import JsMVAMagic. In [2]: %jsmva on; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); Cell In[2], line 1; ----> 1 get_ipython().run_line_magic('jsmva', 'on'). File /usr/lib/python3.12/site-packages/IPython/core/interactiveshell.py:2480, in InteractiveShell.run_line_magic(self, magic_name, line, _stack_depth); 2478 kwargs['local_ns'] = self.get_local_scope(stack_depth); 2479 with self.builtin_trap:; -> 2480 result = fn(*args, **kwargs); 2482 # The code below prevents the output from being displayed; 2483 # when using magics with decorator @output_can_be_silenced; 2484 # when the last Python token in the expression is a ';'.; 2485 if getattr(fn, magic.MAGIC_OUTPUT_CAN_BE_SILENCED, False):. File /usr/lib64/python3.12/site-packages/ROOT/JsMVA/JsMVAMagic.py:26, in JsMVAMagic.jsmva(self, line); 22 @line_magic; 23 @magic_arguments(); 24 @argument(""arg"", nargs=""?"", default=""on"", help=""Enable/Disable JavaScript visualisation for TMVA""); 25 def jsmva(self, line):; ---> 26 from JsMVA.JPyInterface import functions; 28 args = parse_argstring(self.jsmva, line); 29 if args.arg == ""on"":. ModuleNotFoundError: No module named 'JsMVA'. ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15752
https://github.com/root-project/root/pull/15752:1578,Testability,test,tested,1578,"# This Pull request:. ## Changes or fixes:. Fix an import error in JsMVA:. ```; $ ipython; Python 3.12.3 (main, Apr 17 2024, 00:00:00) [GCC 14.0.1 20240411 (Red Hat 14.0.1-0)]; Type 'copyright', 'credits' or 'license' for more information; IPython 8.23.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: from ROOT.JsMVA import JsMVAMagic. In [2]: %jsmva on; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); Cell In[2], line 1; ----> 1 get_ipython().run_line_magic('jsmva', 'on'). File /usr/lib/python3.12/site-packages/IPython/core/interactiveshell.py:2480, in InteractiveShell.run_line_magic(self, magic_name, line, _stack_depth); 2478 kwargs['local_ns'] = self.get_local_scope(stack_depth); 2479 with self.builtin_trap:; -> 2480 result = fn(*args, **kwargs); 2482 # The code below prevents the output from being displayed; 2483 # when using magics with decorator @output_can_be_silenced; 2484 # when the last Python token in the expression is a ';'.; 2485 if getattr(fn, magic.MAGIC_OUTPUT_CAN_BE_SILENCED, False):. File /usr/lib64/python3.12/site-packages/ROOT/JsMVA/JsMVAMagic.py:26, in JsMVAMagic.jsmva(self, line); 22 @line_magic; 23 @magic_arguments(); 24 @argument(""arg"", nargs=""?"", default=""on"", help=""Enable/Disable JavaScript visualisation for TMVA""); 25 def jsmva(self, line):; ---> 26 from JsMVA.JPyInterface import functions; 28 args = parse_argstring(self.jsmva, line); 29 if args.arg == ""on"":. ModuleNotFoundError: No module named 'JsMVA'. ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15752
https://github.com/root-project/root/pull/15753:243,Integrability,depend,dependence,243,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321. (cherry picked from commit c767271b30bde91d885d147b95e2f91d3d7a20b6, backport of https://github.com/root-project/root/pull/15437)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15753
https://github.com/root-project/root/pull/15753:152,Testability,test,tests,152,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321. (cherry picked from commit c767271b30bde91d885d147b95e2f91d3d7a20b6, backport of https://github.com/root-project/root/pull/15437)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15753
https://github.com/root-project/root/pull/15753:211,Testability,test,test,211,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321. (cherry picked from commit c767271b30bde91d885d147b95e2f91d3d7a20b6, backport of https://github.com/root-project/root/pull/15437)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15753
https://github.com/root-project/root/pull/15753:261,Testability,test,test,261,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321. (cherry picked from commit c767271b30bde91d885d147b95e2f91d3d7a20b6, backport of https://github.com/root-project/root/pull/15437)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15753
https://github.com/root-project/root/pull/15753:382,Testability,test,tests,382,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321. (cherry picked from commit c767271b30bde91d885d147b95e2f91d3d7a20b6, backport of https://github.com/root-project/root/pull/15437)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15753
https://github.com/root-project/root/issues/15755:271,Deployability,patch,patch,271,### Check duplicate issues. - [x] Checked for duplicates. ### Description. The 2012 Higgs discovery workspaces are currently not fully able to round-trip via the HS3 JSON format due to an issue with the way the Constraint Terms are encoded. . This needs to be fixed in a patch release ASAP. This issue is WIP. ### Reproducer. @guitargeek has received the neccessary inputs. ### ROOT version. 6.32.00. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15755
https://github.com/root-project/root/issues/15755:277,Deployability,release,release,277,### Check duplicate issues. - [x] Checked for duplicates. ### Description. The 2012 Higgs discovery workspaces are currently not fully able to round-trip via the HS3 JSON format due to an issue with the way the Constraint Terms are encoded. . This needs to be fixed in a patch release ASAP. This issue is WIP. ### Reproducer. @guitargeek has received the neccessary inputs. ### ROOT version. 6.32.00. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15755
https://github.com/root-project/root/issues/15755:405,Deployability,Install,Installation,405,### Check duplicate issues. - [x] Checked for duplicates. ### Description. The 2012 Higgs discovery workspaces are currently not fully able to round-trip via the HS3 JSON format due to an issue with the way the Constraint Terms are encoded. . This needs to be fixed in a patch release ASAP. This issue is WIP. ### Reproducer. @guitargeek has received the neccessary inputs. ### ROOT version. 6.32.00. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15755
https://github.com/root-project/root/issues/15756:244,Deployability,patch,patch,244,### Check duplicate issues. - [X] Checked for duplicates. ### Description. An ATLAS analysis using top quarks is currently struggling to publish the HEPdata entry because of issues with the HS3 roundtrip-capability. This needs to be fixed in a patch release ASAP. This issue is WIP. ### Reproducer. @guitargeek has received the neccessary inputs. ### ROOT version. 6.32.00. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15756
https://github.com/root-project/root/issues/15756:250,Deployability,release,release,250,### Check duplicate issues. - [X] Checked for duplicates. ### Description. An ATLAS analysis using top quarks is currently struggling to publish the HEPdata entry because of issues with the HS3 roundtrip-capability. This needs to be fixed in a patch release ASAP. This issue is WIP. ### Reproducer. @guitargeek has received the neccessary inputs. ### ROOT version. 6.32.00. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15756
https://github.com/root-project/root/issues/15756:378,Deployability,Install,Installation,378,### Check duplicate issues. - [X] Checked for duplicates. ### Description. An ATLAS analysis using top quarks is currently struggling to publish the HEPdata entry because of issues with the HS3 roundtrip-capability. This needs to be fixed in a patch release ASAP. This issue is WIP. ### Reproducer. @guitargeek has received the neccessary inputs. ### ROOT version. 6.32.00. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15756
https://github.com/root-project/root/pull/15758:312,Usability,simpl,simplify,312,Main problem - stack was drawn twice and only while histograms in original stack were destroyed ; producing canvas had nice look. . Changes:; * do not draw stack twice.; * clone histograms once and use in stack and in legend; * do not use sames - make no sense when calling `SetStats(false)` at the same time; * simplify text drawing; * make C++ and Python macro closer to each other,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15758
https://github.com/root-project/root/pull/15759:411,Deployability,update,updated,411,"Upon creating an RNTupleInspector, we check whether the compression settings are consistent across all columns. Some column ranges may have been constructed upon read (e.g. in the context of late model extension) and therefore have no compression settings to begin with. These column ranges should not cause the RNTupleInspector to throw. This PR partially addresses #15661. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15759
https://github.com/root-project/root/pull/15759:381,Testability,test,tested,381,"Upon creating an RNTupleInspector, we check whether the compression settings are consistent across all columns. Some column ranges may have been constructed upon read (e.g. in the context of late model extension) and therefore have no compression settings to begin with. These column ranges should not cause the RNTupleInspector to throw. This PR partially addresses #15661. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15759
https://github.com/root-project/root/issues/15763:53,Modifiability,inherit,inheriting,53,"### Feature description. The legacy backend classes, inheriting from, `RooAbsTestStatistic`, implement the `RooAbsReal::setData` method that allows for datasets to be swapped over in a test statistic function without having to reconstruct the test statistic. To support the new backend, in xRooFit I am having to destroy and recreate the test statistics (NLL function) each time I change the dataset. I dont know if this introduces an unnecessary overhead or not, but I'd be interested to know if implementing the `setData` method with the new classes could be easily implemented or not?. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:185,Testability,test,test,185,"### Feature description. The legacy backend classes, inheriting from, `RooAbsTestStatistic`, implement the `RooAbsReal::setData` method that allows for datasets to be swapped over in a test statistic function without having to reconstruct the test statistic. To support the new backend, in xRooFit I am having to destroy and recreate the test statistics (NLL function) each time I change the dataset. I dont know if this introduces an unnecessary overhead or not, but I'd be interested to know if implementing the `setData` method with the new classes could be easily implemented or not?. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:243,Testability,test,test,243,"### Feature description. The legacy backend classes, inheriting from, `RooAbsTestStatistic`, implement the `RooAbsReal::setData` method that allows for datasets to be swapped over in a test statistic function without having to reconstruct the test statistic. To support the new backend, in xRooFit I am having to destroy and recreate the test statistics (NLL function) each time I change the dataset. I dont know if this introduces an unnecessary overhead or not, but I'd be interested to know if implementing the `setData` method with the new classes could be easily implemented or not?. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:338,Testability,test,test,338,"### Feature description. The legacy backend classes, inheriting from, `RooAbsTestStatistic`, implement the `RooAbsReal::setData` method that allows for datasets to be swapped over in a test statistic function without having to reconstruct the test statistic. To support the new backend, in xRooFit I am having to destroy and recreate the test statistics (NLL function) each time I change the dataset. I dont know if this introduces an unnecessary overhead or not, but I'd be interested to know if implementing the `setData` method with the new classes could be easily implemented or not?. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/pull/15766:273,Usability,clear,clear,273,"As said in this old forum post https://root-forum.cern.ch/t/thstack-th2-with-negative-values/16161/5, stacking a histogram with negative bin content does not make sense. This issue is not relevant https://github.com/root-project/root/issues/15740. But it is goo to make it clear in the documentation and to prevent adding such histograms in a stack. That's what this PR is doing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15767:121,Usability,simpl,simplification,121,Move the implementation in the base class as currently its identical for the file and the DAOS backend. Additional minor simplification.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15767
https://github.com/root-project/root/pull/15769:48,Usability,guid,guide,48,Continue Jolly's work to Generate the reference guide with Makefile and Github Actions. This initial PR is:. https://github.com/root-project/root/pull/15337,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15769
https://github.com/root-project/root/pull/15771:520,Deployability,update,updated,520,"# This Pull request:; adds a field in the RNTuple anchor that specifies the max key size, i.e. the biggest payload that can be stored in a TKey.; This will allow the RNTuple readers and writers to handle payloads bigger than that limit (currently 1 GiB) by splitting it into multiple TKeys. Bumped RNTuple class version to 6. **NOTE**: this change doesn't break forward compatibility because old readers weren't able to read payloads larger than `maxKeySize` anyway. . ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15771
https://github.com/root-project/root/pull/15771:490,Testability,test,tested,490,"# This Pull request:; adds a field in the RNTuple anchor that specifies the max key size, i.e. the biggest payload that can be stored in a TKey.; This will allow the RNTuple readers and writers to handle payloads bigger than that limit (currently 1 GiB) by splitting it into multiple TKeys. Bumped RNTuple class version to 6. **NOTE**: this change doesn't break forward compatibility because old readers weren't able to read payloads larger than `maxKeySize` anyway. . ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15771
https://github.com/root-project/root/issues/15774:518,Availability,down,downloaded,518,"### Explain what you would like to see improved and how. When installing ROOT in Windows from precompiled release section [on the web](https://root.cern/releases/release-63200/), it's said that one has to use the same Visual Studio and Python version in the system than the one used for compiling. The Visual Studio version (2022) is part of the title and (vc17) is part of the filename. The same is not true for the Python version. It would be great if this could be added. For example, what Python version should be downloaded for v6.32.00 ? It's 3.11 but you need to find it out the hard way. Thanks in advance!!. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Pre-built binary. ### Operating system. Windows. ### Additional context. ![image](https://github.com/root-project/root/assets/10653970/3817d313-2d9c-460f-8f50-8cf86985ad6d)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15774
https://github.com/root-project/root/issues/15774:62,Deployability,install,installing,62,"### Explain what you would like to see improved and how. When installing ROOT in Windows from precompiled release section [on the web](https://root.cern/releases/release-63200/), it's said that one has to use the same Visual Studio and Python version in the system than the one used for compiling. The Visual Studio version (2022) is part of the title and (vc17) is part of the filename. The same is not true for the Python version. It would be great if this could be added. For example, what Python version should be downloaded for v6.32.00 ? It's 3.11 but you need to find it out the hard way. Thanks in advance!!. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Pre-built binary. ### Operating system. Windows. ### Additional context. ![image](https://github.com/root-project/root/assets/10653970/3817d313-2d9c-460f-8f50-8cf86985ad6d)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15774
https://github.com/root-project/root/issues/15774:106,Deployability,release,release,106,"### Explain what you would like to see improved and how. When installing ROOT in Windows from precompiled release section [on the web](https://root.cern/releases/release-63200/), it's said that one has to use the same Visual Studio and Python version in the system than the one used for compiling. The Visual Studio version (2022) is part of the title and (vc17) is part of the filename. The same is not true for the Python version. It would be great if this could be added. For example, what Python version should be downloaded for v6.32.00 ? It's 3.11 but you need to find it out the hard way. Thanks in advance!!. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Pre-built binary. ### Operating system. Windows. ### Additional context. ![image](https://github.com/root-project/root/assets/10653970/3817d313-2d9c-460f-8f50-8cf86985ad6d)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15774
https://github.com/root-project/root/issues/15774:153,Deployability,release,releases,153,"### Explain what you would like to see improved and how. When installing ROOT in Windows from precompiled release section [on the web](https://root.cern/releases/release-63200/), it's said that one has to use the same Visual Studio and Python version in the system than the one used for compiling. The Visual Studio version (2022) is part of the title and (vc17) is part of the filename. The same is not true for the Python version. It would be great if this could be added. For example, what Python version should be downloaded for v6.32.00 ? It's 3.11 but you need to find it out the hard way. Thanks in advance!!. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Pre-built binary. ### Operating system. Windows. ### Additional context. ![image](https://github.com/root-project/root/assets/10653970/3817d313-2d9c-460f-8f50-8cf86985ad6d)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15774
https://github.com/root-project/root/issues/15774:162,Deployability,release,release-,162,"### Explain what you would like to see improved and how. When installing ROOT in Windows from precompiled release section [on the web](https://root.cern/releases/release-63200/), it's said that one has to use the same Visual Studio and Python version in the system than the one used for compiling. The Visual Studio version (2022) is part of the title and (vc17) is part of the filename. The same is not true for the Python version. It would be great if this could be added. For example, what Python version should be downloaded for v6.32.00 ? It's 3.11 but you need to find it out the hard way. Thanks in advance!!. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Pre-built binary. ### Operating system. Windows. ### Additional context. ![image](https://github.com/root-project/root/assets/10653970/3817d313-2d9c-460f-8f50-8cf86985ad6d)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15774
https://github.com/root-project/root/issues/15774:824,Deployability,Install,Installation,824,"### Explain what you would like to see improved and how. When installing ROOT in Windows from precompiled release section [on the web](https://root.cern/releases/release-63200/), it's said that one has to use the same Visual Studio and Python version in the system than the one used for compiling. The Visual Studio version (2022) is part of the title and (vc17) is part of the filename. The same is not true for the Python version. It would be great if this could be added. For example, what Python version should be downloaded for v6.32.00 ? It's 3.11 but you need to find it out the hard way. Thanks in advance!!. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Pre-built binary. ### Operating system. Windows. ### Additional context. ![image](https://github.com/root-project/root/assets/10653970/3817d313-2d9c-460f-8f50-8cf86985ad6d)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15774
https://github.com/root-project/root/pull/15775:167,Deployability,release,release,167,"This PR is a follow-up on https://github.com/root-project/root/pull/15746. Make it possible to build RooFit CUDA evaluation library standalone to use in existing ROOT release, as discussed on the forum:; https://root-forum.cern.ch/t/installing-root-with-cuda-support-in-a-conda-environment/59208/5. To try it out:; * Build the content of `roofit/batchcompute` in this repository, replacing the CMakeLists.txt file with the code listing below:; * Build the project. You should now have a `libRooBatchCompute_CUDA.so` file. Make sure it's in the `LD_LIBRARY_PATH`; * Your fits should now work with `EvalBackend(""cuda"")` (see also the [RooAbsPdf](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de) documentation about this). ```cmake; # Adapt to your system; set (CMAKE_CUDA_ARCHITECTURES ""native"" CACHE STRING """" FORCE); set (CMAKE_CUDA_HOST_COMPILER /usr/bin/g++-13 CACHE STRING """" FORCE); set (CMAKE_CUDA_COMPILER ""/opt/cuda/bin/nvcc"" CACHE STRING """" FORCE). find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}). cmake_minimum_required(VERSION 3.14); project(batchcompute-cuda LANGUAGES CUDA). # in the src directory, put all files from roofit/batchcompute/src and roofit/batchcompute/res; add_library(RooBatchCompute_CUDA SHARED src/RooBatchCompute.cu src/ComputeFunctions.cu src/CudaInterface.cu); target_include_directories(RooBatchCompute_CUDA PRIVATE src res). target_compile_options(RooBatchCompute_CUDA PRIVATE -lineinfo --expt-relaxed-constexpr); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15775
https://github.com/root-project/root/pull/15775:233,Deployability,install,installing-root-with-cuda-support-in-a-conda-environment,233,"This PR is a follow-up on https://github.com/root-project/root/pull/15746. Make it possible to build RooFit CUDA evaluation library standalone to use in existing ROOT release, as discussed on the forum:; https://root-forum.cern.ch/t/installing-root-with-cuda-support-in-a-conda-environment/59208/5. To try it out:; * Build the content of `roofit/batchcompute` in this repository, replacing the CMakeLists.txt file with the code listing below:; * Build the project. You should now have a `libRooBatchCompute_CUDA.so` file. Make sure it's in the `LD_LIBRARY_PATH`; * Your fits should now work with `EvalBackend(""cuda"")` (see also the [RooAbsPdf](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de) documentation about this). ```cmake; # Adapt to your system; set (CMAKE_CUDA_ARCHITECTURES ""native"" CACHE STRING """" FORCE); set (CMAKE_CUDA_HOST_COMPILER /usr/bin/g++-13 CACHE STRING """" FORCE); set (CMAKE_CUDA_COMPILER ""/opt/cuda/bin/nvcc"" CACHE STRING """" FORCE). find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}). cmake_minimum_required(VERSION 3.14); project(batchcompute-cuda LANGUAGES CUDA). # in the src directory, put all files from roofit/batchcompute/src and roofit/batchcompute/res; add_library(RooBatchCompute_CUDA SHARED src/RooBatchCompute.cu src/ComputeFunctions.cu src/CudaInterface.cu); target_include_directories(RooBatchCompute_CUDA PRIVATE src res). target_compile_options(RooBatchCompute_CUDA PRIVATE -lineinfo --expt-relaxed-constexpr); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15775
https://github.com/root-project/root/pull/15775:770,Energy Efficiency,Adapt,Adapt,770,"This PR is a follow-up on https://github.com/root-project/root/pull/15746. Make it possible to build RooFit CUDA evaluation library standalone to use in existing ROOT release, as discussed on the forum:; https://root-forum.cern.ch/t/installing-root-with-cuda-support-in-a-conda-environment/59208/5. To try it out:; * Build the content of `roofit/batchcompute` in this repository, replacing the CMakeLists.txt file with the code listing below:; * Build the project. You should now have a `libRooBatchCompute_CUDA.so` file. Make sure it's in the `LD_LIBRARY_PATH`; * Your fits should now work with `EvalBackend(""cuda"")` (see also the [RooAbsPdf](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de) documentation about this). ```cmake; # Adapt to your system; set (CMAKE_CUDA_ARCHITECTURES ""native"" CACHE STRING """" FORCE); set (CMAKE_CUDA_HOST_COMPILER /usr/bin/g++-13 CACHE STRING """" FORCE); set (CMAKE_CUDA_COMPILER ""/opt/cuda/bin/nvcc"" CACHE STRING """" FORCE). find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}). cmake_minimum_required(VERSION 3.14); project(batchcompute-cuda LANGUAGES CUDA). # in the src directory, put all files from roofit/batchcompute/src and roofit/batchcompute/res; add_library(RooBatchCompute_CUDA SHARED src/RooBatchCompute.cu src/ComputeFunctions.cu src/CudaInterface.cu); target_include_directories(RooBatchCompute_CUDA PRIVATE src res). target_compile_options(RooBatchCompute_CUDA PRIVATE -lineinfo --expt-relaxed-constexpr); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15775
https://github.com/root-project/root/pull/15775:770,Modifiability,Adapt,Adapt,770,"This PR is a follow-up on https://github.com/root-project/root/pull/15746. Make it possible to build RooFit CUDA evaluation library standalone to use in existing ROOT release, as discussed on the forum:; https://root-forum.cern.ch/t/installing-root-with-cuda-support-in-a-conda-environment/59208/5. To try it out:; * Build the content of `roofit/batchcompute` in this repository, replacing the CMakeLists.txt file with the code listing below:; * Build the project. You should now have a `libRooBatchCompute_CUDA.so` file. Make sure it's in the `LD_LIBRARY_PATH`; * Your fits should now work with `EvalBackend(""cuda"")` (see also the [RooAbsPdf](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de) documentation about this). ```cmake; # Adapt to your system; set (CMAKE_CUDA_ARCHITECTURES ""native"" CACHE STRING """" FORCE); set (CMAKE_CUDA_HOST_COMPILER /usr/bin/g++-13 CACHE STRING """" FORCE); set (CMAKE_CUDA_COMPILER ""/opt/cuda/bin/nvcc"" CACHE STRING """" FORCE). find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}). cmake_minimum_required(VERSION 3.14); project(batchcompute-cuda LANGUAGES CUDA). # in the src directory, put all files from roofit/batchcompute/src and roofit/batchcompute/res; add_library(RooBatchCompute_CUDA SHARED src/RooBatchCompute.cu src/ComputeFunctions.cu src/CudaInterface.cu); target_include_directories(RooBatchCompute_CUDA PRIVATE src res). target_compile_options(RooBatchCompute_CUDA PRIVATE -lineinfo --expt-relaxed-constexpr); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15775
https://github.com/root-project/root/pull/15775:831,Performance,CACHE,CACHE,831,"This PR is a follow-up on https://github.com/root-project/root/pull/15746. Make it possible to build RooFit CUDA evaluation library standalone to use in existing ROOT release, as discussed on the forum:; https://root-forum.cern.ch/t/installing-root-with-cuda-support-in-a-conda-environment/59208/5. To try it out:; * Build the content of `roofit/batchcompute` in this repository, replacing the CMakeLists.txt file with the code listing below:; * Build the project. You should now have a `libRooBatchCompute_CUDA.so` file. Make sure it's in the `LD_LIBRARY_PATH`; * Your fits should now work with `EvalBackend(""cuda"")` (see also the [RooAbsPdf](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de) documentation about this). ```cmake; # Adapt to your system; set (CMAKE_CUDA_ARCHITECTURES ""native"" CACHE STRING """" FORCE); set (CMAKE_CUDA_HOST_COMPILER /usr/bin/g++-13 CACHE STRING """" FORCE); set (CMAKE_CUDA_COMPILER ""/opt/cuda/bin/nvcc"" CACHE STRING """" FORCE). find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}). cmake_minimum_required(VERSION 3.14); project(batchcompute-cuda LANGUAGES CUDA). # in the src directory, put all files from roofit/batchcompute/src and roofit/batchcompute/res; add_library(RooBatchCompute_CUDA SHARED src/RooBatchCompute.cu src/ComputeFunctions.cu src/CudaInterface.cu); target_include_directories(RooBatchCompute_CUDA PRIVATE src res). target_compile_options(RooBatchCompute_CUDA PRIVATE -lineinfo --expt-relaxed-constexpr); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15775
https://github.com/root-project/root/pull/15775:901,Performance,CACHE,CACHE,901,"This PR is a follow-up on https://github.com/root-project/root/pull/15746. Make it possible to build RooFit CUDA evaluation library standalone to use in existing ROOT release, as discussed on the forum:; https://root-forum.cern.ch/t/installing-root-with-cuda-support-in-a-conda-environment/59208/5. To try it out:; * Build the content of `roofit/batchcompute` in this repository, replacing the CMakeLists.txt file with the code listing below:; * Build the project. You should now have a `libRooBatchCompute_CUDA.so` file. Make sure it's in the `LD_LIBRARY_PATH`; * Your fits should now work with `EvalBackend(""cuda"")` (see also the [RooAbsPdf](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de) documentation about this). ```cmake; # Adapt to your system; set (CMAKE_CUDA_ARCHITECTURES ""native"" CACHE STRING """" FORCE); set (CMAKE_CUDA_HOST_COMPILER /usr/bin/g++-13 CACHE STRING """" FORCE); set (CMAKE_CUDA_COMPILER ""/opt/cuda/bin/nvcc"" CACHE STRING """" FORCE). find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}). cmake_minimum_required(VERSION 3.14); project(batchcompute-cuda LANGUAGES CUDA). # in the src directory, put all files from roofit/batchcompute/src and roofit/batchcompute/res; add_library(RooBatchCompute_CUDA SHARED src/RooBatchCompute.cu src/ComputeFunctions.cu src/CudaInterface.cu); target_include_directories(RooBatchCompute_CUDA PRIVATE src res). target_compile_options(RooBatchCompute_CUDA PRIVATE -lineinfo --expt-relaxed-constexpr); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15775
https://github.com/root-project/root/pull/15775:971,Performance,CACHE,CACHE,971,"This PR is a follow-up on https://github.com/root-project/root/pull/15746. Make it possible to build RooFit CUDA evaluation library standalone to use in existing ROOT release, as discussed on the forum:; https://root-forum.cern.ch/t/installing-root-with-cuda-support-in-a-conda-environment/59208/5. To try it out:; * Build the content of `roofit/batchcompute` in this repository, replacing the CMakeLists.txt file with the code listing below:; * Build the project. You should now have a `libRooBatchCompute_CUDA.so` file. Make sure it's in the `LD_LIBRARY_PATH`; * Your fits should now work with `EvalBackend(""cuda"")` (see also the [RooAbsPdf](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de) documentation about this). ```cmake; # Adapt to your system; set (CMAKE_CUDA_ARCHITECTURES ""native"" CACHE STRING """" FORCE); set (CMAKE_CUDA_HOST_COMPILER /usr/bin/g++-13 CACHE STRING """" FORCE); set (CMAKE_CUDA_COMPILER ""/opt/cuda/bin/nvcc"" CACHE STRING """" FORCE). find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}). cmake_minimum_required(VERSION 3.14); project(batchcompute-cuda LANGUAGES CUDA). # in the src directory, put all files from roofit/batchcompute/src and roofit/batchcompute/res; add_library(RooBatchCompute_CUDA SHARED src/RooBatchCompute.cu src/ComputeFunctions.cu src/CudaInterface.cu); target_include_directories(RooBatchCompute_CUDA PRIVATE src res). target_compile_options(RooBatchCompute_CUDA PRIVATE -lineinfo --expt-relaxed-constexpr); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15775
https://github.com/root-project/root/pull/15776:253,Deployability,update,updated,253,"# This Pull request:; uses `RNTuple::fMaxKeySize` to split any payload larger than that into multiple chunks, each backed by a TKey. These keys are then read back as a single object. Depends on #15869. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15776
https://github.com/root-project/root/pull/15776:183,Integrability,Depend,Depends,183,"# This Pull request:; uses `RNTuple::fMaxKeySize` to split any payload larger than that into multiple chunks, each backed by a TKey. These keys are then read back as a single object. Depends on #15869. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15776
https://github.com/root-project/root/pull/15776:223,Testability,test,tested,223,"# This Pull request:; uses `RNTuple::fMaxKeySize` to split any payload larger than that into multiple chunks, each backed by a TKey. These keys are then read back as a single object. Depends on #15869. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15776
https://github.com/root-project/root/pull/15777:178,Deployability,patch,patch,178,Fixes #15703. The second commit adds a test to check that there is no memory increase using the reproducer from the linked issue. @guitargeek let me know how I should generate a patch to keep track of this change w.r.t. CPyCPPyy,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:39,Testability,test,test,39,Fixes #15703. The second commit adds a test to check that there is no memory increase using the reproducer from the linked issue. @guitargeek let me know how I should generate a patch to keep track of this change w.r.t. CPyCPPyy,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/issues/15778:176,Availability,avail,available,176,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:1110,Deployability,Install,Installation,1110,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:84,Performance,optimiz,optimizations,84,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:118,Performance,Optimiz,Optimization,118,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:244,Performance,optimiz,optimizations,244,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:268,Performance,optimiz,optimizing,268,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:340,Performance,optimiz,optimize,340,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:411,Performance,perform,performance,411,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:462,Performance,Perform,Perform,462,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:627,Performance,perform,performance,627,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:751,Performance,Perform,Perform,751,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:777,Performance,Optimiz,Optimization,777,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:474,Testability,benchmark,benchmarks,474,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:759,Testability,test,testing,759,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:111,Usability,Guid,Guided,111,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/pull/15780:155,Deployability,update,updated,155,# This Pull request:. ## Changes or fixes:. Add back the immediate return whne n = 0 in WriteFastArray. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15738,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15780
https://github.com/root-project/root/pull/15780:125,Testability,test,tested,125,# This Pull request:. ## Changes or fixes:. Add back the immediate return whne n = 0 in WriteFastArray. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15738,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15780
https://github.com/root-project/root/pull/15781:178,Deployability,update,updated,178,# This Pull request:. Implements a numerically stable algorithm for Invariant Masses computation in single precision for RVec. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes [#9646](https://github.com/root-project/root/issues/9646),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15781
https://github.com/root-project/root/pull/15781:148,Testability,test,tested,148,# This Pull request:. Implements a numerically stable algorithm for Invariant Masses computation in single precision for RVec. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes [#9646](https://github.com/root-project/root/issues/9646),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15781
https://github.com/root-project/root/issues/15783:248,Deployability,Install,Installation,248,### Check duplicate issues. - [x] Checked for duplicates. ### Description. The DAOS backend should store the maximum cage size in the anchor. That will make reading individual sealed pages easier. ### Reproducer. n/a. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15783
https://github.com/root-project/root/pull/15784:166,Deployability,update,updated,166,## Changes or fixes:; Fixes build of ntuple tests which sometimes break due to RIO not being regenerated properly. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15784
https://github.com/root-project/root/pull/15784:44,Testability,test,tests,44,## Changes or fixes:; Fixes build of ntuple tests which sometimes break due to RIO not being regenerated properly. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15784
https://github.com/root-project/root/pull/15784:136,Testability,test,tested,136,## Changes or fixes:; Fixes build of ntuple tests which sometimes break due to RIO not being regenerated properly. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15784
https://github.com/root-project/root/pull/15786:312,Deployability,update,updated,312,"All columns created during late model extension need to have their page and column ranges synthesized during reading. However, only *deferred* columns (i.e., principal columns of top-level fields) also require zero pages. This change aims to make this distinction more clear. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15786
https://github.com/root-project/root/pull/15786:282,Testability,test,tested,282,"All columns created during late model extension need to have their page and column ranges synthesized during reading. However, only *deferred* columns (i.e., principal columns of top-level fields) also require zero pages. This change aims to make this distinction more clear. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15786
https://github.com/root-project/root/pull/15786:269,Usability,clear,clear,269,"All columns created during late model extension need to have their page and column ranges synthesized during reading. However, only *deferred* columns (i.e., principal columns of top-level fields) also require zero pages. This change aims to make this distinction more clear. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15786
https://github.com/root-project/root/pull/15787:18,Availability,error,error,18,Fix the following error with Visual Studio 2019:; ```; error C2440: 'initializing': cannot convert from 'int' to 'std::byte'; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15787
https://github.com/root-project/root/pull/15787:55,Availability,error,error,55,Fix the following error with Visual Studio 2019:; ```; error C2440: 'initializing': cannot convert from 'int' to 'std::byte'; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15787
https://github.com/root-project/root/pull/15788:89,Deployability,patch,patch,89,Synchronizes with this upstream commit and directly makes use of the new; API to avoid a patch:; https://github.com/wlav/CPyCppyy/commit/993b17bce2f43516a85931b40035ac7252e2ab7e,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:0,Integrability,Synchroniz,Synchronizes,0,Synchronizes with this upstream commit and directly makes use of the new; API to avoid a patch:; https://github.com/wlav/CPyCppyy/commit/993b17bce2f43516a85931b40035ac7252e2ab7e,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:81,Safety,avoid,avoid,81,Synchronizes with this upstream commit and directly makes use of the new; API to avoid a patch:; https://github.com/wlav/CPyCppyy/commit/993b17bce2f43516a85931b40035ac7252e2ab7e,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15789:373,Integrability,Depend,Depends,373,# This Pull request:. Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes. Still some commit cleanup todo. Depends on #15767,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15789
https://github.com/root-project/root/pull/15789:156,Performance,Load,LoadSealedPage,156,# This Pull request:. Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes. Still some commit cleanup todo. Depends on #15767,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15789
https://github.com/root-project/root/pull/15789:46,Security,checksum,checksums,46,# This Pull request:. Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes. Still some commit cleanup todo. Depends on #15767,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15789
https://github.com/root-project/root/pull/15789:60,Security,checksum,checksum,60,# This Pull request:. Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes. Still some commit cleanup todo. Depends on #15767,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15789
https://github.com/root-project/root/pull/15789:97,Security,checksum,checksums,97,# This Pull request:. Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes. Still some commit cleanup todo. Depends on #15767,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15789
https://github.com/root-project/root/pull/15789:283,Security,checksum,checksum,283,# This Pull request:. Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes. Still some commit cleanup todo. Depends on #15767,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15789
https://github.com/root-project/root/issues/15791:525,Deployability,Install,Installation,525,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you go to: https://root.cern/js/latest/examples.htm#misc_profile2d and select ""TEXT"" for the ""Draw with"" option, instead of drawing the bin contents, it will draw the bin entries. . While I'm here I will perhaps say it would be nice if it were possible to draw the bin entries for tprofiles and tprofile2d, so while this is a bug, adding a way to do the entries would still be appreciated. ### Reproducer. See above. ### ROOT version. latest. ### Installation method. pre-built. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15791
https://github.com/root-project/root/issues/15792:655,Deployability,INSTALL,INSTALL,655,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When a dictionary is generated for a library **target** called `foo`, whose `OUTPUT_NAME` is set to **bar**, `root_generate_dictionary` produces dictionary files called `libfoo_rdict.pcm` and `libfoo.rootmap`. ### Reproducer. `ROOTBug.cc` and `LinkDef.h` are both empty files. Contents of `CMakeLists.txt`:; ```cmake; cmake_minimum_required(VERSION 3.16 FATAL_ERROR); project(ROOTBug); find_package(ROOT 6.28 REQUIRED). # https://github.com/root-project/root/issues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ----------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:960,Deployability,install,install,960," duplicates. ### Description. When a dictionary is generated for a library **target** called `foo`, whose `OUTPUT_NAME` is set to **bar**, `root_generate_dictionary` produces dictionary files called `libfoo_rdict.pcm` and `libfoo.rootmap`. ### Reproducer. `ROOTBug.cc` and `LinkDef.h` are both empty files. Contents of `CMakeLists.txt`:; ```cmake; cmake_minimum_required(VERSION 3.16 FATAL_ERROR); project(ROOTBug); find_package(ROOT 6.28 REQUIRED). # https://github.com/root-project/root/issues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; -------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1053,Deployability,install,install,1053," duplicates. ### Description. When a dictionary is generated for a library **target** called `foo`, whose `OUTPUT_NAME` is set to **bar**, `root_generate_dictionary` produces dictionary files called `libfoo_rdict.pcm` and `libfoo.rootmap`. ### Reproducer. `ROOTBug.cc` and `LinkDef.h` are both empty files. Contents of `CMakeLists.txt`:; ```cmake; cmake_minimum_required(VERSION 3.16 FATAL_ERROR); project(ROOTBug); find_package(ROOT 6.28 REQUIRED). # https://github.com/root-project/root/issues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; -------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1093,Deployability,install,install,1093," duplicates. ### Description. When a dictionary is generated for a library **target** called `foo`, whose `OUTPUT_NAME` is set to **bar**, `root_generate_dictionary` produces dictionary files called `libfoo_rdict.pcm` and `libfoo.rootmap`. ### Reproducer. `ROOTBug.cc` and `LinkDef.h` are both empty files. Contents of `CMakeLists.txt`:; ```cmake; cmake_minimum_required(VERSION 3.16 FATAL_ERROR); project(ROOTBug); find_package(ROOT 6.28 REQUIRED). # https://github.com/root-project/root/issues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; -------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1365,Deployability,Install,Install,1365,"ts of `CMakeLists.txt`:; ```cmake; cmake_minimum_required(VERSION 3.16 FATAL_ERROR); project(ROOTBug); find_package(ROOT 6.28 REQUIRED). # https://github.com/root-project/root/issues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1392,Deployability,Install,Install,1392,"ject(ROOTBug); find_package(ROOT 6.28 REQUIRED). # https://github.com/root-project/root/issues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1400,Deployability,configurat,configuration,1400,"ject(ROOTBug); find_package(ROOT 6.28 REQUIRED). # https://github.com/root-project/root/issues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1422,Deployability,Install,Installing,1422,"ject(ROOTBug); find_package(ROOT 6.28 REQUIRED). # https://github.com/root-project/root/issues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1475,Deployability,install,install,1475,"ject(ROOTBug); find_package(ROOT 6.28 REQUIRED). # https://github.com/root-project/root/issues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1514,Deployability,Install,Installing,1514,"ssues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. LCG 104. ### Operating system. CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1567,Deployability,install,install,1567,"ssues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. LCG 104. ### Operating system. CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1604,Deployability,Install,Installing,1604,"ssues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. LCG 104. ### Operating system. CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1657,Deployability,install,install,1657,"ssues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. LCG 104. ### Operating system. CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1753,Deployability,install,install,1753,"ssues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. LCG 104. ### Operating system. CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1816,Deployability,install,install,1816,"ssues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. LCG 104. ### Operating system. CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:2436,Deployability,Install,Installation,2436,"ssues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. LCG 104. ### Operating system. CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1400,Modifiability,config,configuration,1400,"ject(ROOTBug); find_package(ROOT 6.28 REQUIRED). # https://github.com/root-project/root/issues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1469,Testability,test,tests,1469,"ject(ROOTBug); find_package(ROOT 6.28 REQUIRED). # https://github.com/root-project/root/issues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1561,Testability,test,tests,1561,"ssues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. LCG 104. ### Operating system. CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1651,Testability,test,tests,1651,"ssues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. LCG 104. ### Operating system. CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/issues/15792:1747,Testability,test,tests,1747,"ssues/8308#issuecomment-1143791946; set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""). # another bug... INSTALL FILES given no destination!; include(GNUInstallDirs). add_library(ROOTBug SHARED ROOTBug.cc); target_link_libraries(ROOTBug PRIVATE ROOT::Core); set_target_properties(ROOTBug PROPERTIES OUTPUT_NAME ROOTWorks) # Important!; root_generate_dictionary(ROOTWorksDict MODULE ROOTBug LINKDEF LinkDef.h). install(TARGETS ROOTBug); ```; Build commands:; ```; $ cmake -B build -DCMAKE_INSTALL_PREFIX=install; $ cmake --build build --target install; [ 25%] Generating ROOTBugDict.cxx, libROOTBug_rdict.pcm, libROOTBug.rootmap; [ 50%] Building CXX object CMakeFiles/ROOTBugDict.dir/ROOTBugDict.cxx.o; [ 50%] Built target ROOTBugDict; [ 75%] Linking CXX shared library libROOTWorks.so; [100%] Built target ROOTBug; Install the project...; -- Install configuration: """"; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug_rdict.pcm; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTBug.rootmap; -- Installing: /nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so; -- Set runtime path of ""/nfs/dust/cms/user/mourelou/darwin/tests/install/lib64/libROOTWorks.so"" to """"; ```; Then do:; ```; $ ls install/lib*; libROOTBug_rdict.pcm libROOTBug.rootmap libROOTWorks.so; ```; Notice how the library name is different from the dictionary name. ### ROOT version. LCG 104; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. LCG 104. ### Operating system. CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15792
https://github.com/root-project/root/pull/15794:45,Testability,test,tests,45,# This Pull request:; clang-formats some RDF tests (that will need to be modified by a later PR),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15794
https://github.com/root-project/root/pull/15795:489,Performance,perform,performance,489,"When compiling a RooSimultaneous for a given normalization set, we can only prefix the observables after everything related the compiling of the compute graph for the normalization set is done. This is because of a subtlety in conditional RooProdPdfs, which stores the normalization sets for the individual pdfs in RooArgSets that are disconnected from the computation graph, so we have no control over them. An alternative would be to use recursive server re-direction, but this has more performance overhead. Closes #15751 and fixes the CMS Run 1 Higgs combination with the new NLL evaluation backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15795
https://github.com/root-project/root/pull/15797:64,Availability,error,error,64,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:122,Availability,Error,Error,122,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:406,Availability,error,error,406,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:614,Availability,error,error,614,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:1241,Deployability,update,updated,1241,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:1402,Deployability,update,updates,1402,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:220,Modifiability,enhance,enhanced,220,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:516,Modifiability,refactor,refactorings,516,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:798,Modifiability,refactor,refactoring,798,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:181,Testability,log,logEvalError,181,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:960,Testability,test,tests,960,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:1034,Testability,test,testing,1034,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:1210,Testability,test,tested,1210,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15798:646,Availability,error,errors,646,"# This Pull request:. ## Changes or fixes:. For compatibility with Python 3.13. See: https://docs.python.org/3.13/whatsnew/3.13.html. From the above page:. * Classes have a new __firstlineno__ attribute, populated by the compiler, with the line number of the first line of the class definition. (Contributed by Serhiy Storchaka in gh-118465.). * Classes have a new __static_attributes__ attribute, populated by the compiler, with a tuple of names of attributes of this class which are accessed through self.X from any function in its body. (Contributed by Irit Katriel in gh-115775.). Without adding the new attributes to the blacklist there are errors:. AttributeError: 'int' object attribute 'doc' is read-only from the __firstlineno__ attribute. AttributeError: 'tuple' object attribute 'doc' is read-only from the __static_attributes__ attribute. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15430",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15798
https://github.com/root-project/root/pull/15798:902,Deployability,update,updated,902,"# This Pull request:. ## Changes or fixes:. For compatibility with Python 3.13. See: https://docs.python.org/3.13/whatsnew/3.13.html. From the above page:. * Classes have a new __firstlineno__ attribute, populated by the compiler, with the line number of the first line of the class definition. (Contributed by Serhiy Storchaka in gh-118465.). * Classes have a new __static_attributes__ attribute, populated by the compiler, with a tuple of names of attributes of this class which are accessed through self.X from any function in its body. (Contributed by Irit Katriel in gh-115775.). Without adding the new attributes to the blacklist there are errors:. AttributeError: 'int' object attribute 'doc' is read-only from the __firstlineno__ attribute. AttributeError: 'tuple' object attribute 'doc' is read-only from the __static_attributes__ attribute. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15430",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15798
https://github.com/root-project/root/pull/15798:485,Security,access,accessed,485,"# This Pull request:. ## Changes or fixes:. For compatibility with Python 3.13. See: https://docs.python.org/3.13/whatsnew/3.13.html. From the above page:. * Classes have a new __firstlineno__ attribute, populated by the compiler, with the line number of the first line of the class definition. (Contributed by Serhiy Storchaka in gh-118465.). * Classes have a new __static_attributes__ attribute, populated by the compiler, with a tuple of names of attributes of this class which are accessed through self.X from any function in its body. (Contributed by Irit Katriel in gh-115775.). Without adding the new attributes to the blacklist there are errors:. AttributeError: 'int' object attribute 'doc' is read-only from the __firstlineno__ attribute. AttributeError: 'tuple' object attribute 'doc' is read-only from the __static_attributes__ attribute. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15430",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15798
https://github.com/root-project/root/pull/15798:872,Testability,test,tested,872,"# This Pull request:. ## Changes or fixes:. For compatibility with Python 3.13. See: https://docs.python.org/3.13/whatsnew/3.13.html. From the above page:. * Classes have a new __firstlineno__ attribute, populated by the compiler, with the line number of the first line of the class definition. (Contributed by Serhiy Storchaka in gh-118465.). * Classes have a new __static_attributes__ attribute, populated by the compiler, with a tuple of names of attributes of this class which are accessed through self.X from any function in its body. (Contributed by Irit Katriel in gh-115775.). Without adding the new attributes to the blacklist there are errors:. AttributeError: 'int' object attribute 'doc' is read-only from the __firstlineno__ attribute. AttributeError: 'tuple' object attribute 'doc' is read-only from the __static_attributes__ attribute. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15430",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15798
https://github.com/root-project/root/issues/15799:3546,Availability,error,errors,3546,"ild/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:481; #14 0x00007f3f00eba9fd in CPyCppyy::tpp_vectorcall (pytmpl=0x7f3e9b93ef70, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /usr/include/c++/14/bits/shared_ptr_base.h:1666; #15 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #16 0x00007f3f141ca25d in method_vectorcall () from /lib64/libpython3.13.so.1.0; #17 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #18 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #19 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #20 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #21 0x00007f3f14173ef1 in _PyEval_EvalFrameDefault () from /lib64/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:9404,Availability,error,errors,9404,"ild/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:481; #14 0x00007f3f00eba9fd in CPyCppyy::tpp_vectorcall (pytmpl=0x7f3e9b93ef70, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /usr/include/c++/14/bits/shared_ptr_base.h:1666; #15 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #16 0x00007f3f141ca25d in method_vectorcall () from /lib64/libpython3.13.so.1.0; #17 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #18 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #19 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #20 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #21 0x00007f3f14173ef1 in _PyEval_EvalFrameDefault () from /lib64/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:15860,Availability,error,errors,15860,"ild/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:481; #14 0x00007f3f00eba9fd in CPyCppyy::tpp_vectorcall (pytmpl=0x7f3e9b93ef70, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /usr/include/c++/14/bits/shared_ptr_base.h:1666; #15 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #16 0x00007f3f141ca25d in method_vectorcall () from /lib64/libpython3.13.so.1.0; #17 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #18 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #19 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #20 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #21 0x00007f3f14173ef1 in _PyEval_EvalFrameDefault () from /lib64/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:21718,Availability,error,errors,21718,"ild/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:481; #14 0x00007f3f00eba9fd in CPyCppyy::tpp_vectorcall (pytmpl=0x7f3e9b93ef70, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /usr/include/c++/14/bits/shared_ptr_base.h:1666; #15 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #16 0x00007f3f141ca25d in method_vectorcall () from /lib64/libpython3.13.so.1.0; #17 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #18 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #19 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #20 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #21 0x00007f3f14173ef1 in _PyEval_EvalFrameDefault () from /lib64/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:25306,Availability,Error,Error,25306,hod_vectorcall () from /lib64/libpython3.13.so.1.0; #35 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #36 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #37 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #38 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #39 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #40 0x00007f3f141a5d0b in slot_tp_init () from /lib64/libpython3.13.so.1.0; #41 0x00007f3f1415e9c5 in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #42 0x00007f3f1417d188 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #43 0x00007f3f1423f8eb in PyEval_EvalCode () from /lib64/libpython3.13.so.1.0; #44 0x00007f3f1425afe4 in builtin_exec () from /lib64/libpython3.13.so.1.0; #45 0x00007f3f1418e3e7 in cfunction_vectorcall_FASTCALL_KEYWORDS () from /lib64/libpython3.13.so.1.0; #46 0x00007f3f14160f57 in PyObject_Vectorcall () from /lib64/libpython3.13.so.1.0; #47 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #48 0x00007f3f142797ed in pymain_run_module () from /lib64/libpython3.13.so.1.0; #49 0x00007f3f1427500c in Py_RunMain () from /lib64/libpython3.13.so.1.0; #50 0x00007f3f1422bcbc in Py_BytesMain () from /lib64/libpython3.13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. CMake Error at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 129; ```. ### Reproducer. Compile root with Python 3.13. Run tests. ### ROOT version. 6.32.00. ### Installation method. RPM package build from source. ### Operating system. Fedora 41 (rawhide). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:25420,Availability,error,error,25420,hod_vectorcall () from /lib64/libpython3.13.so.1.0; #35 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #36 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #37 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #38 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #39 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #40 0x00007f3f141a5d0b in slot_tp_init () from /lib64/libpython3.13.so.1.0; #41 0x00007f3f1415e9c5 in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #42 0x00007f3f1417d188 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #43 0x00007f3f1423f8eb in PyEval_EvalCode () from /lib64/libpython3.13.so.1.0; #44 0x00007f3f1425afe4 in builtin_exec () from /lib64/libpython3.13.so.1.0; #45 0x00007f3f1418e3e7 in cfunction_vectorcall_FASTCALL_KEYWORDS () from /lib64/libpython3.13.so.1.0; #46 0x00007f3f14160f57 in PyObject_Vectorcall () from /lib64/libpython3.13.so.1.0; #47 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #48 0x00007f3f142797ed in pymain_run_module () from /lib64/libpython3.13.so.1.0; #49 0x00007f3f1427500c in Py_RunMain () from /lib64/libpython3.13.so.1.0; #50 0x00007f3f1422bcbc in Py_BytesMain () from /lib64/libpython3.13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. CMake Error at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 129; ```. ### Reproducer. Compile root with Python 3.13. Run tests. ### ROOT version. 6.32.00. ### Installation method. RPM package build from source. ### Operating system. Fedora 41 (rawhide). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:25531,Deployability,Install,Installation,25531,hod_vectorcall () from /lib64/libpython3.13.so.1.0; #35 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #36 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #37 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #38 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #39 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #40 0x00007f3f141a5d0b in slot_tp_init () from /lib64/libpython3.13.so.1.0; #41 0x00007f3f1415e9c5 in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #42 0x00007f3f1417d188 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #43 0x00007f3f1423f8eb in PyEval_EvalCode () from /lib64/libpython3.13.so.1.0; #44 0x00007f3f1425afe4 in builtin_exec () from /lib64/libpython3.13.so.1.0; #45 0x00007f3f1418e3e7 in cfunction_vectorcall_FASTCALL_KEYWORDS () from /lib64/libpython3.13.so.1.0; #46 0x00007f3f14160f57 in PyObject_Vectorcall () from /lib64/libpython3.13.so.1.0; #47 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #48 0x00007f3f142797ed in pymain_run_module () from /lib64/libpython3.13.so.1.0; #49 0x00007f3f1427500c in Py_RunMain () from /lib64/libpython3.13.so.1.0; #50 0x00007f3f1422bcbc in Py_BytesMain () from /lib64/libpython3.13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. CMake Error at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 129; ```. ### Reproducer. Compile root with Python 3.13. Run tests. ### ROOT version. 6.32.00. ### Installation method. RPM package build from source. ### Operating system. Fedora 41 (rawhide). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:25409,Integrability,message,message,25409,hod_vectorcall () from /lib64/libpython3.13.so.1.0; #35 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #36 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #37 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #38 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #39 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #40 0x00007f3f141a5d0b in slot_tp_init () from /lib64/libpython3.13.so.1.0; #41 0x00007f3f1415e9c5 in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #42 0x00007f3f1417d188 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #43 0x00007f3f1423f8eb in PyEval_EvalCode () from /lib64/libpython3.13.so.1.0; #44 0x00007f3f1425afe4 in builtin_exec () from /lib64/libpython3.13.so.1.0; #45 0x00007f3f1418e3e7 in cfunction_vectorcall_FASTCALL_KEYWORDS () from /lib64/libpython3.13.so.1.0; #46 0x00007f3f14160f57 in PyObject_Vectorcall () from /lib64/libpython3.13.so.1.0; #47 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #48 0x00007f3f142797ed in pymain_run_module () from /lib64/libpython3.13.so.1.0; #49 0x00007f3f1427500c in Py_RunMain () from /lib64/libpython3.13.so.1.0; #50 0x00007f3f1422bcbc in Py_BytesMain () from /lib64/libpython3.13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. CMake Error at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 129; ```. ### Reproducer. Compile root with Python 3.13. Run tests. ### ROOT version. 6.32.00. ### Installation method. RPM package build from source. ### Operating system. Fedora 41 (rawhide). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:7327,Modifiability,variab,variable,7327,"from /lib64/libpython3.13.so.1.0; #44 0x00007f3f1425afe4 in builtin_exec () from /lib64/libpython3.13.so.1.0; #45 0x00007f3f1418e3e7 in cfunction_vectorcall_FASTCALL_KEYWORDS () from /lib64/libpython3.13.so.1.0; #46 0x00007f3f14160f57 in PyObject_Vectorcall () from /lib64/libpython3.13.so.1.0; #47 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #48 0x00007f3f142797ed in pymain_run_module () from /lib64/libpython3.13.so.1.0; #49 0x00007f3f1427500c in Py_RunMain () from /lib64/libpython3.13.so.1.0; #50 0x00007f3f1422bcbc in Py_BytesMain () from /lib64/libpython3.13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:19641,Modifiability,variab,variable,19641,"from /lib64/libpython3.13.so.1.0; #44 0x00007f3f1425afe4 in builtin_exec () from /lib64/libpython3.13.so.1.0; #45 0x00007f3f1418e3e7 in cfunction_vectorcall_FASTCALL_KEYWORDS () from /lib64/libpython3.13.so.1.0; #46 0x00007f3f14160f57 in PyObject_Vectorcall () from /lib64/libpython3.13.so.1.0; #47 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #48 0x00007f3f142797ed in pymain_run_module () from /lib64/libpython3.13.so.1.0; #49 0x00007f3f1427500c in Py_RunMain () from /lib64/libpython3.13.so.1.0; #50 0x00007f3f1422bcbc in Py_BytesMain () from /lib64/libpython3.13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:1093,Performance,optimiz,optimized,1093," pyunittests-pyroot-pyz-ttree-setbranchaddress test segfaults with Python 3.13:; ```; 41/1342 Test #31: pyunittests-pyroot-pyz-ttree-setbranchaddress .............................***Failed 57.97 sec; test_array_branch (ttree_setbranchaddress.TTreeSetBranchAddress.test_array_branch) ... ok; test_basic_type_branch (ttree_setbranchaddress.TTreeSetBranchAddress.test_basic_type_branch) ... ok; test_class_with_array_member (ttree_setbranchaddress.TTreeSetBranchAddress.test_class_with_array_member) ... ok; test_fallback_case (ttree_setbranchaddress.TTreeSetBranchAddress.test_fallback_case) ... *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f13f12e87 in wait4 () from /lib64/libc.so.6; #1 0x00007f3f13e664fb in do_system () from /lib64/libc.so.6; #2 0x00007f3f13322cf0 in TUnixSystem::Exec (this=0x5619b6bb82b0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #3 TUnixSystem::StackTrace (this=0x5619b6bb82b0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #4 0x00007f3f13511c5f in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:1612,Performance,optimiz,optimized,1612,"se (ttree_setbranchaddress.TTreeSetBranchAddress.test_fallback_case) ... *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f13f12e87 in wait4 () from /lib64/libc.so.6; #1 0x00007f3f13e664fb in do_system () from /lib64/libc.so.6; #2 0x00007f3f13322cf0 in TUnixSystem::Exec (this=0x5619b6bb82b0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #3 TUnixSystem::StackTrace (this=0x5619b6bb82b0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #4 0x00007f3f13511c5f in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:2067,Performance,optimiz,optimized,2067,"00007f3f13322cf0 in TUnixSystem::Exec (this=0x5619b6bb82b0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #3 TUnixSystem::StackTrace (this=0x5619b6bb82b0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #4 0x00007f3f13511c5f in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:2354,Performance,optimiz,optimized,2354,"xSystem.cxx:2442; #4 0x00007f3f13511c5f in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:2633,Performance,optimiz,optimized,2633,", sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:2657,Performance,optimiz,optimized,2657,", sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:2679,Performance,optimiz,optimized,2679,", sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:7925,Performance,optimiz,optimized,7925,".13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:8212,Performance,optimiz,optimized,8212," you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:8491,Performance,optimiz,optimized,8491,"; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:8515,Performance,optimiz,optimized,8515,"; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:8537,Performance,optimiz,optimized,8537,"; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:13407,Performance,optimiz,optimized,13407,"ib64/libpython3.13.so.1.0; #47 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #48 0x00007f3f142797ed in pymain_run_module () from /lib64/libpython3.13.so.1.0; #49 0x00007f3f1427500c in Py_RunMain () from /lib64/libpython3.13.so.1.0; #50 0x00007f3f1422bcbc in Py_BytesMain () from /lib64/libpython3.13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f13f12e87 in wait4 () from /lib64/libc.so.6; #1 0x00007f3f13e664fb in do_system () from /lib64/libc.so.6; #2 0x00007f3f13322cf0 in TUnixSystem::Exec (this=0x5619b6bb82b0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #3 TUnixSystem::StackTrace (this=0x5619b6bb82b0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #4 0x00007f3f13511b7d in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:208; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:13926,Performance,optimiz,optimized,13926," _start (); ===========================================================. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f13f12e87 in wait4 () from /lib64/libc.so.6; #1 0x00007f3f13e664fb in do_system () from /lib64/libc.so.6; #2 0x00007f3f13322cf0 in TUnixSystem::Exec (this=0x5619b6bb82b0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #3 TUnixSystem::StackTrace (this=0x5619b6bb82b0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #4 0x00007f3f13511b7d in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:208; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:14381,Performance,optimiz,optimized,14381,"00007f3f13322cf0 in TUnixSystem::Exec (this=0x5619b6bb82b0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #3 TUnixSystem::StackTrace (this=0x5619b6bb82b0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #4 0x00007f3f13511b7d in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:208; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:14668,Performance,optimiz,optimized,14668,"xSystem.cxx:2442; #4 0x00007f3f13511b7d in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:208; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:14947,Performance,optimiz,optimized,14947,", sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:208; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:14971,Performance,optimiz,optimized,14971,", sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:208; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:14993,Performance,optimiz,optimized,14993,", sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:208; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:20239,Performance,optimiz,optimized,20239,".13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:20526,Performance,optimiz,optimized,20526," you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:20805,Performance,optimiz,optimized,20805,"; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:20829,Performance,optimiz,optimized,20829,"; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:20851,Performance,optimiz,optimized,20851,"; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:125,Testability,test,test,125,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pyunittests-pyroot-pyz-ttree-setbranchaddress test segfaults with Python 3.13:; ```; 41/1342 Test #31: pyunittests-pyroot-pyz-ttree-setbranchaddress .............................***Failed 57.97 sec; test_array_branch (ttree_setbranchaddress.TTreeSetBranchAddress.test_array_branch) ... ok; test_basic_type_branch (ttree_setbranchaddress.TTreeSetBranchAddress.test_basic_type_branch) ... ok; test_class_with_array_member (ttree_setbranchaddress.TTreeSetBranchAddress.test_class_with_array_member) ... ok; test_fallback_case (ttree_setbranchaddress.TTreeSetBranchAddress.test_fallback_case) ... *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f13f12e87 in wait4 () from /lib64/libc.so.6; #1 0x00007f3f13e664fb in do_system () from /lib64/libc.so.6; #2 0x00007f3f13322cf0 in TUnixSystem::Exec (this=0x5619b6bb82b0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #3 TUnixSystem::StackTrace (this=0x5619b6bb82b0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #4 0x00007f3f13511c5f in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:172,Testability,Test,Test,172,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pyunittests-pyroot-pyz-ttree-setbranchaddress test segfaults with Python 3.13:; ```; 41/1342 Test #31: pyunittests-pyroot-pyz-ttree-setbranchaddress .............................***Failed 57.97 sec; test_array_branch (ttree_setbranchaddress.TTreeSetBranchAddress.test_array_branch) ... ok; test_basic_type_branch (ttree_setbranchaddress.TTreeSetBranchAddress.test_basic_type_branch) ... ok; test_class_with_array_member (ttree_setbranchaddress.TTreeSetBranchAddress.test_class_with_array_member) ... ok; test_fallback_case (ttree_setbranchaddress.TTreeSetBranchAddress.test_fallback_case) ... *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f13f12e87 in wait4 () from /lib64/libc.so.6; #1 0x00007f3f13e664fb in do_system () from /lib64/libc.so.6; #2 0x00007f3f13322cf0 in TUnixSystem::Exec (this=0x5619b6bb82b0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #3 TUnixSystem::StackTrace (this=0x5619b6bb82b0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #4 0x00007f3f13511c5f in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:25493,Testability,test,tests,25493,hod_vectorcall () from /lib64/libpython3.13.so.1.0; #35 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #36 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #37 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #38 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #39 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #40 0x00007f3f141a5d0b in slot_tp_init () from /lib64/libpython3.13.so.1.0; #41 0x00007f3f1415e9c5 in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #42 0x00007f3f1417d188 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #43 0x00007f3f1423f8eb in PyEval_EvalCode () from /lib64/libpython3.13.so.1.0; #44 0x00007f3f1425afe4 in builtin_exec () from /lib64/libpython3.13.so.1.0; #45 0x00007f3f1418e3e7 in cfunction_vectorcall_FASTCALL_KEYWORDS () from /lib64/libpython3.13.so.1.0; #46 0x00007f3f14160f57 in PyObject_Vectorcall () from /lib64/libpython3.13.so.1.0; #47 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #48 0x00007f3f142797ed in pymain_run_module () from /lib64/libpython3.13.so.1.0; #49 0x00007f3f1427500c in Py_RunMain () from /lib64/libpython3.13.so.1.0; #50 0x00007f3f1422bcbc in Py_BytesMain () from /lib64/libpython3.13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. CMake Error at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 129; ```. ### Reproducer. Compile root with Python 3.13. Run tests. ### ROOT version. 6.32.00. ### Installation method. RPM package build from source. ### Operating system. Fedora 41 (rawhide). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/pull/15800:3,Safety,avoid,avoid,3,to avoid malformed names in the string passed to CPack for the creation of the binary archive.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15800
https://github.com/root-project/root/pull/15801:54,Energy Efficiency,monitor,monitor,54,when running GitHub actions. This is done in order to monitor how much time each individual step of the workflows is taking.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15801
https://github.com/root-project/root/pull/15802:100,Deployability,release,releases,100,Two optimizations fro the ci:; 1) Use zstd with 8 threads to compress ROOT builds for nightlies and releases.; 2) Use gzip compression level 2 instead of level 6 to compress artifacts.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15802
https://github.com/root-project/root/pull/15802:4,Performance,optimiz,optimizations,4,Two optimizations fro the ci:; 1) Use zstd with 8 threads to compress ROOT builds for nightlies and releases.; 2) Use gzip compression level 2 instead of level 6 to compress artifacts.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15802
https://github.com/root-project/root/pull/15805:457,Testability,test,test,457,"Adds an exhaustive table of the possible column representations of fundamental types to the specification. The PR also adds the `double` --> `Real16` representation. For integers, we need to decide which representations we allow. We currently only support reading/writing integers to columns of the same width. Read-only support for the column of the other signedness. Except for `std::int64_t`, which can also read from 32 bit columns. This was meant as a test for such conversions. Completing the integer column representation is for a follow-up PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15805
https://github.com/root-project/root/pull/15807:141,Performance,cache,caches,141,"The pythonization of `TTree::SetBranchAddress` was implemented in C++, hacking into CPyCppy by using implementation details like data member caches (this call: `((CPPInstance *)address)GetDatamemberCache()`). Not too surprising that it apparently breaks with the upcoming Python 3.13. It's better to implement the pythonizations in Python and also manage the lifetime of the necessary data in Python. This is done in this commit. The pythonization is extensively tested in `ttree_setbranchaddress.py`. Closes #15799.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15807
https://github.com/root-project/root/pull/15807:463,Testability,test,tested,463,"The pythonization of `TTree::SetBranchAddress` was implemented in C++, hacking into CPyCppy by using implementation details like data member caches (this call: `((CPPInstance *)address)GetDatamemberCache()`). Not too surprising that it apparently breaks with the upcoming Python 3.13. It's better to implement the pythonizations in Python and also manage the lifetime of the necessary data in Python. This is done in this commit. The pythonization is extensively tested in `ttree_setbranchaddress.py`. Closes #15799.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15807
https://github.com/root-project/root/pull/15811:66,Energy Efficiency,Reduce,ReduceSum,66,Constant operator implemented along with the onnx model and test; ReduceSum was also added in the `tmva/sofie_parsers/src/ParseReduce.cxx`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15811
https://github.com/root-project/root/pull/15811:60,Testability,test,test,60,Constant operator implemented along with the onnx model and test; ReduceSum was also added in the `tmva/sofie_parsers/src/ParseReduce.cxx`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15811
https://github.com/root-project/root/pull/15816:0,Modifiability,plugin,plugin,0,"plugin, otherwise heavy checks in the PluginHandler take place that perform interpreter lookups. Fixes #15579",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15816
https://github.com/root-project/root/pull/15816:38,Modifiability,Plugin,PluginHandler,38,"plugin, otherwise heavy checks in the PluginHandler take place that perform interpreter lookups. Fixes #15579",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15816
https://github.com/root-project/root/pull/15816:68,Performance,perform,perform,68,"plugin, otherwise heavy checks in the PluginHandler take place that perform interpreter lookups. Fixes #15579",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15816
https://github.com/root-project/root/issues/15818:79,Availability,failure,failure,79,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The failure seen in the asan job for the `gtest-tree-dataframe-test-dataframe-interface` test is due to the reproducer attached. It seems trying to JIT a function with a very long return expression is causing issues. Unfortunately asan just reports a segfault with no stacktrace, but I was able to get a (very long) stacktrace with gdb and the reproducer, see the attachment. Note that the reproducer is completely detached from RDataFrame and just calls the interpreter. [gdb_ginterpreter_declare_manyargs.txt](https://github.com/user-attachments/files/15794771/gdb_ginterpreter_declare_manyargs.txt). ### Reproducer. ```cpp; #include <TInterpreter.h>. int main(){; gInterpreter->Declare(R""(; namespace R_rdf {; auto func0(const int var0){return var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + va",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:27586,Deployability,Install,Installation,27586,"0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0>0; ;}; using func0_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype(func0)>::ret_type;; })"");. }; ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:153,Integrability,interface,interface,153,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The failure seen in the asan job for the `gtest-tree-dataframe-test-dataframe-interface` test is due to the reproducer attached. It seems trying to JIT a function with a very long return expression is causing issues. Unfortunately asan just reports a segfault with no stacktrace, but I was able to get a (very long) stacktrace with gdb and the reproducer, see the attachment. Note that the reproducer is completely detached from RDataFrame and just calls the interpreter. [gdb_ginterpreter_declare_manyargs.txt](https://github.com/user-attachments/files/15794771/gdb_ginterpreter_declare_manyargs.txt). ### Reproducer. ```cpp; #include <TInterpreter.h>. int main(){; gInterpreter->Declare(R""(; namespace R_rdf {; auto func0(const int var0){return var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + va",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:138,Testability,test,test-dataframe-interface,138,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The failure seen in the asan job for the `gtest-tree-dataframe-test-dataframe-interface` test is due to the reproducer attached. It seems trying to JIT a function with a very long return expression is causing issues. Unfortunately asan just reports a segfault with no stacktrace, but I was able to get a (very long) stacktrace with gdb and the reproducer, see the attachment. Note that the reproducer is completely detached from RDataFrame and just calls the interpreter. [gdb_ginterpreter_declare_manyargs.txt](https://github.com/user-attachments/files/15794771/gdb_ginterpreter_declare_manyargs.txt). ### Reproducer. ```cpp; #include <TInterpreter.h>. int main(){; gInterpreter->Declare(R""(; namespace R_rdf {; auto func0(const int var0){return var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + va",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:164,Testability,test,test,164,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The failure seen in the asan job for the `gtest-tree-dataframe-test-dataframe-interface` test is due to the reproducer attached. It seems trying to JIT a function with a very long return expression is causing issues. Unfortunately asan just reports a segfault with no stacktrace, but I was able to get a (very long) stacktrace with gdb and the reproducer, see the attachment. Note that the reproducer is completely detached from RDataFrame and just calls the interpreter. [gdb_ginterpreter_declare_manyargs.txt](https://github.com/user-attachments/files/15794771/gdb_ginterpreter_declare_manyargs.txt). ### Reproducer. ```cpp; #include <TInterpreter.h>. int main(){; gInterpreter->Declare(R""(; namespace R_rdf {; auto func0(const int var0){return var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + va",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/pull/15821:427,Deployability,update,updated,427,"# This Pull request:; is the first half of #15714. It deprecates `ECompressionAlgorithm` in favor of `RCompressionSetting::EAlgorithm` and fixes the code to use the new enum.; This PR should be much safer and less problematic to merge than #15714, so we can start with this and later discuss about changing the `RCompressionSetting` enums to enum classes. Depends on #15820 . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15821
https://github.com/root-project/root/pull/15821:356,Integrability,Depend,Depends,356,"# This Pull request:; is the first half of #15714. It deprecates `ECompressionAlgorithm` in favor of `RCompressionSetting::EAlgorithm` and fixes the code to use the new enum.; This PR should be much safer and less problematic to merge than #15714, so we can start with this and later discuss about changing the `RCompressionSetting` enums to enum classes. Depends on #15820 . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15821
https://github.com/root-project/root/pull/15821:199,Safety,safe,safer,199,"# This Pull request:; is the first half of #15714. It deprecates `ECompressionAlgorithm` in favor of `RCompressionSetting::EAlgorithm` and fixes the code to use the new enum.; This PR should be much safer and less problematic to merge than #15714, so we can start with this and later discuss about changing the `RCompressionSetting` enums to enum classes. Depends on #15820 . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15821
https://github.com/root-project/root/pull/15821:397,Testability,test,tested,397,"# This Pull request:; is the first half of #15714. It deprecates `ECompressionAlgorithm` in favor of `RCompressionSetting::EAlgorithm` and fixes the code to use the new enum.; This PR should be much safer and less problematic to merge than #15714, so we can start with this and later discuss about changing the `RCompressionSetting` enums to enum classes. Depends on #15820 . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15821
https://github.com/root-project/root/pull/15824:73,Modifiability,variab,variable,73,The test previously build an expression with 4096 occurrences of the 'x' variable. This was causing a segfault with the address sanitizer that is independent of RDataFrame and tracked at; https://github.com/root-project/root/issues/15818. Shorten the test expression to 100 occurences of 'x' which still represents a realistically long one-line expression and better decouples the clang-related asan issue from the rest of the RDataFrame testing infrastructure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15824
https://github.com/root-project/root/pull/15824:128,Security,sanitiz,sanitizer,128,The test previously build an expression with 4096 occurrences of the 'x' variable. This was causing a segfault with the address sanitizer that is independent of RDataFrame and tracked at; https://github.com/root-project/root/issues/15818. Shorten the test expression to 100 occurences of 'x' which still represents a realistically long one-line expression and better decouples the clang-related asan issue from the rest of the RDataFrame testing infrastructure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15824
https://github.com/root-project/root/pull/15824:4,Testability,test,test,4,The test previously build an expression with 4096 occurrences of the 'x' variable. This was causing a segfault with the address sanitizer that is independent of RDataFrame and tracked at; https://github.com/root-project/root/issues/15818. Shorten the test expression to 100 occurences of 'x' which still represents a realistically long one-line expression and better decouples the clang-related asan issue from the rest of the RDataFrame testing infrastructure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15824
https://github.com/root-project/root/pull/15824:251,Testability,test,test,251,The test previously build an expression with 4096 occurrences of the 'x' variable. This was causing a segfault with the address sanitizer that is independent of RDataFrame and tracked at; https://github.com/root-project/root/issues/15818. Shorten the test expression to 100 occurences of 'x' which still represents a realistically long one-line expression and better decouples the clang-related asan issue from the rest of the RDataFrame testing infrastructure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15824
https://github.com/root-project/root/pull/15824:438,Testability,test,testing,438,The test previously build an expression with 4096 occurrences of the 'x' variable. This was causing a segfault with the address sanitizer that is independent of RDataFrame and tracked at; https://github.com/root-project/root/issues/15818. Shorten the test expression to 100 occurences of 'x' which still represents a realistically long one-line expression and better decouples the clang-related asan issue from the rest of the RDataFrame testing infrastructure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15824
https://github.com/root-project/root/pull/15825:15,Performance,multi-thread,multi-threaded,15,Workaround for multi-threaded environment; Ensure main thread id picked when canvas implementation is created otherwise it may be assigned in other thread and screw-up `gPad` access. Workaround may not work if main thread id was wrongly initialized before. This resolves issue https://github.com/root-project/root/issues/15498,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:175,Security,access,access,175,Workaround for multi-threaded environment; Ensure main thread id picked when canvas implementation is created otherwise it may be assigned in other thread and screw-up `gPad` access. Workaround may not work if main thread id was wrongly initialized before. This resolves issue https://github.com/root-project/root/issues/15498,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15826:401,Deployability,Update,Update,401,"1. Correctly detect and use saved buffer in `TF1`. In some circumstances valid buffer was overwritten by 0 - and making webcanvas not displaying `TF1`. 2. Do not support `TPad::WaitPrimitive()` with web canvas. Creation of primitives not yet implemented, but original method requires `gROOT->SetSelectedPad()` and this screw-up `obj->DrawClone()`. Therefore do not set selected pad for web canvas. 3. Update JSROOT with several fixes - including #15791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15826
https://github.com/root-project/root/pull/15826:13,Safety,detect,detect,13,"1. Correctly detect and use saved buffer in `TF1`. In some circumstances valid buffer was overwritten by 0 - and making webcanvas not displaying `TF1`. 2. Do not support `TPad::WaitPrimitive()` with web canvas. Creation of primitives not yet implemented, but original method requires `gROOT->SetSelectedPad()` and this screw-up `obj->DrawClone()`. Therefore do not set selected pad for web canvas. 3. Update JSROOT with several fixes - including #15791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15826
https://github.com/root-project/root/pull/15830:15,Performance,multi-thread,multi-threaded,15,Workaround for multi-threaded environment; Ensure main thread id picked when canvas implementation is created otherwise it may be assigned in other thread and screw-up gPad access. Workaround may not work if main thread id was wrongly initialized before. This resolves issue https://github.com/root-project/root/issues/15498. Backport of #15825,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15830
https://github.com/root-project/root/pull/15830:173,Security,access,access,173,Workaround for multi-threaded environment; Ensure main thread id picked when canvas implementation is created otherwise it may be assigned in other thread and screw-up gPad access. Workaround may not work if main thread id was wrongly initialized before. This resolves issue https://github.com/root-project/root/issues/15498. Backport of #15825,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15830
https://github.com/root-project/root/pull/15833:302,Availability,robust,robust,302,We can change the code in the ROOT facade such that `gROOT` is always; retrieved via cppyy. This was done for `gInterpreter` and `gSystem`; already anyway. This is part of the general campaign of avoiding pythonization code in C++.; The experience of the last weeks has clearly shown that this is less robust than having the code on the Python side (see for example the discussion in #15788).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15833
https://github.com/root-project/root/pull/15833:196,Safety,avoid,avoiding,196,We can change the code in the ROOT facade such that `gROOT` is always; retrieved via cppyy. This was done for `gInterpreter` and `gSystem`; already anyway. This is part of the general campaign of avoiding pythonization code in C++.; The experience of the last weeks has clearly shown that this is less robust than having the code on the Python side (see for example the discussion in #15788).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15833
https://github.com/root-project/root/pull/15833:270,Usability,clear,clearly,270,We can change the code in the ROOT facade such that `gROOT` is always; retrieved via cppyy. This was done for `gInterpreter` and `gSystem`; already anyway. This is part of the general campaign of avoiding pythonization code in C++.; The experience of the last weeks has clearly shown that this is less robust than having the code on the Python side (see for example the discussion in #15788).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15833
https://github.com/root-project/root/pull/15835:225,Performance,load,load,225,"Saves one round trip when opening an RNTuple. Also adds reading the header and the footer to the accounting. As a follow-up, we should store the location of the first page list in the anchor. That would give us the option to load that page list in the same vector read, too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15835
https://github.com/root-project/root/pull/15837:18,Modifiability,extend,extends,18,"This Pull request extends the initial work of Vedant in #15811 adding the correct support for the tensor generated by the ; Constant operator. These tensors are like initialised tensors but they are not written in the weight file. They are initialised in the Session constructors with the given value, known when parsing the model (it is an attribute of the operator). . The PR has also been tested locally with the model provided in https://root-forum.cern.ch/t/tmva-sofie-operator-type-constant/59599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15837
https://github.com/root-project/root/pull/15837:392,Testability,test,tested,392,"This Pull request extends the initial work of Vedant in #15811 adding the correct support for the tensor generated by the ; Constant operator. These tensors are like initialised tensors but they are not written in the weight file. They are initialised in the Session constructors with the given value, known when parsing the model (it is an attribute of the operator). . The PR has also been tested locally with the model provided in https://root-forum.cern.ch/t/tmva-sofie-operator-type-constant/59599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15837
https://github.com/root-project/root/pull/15839:160,Safety,avoid,avoiding,160,"The preprocessor defines enabled by the `march=native` flag are made part of the string of options to be hashed to create the artifact tarball names, therewith avoiding incompatible binaries. Moreover, the special builds preserve their overrides also for nightly builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15839
https://github.com/root-project/root/pull/15839:105,Security,hash,hashed,105,"The preprocessor defines enabled by the `march=native` flag are made part of the string of options to be hashed to create the artifact tarball names, therewith avoiding incompatible binaries. Moreover, the special builds preserve their overrides also for nightly builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15839
https://github.com/root-project/root/pull/15840:47,Deployability,update,updated,47,"The compiler invokations run by ACLiC were not updated in case of a build with address sanitizer options enabled. This resulted in spurious warnings of the sort:. ```; $: root -q -l -b test.C+. Processing test.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./test_C.so; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15840
https://github.com/root-project/root/pull/15840:87,Security,sanitiz,sanitizer,87,"The compiler invokations run by ACLiC were not updated in case of a build with address sanitizer options enabled. This resulted in spurious warnings of the sort:. ```; $: root -q -l -b test.C+. Processing test.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./test_C.so; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15840
https://github.com/root-project/root/pull/15840:185,Testability,test,test,185,"The compiler invokations run by ACLiC were not updated in case of a build with address sanitizer options enabled. This resulted in spurious warnings of the sort:. ```; $: root -q -l -b test.C+. Processing test.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./test_C.so; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15840
https://github.com/root-project/root/pull/15840:205,Testability,test,test,205,"The compiler invokations run by ACLiC were not updated in case of a build with address sanitizer options enabled. This resulted in spurious warnings of the sort:. ```; $: root -q -l -b test.C+. Processing test.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./test_C.so; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15840
https://github.com/root-project/root/pull/15841:374,Deployability,Update,Update,374,"1. Use new `TPad::Add()` and `TPad::Remove()` methods to manipulate primitives; 2. Do not implement `TGraphTime::Paint()` method. It is illegal to add this object to list of primitives and painting is not allowed. ; 3. Provide protected `TGraphTime::DrawStep()` method which used both in drawing and creation animated gif ; 4. Remove unnecessary `gSystem->Sleep` and `gPad->Update` when creating animated gif, check if `gPad` is there, only plain ROOT canvas can be used here; 5. Implement `TGraphTime::Animate()` to let run animation without blocking of main loop.; 6. Adjust tutorials macros",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15841
https://github.com/root-project/root/issues/15842:695,Deployability,Install,Installation,695,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Depending on the mixture of 4-vector types and the order of operations the result can change, e.g.; lv1 - lv2 != -lv2 + lv1; See reproducer for all combinations. ### Reproducer. ```python; import ROOT. lv1 = ROOT.Math.PxPyPzEVector(0, 0, 1, 1); lv2 = ROOT.Math.PxPyPzMVector(lv1). print(lv1 - lv2); # (0,0,0,0); print(lv2 - lv1); # (0,0,0,0); print(-lv1 + lv2); # (0,0,0,0); print(-lv2 + lv1); # (0,0,0,2); ```; but I am relatively sure that it will also happen in c++. ### ROOT version. ```; ROOT Version: 6.33.01; Built for linuxx8664gcc on Jun 12 2024, 23:54:24; From heads/master@v6-31-01-2329-g4fe33d2d91; ```. ### Installation method. LCG dev3. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/issues/15842:75,Integrability,Depend,Depending,75,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Depending on the mixture of 4-vector types and the order of operations the result can change, e.g.; lv1 - lv2 != -lv2 + lv1; See reproducer for all combinations. ### Reproducer. ```python; import ROOT. lv1 = ROOT.Math.PxPyPzEVector(0, 0, 1, 1); lv2 = ROOT.Math.PxPyPzMVector(lv1). print(lv1 - lv2); # (0,0,0,0); print(lv2 - lv1); # (0,0,0,0); print(-lv1 + lv2); # (0,0,0,0); print(-lv2 + lv1); # (0,0,0,2); ```; but I am relatively sure that it will also happen in c++. ### ROOT version. ```; ROOT Version: 6.33.01; Built for linuxx8664gcc on Jun 12 2024, 23:54:24; From heads/master@v6-31-01-2329-g4fe33d2d91; ```. ### Installation method. LCG dev3. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/pull/15843:0,Deployability,Update,Updates,0,Updates to latest xRooFit version,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15843
https://github.com/root-project/root/pull/15844:233,Safety,avoid,avoid,233,"It's not necessary because the data token is not set for `RooRealVar`s to begin with:; https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooFit/Evaluator.cxx#L185. And by not doing this unnecessary resetting, we avoid potential crashes in case the `RooRealVar`s live not as long as the evaluator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15844
https://github.com/root-project/root/pull/15846:51,Deployability,patch,patch,51,Backport recent fixes and improvements to 6.32 for patch release,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15846
https://github.com/root-project/root/pull/15846:57,Deployability,release,release,57,Backport recent fixes and improvements to 6.32 for patch release,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15846
https://github.com/root-project/root/issues/15851:512,Availability,avail,available,512,"### Feature description. The projection methods of profile plots (TProfile::ProjectionX and TProfile2D::ProjectionXY) have a bunch of useful options that allow us to visualize useful features like the RMS in each bin, or the sum of weights, or the number of entries in each bin. I would like to propose that a new context submenu be added to JSROOT for profile plots, or at least a lot more options appear under the ""proj"" submenu for these plot types. All the different options from these two methods should be available (the options are the same between TProfile and TProfile2D). I actually dont know what the existing options under the ""proj"" submenu even do, to be honest?. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/pull/15853:415,Availability,avail,available,415,"# This Pull request:; adds the `-Ddev=on` flag on the debian CI machine. It's a ""test run"" to see if we can later enable it on more (potentially all) build machines. Here's what the flag does:; - enables asserts; - (Linux|BSD) enables -Werror; - (Linux|BSD) does not relink if a dependent .so has changed (CMAKE_LINK_DEPENDS_NO_SHARED On); - (Linux|BSD) splits debug info (-gsplit-dwarf); - (Linux|BSD) uses lld if available; - defines USE_LESS_INCLUDES",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:279,Integrability,depend,dependent,279,"# This Pull request:; adds the `-Ddev=on` flag on the debian CI machine. It's a ""test run"" to see if we can later enable it on more (potentially all) build machines. Here's what the flag does:; - enables asserts; - (Linux|BSD) enables -Werror; - (Linux|BSD) does not relink if a dependent .so has changed (CMAKE_LINK_DEPENDS_NO_SHARED On); - (Linux|BSD) splits debug info (-gsplit-dwarf); - (Linux|BSD) uses lld if available; - defines USE_LESS_INCLUDES",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:81,Testability,test,test,81,"# This Pull request:; adds the `-Ddev=on` flag on the debian CI machine. It's a ""test run"" to see if we can later enable it on more (potentially all) build machines. Here's what the flag does:; - enables asserts; - (Linux|BSD) enables -Werror; - (Linux|BSD) does not relink if a dependent .so has changed (CMAKE_LINK_DEPENDS_NO_SHARED On); - (Linux|BSD) splits debug info (-gsplit-dwarf); - (Linux|BSD) uses lld if available; - defines USE_LESS_INCLUDES",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:204,Testability,assert,asserts,204,"# This Pull request:; adds the `-Ddev=on` flag on the debian CI machine. It's a ""test run"" to see if we can later enable it on more (potentially all) build machines. Here's what the flag does:; - enables asserts; - (Linux|BSD) enables -Werror; - (Linux|BSD) does not relink if a dependent .so has changed (CMAKE_LINK_DEPENDS_NO_SHARED On); - (Linux|BSD) splits debug info (-gsplit-dwarf); - (Linux|BSD) uses lld if available; - defines USE_LESS_INCLUDES",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15854:142,Modifiability,variab,variables,142,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15854
https://github.com/root-project/root/pull/15854:276,Modifiability,variab,variables,276,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15854
https://github.com/root-project/root/pull/15855:87,Availability,error,errors,87,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z); libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z); C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals; ```. **To be backported to 6.32**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15855:148,Availability,error,error,148,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z); libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z); C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals; ```. **To be backported to 6.32**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15855:343,Availability,error,error,343,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z); libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z); C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals; ```. **To be backported to 6.32**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15855:509,Availability,error,error,509,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z); libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z); C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals; ```. **To be backported to 6.32**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15855:669,Availability,error,error,669,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z); libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z); C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals; ```. **To be backported to 6.32**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15855:905,Availability,error,error,905,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z); libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z); C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals; ```. **To be backported to 6.32**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15855:872,Deployability,release,release,872,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z); libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z); C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals; ```. **To be backported to 6.32**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15856:23,Energy Efficiency,schedul,schedule,23,that run only with the schedule trigger.; It makes sense to merge only after asan is fixed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15856
https://github.com/root-project/root/pull/15857:142,Modifiability,variab,variables,142,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (cherry picked from commit a60f3538220e298f14c0ea5824d2fda91b71f39e, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15857
https://github.com/root-project/root/pull/15857:276,Modifiability,variab,variables,276,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (cherry picked from commit a60f3538220e298f14c0ea5824d2fda91b71f39e, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15857
https://github.com/root-project/root/pull/15858:403,Deployability,patch,patches,403,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (version of commit a60f3538220e298f14c0ea5824d2fda91b71f39e for LLVM 13 in `v6-30-00-patches`, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15858
https://github.com/root-project/root/pull/15858:142,Modifiability,variab,variables,142,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (version of commit a60f3538220e298f14c0ea5824d2fda91b71f39e for LLVM 13 in `v6-30-00-patches`, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15858
https://github.com/root-project/root/pull/15858:276,Modifiability,variab,variables,276,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (version of commit a60f3538220e298f14c0ea5824d2fda91b71f39e for LLVM 13 in `v6-30-00-patches`, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15858
https://github.com/root-project/root/pull/15859:403,Deployability,patch,patches,403,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (version of commit a60f3538220e298f14c0ea5824d2fda91b71f39e for LLVM 13 in `v6-28-00-patches`, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15859
https://github.com/root-project/root/pull/15859:142,Modifiability,variab,variables,142,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (version of commit a60f3538220e298f14c0ea5824d2fda91b71f39e for LLVM 13 in `v6-28-00-patches`, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15859
https://github.com/root-project/root/pull/15859:276,Modifiability,variab,variables,276,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (version of commit a60f3538220e298f14c0ea5824d2fda91b71f39e for LLVM 13 in `v6-28-00-patches`, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15859
https://github.com/root-project/root/pull/15860:87,Availability,error,errors,87,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15860
https://github.com/root-project/root/pull/15860:148,Availability,error,error,148,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15860
https://github.com/root-project/root/pull/15860:410,Availability,error,error,410,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15860
https://github.com/root-project/root/pull/15860:643,Availability,error,error,643,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15860
https://github.com/root-project/root/pull/15860:870,Availability,error,error,870,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15860
https://github.com/root-project/root/pull/15860:1173,Availability,error,error,1173,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15860
https://github.com/root-project/root/pull/15860:352,Deployability,release,release,352,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15860
https://github.com/root-project/root/pull/15860:583,Deployability,release,release,583,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15860
https://github.com/root-project/root/pull/15860:810,Deployability,release,release,810,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15860
https://github.com/root-project/root/pull/15860:1075,Deployability,release,release,1075,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15860
https://github.com/root-project/root/pull/15860:1140,Deployability,release,release,1140,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15860
https://github.com/root-project/root/pull/15860:1234,Deployability,release,release,1234,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15860
https://github.com/root-project/root/issues/15861:281,Deployability,install,install,281,"### Feature description. Currently, for non-incremental builds, we build and then test ROOT from the build directory. This could be improved, for example testing the packed binaries. In steps what could be done is:; 1) after a build, remove source and build directory; 2) unpack / install from ROOT package; 3) check out roottest and run on ROOT installation from 2). Inspired by [ROOT-7370](https://its.cern.ch/jira/browse/ROOT-7370). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15861
https://github.com/root-project/root/issues/15861:346,Deployability,install,installation,346,"### Feature description. Currently, for non-incremental builds, we build and then test ROOT from the build directory. This could be improved, for example testing the packed binaries. In steps what could be done is:; 1) after a build, remove source and build directory; 2) unpack / install from ROOT package; 3) check out roottest and run on ROOT installation from 2). Inspired by [ROOT-7370](https://its.cern.ch/jira/browse/ROOT-7370). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15861
https://github.com/root-project/root/issues/15861:82,Testability,test,test,82,"### Feature description. Currently, for non-incremental builds, we build and then test ROOT from the build directory. This could be improved, for example testing the packed binaries. In steps what could be done is:; 1) after a build, remove source and build directory; 2) unpack / install from ROOT package; 3) check out roottest and run on ROOT installation from 2). Inspired by [ROOT-7370](https://its.cern.ch/jira/browse/ROOT-7370). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15861
https://github.com/root-project/root/issues/15861:154,Testability,test,testing,154,"### Feature description. Currently, for non-incremental builds, we build and then test ROOT from the build directory. This could be improved, for example testing the packed binaries. In steps what could be done is:; 1) after a build, remove source and build directory; 2) unpack / install from ROOT package; 3) check out roottest and run on ROOT installation from 2). Inspired by [ROOT-7370](https://its.cern.ch/jira/browse/ROOT-7370). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15861
https://github.com/root-project/root/pull/15862:110,Deployability,update,updated,110,"# This Pull request:. @pcanal pointed out a typo I meade,. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15862
https://github.com/root-project/root/pull/15862:80,Testability,test,tested,80,"# This Pull request:. @pcanal pointed out a typo I meade,. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15862
https://github.com/root-project/root/pull/15864:10,Deployability,patch,patch,10,Temporary patch to help debugging writing CMS MiniAOD in RNTuple. @Dr15Jones FYI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15864
https://github.com/root-project/root/pull/15866:85,Security,hash,hashed,85,"To correctly manage build artifacts, make the compiler name part of the string to be hashed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15866
https://github.com/root-project/root/pull/15867:174,Modifiability,config,configured,174,"For security reasons this option is off by default. . Only when desired `win.SetUseCurrentDir(true)` should be invoked. ; It happens automatically when ""localapp."" namespace configured as main ui5 panel for the window. Required for `tutorials/webgui/panel` example.; Will be required for local fonts or special apps in eve7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15867
https://github.com/root-project/root/pull/15867:4,Security,secur,security,4,"For security reasons this option is off by default. . Only when desired `win.SetUseCurrentDir(true)` should be invoked. ; It happens automatically when ""localapp."" namespace configured as main ui5 panel for the window. Required for `tutorials/webgui/panel` example.; Will be required for local fonts or special apps in eve7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15867
https://github.com/root-project/root/pull/15868:195,Modifiability,config,configured,195,"Backport of #15867 . For security reasons this option is off by default. . Only when desired `win.SetUseCurrentDir(true)` should be invoked. ; It happens automatically when ""localapp."" namespace configured as main ui5 panel for the window",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15868
https://github.com/root-project/root/pull/15868:25,Security,secur,security,25,"Backport of #15867 . For security reasons this option is off by default. . Only when desired `win.SetUseCurrentDir(true)` should be invoked. ; It happens automatically when ""localapp."" namespace configured as main ui5 panel for the window",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15868
https://github.com/root-project/root/pull/15869:169,Availability,error,error,169,"## Changes or fixes:; After b5d751c069df2725dbc0d96bb1a6a677addc3895, RField.cxx on clang yields the warning:; ```; /home/jp/root/tree/ntuple/v7/src/RField.cxx:2504:58: error: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Werror,-Wpotentially-evaluated-expression]; errMsg += ""Item field type: "" + std::string(typeid(*fSubFields[0]).name());; ```. Fixing the warning is just a matter of splitting the ptr dereference from the `typeid` expression. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:546,Deployability,update,updated,546,"## Changes or fixes:; After b5d751c069df2725dbc0d96bb1a6a677addc3895, RField.cxx on clang yields the warning:; ```; /home/jp/root/tree/ntuple/v7/src/RField.cxx:2504:58: error: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Werror,-Wpotentially-evaluated-expression]; errMsg += ""Item field type: "" + std::string(typeid(*fSubFields[0]).name());; ```. Fixing the warning is just a matter of splitting the ptr dereference from the `typeid` expression. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:516,Testability,test,tested,516,"## Changes or fixes:; After b5d751c069df2725dbc0d96bb1a6a677addc3895, RField.cxx on clang yields the warning:; ```; /home/jp/root/tree/ntuple/v7/src/RField.cxx:2504:58: error: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Werror,-Wpotentially-evaluated-expression]; errMsg += ""Item field type: "" + std::string(typeid(*fSubFields[0]).name());; ```. Fixing the warning is just a matter of splitting the ptr dereference from the `typeid` expression. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/issues/15872:34,Deployability,patch,patch,34,"### Description. After removing a patch from the cppyy inside ROOT in 8d2a6df6d, the built-in cppyy somehow doesn't support `long long` anymore. This only became apparent now that the `Long64_t` converter is only registered when setting up PyROOT. Note that the reproducer works in upstream cppyy. Maybe because the type name ""long long"" is two words, and upstream cppyy somehow fixed it by patching ROOT meta?. It's not an urgent problem, because it's easy to fix by importing ROOT, but it would be nice to understand what is going on. Because maybe it means that once this problem with `long long` is fixed, we don't need the converter aliases for PyROOT at all!. ### Reproducer. ```python; import cppyy. # import ROOT # setting up PyROOT would fix the problem; # ROOT.gInterpreter. cppyy.cppdef(""""""; #include <cstdint>; namespace cool {; typedef long long Bad_t;; typedef std::int64_t Goot_t;; const Bad_t bad_value = +9223372036854775807;; const Goot_t good_value = +9223372036854775807;; }; """"""). print(cppyy.gbl.cool.bad_value); print(cppyy.gbl.cool.good_value); ```; Will crash with:; ```txt; Traceback (most recent call last):; File ""/home/rembserj/repro.py"", line 16, in <module>; print(cppyy.gbl.cool.bad_value); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: <namespace cppyy.gbl.cool at 0x64765cfce570> has no attribute 'bad_value'. Full details:; type object 'cool' has no attribute 'bad_value'; 'cool::bad_value' is not a known C++ class; C++ type cannot be converted from memory. Did you mean: 'good_value'?; ```. ### ROOT version. ROOT master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:391,Deployability,patch,patching,391,"### Description. After removing a patch from the cppyy inside ROOT in 8d2a6df6d, the built-in cppyy somehow doesn't support `long long` anymore. This only became apparent now that the `Long64_t` converter is only registered when setting up PyROOT. Note that the reproducer works in upstream cppyy. Maybe because the type name ""long long"" is two words, and upstream cppyy somehow fixed it by patching ROOT meta?. It's not an urgent problem, because it's easy to fix by importing ROOT, but it would be nice to understand what is going on. Because maybe it means that once this problem with `long long` is fixed, we don't need the converter aliases for PyROOT at all!. ### Reproducer. ```python; import cppyy. # import ROOT # setting up PyROOT would fix the problem; # ROOT.gInterpreter. cppyy.cppdef(""""""; #include <cstdint>; namespace cool {; typedef long long Bad_t;; typedef std::int64_t Goot_t;; const Bad_t bad_value = +9223372036854775807;; const Goot_t good_value = +9223372036854775807;; }; """"""). print(cppyy.gbl.cool.bad_value); print(cppyy.gbl.cool.good_value); ```; Will crash with:; ```txt; Traceback (most recent call last):; File ""/home/rembserj/repro.py"", line 16, in <module>; print(cppyy.gbl.cool.bad_value); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: <namespace cppyy.gbl.cool at 0x64765cfce570> has no attribute 'bad_value'. Full details:; type object 'cool' has no attribute 'bad_value'; 'cool::bad_value' is not a known C++ class; C++ type cannot be converted from memory. Did you mean: 'good_value'?; ```. ### ROOT version. ROOT master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/pull/15873:500,Deployability,release,release,500,"Converters and executors for ROOT fixed-width integer types are important for ""long long"" support for the cppyy inside ROOT (see https://github.com/root-project/root/issues/15872). This PR is an alternative to understanding what is actually going on with ""long long"" in PyROOT, and can be considered even for backporting to 6.32.02 if desired. However, since this only serves the niche usecase of using `cppyy` in ROOT via `import cppyy` without using ROOT at all, I don't this this should block the release. @dpiparo @vepadulano @hahnjo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15873
https://github.com/root-project/root/issues/15874:641,Availability,error,error,641,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Backwards compatibility for `THnSparseL` was broken in 6.32 by #8546, @ferdymercury @vepadulano. ### Reproducer. Write a `THnSparseL` to a file e.g. with ROOT 6.30.06:; ```c++; void write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:657,Availability,Error,Error,657,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Backwards compatibility for `THnSparseL` was broken in 6.32 by #8546, @ferdymercury @vepadulano. ### Reproducer. Write a `THnSparseL` to a file e.g. with ROOT 6.30.06:; ```c++; void write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:1112,Availability,Error,Error,1112," write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load the corresponding shared library?; ```. ### ROOT version. ROOT 6.32.00 upwards. ### Additional context. Thanks do @philippe554 for catching this! This issue is important for project HighLO because we're using `THnSparseL` as a container for reduced data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:1205,Availability,Error,Error,1205," write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load the corresponding shared library?; ```. ### ROOT version. ROOT 6.32.00 upwards. ### Additional context. Thanks do @philippe554 for catching this! This issue is important for project HighLO because we're using `THnSparseL` as a container for reduced data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:1327,Availability,Error,Error,1327," write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load the corresponding shared library?; ```. ### ROOT version. ROOT 6.32.00 upwards. ### Additional context. Thanks do @philippe554 for catching this! This issue is important for project HighLO because we're using `THnSparseL` as a container for reduced data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:1402,Availability,Error,Error,1402," write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load the corresponding shared library?; ```. ### ROOT version. ROOT 6.32.00 upwards. ### Additional context. Thanks do @philippe554 for catching this! This issue is important for project HighLO because we're using `THnSparseL` as a container for reduced data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:2243,Energy Efficiency,reduce,reduced,2243," write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load the corresponding shared library?; ```. ### ROOT version. ROOT 6.32.00 upwards. ### Additional context. Thanks do @philippe554 for catching this! This issue is important for project HighLO because we're using `THnSparseL` as a container for reduced data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:1178,Integrability,wrap,wrapper,1178," write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load the corresponding shared library?; ```. ### ROOT version. ROOT 6.32.00 upwards. ### Additional context. Thanks do @philippe554 for catching this! This issue is important for project HighLO because we're using `THnSparseL` as a container for reduced data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:1596,Integrability,interface,interface,1596," write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load the corresponding shared library?; ```. ### ROOT version. ROOT 6.32.00 upwards. ### Additional context. Thanks do @philippe554 for catching this! This issue is important for project HighLO because we're using `THnSparseL` as a container for reduced data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:1873,Integrability,interface,interface,1873," write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load the corresponding shared library?; ```. ### ROOT version. ROOT 6.32.00 upwards. ### Additional context. Thanks do @philippe554 for catching this! This issue is important for project HighLO because we're using `THnSparseL` as a container for reduced data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:1709,Performance,load,load,1709," write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load the corresponding shared library?; ```. ### ROOT version. ROOT 6.32.00 upwards. ### Additional context. Thanks do @philippe554 for catching this! This issue is important for project HighLO because we're using `THnSparseL` as a container for reduced data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:1997,Performance,load,load,1997," write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load the corresponding shared library?; ```. ### ROOT version. ROOT 6.32.00 upwards. ### Additional context. Thanks do @philippe554 for catching this! This issue is important for project HighLO because we're using `THnSparseL` as a container for reduced data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/pull/15875:0,Deployability,Update,Update,0,Update `clad` to master to investigate regression in RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15875
https://github.com/root-project/root/pull/15876:151,Deployability,update,updated,151,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/8194. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15876
https://github.com/root-project/root/pull/15876:121,Testability,test,tested,121,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/8194. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15876
https://github.com/root-project/root/issues/15877:973,Availability,fault,faulty,973,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For a class with read rules, data members may report wrong offsets (see reproducer). ### Reproducer. [infobug.tar.gz](https://github.com/user-attachments/files/15884205/infobug.tar.gz). In the attached reproducer, the output of `offset` is. ```; $ ./offset ; 0; 8; 0. StreamerInfo for class: Event, version=3, checksum=0x153ea7a; Event@@3 @@alloc offset= 0 type=1001 ; float pt offset= 8 type= 5 (cached) ; float pt offset= 0 type= 5 (write) ; Event@@3 @@dealloc offset= 0 type=1002 ; i= 0, @@alloc type=1001, offset= 0, len=1, method=0; i= 1, pt type= 5, offset= 8, len=1, method=0 [cached]; i= 2, pt type= 5, offset= 0, len=1, method=0 [write]; i= 3, @@dealloc type=1002, offset= 0, len=1, method=0; ```. Demonstrating that `pt` is reported with an offset of 8 by the streamer info element. The wrong offset in the streamer info seems to stem from `TStreamerInfo::BuildOld`, which adds a second, faulty cached member to the list of streamer info elements. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15877
https://github.com/root-project/root/issues/15877:1063,Deployability,Install,Installation,1063,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For a class with read rules, data members may report wrong offsets (see reproducer). ### Reproducer. [infobug.tar.gz](https://github.com/user-attachments/files/15884205/infobug.tar.gz). In the attached reproducer, the output of `offset` is. ```; $ ./offset ; 0; 8; 0. StreamerInfo for class: Event, version=3, checksum=0x153ea7a; Event@@3 @@alloc offset= 0 type=1001 ; float pt offset= 8 type= 5 (cached) ; float pt offset= 0 type= 5 (write) ; Event@@3 @@dealloc offset= 0 type=1002 ; i= 0, @@alloc type=1001, offset= 0, len=1, method=0; i= 1, pt type= 5, offset= 8, len=1, method=0 [cached]; i= 2, pt type= 5, offset= 0, len=1, method=0 [write]; i= 3, @@dealloc type=1002, offset= 0, len=1, method=0; ```. Demonstrating that `pt` is reported with an offset of 8 by the streamer info element. The wrong offset in the streamer info seems to stem from `TStreamerInfo::BuildOld`, which adds a second, faulty cached member to the list of streamer info elements. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15877
https://github.com/root-project/root/issues/15877:472,Performance,cache,cached,472,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For a class with read rules, data members may report wrong offsets (see reproducer). ### Reproducer. [infobug.tar.gz](https://github.com/user-attachments/files/15884205/infobug.tar.gz). In the attached reproducer, the output of `offset` is. ```; $ ./offset ; 0; 8; 0. StreamerInfo for class: Event, version=3, checksum=0x153ea7a; Event@@3 @@alloc offset= 0 type=1001 ; float pt offset= 8 type= 5 (cached) ; float pt offset= 0 type= 5 (write) ; Event@@3 @@dealloc offset= 0 type=1002 ; i= 0, @@alloc type=1001, offset= 0, len=1, method=0; i= 1, pt type= 5, offset= 8, len=1, method=0 [cached]; i= 2, pt type= 5, offset= 0, len=1, method=0 [write]; i= 3, @@dealloc type=1002, offset= 0, len=1, method=0; ```. Demonstrating that `pt` is reported with an offset of 8 by the streamer info element. The wrong offset in the streamer info seems to stem from `TStreamerInfo::BuildOld`, which adds a second, faulty cached member to the list of streamer info elements. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15877
https://github.com/root-project/root/issues/15877:659,Performance,cache,cached,659,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For a class with read rules, data members may report wrong offsets (see reproducer). ### Reproducer. [infobug.tar.gz](https://github.com/user-attachments/files/15884205/infobug.tar.gz). In the attached reproducer, the output of `offset` is. ```; $ ./offset ; 0; 8; 0. StreamerInfo for class: Event, version=3, checksum=0x153ea7a; Event@@3 @@alloc offset= 0 type=1001 ; float pt offset= 8 type= 5 (cached) ; float pt offset= 0 type= 5 (write) ; Event@@3 @@dealloc offset= 0 type=1002 ; i= 0, @@alloc type=1001, offset= 0, len=1, method=0; i= 1, pt type= 5, offset= 8, len=1, method=0 [cached]; i= 2, pt type= 5, offset= 0, len=1, method=0 [write]; i= 3, @@dealloc type=1002, offset= 0, len=1, method=0; ```. Demonstrating that `pt` is reported with an offset of 8 by the streamer info element. The wrong offset in the streamer info seems to stem from `TStreamerInfo::BuildOld`, which adds a second, faulty cached member to the list of streamer info elements. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15877
https://github.com/root-project/root/issues/15877:980,Performance,cache,cached,980,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For a class with read rules, data members may report wrong offsets (see reproducer). ### Reproducer. [infobug.tar.gz](https://github.com/user-attachments/files/15884205/infobug.tar.gz). In the attached reproducer, the output of `offset` is. ```; $ ./offset ; 0; 8; 0. StreamerInfo for class: Event, version=3, checksum=0x153ea7a; Event@@3 @@alloc offset= 0 type=1001 ; float pt offset= 8 type= 5 (cached) ; float pt offset= 0 type= 5 (write) ; Event@@3 @@dealloc offset= 0 type=1002 ; i= 0, @@alloc type=1001, offset= 0, len=1, method=0; i= 1, pt type= 5, offset= 8, len=1, method=0 [cached]; i= 2, pt type= 5, offset= 0, len=1, method=0 [write]; i= 3, @@dealloc type=1002, offset= 0, len=1, method=0; ```. Demonstrating that `pt` is reported with an offset of 8 by the streamer info element. The wrong offset in the streamer info seems to stem from `TStreamerInfo::BuildOld`, which adds a second, faulty cached member to the list of streamer info elements. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15877
https://github.com/root-project/root/issues/15877:385,Security,checksum,checksum,385,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For a class with read rules, data members may report wrong offsets (see reproducer). ### Reproducer. [infobug.tar.gz](https://github.com/user-attachments/files/15884205/infobug.tar.gz). In the attached reproducer, the output of `offset` is. ```; $ ./offset ; 0; 8; 0. StreamerInfo for class: Event, version=3, checksum=0x153ea7a; Event@@3 @@alloc offset= 0 type=1001 ; float pt offset= 8 type= 5 (cached) ; float pt offset= 0 type= 5 (write) ; Event@@3 @@dealloc offset= 0 type=1002 ; i= 0, @@alloc type=1001, offset= 0, len=1, method=0; i= 1, pt type= 5, offset= 8, len=1, method=0 [cached]; i= 2, pt type= 5, offset= 0, len=1, method=0 [write]; i= 3, @@dealloc type=1002, offset= 0, len=1, method=0; ```. Demonstrating that `pt` is reported with an offset of 8 by the streamer info element. The wrong offset in the streamer info seems to stem from `TStreamerInfo::BuildOld`, which adds a second, faulty cached member to the list of streamer info elements. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15877
https://github.com/root-project/root/pull/15879:51,Deployability,update,updated,51,## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15879
https://github.com/root-project/root/pull/15879:21,Testability,test,tested,21,## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15879
https://github.com/root-project/root/issues/15881:87,Deployability,release,release,87,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The [github release for git tag v6.32.02](https://github.com/root-project/root/releases/tag/v6-32-02) contains an incorrect URL:. The *Release notes* (at the very top) links to `https://root.cern/doc/v630/release-notes.html#release-6.32.02`, but obviously it should be `https://root.cern/doc/v632/release-notes.html#release-6.32.02` instead. (`s/v630/v632/`). It’s correct for [v6.32.00](https://github.com/root-project/root/releases/tag/v6-32-00). ### Reproducer. See `https://github.com/root-project/root/releases/tag/v6-32-02`. ### ROOT version. 6.32.02. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15881
https://github.com/root-project/root/issues/15881:154,Deployability,release,releases,154,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The [github release for git tag v6.32.02](https://github.com/root-project/root/releases/tag/v6-32-02) contains an incorrect URL:. The *Release notes* (at the very top) links to `https://root.cern/doc/v630/release-notes.html#release-6.32.02`, but obviously it should be `https://root.cern/doc/v632/release-notes.html#release-6.32.02` instead. (`s/v630/v632/`). It’s correct for [v6.32.00](https://github.com/root-project/root/releases/tag/v6-32-00). ### Reproducer. See `https://github.com/root-project/root/releases/tag/v6-32-02`. ### ROOT version. 6.32.02. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15881
https://github.com/root-project/root/issues/15881:210,Deployability,Release,Release,210,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The [github release for git tag v6.32.02](https://github.com/root-project/root/releases/tag/v6-32-02) contains an incorrect URL:. The *Release notes* (at the very top) links to `https://root.cern/doc/v630/release-notes.html#release-6.32.02`, but obviously it should be `https://root.cern/doc/v632/release-notes.html#release-6.32.02` instead. (`s/v630/v632/`). It’s correct for [v6.32.00](https://github.com/root-project/root/releases/tag/v6-32-00). ### Reproducer. See `https://github.com/root-project/root/releases/tag/v6-32-02`. ### ROOT version. 6.32.02. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15881
https://github.com/root-project/root/issues/15881:280,Deployability,release,release-notes,280,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The [github release for git tag v6.32.02](https://github.com/root-project/root/releases/tag/v6-32-02) contains an incorrect URL:. The *Release notes* (at the very top) links to `https://root.cern/doc/v630/release-notes.html#release-6.32.02`, but obviously it should be `https://root.cern/doc/v632/release-notes.html#release-6.32.02` instead. (`s/v630/v632/`). It’s correct for [v6.32.00](https://github.com/root-project/root/releases/tag/v6-32-00). ### Reproducer. See `https://github.com/root-project/root/releases/tag/v6-32-02`. ### ROOT version. 6.32.02. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15881
https://github.com/root-project/root/issues/15881:299,Deployability,release,release-,299,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The [github release for git tag v6.32.02](https://github.com/root-project/root/releases/tag/v6-32-02) contains an incorrect URL:. The *Release notes* (at the very top) links to `https://root.cern/doc/v630/release-notes.html#release-6.32.02`, but obviously it should be `https://root.cern/doc/v632/release-notes.html#release-6.32.02` instead. (`s/v630/v632/`). It’s correct for [v6.32.00](https://github.com/root-project/root/releases/tag/v6-32-00). ### Reproducer. See `https://github.com/root-project/root/releases/tag/v6-32-02`. ### ROOT version. 6.32.02. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15881
https://github.com/root-project/root/issues/15881:372,Deployability,release,release-notes,372,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The [github release for git tag v6.32.02](https://github.com/root-project/root/releases/tag/v6-32-02) contains an incorrect URL:. The *Release notes* (at the very top) links to `https://root.cern/doc/v630/release-notes.html#release-6.32.02`, but obviously it should be `https://root.cern/doc/v632/release-notes.html#release-6.32.02` instead. (`s/v630/v632/`). It’s correct for [v6.32.00](https://github.com/root-project/root/releases/tag/v6-32-00). ### Reproducer. See `https://github.com/root-project/root/releases/tag/v6-32-02`. ### ROOT version. 6.32.02. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15881
https://github.com/root-project/root/issues/15881:391,Deployability,release,release-,391,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The [github release for git tag v6.32.02](https://github.com/root-project/root/releases/tag/v6-32-02) contains an incorrect URL:. The *Release notes* (at the very top) links to `https://root.cern/doc/v630/release-notes.html#release-6.32.02`, but obviously it should be `https://root.cern/doc/v632/release-notes.html#release-6.32.02` instead. (`s/v630/v632/`). It’s correct for [v6.32.00](https://github.com/root-project/root/releases/tag/v6-32-00). ### Reproducer. See `https://github.com/root-project/root/releases/tag/v6-32-02`. ### ROOT version. 6.32.02. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15881
https://github.com/root-project/root/issues/15881:500,Deployability,release,releases,500,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The [github release for git tag v6.32.02](https://github.com/root-project/root/releases/tag/v6-32-02) contains an incorrect URL:. The *Release notes* (at the very top) links to `https://root.cern/doc/v630/release-notes.html#release-6.32.02`, but obviously it should be `https://root.cern/doc/v632/release-notes.html#release-6.32.02` instead. (`s/v630/v632/`). It’s correct for [v6.32.00](https://github.com/root-project/root/releases/tag/v6-32-00). ### Reproducer. See `https://github.com/root-project/root/releases/tag/v6-32-02`. ### ROOT version. 6.32.02. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15881
https://github.com/root-project/root/issues/15881:582,Deployability,release,releases,582,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The [github release for git tag v6.32.02](https://github.com/root-project/root/releases/tag/v6-32-02) contains an incorrect URL:. The *Release notes* (at the very top) links to `https://root.cern/doc/v630/release-notes.html#release-6.32.02`, but obviously it should be `https://root.cern/doc/v632/release-notes.html#release-6.32.02` instead. (`s/v630/v632/`). It’s correct for [v6.32.00](https://github.com/root-project/root/releases/tag/v6-32-00). ### Reproducer. See `https://github.com/root-project/root/releases/tag/v6-32-02`. ### ROOT version. 6.32.02. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15881
https://github.com/root-project/root/issues/15881:637,Deployability,Install,Installation,637,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The [github release for git tag v6.32.02](https://github.com/root-project/root/releases/tag/v6-32-02) contains an incorrect URL:. The *Release notes* (at the very top) links to `https://root.cern/doc/v630/release-notes.html#release-6.32.02`, but obviously it should be `https://root.cern/doc/v632/release-notes.html#release-6.32.02` instead. (`s/v630/v632/`). It’s correct for [v6.32.00](https://github.com/root-project/root/releases/tag/v6-32-00). ### Reproducer. See `https://github.com/root-project/root/releases/tag/v6-32-02`. ### ROOT version. 6.32.02. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15881
https://github.com/root-project/root/issues/15883:831,Deployability,Install,Installation,831,"### Explain what you would like to see improved and how. At the moment the Pad margins of a TRatioPlot are always initialised with fixed values; https://github.com/root-project/root/blob/0a395208b9cb64188b11fd48eaa81128dd9c0acf/graf2d/gpad/inc/TRatioPlot.h#L128-L136; resulting in the plots having different margins than other plots and therefore also a different aspect ratio, making quick by-eye comparisons harder. (When using a custom style that changes the Pad margins). While I understand that the Top and Bottom margins require a bit more tuning for this kind of plot, at least the Left and Right margin could be set from the PadLeftMargin and PadRightMargin values in gStyle. This would result in TRatioPlots having the same horizontal width as other plots (histograms, graphs, etc.) by default. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15883
https://github.com/root-project/root/pull/15884:30,Security,checksum,checksums,30,In preparation of adding page checksums. The `GetSize()` getter will later be split in `GetPayloadSize()` (page size without checksum) and `GetTotalPageSize()` (page size with checksum).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15884
https://github.com/root-project/root/pull/15884:125,Security,checksum,checksum,125,In preparation of adding page checksums. The `GetSize()` getter will later be split in `GetPayloadSize()` (page size without checksum) and `GetTotalPageSize()` (page size with checksum).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15884
https://github.com/root-project/root/pull/15884:176,Security,checksum,checksum,176,In preparation of adding page checksums. The `GetSize()` getter will later be split in `GetPayloadSize()` (page size without checksum) and `GetTotalPageSize()` (page size with checksum).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15884
https://github.com/root-project/root/pull/15885:136,Modifiability,config,configured,136,1. Fix - interactive zooming on log color palette; 2. Fix - keyboard handling while input dialog active; 3. Fix - legend entry with not configured fill attributes; 4. Fix - prevent that color palette exceed graphical range; 5. Fix - exponential log axis labels with kMoreLogLabels bit set,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15885
https://github.com/root-project/root/pull/15885:32,Testability,log,log,32,1. Fix - interactive zooming on log color palette; 2. Fix - keyboard handling while input dialog active; 3. Fix - legend entry with not configured fill attributes; 4. Fix - prevent that color palette exceed graphical range; 5. Fix - exponential log axis labels with kMoreLogLabels bit set,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15885
https://github.com/root-project/root/pull/15885:245,Testability,log,log,245,1. Fix - interactive zooming on log color palette; 2. Fix - keyboard handling while input dialog active; 3. Fix - legend entry with not configured fill attributes; 4. Fix - prevent that color palette exceed graphical range; 5. Fix - exponential log axis labels with kMoreLogLabels bit set,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15885
https://github.com/root-project/root/issues/15887:231,Availability,down,down,231,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. I noticed that sometimes, when trying to produce .C macros for my figures, the `SaveAs()` function would return broken macros. I narrowed it down to the `Name()` arguments passed to the `plotOn()` function when plotting RooFit pdf's. The problem seems to be that the default `Name()` value contains special characters (`[` and `]`, in this case), and these characters end up in variable names in the .C macro. I have included a reproducer below (`test_plot_macros.cpp`) which produces three .C macros, two of which are broken as described above.; For instance, in `plot1.C` (one of the produced macros), one can find invalid code such as ; ```cpp; Double_t pdf_Norm[x]_fx1[114] = {; -10.2002,; -10.2,; ...; ```. Would it be possible to filter these special characters when producing the macros?. ### Reproducer. Create a file `test_plot_macros.cpp` containing the script below and run `root test_plot_macros.cpp`. ```cpp; #include ""TCanvas.h"". #include ""RooArgSet.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealVar.h"". using namespace RooFit;. void test_plot_macros() {; // Create a PDF; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", 0, -10, 10);; RooRealVar width(""width"", ""width"", 2, 0, 5);; RooGaussian gaus(""pdf"", ""pdf"", x, mean, width);. // Generate some data; RooDataSet* data = gaus.generate(RooArgSet(x), Name(""data""), NumEvents(2000));. // Plots; TCanvas* c = new TCanvas(""c"");. // Plot 1; // Broken .C macro because of default pdf ""Name()""; RooPlot* frame1 = x.frame();; data->plotOn(frame1);; gaus.plotOn(frame1);; frame1->Draw();; c->SaveAs(""./plot1.png"");; c->SaveAs(""./plot1.C"");. // Plot 2; // Not broken .C macro because of explicit (and safe) ""Name()"" configuration; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; gaus.plotOn(frame2, Name(""gaus""));; frame2->Draw();; c->SaveAs(""./plot2.png"");; c->SaveAs(""./plot2.C"");. //",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:1826,Deployability,configurat,configuration,1826,"acters (`[` and `]`, in this case), and these characters end up in variable names in the .C macro. I have included a reproducer below (`test_plot_macros.cpp`) which produces three .C macros, two of which are broken as described above.; For instance, in `plot1.C` (one of the produced macros), one can find invalid code such as ; ```cpp; Double_t pdf_Norm[x]_fx1[114] = {; -10.2002,; -10.2,; ...; ```. Would it be possible to filter these special characters when producing the macros?. ### Reproducer. Create a file `test_plot_macros.cpp` containing the script below and run `root test_plot_macros.cpp`. ```cpp; #include ""TCanvas.h"". #include ""RooArgSet.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealVar.h"". using namespace RooFit;. void test_plot_macros() {; // Create a PDF; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", 0, -10, 10);; RooRealVar width(""width"", ""width"", 2, 0, 5);; RooGaussian gaus(""pdf"", ""pdf"", x, mean, width);. // Generate some data; RooDataSet* data = gaus.generate(RooArgSet(x), Name(""data""), NumEvents(2000));. // Plots; TCanvas* c = new TCanvas(""c"");. // Plot 1; // Broken .C macro because of default pdf ""Name()""; RooPlot* frame1 = x.frame();; data->plotOn(frame1);; gaus.plotOn(frame1);; frame1->Draw();; c->SaveAs(""./plot1.png"");; c->SaveAs(""./plot1.C"");. // Plot 2; // Not broken .C macro because of explicit (and safe) ""Name()"" configuration; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; gaus.plotOn(frame2, Name(""gaus""));; frame2->Draw();; c->SaveAs(""./plot2.png"");; c->SaveAs(""./plot2.C"");. // Plot 3; // Broken .C macro again because special charecters are not filtered from ""Name""; RooPlot* frame3 = x.frame();; data->plotOn(frame3);; gaus.plotOn(frame3, Name(""a+b""));; frame3->Draw();; c->SaveAs(""./plot3.png"");; c->SaveAs(""./plot3.C"");; }; ```. ### ROOT version. 6.24.06. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:2288,Deployability,Install,Installation,2288,"acters (`[` and `]`, in this case), and these characters end up in variable names in the .C macro. I have included a reproducer below (`test_plot_macros.cpp`) which produces three .C macros, two of which are broken as described above.; For instance, in `plot1.C` (one of the produced macros), one can find invalid code such as ; ```cpp; Double_t pdf_Norm[x]_fx1[114] = {; -10.2002,; -10.2,; ...; ```. Would it be possible to filter these special characters when producing the macros?. ### Reproducer. Create a file `test_plot_macros.cpp` containing the script below and run `root test_plot_macros.cpp`. ```cpp; #include ""TCanvas.h"". #include ""RooArgSet.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealVar.h"". using namespace RooFit;. void test_plot_macros() {; // Create a PDF; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", 0, -10, 10);; RooRealVar width(""width"", ""width"", 2, 0, 5);; RooGaussian gaus(""pdf"", ""pdf"", x, mean, width);. // Generate some data; RooDataSet* data = gaus.generate(RooArgSet(x), Name(""data""), NumEvents(2000));. // Plots; TCanvas* c = new TCanvas(""c"");. // Plot 1; // Broken .C macro because of default pdf ""Name()""; RooPlot* frame1 = x.frame();; data->plotOn(frame1);; gaus.plotOn(frame1);; frame1->Draw();; c->SaveAs(""./plot1.png"");; c->SaveAs(""./plot1.C"");. // Plot 2; // Not broken .C macro because of explicit (and safe) ""Name()"" configuration; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; gaus.plotOn(frame2, Name(""gaus""));; frame2->Draw();; c->SaveAs(""./plot2.png"");; c->SaveAs(""./plot2.C"");. // Plot 3; // Broken .C macro again because special charecters are not filtered from ""Name""; RooPlot* frame3 = x.frame();; data->plotOn(frame3);; gaus.plotOn(frame3, Name(""a+b""));; frame3->Draw();; c->SaveAs(""./plot3.png"");; c->SaveAs(""./plot3.C"");; }; ```. ### ROOT version. 6.24.06. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:468,Modifiability,variab,variable,468,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. I noticed that sometimes, when trying to produce .C macros for my figures, the `SaveAs()` function would return broken macros. I narrowed it down to the `Name()` arguments passed to the `plotOn()` function when plotting RooFit pdf's. The problem seems to be that the default `Name()` value contains special characters (`[` and `]`, in this case), and these characters end up in variable names in the .C macro. I have included a reproducer below (`test_plot_macros.cpp`) which produces three .C macros, two of which are broken as described above.; For instance, in `plot1.C` (one of the produced macros), one can find invalid code such as ; ```cpp; Double_t pdf_Norm[x]_fx1[114] = {; -10.2002,; -10.2,; ...; ```. Would it be possible to filter these special characters when producing the macros?. ### Reproducer. Create a file `test_plot_macros.cpp` containing the script below and run `root test_plot_macros.cpp`. ```cpp; #include ""TCanvas.h"". #include ""RooArgSet.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealVar.h"". using namespace RooFit;. void test_plot_macros() {; // Create a PDF; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", 0, -10, 10);; RooRealVar width(""width"", ""width"", 2, 0, 5);; RooGaussian gaus(""pdf"", ""pdf"", x, mean, width);. // Generate some data; RooDataSet* data = gaus.generate(RooArgSet(x), Name(""data""), NumEvents(2000));. // Plots; TCanvas* c = new TCanvas(""c"");. // Plot 1; // Broken .C macro because of default pdf ""Name()""; RooPlot* frame1 = x.frame();; data->plotOn(frame1);; gaus.plotOn(frame1);; frame1->Draw();; c->SaveAs(""./plot1.png"");; c->SaveAs(""./plot1.C"");. // Plot 2; // Not broken .C macro because of explicit (and safe) ""Name()"" configuration; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; gaus.plotOn(frame2, Name(""gaus""));; frame2->Draw();; c->SaveAs(""./plot2.png"");; c->SaveAs(""./plot2.C"");. //",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:1826,Modifiability,config,configuration,1826,"acters (`[` and `]`, in this case), and these characters end up in variable names in the .C macro. I have included a reproducer below (`test_plot_macros.cpp`) which produces three .C macros, two of which are broken as described above.; For instance, in `plot1.C` (one of the produced macros), one can find invalid code such as ; ```cpp; Double_t pdf_Norm[x]_fx1[114] = {; -10.2002,; -10.2,; ...; ```. Would it be possible to filter these special characters when producing the macros?. ### Reproducer. Create a file `test_plot_macros.cpp` containing the script below and run `root test_plot_macros.cpp`. ```cpp; #include ""TCanvas.h"". #include ""RooArgSet.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealVar.h"". using namespace RooFit;. void test_plot_macros() {; // Create a PDF; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", 0, -10, 10);; RooRealVar width(""width"", ""width"", 2, 0, 5);; RooGaussian gaus(""pdf"", ""pdf"", x, mean, width);. // Generate some data; RooDataSet* data = gaus.generate(RooArgSet(x), Name(""data""), NumEvents(2000));. // Plots; TCanvas* c = new TCanvas(""c"");. // Plot 1; // Broken .C macro because of default pdf ""Name()""; RooPlot* frame1 = x.frame();; data->plotOn(frame1);; gaus.plotOn(frame1);; frame1->Draw();; c->SaveAs(""./plot1.png"");; c->SaveAs(""./plot1.C"");. // Plot 2; // Not broken .C macro because of explicit (and safe) ""Name()"" configuration; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; gaus.plotOn(frame2, Name(""gaus""));; frame2->Draw();; c->SaveAs(""./plot2.png"");; c->SaveAs(""./plot2.C"");. // Plot 3; // Broken .C macro again because special charecters are not filtered from ""Name""; RooPlot* frame3 = x.frame();; data->plotOn(frame3);; gaus.plotOn(frame3, Name(""a+b""));; frame3->Draw();; c->SaveAs(""./plot3.png"");; c->SaveAs(""./plot3.C"");; }; ```. ### ROOT version. 6.24.06. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:1811,Safety,safe,safe,1811,"acters (`[` and `]`, in this case), and these characters end up in variable names in the .C macro. I have included a reproducer below (`test_plot_macros.cpp`) which produces three .C macros, two of which are broken as described above.; For instance, in `plot1.C` (one of the produced macros), one can find invalid code such as ; ```cpp; Double_t pdf_Norm[x]_fx1[114] = {; -10.2002,; -10.2,; ...; ```. Would it be possible to filter these special characters when producing the macros?. ### Reproducer. Create a file `test_plot_macros.cpp` containing the script below and run `root test_plot_macros.cpp`. ```cpp; #include ""TCanvas.h"". #include ""RooArgSet.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealVar.h"". using namespace RooFit;. void test_plot_macros() {; // Create a PDF; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", 0, -10, 10);; RooRealVar width(""width"", ""width"", 2, 0, 5);; RooGaussian gaus(""pdf"", ""pdf"", x, mean, width);. // Generate some data; RooDataSet* data = gaus.generate(RooArgSet(x), Name(""data""), NumEvents(2000));. // Plots; TCanvas* c = new TCanvas(""c"");. // Plot 1; // Broken .C macro because of default pdf ""Name()""; RooPlot* frame1 = x.frame();; data->plotOn(frame1);; gaus.plotOn(frame1);; frame1->Draw();; c->SaveAs(""./plot1.png"");; c->SaveAs(""./plot1.C"");. // Plot 2; // Not broken .C macro because of explicit (and safe) ""Name()"" configuration; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; gaus.plotOn(frame2, Name(""gaus""));; frame2->Draw();; c->SaveAs(""./plot2.png"");; c->SaveAs(""./plot2.C"");. // Plot 3; // Broken .C macro again because special charecters are not filtered from ""Name""; RooPlot* frame3 = x.frame();; data->plotOn(frame3);; gaus.plotOn(frame3, Name(""a+b""));; frame3->Draw();; c->SaveAs(""./plot3.png"");; c->SaveAs(""./plot3.C"");; }; ```. ### ROOT version. 6.24.06. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15888:122,Availability,error,error,122,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. A (cumbersome) macro file shown below gives an error in ROOT 6.30.06, but crashes with 6.33.01. 6.30.06. ```; Processing merged.C...; In file included from input_line_8:1:; /.../merged.C:4:1: error: expected unqualified-id; {; ```. 6.33.01. `#9 0x00007eea14d80b1e in clang::Sema::PushCompoundScope(bool) [clone .cold] () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so`. ### Reproducer. root -l merged.C. ```; #if defined(FUNCTION_INTERFACE); void merged(); #endif; {; int a=0;; }. ```. ### ROOT version. 6.30 vs 6.33.01. ### Installation method. Binary. ### Operating system. Ubuntu 22. ### Additional context. https://root-forum.cern.ch/t/how-to-unify-named-and-anonymous-scripts/59694/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15888
https://github.com/root-project/root/issues/15888:267,Availability,error,error,267,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. A (cumbersome) macro file shown below gives an error in ROOT 6.30.06, but crashes with 6.33.01. 6.30.06. ```; Processing merged.C...; In file included from input_line_8:1:; /.../merged.C:4:1: error: expected unqualified-id; {; ```. 6.33.01. `#9 0x00007eea14d80b1e in clang::Sema::PushCompoundScope(bool) [clone .cold] () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so`. ### Reproducer. root -l merged.C. ```; #if defined(FUNCTION_INTERFACE); void merged(); #endif; {; int a=0;; }. ```. ### ROOT version. 6.30 vs 6.33.01. ### Installation method. Binary. ### Operating system. Ubuntu 22. ### Additional context. https://root-forum.cern.ch/t/how-to-unify-named-and-anonymous-scripts/59694/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15888
https://github.com/root-project/root/issues/15888:616,Deployability,Install,Installation,616,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. A (cumbersome) macro file shown below gives an error in ROOT 6.30.06, but crashes with 6.33.01. 6.30.06. ```; Processing merged.C...; In file included from input_line_8:1:; /.../merged.C:4:1: error: expected unqualified-id; {; ```. 6.33.01. `#9 0x00007eea14d80b1e in clang::Sema::PushCompoundScope(bool) [clone .cold] () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so`. ### Reproducer. root -l merged.C. ```; #if defined(FUNCTION_INTERFACE); void merged(); #endif; {; int a=0;; }. ```. ### ROOT version. 6.30 vs 6.33.01. ### Installation method. Binary. ### Operating system. Ubuntu 22. ### Additional context. https://root-forum.cern.ch/t/how-to-unify-named-and-anonymous-scripts/59694/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15888
https://github.com/root-project/root/pull/15890:176,Deployability,update,updated,176,"- use ""\n"" instead of `std::endl` for all but last newline in PrintInfo; - avoid copying strings from getters when possible. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15890
https://github.com/root-project/root/pull/15890:75,Safety,avoid,avoid,75,"- use ""\n"" instead of `std::endl` for all but last newline in PrintInfo; - avoid copying strings from getters when possible. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15890
https://github.com/root-project/root/pull/15890:146,Testability,test,tested,146,"- use ""\n"" instead of `std::endl` for all but last newline in PrintInfo; - avoid copying strings from getters when possible. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15890
https://github.com/root-project/root/pull/15892:67,Performance,Load,LoadSealedPage,67,"In preparation of adding page checksums, it makes sense to enable `LoadSealedPage()` support with DAOS and the caging option (caging: storage of multiple pages in a single object). Even though the implementation is not very performant, it will later allow to streamline the test for checksum verification.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15892
https://github.com/root-project/root/pull/15892:224,Performance,perform,performant,224,"In preparation of adding page checksums, it makes sense to enable `LoadSealedPage()` support with DAOS and the caging option (caging: storage of multiple pages in a single object). Even though the implementation is not very performant, it will later allow to streamline the test for checksum verification.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15892
https://github.com/root-project/root/pull/15892:30,Security,checksum,checksums,30,"In preparation of adding page checksums, it makes sense to enable `LoadSealedPage()` support with DAOS and the caging option (caging: storage of multiple pages in a single object). Even though the implementation is not very performant, it will later allow to streamline the test for checksum verification.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15892
https://github.com/root-project/root/pull/15892:283,Security,checksum,checksum,283,"In preparation of adding page checksums, it makes sense to enable `LoadSealedPage()` support with DAOS and the caging option (caging: storage of multiple pages in a single object). Even though the implementation is not very performant, it will later allow to streamline the test for checksum verification.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15892
https://github.com/root-project/root/pull/15892:274,Testability,test,test,274,"In preparation of adding page checksums, it makes sense to enable `LoadSealedPage()` support with DAOS and the caging option (caging: storage of multiple pages in a single object). Even though the implementation is not very performant, it will later allow to streamline the test for checksum verification.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15892
https://github.com/root-project/root/pull/15893:247,Deployability,update,updated,247,# This Pull request:. ## Changes or fixes:. [before.pdf](https://github.com/user-attachments/files/15914243/before.pdf); [after.pdf](https://github.com/user-attachments/files/15914241/after.pdf). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15883 . @dpiparo @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15893
https://github.com/root-project/root/pull/15893:217,Testability,test,tested,217,# This Pull request:. ## Changes or fixes:. [before.pdf](https://github.com/user-attachments/files/15914243/before.pdf); [after.pdf](https://github.com/user-attachments/files/15914241/after.pdf). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15883 . @dpiparo @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15893
https://github.com/root-project/root/pull/15894:144,Modifiability,config,config,144,The `SealPage()` signature is already rather large and it will grow more with page checksums. So I felt it's time to turn the parameters into a config struct.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15894
https://github.com/root-project/root/pull/15894:83,Security,checksum,checksums,83,The `SealPage()` signature is already rather large and it will grow more with page checksums. So I felt it's time to turn the parameters into a config struct.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15894
https://github.com/root-project/root/pull/15895:222,Deployability,update,updated,222,This Pull request makes the conversion of stl vectors to RVec optional when using Snapshot() . ## Changes or fixes:; Propagating the relevant flag to the Snapshot() call. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15503,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15895
https://github.com/root-project/root/pull/15895:192,Testability,test,tested,192,This Pull request makes the conversion of stl vectors to RVec optional when using Snapshot() . ## Changes or fixes:; Propagating the relevant flag to the Snapshot() call. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15503,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15895
https://github.com/root-project/root/issues/15896:105,Availability,down,downloaded,105,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:162,Availability,down,download,162,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:607,Availability,error,errors,607,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:661,Availability,Down,Download,661,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:707,Availability,down,download,707,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:128,Deployability,install,installer,128,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:445,Deployability,install,installer,445,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:485,Deployability,install,install,485,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:546,Deployability,install,installers,546,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:594,Deployability,install,installation,594,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:674,Deployability,install,installer,674,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:784,Deployability,install,installer,784,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:896,Deployability,Install,Installation,896,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:1059,Deployability,install,installers-are-not-signed,1059,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/pull/15898:118,Availability,error,error,118,the calling code in TFileMerger is not exception-safe and this ends up hiding the original exception under some bogus error. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15898
https://github.com/root-project/root/pull/15898:176,Deployability,update,updated,176,the calling code in TFileMerger is not exception-safe and this ends up hiding the original exception under some bogus error. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15898
https://github.com/root-project/root/pull/15898:49,Safety,safe,safe,49,the calling code in TFileMerger is not exception-safe and this ends up hiding the original exception under some bogus error. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15898
https://github.com/root-project/root/pull/15898:146,Testability,test,tested,146,the calling code in TFileMerger is not exception-safe and this ends up hiding the original exception under some bogus error. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15898
https://github.com/root-project/root/pull/15900:1617,Availability,Failure,Failure,1617,"Remove some headers from `std_darwin.modulemap` and backport https://github.com/llvm/llvm-project/commit/09ec0004eee2d9929d25cf519956cc470ffb33dd to fix the build of `std.pcm`. ---. This fixes the build but still has five failing tests:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); 1729 - roottest-root-io-compression-make (Failed); ```. There seem to be at least two problems: an `UNREACHABLE executed`; ```; builtin functions are handled elsewhere; UNREACHABLE executed at /Users/sftnight/jonas/root.src/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:2036!; ```. and Clad not being able to differentiate `__builtin_pow`:; ```; [ RUN ] CladDerivator.power; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:162:55: warning: Unsupported declaration; using __result_type = typename __promote<_A1, _A2>::type;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:153:10: warning: function '__builtin_pow' was not differentiated because clad failed to d; ifferentiate it and no suitable overload was found in namespace 'custom_derivatives', and function may not be eligible for numerical differentiation.; return __builtin_pow(__x, __y);; ^; /Users/sftnight/jonas/root.src/math/mathcore/test/CladDerivatorTests.cxx:43: Failure; Expected equality of these values:; 48; value->GetAsDouble(); Which is: 0; [ FAILED ] CladDerivator.power (6 ms); ```. I'm still investigating, starting with the first.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:892,Energy Efficiency,power,power,892,"Remove some headers from `std_darwin.modulemap` and backport https://github.com/llvm/llvm-project/commit/09ec0004eee2d9929d25cf519956cc470ffb33dd to fix the build of `std.pcm`. ---. This fixes the build but still has five failing tests:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); 1729 - roottest-root-io-compression-make (Failed); ```. There seem to be at least two problems: an `UNREACHABLE executed`; ```; builtin functions are handled elsewhere; UNREACHABLE executed at /Users/sftnight/jonas/root.src/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:2036!; ```. and Clad not being able to differentiate `__builtin_pow`:; ```; [ RUN ] CladDerivator.power; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:162:55: warning: Unsupported declaration; using __result_type = typename __promote<_A1, _A2>::type;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:153:10: warning: function '__builtin_pow' was not differentiated because clad failed to d; ifferentiate it and no suitable overload was found in namespace 'custom_derivatives', and function may not be eligible for numerical differentiation.; return __builtin_pow(__x, __y);; ^; /Users/sftnight/jonas/root.src/math/mathcore/test/CladDerivatorTests.cxx:43: Failure; Expected equality of these values:; 48; value->GetAsDouble(); Which is: 0; [ FAILED ] CladDerivator.power (6 ms); ```. I'm still investigating, starting with the first.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:1726,Energy Efficiency,power,power,1726,"Remove some headers from `std_darwin.modulemap` and backport https://github.com/llvm/llvm-project/commit/09ec0004eee2d9929d25cf519956cc470ffb33dd to fix the build of `std.pcm`. ---. This fixes the build but still has five failing tests:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); 1729 - roottest-root-io-compression-make (Failed); ```. There seem to be at least two problems: an `UNREACHABLE executed`; ```; builtin functions are handled elsewhere; UNREACHABLE executed at /Users/sftnight/jonas/root.src/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:2036!; ```. and Clad not being able to differentiate `__builtin_pow`:; ```; [ RUN ] CladDerivator.power; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:162:55: warning: Unsupported declaration; using __result_type = typename __promote<_A1, _A2>::type;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:153:10: warning: function '__builtin_pow' was not differentiated because clad failed to d; ifferentiate it and no suitable overload was found in namespace 'custom_derivatives', and function may not be eligible for numerical differentiation.; return __builtin_pow(__x, __y);; ^; /Users/sftnight/jonas/root.src/math/mathcore/test/CladDerivatorTests.cxx:43: Failure; Expected equality of these values:; 48; value->GetAsDouble(); Which is: 0; [ FAILED ] CladDerivator.power (6 ms); ```. I'm still investigating, starting with the first.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:230,Testability,test,tests,230,"Remove some headers from `std_darwin.modulemap` and backport https://github.com/llvm/llvm-project/commit/09ec0004eee2d9929d25cf519956cc470ffb33dd to fix the build of `std.pcm`. ---. This fixes the build but still has five failing tests:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); 1729 - roottest-root-io-compression-make (Failed); ```. There seem to be at least two problems: an `UNREACHABLE executed`; ```; builtin functions are handled elsewhere; UNREACHABLE executed at /Users/sftnight/jonas/root.src/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:2036!; ```. and Clad not being able to differentiate `__builtin_pow`:; ```; [ RUN ] CladDerivator.power; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:162:55: warning: Unsupported declaration; using __result_type = typename __promote<_A1, _A2>::type;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:153:10: warning: function '__builtin_pow' was not differentiated because clad failed to d; ifferentiate it and no suitable overload was found in namespace 'custom_derivatives', and function may not be eligible for numerical differentiation.; return __builtin_pow(__x, __y);; ^; /Users/sftnight/jonas/root.src/math/mathcore/test/CladDerivatorTests.cxx:43: Failure; Expected equality of these values:; 48; value->GetAsDouble(); Which is: 0; [ FAILED ] CladDerivator.power (6 ms); ```. I'm still investigating, starting with the first.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:257,Testability,test,tests,257,"Remove some headers from `std_darwin.modulemap` and backport https://github.com/llvm/llvm-project/commit/09ec0004eee2d9929d25cf519956cc470ffb33dd to fix the build of `std.pcm`. ---. This fixes the build but still has five failing tests:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); 1729 - roottest-root-io-compression-make (Failed); ```. There seem to be at least two problems: an `UNREACHABLE executed`; ```; builtin functions are handled elsewhere; UNREACHABLE executed at /Users/sftnight/jonas/root.src/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:2036!; ```. and Clad not being able to differentiate `__builtin_pow`:; ```; [ RUN ] CladDerivator.power; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:162:55: warning: Unsupported declaration; using __result_type = typename __promote<_A1, _A2>::type;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:153:10: warning: function '__builtin_pow' was not differentiated because clad failed to d; ifferentiate it and no suitable overload was found in namespace 'custom_derivatives', and function may not be eligible for numerical differentiation.; return __builtin_pow(__x, __y);; ^; /Users/sftnight/jonas/root.src/math/mathcore/test/CladDerivatorTests.cxx:43: Failure; Expected equality of these values:; 48; value->GetAsDouble(); Which is: 0; [ FAILED ] CladDerivator.power (6 ms); ```. I'm still investigating, starting with the first.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:298,Testability,test,test-CladDerivatorTests,298,"Remove some headers from `std_darwin.modulemap` and backport https://github.com/llvm/llvm-project/commit/09ec0004eee2d9929d25cf519956cc470ffb33dd to fix the build of `std.pcm`. ---. This fixes the build but still has five failing tests:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); 1729 - roottest-root-io-compression-make (Failed); ```. There seem to be at least two problems: an `UNREACHABLE executed`; ```; builtin functions are handled elsewhere; UNREACHABLE executed at /Users/sftnight/jonas/root.src/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:2036!; ```. and Clad not being able to differentiate `__builtin_pow`:; ```; [ RUN ] CladDerivator.power; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:162:55: warning: Unsupported declaration; using __result_type = typename __promote<_A1, _A2>::type;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:153:10: warning: function '__builtin_pow' was not differentiated because clad failed to d; ifferentiate it and no suitable overload was found in namespace 'custom_derivatives', and function may not be eligible for numerical differentiation.; return __builtin_pow(__x, __y);; ^; /Users/sftnight/jonas/root.src/math/mathcore/test/CladDerivatorTests.cxx:43: Failure; Expected equality of these values:; 48; value->GetAsDouble(); Which is: 0; [ FAILED ] CladDerivator.power (6 ms); ```. I'm still investigating, starting with the first.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:363,Testability,test,test-testHistFactory,363,"Remove some headers from `std_darwin.modulemap` and backport https://github.com/llvm/llvm-project/commit/09ec0004eee2d9929d25cf519956cc470ffb33dd to fix the build of `std.pcm`. ---. This fixes the build but still has five failing tests:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); 1729 - roottest-root-io-compression-make (Failed); ```. There seem to be at least two problems: an `UNREACHABLE executed`; ```; builtin functions are handled elsewhere; UNREACHABLE executed at /Users/sftnight/jonas/root.src/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:2036!; ```. and Clad not being able to differentiate `__builtin_pow`:; ```; [ RUN ] CladDerivator.power; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:162:55: warning: Unsupported declaration; using __result_type = typename __promote<_A1, _A2>::type;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:153:10: warning: function '__builtin_pow' was not differentiated because clad failed to d; ifferentiate it and no suitable overload was found in namespace 'custom_derivatives', and function may not be eligible for numerical differentiation.; return __builtin_pow(__x, __y);; ^; /Users/sftnight/jonas/root.src/math/mathcore/test/CladDerivatorTests.cxx:43: Failure; Expected equality of these values:; 48; value->GetAsDouble(); Which is: 0; [ FAILED ] CladDerivator.power (6 ms); ```. I'm still investigating, starting with the first.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:417,Testability,test,test-,417,"Remove some headers from `std_darwin.modulemap` and backport https://github.com/llvm/llvm-project/commit/09ec0004eee2d9929d25cf519956cc470ffb33dd to fix the build of `std.pcm`. ---. This fixes the build but still has five failing tests:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); 1729 - roottest-root-io-compression-make (Failed); ```. There seem to be at least two problems: an `UNREACHABLE executed`; ```; builtin functions are handled elsewhere; UNREACHABLE executed at /Users/sftnight/jonas/root.src/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:2036!; ```. and Clad not being able to differentiate `__builtin_pow`:; ```; [ RUN ] CladDerivator.power; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:162:55: warning: Unsupported declaration; using __result_type = typename __promote<_A1, _A2>::type;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:153:10: warning: function '__builtin_pow' was not differentiated because clad failed to d; ifferentiate it and no suitable overload was found in namespace 'custom_derivatives', and function may not be eligible for numerical differentiation.; return __builtin_pow(__x, __y);; ^; /Users/sftnight/jonas/root.src/math/mathcore/test/CladDerivatorTests.cxx:43: Failure; Expected equality of these values:; 48; value->GetAsDouble(); Which is: 0; [ FAILED ] CladDerivator.power (6 ms); ```. I'm still investigating, starting with the first.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:476,Testability,test,test-testRooFuncWrapper,476,"Remove some headers from `std_darwin.modulemap` and backport https://github.com/llvm/llvm-project/commit/09ec0004eee2d9929d25cf519956cc470ffb33dd to fix the build of `std.pcm`. ---. This fixes the build but still has five failing tests:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); 1729 - roottest-root-io-compression-make (Failed); ```. There seem to be at least two problems: an `UNREACHABLE executed`; ```; builtin functions are handled elsewhere; UNREACHABLE executed at /Users/sftnight/jonas/root.src/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:2036!; ```. and Clad not being able to differentiate `__builtin_pow`:; ```; [ RUN ] CladDerivator.power; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:162:55: warning: Unsupported declaration; using __result_type = typename __promote<_A1, _A2>::type;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:153:10: warning: function '__builtin_pow' was not differentiated because clad failed to d; ifferentiate it and no suitable overload was found in namespace 'custom_derivatives', and function may not be eligible for numerical differentiation.; return __builtin_pow(__x, __y);; ^; /Users/sftnight/jonas/root.src/math/mathcore/test/CladDerivatorTests.cxx:43: Failure; Expected equality of these values:; 48; value->GetAsDouble(); Which is: 0; [ FAILED ] CladDerivator.power (6 ms); ```. I'm still investigating, starting with the first.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:1585,Testability,test,test,1585,"Remove some headers from `std_darwin.modulemap` and backport https://github.com/llvm/llvm-project/commit/09ec0004eee2d9929d25cf519956cc470ffb33dd to fix the build of `std.pcm`. ---. This fixes the build but still has five failing tests:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); 1729 - roottest-root-io-compression-make (Failed); ```. There seem to be at least two problems: an `UNREACHABLE executed`; ```; builtin functions are handled elsewhere; UNREACHABLE executed at /Users/sftnight/jonas/root.src/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:2036!; ```. and Clad not being able to differentiate `__builtin_pow`:; ```; [ RUN ] CladDerivator.power; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:162:55: warning: Unsupported declaration; using __result_type = typename __promote<_A1, _A2>::type;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:153:10: warning: function '__builtin_pow' was not differentiated because clad failed to d; ifferentiate it and no suitable overload was found in namespace 'custom_derivatives', and function may not be eligible for numerical differentiation.; return __builtin_pow(__x, __y);; ^; /Users/sftnight/jonas/root.src/math/mathcore/test/CladDerivatorTests.cxx:43: Failure; Expected equality of these values:; 48; value->GetAsDouble(); Which is: 0; [ FAILED ] CladDerivator.power (6 ms); ```. I'm still investigating, starting with the first.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15902:152,Deployability,update,updated,152,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11565. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15902
https://github.com/root-project/root/pull/15902:122,Testability,test,tested,122,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/11565. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15902
https://github.com/root-project/root/pull/15904:379,Deployability,update,updated,379,# This Pull request:; Added RNTupleTTreeChecker and RNTupleTTreeCheckerCLI to ROOT. ## Changes or fixes:; - Added RNTupleTTreeChecker class for comparing TTree and RNTuple structures.; - Added RNTupleTTreeCheckerCLI for command-line interface to interact with RNTupleTTreeChecker.; - Included necessary header and source files. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Details:. tree/ntupleutil/; - RNTupleTTreeChecker.cxx: Implementation of the RNTupleTTreeChecker class.; - RNTupleTTreeCheckerCLI.cxx: Implementation of the command line interface.; - inc/ROOT/RNTupleTTreeChecker.hxx: Header file for the RNTupleTTreeChecker class.; - inc/ROOT/RNTupleTTreeCheckerCLI.hxx: Header file for the RNTupleTTreeChecker CLI class.; - modified CMakeLists to include above files. main/; - src/rntuplevsttree.cxx: Main entry point for CLI.; - Modified CMakeLists to include rntuplevsttree.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15904
https://github.com/root-project/root/pull/15904:233,Integrability,interface,interface,233,# This Pull request:; Added RNTupleTTreeChecker and RNTupleTTreeCheckerCLI to ROOT. ## Changes or fixes:; - Added RNTupleTTreeChecker class for comparing TTree and RNTuple structures.; - Added RNTupleTTreeCheckerCLI for command-line interface to interact with RNTupleTTreeChecker.; - Included necessary header and source files. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Details:. tree/ntupleutil/; - RNTupleTTreeChecker.cxx: Implementation of the RNTupleTTreeChecker class.; - RNTupleTTreeCheckerCLI.cxx: Implementation of the command line interface.; - inc/ROOT/RNTupleTTreeChecker.hxx: Header file for the RNTupleTTreeChecker class.; - inc/ROOT/RNTupleTTreeCheckerCLI.hxx: Header file for the RNTupleTTreeChecker CLI class.; - modified CMakeLists to include above files. main/; - src/rntuplevsttree.cxx: Main entry point for CLI.; - Modified CMakeLists to include rntuplevsttree.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15904
https://github.com/root-project/root/pull/15904:585,Integrability,interface,interface,585,# This Pull request:; Added RNTupleTTreeChecker and RNTupleTTreeCheckerCLI to ROOT. ## Changes or fixes:; - Added RNTupleTTreeChecker class for comparing TTree and RNTuple structures.; - Added RNTupleTTreeCheckerCLI for command-line interface to interact with RNTupleTTreeChecker.; - Included necessary header and source files. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Details:. tree/ntupleutil/; - RNTupleTTreeChecker.cxx: Implementation of the RNTupleTTreeChecker class.; - RNTupleTTreeCheckerCLI.cxx: Implementation of the command line interface.; - inc/ROOT/RNTupleTTreeChecker.hxx: Header file for the RNTupleTTreeChecker class.; - inc/ROOT/RNTupleTTreeCheckerCLI.hxx: Header file for the RNTupleTTreeChecker CLI class.; - modified CMakeLists to include above files. main/; - src/rntuplevsttree.cxx: Main entry point for CLI.; - Modified CMakeLists to include rntuplevsttree.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15904
https://github.com/root-project/root/pull/15904:349,Testability,test,tested,349,# This Pull request:; Added RNTupleTTreeChecker and RNTupleTTreeCheckerCLI to ROOT. ## Changes or fixes:; - Added RNTupleTTreeChecker class for comparing TTree and RNTuple structures.; - Added RNTupleTTreeCheckerCLI for command-line interface to interact with RNTupleTTreeChecker.; - Included necessary header and source files. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Details:. tree/ntupleutil/; - RNTupleTTreeChecker.cxx: Implementation of the RNTupleTTreeChecker class.; - RNTupleTTreeCheckerCLI.cxx: Implementation of the command line interface.; - inc/ROOT/RNTupleTTreeChecker.hxx: Header file for the RNTupleTTreeChecker class.; - inc/ROOT/RNTupleTTreeCheckerCLI.hxx: Header file for the RNTupleTTreeChecker CLI class.; - modified CMakeLists to include above files. main/; - src/rntuplevsttree.cxx: Main entry point for CLI.; - Modified CMakeLists to include rntuplevsttree.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15904
https://github.com/root-project/root/pull/15905:346,Deployability,update,updated,346,# This Pull request:; Propagate user- and system-extensions in TGeoAssemblyVolumes to cloned entities.; This was missing in the sub-class of TGeoVolume and then tends to fail on; re-alignments using TGeoPhysicalNode. ## Changes or fixes:; Buggy volume clones if the volume has user extensions. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15905
https://github.com/root-project/root/pull/15905:316,Testability,test,tested,316,# This Pull request:; Propagate user- and system-extensions in TGeoAssemblyVolumes to cloned entities.; This was missing in the sub-class of TGeoVolume and then tends to fail on; re-alignments using TGeoPhysicalNode. ## Changes or fixes:; Buggy volume clones if the volume has user extensions. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15905
https://github.com/root-project/root/issues/15906:513,Deployability,Install,Installation,513,"### Explain what you would like to see improved and how. In the old times, the list of classes implemented by ROOT was 1-2 clicks away from the main ROOT page. Now on the ; ROOT reference doc page, there is no useful information anymore except for beginners.; I tried all links and nowhere I would bet to the class list and the doxygen pages.; Sorry, but this is somehow sub-optimal. ### ROOT version. Doc bad since 6.16. ROOT 6.16 was still OK: the ""All Classes"" link was there: https://root.cern/doc/v616/. ### Installation method. Main ROOT home page. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15906
https://github.com/root-project/root/pull/15908:137,Safety,sanity check,sanity checks,137,"Like the tests added in https://github.com/root-project/root/pull/15499/commits/e00aded416c4d8b0c364035353dfb529602fd0e1, these are also sanity checks meant in part as code-as-documentation for users to see how things work. It turns out in this case that GCC on the one hand and Clang and MSVC on the other hand have two different solutions for binary arithmetic operations on two NaNs. In both cases, one of the two NaNs is returned, but in one case it's the first, in the other is it's the second. The tests added in this commit will hopefully warn RooNaNPacker users of this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15908
https://github.com/root-project/root/pull/15908:9,Testability,test,tests,9,"Like the tests added in https://github.com/root-project/root/pull/15499/commits/e00aded416c4d8b0c364035353dfb529602fd0e1, these are also sanity checks meant in part as code-as-documentation for users to see how things work. It turns out in this case that GCC on the one hand and Clang and MSVC on the other hand have two different solutions for binary arithmetic operations on two NaNs. In both cases, one of the two NaNs is returned, but in one case it's the first, in the other is it's the second. The tests added in this commit will hopefully warn RooNaNPacker users of this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15908
https://github.com/root-project/root/pull/15908:504,Testability,test,tests,504,"Like the tests added in https://github.com/root-project/root/pull/15499/commits/e00aded416c4d8b0c364035353dfb529602fd0e1, these are also sanity checks meant in part as code-as-documentation for users to see how things work. It turns out in this case that GCC on the one hand and Clang and MSVC on the other hand have two different solutions for binary arithmetic operations on two NaNs. In both cases, one of the two NaNs is returned, but in one case it's the first, in the other is it's the second. The tests added in this commit will hopefully warn RooNaNPacker users of this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15908
https://github.com/root-project/root/pull/15909:289,Energy Efficiency,schedul,scheduling,289,"Adds `RPageSource::LoadStructure[Impl]()`. This allows to load header and footer without processing them. Decompression and deserialization will still happen in Attach(), which calls LoadStructure if it hasn't been called before. This will facilitate asynchronous open of files for RDF MT scheduling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15909
https://github.com/root-project/root/pull/15909:19,Performance,Load,LoadStructure,19,"Adds `RPageSource::LoadStructure[Impl]()`. This allows to load header and footer without processing them. Decompression and deserialization will still happen in Attach(), which calls LoadStructure if it hasn't been called before. This will facilitate asynchronous open of files for RDF MT scheduling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15909
https://github.com/root-project/root/pull/15909:58,Performance,load,load,58,"Adds `RPageSource::LoadStructure[Impl]()`. This allows to load header and footer without processing them. Decompression and deserialization will still happen in Attach(), which calls LoadStructure if it hasn't been called before. This will facilitate asynchronous open of files for RDF MT scheduling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15909
https://github.com/root-project/root/pull/15909:183,Performance,Load,LoadStructure,183,"Adds `RPageSource::LoadStructure[Impl]()`. This allows to load header and footer without processing them. Decompression and deserialization will still happen in Attach(), which calls LoadStructure if it hasn't been called before. This will facilitate asynchronous open of files for RDF MT scheduling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15909
https://github.com/root-project/root/pull/15910:84,Availability,error,errors,84,"Clad currently has problems with some new headers in `MacOSX15.0.sdk` and crashes / errors due to `__builtin_pow`. Disable it for now while a solution is worked on, so we can upgrade the nodes and keep the build green.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15910
https://github.com/root-project/root/pull/15910:175,Deployability,upgrade,upgrade,175,"Clad currently has problems with some new headers in `MacOSX15.0.sdk` and crashes / errors due to `__builtin_pow`. Disable it for now while a solution is worked on, so we can upgrade the nodes and keep the build green.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15910
https://github.com/root-project/root/pull/15910:212,Energy Efficiency,green,green,212,"Clad currently has problems with some new headers in `MacOSX15.0.sdk` and crashes / errors due to `__builtin_pow`. Disable it for now while a solution is worked on, so we can upgrade the nodes and keep the build green.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15910
https://github.com/root-project/root/issues/15912:565,Deployability,Install,Install,565,"After https://github.com/root-project/root/pull/15900, there should be four failing tests due to Clad:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); ```. They seem somehow related to `__builtin_pow`. For this reason, to keep green builds, clad was disabled for mac-beta in https://github.com/root-project/root/pull/15910. ### Reproducer. Install `MacOSX15.0.sdk`, build ROOT and try to run all tests. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15912
https://github.com/root-project/root/issues/15912:660,Deployability,Install,Installation,660,"After https://github.com/root-project/root/pull/15900, there should be four failing tests due to Clad:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); ```. They seem somehow related to `__builtin_pow`. For this reason, to keep green builds, clad was disabled for mac-beta in https://github.com/root-project/root/pull/15910. ### Reproducer. Install `MacOSX15.0.sdk`, build ROOT and try to run all tests. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15912
https://github.com/root-project/root/issues/15912:452,Energy Efficiency,green,green,452,"After https://github.com/root-project/root/pull/15900, there should be four failing tests due to Clad:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); ```. They seem somehow related to `__builtin_pow`. For this reason, to keep green builds, clad was disabled for mac-beta in https://github.com/root-project/root/pull/15910. ### Reproducer. Install `MacOSX15.0.sdk`, build ROOT and try to run all tests. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15912
https://github.com/root-project/root/issues/15912:84,Testability,test,tests,84,"After https://github.com/root-project/root/pull/15900, there should be four failing tests due to Clad:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); ```. They seem somehow related to `__builtin_pow`. For this reason, to keep green builds, clad was disabled for mac-beta in https://github.com/root-project/root/pull/15910. ### Reproducer. Install `MacOSX15.0.sdk`, build ROOT and try to run all tests. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15912
https://github.com/root-project/root/issues/15912:123,Testability,test,tests,123,"After https://github.com/root-project/root/pull/15900, there should be four failing tests due to Clad:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); ```. They seem somehow related to `__builtin_pow`. For this reason, to keep green builds, clad was disabled for mac-beta in https://github.com/root-project/root/pull/15910. ### Reproducer. Install `MacOSX15.0.sdk`, build ROOT and try to run all tests. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15912
https://github.com/root-project/root/issues/15912:164,Testability,test,test-CladDerivatorTests,164,"After https://github.com/root-project/root/pull/15900, there should be four failing tests due to Clad:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); ```. They seem somehow related to `__builtin_pow`. For this reason, to keep green builds, clad was disabled for mac-beta in https://github.com/root-project/root/pull/15910. ### Reproducer. Install `MacOSX15.0.sdk`, build ROOT and try to run all tests. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15912
https://github.com/root-project/root/issues/15912:229,Testability,test,test-testHistFactory,229,"After https://github.com/root-project/root/pull/15900, there should be four failing tests due to Clad:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); ```. They seem somehow related to `__builtin_pow`. For this reason, to keep green builds, clad was disabled for mac-beta in https://github.com/root-project/root/pull/15910. ### Reproducer. Install `MacOSX15.0.sdk`, build ROOT and try to run all tests. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15912
https://github.com/root-project/root/issues/15912:283,Testability,test,test-,283,"After https://github.com/root-project/root/pull/15900, there should be four failing tests due to Clad:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); ```. They seem somehow related to `__builtin_pow`. For this reason, to keep green builds, clad was disabled for mac-beta in https://github.com/root-project/root/pull/15910. ### Reproducer. Install `MacOSX15.0.sdk`, build ROOT and try to run all tests. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15912
https://github.com/root-project/root/issues/15912:342,Testability,test,test-testRooFuncWrapper,342,"After https://github.com/root-project/root/pull/15900, there should be four failing tests due to Clad:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); ```. They seem somehow related to `__builtin_pow`. For this reason, to keep green builds, clad was disabled for mac-beta in https://github.com/root-project/root/pull/15910. ### Reproducer. Install `MacOSX15.0.sdk`, build ROOT and try to run all tests. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15912
https://github.com/root-project/root/issues/15912:621,Testability,test,tests,621,"After https://github.com/root-project/root/pull/15900, there should be four failing tests due to Clad:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); ```. They seem somehow related to `__builtin_pow`. For this reason, to keep green builds, clad was disabled for mac-beta in https://github.com/root-project/root/pull/15910. ### Reproducer. Install `MacOSX15.0.sdk`, build ROOT and try to run all tests. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15912
https://github.com/root-project/root/pull/15913:148,Modifiability,config,configured,148,"Following widgets will be web-based by default:; 1. `TCanvas`; 2. `TBrowser`; 3. `TTreeViewer`; 4. `TGeomPainter`. Type of all these widgets can be configured via rootrc file:. ```; # As options for Canvas.Name, ROOT provides TWebCanvas and the legacy TRootCanvas.; Canvas.Name: TWebCanvas. # Type of Browser: TRootBrowser or TRootBrowserLite or ROOT::RWebBrowserImp; Browser.Name: ROOT::RWebBrowserImp. # Type of geometry painter: root or web; GeomPainter.Name: web. # Type of tree viewer: TTreeViewer or RTreeViewer; TreeViewer.Name: RTreeViewer; ```. Any of these settings can be adjusted in local `.rootrc` file. One can provide special config for web-based fit panel.; For the moment `TH1::FitPanel()` always starts classical GUI and there is no configurable plugin for that. ; The only problem - web-based fit panel was not tested for long time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15913
https://github.com/root-project/root/pull/15913:641,Modifiability,config,config,641,"Following widgets will be web-based by default:; 1. `TCanvas`; 2. `TBrowser`; 3. `TTreeViewer`; 4. `TGeomPainter`. Type of all these widgets can be configured via rootrc file:. ```; # As options for Canvas.Name, ROOT provides TWebCanvas and the legacy TRootCanvas.; Canvas.Name: TWebCanvas. # Type of Browser: TRootBrowser or TRootBrowserLite or ROOT::RWebBrowserImp; Browser.Name: ROOT::RWebBrowserImp. # Type of geometry painter: root or web; GeomPainter.Name: web. # Type of tree viewer: TTreeViewer or RTreeViewer; TreeViewer.Name: RTreeViewer; ```. Any of these settings can be adjusted in local `.rootrc` file. One can provide special config for web-based fit panel.; For the moment `TH1::FitPanel()` always starts classical GUI and there is no configurable plugin for that. ; The only problem - web-based fit panel was not tested for long time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15913
https://github.com/root-project/root/pull/15913:751,Modifiability,config,configurable,751,"Following widgets will be web-based by default:; 1. `TCanvas`; 2. `TBrowser`; 3. `TTreeViewer`; 4. `TGeomPainter`. Type of all these widgets can be configured via rootrc file:. ```; # As options for Canvas.Name, ROOT provides TWebCanvas and the legacy TRootCanvas.; Canvas.Name: TWebCanvas. # Type of Browser: TRootBrowser or TRootBrowserLite or ROOT::RWebBrowserImp; Browser.Name: ROOT::RWebBrowserImp. # Type of geometry painter: root or web; GeomPainter.Name: web. # Type of tree viewer: TTreeViewer or RTreeViewer; TreeViewer.Name: RTreeViewer; ```. Any of these settings can be adjusted in local `.rootrc` file. One can provide special config for web-based fit panel.; For the moment `TH1::FitPanel()` always starts classical GUI and there is no configurable plugin for that. ; The only problem - web-based fit panel was not tested for long time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15913
https://github.com/root-project/root/pull/15913:764,Modifiability,plugin,plugin,764,"Following widgets will be web-based by default:; 1. `TCanvas`; 2. `TBrowser`; 3. `TTreeViewer`; 4. `TGeomPainter`. Type of all these widgets can be configured via rootrc file:. ```; # As options for Canvas.Name, ROOT provides TWebCanvas and the legacy TRootCanvas.; Canvas.Name: TWebCanvas. # Type of Browser: TRootBrowser or TRootBrowserLite or ROOT::RWebBrowserImp; Browser.Name: ROOT::RWebBrowserImp. # Type of geometry painter: root or web; GeomPainter.Name: web. # Type of tree viewer: TTreeViewer or RTreeViewer; TreeViewer.Name: RTreeViewer; ```. Any of these settings can be adjusted in local `.rootrc` file. One can provide special config for web-based fit panel.; For the moment `TH1::FitPanel()` always starts classical GUI and there is no configurable plugin for that. ; The only problem - web-based fit panel was not tested for long time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15913
https://github.com/root-project/root/pull/15913:830,Testability,test,tested,830,"Following widgets will be web-based by default:; 1. `TCanvas`; 2. `TBrowser`; 3. `TTreeViewer`; 4. `TGeomPainter`. Type of all these widgets can be configured via rootrc file:. ```; # As options for Canvas.Name, ROOT provides TWebCanvas and the legacy TRootCanvas.; Canvas.Name: TWebCanvas. # Type of Browser: TRootBrowser or TRootBrowserLite or ROOT::RWebBrowserImp; Browser.Name: ROOT::RWebBrowserImp. # Type of geometry painter: root or web; GeomPainter.Name: web. # Type of tree viewer: TTreeViewer or RTreeViewer; TreeViewer.Name: RTreeViewer; ```. Any of these settings can be adjusted in local `.rootrc` file. One can provide special config for web-based fit panel.; For the moment `TH1::FitPanel()` always starts classical GUI and there is no configurable plugin for that. ; The only problem - web-based fit panel was not tested for long time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15913
https://github.com/root-project/root/pull/15914:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15914
https://github.com/root-project/root/pull/15914:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15914
https://github.com/root-project/root/pull/15918:0,Testability,Test,Test,0,"Test https://its.cern.ch/jira/browse/ROOT-10021 in the new CI, to see the status of this issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15918
https://github.com/root-project/root/issues/15919:506,Deployability,Install,Installation,506,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From [ROOT-9699](https://its.cern.ch/jira/browse/ROOT-9699). ### Reproducer. When trying to access the list of public methods of a class in python I observe; ```; RuntimeWarning: failed offset calculation between TList and TViewPubFunctions; ```. For me this can simply be reproduced with. ```; python3 -c ""import ROOT; ROOT.TObject.Class().GetListOfAllPublicMethods()""; ```. ### ROOT version. master on Mac and 6.32 on Alma9. ### Installation method. from sources. ### Operating system. all, I fear. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15919
https://github.com/root-project/root/issues/15919:167,Security,access,access,167,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From [ROOT-9699](https://its.cern.ch/jira/browse/ROOT-9699). ### Reproducer. When trying to access the list of public methods of a class in python I observe; ```; RuntimeWarning: failed offset calculation between TList and TViewPubFunctions; ```. For me this can simply be reproduced with. ```; python3 -c ""import ROOT; ROOT.TObject.Class().GetListOfAllPublicMethods()""; ```. ### ROOT version. master on Mac and 6.32 on Alma9. ### Installation method. from sources. ### Operating system. all, I fear. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15919
https://github.com/root-project/root/issues/15919:338,Usability,simpl,simply,338,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From [ROOT-9699](https://its.cern.ch/jira/browse/ROOT-9699). ### Reproducer. When trying to access the list of public methods of a class in python I observe; ```; RuntimeWarning: failed offset calculation between TList and TViewPubFunctions; ```. For me this can simply be reproduced with. ```; python3 -c ""import ROOT; ROOT.TObject.Class().GetListOfAllPublicMethods()""; ```. ### ROOT version. master on Mac and 6.32 on Alma9. ### Installation method. from sources. ### Operating system. all, I fear. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15919
https://github.com/root-project/root/pull/15920:72,Deployability,patch,patch,72,Minor backports such that the RooFit sources don't diverge between 6.32 patch releases and `master` just yet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15920
https://github.com/root-project/root/pull/15920:78,Deployability,release,releases,78,Minor backports such that the RooFit sources don't diverge between 6.32 patch releases and `master` just yet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15920
https://github.com/root-project/root/pull/15921:136,Performance,Load,LoadSealedPage,136,Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage()`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15921
https://github.com/root-project/root/pull/15921:24,Security,checksum,checksums,24,Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage()`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15921
https://github.com/root-project/root/pull/15921:38,Security,checksum,checksum,38,Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage()`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15921
https://github.com/root-project/root/pull/15921:75,Security,checksum,checksums,75,Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage()`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15921
https://github.com/root-project/root/pull/15921:263,Security,checksum,checksum,263,Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage()`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15921
https://github.com/root-project/root/issues/15922:567,Deployability,Install,Installation,567,"### Explain what you would like to see improved and how. In the new TScatter class, it was found here https://root-forum.cern.ch/t/scatter-plot-with-colorbar/59562/14 that:. - There is not an easy way to control the color bar range; - Save TScatter object as .C and reload it, then the palette axis title is lost. The function SavePrimitive should be amended. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15922
https://github.com/root-project/root/issues/15922:595,Deployability,Release,Release,595,"### Explain what you would like to see improved and how. In the new TScatter class, it was found here https://root-forum.cern.ch/t/scatter-plot-with-colorbar/59562/14 that:. - There is not an easy way to control the color bar range; - Save TScatter object as .C and reload it, then the palette axis title is lost. The function SavePrimitive should be amended. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15922
https://github.com/root-project/root/issues/15924:491,Deployability,install,install-,491,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; --------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:610,Deployability,install,install-,610,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; --------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:747,Deployability,install,install-,747,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; --------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:890,Deployability,install,install-,890,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; --------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:1118,Deployability,install,installed,1118,"g happen when trying to`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ---------------------------------------------------------------------------. ```. ### Installation method. built from source. ### Operating system. macOS Sonoma 14.5. ### Additional ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:1318,Deployability,install,install-,1318,"`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ---------------------------------------------------------------------------. ```. ### Installation method. built from source. ### Operating system. macOS Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:1368,Deployability,install,install-,1368,"`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ---------------------------------------------------------------------------. ```. ### Installation method. built from source. ### Operating system. macOS Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:2031,Deployability,Install,Installation,2031,"`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ---------------------------------------------------------------------------. ```. ### Installation method. built from source. ### Operating system. macOS Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:818,Performance,load,loader,818,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; --------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:923,Performance,load,loader,923,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; --------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:995,Performance,load,load,995,"uplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
