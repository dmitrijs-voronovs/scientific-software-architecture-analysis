id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1countingmessagehandler.html:178,Testability,log,logging,178,﻿. SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::countingmessagehandler Namespace Reference . Classes; class  CountingMessageHandler;  The CountingMessageHandler class count the messages by types. More...;  ; class  MainCountingMessageHandler;  The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingcountingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1countingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1countingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html:322,Integrability,message,messages,322,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::loggingmessagehandler Namespace Reference . Classes; class  LoggingMessageHandler;  The LoggingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainLoggingMessageHandler;  The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  ; class  LogMessage;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html:27,Testability,log,logging,27,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::loggingmessagehandler Namespace Reference . Classes; class  LoggingMessageHandler;  The LoggingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainLoggingMessageHandler;  The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  ; class  LogMessage;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html:36,Testability,log,loggingmessagehandler,36,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::loggingmessagehandler Namespace Reference . Classes; class  LoggingMessageHandler;  The LoggingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainLoggingMessageHandler;  The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  ; class  LogMessage;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html:177,Testability,log,logging,177,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::loggingmessagehandler Namespace Reference . Classes; class  LoggingMessageHandler;  The LoggingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainLoggingMessageHandler;  The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  ; class  LogMessage;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html:186,Testability,log,loggingmessagehandler,186,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::loggingmessagehandler Namespace Reference . Classes; class  LoggingMessageHandler;  The LoggingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainLoggingMessageHandler;  The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  ; class  LogMessage;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html:246,Testability,Log,LoggingMessageHandler,246,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::loggingmessagehandler Namespace Reference . Classes; class  LoggingMessageHandler;  The LoggingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainLoggingMessageHandler;  The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  ; class  LogMessage;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html:274,Testability,Log,LoggingMessageHandler,274,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::loggingmessagehandler Namespace Reference . Classes; class  LoggingMessageHandler;  The LoggingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainLoggingMessageHandler;  The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  ; class  LogMessage;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html:549,Testability,Log,LogMessage,549,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::loggingmessagehandler Namespace Reference . Classes; class  LoggingMessageHandler;  The LoggingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainLoggingMessageHandler;  The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  ; class  LogMessage;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html:310,Integrability,Rout,RoutingMessageHandler,310,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference . Classes; class  PerComponentLoggingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainPerComponentLoggingMessageHandler;  The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. More...;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingpercomponentloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html:358,Integrability,message,messages,358,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference . Classes; class  PerComponentLoggingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainPerComponentLoggingMessageHandler;  The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. More...;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingpercomponentloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html:27,Testability,log,logging,27,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference . Classes; class  PerComponentLoggingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainPerComponentLoggingMessageHandler;  The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. More...;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingpercomponentloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html:189,Testability,log,logging,189,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference . Classes; class  PerComponentLoggingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainPerComponentLoggingMessageHandler;  The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. More...;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingpercomponentloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:36,Integrability,rout,routingmessagehandler,36,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:198,Integrability,rout,routingmessagehandler,198,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:258,Integrability,Rout,RoutingMessageHandler,258,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:286,Integrability,Rout,RoutingMessageHandler,286,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:334,Integrability,message,messages,334,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:463,Integrability,Rout,RoutingMessageHandler,463,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:513,Integrability,Rout,RoutingMessageHandler,513,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:594,Integrability,Message,Message,594,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:980,Integrability,rout,routingmessagehandler,980,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:1020,Integrability,Message,Message,1020,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:27,Testability,log,logging,27,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:189,Testability,log,logging,189,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:971,Testability,log,logging,971,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:432,Energy Efficiency,monitor,monitor,432,"﻿. SOFA API: sofa::helper::system Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::helper::system Namespace Reference . Namespaces;  thread;  . Classes; class  DynamicLibrary;  Wrapper around the dynamic library facilities of the operating system. More...;  ; class  FileEventListener;  Contains an event-based API to monitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListO",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:496,Energy Efficiency,Monitor,MonitoredFile,496,"﻿. SOFA API: sofa::helper::system Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::helper::system Namespace Reference . Namespaces;  thread;  . Classes; class  DynamicLibrary;  Wrapper around the dynamic library facilities of the operating system. More...;  ; class  FileEventListener;  Contains an event-based API to monitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListO",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:938,Energy Efficiency,Monitor,MonitoredFile,938,"﻿. SOFA API: sofa::helper::system Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::helper::system Namespace Reference . Namespaces;  thread;  . Classes; class  DynamicLibrary;  Wrapper around the dynamic library facilities of the operating system. More...;  ; class  FileEventListener;  Contains an event-based API to monitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListO",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:1408,Energy Efficiency,monitor,monitors,1408,"nitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListOfListeners. typedef vector<FileEventListener*> sofa::helper::system::ListOfListeners. ◆ ListOfMonitors. typedef list< MonitoredFile > sofa::helper::system::ListOfMonitors. Function Documentation. ◆ addAFileListenerInDict(). void sofa::helper::system::addAFileListenerInDict ; (; string ; pathfilename, . FileEventListener * ; listener . ). ◆ catch_alarm(). void sofa::helper::system::catch_alarm ; (; int ; sig). ◆ cleanPath(). std::",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:2119,Energy Efficiency,Monitor,MonitoredFile,2119," ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListOfListeners. typedef vector<FileEventListener*> sofa::helper::system::ListOfListeners. ◆ ListOfMonitors. typedef list< MonitoredFile > sofa::helper::system::ListOfMonitors. Function Documentation. ◆ addAFileListenerInDict(). void sofa::helper::system::addAFileListenerInDict ; (; string ; pathfilename, . FileEventListener * ; listener . ). ◆ catch_alarm(). void sofa::helper::system::catch_alarm ; (; int ; sig). ◆ cleanPath(). std::string sofa::helper::system::cleanPath ; (; const std::string & ; path). ◆ eventmaskToString(). const char * sofa::helper::system::eventmaskToString ; (; int ; evtmask). ◆ FileMonitor_init(). int sofa::helper::system::FileMonitor_init ; (; ). Variable Documentation. ◆ DataRepository. SOFA_HELPER_API FileRepository sofa::helper::system::DataRepository ; (; ""SOFA_DATA_PATH"" ; , . { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") } ; , . { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } } ;  . ). Default repository. . ◆ dir2files. map<string, ListOfFiles> sofa::helper::system::dir2files. ◆ fd2fn. map<int, string> sofa::helper::system::fd2fn. ◆",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:3374,Energy Efficiency,monitor,monitors,3374,"are/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListOfListeners. typedef vector<FileEventListener*> sofa::helper::system::ListOfListeners. ◆ ListOfMonitors. typedef list< MonitoredFile > sofa::helper::system::ListOfMonitors. Function Documentation. ◆ addAFileListenerInDict(). void sofa::helper::system::addAFileListenerInDict ; (; string ; pathfilename, . FileEventListener * ; listener . ). ◆ catch_alarm(). void sofa::helper::system::catch_alarm ; (; int ; sig). ◆ cleanPath(). std::string sofa::helper::system::cleanPath ; (; const std::string & ; path). ◆ eventmaskToString(). const char * sofa::helper::system::eventmaskToString ; (; int ; evtmask). ◆ FileMonitor_init(). int sofa::helper::system::FileMonitor_init ; (; ). Variable Documentation. ◆ DataRepository. SOFA_HELPER_API FileRepository sofa::helper::system::DataRepository ; (; ""SOFA_DATA_PATH"" ; , . { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") } ; , . { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } } ;  . ). Default repository. . ◆ dir2files. map<string, ListOfFiles> sofa::helper::system::dir2files. ◆ fd2fn. map<int, string> sofa::helper::system::fd2fn. ◆ file2listener. map<string, ListOfListeners> sofa::helper::system::file2listener. ◆ filemonitor_inotifyfd. int sofa::helper::system::filemonitor_inotifyfd =-1. ◆ keep_going. volatile sig_atomic_t sofa::helper::system::keep_going = 1. ◆ monitors. ListOfMonitors sofa::helper::system::monitors. ◆ PluginRepository. SOFA_HELPER_API FileRepository sofa::helper::system::PluginRepository ; (; ""SOFA_PLUGIN_PATH"" ; , . { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), } ;  . ). Default repository. . sofahelpersystem; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:3421,Energy Efficiency,monitor,monitors,3421,"are/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListOfListeners. typedef vector<FileEventListener*> sofa::helper::system::ListOfListeners. ◆ ListOfMonitors. typedef list< MonitoredFile > sofa::helper::system::ListOfMonitors. Function Documentation. ◆ addAFileListenerInDict(). void sofa::helper::system::addAFileListenerInDict ; (; string ; pathfilename, . FileEventListener * ; listener . ). ◆ catch_alarm(). void sofa::helper::system::catch_alarm ; (; int ; sig). ◆ cleanPath(). std::string sofa::helper::system::cleanPath ; (; const std::string & ; path). ◆ eventmaskToString(). const char * sofa::helper::system::eventmaskToString ; (; int ; evtmask). ◆ FileMonitor_init(). int sofa::helper::system::FileMonitor_init ; (; ). Variable Documentation. ◆ DataRepository. SOFA_HELPER_API FileRepository sofa::helper::system::DataRepository ; (; ""SOFA_DATA_PATH"" ; , . { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") } ; , . { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } } ;  . ). Default repository. . ◆ dir2files. map<string, ListOfFiles> sofa::helper::system::dir2files. ◆ fd2fn. map<int, string> sofa::helper::system::fd2fn. ◆ file2listener. map<string, ListOfListeners> sofa::helper::system::file2listener. ◆ filemonitor_inotifyfd. int sofa::helper::system::filemonitor_inotifyfd =-1. ◆ keep_going. volatile sig_atomic_t sofa::helper::system::keep_going = 1. ◆ monitors. ListOfMonitors sofa::helper::system::monitors. ◆ PluginRepository. SOFA_HELPER_API FileRepository sofa::helper::system::PluginRepository ; (; ""SOFA_PLUGIN_PATH"" ; , . { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), } ;  . ). Default repository. . sofahelpersystem; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:291,Integrability,Wrap,Wrapper,291,"﻿. SOFA API: sofa::helper::system Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::helper::system Namespace Reference . Namespaces;  thread;  . Classes; class  DynamicLibrary;  Wrapper around the dynamic library facilities of the operating system. More...;  ; class  FileEventListener;  Contains an event-based API to monitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListO",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:179,Modifiability,Variab,Variables,179,"﻿. SOFA API: sofa::helper::system Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::helper::system Namespace Reference . Namespaces;  thread;  . Classes; class  DynamicLibrary;  Wrapper around the dynamic library facilities of the operating system. More...;  ; class  FileEventListener;  Contains an event-based API to monitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListO",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:755,Modifiability,Plugin,Plugin,755,"﻿. SOFA API: sofa::helper::system Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::helper::system Namespace Reference . Namespaces;  thread;  . Classes; class  DynamicLibrary;  Wrapper around the dynamic library facilities of the operating system. More...;  ; class  FileEventListener;  Contains an event-based API to monitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListO",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:773,Modifiability,Plugin,PluginManager,773,"﻿. SOFA API: sofa::helper::system Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::helper::system Namespace Reference . Namespaces;  thread;  . Classes; class  DynamicLibrary;  Wrapper around the dynamic library facilities of the operating system. More...;  ; class  FileEventListener;  Contains an event-based API to monitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListO",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:1229,Modifiability,Variab,Variables,1229,"nitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListOfListeners. typedef vector<FileEventListener*> sofa::helper::system::ListOfListeners. ◆ ListOfMonitors. typedef list< MonitoredFile > sofa::helper::system::ListOfMonitors. Function Documentation. ◆ addAFileListenerInDict(). void sofa::helper::system::addAFileListenerInDict ; (; string ; pathfilename, . FileEventListener * ; listener . ). ◆ catch_alarm(). void sofa::helper::system::catch_alarm ; (; int ; sig). ◆ cleanPath(). std::",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:1477,Modifiability,Plugin,PluginRepository,1477,"nitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListOfListeners. typedef vector<FileEventListener*> sofa::helper::system::ListOfListeners. ◆ ListOfMonitors. typedef list< MonitoredFile > sofa::helper::system::ListOfMonitors. Function Documentation. ◆ addAFileListenerInDict(). void sofa::helper::system::addAFileListenerInDict ; (; string ; pathfilename, . FileEventListener * ; listener . ). ◆ catch_alarm(). void sofa::helper::system::catch_alarm ; (; int ; sig). ◆ cleanPath(). std::",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:1539,Modifiability,plugin,plugins,1539,"nitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListOfListeners. typedef vector<FileEventListener*> sofa::helper::system::ListOfListeners. ◆ ListOfMonitors. typedef list< MonitoredFile > sofa::helper::system::ListOfMonitors. Function Documentation. ◆ addAFileListenerInDict(). void sofa::helper::system::addAFileListenerInDict ; (; string ; pathfilename, . FileEventListener * ; listener . ). ◆ catch_alarm(). void sofa::helper::system::catch_alarm ; (; int ; sig). ◆ cleanPath(). std::",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:2677,Modifiability,Variab,Variable,2677,"A_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListOfListeners. typedef vector<FileEventListener*> sofa::helper::system::ListOfListeners. ◆ ListOfMonitors. typedef list< MonitoredFile > sofa::helper::system::ListOfMonitors. Function Documentation. ◆ addAFileListenerInDict(). void sofa::helper::system::addAFileListenerInDict ; (; string ; pathfilename, . FileEventListener * ; listener . ). ◆ catch_alarm(). void sofa::helper::system::catch_alarm ; (; int ; sig). ◆ cleanPath(). std::string sofa::helper::system::cleanPath ; (; const std::string & ; path). ◆ eventmaskToString(). const char * sofa::helper::system::eventmaskToString ; (; int ; evtmask). ◆ FileMonitor_init(). int sofa::helper::system::FileMonitor_init ; (; ). Variable Documentation. ◆ DataRepository. SOFA_HELPER_API FileRepository sofa::helper::system::DataRepository ; (; ""SOFA_DATA_PATH"" ; , . { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") } ; , . { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } } ;  . ). Default repository. . ◆ dir2files. map<string, ListOfFiles> sofa::helper::system::dir2files. ◆ fd2fn. map<int, string> sofa::helper::system::fd2fn. ◆ file2listener. map<string, ListOfListeners> sofa::helper::system::file2listener. ◆ filemonitor_inotifyfd. int sofa::helper::system::filemonitor_inotifyfd =-1. ◆ keep_going. volatile sig_atomic_t sofa::helper::system::keep_going = 1. ◆ monitors. ListOfMonitors sofa::helper::system::monitors. ◆ PluginRepository. SOFA_HELPER_API FileRepository sofa::helper::system::PluginRepository ; (; ""SOFA_PLUGIN_PATH"" ; , . { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), } ;  . ). Default repository. . sofa",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:3433,Modifiability,Plugin,PluginRepository,3433,"are/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListOfListeners. typedef vector<FileEventListener*> sofa::helper::system::ListOfListeners. ◆ ListOfMonitors. typedef list< MonitoredFile > sofa::helper::system::ListOfMonitors. Function Documentation. ◆ addAFileListenerInDict(). void sofa::helper::system::addAFileListenerInDict ; (; string ; pathfilename, . FileEventListener * ; listener . ). ◆ catch_alarm(). void sofa::helper::system::catch_alarm ; (; int ; sig). ◆ cleanPath(). std::string sofa::helper::system::cleanPath ; (; const std::string & ; path). ◆ eventmaskToString(). const char * sofa::helper::system::eventmaskToString ; (; int ; evtmask). ◆ FileMonitor_init(). int sofa::helper::system::FileMonitor_init ; (; ). Variable Documentation. ◆ DataRepository. SOFA_HELPER_API FileRepository sofa::helper::system::DataRepository ; (; ""SOFA_DATA_PATH"" ; , . { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") } ; , . { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } } ;  . ). Default repository. . ◆ dir2files. map<string, ListOfFiles> sofa::helper::system::dir2files. ◆ fd2fn. map<int, string> sofa::helper::system::fd2fn. ◆ file2listener. map<string, ListOfListeners> sofa::helper::system::file2listener. ◆ filemonitor_inotifyfd. int sofa::helper::system::filemonitor_inotifyfd =-1. ◆ keep_going. volatile sig_atomic_t sofa::helper::system::keep_going = 1. ◆ monitors. ListOfMonitors sofa::helper::system::monitors. ◆ PluginRepository. SOFA_HELPER_API FileRepository sofa::helper::system::PluginRepository ; (; ""SOFA_PLUGIN_PATH"" ; , . { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), } ;  . ). Default repository. . sofahelpersystem; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:3504,Modifiability,Plugin,PluginRepository,3504,"are/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListOfListeners. typedef vector<FileEventListener*> sofa::helper::system::ListOfListeners. ◆ ListOfMonitors. typedef list< MonitoredFile > sofa::helper::system::ListOfMonitors. Function Documentation. ◆ addAFileListenerInDict(). void sofa::helper::system::addAFileListenerInDict ; (; string ; pathfilename, . FileEventListener * ; listener . ). ◆ catch_alarm(). void sofa::helper::system::catch_alarm ; (; int ; sig). ◆ cleanPath(). std::string sofa::helper::system::cleanPath ; (; const std::string & ; path). ◆ eventmaskToString(). const char * sofa::helper::system::eventmaskToString ; (; int ; evtmask). ◆ FileMonitor_init(). int sofa::helper::system::FileMonitor_init ; (; ). Variable Documentation. ◆ DataRepository. SOFA_HELPER_API FileRepository sofa::helper::system::DataRepository ; (; ""SOFA_DATA_PATH"" ; , . { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") } ; , . { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } } ;  . ). Default repository. . ◆ dir2files. map<string, ListOfFiles> sofa::helper::system::dir2files. ◆ fd2fn. map<int, string> sofa::helper::system::fd2fn. ◆ file2listener. map<string, ListOfListeners> sofa::helper::system::file2listener. ◆ filemonitor_inotifyfd. int sofa::helper::system::filemonitor_inotifyfd =-1. ◆ keep_going. volatile sig_atomic_t sofa::helper::system::keep_going = 1. ◆ monitors. ListOfMonitors sofa::helper::system::monitors. ◆ PluginRepository. SOFA_HELPER_API FileRepository sofa::helper::system::PluginRepository ; (; ""SOFA_PLUGIN_PATH"" ; , . { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), } ;  . ). Default repository. . sofahelpersystem; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:3575,Modifiability,plugin,plugins,3575,"are/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListOfListeners. typedef vector<FileEventListener*> sofa::helper::system::ListOfListeners. ◆ ListOfMonitors. typedef list< MonitoredFile > sofa::helper::system::ListOfMonitors. Function Documentation. ◆ addAFileListenerInDict(). void sofa::helper::system::addAFileListenerInDict ; (; string ; pathfilename, . FileEventListener * ; listener . ). ◆ catch_alarm(). void sofa::helper::system::catch_alarm ; (; int ; sig). ◆ cleanPath(). std::string sofa::helper::system::cleanPath ; (; const std::string & ; path). ◆ eventmaskToString(). const char * sofa::helper::system::eventmaskToString ; (; int ; evtmask). ◆ FileMonitor_init(). int sofa::helper::system::FileMonitor_init ; (; ). Variable Documentation. ◆ DataRepository. SOFA_HELPER_API FileRepository sofa::helper::system::DataRepository ; (; ""SOFA_DATA_PATH"" ; , . { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") } ; , . { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } } ;  . ). Default repository. . ◆ dir2files. map<string, ListOfFiles> sofa::helper::system::dir2files. ◆ fd2fn. map<int, string> sofa::helper::system::fd2fn. ◆ file2listener. map<string, ListOfListeners> sofa::helper::system::file2listener. ◆ filemonitor_inotifyfd. int sofa::helper::system::filemonitor_inotifyfd =-1. ◆ keep_going. volatile sig_atomic_t sofa::helper::system::keep_going = 1. ◆ monitors. ListOfMonitors sofa::helper::system::monitors. ◆ PluginRepository. SOFA_HELPER_API FileRepository sofa::helper::system::PluginRepository ; (; ""SOFA_PLUGIN_PATH"" ; , . { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), } ;  . ). Default repository. . sofahelpersystem; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system_1_1thread.html:160,Modifiability,Variab,Variables,160,﻿. SOFA API: sofa::helper::system::thread Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs |; Variables . sofa::helper::system::thread Namespace Reference . Classes; class  CircularQueue;  ; struct  AlignPow2;  ; struct  AlignPow2< 1 >;  ; struct  AlignPow2< 0 >;  ; struct  FixedSize;  ; struct  FixedPower2Size;  ; class  OneThreadPerEnd;  ; class  ManyThreadsPerEnd;  ; class  CTime;  ; class  Trace;  ; class  TraceProfile;  ; class  thread_specific_ptr;  . Typedefs; typedef unsigned long long ctime_t;  . Variables; Trace mySingletonTrace;  . Typedef Documentation. ◆ ctime_t. typedef unsigned long long sofa::helper::system::thread::ctime_t. Variable Documentation. ◆ mySingletonTrace. Trace sofa::helper::system::thread::mySingletonTrace. sofahelpersystemthread; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system_1_1thread.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system_1_1thread.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system_1_1thread.html:577,Modifiability,Variab,Variables,577,﻿. SOFA API: sofa::helper::system::thread Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs |; Variables . sofa::helper::system::thread Namespace Reference . Classes; class  CircularQueue;  ; struct  AlignPow2;  ; struct  AlignPow2< 1 >;  ; struct  AlignPow2< 0 >;  ; struct  FixedSize;  ; struct  FixedPower2Size;  ; class  OneThreadPerEnd;  ; class  ManyThreadsPerEnd;  ; class  CTime;  ; class  Trace;  ; class  TraceProfile;  ; class  thread_specific_ptr;  . Typedefs; typedef unsigned long long ctime_t;  . Variables; Trace mySingletonTrace;  . Typedef Documentation. ◆ ctime_t. typedef unsigned long long sofa::helper::system::thread::ctime_t. Variable Documentation. ◆ mySingletonTrace. Trace sofa::helper::system::thread::mySingletonTrace. sofahelpersystemthread; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system_1_1thread.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system_1_1thread.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system_1_1thread.html:715,Modifiability,Variab,Variable,715,﻿. SOFA API: sofa::helper::system::thread Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs |; Variables . sofa::helper::system::thread Namespace Reference . Classes; class  CircularQueue;  ; struct  AlignPow2;  ; struct  AlignPow2< 1 >;  ; struct  AlignPow2< 0 >;  ; struct  FixedSize;  ; struct  FixedPower2Size;  ; class  OneThreadPerEnd;  ; class  ManyThreadsPerEnd;  ; class  CTime;  ; class  Trace;  ; class  TraceProfile;  ; class  thread_specific_ptr;  . Typedefs; typedef unsigned long long ctime_t;  . Variables; Trace mySingletonTrace;  . Typedef Documentation. ◆ ctime_t. typedef unsigned long long sofa::helper::system::thread::ctime_t. Variable Documentation. ◆ mySingletonTrace. Trace sofa::helper::system::thread::mySingletonTrace. sofahelpersystemthread; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1system_1_1thread.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system_1_1thread.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1visual.html:227,Performance,perform,perform,227,﻿. SOFA API: sofa::helper::visual Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::visual Namespace Reference . Classes; struct  DrawTool;  Utility class to perform debug drawing. More...;  ; class  Trackball;  ; class  Transformation;  . sofahelpervisual; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1helper_1_1visual.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1visual.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:7450,Integrability,depend,dependencies,7450,"nst D_values);  ; template<typename Real > ; void solveDiagonalSystemUsingInvertedValues (const sofa::Size systemSize, const Real *rightHandSideVector, Real *solution, const Real *const Dinv_values);  ; std::ostream & operator<< (std::ostream &out, const FullMatrix< double > &v);  ; std::ostream & operator<< (std::ostream &out, const FullMatrix< float > &v);  ; std::ostream & operator<< (std::ostream &out, const LPtrFullMatrix< double > &v);  ; std::ostream & operator<< (std::ostream &out, const LPtrFullMatrix< float > &v);  ; template<typename Real > ; std::ostream & readFromStream (std::ostream &out, const FullMatrix< Real > &v);  ; std::ostream & operator<< (std::ostream &out, const FullVector< float > &v);  ; std::ostream & operator<< (std::ostream &out, const FullVector< double > &v);  ; template<typename Real > ; std::ostream & readFromStream (std::ostream &out, const FullVector< Real > &v);  ; SOFA_LINEARALGEBRA_API void init ();  Initialize the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. More...;  ; SOFA_LINEARALGEBRA_API bool isInitialized ();  Return true if and only if the Sofa.LinearAlgebra library has been initialized. More...;  ; SOFA_LINEARALGEBRA_API void cleanup ();  Clean up the resources used by the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. More...;  ; SOFA_LINEARALGEBRA_API bool isCleanedUp ();  Return true if and only if the Sofa.LinearAlgebra library has been cleaned up. More...;  ; template<class Real > ; std::ostream & operator<< (std::ostream &out, const RotationMatrix< Real > &v);  ; template SOFA_LINEARALGEBRA_API std::ostream & operator<< (std::ostream &out, const RotationMatrix< float > &v);  ; template SOFA_LINEARALGEBRA_API std::ostream & operator<< (std::ostream &out, const RotationMatrix< double > &v);  ; template<typename _Scalar , int _Options, typename _StorageIndex > ; void flagValueIndices (Eigen::SparseMatrix< sparsematrixproduct::IndexedValue< _Scalar >, ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:7757,Integrability,depend,dependencies,7757,"<< (std::ostream &out, const FullMatrix< float > &v);  ; std::ostream & operator<< (std::ostream &out, const LPtrFullMatrix< double > &v);  ; std::ostream & operator<< (std::ostream &out, const LPtrFullMatrix< float > &v);  ; template<typename Real > ; std::ostream & readFromStream (std::ostream &out, const FullMatrix< Real > &v);  ; std::ostream & operator<< (std::ostream &out, const FullVector< float > &v);  ; std::ostream & operator<< (std::ostream &out, const FullVector< double > &v);  ; template<typename Real > ; std::ostream & readFromStream (std::ostream &out, const FullVector< Real > &v);  ; SOFA_LINEARALGEBRA_API void init ();  Initialize the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. More...;  ; SOFA_LINEARALGEBRA_API bool isInitialized ();  Return true if and only if the Sofa.LinearAlgebra library has been initialized. More...;  ; SOFA_LINEARALGEBRA_API void cleanup ();  Clean up the resources used by the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. More...;  ; SOFA_LINEARALGEBRA_API bool isCleanedUp ();  Return true if and only if the Sofa.LinearAlgebra library has been cleaned up. More...;  ; template<class Real > ; std::ostream & operator<< (std::ostream &out, const RotationMatrix< Real > &v);  ; template SOFA_LINEARALGEBRA_API std::ostream & operator<< (std::ostream &out, const RotationMatrix< float > &v);  ; template SOFA_LINEARALGEBRA_API std::ostream & operator<< (std::ostream &out, const RotationMatrix< double > &v);  ; template<typename _Scalar , int _Options, typename _StorageIndex > ; void flagValueIndices (Eigen::SparseMatrix< sparsematrixproduct::IndexedValue< _Scalar >, _Options, _StorageIndex > &matrix);  ; template<class TMatrix > ; void transpose (const TMatrix &self, type::vector< typename TMatrix::Index > &outer, type::vector< typename TMatrix::Index > &inner, type::vector< typename TMatrix::Index > &perm);  ; template<typename Real , typename Integer > ; void solveL",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:13216,Integrability,depend,dependencies,13216,"RECATED__MATRIXSUBTRACTION. using sofa::linearalgebra::SOFA_ATTRIBUTE_DEPRECATED__MATRIXSUBTRACTION = typedef MatrixSubtraction<M1, M2>. Enumeration Type Documentation. ◆ MatrixCategory. enum sofa::linearalgebra::MatrixCategory. EnumeratorMATRIX_IDENTITY ; MATRIX_DIAGONAL ; MATRIX_BAND ; MATRIX_SPARSE ; MATRIX_FULL . Function Documentation. ◆ addBlockMat(). template<class TMatrix , class TBlockMatrix > . void sofa::linearalgebra::addBlockMat ; (; TMatrix & ; self, . Index ; row, . Index ; col, . const TBlockMatrix & ; _M . ). ◆ addMultTransposeEigen(). template<typename LhsMatrixDeriv , typename RhsMatrixDeriv , typename Real > . void sofa::linearalgebra::addMultTransposeEigen ; (; LhsMatrixDeriv & ; lhs, . const Eigen::SparseMatrix< Real, Eigen::RowMajor > & ; jacobian, . const RhsMatrixDeriv & ; rhs . ). Computes lhs += jacobian^T * rhs. . ◆ cleanup(). SOFA_LINEARALGEBRA_API void sofa::linearalgebra::cleanup ; (; ). Clean up the resources used by the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. . ◆ CompressedRowSparseMatrixVecDerivMult(). template<class RowType , class VecDeriv , typename Real = typename VecDeriv::value_type::Real> . Real sofa::linearalgebra::CompressedRowSparseMatrixVecDerivMult ; (; const RowType ; row, . const VecDeriv & ; vec . ). ◆ computeRowColumnCoordinateFromIndexInLowerTriangularMatrix(). void sofa::linearalgebra::computeRowColumnCoordinateFromIndexInLowerTriangularMatrix ; (; const sofa::Index ; flatIndex, . sofa::Index & ; row, . sofa::Index & ; col . ). inline . A lower triangular matrix can be stored as a linear array. This function converts the index in this linear array to 2d coordinates (row and column) of an element in the matrix.; Example of a 6x6 lower triangular matrix: [ 0 ] [ 1 2 ] [ 3 4 5 ] [ 6 7 8 9 ] [10 11 12 13 14 ] [15 16 17 18 19 20]; 0 => (0, 0) 7 => (3, 1) 18 => (5, 3) . ◆ convertCompressedRowSparseMatrixRowToVecDeriv(). template<class RowType , class VecDeriv > . void sofa::linearal",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:14685,Integrability,depend,dependencies,14685,"sofa::Index ; flatIndex, . sofa::Index & ; row, . sofa::Index & ; col . ). inline . A lower triangular matrix can be stored as a linear array. This function converts the index in this linear array to 2d coordinates (row and column) of an element in the matrix.; Example of a 6x6 lower triangular matrix: [ 0 ] [ 1 2 ] [ 3 4 5 ] [ 6 7 8 9 ] [10 11 12 13 14 ] [15 16 17 18 19 20]; 0 => (0, 0) 7 => (3, 1) 18 => (5, 3) . ◆ convertCompressedRowSparseMatrixRowToVecDeriv(). template<class RowType , class VecDeriv > . void sofa::linearalgebra::convertCompressedRowSparseMatrixRowToVecDeriv ; (; const RowType ; row, . VecDeriv & ; out . ). ◆ flagValueIndices(). template<typename _Scalar , int _Options, typename _StorageIndex > . void sofa::linearalgebra::flagValueIndices ; (; Eigen::SparseMatrix< sparsematrixproduct::IndexedValue< _Scalar >, _Options, _StorageIndex > & ; matrix). ◆ init(). SOFA_LINEARALGEBRA_API void sofa::linearalgebra::init ; (; ). Initialize the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. . ◆ isCleanedUp(). SOFA_LINEARALGEBRA_API bool sofa::linearalgebra::isCleanedUp ; (; ). Return true if and only if the Sofa.LinearAlgebra library has been cleaned up. . ◆ isInitialized(). SOFA_LINEARALGEBRA_API bool sofa::linearalgebra::isInitialized ; (; ). Return true if and only if the Sofa.LinearAlgebra library has been initialized. . ◆ matrixAdd(). template<sofa::Size L, sofa::Size C, class real > . void sofa::linearalgebra::matrixAdd ; (; BaseMatrix * ; self, . const Index ; row, . const Index ; col, . const sofa::type::Mat< L, C, real > & ; M . ). ◆ operator<<() [1/11]. SOFA_LINEARALGEBRA_API std::ostream & sofa::linearalgebra::operator<< ; (; std::ostream & ; out, . const BaseVector & ; v . ). Declare that the operator << exists but is defined in BaseVector.cpp. . ◆ operator<<() [2/11]. SOFA_LINEARALGEBRA_API std::ostream & sofa::linearalgebra::operator<< ; (; std::ostream & ; out, . const FullMatrix< double > & ; v . ). ◆ operator<",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:194,Modifiability,Variab,Variables,194,"﻿. SOFA API: sofa::linearalgebra Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::linearalgebra Namespace Reference . Namespaces;  sparsematrixproduct;  ;  testing;  . Classes; class  matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >;  ; struct  BaseMatrixLinearOpMV_BlockSparse;  ; class  BaseMatrixLinearOpMV;  ; class  BaseMatrixLinearOpMulV;  ; class  BaseMatrixLinearOpPMulV;  ; class  BaseMatrixLinearOpMulTV;  ; class  BaseMatrixLinearOpPMulTV;  ; struct  BaseMatrixLinearOpAM_BlockSparse;  ; struct  BaseMatrixLinearOpAMS_BlockSparse;  ; struct  BaseMatrixLinearOpAM1_BlockSparse;  ; class  BaseMatrixLinearOpAM;  ; class  BaseMatrixLinearOpAddM;  ; class  BaseMatrixLinearOpAddMT;  ; class  BaseMatrix;  ; class  BaseVector;  ; class  BlockDiagonalMatrix;  Simple full matrix container. More...;  ; class  BlockFullMatrix;  Simple block full matrix container (used for InvMatrixType) More...;  ; class  BlockVector;  ; class  BTDMatrix;  Simple BTD matrix container. More...;  ; class  CRSConstraintPolicy;  ; class  CompressedRowSparseMatrixConstraint;  ; struct  CompressedRowSparseMatrixToEigenSparse;  ; struct  CompressedRowSparseMatrixToEigenSparseVec;  ; struct  CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >;  ; struct  EigenSparseToCompressedRowSparseMatrix;  ; struct  EigenSparseToCompressedRowSparseMatrixVec;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; struct  CRSBlockTraits;  Traits class which defines the containers to use for a given type of block. More...;  ; struct  CRSDefaultPolicy;  ; class  CompressedRowSparseMatrixGeneric;  ; clas",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:9361,Modifiability,Variab,Variables,9361,,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:21304,Modifiability,Variab,Variable,21304,"r system where the matrix is represented in CSR format; Backward substitution is used to solve a linear system U*x = b, where: U is a upper unitriangular matrix x is the solution vector b is the right-hand side vector The upper unitriangular matrix must be provided in compressed sparse row (CSR) format; Parameters. systemSizeThe size of the system. All other parameters must comply with this size ; rightHandSideVectorThe right-hand side vector ; solutionVectorThe solution vector ; CSR_rowsThe array storing the starting index of each row in the data array. ; CSR_columnsThe array storing the column indices of the nonzero values in the data array. ; CSR_valuesThe array containing the nonzero values of the matrix . ◆ transpose(). template<class TMatrix > . void sofa::linearalgebra::transpose ; (; const TMatrix & ; self, . type::vector< typename TMatrix::Index > & ; outer, . type::vector< typename TMatrix::Index > & ; inner, . type::vector< typename TMatrix::Index > & ; perm . ). Variable Documentation. ◆ BlockDiagonalMatrix< 3, SReal >. template class SOFA_LINEARALGEBRA_API sofa::linearalgebra::BlockDiagonalMatrix< 3, SReal >. extern . ◆ BlockFullMatrix< 6, SReal >. template class SOFA_LINEARALGEBRA_API sofa::linearalgebra::BlockFullMatrix< 6, SReal >. extern . ◆ CompressedRowSparseMatrixGeneric< double >. template class SOFA_LINEARALGEBRA_API sofa::linearalgebra::CompressedRowSparseMatrixGeneric< double >. ◆ CompressedRowSparseMatrixGeneric< float >. template class SOFA_LINEARALGEBRA_API sofa::linearalgebra::CompressedRowSparseMatrixGeneric< float >. ◆ CompressedRowSparseMatrixMechanical< double >. template class SOFA_LINEARALGEBRA_API sofa::linearalgebra::CompressedRowSparseMatrixMechanical< double >. ◆ CompressedRowSparseMatrixMechanical< float >. template class SOFA_LINEARALGEBRA_API sofa::linearalgebra::CompressedRowSparseMatrixMechanical< float >. ◆ CompressedRowSparseMatrixMechanical< Mat1x1d >. template class SOFA_LINEARALGEBRA_API sofa::linearalgebra::Compressed",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:286,Testability,test,testing,286,"﻿. SOFA API: sofa::linearalgebra Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::linearalgebra Namespace Reference . Namespaces;  sparsematrixproduct;  ;  testing;  . Classes; class  matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >;  ; struct  BaseMatrixLinearOpMV_BlockSparse;  ; class  BaseMatrixLinearOpMV;  ; class  BaseMatrixLinearOpMulV;  ; class  BaseMatrixLinearOpPMulV;  ; class  BaseMatrixLinearOpMulTV;  ; class  BaseMatrixLinearOpPMulTV;  ; struct  BaseMatrixLinearOpAM_BlockSparse;  ; struct  BaseMatrixLinearOpAMS_BlockSparse;  ; struct  BaseMatrixLinearOpAM1_BlockSparse;  ; class  BaseMatrixLinearOpAM;  ; class  BaseMatrixLinearOpAddM;  ; class  BaseMatrixLinearOpAddMT;  ; class  BaseMatrix;  ; class  BaseVector;  ; class  BlockDiagonalMatrix;  Simple full matrix container. More...;  ; class  BlockFullMatrix;  Simple block full matrix container (used for InvMatrixType) More...;  ; class  BlockVector;  ; class  BTDMatrix;  Simple BTD matrix container. More...;  ; class  CRSConstraintPolicy;  ; class  CompressedRowSparseMatrixConstraint;  ; struct  CompressedRowSparseMatrixToEigenSparse;  ; struct  CompressedRowSparseMatrixToEigenSparseVec;  ; struct  CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >;  ; struct  EigenSparseToCompressedRowSparseMatrix;  ; struct  EigenSparseToCompressedRowSparseMatrixVec;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; struct  CRSBlockTraits;  Traits class which defines the containers to use for a given type of block. More...;  ; struct  CRSDefaultPolicy;  ; class  CompressedRowSparseMatrixGeneric;  ; clas",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:1046,Usability,Simpl,Simple,1046,"﻿. SOFA API: sofa::linearalgebra Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::linearalgebra Namespace Reference . Namespaces;  sparsematrixproduct;  ;  testing;  . Classes; class  matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >;  ; struct  BaseMatrixLinearOpMV_BlockSparse;  ; class  BaseMatrixLinearOpMV;  ; class  BaseMatrixLinearOpMulV;  ; class  BaseMatrixLinearOpPMulV;  ; class  BaseMatrixLinearOpMulTV;  ; class  BaseMatrixLinearOpPMulTV;  ; struct  BaseMatrixLinearOpAM_BlockSparse;  ; struct  BaseMatrixLinearOpAMS_BlockSparse;  ; struct  BaseMatrixLinearOpAM1_BlockSparse;  ; class  BaseMatrixLinearOpAM;  ; class  BaseMatrixLinearOpAddM;  ; class  BaseMatrixLinearOpAddMT;  ; class  BaseMatrix;  ; class  BaseVector;  ; class  BlockDiagonalMatrix;  Simple full matrix container. More...;  ; class  BlockFullMatrix;  Simple block full matrix container (used for InvMatrixType) More...;  ; class  BlockVector;  ; class  BTDMatrix;  Simple BTD matrix container. More...;  ; class  CRSConstraintPolicy;  ; class  CompressedRowSparseMatrixConstraint;  ; struct  CompressedRowSparseMatrixToEigenSparse;  ; struct  CompressedRowSparseMatrixToEigenSparseVec;  ; struct  CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >;  ; struct  EigenSparseToCompressedRowSparseMatrix;  ; struct  EigenSparseToCompressedRowSparseMatrixVec;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; struct  CRSBlockTraits;  Traits class which defines the containers to use for a given type of block. More...;  ; struct  CRSDefaultPolicy;  ; class  CompressedRowSparseMatrixGeneric;  ; clas",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:1113,Usability,Simpl,Simple,1113,"mespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::linearalgebra Namespace Reference . Namespaces;  sparsematrixproduct;  ;  testing;  . Classes; class  matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >;  ; struct  BaseMatrixLinearOpMV_BlockSparse;  ; class  BaseMatrixLinearOpMV;  ; class  BaseMatrixLinearOpMulV;  ; class  BaseMatrixLinearOpPMulV;  ; class  BaseMatrixLinearOpMulTV;  ; class  BaseMatrixLinearOpPMulTV;  ; struct  BaseMatrixLinearOpAM_BlockSparse;  ; struct  BaseMatrixLinearOpAMS_BlockSparse;  ; struct  BaseMatrixLinearOpAM1_BlockSparse;  ; class  BaseMatrixLinearOpAM;  ; class  BaseMatrixLinearOpAddM;  ; class  BaseMatrixLinearOpAddMT;  ; class  BaseMatrix;  ; class  BaseVector;  ; class  BlockDiagonalMatrix;  Simple full matrix container. More...;  ; class  BlockFullMatrix;  Simple block full matrix container (used for InvMatrixType) More...;  ; class  BlockVector;  ; class  BTDMatrix;  Simple BTD matrix container. More...;  ; class  CRSConstraintPolicy;  ; class  CompressedRowSparseMatrixConstraint;  ; struct  CompressedRowSparseMatrixToEigenSparse;  ; struct  CompressedRowSparseMatrixToEigenSparseVec;  ; struct  CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >;  ; struct  EigenSparseToCompressedRowSparseMatrix;  ; struct  EigenSparseToCompressedRowSparseMatrixVec;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; struct  CRSBlockTraits;  Traits class which defines the containers to use for a given type of block. More...;  ; struct  CRSDefaultPolicy;  ; class  CompressedRowSparseMatrixGeneric;  ; class  CRSMechanicalPolicy;  ; class  CompressedRowSparseMatrixMechanical;  ; class  DiagonalMatrix;  Simple full matrix container. Mo",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:1227,Usability,Simpl,Simple,1227,"ralgebra Namespace Reference . Namespaces;  sparsematrixproduct;  ;  testing;  . Classes; class  matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >;  ; struct  BaseMatrixLinearOpMV_BlockSparse;  ; class  BaseMatrixLinearOpMV;  ; class  BaseMatrixLinearOpMulV;  ; class  BaseMatrixLinearOpPMulV;  ; class  BaseMatrixLinearOpMulTV;  ; class  BaseMatrixLinearOpPMulTV;  ; struct  BaseMatrixLinearOpAM_BlockSparse;  ; struct  BaseMatrixLinearOpAMS_BlockSparse;  ; struct  BaseMatrixLinearOpAM1_BlockSparse;  ; class  BaseMatrixLinearOpAM;  ; class  BaseMatrixLinearOpAddM;  ; class  BaseMatrixLinearOpAddMT;  ; class  BaseMatrix;  ; class  BaseVector;  ; class  BlockDiagonalMatrix;  Simple full matrix container. More...;  ; class  BlockFullMatrix;  Simple block full matrix container (used for InvMatrixType) More...;  ; class  BlockVector;  ; class  BTDMatrix;  Simple BTD matrix container. More...;  ; class  CRSConstraintPolicy;  ; class  CompressedRowSparseMatrixConstraint;  ; struct  CompressedRowSparseMatrixToEigenSparse;  ; struct  CompressedRowSparseMatrixToEigenSparseVec;  ; struct  CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >;  ; struct  EigenSparseToCompressedRowSparseMatrix;  ; struct  EigenSparseToCompressedRowSparseMatrixVec;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; struct  CRSBlockTraits;  Traits class which defines the containers to use for a given type of block. More...;  ; struct  CRSDefaultPolicy;  ; class  CompressedRowSparseMatrixGeneric;  ; class  CRSMechanicalPolicy;  ; class  CompressedRowSparseMatrixMechanical;  ; class  DiagonalMatrix;  Simple full matrix container. More...;  ; class  MatrixProductOp< DiagonalMatrix< R1 >, M2 >;  ; class  MatrixProductOp",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:2099,Usability,Simpl,Simple,2099," BlockDiagonalMatrix;  Simple full matrix container. More...;  ; class  BlockFullMatrix;  Simple block full matrix container (used for InvMatrixType) More...;  ; class  BlockVector;  ; class  BTDMatrix;  Simple BTD matrix container. More...;  ; class  CRSConstraintPolicy;  ; class  CompressedRowSparseMatrixConstraint;  ; struct  CompressedRowSparseMatrixToEigenSparse;  ; struct  CompressedRowSparseMatrixToEigenSparseVec;  ; struct  CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >;  ; struct  EigenSparseToCompressedRowSparseMatrix;  ; struct  EigenSparseToCompressedRowSparseMatrixVec;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; struct  CRSBlockTraits;  Traits class which defines the containers to use for a given type of block. More...;  ; struct  CRSDefaultPolicy;  ; class  CompressedRowSparseMatrixGeneric;  ; class  CRSMechanicalPolicy;  ; class  CompressedRowSparseMatrixMechanical;  ; class  DiagonalMatrix;  Simple full matrix container. More...;  ; class  MatrixProductOp< DiagonalMatrix< R1 >, M2 >;  ; class  MatrixProductOp< M1, DiagonalMatrix< R2 > >;  ; class  MatrixProductOp< DiagonalMatrix< R1 >, DiagonalMatrix< R2 > >;  ; class  MatrixInvertOp< DiagonalMatrix< R1 > >;  ; class  EigenBaseSparseMatrix;  ; class  EigenSparseMatrix;  ; class  EigenVector;  ; class  FullMatrix;  Simple full matrix container. More...;  ; class  LPtrFullMatrix;  Simple full matrix container, with an additional pointer per line, to be able do get a T** pointer and use [i][j] directly. More...;  ; class  FullVector;  ; struct  CleanupCheck;  ; class  bloc_index_func;  ; class  matrix_bloc_traits;  ; class  matrix_bloc_traits< type::Mat< L, C, real >, IndexType >;  ; class  matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >;  ; class  matrix_bloc_traits< float, IndexType >;  ; class  matrix_bloc_traits< double, IndexType >;  ; cl",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:2479,Usability,Simpl,Simple,2479,"rseMatrixConstraint;  ; struct  CompressedRowSparseMatrixToEigenSparse;  ; struct  CompressedRowSparseMatrixToEigenSparseVec;  ; struct  CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >;  ; struct  EigenSparseToCompressedRowSparseMatrix;  ; struct  EigenSparseToCompressedRowSparseMatrixVec;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; struct  CRSBlockTraits;  Traits class which defines the containers to use for a given type of block. More...;  ; struct  CRSDefaultPolicy;  ; class  CompressedRowSparseMatrixGeneric;  ; class  CRSMechanicalPolicy;  ; class  CompressedRowSparseMatrixMechanical;  ; class  DiagonalMatrix;  Simple full matrix container. More...;  ; class  MatrixProductOp< DiagonalMatrix< R1 >, M2 >;  ; class  MatrixProductOp< M1, DiagonalMatrix< R2 > >;  ; class  MatrixProductOp< DiagonalMatrix< R1 >, DiagonalMatrix< R2 > >;  ; class  MatrixInvertOp< DiagonalMatrix< R1 > >;  ; class  EigenBaseSparseMatrix;  ; class  EigenSparseMatrix;  ; class  EigenVector;  ; class  FullMatrix;  Simple full matrix container. More...;  ; class  LPtrFullMatrix;  Simple full matrix container, with an additional pointer per line, to be able do get a T** pointer and use [i][j] directly. More...;  ; class  FullVector;  ; struct  CleanupCheck;  ; class  bloc_index_func;  ; class  matrix_bloc_traits;  ; class  matrix_bloc_traits< type::Mat< L, C, real >, IndexType >;  ; class  matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >;  ; class  matrix_bloc_traits< float, IndexType >;  ; class  matrix_bloc_traits< double, IndexType >;  ; class  matrix_bloc_traits< int, IndexType >;  ; class  MatrixProduct;  ; class  MatrixAddition;  ; class  MatrixSubtraction;  ; class  MatrixTranspose;  ; class  MatrixNegative;  ; class  MatrixScale;  ; class  MatrixExpr;  ; class  DefaultMatrixProductOp;  ; class  MatrixProductOp;  ; class  Defaul",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:2545,Usability,Simpl,Simple,2545,"igenSparseToCompressedRowSparseMatrixVec;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; struct  CRSBlockTraits;  Traits class which defines the containers to use for a given type of block. More...;  ; struct  CRSDefaultPolicy;  ; class  CompressedRowSparseMatrixGeneric;  ; class  CRSMechanicalPolicy;  ; class  CompressedRowSparseMatrixMechanical;  ; class  DiagonalMatrix;  Simple full matrix container. More...;  ; class  MatrixProductOp< DiagonalMatrix< R1 >, M2 >;  ; class  MatrixProductOp< M1, DiagonalMatrix< R2 > >;  ; class  MatrixProductOp< DiagonalMatrix< R1 >, DiagonalMatrix< R2 > >;  ; class  MatrixInvertOp< DiagonalMatrix< R1 > >;  ; class  EigenBaseSparseMatrix;  ; class  EigenSparseMatrix;  ; class  EigenVector;  ; class  FullMatrix;  Simple full matrix container. More...;  ; class  LPtrFullMatrix;  Simple full matrix container, with an additional pointer per line, to be able do get a T** pointer and use [i][j] directly. More...;  ; class  FullVector;  ; struct  CleanupCheck;  ; class  bloc_index_func;  ; class  matrix_bloc_traits;  ; class  matrix_bloc_traits< type::Mat< L, C, real >, IndexType >;  ; class  matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >;  ; class  matrix_bloc_traits< float, IndexType >;  ; class  matrix_bloc_traits< double, IndexType >;  ; class  matrix_bloc_traits< int, IndexType >;  ; class  MatrixProduct;  ; class  MatrixAddition;  ; class  MatrixSubtraction;  ; class  MatrixTranspose;  ; class  MatrixNegative;  ; class  MatrixScale;  ; class  MatrixExpr;  ; class  DefaultMatrixProductOp;  ; class  MatrixProductOp;  ; class  DefaultMatrixProductOp< 0, 0, M1, M2 >;  ; class  DefaultMatrixProductOp< 1, 0, M1, M2 >;  ; class  DefaultMatrixProductOp< 0, 1, M1, M2 >;  ; class  DefaultMatrixInvertOp;  ; class  MatrixInvertOp;  ; class  DefaultMatrixInvertOp< 0, M1 >;  ; class  type_selector;  ; class  ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:282,Modifiability,parameteriz,parameterized,282,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:34,Testability,test,testing,34,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:181,Testability,test,testing,181,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:228,Testability,Test,TestBaseMatrixTraits,228,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:260,Testability,Test,TestBaseMatrix,260,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:296,Testability,test,tests,296,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:395,Testability,Test,TestSparseMatrixProduct,395,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:455,Testability,Test,TestBaseMatrix,455,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:490,Testability,Test,TestBaseMatrix,490,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:533,Testability,Test,TestBaseMatrix,533,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:579,Testability,Test,TestBaseMatrix,579,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:638,Testability,Test,TestBaseMatrix,638,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:707,Testability,Test,TestSparseMatrixProduct,707,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:751,Testability,Test,TestSparseMatrixProduct,751,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:809,Testability,Test,TestSparseMatrixProduct,809,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:887,Testability,Test,TestSparseMatrixProduct,887,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1033,Testability,test,testing,1033,"eference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::t",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1075,Testability,Test,TestBaseMatrix,1075,"eference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::t",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1201,Testability,test,testing,1201,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1243,Testability,Test,TestSparseMatrixProduct,1243,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1363,Testability,test,testing,1363,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1390,Testability,Test,TestBaseMatrix,1390,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1472,Testability,test,testing,1472,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1499,Testability,Test,TestBaseMatrix,1499,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1583,Testability,test,testing,1583,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1610,Testability,Test,TestBaseMatrix,1610,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1691,Testability,test,testing,1691,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1718,Testability,Test,TestSparseMatrixProduct,1718,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1819,Testability,test,testing,1819,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1846,Testability,Test,TestSparseMatrixProduct,1846,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1948,Testability,test,testing,1948,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1981,Testability,Test,TestBaseMatrix,1981,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:2052,Testability,test,testing,2052,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:2085,Testability,Test,TestSparseMatrixProduct,2085,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1mapping__test.html:237,Testability,test,tests,237,"﻿. SOFA API: sofa::mapping_test Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::mapping_test Namespace Reference . Classes; struct  Mapping_test;  Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. More...;  . sofamapping_test; Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1mapping__test.html:274,Testability,test,test,274,"﻿. SOFA API: sofa::mapping_test Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::mapping_test Namespace Reference . Classes; struct  Mapping_test;  Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. More...;  . sofamapping_test; Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:318,Integrability,depend,dependencies,318,"﻿. SOFA API: sofa::simpleapi Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simpleapi Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMPLEAPI_API void init ();  Initialize the Sofa.SimpleApi library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isInitialized ();  Return true if and only if the Sofa.SimpleApi library has been initialized. More...;  ; SOFA_SIMPLEAPI_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isCleanedUp ();  Return true if and only if the Sofa.SimpleApi library has been cleaned up. More...;  ; bool importPlugin (const std::string &name);  ; void dumpScene (Node::SPtr root);  ; Simulation::SPtr createSimulation (const std::string &type);  ; Node::SPtr createRootNode (Simulation::SPtr s, const std::string &name, const std::map< std::string, std::string > &params);  ; NodeSPtr createRootNode (Simulation *s, const std::string &name, const std::map< std::string, std::string > &params);  ; BaseObject::SPtr createObject (Node::SPtr parent, BaseObjectDescription &desc);  ; BaseObject::SPtr createObject (Node::SPtr parent, const std::string &type, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, const std::string &name, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, BaseObjectDescription &desc);  ; Node::SPtr createNode (const std::string &name);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; sofa::core::sptr< BaseObject > SOFA_SIMPLEAPI_API createObject (NodeSPtr node, BaseObjectDescription &params);  Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object i",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:591,Integrability,depend,dependencies,591,"﻿. SOFA API: sofa::simpleapi Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simpleapi Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMPLEAPI_API void init ();  Initialize the Sofa.SimpleApi library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isInitialized ();  Return true if and only if the Sofa.SimpleApi library has been initialized. More...;  ; SOFA_SIMPLEAPI_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isCleanedUp ();  Return true if and only if the Sofa.SimpleApi library has been cleaned up. More...;  ; bool importPlugin (const std::string &name);  ; void dumpScene (Node::SPtr root);  ; Simulation::SPtr createSimulation (const std::string &type);  ; Node::SPtr createRootNode (Simulation::SPtr s, const std::string &name, const std::map< std::string, std::string > &params);  ; NodeSPtr createRootNode (Simulation *s, const std::string &name, const std::map< std::string, std::string > &params);  ; BaseObject::SPtr createObject (Node::SPtr parent, BaseObjectDescription &desc);  ; BaseObject::SPtr createObject (Node::SPtr parent, const std::string &type, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, const std::string &name, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, BaseObjectDescription &desc);  ; Node::SPtr createNode (const std::string &name);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; sofa::core::sptr< BaseObject > SOFA_SIMPLEAPI_API createObject (NodeSPtr node, BaseObjectDescription &params);  Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object i",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3242,Integrability,depend,dependencies,3242,"d::string, std::string >{});  create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, const std::string &name, const std::map< std::string, std::string > &params=std::map< std::string, std::string >{});  create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, BaseObjectDescription &desc);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:6449,Integrability,depend,dependencies,6449,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:19,Usability,simpl,simpleapi,19,"﻿. SOFA API: sofa::simpleapi Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simpleapi Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMPLEAPI_API void init ();  Initialize the Sofa.SimpleApi library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isInitialized ();  Return true if and only if the Sofa.SimpleApi library has been initialized. More...;  ; SOFA_SIMPLEAPI_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isCleanedUp ();  Return true if and only if the Sofa.SimpleApi library has been cleaned up. More...;  ; bool importPlugin (const std::string &name);  ; void dumpScene (Node::SPtr root);  ; Simulation::SPtr createSimulation (const std::string &type);  ; Node::SPtr createRootNode (Simulation::SPtr s, const std::string &name, const std::map< std::string, std::string > &params);  ; NodeSPtr createRootNode (Simulation *s, const std::string &name, const std::map< std::string, std::string > &params);  ; BaseObject::SPtr createObject (Node::SPtr parent, BaseObjectDescription &desc);  ; BaseObject::SPtr createObject (Node::SPtr parent, const std::string &type, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, const std::string &name, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, BaseObjectDescription &desc);  ; Node::SPtr createNode (const std::string &name);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; sofa::core::sptr< BaseObject > SOFA_SIMPLEAPI_API createObject (NodeSPtr node, BaseObjectDescription &params);  Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object i",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:153,Usability,simpl,simpleapi,153,"﻿. SOFA API: sofa::simpleapi Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simpleapi Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMPLEAPI_API void init ();  Initialize the Sofa.SimpleApi library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isInitialized ();  Return true if and only if the Sofa.SimpleApi library has been initialized. More...;  ; SOFA_SIMPLEAPI_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isCleanedUp ();  Return true if and only if the Sofa.SimpleApi library has been cleaned up. More...;  ; bool importPlugin (const std::string &name);  ; void dumpScene (Node::SPtr root);  ; Simulation::SPtr createSimulation (const std::string &type);  ; Node::SPtr createRootNode (Simulation::SPtr s, const std::string &name, const std::map< std::string, std::string > &params);  ; NodeSPtr createRootNode (Simulation *s, const std::string &name, const std::map< std::string, std::string > &params);  ; BaseObject::SPtr createObject (Node::SPtr parent, BaseObjectDescription &desc);  ; BaseObject::SPtr createObject (Node::SPtr parent, const std::string &type, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, const std::string &name, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, BaseObjectDescription &desc);  ; Node::SPtr createNode (const std::string &name);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; sofa::core::sptr< BaseObject > SOFA_SIMPLEAPI_API createObject (NodeSPtr node, BaseObjectDescription &params);  Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object i",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:284,Usability,Simpl,SimpleApi,284,"﻿. SOFA API: sofa::simpleapi Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simpleapi Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMPLEAPI_API void init ();  Initialize the Sofa.SimpleApi library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isInitialized ();  Return true if and only if the Sofa.SimpleApi library has been initialized. More...;  ; SOFA_SIMPLEAPI_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isCleanedUp ();  Return true if and only if the Sofa.SimpleApi library has been cleaned up. More...;  ; bool importPlugin (const std::string &name);  ; void dumpScene (Node::SPtr root);  ; Simulation::SPtr createSimulation (const std::string &type);  ; Node::SPtr createRootNode (Simulation::SPtr s, const std::string &name, const std::map< std::string, std::string > &params);  ; NodeSPtr createRootNode (Simulation *s, const std::string &name, const std::map< std::string, std::string > &params);  ; BaseObject::SPtr createObject (Node::SPtr parent, BaseObjectDescription &desc);  ; BaseObject::SPtr createObject (Node::SPtr parent, const std::string &type, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, const std::string &name, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, BaseObjectDescription &desc);  ; Node::SPtr createNode (const std::string &name);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; sofa::core::sptr< BaseObject > SOFA_SIMPLEAPI_API createObject (NodeSPtr node, BaseObjectDescription &params);  Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object i",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:423,Usability,Simpl,SimpleApi,423,"﻿. SOFA API: sofa::simpleapi Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simpleapi Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMPLEAPI_API void init ();  Initialize the Sofa.SimpleApi library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isInitialized ();  Return true if and only if the Sofa.SimpleApi library has been initialized. More...;  ; SOFA_SIMPLEAPI_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isCleanedUp ();  Return true if and only if the Sofa.SimpleApi library has been cleaned up. More...;  ; bool importPlugin (const std::string &name);  ; void dumpScene (Node::SPtr root);  ; Simulation::SPtr createSimulation (const std::string &type);  ; Node::SPtr createRootNode (Simulation::SPtr s, const std::string &name, const std::map< std::string, std::string > &params);  ; NodeSPtr createRootNode (Simulation *s, const std::string &name, const std::map< std::string, std::string > &params);  ; BaseObject::SPtr createObject (Node::SPtr parent, BaseObjectDescription &desc);  ; BaseObject::SPtr createObject (Node::SPtr parent, const std::string &type, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, const std::string &name, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, BaseObjectDescription &desc);  ; Node::SPtr createNode (const std::string &name);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; sofa::core::sptr< BaseObject > SOFA_SIMPLEAPI_API createObject (NodeSPtr node, BaseObjectDescription &params);  Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object i",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:694,Usability,Simpl,SimpleApi,694,"﻿. SOFA API: sofa::simpleapi Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simpleapi Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMPLEAPI_API void init ();  Initialize the Sofa.SimpleApi library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isInitialized ();  Return true if and only if the Sofa.SimpleApi library has been initialized. More...;  ; SOFA_SIMPLEAPI_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isCleanedUp ();  Return true if and only if the Sofa.SimpleApi library has been cleaned up. More...;  ; bool importPlugin (const std::string &name);  ; void dumpScene (Node::SPtr root);  ; Simulation::SPtr createSimulation (const std::string &type);  ; Node::SPtr createRootNode (Simulation::SPtr s, const std::string &name, const std::map< std::string, std::string > &params);  ; NodeSPtr createRootNode (Simulation *s, const std::string &name, const std::map< std::string, std::string > &params);  ; BaseObject::SPtr createObject (Node::SPtr parent, BaseObjectDescription &desc);  ; BaseObject::SPtr createObject (Node::SPtr parent, const std::string &type, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, const std::string &name, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, BaseObjectDescription &desc);  ; Node::SPtr createNode (const std::string &name);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; sofa::core::sptr< BaseObject > SOFA_SIMPLEAPI_API createObject (NodeSPtr node, BaseObjectDescription &params);  Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object i",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3136,Usability,simpl,simpleapi,3136,"ring &type, const std::map< std::string, std::string > &params=std::map< std::string, std::string >{});  create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, const std::string &name, const std::map< std::string, std::string > &params=std::map< std::string, std::string >{});  create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, BaseObjectDescription &desc);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3298,Usability,simpl,simpleapi,3298,"""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, const std::string &name, const std::map< std::string, std::string > &params=std::map< std::string, std::string >{});  create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, BaseObjectDescription &desc);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::strin",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3423,Usability,simpl,simpleapi,3423,"deSPtr node, const std::string &name, const std::map< std::string, std::string > &params=std::map< std::string, std::string >{});  create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, BaseObjectDescription &desc);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3618,Usability,simpl,simpleapi,3618,"parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, BaseObjectDescription &desc);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3907,Usability,simpl,simpleapi,3907,"ed object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:4270,Usability,simpl,simpleapi,4270," Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:4522,Usability,simpl,simpleapi,4522,":string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNo",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:4657,Usability,simpl,simpleapi,4657,"bjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const st",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:4876,Usability,simpl,simpleapi,4876," NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:5197,Usability,simpl,simpleapi,5197,"t to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::d",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:5582,Usability,simpl,simpleapi,5582,"iption & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi l",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:5782,Usability,simpl,simpleapi,5782,"s . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). tem",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:5990,Usability,simpl,simpleapi,5990,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:6084,Usability,simpl,simpleapi,6084,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:6181,Usability,simpl,simpleapi,6181,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:6273,Usability,simpl,simpleapi,6273,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:6371,Usability,simpl,simpleapi,6371,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:6415,Usability,Simpl,SimpleApi,6415,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:6512,Usability,simpl,simpleapi,6512,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:6579,Usability,Simpl,SimpleApi,6579,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:6669,Usability,simpl,simpleapi,6669,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:6738,Usability,Simpl,SimpleApi,6738,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:6828,Usability,simpl,simpleapi,6828,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simpleapi.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:9517,Availability,avail,available,9517,"s homogeneous, except for the last range which may contain more elements. . ◆ parallelForEach(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEach ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies the given function object f to the result of dereferencing every iterator in the range [first, last), in parallel. . ◆ parallelForEachRange(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEachRange ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies in parallel the given function object f to a list of ranges generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFact",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:769,Deployability,integrat,integrations,769,"﻿. SOFA API: sofa::simulation Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::simulation Namespace Reference . Namespaces;  Colors;  ;  common;  ;  core;  ;  graph;  ;  mechanicalvisitor;  ;  node;  ;  xml;  . Classes; class  FindByTypeVisitor;  ; class  SceneLoaderPHP;  ; class  SceneLoaderXML;  ; class  TransformationVisitor;  ; class  AnimateBeginEvent;  ; class  AnimateEndEvent;  ; class  AnimateVisitor;  ; class  BaseMechanicalVisitor;  ; class  BehaviorUpdatePositionVisitor;  ; class  CleanupVisitor;  ; class  CollisionAnimationLoop;  Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. More...;  ; class  CollisionBeginEvent;  ; class  CollisionEndEvent;  ; class  CollisionVisitor;  Compute collision reset, detection and response in one step. More...;  ; class  CollisionResetVisitor;  Remove collision response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  I",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:2056,Deployability,Integrat,IntegrateBeginEvent,2056,on response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  InitPerThreadDataTask;  ; class  InitVisitor;  ; class  IntegrateBeginEvent;  ; class  IntegrateEndEvent;  ; class  SpinLock;  ; class  ScopedLock;  ; class  MainTaskSchedulerFactory;  ; class  MainTaskSchedulerRegistry;  ; class  MechanicalVisitor;  ; class  MechanicalVPrintVisitor;  ; class  MechanicalVPrintWithElapsedTimeVisitor;  ; class  DofPrintVisitor;  ; class  MutationListener;  Generic API to handle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor; ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:2087,Deployability,Integrat,IntegrateEndEvent,2087,on response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  InitPerThreadDataTask;  ; class  InitVisitor;  ; class  IntegrateBeginEvent;  ; class  IntegrateEndEvent;  ; class  SpinLock;  ; class  ScopedLock;  ; class  MainTaskSchedulerFactory;  ; class  MainTaskSchedulerRegistry;  ; class  MechanicalVisitor;  ; class  MechanicalVPrintVisitor;  ; class  MechanicalVPrintWithElapsedTimeVisitor;  ; class  DofPrintVisitor;  ; class  MutationListener;  Generic API to handle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor; ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:2597,Deployability,Pipeline,PipelineImpl,2597,onInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  InitPerThreadDataTask;  ; class  InitVisitor;  ; class  IntegrateBeginEvent;  ; class  IntegrateEndEvent;  ; class  SpinLock;  ; class  ScopedLock;  ; class  MainTaskSchedulerFactory;  ; class  MainTaskSchedulerRegistry;  ; class  MechanicalVisitor;  ; class  MechanicalVPrintVisitor;  ; class  MechanicalVPrintWithElapsedTimeVisitor;  ; class  DofPrintVisitor;  ; class  MutationListener;  Generic API to handle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the sce,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:3301,Deployability,Update,UpdateBoundingBoxVisitor,3301,"ndle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the scenegraph. More...;  ; class  VisualVisitor;  ; class  VisualDrawVisitor;  ; class  VisualUpdateVisitor;  ; class  VisualInitVisitor;  ; class  VisualComputeBBoxVisitor;  ; class  VisualClearVisitor;  ; class  WorkerThread;  ; class  WriteStateVisitor;  ; class  XMLPrintVisitor;  . Typedefs; typedef sofa::core::sptr< Node > NodeSPtr;  ; typedef sofa::core::sptr< Simulation > SimulationSPtr;  . Enumerations; enum class  ForEachExecutionPolicy : bool { SEQUENTIAL = false; , PARALLEL; };  . Functions; void setSimulation (Simulation *s)=delete;  Set the (unique) simulation which controls the scene. More...;  ; SOFA_SIMULATION_CORE_API Simulation * getSimulation ();  ; void initThreadLocalData ();  ; template<class In",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:3337,Deployability,Update,UpdateContextVisitor,3337,"ndle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the scenegraph. More...;  ; class  VisualVisitor;  ; class  VisualDrawVisitor;  ; class  VisualUpdateVisitor;  ; class  VisualInitVisitor;  ; class  VisualComputeBBoxVisitor;  ; class  VisualClearVisitor;  ; class  WorkerThread;  ; class  WriteStateVisitor;  ; class  XMLPrintVisitor;  . Typedefs; typedef sofa::core::sptr< Node > NodeSPtr;  ; typedef sofa::core::sptr< Simulation > SimulationSPtr;  . Enumerations; enum class  ForEachExecutionPolicy : bool { SEQUENTIAL = false; , PARALLEL; };  . Functions; void setSimulation (Simulation *s)=delete;  Set the (unique) simulation which controls the scene. More...;  ; SOFA_SIMULATION_CORE_API Simulation * getSimulation ();  ; void initThreadLocalData ();  ; template<class In",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:3369,Deployability,Update,UpdateSimulationContextVisitor,3369,"ndle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the scenegraph. More...;  ; class  VisualVisitor;  ; class  VisualDrawVisitor;  ; class  VisualUpdateVisitor;  ; class  VisualInitVisitor;  ; class  VisualComputeBBoxVisitor;  ; class  VisualClearVisitor;  ; class  WorkerThread;  ; class  WriteStateVisitor;  ; class  XMLPrintVisitor;  . Typedefs; typedef sofa::core::sptr< Node > NodeSPtr;  ; typedef sofa::core::sptr< Simulation > SimulationSPtr;  . Enumerations; enum class  ForEachExecutionPolicy : bool { SEQUENTIAL = false; , PARALLEL; };  . Functions; void setSimulation (Simulation *s)=delete;  Set the (unique) simulation which controls the scene. More...;  ; SOFA_SIMULATION_CORE_API Simulation * getSimulation ();  ; void initThreadLocalData ();  ; template<class In",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:3411,Deployability,Update,UpdateVisualContextVisitor,3411,"ndle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the scenegraph. More...;  ; class  VisualVisitor;  ; class  VisualDrawVisitor;  ; class  VisualUpdateVisitor;  ; class  VisualInitVisitor;  ; class  VisualComputeBBoxVisitor;  ; class  VisualClearVisitor;  ; class  WorkerThread;  ; class  WriteStateVisitor;  ; class  XMLPrintVisitor;  . Typedefs; typedef sofa::core::sptr< Node > NodeSPtr;  ; typedef sofa::core::sptr< Simulation > SimulationSPtr;  . Enumerations; enum class  ForEachExecutionPolicy : bool { SEQUENTIAL = false; , PARALLEL; };  . Functions; void setSimulation (Simulation *s)=delete;  Set the (unique) simulation which controls the scene. More...;  ; SOFA_SIMULATION_CORE_API Simulation * getSimulation ();  ; void initThreadLocalData ();  ; template<class In",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:3449,Deployability,Update,UpdateInternalDataVisitor,3449,"ndle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the scenegraph. More...;  ; class  VisualVisitor;  ; class  VisualDrawVisitor;  ; class  VisualUpdateVisitor;  ; class  VisualInitVisitor;  ; class  VisualComputeBBoxVisitor;  ; class  VisualClearVisitor;  ; class  WorkerThread;  ; class  WriteStateVisitor;  ; class  XMLPrintVisitor;  . Typedefs; typedef sofa::core::sptr< Node > NodeSPtr;  ; typedef sofa::core::sptr< Simulation > SimulationSPtr;  . Enumerations; enum class  ForEachExecutionPolicy : bool { SEQUENTIAL = false; , PARALLEL; };  . Functions; void setSimulation (Simulation *s)=delete;  Set the (unique) simulation which controls the scene. More...;  ; SOFA_SIMULATION_CORE_API Simulation * getSimulation ();  ; void initThreadLocalData ();  ; template<class In",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:3486,Deployability,Update,UpdateLinksVisitor,3486,"ndle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the scenegraph. More...;  ; class  VisualVisitor;  ; class  VisualDrawVisitor;  ; class  VisualUpdateVisitor;  ; class  VisualInitVisitor;  ; class  VisualComputeBBoxVisitor;  ; class  VisualClearVisitor;  ; class  WorkerThread;  ; class  WriteStateVisitor;  ; class  XMLPrintVisitor;  . Typedefs; typedef sofa::core::sptr< Node > NodeSPtr;  ; typedef sofa::core::sptr< Simulation > SimulationSPtr;  . Enumerations; enum class  ForEachExecutionPolicy : bool { SEQUENTIAL = false; , PARALLEL; };  . Functions; void setSimulation (Simulation *s)=delete;  Set the (unique) simulation which controls the scene. More...;  ; SOFA_SIMULATION_CORE_API Simulation * getSimulation ();  ; void initThreadLocalData ();  ; template<class In",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:3516,Deployability,Update,UpdateMappingEndEvent,3516,"ndle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the scenegraph. More...;  ; class  VisualVisitor;  ; class  VisualDrawVisitor;  ; class  VisualUpdateVisitor;  ; class  VisualInitVisitor;  ; class  VisualComputeBBoxVisitor;  ; class  VisualClearVisitor;  ; class  WorkerThread;  ; class  WriteStateVisitor;  ; class  XMLPrintVisitor;  . Typedefs; typedef sofa::core::sptr< Node > NodeSPtr;  ; typedef sofa::core::sptr< Simulation > SimulationSPtr;  . Enumerations; enum class  ForEachExecutionPolicy : bool { SEQUENTIAL = false; , PARALLEL; };  . Functions; void setSimulation (Simulation *s)=delete;  Set the (unique) simulation which controls the scene. More...;  ; SOFA_SIMULATION_CORE_API Simulation * getSimulation ();  ; void initThreadLocalData ();  ; template<class In",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:3549,Deployability,Update,UpdateMappingVisitor,3549,"ndle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the scenegraph. More...;  ; class  VisualVisitor;  ; class  VisualDrawVisitor;  ; class  VisualUpdateVisitor;  ; class  VisualInitVisitor;  ; class  VisualComputeBBoxVisitor;  ; class  VisualClearVisitor;  ; class  WorkerThread;  ; class  WriteStateVisitor;  ; class  XMLPrintVisitor;  . Typedefs; typedef sofa::core::sptr< Node > NodeSPtr;  ; typedef sofa::core::sptr< Simulation > SimulationSPtr;  . Enumerations; enum class  ForEachExecutionPolicy : bool { SEQUENTIAL = false; , PARALLEL; };  . Functions; void setSimulation (Simulation *s)=delete;  Set the (unique) simulation which controls the scene. More...;  ; SOFA_SIMULATION_CORE_API Simulation * getSimulation ();  ; void initThreadLocalData ();  ; template<class In",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:10198,Deployability,integrat,integration,10198," generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:10251,Deployability,update,update,10251," generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:10280,Deployability,update,update,10280," generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:10303,Deployability,update,update,10303," generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:3077,Energy Efficiency,schedul,scheduler,3077,lass  InitVisitor;  ; class  IntegrateBeginEvent;  ; class  IntegrateEndEvent;  ; class  SpinLock;  ; class  ScopedLock;  ; class  MainTaskSchedulerFactory;  ; class  MainTaskSchedulerRegistry;  ; class  MechanicalVisitor;  ; class  MechanicalVPrintVisitor;  ; class  MechanicalVPrintWithElapsedTimeVisitor;  ; class  DofPrintVisitor;  ; class  MutationListener;  Generic API to handle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the scenegraph. More...;  ; class  VisualVisitor;  ; class  VisualDrawVisitor;  ; class  VisualUpdateVisitor;  ; class  VisualInitVisitor;  ; class  VisualComputeBBoxVisitor;  ; class  VisualClearVisitor;  ; class  WorkerThread;  ; class  WriteStateVisitor;  ; class  XMLPrintVisitor;  . Typedefs; typedef sofa::core::sptr< Node > NodeSPtr;  ; t,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:9409,Energy Efficiency,schedul,scheduler,9409,"number of elements in the container The number of elements in each range is homogeneous, except for the last range which may contain more elements. . ◆ parallelForEach(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEach ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies the given function object f to the result of dereferencing every iterator in the range [first, last), in parallel. . ◆ parallelForEachRange(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEachRange ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies in parallel the given function object f to a list of ranges generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simula",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:9539,Energy Efficiency,schedul,scheduler,9539,"s homogeneous, except for the last range which may contain more elements. . ◆ parallelForEach(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEach ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies the given function object f to the result of dereferencing every iterator in the range [first, last), in parallel. . ◆ parallelForEachRange(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEachRange ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies in parallel the given function object f to a list of ranges generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFact",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:769,Integrability,integrat,integrations,769,"﻿. SOFA API: sofa::simulation Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::simulation Namespace Reference . Namespaces;  Colors;  ;  common;  ;  core;  ;  graph;  ;  mechanicalvisitor;  ;  node;  ;  xml;  . Classes; class  FindByTypeVisitor;  ; class  SceneLoaderPHP;  ; class  SceneLoaderXML;  ; class  TransformationVisitor;  ; class  AnimateBeginEvent;  ; class  AnimateEndEvent;  ; class  AnimateVisitor;  ; class  BaseMechanicalVisitor;  ; class  BehaviorUpdatePositionVisitor;  ; class  CleanupVisitor;  ; class  CollisionAnimationLoop;  Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. More...;  ; class  CollisionBeginEvent;  ; class  CollisionEndEvent;  ; class  CollisionVisitor;  Compute collision reset, detection and response in one step. More...;  ; class  CollisionResetVisitor;  Remove collision response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  I",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:2056,Integrability,Integrat,IntegrateBeginEvent,2056,on response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  InitPerThreadDataTask;  ; class  InitVisitor;  ; class  IntegrateBeginEvent;  ; class  IntegrateEndEvent;  ; class  SpinLock;  ; class  ScopedLock;  ; class  MainTaskSchedulerFactory;  ; class  MainTaskSchedulerRegistry;  ; class  MechanicalVisitor;  ; class  MechanicalVPrintVisitor;  ; class  MechanicalVPrintWithElapsedTimeVisitor;  ; class  DofPrintVisitor;  ; class  MutationListener;  Generic API to handle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor; ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:2087,Integrability,Integrat,IntegrateEndEvent,2087,on response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  InitPerThreadDataTask;  ; class  InitVisitor;  ; class  IntegrateBeginEvent;  ; class  IntegrateEndEvent;  ; class  SpinLock;  ; class  ScopedLock;  ; class  MainTaskSchedulerFactory;  ; class  MainTaskSchedulerRegistry;  ; class  MechanicalVisitor;  ; class  MechanicalVPrintVisitor;  ; class  MechanicalVPrintWithElapsedTimeVisitor;  ; class  DofPrintVisitor;  ; class  MutationListener;  Generic API to handle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor; ,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:8356,Integrability,depend,depends,8356," last, . UnaryFunction ; f . ). Applies the given function object f to the Range [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const & . ◆ getSimulation(). Simulation * sofa::simulation::getSimulation ; (; ). Get the (unique) simulation which controls the scene. Automatically creates one if no Simulation has been set. . ◆ init(). SOFA_SIMULATION_API void sofa::simulation::init ; (; ). ◆ initThreadLocalData(). SOFA_SIMULATION_CORE_API void sofa::simulation::initThreadLocalData ; (; ). ◆ makeRangesForLoop(). template<class InputIt > . sofa::type::vector<Range<InputIt> > sofa::simulation::makeRangesForLoop ; (; const InputIt ; first, . const InputIt ; last, . const unsigned int ; nbRangesHint . ). Function returning a list of ranges from an iterable container. The number of ranges depends on: 1) the desired number of ranges provided in a parameter 2) the number of elements in the container The number of elements in each range is homogeneous, except for the last range which may contain more elements. . ◆ parallelForEach(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEach ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies the given function object f to the result of dereferencing every iterator in the range [first, last), in parallel. . ◆ parallelForEachRange(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEachRange ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies in parallel the given function object f to a list of ranges generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initia",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:9494,Integrability,depend,depends,9494,"s homogeneous, except for the last range which may contain more elements. . ◆ parallelForEach(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEach ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies the given function object f to the result of dereferencing every iterator in the range [first, last), in parallel. . ◆ parallelForEachRange(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEachRange ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies in parallel the given function object f to a list of ranges generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFact",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:10198,Integrability,integrat,integration,10198," generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:191,Modifiability,Variab,Variables,191,"﻿. SOFA API: sofa::simulation Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::simulation Namespace Reference . Namespaces;  Colors;  ;  common;  ;  core;  ;  graph;  ;  mechanicalvisitor;  ;  node;  ;  xml;  . Classes; class  FindByTypeVisitor;  ; class  SceneLoaderPHP;  ; class  SceneLoaderXML;  ; class  TransformationVisitor;  ; class  AnimateBeginEvent;  ; class  AnimateEndEvent;  ; class  AnimateVisitor;  ; class  BaseMechanicalVisitor;  ; class  BehaviorUpdatePositionVisitor;  ; class  CleanupVisitor;  ; class  CollisionAnimationLoop;  Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. More...;  ; class  CollisionBeginEvent;  ; class  CollisionEndEvent;  ; class  CollisionVisitor;  Compute collision reset, detection and response in one step. More...;  ; class  CollisionResetVisitor;  Remove collision response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  I",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:5642,Modifiability,Variab,Variables,5642,"ction forEachRange (InputIt first, InputIt last, UnaryFunction f);  ; template<class InputIt , class UnaryFunction > ; UnaryFunction parallelForEachRange (TaskScheduler &taskScheduler, InputIt first, InputIt last, UnaryFunction f);  ; template<class InputIt , class UnaryFunction > ; UnaryFunction parallelForEach (TaskScheduler &taskScheduler, InputIt first, InputIt last, UnaryFunction f);  ; template<class InputIt , class UnaryFunction > ; UnaryFunction forEachRange (const ForEachExecutionPolicy execution, TaskScheduler &taskScheduler, InputIt first, InputIt last, UnaryFunction f);  ; template<class InputIt , class UnaryFunction > ; UnaryFunction forEach (const ForEachExecutionPolicy execution, TaskScheduler &taskScheduler, InputIt first, InputIt last, UnaryFunction f);  ; SOFA_SIMULATION_API void init ();  . Variables; const SceneLoader * loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP());  ; const SceneLoader * loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML());  ; int DefaultAnimationLoopClass;  ; const bool DefaultTaskSchedulerRegistered;  ; int DefaultVisualManagerLoopClass;  ; int RequiredPluginClass;  . Typedef Documentation. ◆ NodeSPtr. typedef sofa::core::sptr< Node > sofa::simulation::NodeSPtr. ◆ SimulationSPtr. typedef sofa::core::sptr<Simulation> sofa::simulation::SimulationSPtr. Enumeration Type Documentation. ◆ ForEachExecutionPolicy. enum sofa::simulation::ForEachExecutionPolicy : bool. strong . EnumeratorSEQUENTIAL ; PARALLEL . Function Documentation. ◆ advance(). template<class InputIt , class Distance > . void sofa::simulation::advance ; (; InputIt & ; it, . Distance ; n . ). ◆ forEach() [1/2]. template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::forEach ; (; const ForEachExecutionPolicy ; execution, . TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). ◆ forEach() [2/2]. template<class InputIt , class UnaryFunction > . UnaryF",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:9697,Modifiability,Variab,Variable,9697,"Scheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies the given function object f to the result of dereferencing every iterator in the range [first, last), in parallel. . ◆ parallelForEachRange(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEachRange ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies in parallel the given function object f to a list of ranges generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::Regist",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:11220,Modifiability,plugin,plugins,11220," Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required plugins""); .add< RequiredPlugin >(). sofasimulation; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:2926,Performance,load,loaders,2926,onInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  InitPerThreadDataTask;  ; class  InitVisitor;  ; class  IntegrateBeginEvent;  ; class  IntegrateEndEvent;  ; class  SpinLock;  ; class  ScopedLock;  ; class  MainTaskSchedulerFactory;  ; class  MainTaskSchedulerRegistry;  ; class  MechanicalVisitor;  ; class  MechanicalVPrintVisitor;  ; class  MechanicalVPrintWithElapsedTimeVisitor;  ; class  DofPrintVisitor;  ; class  MutationListener;  Generic API to handle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the sce,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:5673,Performance,load,loaderPHP,5673,"ction forEachRange (InputIt first, InputIt last, UnaryFunction f);  ; template<class InputIt , class UnaryFunction > ; UnaryFunction parallelForEachRange (TaskScheduler &taskScheduler, InputIt first, InputIt last, UnaryFunction f);  ; template<class InputIt , class UnaryFunction > ; UnaryFunction parallelForEach (TaskScheduler &taskScheduler, InputIt first, InputIt last, UnaryFunction f);  ; template<class InputIt , class UnaryFunction > ; UnaryFunction forEachRange (const ForEachExecutionPolicy execution, TaskScheduler &taskScheduler, InputIt first, InputIt last, UnaryFunction f);  ; template<class InputIt , class UnaryFunction > ; UnaryFunction forEach (const ForEachExecutionPolicy execution, TaskScheduler &taskScheduler, InputIt first, InputIt last, UnaryFunction f);  ; SOFA_SIMULATION_API void init ();  . Variables; const SceneLoader * loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP());  ; const SceneLoader * loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML());  ; int DefaultAnimationLoopClass;  ; const bool DefaultTaskSchedulerRegistered;  ; int DefaultVisualManagerLoopClass;  ; int RequiredPluginClass;  . Typedef Documentation. ◆ NodeSPtr. typedef sofa::core::sptr< Node > sofa::simulation::NodeSPtr. ◆ SimulationSPtr. typedef sofa::core::sptr<Simulation> sofa::simulation::SimulationSPtr. Enumeration Type Documentation. ◆ ForEachExecutionPolicy. enum sofa::simulation::ForEachExecutionPolicy : bool. strong . EnumeratorSEQUENTIAL ; PARALLEL . Function Documentation. ◆ advance(). template<class InputIt , class Distance > . void sofa::simulation::advance ; (; InputIt & ; it, . Distance ; n . ). ◆ forEach() [1/2]. template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::forEach ; (; const ForEachExecutionPolicy ; execution, . TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). ◆ forEach() [2/2]. template<class InputIt , class UnaryFunction > . UnaryF",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:5775,Performance,load,loaderXML,5775,"ction forEachRange (InputIt first, InputIt last, UnaryFunction f);  ; template<class InputIt , class UnaryFunction > ; UnaryFunction parallelForEachRange (TaskScheduler &taskScheduler, InputIt first, InputIt last, UnaryFunction f);  ; template<class InputIt , class UnaryFunction > ; UnaryFunction parallelForEach (TaskScheduler &taskScheduler, InputIt first, InputIt last, UnaryFunction f);  ; template<class InputIt , class UnaryFunction > ; UnaryFunction forEachRange (const ForEachExecutionPolicy execution, TaskScheduler &taskScheduler, InputIt first, InputIt last, UnaryFunction f);  ; template<class InputIt , class UnaryFunction > ; UnaryFunction forEach (const ForEachExecutionPolicy execution, TaskScheduler &taskScheduler, InputIt first, InputIt last, UnaryFunction f);  ; SOFA_SIMULATION_API void init ();  . Variables; const SceneLoader * loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP());  ; const SceneLoader * loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML());  ; int DefaultAnimationLoopClass;  ; const bool DefaultTaskSchedulerRegistered;  ; int DefaultVisualManagerLoopClass;  ; int RequiredPluginClass;  . Typedef Documentation. ◆ NodeSPtr. typedef sofa::core::sptr< Node > sofa::simulation::NodeSPtr. ◆ SimulationSPtr. typedef sofa::core::sptr<Simulation> sofa::simulation::SimulationSPtr. Enumeration Type Documentation. ◆ ForEachExecutionPolicy. enum sofa::simulation::ForEachExecutionPolicy : bool. strong . EnumeratorSEQUENTIAL ; PARALLEL . Function Documentation. ◆ advance(). template<class InputIt , class Distance > . void sofa::simulation::advance ; (; InputIt & ; it, . Distance ; n . ). ◆ forEach() [1/2]. template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::forEach ; (; const ForEachExecutionPolicy ; execution, . TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). ◆ forEach() [2/2]. template<class InputIt , class UnaryFunction > . UnaryF",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:10842,Performance,load,loaderPHP,10842," Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required plugins""); .add< RequiredPlugin >(). sofasimulation; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:10890,Performance,load,loaderPHP,10890," Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required plugins""); .add< RequiredPlugin >(). sofasimulation; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:10971,Performance,load,loaderXML,10971," Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required plugins""); .add< RequiredPlugin >(). sofasimulation; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:11019,Performance,load,loaderXML,11019," Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required plugins""); .add< RequiredPlugin >(). sofasimulation; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:11202,Performance,Load,Load,11202," Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required plugins""); .add< RequiredPlugin >(). sofasimulation; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:926,Safety,detect,detection,926,"﻿. SOFA API: sofa::simulation Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::simulation Namespace Reference . Namespaces;  Colors;  ;  common;  ;  core;  ;  graph;  ;  mechanicalvisitor;  ;  node;  ;  xml;  . Classes; class  FindByTypeVisitor;  ; class  SceneLoaderPHP;  ; class  SceneLoaderXML;  ; class  TransformationVisitor;  ; class  AnimateBeginEvent;  ; class  AnimateEndEvent;  ; class  AnimateVisitor;  ; class  BaseMechanicalVisitor;  ; class  BehaviorUpdatePositionVisitor;  ; class  CleanupVisitor;  ; class  CollisionAnimationLoop;  Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. More...;  ; class  CollisionBeginEvent;  ; class  CollisionEndEvent;  ; class  CollisionVisitor;  Compute collision reset, detection and response in one step. More...;  ; class  CollisionResetVisitor;  Remove collision response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  I",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:1112,Safety,detect,detection,1112,"amework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::simulation Namespace Reference . Namespaces;  Colors;  ;  common;  ;  core;  ;  graph;  ;  mechanicalvisitor;  ;  node;  ;  xml;  . Classes; class  FindByTypeVisitor;  ; class  SceneLoaderPHP;  ; class  SceneLoaderXML;  ; class  TransformationVisitor;  ; class  AnimateBeginEvent;  ; class  AnimateEndEvent;  ; class  AnimateVisitor;  ; class  BaseMechanicalVisitor;  ; class  BehaviorUpdatePositionVisitor;  ; class  CleanupVisitor;  ; class  CollisionAnimationLoop;  Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. More...;  ; class  CollisionBeginEvent;  ; class  CollisionEndEvent;  ; class  CollisionVisitor;  Compute collision reset, detection and response in one step. More...;  ; class  CollisionResetVisitor;  Remove collision response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  InitPerThreadDataTask;  ; class  InitVisitor;  ; class  IntegrateBeginEvent;  ; class  I",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:2575,Usability,Pause,PauseEvent,2575,onInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  InitPerThreadDataTask;  ; class  InitVisitor;  ; class  IntegrateBeginEvent;  ; class  IntegrateEndEvent;  ; class  SpinLock;  ; class  ScopedLock;  ; class  MainTaskSchedulerFactory;  ; class  MainTaskSchedulerRegistry;  ; class  MechanicalVisitor;  ; class  MechanicalVPrintVisitor;  ; class  MechanicalVPrintWithElapsedTimeVisitor;  ; class  DofPrintVisitor;  ; class  MutationListener;  Generic API to handle mutations of the graph. More...;  ; class  NodeSequence;  ; class  NodeSingle;  ; class  Node;  ; struct  Range;  ; class  ParallelSparseMatrixProduct;  ; class  PauseEvent;  ; class  PipelineImpl;  ; class  PositionEvent;  ; class  PrintVisitor;  ; class  PropagateEventVisitor;  ; class  RequiredPlugin;  ; class  ResetVisitor;  ; class  StoreResetStateVisitor;  ; class  SceneCheck;  ; class  SceneCheckMainRegistry;  ; class  SceneCheckRegistry;  ; class  SceneLoader;  Main class used to register scene file loaders. More...;  ; class  SceneLoaderFactory;  ; class  Simulation;  ; class  SolveVisitor;  ; class  SolveVisitorTask;  A task to provide to a task scheduler in which a solver solves. More...;  ; class  StateChangeVisitor;  ; class  Task;  ; class  TaskScheduler;  ; class  TaskSchedulerFactory;  ; class  TaskSchedulerRegistry;  ; class  TopologyChangeVisitor;  ; class  UpdateBoundingBoxVisitor;  ; class  UpdateContextVisitor;  ; class  UpdateSimulationContextVisitor;  ; class  UpdateVisualContextVisitor;  ; class  UpdateInternalDataVisitor;  ; class  UpdateLinksVisitor;  ; class  UpdateMappingEndEvent;  ; class  UpdateMappingVisitor;  ; class  VelocityThresholdVisitor;  ; class  Visitor;  Base class for visitors propagated recursively through the sce,MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:10722,Usability,simpl,simplest,10722," Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required plugins""); .add< RequiredPlugin >(). sofasimulation; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html:551,Integrability,depend,dependencies,551,"﻿. SOFA API: sofa::simulation::common Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::common Namespace Reference . Classes; struct  CleanupCheck;  ; class  MechanicalOperations;  ; class  VectorOperations;  ; struct  VisitorExecuteFunc;  . Functions; SOFA_SIMULATION_COMMON_API sofa::helper::Creator< xml::NodeElement::Factory, Node > NodeClass (""default"");  ; SOFA_SIMULATION_COMMON_API void init ();  Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isInitialized ();  Return true if and only if the SofaSimulationCommon library has been initialized. More...;  ; SOFA_SIMULATION_COMMON_API void cleanup ();  Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isCleanedUp ();  Return true if and only if the SofaSimulationCommon library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::cleanup ; (; ). Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ init(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::init ; (; ). Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isCleanedUp ; (; ). Return true if and only if the SofaSimulationCommon library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isInitialized ; (; ). Return true if and only if the SofaSimulationCommon library has been initialized. . ◆ NodeClass(). SOFA_SIMULATION_COMMON_API sofa::helper::Creator<xml::NodeElement::Factory, Node> sofa::si",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html:886,Integrability,depend,dependencies,886,"﻿. SOFA API: sofa::simulation::common Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::common Namespace Reference . Classes; struct  CleanupCheck;  ; class  MechanicalOperations;  ; class  VectorOperations;  ; struct  VisitorExecuteFunc;  . Functions; SOFA_SIMULATION_COMMON_API sofa::helper::Creator< xml::NodeElement::Factory, Node > NodeClass (""default"");  ; SOFA_SIMULATION_COMMON_API void init ();  Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isInitialized ();  Return true if and only if the SofaSimulationCommon library has been initialized. More...;  ; SOFA_SIMULATION_COMMON_API void cleanup ();  Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isCleanedUp ();  Return true if and only if the SofaSimulationCommon library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::cleanup ; (; ). Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ init(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::init ; (; ). Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isCleanedUp ; (; ). Return true if and only if the SofaSimulationCommon library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isInitialized ; (; ). Return true if and only if the SofaSimulationCommon library has been initialized. . ◆ NodeClass(). SOFA_SIMULATION_COMMON_API sofa::helper::Creator<xml::NodeElement::Factory, Node> sofa::si",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html:1284,Integrability,depend,dependencies,1284,"Classes |; Functions . sofa::simulation::common Namespace Reference . Classes; struct  CleanupCheck;  ; class  MechanicalOperations;  ; class  VectorOperations;  ; struct  VisitorExecuteFunc;  . Functions; SOFA_SIMULATION_COMMON_API sofa::helper::Creator< xml::NodeElement::Factory, Node > NodeClass (""default"");  ; SOFA_SIMULATION_COMMON_API void init ();  Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isInitialized ();  Return true if and only if the SofaSimulationCommon library has been initialized. More...;  ; SOFA_SIMULATION_COMMON_API void cleanup ();  Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isCleanedUp ();  Return true if and only if the SofaSimulationCommon library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::cleanup ; (; ). Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ init(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::init ; (; ). Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isCleanedUp ; (; ). Return true if and only if the SofaSimulationCommon library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isInitialized ; (; ). Return true if and only if the SofaSimulationCommon library has been initialized. . ◆ NodeClass(). SOFA_SIMULATION_COMMON_API sofa::helper::Creator<xml::NodeElement::Factory, Node> sofa::simulation::common::NodeClass ; (; ""default"" ; ). sofasimulationcommon; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html:1480,Integrability,depend,dependencies,1480,"Classes |; Functions . sofa::simulation::common Namespace Reference . Classes; struct  CleanupCheck;  ; class  MechanicalOperations;  ; class  VectorOperations;  ; struct  VisitorExecuteFunc;  . Functions; SOFA_SIMULATION_COMMON_API sofa::helper::Creator< xml::NodeElement::Factory, Node > NodeClass (""default"");  ; SOFA_SIMULATION_COMMON_API void init ();  Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isInitialized ();  Return true if and only if the SofaSimulationCommon library has been initialized. More...;  ; SOFA_SIMULATION_COMMON_API void cleanup ();  Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isCleanedUp ();  Return true if and only if the SofaSimulationCommon library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::cleanup ; (; ). Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ init(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::init ; (; ). Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isCleanedUp ; (; ). Return true if and only if the SofaSimulationCommon library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isInitialized ; (; ). Return true if and only if the SofaSimulationCommon library has been initialized. . ◆ NodeClass(). SOFA_SIMULATION_COMMON_API sofa::helper::Creator<xml::NodeElement::Factory, Node> sofa::simulation::common::NodeClass ; (; ""default"" ; ). sofasimulationcommon; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html:342,Integrability,depend,dependencies,342,"﻿. SOFA API: sofa::simulation::core Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::core Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMULATION_CORE_API void init ();  Initialize the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_CORE_API bool isInitialized ();  Return true if and only if the SofaSimulationCore library has been initialized. More...;  ; SOFA_SIMULATION_CORE_API void cleanup ();  Clean up the resources used by the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_CORE_API bool isCleanedUp ();  Return true if and only if the SofaSimulationCore library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_CORE_API void sofa::simulation::core::cleanup ; (; ). Clean up the resources used by the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ init(). SOFA_SIMULATION_CORE_API void sofa::simulation::core::init ; (; ). Initialize the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_CORE_API bool sofa::simulation::core::isCleanedUp ; (; ). Return true if and only if the SofaSimulationCore library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_CORE_API bool sofa::simulation::core::isInitialized ; (; ). Return true if and only if the SofaSimulationCore library has been initialized. . sofasimulationcore; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html:669,Integrability,depend,dependencies,669,"﻿. SOFA API: sofa::simulation::core Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::core Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMULATION_CORE_API void init ();  Initialize the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_CORE_API bool isInitialized ();  Return true if and only if the SofaSimulationCore library has been initialized. More...;  ; SOFA_SIMULATION_CORE_API void cleanup ();  Clean up the resources used by the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_CORE_API bool isCleanedUp ();  Return true if and only if the SofaSimulationCore library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_CORE_API void sofa::simulation::core::cleanup ; (; ). Clean up the resources used by the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ init(). SOFA_SIMULATION_CORE_API void sofa::simulation::core::init ; (; ). Initialize the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_CORE_API bool sofa::simulation::core::isCleanedUp ; (; ). Return true if and only if the SofaSimulationCore library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_CORE_API bool sofa::simulation::core::isInitialized ; (; ). Return true if and only if the SofaSimulationCore library has been initialized. . sofasimulationcore; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html:1057,Integrability,depend,dependencies,1057,"﻿. SOFA API: sofa::simulation::core Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::core Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMULATION_CORE_API void init ();  Initialize the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_CORE_API bool isInitialized ();  Return true if and only if the SofaSimulationCore library has been initialized. More...;  ; SOFA_SIMULATION_CORE_API void cleanup ();  Clean up the resources used by the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_CORE_API bool isCleanedUp ();  Return true if and only if the SofaSimulationCore library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_CORE_API void sofa::simulation::core::cleanup ; (; ). Clean up the resources used by the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ init(). SOFA_SIMULATION_CORE_API void sofa::simulation::core::init ; (; ). Initialize the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_CORE_API bool sofa::simulation::core::isCleanedUp ; (; ). Return true if and only if the SofaSimulationCore library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_CORE_API bool sofa::simulation::core::isInitialized ; (; ). Return true if and only if the SofaSimulationCore library has been initialized. . sofasimulationcore; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html:1247,Integrability,depend,dependencies,1247,"﻿. SOFA API: sofa::simulation::core Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::core Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMULATION_CORE_API void init ();  Initialize the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_CORE_API bool isInitialized ();  Return true if and only if the SofaSimulationCore library has been initialized. More...;  ; SOFA_SIMULATION_CORE_API void cleanup ();  Clean up the resources used by the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_CORE_API bool isCleanedUp ();  Return true if and only if the SofaSimulationCore library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_CORE_API void sofa::simulation::core::cleanup ; (; ). Clean up the resources used by the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ init(). SOFA_SIMULATION_CORE_API void sofa::simulation::core::init ; (; ). Initialize the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_CORE_API bool sofa::simulation::core::isCleanedUp ; (; ). Return true if and only if the SofaSimulationCore library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_CORE_API bool sofa::simulation::core::isInitialized ; (; ). Return true if and only if the SofaSimulationCore library has been initialized. . sofasimulationcore; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html:277,Availability,down,down,277,"﻿. SOFA API: sofa::simulation::graph Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::graph Namespace Reference . Classes; class  ExportDotVisitor;  ; class  GetDownObjectsVisitor;  get all down objects respecting specified class_info and tags More...;  ; class  GetUpObjectsVisitor;  get all up objects respecting specified class_info and tags More...;  ; class  DAGNode;  ; class  DAGSimulation;  ; struct  CleanupCheck;  . Functions; Simulation * getSimulation ()=delete;  ; SOFA_SIMULATION_GRAPH_API void init ();  Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isInitialized ();  Return true if and only if the SofaSimulationGraph library has been initialized. More...;  ; SOFA_SIMULATION_GRAPH_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isCleanedUp ();  Return true if and only if the SofaSimulationGraph library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ getSimulation(). Simulation* sofa::simulation::graph::getSimulation ; (; ). delete . Get the (unique) simulation which controls the scene. Automatically creates one if no Simulation has been set. . ◆ init(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::init ; (; ). Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_GRAPH_API bool sofa::simulation::graph::isC",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html:665,Integrability,depend,dependencies,665,"﻿. SOFA API: sofa::simulation::graph Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::graph Namespace Reference . Classes; class  ExportDotVisitor;  ; class  GetDownObjectsVisitor;  get all down objects respecting specified class_info and tags More...;  ; class  GetUpObjectsVisitor;  get all up objects respecting specified class_info and tags More...;  ; class  DAGNode;  ; class  DAGSimulation;  ; struct  CleanupCheck;  . Functions; Simulation * getSimulation ()=delete;  ; SOFA_SIMULATION_GRAPH_API void init ();  Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isInitialized ();  Return true if and only if the SofaSimulationGraph library has been initialized. More...;  ; SOFA_SIMULATION_GRAPH_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isCleanedUp ();  Return true if and only if the SofaSimulationGraph library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ getSimulation(). Simulation* sofa::simulation::graph::getSimulation ; (; ). delete . Get the (unique) simulation which controls the scene. Automatically creates one if no Simulation has been set. . ◆ init(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::init ; (; ). Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_GRAPH_API bool sofa::simulation::graph::isC",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html:1018,Integrability,depend,dependencies,1018,"﻿. SOFA API: sofa::simulation::graph Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::graph Namespace Reference . Classes; class  ExportDotVisitor;  ; class  GetDownObjectsVisitor;  get all down objects respecting specified class_info and tags More...;  ; class  GetUpObjectsVisitor;  get all up objects respecting specified class_info and tags More...;  ; class  DAGNode;  ; class  DAGSimulation;  ; struct  CleanupCheck;  . Functions; Simulation * getSimulation ()=delete;  ; SOFA_SIMULATION_GRAPH_API void init ();  Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isInitialized ();  Return true if and only if the SofaSimulationGraph library has been initialized. More...;  ; SOFA_SIMULATION_GRAPH_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isCleanedUp ();  Return true if and only if the SofaSimulationGraph library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ getSimulation(). Simulation* sofa::simulation::graph::getSimulation ; (; ). delete . Get the (unique) simulation which controls the scene. Automatically creates one if no Simulation has been set. . ◆ init(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::init ; (; ). Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_GRAPH_API bool sofa::simulation::graph::isC",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html:1433,Integrability,depend,dependencies,1433,"isitor;  get all up objects respecting specified class_info and tags More...;  ; class  DAGNode;  ; class  DAGSimulation;  ; struct  CleanupCheck;  . Functions; Simulation * getSimulation ()=delete;  ; SOFA_SIMULATION_GRAPH_API void init ();  Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isInitialized ();  Return true if and only if the SofaSimulationGraph library has been initialized. More...;  ; SOFA_SIMULATION_GRAPH_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isCleanedUp ();  Return true if and only if the SofaSimulationGraph library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ getSimulation(). Simulation* sofa::simulation::graph::getSimulation ; (; ). delete . Get the (unique) simulation which controls the scene. Automatically creates one if no Simulation has been set. . ◆ init(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::init ; (; ). Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_GRAPH_API bool sofa::simulation::graph::isCleanedUp ; (; ). Return true if and only if the SofaSimulationGraph library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_GRAPH_API bool sofa::simulation::graph::isInitialized ; (; ). Return true if and only if the SofaSimulationGraph library has been initialized. . sofasimulationgraph; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html:1848,Integrability,depend,dependencies,1848,"isitor;  get all up objects respecting specified class_info and tags More...;  ; class  DAGNode;  ; class  DAGSimulation;  ; struct  CleanupCheck;  . Functions; Simulation * getSimulation ()=delete;  ; SOFA_SIMULATION_GRAPH_API void init ();  Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isInitialized ();  Return true if and only if the SofaSimulationGraph library has been initialized. More...;  ; SOFA_SIMULATION_GRAPH_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isCleanedUp ();  Return true if and only if the SofaSimulationGraph library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ getSimulation(). Simulation* sofa::simulation::graph::getSimulation ; (; ). delete . Get the (unique) simulation which controls the scene. Automatically creates one if no Simulation has been set. . ◆ init(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::init ; (; ). Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_GRAPH_API bool sofa::simulation::graph::isCleanedUp ; (; ). Return true if and only if the SofaSimulationGraph library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_GRAPH_API bool sofa::simulation::graph::isInitialized ; (; ). Return true if and only if the SofaSimulationGraph library has been initialized. . sofasimulationgraph; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:723,Deployability,update,updateVisualContext,723,"﻿. SOFA API: sofa::simulation::node Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Functions . sofa::simulation::node Namespace Reference . Functions; sofa::simulation::Node * getNodeFrom (sofa::core::objectmodel::BaseContext *context);  ; sofa::core::objectmodel::BaseContext * toBaseContext (sofa::simulation::Node *node);  ; void initRoot (Node *root);  Initialize the objects. More...;  ; void init (Node *node);  Init a node without changing the context of the simulation. More...;  ; void exportInXML (Node *root, const char *fileName);  Print all object in the graph in XML format. More...;  ; void print (Node *root);  Print all object in the graph. More...;  ; void updateVisualContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void animate (Node *root, SReal dt=0.0);  Execute one timestep. If dt is 0, the dt parameter in the graph will be used. More...;  ; void updateVisual (Node *root);  Update the Visual Models: triggers the Mappings. More...;  ; void reset (Node *root);  Reset to initial state. More...;  ; void initTextures (Node *root);  Initialize the textures. More...;  ; void updateContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init);  ; void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox);  ; void draw (sofa::core::visual::VisualParams *vparams, Node *root);  Render the scene. More...;  ; void exportOBJ (Node *root, const char *filename, bool exportMTL=true);  Export a scene to an OBJ 3D Scene. More...;  ; void exportGraph (Node *root, const char *filename=nullptr);  Print all objects in the graph in the given file (format is given by the filename extension) More...;  ; void dumpState (Node *root, std::ofstream &out);  Dump the current state in the given stream. More...;  ; NodeSPtr load (const std::stri",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:758,Deployability,Update,Update,758,"﻿. SOFA API: sofa::simulation::node Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Functions . sofa::simulation::node Namespace Reference . Functions; sofa::simulation::Node * getNodeFrom (sofa::core::objectmodel::BaseContext *context);  ; sofa::core::objectmodel::BaseContext * toBaseContext (sofa::simulation::Node *node);  ; void initRoot (Node *root);  Initialize the objects. More...;  ; void init (Node *node);  Init a node without changing the context of the simulation. More...;  ; void exportInXML (Node *root, const char *fileName);  Print all object in the graph in XML format. More...;  ; void print (Node *root);  Print all object in the graph. More...;  ; void updateVisualContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void animate (Node *root, SReal dt=0.0);  Execute one timestep. If dt is 0, the dt parameter in the graph will be used. More...;  ; void updateVisual (Node *root);  Update the Visual Models: triggers the Mappings. More...;  ; void reset (Node *root);  Reset to initial state. More...;  ; void initTextures (Node *root);  Initialize the textures. More...;  ; void updateContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init);  ; void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox);  ; void draw (sofa::core::visual::VisualParams *vparams, Node *root);  Render the scene. More...;  ; void exportOBJ (Node *root, const char *filename, bool exportMTL=true);  Export a scene to an OBJ 3D Scene. More...;  ; void exportGraph (Node *root, const char *filename=nullptr);  Print all objects in the graph in the given file (format is given by the filename extension) More...;  ; void dumpState (Node *root, std::ofstream &out);  Dump the current state in the given stream. More...;  ; NodeSPtr load (const std::stri",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:986,Deployability,update,updateVisual,986,"simulation::node Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Functions . sofa::simulation::node Namespace Reference . Functions; sofa::simulation::Node * getNodeFrom (sofa::core::objectmodel::BaseContext *context);  ; sofa::core::objectmodel::BaseContext * toBaseContext (sofa::simulation::Node *node);  ; void initRoot (Node *root);  Initialize the objects. More...;  ; void init (Node *node);  Init a node without changing the context of the simulation. More...;  ; void exportInXML (Node *root, const char *fileName);  Print all object in the graph in XML format. More...;  ; void print (Node *root);  Print all object in the graph. More...;  ; void updateVisualContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void animate (Node *root, SReal dt=0.0);  Execute one timestep. If dt is 0, the dt parameter in the graph will be used. More...;  ; void updateVisual (Node *root);  Update the Visual Models: triggers the Mappings. More...;  ; void reset (Node *root);  Reset to initial state. More...;  ; void initTextures (Node *root);  Initialize the textures. More...;  ; void updateContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init);  ; void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox);  ; void draw (sofa::core::visual::VisualParams *vparams, Node *root);  Render the scene. More...;  ; void exportOBJ (Node *root, const char *filename, bool exportMTL=true);  Export a scene to an OBJ 3D Scene. More...;  ; void exportGraph (Node *root, const char *filename=nullptr);  Print all objects in the graph in the given file (format is given by the filename extension) More...;  ; void dumpState (Node *root, std::ofstream &out);  Dump the current state in the given stream. More...;  ; NodeSPtr load (const std::string &, bool reload=",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:1014,Deployability,Update,Update,1014,"simulation::node Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Functions . sofa::simulation::node Namespace Reference . Functions; sofa::simulation::Node * getNodeFrom (sofa::core::objectmodel::BaseContext *context);  ; sofa::core::objectmodel::BaseContext * toBaseContext (sofa::simulation::Node *node);  ; void initRoot (Node *root);  Initialize the objects. More...;  ; void init (Node *node);  Init a node without changing the context of the simulation. More...;  ; void exportInXML (Node *root, const char *fileName);  Print all object in the graph in XML format. More...;  ; void print (Node *root);  Print all object in the graph. More...;  ; void updateVisualContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void animate (Node *root, SReal dt=0.0);  Execute one timestep. If dt is 0, the dt parameter in the graph will be used. More...;  ; void updateVisual (Node *root);  Update the Visual Models: triggers the Mappings. More...;  ; void reset (Node *root);  Reset to initial state. More...;  ; void initTextures (Node *root);  Initialize the textures. More...;  ; void updateContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init);  ; void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox);  ; void draw (sofa::core::visual::VisualParams *vparams, Node *root);  Render the scene. More...;  ; void exportOBJ (Node *root, const char *filename, bool exportMTL=true);  Export a scene to an OBJ 3D Scene. More...;  ; void exportGraph (Node *root, const char *filename=nullptr);  Print all objects in the graph in the given file (format is given by the filename extension) More...;  ; void dumpState (Node *root, std::ofstream &out);  Dump the current state in the given stream. More...;  ; NodeSPtr load (const std::string &, bool reload=",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:1212,Deployability,update,updateContext,1212,"deFrom (sofa::core::objectmodel::BaseContext *context);  ; sofa::core::objectmodel::BaseContext * toBaseContext (sofa::simulation::Node *node);  ; void initRoot (Node *root);  Initialize the objects. More...;  ; void init (Node *node);  Init a node without changing the context of the simulation. More...;  ; void exportInXML (Node *root, const char *fileName);  Print all object in the graph in XML format. More...;  ; void print (Node *root);  Print all object in the graph. More...;  ; void updateVisualContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void animate (Node *root, SReal dt=0.0);  Execute one timestep. If dt is 0, the dt parameter in the graph will be used. More...;  ; void updateVisual (Node *root);  Update the Visual Models: triggers the Mappings. More...;  ; void reset (Node *root);  Reset to initial state. More...;  ; void initTextures (Node *root);  Initialize the textures. More...;  ; void updateContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init);  ; void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox);  ; void draw (sofa::core::visual::VisualParams *vparams, Node *root);  Render the scene. More...;  ; void exportOBJ (Node *root, const char *filename, bool exportMTL=true);  Export a scene to an OBJ 3D Scene. More...;  ; void exportGraph (Node *root, const char *filename=nullptr);  Print all objects in the graph in the given file (format is given by the filename extension) More...;  ; void dumpState (Node *root, std::ofstream &out);  Dump the current state in the given stream. More...;  ; NodeSPtr load (const std::string &, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  Load a scene from a file. More...;  ; void unload (NodeSPtr root);  Unload a scene from a Node. More...;  . Function Documentat",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:1241,Deployability,Update,Update,1241,"deFrom (sofa::core::objectmodel::BaseContext *context);  ; sofa::core::objectmodel::BaseContext * toBaseContext (sofa::simulation::Node *node);  ; void initRoot (Node *root);  Initialize the objects. More...;  ; void init (Node *node);  Init a node without changing the context of the simulation. More...;  ; void exportInXML (Node *root, const char *fileName);  Print all object in the graph in XML format. More...;  ; void print (Node *root);  Print all object in the graph. More...;  ; void updateVisualContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void animate (Node *root, SReal dt=0.0);  Execute one timestep. If dt is 0, the dt parameter in the graph will be used. More...;  ; void updateVisual (Node *root);  Update the Visual Models: triggers the Mappings. More...;  ; void reset (Node *root);  Reset to initial state. More...;  ; void initTextures (Node *root);  Initialize the textures. More...;  ; void updateContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init);  ; void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox);  ; void draw (sofa::core::visual::VisualParams *vparams, Node *root);  Render the scene. More...;  ; void exportOBJ (Node *root, const char *filename, bool exportMTL=true);  Export a scene to an OBJ 3D Scene. More...;  ; void exportGraph (Node *root, const char *filename=nullptr);  Print all objects in the graph in the given file (format is given by the filename extension) More...;  ; void dumpState (Node *root, std::ofstream &out);  Dump the current state in the given stream. More...;  ; NodeSPtr load (const std::string &, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  Load a scene from a file. More...;  ; void unload (NodeSPtr root);  Unload a scene from a Node. More...;  . Function Documentat",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:5428,Deployability,update,updateContext,5428,"st char * ; filename, . bool ; exportMTL . ). Export a scene to an OBJ 3D Scene. . ◆ getNodeFrom(). SOFA_SIMULATION_CORE_API Node * sofa::simulation::node::getNodeFrom ; (; sofa::core::objectmodel::BaseContext * ; context). ◆ init(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::init ; (; Node * ; node). Init a node without changing the context of the simulation. . ◆ initRoot(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initRoot ; (; Node * ; root). Initialize the objects. . ◆ initTextures(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initTextures ; (; Node * ; root). Initialize the textures. . ◆ load(). NodeSPtr SOFA_SIMULATION_CORE_API sofa::simulation::node::load ; (; const std::string & ; filename, . bool ; reload, . const std::vector< std::string > & ; sceneArgs . ). Load a scene from a file. . ◆ print(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::print ; (; Node * ; root). Print all object in the graph. . ◆ reset(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::reset ; (; Node * ; root). Reset to initial state. . ◆ toBaseContext(). SOFA_SIMULATION_CORE_API sofa::core::objectmodel::BaseContext * sofa::simulation::node::toBaseContext ; (; sofa::simulation::Node * ; node). ◆ unload(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::unload ; (; NodeSPtr ; root). Unload a scene from a Node. . ◆ updateContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisual ; (; Node * ; root). Update the Visual Models: triggers the Mappings. . ◆ updateVisualContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisualContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . sofasimulationnode; Generated on Mon Nov 11 2024 03:34:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:5499,Deployability,update,updateContext,5499,"st char * ; filename, . bool ; exportMTL . ). Export a scene to an OBJ 3D Scene. . ◆ getNodeFrom(). SOFA_SIMULATION_CORE_API Node * sofa::simulation::node::getNodeFrom ; (; sofa::core::objectmodel::BaseContext * ; context). ◆ init(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::init ; (; Node * ; node). Init a node without changing the context of the simulation. . ◆ initRoot(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initRoot ; (; Node * ; root). Initialize the objects. . ◆ initTextures(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initTextures ; (; Node * ; root). Initialize the textures. . ◆ load(). NodeSPtr SOFA_SIMULATION_CORE_API sofa::simulation::node::load ; (; const std::string & ; filename, . bool ; reload, . const std::vector< std::string > & ; sceneArgs . ). Load a scene from a file. . ◆ print(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::print ; (; Node * ; root). Print all object in the graph. . ◆ reset(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::reset ; (; Node * ; root). Reset to initial state. . ◆ toBaseContext(). SOFA_SIMULATION_CORE_API sofa::core::objectmodel::BaseContext * sofa::simulation::node::toBaseContext ; (; sofa::simulation::Node * ; node). ◆ unload(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::unload ; (; NodeSPtr ; root). Unload a scene from a Node. . ◆ updateContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisual ; (; Node * ; root). Update the Visual Models: triggers the Mappings. . ◆ updateVisualContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisualContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . sofasimulationnode; Generated on Mon Nov 11 2024 03:34:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:5534,Deployability,Update,Update,5534,"st char * ; filename, . bool ; exportMTL . ). Export a scene to an OBJ 3D Scene. . ◆ getNodeFrom(). SOFA_SIMULATION_CORE_API Node * sofa::simulation::node::getNodeFrom ; (; sofa::core::objectmodel::BaseContext * ; context). ◆ init(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::init ; (; Node * ; node). Init a node without changing the context of the simulation. . ◆ initRoot(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initRoot ; (; Node * ; root). Initialize the objects. . ◆ initTextures(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initTextures ; (; Node * ; root). Initialize the textures. . ◆ load(). NodeSPtr SOFA_SIMULATION_CORE_API sofa::simulation::node::load ; (; const std::string & ; filename, . bool ; reload, . const std::vector< std::string > & ; sceneArgs . ). Load a scene from a file. . ◆ print(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::print ; (; Node * ; root). Print all object in the graph. . ◆ reset(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::reset ; (; Node * ; root). Reset to initial state. . ◆ toBaseContext(). SOFA_SIMULATION_CORE_API sofa::core::objectmodel::BaseContext * sofa::simulation::node::toBaseContext ; (; sofa::simulation::Node * ; node). ◆ unload(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::unload ; (; NodeSPtr ; root). Unload a scene from a Node. . ◆ updateContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisual ; (; Node * ; root). Update the Visual Models: triggers the Mappings. . ◆ updateVisualContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisualContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . sofasimulationnode; Generated on Mon Nov 11 2024 03:34:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:5617,Deployability,update,updateVisual,5617,"st char * ; filename, . bool ; exportMTL . ). Export a scene to an OBJ 3D Scene. . ◆ getNodeFrom(). SOFA_SIMULATION_CORE_API Node * sofa::simulation::node::getNodeFrom ; (; sofa::core::objectmodel::BaseContext * ; context). ◆ init(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::init ; (; Node * ; node). Init a node without changing the context of the simulation. . ◆ initRoot(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initRoot ; (; Node * ; root). Initialize the objects. . ◆ initTextures(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initTextures ; (; Node * ; root). Initialize the textures. . ◆ load(). NodeSPtr SOFA_SIMULATION_CORE_API sofa::simulation::node::load ; (; const std::string & ; filename, . bool ; reload, . const std::vector< std::string > & ; sceneArgs . ). Load a scene from a file. . ◆ print(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::print ; (; Node * ; root). Print all object in the graph. . ◆ reset(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::reset ; (; Node * ; root). Reset to initial state. . ◆ toBaseContext(). SOFA_SIMULATION_CORE_API sofa::core::objectmodel::BaseContext * sofa::simulation::node::toBaseContext ; (; sofa::simulation::Node * ; node). ◆ unload(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::unload ; (; NodeSPtr ; root). Unload a scene from a Node. . ◆ updateContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisual ; (; Node * ; root). Update the Visual Models: triggers the Mappings. . ◆ updateVisualContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisualContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . sofasimulationnode; Generated on Mon Nov 11 2024 03:34:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:5687,Deployability,update,updateVisual,5687,"st char * ; filename, . bool ; exportMTL . ). Export a scene to an OBJ 3D Scene. . ◆ getNodeFrom(). SOFA_SIMULATION_CORE_API Node * sofa::simulation::node::getNodeFrom ; (; sofa::core::objectmodel::BaseContext * ; context). ◆ init(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::init ; (; Node * ; node). Init a node without changing the context of the simulation. . ◆ initRoot(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initRoot ; (; Node * ; root). Initialize the objects. . ◆ initTextures(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initTextures ; (; Node * ; root). Initialize the textures. . ◆ load(). NodeSPtr SOFA_SIMULATION_CORE_API sofa::simulation::node::load ; (; const std::string & ; filename, . bool ; reload, . const std::vector< std::string > & ; sceneArgs . ). Load a scene from a file. . ◆ print(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::print ; (; Node * ; root). Print all object in the graph. . ◆ reset(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::reset ; (; Node * ; root). Reset to initial state. . ◆ toBaseContext(). SOFA_SIMULATION_CORE_API sofa::core::objectmodel::BaseContext * sofa::simulation::node::toBaseContext ; (; sofa::simulation::Node * ; node). ◆ unload(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::unload ; (; NodeSPtr ; root). Unload a scene from a Node. . ◆ updateContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisual ; (; Node * ; root). Update the Visual Models: triggers the Mappings. . ◆ updateVisualContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisualContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . sofasimulationnode; Generated on Mon Nov 11 2024 03:34:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:5721,Deployability,Update,Update,5721,"st char * ; filename, . bool ; exportMTL . ). Export a scene to an OBJ 3D Scene. . ◆ getNodeFrom(). SOFA_SIMULATION_CORE_API Node * sofa::simulation::node::getNodeFrom ; (; sofa::core::objectmodel::BaseContext * ; context). ◆ init(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::init ; (; Node * ; node). Init a node without changing the context of the simulation. . ◆ initRoot(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initRoot ; (; Node * ; root). Initialize the objects. . ◆ initTextures(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initTextures ; (; Node * ; root). Initialize the textures. . ◆ load(). NodeSPtr SOFA_SIMULATION_CORE_API sofa::simulation::node::load ; (; const std::string & ; filename, . bool ; reload, . const std::vector< std::string > & ; sceneArgs . ). Load a scene from a file. . ◆ print(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::print ; (; Node * ; root). Print all object in the graph. . ◆ reset(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::reset ; (; Node * ; root). Reset to initial state. . ◆ toBaseContext(). SOFA_SIMULATION_CORE_API sofa::core::objectmodel::BaseContext * sofa::simulation::node::toBaseContext ; (; sofa::simulation::Node * ; node). ◆ unload(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::unload ; (; NodeSPtr ; root). Unload a scene from a Node. . ◆ updateContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisual ; (; Node * ; root). Update the Visual Models: triggers the Mappings. . ◆ updateVisualContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisualContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . sofasimulationnode; Generated on Mon Nov 11 2024 03:34:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:5774,Deployability,update,updateVisualContext,5774,"st char * ; filename, . bool ; exportMTL . ). Export a scene to an OBJ 3D Scene. . ◆ getNodeFrom(). SOFA_SIMULATION_CORE_API Node * sofa::simulation::node::getNodeFrom ; (; sofa::core::objectmodel::BaseContext * ; context). ◆ init(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::init ; (; Node * ; node). Init a node without changing the context of the simulation. . ◆ initRoot(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initRoot ; (; Node * ; root). Initialize the objects. . ◆ initTextures(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initTextures ; (; Node * ; root). Initialize the textures. . ◆ load(). NodeSPtr SOFA_SIMULATION_CORE_API sofa::simulation::node::load ; (; const std::string & ; filename, . bool ; reload, . const std::vector< std::string > & ; sceneArgs . ). Load a scene from a file. . ◆ print(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::print ; (; Node * ; root). Print all object in the graph. . ◆ reset(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::reset ; (; Node * ; root). Reset to initial state. . ◆ toBaseContext(). SOFA_SIMULATION_CORE_API sofa::core::objectmodel::BaseContext * sofa::simulation::node::toBaseContext ; (; sofa::simulation::Node * ; node). ◆ unload(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::unload ; (; NodeSPtr ; root). Unload a scene from a Node. . ◆ updateContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisual ; (; Node * ; root). Update the Visual Models: triggers the Mappings. . ◆ updateVisualContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisualContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . sofasimulationnode; Generated on Mon Nov 11 2024 03:34:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:5851,Deployability,update,updateVisualContext,5851,"st char * ; filename, . bool ; exportMTL . ). Export a scene to an OBJ 3D Scene. . ◆ getNodeFrom(). SOFA_SIMULATION_CORE_API Node * sofa::simulation::node::getNodeFrom ; (; sofa::core::objectmodel::BaseContext * ; context). ◆ init(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::init ; (; Node * ; node). Init a node without changing the context of the simulation. . ◆ initRoot(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initRoot ; (; Node * ; root). Initialize the objects. . ◆ initTextures(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initTextures ; (; Node * ; root). Initialize the textures. . ◆ load(). NodeSPtr SOFA_SIMULATION_CORE_API sofa::simulation::node::load ; (; const std::string & ; filename, . bool ; reload, . const std::vector< std::string > & ; sceneArgs . ). Load a scene from a file. . ◆ print(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::print ; (; Node * ; root). Print all object in the graph. . ◆ reset(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::reset ; (; Node * ; root). Reset to initial state. . ◆ toBaseContext(). SOFA_SIMULATION_CORE_API sofa::core::objectmodel::BaseContext * sofa::simulation::node::toBaseContext ; (; sofa::simulation::Node * ; node). ◆ unload(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::unload ; (; NodeSPtr ; root). Unload a scene from a Node. . ◆ updateContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisual ; (; Node * ; root). Update the Visual Models: triggers the Mappings. . ◆ updateVisualContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisualContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . sofasimulationnode; Generated on Mon Nov 11 2024 03:34:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:5892,Deployability,Update,Update,5892,"st char * ; filename, . bool ; exportMTL . ). Export a scene to an OBJ 3D Scene. . ◆ getNodeFrom(). SOFA_SIMULATION_CORE_API Node * sofa::simulation::node::getNodeFrom ; (; sofa::core::objectmodel::BaseContext * ; context). ◆ init(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::init ; (; Node * ; node). Init a node without changing the context of the simulation. . ◆ initRoot(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initRoot ; (; Node * ; root). Initialize the objects. . ◆ initTextures(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initTextures ; (; Node * ; root). Initialize the textures. . ◆ load(). NodeSPtr SOFA_SIMULATION_CORE_API sofa::simulation::node::load ; (; const std::string & ; filename, . bool ; reload, . const std::vector< std::string > & ; sceneArgs . ). Load a scene from a file. . ◆ print(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::print ; (; Node * ; root). Print all object in the graph. . ◆ reset(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::reset ; (; Node * ; root). Reset to initial state. . ◆ toBaseContext(). SOFA_SIMULATION_CORE_API sofa::core::objectmodel::BaseContext * sofa::simulation::node::toBaseContext ; (; sofa::simulation::Node * ; node). ◆ unload(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::unload ; (; NodeSPtr ; root). Unload a scene from a Node. . ◆ updateContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisual ; (; Node * ; root). Update the Visual Models: triggers the Mappings. . ◆ updateVisualContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisualContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . sofasimulationnode; Generated on Mon Nov 11 2024 03:34:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:1980,Performance,load,load,1980,"s the Mappings. More...;  ; void reset (Node *root);  Reset to initial state. More...;  ; void initTextures (Node *root);  Initialize the textures. More...;  ; void updateContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init);  ; void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox);  ; void draw (sofa::core::visual::VisualParams *vparams, Node *root);  Render the scene. More...;  ; void exportOBJ (Node *root, const char *filename, bool exportMTL=true);  Export a scene to an OBJ 3D Scene. More...;  ; void exportGraph (Node *root, const char *filename=nullptr);  Print all objects in the graph in the given file (format is given by the filename extension) More...;  ; void dumpState (Node *root, std::ofstream &out);  Dump the current state in the given stream. More...;  ; NodeSPtr load (const std::string &, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  Load a scene from a file. More...;  ; void unload (NodeSPtr root);  Unload a scene from a Node. More...;  . Function Documentation. ◆ animate(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::animate ; (; Node * ; root, . SReal ; dt . ). Execute one timestep. If dt is 0, the dt parameter in the graph will be used. . ◆ computeBBox(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::computeBBox ; (; Node * ; root, . SReal * ; minBBox, . SReal * ; maxBBox, . bool ; init = true . ). Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value WarningMechanicalObjects with showObject member set to false are ignored ; See alsocomputeTotalBBox(Node* root, SReal* minBBox, SReal* maxBBox) . ◆ computeTotalBBox(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::computeTotalBBox ; (; Node * ; root, . SReal * ; minBBox, . SReal * ; maxBBox . ). Compute the bo",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:2103,Performance,Load,Load,2103,"s the Mappings. More...;  ; void reset (Node *root);  Reset to initial state. More...;  ; void initTextures (Node *root);  Initialize the textures. More...;  ; void updateContext (Node *root);  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init);  ; void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox);  ; void draw (sofa::core::visual::VisualParams *vparams, Node *root);  Render the scene. More...;  ; void exportOBJ (Node *root, const char *filename, bool exportMTL=true);  Export a scene to an OBJ 3D Scene. More...;  ; void exportGraph (Node *root, const char *filename=nullptr);  Print all objects in the graph in the given file (format is given by the filename extension) More...;  ; void dumpState (Node *root, std::ofstream &out);  Dump the current state in the given stream. More...;  ; NodeSPtr load (const std::string &, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  Load a scene from a file. More...;  ; void unload (NodeSPtr root);  Unload a scene from a Node. More...;  . Function Documentation. ◆ animate(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::animate ; (; Node * ; root, . SReal ; dt . ). Execute one timestep. If dt is 0, the dt parameter in the graph will be used. . ◆ computeBBox(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::computeBBox ; (; Node * ; root, . SReal * ; minBBox, . SReal * ; maxBBox, . bool ; init = true . ). Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value WarningMechanicalObjects with showObject member set to false are ignored ; See alsocomputeTotalBBox(Node* root, SReal* minBBox, SReal* maxBBox) . ◆ computeTotalBBox(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::computeTotalBBox ; (; Node * ; root, . SReal * ; minBBox, . SReal * ; maxBBox . ). Compute the bo",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:4690,Performance,load,load,4690," in the graph in the given file (format is given by the filename extension) . ◆ exportInXML(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::exportInXML ; (; Node * ; root, . const char * ; fileName . ). Print all object in the graph in XML format. . ◆ exportOBJ(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::exportOBJ ; (; Node * ; root, . const char * ; filename, . bool ; exportMTL . ). Export a scene to an OBJ 3D Scene. . ◆ getNodeFrom(). SOFA_SIMULATION_CORE_API Node * sofa::simulation::node::getNodeFrom ; (; sofa::core::objectmodel::BaseContext * ; context). ◆ init(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::init ; (; Node * ; node). Init a node without changing the context of the simulation. . ◆ initRoot(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initRoot ; (; Node * ; root). Initialize the objects. . ◆ initTextures(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initTextures ; (; Node * ; root). Initialize the textures. . ◆ load(). NodeSPtr SOFA_SIMULATION_CORE_API sofa::simulation::node::load ; (; const std::string & ; filename, . bool ; reload, . const std::vector< std::string > & ; sceneArgs . ). Load a scene from a file. . ◆ print(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::print ; (; Node * ; root). Print all object in the graph. . ◆ reset(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::reset ; (; Node * ; root). Reset to initial state. . ◆ toBaseContext(). SOFA_SIMULATION_CORE_API sofa::core::objectmodel::BaseContext * sofa::simulation::node::toBaseContext ; (; sofa::simulation::Node * ; node). ◆ unload(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::unload ; (; NodeSPtr ; root). Unload a scene from a Node. . ◆ updateContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updat",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:4756,Performance,load,load,4756,"filename extension) . ◆ exportInXML(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::exportInXML ; (; Node * ; root, . const char * ; fileName . ). Print all object in the graph in XML format. . ◆ exportOBJ(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::exportOBJ ; (; Node * ; root, . const char * ; filename, . bool ; exportMTL . ). Export a scene to an OBJ 3D Scene. . ◆ getNodeFrom(). SOFA_SIMULATION_CORE_API Node * sofa::simulation::node::getNodeFrom ; (; sofa::core::objectmodel::BaseContext * ; context). ◆ init(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::init ; (; Node * ; node). Init a node without changing the context of the simulation. . ◆ initRoot(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initRoot ; (; Node * ; root). Initialize the objects. . ◆ initTextures(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initTextures ; (; Node * ; root). Initialize the textures. . ◆ load(). NodeSPtr SOFA_SIMULATION_CORE_API sofa::simulation::node::load ; (; const std::string & ; filename, . bool ; reload, . const std::vector< std::string > & ; sceneArgs . ). Load a scene from a file. . ◆ print(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::print ; (; Node * ; root). Print all object in the graph. . ◆ reset(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::reset ; (; Node * ; root). Reset to initial state. . ◆ toBaseContext(). SOFA_SIMULATION_CORE_API sofa::core::objectmodel::BaseContext * sofa::simulation::node::toBaseContext ; (; sofa::simulation::Node * ; node). ◆ unload(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::unload ; (; NodeSPtr ; root). Unload a scene from a Node. . ◆ updateContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisual ; (; Node * ; root). Update the Visual Models: t",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:4869,Performance,Load,Load,4869,"char * ; fileName . ). Print all object in the graph in XML format. . ◆ exportOBJ(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::exportOBJ ; (; Node * ; root, . const char * ; filename, . bool ; exportMTL . ). Export a scene to an OBJ 3D Scene. . ◆ getNodeFrom(). SOFA_SIMULATION_CORE_API Node * sofa::simulation::node::getNodeFrom ; (; sofa::core::objectmodel::BaseContext * ; context). ◆ init(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::init ; (; Node * ; node). Init a node without changing the context of the simulation. . ◆ initRoot(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initRoot ; (; Node * ; root). Initialize the objects. . ◆ initTextures(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initTextures ; (; Node * ; root). Initialize the textures. . ◆ load(). NodeSPtr SOFA_SIMULATION_CORE_API sofa::simulation::node::load ; (; const std::string & ; filename, . bool ; reload, . const std::vector< std::string > & ; sceneArgs . ). Load a scene from a file. . ◆ print(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::print ; (; Node * ; root). Print all object in the graph. . ◆ reset(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::reset ; (; Node * ; root). Reset to initial state. . ◆ toBaseContext(). SOFA_SIMULATION_CORE_API sofa::core::objectmodel::BaseContext * sofa::simulation::node::toBaseContext ; (; sofa::simulation::Node * ; node). ◆ unload(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::unload ; (; NodeSPtr ; root). Unload a scene from a Node. . ◆ updateContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisual ; (; Node * ; root). Update the Visual Models: triggers the Mappings. . ◆ updateVisualContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateVisualContext ; (; Node ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html:170,Modifiability,Variab,Variables,170,"﻿. SOFA API: sofa::simulation::xml Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Enumerations |; Functions |; Variables . sofa::simulation::xml Namespace Reference . Classes; class  AttributeElement;  ; class  BaseElement;  ; class  BaseMultiMappingElement;  ; class  DataElement;  ; class  Element;  ; class  NodeElement;  ; class  ObjectElement;  . Enumerations; enum  IncludeNodeType { INCLUDE_NODE_CHILD; , INCLUDE_NODE_GROUP; , INCLUDE_NODE_MERGE; };  Flags indicating when an element is from an included file that should be treated specifically. More...;  . Functions; void recReplaceAttribute (BaseElement *node, const char *attr, const char *value, const char *nodename=nullptr);  ; BaseElement * includeNode (tinyxml2::XMLNode *root, const char *basefilename);  ; BaseElement * attributeNode (tinyxml2::XMLNode *root, const char *basefilename);  ; void recursiveMergeNode (BaseElement *destNode, BaseElement *srcNode);  ; BaseElement * createNode (tinyxml2::XMLNode *root, const char *basefilename, bool isRoot=false);  ; BaseElement * processXMLLoading (const char *filename, const tinyxml2::XMLDocument &doc, bool fromMem);  ; BaseElement * loadFromMemory (const char *filename, const char *data);  ; BaseElement * loadFromFile (const char *filename);  ; SOFA_SIMULATION_COMMON_API bool save (const char *filename, BaseElement *root);  . Variables; Creator< BaseElement::NodeFactory, AttributeElement > AttributeNodeClass (""Attribute"");  ; Creator< BaseElement::NodeFactory, DataElement > DataNodeClass (""Data"");  ; helper::Creator< BaseElement::NodeFactory, NodeElement > NodeNodeClass (""Node"");  ; Creator< BaseElement::NodeFactory, ObjectElement > ObjectNodeClass (""Object"");  ; int numDefault =0;  . Enumeration Type Documentation. ◆ IncludeNodeType. enum sofa::simulation::xml::IncludeNodeType. Flags indicating when an element is from an included file that should be treated specifically. . EnumeratorINCLUDE_NODE_CHILD indi",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html:1409,Modifiability,Variab,Variables,1409,"reated specifically. More...;  . Functions; void recReplaceAttribute (BaseElement *node, const char *attr, const char *value, const char *nodename=nullptr);  ; BaseElement * includeNode (tinyxml2::XMLNode *root, const char *basefilename);  ; BaseElement * attributeNode (tinyxml2::XMLNode *root, const char *basefilename);  ; void recursiveMergeNode (BaseElement *destNode, BaseElement *srcNode);  ; BaseElement * createNode (tinyxml2::XMLNode *root, const char *basefilename, bool isRoot=false);  ; BaseElement * processXMLLoading (const char *filename, const tinyxml2::XMLDocument &doc, bool fromMem);  ; BaseElement * loadFromMemory (const char *filename, const char *data);  ; BaseElement * loadFromFile (const char *filename);  ; SOFA_SIMULATION_COMMON_API bool save (const char *filename, BaseElement *root);  . Variables; Creator< BaseElement::NodeFactory, AttributeElement > AttributeNodeClass (""Attribute"");  ; Creator< BaseElement::NodeFactory, DataElement > DataNodeClass (""Data"");  ; helper::Creator< BaseElement::NodeFactory, NodeElement > NodeNodeClass (""Node"");  ; Creator< BaseElement::NodeFactory, ObjectElement > ObjectNodeClass (""Object"");  ; int numDefault =0;  . Enumeration Type Documentation. ◆ IncludeNodeType. enum sofa::simulation::xml::IncludeNodeType. Flags indicating when an element is from an included file that should be treated specifically. . EnumeratorINCLUDE_NODE_CHILD indicating a standard node that should be used as child . INCLUDE_NODE_GROUP indicating a node that should be removed, and its content added within the parent node . INCLUDE_NODE_MERGE indicating a node that should be merged with its parent, and any child node with the same name as an existing child should be recursively merged . Function Documentation. ◆ attributeNode(). BaseElement* sofa::simulation::xml::attributeNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename . ). ◆ createNode(). BaseElement* sofa::simulation::xml::createNode ; (; tinyxml2::XMLNode * ; root, . con",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html:3707,Modifiability,Variab,Variable,3707,"de * ; root, . const char * ; basefilename . ). ◆ createNode(). BaseElement* sofa::simulation::xml::createNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename, . bool ; isRoot = false . ). ◆ includeNode(). BaseElement * sofa::simulation::xml::includeNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename . ). ◆ loadFromFile(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::loadFromFile ; (; const char * ; filename). ◆ loadFromMemory(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::loadFromMemory ; (; const char * ; filename, . const char * ; data . ). ◆ processXMLLoading(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::processXMLLoading ; (; const char * ; filename, . const tinyxml2::XMLDocument & ; doc, . bool ; fromMem . ). ◆ recReplaceAttribute(). void sofa::simulation::xml::recReplaceAttribute ; (; BaseElement * ; node, . const char * ; attr, . const char * ; value, . const char * ; nodename = nullptr . ). ◆ recursiveMergeNode(). void sofa::simulation::xml::recursiveMergeNode ; (; BaseElement * ; destNode, . BaseElement * ; srcNode . ). ◆ save(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::xml::save ; (; const char * ; filename, . BaseElement * ; root . ). Variable Documentation. ◆ AttributeNodeClass. Creator<BaseElement::NodeFactory, AttributeElement> sofa::simulation::xml::AttributeNodeClass(""Attribute"") ; (; ""Attribute"" ; ). ◆ DataNodeClass. Creator<BaseElement::NodeFactory, DataElement> sofa::simulation::xml::DataNodeClass(""Data"") ; (; ""Data"" ; ). ◆ NodeNodeClass. helper::Creator<BaseElement::NodeFactory, NodeElement> sofa::simulation::xml::NodeNodeClass(""Node"") ; (; ""Node"" ; ). ◆ numDefault. int SOFA_SIMULATION_COMMON_API sofa::simulation::xml::numDefault =0. ◆ ObjectNodeClass. Creator<BaseElement::NodeFactory, ObjectElement> sofa::simulation::xml::ObjectNodeClass(""Object"") ; (; ""Object"" ; ). sofasimulationxml; Generated on Mon Nov 11 2024 03:34:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html:1212,Performance,load,loadFromMemory,1212,"fa::simulation::xml Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Enumerations |; Functions |; Variables . sofa::simulation::xml Namespace Reference . Classes; class  AttributeElement;  ; class  BaseElement;  ; class  BaseMultiMappingElement;  ; class  DataElement;  ; class  Element;  ; class  NodeElement;  ; class  ObjectElement;  . Enumerations; enum  IncludeNodeType { INCLUDE_NODE_CHILD; , INCLUDE_NODE_GROUP; , INCLUDE_NODE_MERGE; };  Flags indicating when an element is from an included file that should be treated specifically. More...;  . Functions; void recReplaceAttribute (BaseElement *node, const char *attr, const char *value, const char *nodename=nullptr);  ; BaseElement * includeNode (tinyxml2::XMLNode *root, const char *basefilename);  ; BaseElement * attributeNode (tinyxml2::XMLNode *root, const char *basefilename);  ; void recursiveMergeNode (BaseElement *destNode, BaseElement *srcNode);  ; BaseElement * createNode (tinyxml2::XMLNode *root, const char *basefilename, bool isRoot=false);  ; BaseElement * processXMLLoading (const char *filename, const tinyxml2::XMLDocument &doc, bool fromMem);  ; BaseElement * loadFromMemory (const char *filename, const char *data);  ; BaseElement * loadFromFile (const char *filename);  ; SOFA_SIMULATION_COMMON_API bool save (const char *filename, BaseElement *root);  . Variables; Creator< BaseElement::NodeFactory, AttributeElement > AttributeNodeClass (""Attribute"");  ; Creator< BaseElement::NodeFactory, DataElement > DataNodeClass (""Data"");  ; helper::Creator< BaseElement::NodeFactory, NodeElement > NodeNodeClass (""Node"");  ; Creator< BaseElement::NodeFactory, ObjectElement > ObjectNodeClass (""Object"");  ; int numDefault =0;  . Enumeration Type Documentation. ◆ IncludeNodeType. enum sofa::simulation::xml::IncludeNodeType. Flags indicating when an element is from an included file that should be treated specifically. . EnumeratorINCLUDE_NODE_CHILD indicating a standa",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html:1286,Performance,load,loadFromFile,1286,"fa::simulation::xml Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Enumerations |; Functions |; Variables . sofa::simulation::xml Namespace Reference . Classes; class  AttributeElement;  ; class  BaseElement;  ; class  BaseMultiMappingElement;  ; class  DataElement;  ; class  Element;  ; class  NodeElement;  ; class  ObjectElement;  . Enumerations; enum  IncludeNodeType { INCLUDE_NODE_CHILD; , INCLUDE_NODE_GROUP; , INCLUDE_NODE_MERGE; };  Flags indicating when an element is from an included file that should be treated specifically. More...;  . Functions; void recReplaceAttribute (BaseElement *node, const char *attr, const char *value, const char *nodename=nullptr);  ; BaseElement * includeNode (tinyxml2::XMLNode *root, const char *basefilename);  ; BaseElement * attributeNode (tinyxml2::XMLNode *root, const char *basefilename);  ; void recursiveMergeNode (BaseElement *destNode, BaseElement *srcNode);  ; BaseElement * createNode (tinyxml2::XMLNode *root, const char *basefilename, bool isRoot=false);  ; BaseElement * processXMLLoading (const char *filename, const tinyxml2::XMLDocument &doc, bool fromMem);  ; BaseElement * loadFromMemory (const char *filename, const char *data);  ; BaseElement * loadFromFile (const char *filename);  ; SOFA_SIMULATION_COMMON_API bool save (const char *filename, BaseElement *root);  . Variables; Creator< BaseElement::NodeFactory, AttributeElement > AttributeNodeClass (""Attribute"");  ; Creator< BaseElement::NodeFactory, DataElement > DataNodeClass (""Data"");  ; helper::Creator< BaseElement::NodeFactory, NodeElement > NodeNodeClass (""Node"");  ; Creator< BaseElement::NodeFactory, ObjectElement > ObjectNodeClass (""Object"");  ; int numDefault =0;  . Enumeration Type Documentation. ◆ IncludeNodeType. enum sofa::simulation::xml::IncludeNodeType. Flags indicating when an element is from an included file that should be treated specifically. . EnumeratorINCLUDE_NODE_CHILD indicating a standa",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html:2782,Performance,load,loadFromFile,2782,"ype Documentation. ◆ IncludeNodeType. enum sofa::simulation::xml::IncludeNodeType. Flags indicating when an element is from an included file that should be treated specifically. . EnumeratorINCLUDE_NODE_CHILD indicating a standard node that should be used as child . INCLUDE_NODE_GROUP indicating a node that should be removed, and its content added within the parent node . INCLUDE_NODE_MERGE indicating a node that should be merged with its parent, and any child node with the same name as an existing child should be recursively merged . Function Documentation. ◆ attributeNode(). BaseElement* sofa::simulation::xml::attributeNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename . ). ◆ createNode(). BaseElement* sofa::simulation::xml::createNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename, . bool ; isRoot = false . ). ◆ includeNode(). BaseElement * sofa::simulation::xml::includeNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename . ). ◆ loadFromFile(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::loadFromFile ; (; const char * ; filename). ◆ loadFromMemory(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::loadFromMemory ; (; const char * ; filename, . const char * ; data . ). ◆ processXMLLoading(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::processXMLLoading ; (; const char * ; filename, . const tinyxml2::XMLDocument & ; doc, . bool ; fromMem . ). ◆ recReplaceAttribute(). void sofa::simulation::xml::recReplaceAttribute ; (; BaseElement * ; node, . const char * ; attr, . const char * ; value, . const char * ; nodename = nullptr . ). ◆ recursiveMergeNode(). void sofa::simulation::xml::recursiveMergeNode ; (; BaseElement * ; destNode, . BaseElement * ; srcNode . ). ◆ save(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::xml::save ; (; const char * ; filename, . BaseElement * ; root . ). Variable Documentation. ◆ AttributeNodeClass. Creator<BaseElement::NodeFactory, A",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html:2862,Performance,load,loadFromFile,2862,"l::IncludeNodeType. Flags indicating when an element is from an included file that should be treated specifically. . EnumeratorINCLUDE_NODE_CHILD indicating a standard node that should be used as child . INCLUDE_NODE_GROUP indicating a node that should be removed, and its content added within the parent node . INCLUDE_NODE_MERGE indicating a node that should be merged with its parent, and any child node with the same name as an existing child should be recursively merged . Function Documentation. ◆ attributeNode(). BaseElement* sofa::simulation::xml::attributeNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename . ). ◆ createNode(). BaseElement* sofa::simulation::xml::createNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename, . bool ; isRoot = false . ). ◆ includeNode(). BaseElement * sofa::simulation::xml::includeNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename . ). ◆ loadFromFile(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::loadFromFile ; (; const char * ; filename). ◆ loadFromMemory(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::loadFromMemory ; (; const char * ; filename, . const char * ; data . ). ◆ processXMLLoading(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::processXMLLoading ; (; const char * ; filename, . const tinyxml2::XMLDocument & ; doc, . bool ; fromMem . ). ◆ recReplaceAttribute(). void sofa::simulation::xml::recReplaceAttribute ; (; BaseElement * ; node, . const char * ; attr, . const char * ; value, . const char * ; nodename = nullptr . ). ◆ recursiveMergeNode(). void sofa::simulation::xml::recursiveMergeNode ; (; BaseElement * ; destNode, . BaseElement * ; srcNode . ). ◆ save(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::xml::save ; (; const char * ; filename, . BaseElement * ; root . ). Variable Documentation. ◆ AttributeNodeClass. Creator<BaseElement::NodeFactory, AttributeElement> sofa::simulation::xml::AttributeNodeClass(""Att",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html:2908,Performance,load,loadFromMemory,2908,"included file that should be treated specifically. . EnumeratorINCLUDE_NODE_CHILD indicating a standard node that should be used as child . INCLUDE_NODE_GROUP indicating a node that should be removed, and its content added within the parent node . INCLUDE_NODE_MERGE indicating a node that should be merged with its parent, and any child node with the same name as an existing child should be recursively merged . Function Documentation. ◆ attributeNode(). BaseElement* sofa::simulation::xml::attributeNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename . ). ◆ createNode(). BaseElement* sofa::simulation::xml::createNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename, . bool ; isRoot = false . ). ◆ includeNode(). BaseElement * sofa::simulation::xml::includeNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename . ). ◆ loadFromFile(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::loadFromFile ; (; const char * ; filename). ◆ loadFromMemory(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::loadFromMemory ; (; const char * ; filename, . const char * ; data . ). ◆ processXMLLoading(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::processXMLLoading ; (; const char * ; filename, . const tinyxml2::XMLDocument & ; doc, . bool ; fromMem . ). ◆ recReplaceAttribute(). void sofa::simulation::xml::recReplaceAttribute ; (; BaseElement * ; node, . const char * ; attr, . const char * ; value, . const char * ; nodename = nullptr . ). ◆ recursiveMergeNode(). void sofa::simulation::xml::recursiveMergeNode ; (; BaseElement * ; destNode, . BaseElement * ; srcNode . ). ◆ save(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::xml::save ; (; const char * ; filename, . BaseElement * ; root . ). Variable Documentation. ◆ AttributeNodeClass. Creator<BaseElement::NodeFactory, AttributeElement> sofa::simulation::xml::AttributeNodeClass(""Attribute"") ; (; ""Attribute"" ; ). ◆ DataNodeClass. Creator<BaseElem",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html:2990,Performance,load,loadFromMemory,2990,"CLUDE_NODE_CHILD indicating a standard node that should be used as child . INCLUDE_NODE_GROUP indicating a node that should be removed, and its content added within the parent node . INCLUDE_NODE_MERGE indicating a node that should be merged with its parent, and any child node with the same name as an existing child should be recursively merged . Function Documentation. ◆ attributeNode(). BaseElement* sofa::simulation::xml::attributeNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename . ). ◆ createNode(). BaseElement* sofa::simulation::xml::createNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename, . bool ; isRoot = false . ). ◆ includeNode(). BaseElement * sofa::simulation::xml::includeNode ; (; tinyxml2::XMLNode * ; root, . const char * ; basefilename . ). ◆ loadFromFile(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::loadFromFile ; (; const char * ; filename). ◆ loadFromMemory(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::loadFromMemory ; (; const char * ; filename, . const char * ; data . ). ◆ processXMLLoading(). SOFA_SIMULATION_COMMON_API BaseElement * sofa::simulation::xml::processXMLLoading ; (; const char * ; filename, . const tinyxml2::XMLDocument & ; doc, . bool ; fromMem . ). ◆ recReplaceAttribute(). void sofa::simulation::xml::recReplaceAttribute ; (; BaseElement * ; node, . const char * ; attr, . const char * ; value, . const char * ; nodename = nullptr . ). ◆ recursiveMergeNode(). void sofa::simulation::xml::recursiveMergeNode ; (; BaseElement * ; destNode, . BaseElement * ; srcNode . ). ◆ save(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::xml::save ; (; const char * ; filename, . BaseElement * ; root . ). Variable Documentation. ◆ AttributeNodeClass. Creator<BaseElement::NodeFactory, AttributeElement> sofa::simulation::xml::AttributeNodeClass(""Attribute"") ; (; ""Attribute"" ; ). ◆ DataNodeClass. Creator<BaseElement::NodeFactory, DataElement> sofa::simulation::xml::DataNodeClas",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html:460,Deployability,CONFIGURAT,CONFIGURATIONSETTING,460,"﻿. SOFA API: sofa::simulation::Colors Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Enumerations |; Functions . sofa::simulation::Colors Namespace Reference . Enumerations; enum  { ;   NODE; , OBJECT; , CONTEXT; , BMODEL; , ;   CMODEL; , MMODEL; , PROJECTIVECONSTRAINTSET; , CONSTRAINTSET; , ;   IFFIELD; , FFIELD; , SOLVER; , COLLISION; , ;   MMAPPING; , MAPPING; , MASS; , TOPOLOGY; , ;   VMODEL; , LOADER; , CONFIGURATIONSETTING; , ALLCOLORS. };  . Functions; const char * getColor (const char *classname);  . Enumeration Type Documentation. ◆ anonymous enum. anonymous enum. EnumeratorNODE ; OBJECT ; CONTEXT ; BMODEL ; CMODEL ; MMODEL ; PROJECTIVECONSTRAINTSET ; CONSTRAINTSET ; IFFIELD ; FFIELD ; SOLVER ; COLLISION ; MMAPPING ; MAPPING ; MASS ; TOPOLOGY ; VMODEL ; LOADER ; CONFIGURATIONSETTING ; ALLCOLORS . Function Documentation. ◆ getColor(). const char* sofa::simulation::Colors::getColor ; (; const char * ; classname). inline . sofasimulationColors; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html:830,Deployability,CONFIGURAT,CONFIGURATIONSETTING,830,"﻿. SOFA API: sofa::simulation::Colors Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Enumerations |; Functions . sofa::simulation::Colors Namespace Reference . Enumerations; enum  { ;   NODE; , OBJECT; , CONTEXT; , BMODEL; , ;   CMODEL; , MMODEL; , PROJECTIVECONSTRAINTSET; , CONSTRAINTSET; , ;   IFFIELD; , FFIELD; , SOLVER; , COLLISION; , ;   MMAPPING; , MAPPING; , MASS; , TOPOLOGY; , ;   VMODEL; , LOADER; , CONFIGURATIONSETTING; , ALLCOLORS. };  . Functions; const char * getColor (const char *classname);  . Enumeration Type Documentation. ◆ anonymous enum. anonymous enum. EnumeratorNODE ; OBJECT ; CONTEXT ; BMODEL ; CMODEL ; MMODEL ; PROJECTIVECONSTRAINTSET ; CONSTRAINTSET ; IFFIELD ; FFIELD ; SOLVER ; COLLISION ; MMAPPING ; MAPPING ; MASS ; TOPOLOGY ; VMODEL ; LOADER ; CONFIGURATIONSETTING ; ALLCOLORS . Function Documentation. ◆ getColor(). const char* sofa::simulation::Colors::getColor ; (; const char * ; classname). inline . sofasimulationColors; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html:460,Modifiability,CONFIG,CONFIGURATIONSETTING,460,"﻿. SOFA API: sofa::simulation::Colors Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Enumerations |; Functions . sofa::simulation::Colors Namespace Reference . Enumerations; enum  { ;   NODE; , OBJECT; , CONTEXT; , BMODEL; , ;   CMODEL; , MMODEL; , PROJECTIVECONSTRAINTSET; , CONSTRAINTSET; , ;   IFFIELD; , FFIELD; , SOLVER; , COLLISION; , ;   MMAPPING; , MAPPING; , MASS; , TOPOLOGY; , ;   VMODEL; , LOADER; , CONFIGURATIONSETTING; , ALLCOLORS. };  . Functions; const char * getColor (const char *classname);  . Enumeration Type Documentation. ◆ anonymous enum. anonymous enum. EnumeratorNODE ; OBJECT ; CONTEXT ; BMODEL ; CMODEL ; MMODEL ; PROJECTIVECONSTRAINTSET ; CONSTRAINTSET ; IFFIELD ; FFIELD ; SOLVER ; COLLISION ; MMAPPING ; MAPPING ; MASS ; TOPOLOGY ; VMODEL ; LOADER ; CONFIGURATIONSETTING ; ALLCOLORS . Function Documentation. ◆ getColor(). const char* sofa::simulation::Colors::getColor ; (; const char * ; classname). inline . sofasimulationColors; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html:830,Modifiability,CONFIG,CONFIGURATIONSETTING,830,"﻿. SOFA API: sofa::simulation::Colors Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Enumerations |; Functions . sofa::simulation::Colors Namespace Reference . Enumerations; enum  { ;   NODE; , OBJECT; , CONTEXT; , BMODEL; , ;   CMODEL; , MMODEL; , PROJECTIVECONSTRAINTSET; , CONSTRAINTSET; , ;   IFFIELD; , FFIELD; , SOLVER; , COLLISION; , ;   MMAPPING; , MAPPING; , MASS; , TOPOLOGY; , ;   VMODEL; , LOADER; , CONFIGURATIONSETTING; , ALLCOLORS. };  . Functions; const char * getColor (const char *classname);  . Enumeration Type Documentation. ◆ anonymous enum. anonymous enum. EnumeratorNODE ; OBJECT ; CONTEXT ; BMODEL ; CMODEL ; MMODEL ; PROJECTIVECONSTRAINTSET ; CONSTRAINTSET ; IFFIELD ; FFIELD ; SOLVER ; COLLISION ; MMAPPING ; MAPPING ; MASS ; TOPOLOGY ; VMODEL ; LOADER ; CONFIGURATIONSETTING ; ALLCOLORS . Function Documentation. ◆ getColor(). const char* sofa::simulation::Colors::getColor ; (; const char * ; classname). inline . sofasimulationColors; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html:450,Performance,LOAD,LOADER,450,"﻿. SOFA API: sofa::simulation::Colors Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Enumerations |; Functions . sofa::simulation::Colors Namespace Reference . Enumerations; enum  { ;   NODE; , OBJECT; , CONTEXT; , BMODEL; , ;   CMODEL; , MMODEL; , PROJECTIVECONSTRAINTSET; , CONSTRAINTSET; , ;   IFFIELD; , FFIELD; , SOLVER; , COLLISION; , ;   MMAPPING; , MAPPING; , MASS; , TOPOLOGY; , ;   VMODEL; , LOADER; , CONFIGURATIONSETTING; , ALLCOLORS. };  . Functions; const char * getColor (const char *classname);  . Enumeration Type Documentation. ◆ anonymous enum. anonymous enum. EnumeratorNODE ; OBJECT ; CONTEXT ; BMODEL ; CMODEL ; MMODEL ; PROJECTIVECONSTRAINTSET ; CONSTRAINTSET ; IFFIELD ; FFIELD ; SOLVER ; COLLISION ; MMAPPING ; MAPPING ; MASS ; TOPOLOGY ; VMODEL ; LOADER ; CONFIGURATIONSETTING ; ALLCOLORS . Function Documentation. ◆ getColor(). const char* sofa::simulation::Colors::getColor ; (; const char * ; classname). inline . sofasimulationColors; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html:821,Performance,LOAD,LOADER,821,"﻿. SOFA API: sofa::simulation::Colors Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Enumerations |; Functions . sofa::simulation::Colors Namespace Reference . Enumerations; enum  { ;   NODE; , OBJECT; , CONTEXT; , BMODEL; , ;   CMODEL; , MMODEL; , PROJECTIVECONSTRAINTSET; , CONSTRAINTSET; , ;   IFFIELD; , FFIELD; , SOLVER; , COLLISION; , ;   MMAPPING; , MAPPING; , MASS; , TOPOLOGY; , ;   VMODEL; , LOADER; , CONFIGURATIONSETTING; , ALLCOLORS. };  . Functions; const char * getColor (const char *classname);  . Enumeration Type Documentation. ◆ anonymous enum. anonymous enum. EnumeratorNODE ; OBJECT ; CONTEXT ; BMODEL ; CMODEL ; MMODEL ; PROJECTIVECONSTRAINTSET ; CONSTRAINTSET ; IFFIELD ; FFIELD ; SOLVER ; COLLISION ; MMAPPING ; MAPPING ; MASS ; TOPOLOGY ; VMODEL ; LOADER ; CONFIGURATIONSETTING ; ALLCOLORS . Function Documentation. ◆ getColor(). const char* sofa::simulation::Colors::getColor ; (; const char * ; classname). inline . sofasimulationColors; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:2913,Availability,error,error,2913,"&v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &rot);  Create a coord of the specified type from a Vec3 and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXPECT_VEC_DOUBLE_EQ (sofa::type::Vec< N, real > const &expected, sofa::type::Vec< N, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_DOUBLE_EQ (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to in",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3413,Availability,failure,failure,3413,"eal > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_DOUBLE_EQ (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). tem",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3593,Availability,failure,failure,3593,"l > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToDa",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3748,Availability,Error,Error,3748,"::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the D",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:6509,Availability,error,error,6509,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3833,Deployability,install,install,3833,"::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the D",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3893,Deployability,install,install,3893,"erence delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:4038,Deployability,install,installation,4038,"ses); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . v",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:986,Integrability,Message,MessageAsTestFailure,986,"﻿. SOFA API: sofa::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::testing Namespace Reference . Classes; struct  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:1218,Integrability,depend,dependencies,1218,"t  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal >",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:1477,Integrability,depend,dependencies,1477,"cTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &rot);  Create a coord of the specified type from a Vec3 and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXPECT_VEC_DOUBLE_EQ (sofa::type::Vec< N, real > const &expected, sofa::type::Vec< N, real > const &actual);  ; template<sofa::Size L, sofa::Size ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3288,Integrability,message,message,3288,"and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXPECT_VEC_DOUBLE_EQ (sofa::type::Vec< N, real > const &expected, sofa::type::Vec< N, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_DOUBLE_EQ (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testin",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3428,Integrability,message,message,3428,"eal > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_DOUBLE_EQ (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). tem",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3550,Integrability,message,message,3550,"MAT_DOUBLE_EQ (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3608,Integrability,message,message,3608,"l > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToDa",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3905,Integrability,message,message,3905,"erence delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:4052,Integrability,Message,MessageDispatcher,4052,"ses); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . v",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:4358,Integrability,depend,dependencies,4358,"MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_N",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:5816,Integrability,depend,dependencies,5816,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:146,Modifiability,Variab,Variables,146,"﻿. SOFA API: sofa::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::testing Namespace Reference . Classes; struct  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:422,Modifiability,portab,portable,422,"﻿. SOFA API: sofa::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::testing Namespace Reference . Classes; struct  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:2809,Modifiability,Variab,Variables,2809,", class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &rot);  Create a coord of the specified type from a Vec3 and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXPECT_VEC_DOUBLE_EQ (sofa::type::Vec< N, real > const &expected, sofa::type::Vec< N, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_DOUBLE_EQ (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:6354,Modifiability,Variab,Variable,6354,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3759,Performance,load,load,3759,"::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the D",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:19,Testability,test,testing,19,"﻿. SOFA API: sofa::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::testing Namespace Reference . Classes; struct  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:164,Testability,test,testing,164,"﻿. SOFA API: sofa::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::testing Namespace Reference . Classes; struct  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:300,Testability,test,test,300,"﻿. SOFA API: sofa::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::testing Namespace Reference . Classes; struct  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:1186,Testability,Test,Testing,1186,"t  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal >",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:1320,Testability,Test,Testing,1320,"anupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &rot);  Create a coord of the specified type from a Vec3 and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXP",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:1445,Testability,Test,Testing,1445,"cTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &rot);  Create a coord of the specified type from a Vec3 and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXPECT_VEC_DOUBLE_EQ (sofa::type::Vec< N, real > const &expected, sofa::type::Vec< N, real > const &actual);  ; template<sofa::Size L, sofa::Size ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:1607,Testability,Test,Testing,1607,"otWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &rot);  Create a coord of the specified type from a Vec3 and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXPECT_VEC_DOUBLE_EQ (sofa::type::Vec< N, real > const &expected, sofa::type::Vec< N, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_DOUBLE_EQ (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual);  ; te",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3276,Testability,test,test,3276,"and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXPECT_VEC_DOUBLE_EQ (sofa::type::Vec< N, real > const &expected, sofa::type::Vec< N, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_DOUBLE_EQ (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testin",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:4261,Testability,test,testing,4261," is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:4326,Testability,Test,Testing,4326,"MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_N",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:4475,Testability,test,testing,4475,"express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:4662,Testability,test,testing,4662," b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, rea",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:4860,Testability,test,testing,4860,"that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initia",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:5119,Testability,test,testing,5119,"y if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:5342,Testability,test,testing,5342,"DefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation.",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:5571,Testability,test,testing,5571,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:5742,Testability,test,testing,5742,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:5784,Testability,Test,Testing,5784,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:5863,Testability,test,testing,5863,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:5940,Testability,test,testing,5940,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:6005,Testability,Test,Testing,6005,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:6091,Testability,test,testing,6091,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:6157,Testability,Test,Testing,6157,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:6249,Testability,test,testing,6249,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:6420,Testability,test,testing,6420,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:397,Usability,simpl,simple,397,"﻿. SOFA API: sofa::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::testing Namespace Reference . Classes; struct  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1testing.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:1983,Availability,error,error,1983,"Init;  Same as Quat except the values are not initialized by default. More...;  ; class  Ray;  ; class  RGBAColor;  encode a 4 RGBA component color More...;  ; class  SpatialVector;  ; class  SVector;  Same as type::vector, + delimiters on serialization. More...;  ; struct  HasRebindTypedef;  ; struct  HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > >;  ; struct  Rebind;  ; struct  Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do have a nested rebind_to member. In this implementation, Rebind has a public member typedef to. It corresponds to the typedef rebind_to. More...;  ; struct  Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. More...;  ; struct  Rebind< _T< A >, _OtherType, std::enable_if_t<!HasRebindTypedef< _T< A >, _OtherType >::value > >;  Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has a public member typedef to. More...;  ; class  Transform;  ; struct  NoInit;  ; class  vector_device;  ; class  CPUMemoryManager;  ; class  vector;  . Typedefs; typedef Vec< 1, float > Vec1f;  ; typedef Vec< 1, double > Vec1d;  ; typedef Vec< 1, int > Vec1i;  ; typedef Vec< 1, unsigned > Vec1u;  ; typedef Vec< 1, SReal > Vec1;  ; typedef Vec< 2, float > Vec2f;  ; typedef Vec< 2, double > Vec2d;  ; typedef Vec< 2, int > Vec2i;  ; typedef Vec< 2, unsigned > Vec2u;  ; typedef Vec< 2, SReal > Vec2;  ; typedef Vec< 3, float > Vec3f;  ; typedef Vec< 3, double > Vec3d;  ; typedef Vec< 3, int > Vec3i;  ; typedef Vec< 3, unsigned > Vec3u;  ; typedef Vec< 3, SReal > Vec3;  ; typedef Vec< 4, float > Vec4f;",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:27194,Availability,error,error,27194,"typedef Mat<6, 6, float> sofa::type::Mat6x6f. ◆ Matrix2. typedef Mat<2,2,SReal> sofa::type::Matrix2. ◆ Matrix3. typedef Mat<3,3,SReal> sofa::type::Matrix3. ◆ Matrix4. typedef Mat<4,4,SReal> sofa::type::Matrix4. ◆ Quatd. using sofa::type::Quatd = typedef type::Quat<double>. ◆ Quatf. using sofa::type::Quatf = typedef type::Quat<float>. ◆ rebind_to. template<class T , class B > . using sofa::type::rebind_to = typedef typename Rebind<T, B>::to. Convenient alias to ease usage of Rebind.; Example: 1) sofa::type::rebind_to< sofa::type::vector<int>, float> is of type sofa::type::vector<float>. In this example, sofa::type::vector has a typedef rebind_to that will be used to deduce the type. 2) sofa::type::rebind_to< sofa::type::Quat<float>, double> is of type sofa::type::Quat<double>. In this example, sofa::type::Quat does not have a typdef rebind_to. 3) It makes no sense to use sofa::type::rebind on types having more than one template parameter, such as sofa::type::fixed_array. A compilation error would occur. . ◆ stable_vector. template<class T , class A = std::allocator<T>> . using sofa::type::stable_vector = typedef boost::container::stable_vector<T,A>. ◆ Vec1. typedef Vec<1,SReal> sofa::type::Vec1. ◆ Vec1d. typedef Vec<1,double> sofa::type::Vec1d. ◆ Vec1f. typedef Vec<1,float> sofa::type::Vec1f. ◆ Vec1i. typedef Vec<1,int> sofa::type::Vec1i. ◆ Vec1u. typedef Vec<1,unsigned> sofa::type::Vec1u. ◆ Vec2. typedef Vec<2,SReal> sofa::type::Vec2. ◆ Vec2d. typedef Vec<2,double> sofa::type::Vec2d. ◆ Vec2f. typedef Vec<2,float> sofa::type::Vec2f. ◆ Vec2i. typedef Vec<2,int> sofa::type::Vec2i. ◆ Vec2u. typedef Vec<2,unsigned> sofa::type::Vec2u. ◆ Vec3. typedef Vec<3,SReal> sofa::type::Vec3. ◆ Vec3d. typedef Vec<3,double> sofa::type::Vec3d. ◆ Vec3f. typedef Vec<3,float> sofa::type::Vec3f. ◆ Vec3i. typedef Vec<3,int> sofa::type::Vec3i. ◆ Vec3u. typedef Vec<3,unsigned> sofa::type::Vec3u. ◆ Vec4. typedef Vec<4,SReal> sofa::type::Vec4. ◆ Vec4d. typedef Vec<4,double> sofa::type::Vec4d. ◆ ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:33505,Availability,error,error,33505,"terminant of a 3x3 matrix. . ◆ diagonal(). template<sofa::Size N, class real > . constexpr Vec<N,real> sofa::type::diagonal ; (; const Mat< N, N, real > & ; m). constexpr . diagonal of a square matrix . ◆ dot() [1/2]. template<class V1 , class V2 > . SReal sofa::type::dot ; (; const V1 & ; vector1, . const V2 & ; vector2 . ). Dot product of two vectors. . ◆ dot() [2/2]. template<sofa::Size N, typename real > . constexpr real sofa::type::dot ; (; const Vec< N, real > & ; a, . const Vec< N, real > & ; b . ). constexprnoexcept . Dot product (alias for operator*) . ◆ dyad(). template<class Tu , class Tv > . constexpr Mat<Tu::size(), Tv::size(), typename Tu::value_type> sofa::type::dyad ; (; const Tu & ; u, . const Tv & ; v . ). constexprnoexcept . Create a matrix as . . ◆ getInteger(). SOFA_TYPE_API int sofa::type::getInteger ; (; const std::string & ; s, . std::stringstream & ; msg, . unsigned int & ; numErrors . ). Convert the string 's' into an unsigned int. The error are reported in msg & numErrors is incremented. . ◆ getUnsignedInteger(). SOFA_TYPE_API unsigned int sofa::type::getUnsignedInteger ; (; const std::string & ; s, . std::stringstream & ; msg, . unsigned int & ; numErrors . ). Convert the string 's' into an unsigned int. The error are reported in msg & numErrors is incremented. . ◆ infNorm(). template<class real > . real sofa::type::infNorm ; (; const Mat< 3, 3, real > & ; A). ◆ init(). SOFA_TYPE_API void sofa::type::init ; (; ). Initialize the SofaHelper library. . ◆ invertMatrix() [1/7]. template<class real > . constexpr bool sofa::type::invertMatrix ; (; Mat< 1, 1, real > & ; dest, . const Mat< 1, 1, real > & ; from . ). constexpr . Matrix inversion (special case 1x1). . ◆ invertMatrix() [2/7]. template<class real > . constexpr bool sofa::type::invertMatrix ; (; Mat< 2, 2, real > & ; dest, . const Mat< 2, 2, real > & ; from . ). constexpr . Matrix inversion (special case 2x2). . ◆ invertMatrix() [3/7]. template<class real > . constexpr bool sofa::type:",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:33785,Availability,error,error,33785,"nst V1 & ; vector1, . const V2 & ; vector2 . ). Dot product of two vectors. . ◆ dot() [2/2]. template<sofa::Size N, typename real > . constexpr real sofa::type::dot ; (; const Vec< N, real > & ; a, . const Vec< N, real > & ; b . ). constexprnoexcept . Dot product (alias for operator*) . ◆ dyad(). template<class Tu , class Tv > . constexpr Mat<Tu::size(), Tv::size(), typename Tu::value_type> sofa::type::dyad ; (; const Tu & ; u, . const Tv & ; v . ). constexprnoexcept . Create a matrix as . . ◆ getInteger(). SOFA_TYPE_API int sofa::type::getInteger ; (; const std::string & ; s, . std::stringstream & ; msg, . unsigned int & ; numErrors . ). Convert the string 's' into an unsigned int. The error are reported in msg & numErrors is incremented. . ◆ getUnsignedInteger(). SOFA_TYPE_API unsigned int sofa::type::getUnsignedInteger ; (; const std::string & ; s, . std::stringstream & ; msg, . unsigned int & ; numErrors . ). Convert the string 's' into an unsigned int. The error are reported in msg & numErrors is incremented. . ◆ infNorm(). template<class real > . real sofa::type::infNorm ; (; const Mat< 3, 3, real > & ; A). ◆ init(). SOFA_TYPE_API void sofa::type::init ; (; ). Initialize the SofaHelper library. . ◆ invertMatrix() [1/7]. template<class real > . constexpr bool sofa::type::invertMatrix ; (; Mat< 1, 1, real > & ; dest, . const Mat< 1, 1, real > & ; from . ). constexpr . Matrix inversion (special case 1x1). . ◆ invertMatrix() [2/7]. template<class real > . constexpr bool sofa::type::invertMatrix ; (; Mat< 2, 2, real > & ; dest, . const Mat< 2, 2, real > & ; from . ). constexpr . Matrix inversion (special case 2x2). . ◆ invertMatrix() [3/7]. template<class real > . constexpr bool sofa::type::invertMatrix ; (; Mat< 3, 3, real > & ; dest, . const Mat< 3, 3, real > & ; from . ). constexpr . Matrix inversion (special case 3x3). . ◆ invertMatrix() [4/7]. template<sofa::Size S, class real > . bool sofa::type::invertMatrix ; (; Mat< S, S, real > & ; dest, . const Mat< S, S",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:30218,Energy Efficiency,efficient,efficient,30218,"on of L . ◆ cholDcmp(). template<Size n, class real > . bool sofa::type::cholDcmp ; (; Mat< n, n, real > & ; L, . const Mat< n, n, real > & ; M . ). Cholesky decomposition: compute triangular matrix L such that M=L.Lt PreconditionM must be symmetric positive definite returns false is the decomposition fails . ◆ cholInv(). template<Size n, class real > . bool sofa::type::cholInv ; (; Mat< n, n, real > & ; Inv, . const Mat< n, n, real > & ; M . ). Inversion of a positive symmetric definite (PSD) matrix using a Cholesky decomposition. Returns false if the matrix is not PSD. . ◆ cholSlv(). template<Size n, class real > . bool sofa::type::cholSlv ; (; Vec< n, real > & ; x, . const Mat< n, n, real > & ; M, . const Vec< n, real > & ; b . ). Cholesky solution: solve the system Mx=b using a Cholesky decomposition. PreconditionM must be symmetric positive definite Returns false is the decomposition fails. If you have several solutions to perform with the same matrix M and different vectors b, it is more efficient to factor the matrix once and then use back-substitution for each vector. . ◆ cleanup(). SOFA_TYPE_API void sofa::type::cleanup ; (; ). Clean up the resources used by the SofaHelper library. . ◆ cond(). template<int m, int n, typename Real > . Real sofa::type::cond ; (; Mat< m, n, Real > & ; a). return the condition number of the matrix a following the euclidean norm (using the svd decomposition to find singular values) . ◆ cross() [1/2]. template<typename real1 , typename real2 > . constexpr real1 sofa::type::cross ; (; const type::Vec< 2, real1 > & ; a, . const type::Vec< 2, real2 > & ; b . ). constexprnoexcept . Cross product for 2-elements vectors. . ◆ cross() [2/2]. template<typename real1 , typename real2 > . constexpr Vec<3,real1> sofa::type::cross ; (; const Vec< 3, real1 > & ; a, . const Vec< 3, real2 > & ; b . ). constexprnoexcept . Cross product for 3-elements vectors. . ◆ crossProductMatrix(). template<class Real > . constexpr Mat<3, 3, Real> sofa::type::",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:169,Modifiability,Variab,Variables,169,"﻿. SOFA API: sofa::type Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::type Namespace Reference . for std::pair ; More... Namespaces;  pairwise;  ;  trait;  . Classes; class  BoundingBox;  ; class  TBoundingBox;  ; class  BoundingBox2D;  bounding rectangle More...;  ; class  BoundingBox1D;  bounding interval More...;  ; class  DualQuatCoord3;  ; class  fixed_array;  ; class  Frame;  ; class  Vec;  ; class  VecNoInit;  Same as Vec except the values are not initialized by default. More...;  ; class  Mat;  ; class  MatNoInit;  Same as Mat except the values are not initialized by default. More...;  ; class  Quat;  ; struct  CleanupCheck;  ; struct  detect;  ; struct  detect< T, Op, void_t< Op< T > > >;  ; class  Material;  ; class  MatSym;  ; class  PrimitiveGroup;  ; struct  qNoInit;  ; class  QuatNoInit;  Same as Quat except the values are not initialized by default. More...;  ; class  Ray;  ; class  RGBAColor;  encode a 4 RGBA component color More...;  ; class  SpatialVector;  ; class  SVector;  Same as type::vector, + delimiters on serialization. More...;  ; struct  HasRebindTypedef;  ; struct  HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > >;  ; struct  Rebind;  ; struct  Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do have a nested rebind_to member. In this implementation, Rebind has a public member typedef to. It corresponds to the typedef rebind_to. More...;  ; struct  Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. More",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:19537,Modifiability,Variab,Variables,19537,"Errors);  ; SOFA_TYPE_API unsigned int getUnsignedInteger (const std::string &s, std::stringstream &msg, unsigned int &numErrors);  ; linear algebra on standard vectors; template<class V1 , class V2 > ; SReal dot (const V1 &vector1, const V2 &vector2);  Dot product of two vectors. More...;  ; template<class V > ; SReal norm (const V &v);  Norm of a vector. More...;  ; template<class V1 , class Scalar , class V2 , class V3 > ; void axpy (V1 &result, Scalar a, const V2 &x, const V3 &y);  Vector operation: result = ax + y. More...;  . Variables; template class SOFA_TYPE_API DualQuatCoord3< double >;  ; template class SOFA_TYPE_API DualQuatCoord3< float >;  ; template class SOFA_TYPE_API fixed_array< float, 2 >;  ; template class SOFA_TYPE_API fixed_array< double, 2 >;  ; template class SOFA_TYPE_API fixed_array< float, 3 >;  ; template class SOFA_TYPE_API fixed_array< double, 3 >;  ; template class SOFA_TYPE_API fixed_array< float, 4 >;  ; template class SOFA_TYPE_API fixed_array< double, 4 >;  ; template class SOFA_TYPE_API fixed_array< float, 5 >;  ; template class SOFA_TYPE_API fixed_array< double, 5 >;  ; template class SOFA_TYPE_API fixed_array< float, 6 >;  ; template class SOFA_TYPE_API fixed_array< double, 6 >;  ; template class SOFA_TYPE_API fixed_array< float, 7 >;  ; template class SOFA_TYPE_API fixed_array< double, 7 >;  ; template class SOFA_TYPE_API Quat< double >;  Explicit instantiation of the quaternions for double precision. More...;  ; template class SOFA_TYPE_API Quat< float >;  Explicit instantiation of the quaternions for single precision. More...;  ; constexpr qNoInit QNOINIT;  ; constexpr RGBAColor g_white {1.0f,1.0f,1.0f,1.0f};  ; constexpr RGBAColor g_black {0.0f,0.0f,0.0f,1.0f};  ; constexpr RGBAColor g_red {1.0f,0.0f,0.0f,1.0f};  ; constexpr RGBAColor g_green {0.0f,1.0f,0.0f,1.0f};  ; constexpr RGBAColor g_blue {0.0f,0.0f,1.0f,1.0f};  ; constexpr RGBAColor g_cyan {0.0f,1.0f,1.0f,1.0f};  ; constexpr RGBAColor g_magenta {1.0f,0.0f,1.0f,1.0f}; ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:48017,Modifiability,Variab,Variable,48017,"ec< L, Real > & ; a, . const Vec< L, Real > & ; b . ). constexprnoexcept . return a * b^T . ◆ trace() [1/3]. template<sofa::Size N, class real > . constexpr real sofa::type::trace ; (; const Mat< N, N, real > & ; m). constexprnoexcept . trace of a square matrix . ◆ trace() [2/3]. template<class real > . real sofa::type::trace ; (; const MatSym< 2, real > & ; m). inline . Trace of a 2x2 matrix. . ◆ trace() [3/3]. template<class real > . real sofa::type::trace ; (; const MatSym< 3, real > & ; m). inline . Trace of a 3x3 matrix. . ◆ transformInvertMatrix(). template<sofa::Size S, class real > . constexpr bool sofa::type::transformInvertMatrix ; (; Mat< S, S, real > & ; dest, . const Mat< S, S, real > & ; from . ). constexpr . Inverse Matrix considering the matrix as a transformation. . ◆ vector_access_failure(). void SOFA_TYPE_API sofa::type::vector_access_failure ; (; const void * ; vec, . const std::size_t ; size, . const std::size_t ; i, . const std::type_info & ; type . ). Variable Documentation. ◆ deny. template<class... > . constexpr auto sofa::type::deny = false. inlineconstexpr . ◆ DualQuatCoord3< double >. template class SOFA_TYPE_API sofa::type::DualQuatCoord3< double >. ◆ DualQuatCoord3< float >. template class SOFA_TYPE_API sofa::type::DualQuatCoord3< float >. ◆ fixed_array< double, 2 >. template class SOFA_TYPE_API sofa::type::fixed_array< double, 2 >. ◆ fixed_array< double, 3 >. template class SOFA_TYPE_API sofa::type::fixed_array< double, 3 >. ◆ fixed_array< double, 4 >. template class SOFA_TYPE_API sofa::type::fixed_array< double, 4 >. ◆ fixed_array< double, 5 >. template class SOFA_TYPE_API sofa::type::fixed_array< double, 5 >. ◆ fixed_array< double, 6 >. template class SOFA_TYPE_API sofa::type::fixed_array< double, 6 >. ◆ fixed_array< double, 7 >. template class SOFA_TYPE_API sofa::type::fixed_array< double, 7 >. ◆ fixed_array< float, 2 >. template class SOFA_TYPE_API sofa::type::fixed_array< float, 2 >. ◆ fixed_array< float, 3 >. template class SOFA_",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:30151,Performance,perform,perform,30151,"on of L . ◆ cholDcmp(). template<Size n, class real > . bool sofa::type::cholDcmp ; (; Mat< n, n, real > & ; L, . const Mat< n, n, real > & ; M . ). Cholesky decomposition: compute triangular matrix L such that M=L.Lt PreconditionM must be symmetric positive definite returns false is the decomposition fails . ◆ cholInv(). template<Size n, class real > . bool sofa::type::cholInv ; (; Mat< n, n, real > & ; Inv, . const Mat< n, n, real > & ; M . ). Inversion of a positive symmetric definite (PSD) matrix using a Cholesky decomposition. Returns false if the matrix is not PSD. . ◆ cholSlv(). template<Size n, class real > . bool sofa::type::cholSlv ; (; Vec< n, real > & ; x, . const Mat< n, n, real > & ; M, . const Vec< n, real > & ; b . ). Cholesky solution: solve the system Mx=b using a Cholesky decomposition. PreconditionM must be symmetric positive definite Returns false is the decomposition fails. If you have several solutions to perform with the same matrix M and different vectors b, it is more efficient to factor the matrix once and then use back-substitution for each vector. . ◆ cleanup(). SOFA_TYPE_API void sofa::type::cleanup ; (; ). Clean up the resources used by the SofaHelper library. . ◆ cond(). template<int m, int n, typename Real > . Real sofa::type::cond ; (; Mat< m, n, Real > & ; a). return the condition number of the matrix a following the euclidean norm (using the svd decomposition to find singular values) . ◆ cross() [1/2]. template<typename real1 , typename real2 > . constexpr real1 sofa::type::cross ; (; const type::Vec< 2, real1 > & ; a, . const type::Vec< 2, real2 > & ; b . ). constexprnoexcept . Cross product for 2-elements vectors. . ◆ cross() [2/2]. template<typename real1 , typename real2 > . constexpr Vec<3,real1> sofa::type::cross ; (; const Vec< 3, real1 > & ; a, . const Vec< 3, real2 > & ; b . ). constexprnoexcept . Cross product for 3-elements vectors. . ◆ crossProductMatrix(). template<class Real > . constexpr Mat<3, 3, Real> sofa::type::",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:769,Safety,detect,detect,769,"﻿. SOFA API: sofa::type Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::type Namespace Reference . for std::pair ; More... Namespaces;  pairwise;  ;  trait;  . Classes; class  BoundingBox;  ; class  TBoundingBox;  ; class  BoundingBox2D;  bounding rectangle More...;  ; class  BoundingBox1D;  bounding interval More...;  ; class  DualQuatCoord3;  ; class  fixed_array;  ; class  Frame;  ; class  Vec;  ; class  VecNoInit;  Same as Vec except the values are not initialized by default. More...;  ; class  Mat;  ; class  MatNoInit;  Same as Mat except the values are not initialized by default. More...;  ; class  Quat;  ; struct  CleanupCheck;  ; struct  detect;  ; struct  detect< T, Op, void_t< Op< T > > >;  ; class  Material;  ; class  MatSym;  ; class  PrimitiveGroup;  ; struct  qNoInit;  ; class  QuatNoInit;  Same as Quat except the values are not initialized by default. More...;  ; class  Ray;  ; class  RGBAColor;  encode a 4 RGBA component color More...;  ; class  SpatialVector;  ; class  SVector;  Same as type::vector, + delimiters on serialization. More...;  ; struct  HasRebindTypedef;  ; struct  HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > >;  ; struct  Rebind;  ; struct  Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do have a nested rebind_to member. In this implementation, Rebind has a public member typedef to. It corresponds to the typedef rebind_to. More...;  ; struct  Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. More",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:788,Safety,detect,detect,788,"﻿. SOFA API: sofa::type Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::type Namespace Reference . for std::pair ; More... Namespaces;  pairwise;  ;  trait;  . Classes; class  BoundingBox;  ; class  TBoundingBox;  ; class  BoundingBox2D;  bounding rectangle More...;  ; class  BoundingBox1D;  bounding interval More...;  ; class  DualQuatCoord3;  ; class  fixed_array;  ; class  Frame;  ; class  Vec;  ; class  VecNoInit;  Same as Vec except the values are not initialized by default. More...;  ; class  Mat;  ; class  MatNoInit;  Same as Mat except the values are not initialized by default. More...;  ; class  Quat;  ; struct  CleanupCheck;  ; struct  detect;  ; struct  detect< T, Op, void_t< Op< T > > >;  ; class  Material;  ; class  MatSym;  ; class  PrimitiveGroup;  ; struct  qNoInit;  ; class  QuatNoInit;  Same as Quat except the values are not initialized by default. More...;  ; class  Ray;  ; class  RGBAColor;  encode a 4 RGBA component color More...;  ; class  SpatialVector;  ; class  SVector;  Same as type::vector, + delimiters on serialization. More...;  ; struct  HasRebindTypedef;  ; struct  HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > >;  ; struct  Rebind;  ; struct  Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do have a nested rebind_to member. In this implementation, Rebind has a public member typedef to. It corresponds to the typedef rebind_to. More...;  ; struct  Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. More",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:5913,Safety,detect,detect,5913,"xed_array< double, 1 >;  ; using FixedArray2f = fixed_array< float, 2 >;  ; using FixedArray2d = fixed_array< double, 2 >;  ; using FixedArray3f = fixed_array< float, 3 >;  ; using FixedArray3d = fixed_array< double, 3 >;  ; using FixedArray4f = fixed_array< float, 4 >;  ; using FixedArray4d = fixed_array< double, 4 >;  ; using FixedArray5f = fixed_array< float, 5 >;  ; using FixedArray5d = fixed_array< double, 5 >;  ; using FixedArray6f = fixed_array< float, 6 >;  ; using FixedArray6d = fixed_array< double, 6 >;  ; using FixedArray7f = fixed_array< float, 7 >;  ; using FixedArray7d = fixed_array< double, 7 >;  ; using FixedArray8f = fixed_array< float, 8 >;  ; using FixedArray8d = fixed_array< double, 8 >;  ; template<typename... > ; using void_t = void;  ; template<typename T > ; using isRigid_t = decltype(std::declval< typename T::Coord >().getOrientation());  ; template<typename T > ; using isRigidType = detect< T, isRigid_t >;  ; template<class T , class A = std::allocator<T>> ; using stable_vector = boost::container::stable_vector< T, A >;  ; template<class T , class B > ; using rebind_to = typename Rebind< T, B >::to;  . Functions; BoundingBox::bbox_t make_neutralBBox ();  ; template<typename... Ts> ; constexpr auto make_array (Ts &&... ts) -> fixed_array< std::common_type_t< Ts... >, sizeof...(Ts)>;  ; template<typename T , sofa::Size N> ; constexpr sofa::type::fixed_array< T, N > makeHomogeneousArray (const T &value);  Builds a fixed_array in which all elements have the same value. More...;  ; template<typename FixedArray > ; constexpr FixedArray makeHomogeneousArray (const typename FixedArray::value_type &value);  Builds a fixed_array in which all elements have the same value. More...;  ; template<typename T , sofa::Size N> ; constexpr bool operator< (const fixed_array< T, N > &v1, const fixed_array< T, N > &v2) noexcept;  Checks if v1 is lexicographically less than v2. Similar to std::lexicographical_compare. More...;  ; template<typename T , sofa::Size N>",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:25337,Safety,detect,detect,25337,"ofa::type::FixedArray6i = typedef fixed_array<int, 6>. ◆ FixedArray6I. using sofa::type::FixedArray6I = typedef fixed_array<unsigned int, 6>. ◆ FixedArray7d. using sofa::type::FixedArray7d = typedef fixed_array<double, 7>. ◆ FixedArray7f. using sofa::type::FixedArray7f = typedef fixed_array<float, 7>. ◆ FixedArray7i. using sofa::type::FixedArray7i = typedef fixed_array<int, 7>. ◆ FixedArray7I. using sofa::type::FixedArray7I = typedef fixed_array<unsigned int, 7>. ◆ FixedArray8d. using sofa::type::FixedArray8d = typedef fixed_array<double, 8>. ◆ FixedArray8f. using sofa::type::FixedArray8f = typedef fixed_array<float, 8>. ◆ FixedArray8i. using sofa::type::FixedArray8i = typedef fixed_array<int, 8>. ◆ FixedArray8I. using sofa::type::FixedArray8I = typedef fixed_array<unsigned int, 8>. ◆ isRigid_t. template<typename T > . using sofa::type::isRigid_t = typedef decltype(std::declval<typename T::Coord>().getOrientation()). ◆ isRigidType. template<typename T > . using sofa::type::isRigidType = typedef detect<T, isRigid_t>. ◆ Mat1x1d. typedef Mat<1,1,double> sofa::type::Mat1x1d. ◆ Mat1x1f. typedef Mat<1,1,float> sofa::type::Mat1x1f. ◆ Mat2x2. typedef Mat<2,2,SReal> sofa::type::Mat2x2. ◆ Mat2x2d. typedef Mat<2,2,double> sofa::type::Mat2x2d. ◆ Mat2x2f. typedef Mat<2,2,float> sofa::type::Mat2x2f. ◆ Mat3x3. typedef Mat<3,3,SReal> sofa::type::Mat3x3. ◆ Mat3x3d. typedef Mat<3,3,double> sofa::type::Mat3x3d. ◆ Mat3x3f. typedef Mat<3,3,float> sofa::type::Mat3x3f. ◆ Mat3x4d. typedef Mat<3,4,double> sofa::type::Mat3x4d. ◆ Mat3x4f. typedef Mat<3,4,float> sofa::type::Mat3x4f. ◆ Mat4x4. typedef Mat<4,4,SReal> sofa::type::Mat4x4. ◆ Mat4x4d. typedef Mat<4,4,double> sofa::type::Mat4x4d. ◆ Mat4x4f. typedef Mat<4,4,float> sofa::type::Mat4x4f. ◆ Mat6x6. typedef Mat<6,6,SReal> sofa::type::Mat6x6. ◆ Mat6x6d. typedef Mat<6, 6, double> sofa::type::Mat6x6d. ◆ Mat6x6f. typedef Mat<6, 6, float> sofa::type::Mat6x6f. ◆ Matrix2. typedef Mat<2,2,SReal> sofa::type::Matrix2. ◆ Matrix3. typedef Mat<3,3,SRea",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1pairwise.html:354,Availability,avail,available,354,"﻿. SOFA API: sofa::type::pairwise Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Functions . sofa::type::pairwise Namespace Reference . Functions; template<class T > ; const T & stdclamp (const T &v, const T &lo, const T &hi);  clamp a single value. This function should be removed when std::clamp will be available More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; T clamp (const T &in, const TT &minValue, const TT &maxValue);  clamp all the values of a fixed_array to be within a given interval. More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; constexpr T operator+ (const T &l, const T &r);  pairwise add of two fixed_array More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; constexpr T operator- (const T &l, const T &r);  pairwise subtract of two fixed_array More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; T operator* (const T &r, const typename T::value_type &f);  multiply from l the r components. More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; T operator/ (const T &r, const typename T::value_type &f);  multiply from l the r components. More...;  . Function Documentation. ◆ clamp(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . T sofa::type::pairwise::clamp ; (; const T & ; in, . const TT & ; minValue, . const TT & ; maxValue . ). clamp all the values of a fixed_array to be within a given interval. . ◆ operator*(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . T sofa::type::pairwise::operator* ; (; const T & ; r, . const typename T::value_type & ; f . ). multiply from l the r components. . ◆ operator+(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . constexpr T sofa::type::pairwise",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1pairwise.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1pairwise.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1pairwise.html:2779,Availability,avail,available,2779,"expr T operator- (const T &l, const T &r);  pairwise subtract of two fixed_array More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; T operator* (const T &r, const typename T::value_type &f);  multiply from l the r components. More...;  ; template<class T , class TT = typename T::value_type, size_t TN = T::static_size> ; T operator/ (const T &r, const typename T::value_type &f);  multiply from l the r components. More...;  . Function Documentation. ◆ clamp(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . T sofa::type::pairwise::clamp ; (; const T & ; in, . const TT & ; minValue, . const TT & ; maxValue . ). clamp all the values of a fixed_array to be within a given interval. . ◆ operator*(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . T sofa::type::pairwise::operator* ; (; const T & ; r, . const typename T::value_type & ; f . ). multiply from l the r components. . ◆ operator+(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . constexpr T sofa::type::pairwise::operator+ ; (; const T & ; l, . const T & ; r . ). constexpr . pairwise add of two fixed_array . ◆ operator-(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . constexpr T sofa::type::pairwise::operator- ; (; const T & ; l, . const T & ; r . ). constexpr . pairwise subtract of two fixed_array . ◆ operator/(). template<class T , class TT = typename T::value_type, size_t TN = T::static_size> . T sofa::type::pairwise::operator/ ; (; const T & ; r, . const typename T::value_type & ; f . ). multiply from l the r components. . ◆ stdclamp(). template<class T > . const T& sofa::type::pairwise::stdclamp ; (; const T & ; v, . const T & ; lo, . const T & ; hi . ). clamp a single value. This function should be removed when std::clamp will be available . sofatypepairwise; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1pairwise.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1pairwise.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html:137,Modifiability,Variab,Variables,137,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html:684,Modifiability,Variab,Variables,684,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html:849,Modifiability,variab,variable,849,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html:953,Modifiability,Variab,Variable,953,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html:1193,Modifiability,variab,variable,1193,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html:1292,Modifiability,variab,variable,1292,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html:221,Safety,Detect,Detect,221,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html:593,Safety,Detect,Detect,593,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html:870,Usability,simpl,simplify,870,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html
https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html:1214,Usability,simpl,simplify,1214,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html:362,Modifiability,inherit,inherited,362,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel, including all inherited members. firstCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel; FirstLastCollisionModel(core::CollisionModel *a, core::CollisionModel *b)sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModelinline; lastCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel, including all inherited members. firstCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel; FirstLastCollisionModel(core::CollisionModel *a, core::CollisionModel *b)sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModelinline; lastCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html:279,Safety,detect,detection,279,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel, including all inherited members. firstCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel; FirstLastCollisionModel(core::CollisionModel *a, core::CollisionModel *b)sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModelinline; lastCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html:428,Safety,detect,detection,428,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel, including all inherited members. firstCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel; FirstLastCollisionModel(core::CollisionModel *a, core::CollisionModel *b)sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModelinline; lastCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html:598,Safety,detect,detection,598,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel, including all inherited members. firstCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel; FirstLastCollisionModel(core::CollisionModel *a, core::CollisionModel *b)sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModelinline; lastCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html:719,Safety,detect,detection,719,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel, including all inherited members. firstCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel; FirstLastCollisionModel(core::CollisionModel *a, core::CollisionModel *b)sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModelinline; lastCollisionModelsofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_f29c14afeafc0440e54487e4684716f59.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Struct Reference . #include <BruteForceBroadPhase.h>; Detailed Description; A data structure to store a pair of collision models They both describe the same object . Public Attributes; core::CollisionModel * firstCollisionModel { nullptr };  First collision model in the hierarchy of collision models of an object. Usually a bounding box. More...;  ; core::CollisionModel * lastCollisionModel { nullptr };  . Public Member Functions;  FirstLastCollisionModel (core::CollisionModel *a, core::CollisionModel *b);  . Attribute details. ◆ firstCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::firstCollisionModel { nullptr }. First collision model in the hierarchy of collision models of an object. Usually a bounding box. . ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::lastCollisionModel { nullptr }. Constructor details. ◆ FirstLastCollisionModel(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::FirstLastCollisionModel ; (; core::CollisionModel * ; a, . core::CollisionModel * ; b . ). inline . sofacomponentcollisiondetectionalgorithmBruteForceBroadPhaseFirstLastCollisionModel; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html:299,Safety,detect,detection,299,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Struct Reference . #include <BruteForceBroadPhase.h>; Detailed Description; A data structure to store a pair of collision models They both describe the same object . Public Attributes; core::CollisionModel * firstCollisionModel { nullptr };  First collision model in the hierarchy of collision models of an object. Usually a bounding box. More...;  ; core::CollisionModel * lastCollisionModel { nullptr };  . Public Member Functions;  FirstLastCollisionModel (core::CollisionModel *a, core::CollisionModel *b);  . Attribute details. ◆ firstCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::firstCollisionModel { nullptr }. First collision model in the hierarchy of collision models of an object. Usually a bounding box. . ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::lastCollisionModel { nullptr }. Constructor details. ◆ FirstLastCollisionModel(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::FirstLastCollisionModel ; (; core::CollisionModel * ; a, . core::CollisionModel * ; b . ). inline . sofacomponentcollisiondetectionalgorithmBruteForceBroadPhaseFirstLastCollisionModel; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html:973,Safety,detect,detection,973,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Struct Reference . #include <BruteForceBroadPhase.h>; Detailed Description; A data structure to store a pair of collision models They both describe the same object . Public Attributes; core::CollisionModel * firstCollisionModel { nullptr };  First collision model in the hierarchy of collision models of an object. Usually a bounding box. More...;  ; core::CollisionModel * lastCollisionModel { nullptr };  . Public Member Functions;  FirstLastCollisionModel (core::CollisionModel *a, core::CollisionModel *b);  . Attribute details. ◆ firstCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::firstCollisionModel { nullptr }. First collision model in the hierarchy of collision models of an object. Usually a bounding box. . ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::lastCollisionModel { nullptr }. Constructor details. ◆ FirstLastCollisionModel(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::FirstLastCollisionModel ; (; core::CollisionModel * ; a, . core::CollisionModel * ; b . ). inline . sofacomponentcollisiondetectionalgorithmBruteForceBroadPhaseFirstLastCollisionModel; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html:1246,Safety,detect,detection,1246,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Struct Reference . #include <BruteForceBroadPhase.h>; Detailed Description; A data structure to store a pair of collision models They both describe the same object . Public Attributes; core::CollisionModel * firstCollisionModel { nullptr };  First collision model in the hierarchy of collision models of an object. Usually a bounding box. More...;  ; core::CollisionModel * lastCollisionModel { nullptr };  . Public Member Functions;  FirstLastCollisionModel (core::CollisionModel *a, core::CollisionModel *b);  . Attribute details. ◆ firstCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::firstCollisionModel { nullptr }. First collision model in the hierarchy of collision models of an object. Usually a bounding box. . ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::lastCollisionModel { nullptr }. Constructor details. ◆ FirstLastCollisionModel(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::FirstLastCollisionModel ; (; core::CollisionModel * ; a, . core::CollisionModel * ; b . ). inline . sofacomponentcollisiondetectionalgorithmBruteForceBroadPhaseFirstLastCollisionModel; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html:1425,Safety,detect,detection,1425,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel Struct Reference . #include <BruteForceBroadPhase.h>; Detailed Description; A data structure to store a pair of collision models They both describe the same object . Public Attributes; core::CollisionModel * firstCollisionModel { nullptr };  First collision model in the hierarchy of collision models of an object. Usually a bounding box. More...;  ; core::CollisionModel * lastCollisionModel { nullptr };  . Public Member Functions;  FirstLastCollisionModel (core::CollisionModel *a, core::CollisionModel *b);  . Attribute details. ◆ firstCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::firstCollisionModel { nullptr }. First collision model in the hierarchy of collision models of an object. Usually a bounding box. . ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::lastCollisionModel { nullptr }. Constructor details. ◆ FirstLastCollisionModel(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::FirstLastCollisionModel::FirstLastCollisionModel ; (; core::CollisionModel * ; a, . core::CollisionModel * ; b . ). inline . sofacomponentcollisiondetectionalgorithmBruteForceBroadPhaseFirstLastCollisionModel; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase_1_1_first_last_collision_model.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html:334,Modifiability,inherit,inherited,334,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision, including all inherited members. cm1sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; cm2sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; intersectorsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; selfCollisionsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision, including all inherited members. cm1sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; cm2sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; intersectorsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; selfCollisionsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html:265,Safety,detect,detection,265,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision, including all inherited members. cm1sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; cm2sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; intersectorsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; selfCollisionsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html:384,Safety,detect,detection,384,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision, including all inherited members. cm1sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; cm2sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; intersectorsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; selfCollisionsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html:470,Safety,detect,detection,470,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision, including all inherited members. cm1sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; cm2sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; intersectorsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; selfCollisionsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html:564,Safety,detect,detection,564,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision, including all inherited members. cm1sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; cm2sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; intersectorsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; selfCollisionsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html:660,Safety,detect,detection,660,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision, including all inherited members. cm1sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; cm2sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; intersectorsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision; selfCollisionsofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html:41,Safety,detect,detection,41,﻿. SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference . #include <BVHNarrowPhase.h>; Store data related to two finest CollisionModel's. ; More...; Detailed Description; Store data related to two finest CollisionModel's. . Public Attributes; core::CollisionModel * cm1 { nullptr };  ; core::CollisionModel * cm2 { nullptr };  ; core::collision::ElementIntersector * intersector { nullptr };  ElementIntersector corresponding to cm1 and cm2. More...;  ; bool selfCollision { false };  . Attribute details. ◆ cm1. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm1 { nullptr }. ◆ cm2. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm2 { nullptr }. ◆ intersector. core::collision::ElementIntersector* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::intersector { nullptr }. ElementIntersector corresponding to cm1 and cm2. . ◆ selfCollision. bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::selfCollision { false }. sofacomponentcollisiondetectionalgorithmBVHNarrowPhaseFinestCollision; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html:258,Safety,detect,detection,258,﻿. SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference . #include <BVHNarrowPhase.h>; Store data related to two finest CollisionModel's. ; More...; Detailed Description; Store data related to two finest CollisionModel's. . Public Attributes; core::CollisionModel * cm1 { nullptr };  ; core::CollisionModel * cm2 { nullptr };  ; core::collision::ElementIntersector * intersector { nullptr };  ElementIntersector corresponding to cm1 and cm2. More...;  ; bool selfCollision { false };  . Attribute details. ◆ cm1. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm1 { nullptr }. ◆ cm2. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm2 { nullptr }. ◆ intersector. core::collision::ElementIntersector* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::intersector { nullptr }. ElementIntersector corresponding to cm1 and cm2. . ◆ selfCollision. bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::selfCollision { false }. sofacomponentcollisiondetectionalgorithmBVHNarrowPhaseFinestCollision; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html:836,Safety,detect,detection,836,﻿. SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference . #include <BVHNarrowPhase.h>; Store data related to two finest CollisionModel's. ; More...; Detailed Description; Store data related to two finest CollisionModel's. . Public Attributes; core::CollisionModel * cm1 { nullptr };  ; core::CollisionModel * cm2 { nullptr };  ; core::collision::ElementIntersector * intersector { nullptr };  ElementIntersector corresponding to cm1 and cm2. More...;  ; bool selfCollision { false };  . Attribute details. ◆ cm1. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm1 { nullptr }. ◆ cm2. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm2 { nullptr }. ◆ intersector. core::collision::ElementIntersector* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::intersector { nullptr }. ElementIntersector corresponding to cm1 and cm2. . ◆ selfCollision. bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::selfCollision { false }. sofacomponentcollisiondetectionalgorithmBVHNarrowPhaseFinestCollision; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html:965,Safety,detect,detection,965,﻿. SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference . #include <BVHNarrowPhase.h>; Store data related to two finest CollisionModel's. ; More...; Detailed Description; Store data related to two finest CollisionModel's. . Public Attributes; core::CollisionModel * cm1 { nullptr };  ; core::CollisionModel * cm2 { nullptr };  ; core::collision::ElementIntersector * intersector { nullptr };  ElementIntersector corresponding to cm1 and cm2. More...;  ; bool selfCollision { false };  . Attribute details. ◆ cm1. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm1 { nullptr }. ◆ cm2. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm2 { nullptr }. ◆ intersector. core::collision::ElementIntersector* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::intersector { nullptr }. ElementIntersector corresponding to cm1 and cm2. . ◆ selfCollision. bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::selfCollision { false }. sofacomponentcollisiondetectionalgorithmBVHNarrowPhaseFinestCollision; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html:1117,Safety,detect,detection,1117,﻿. SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference . #include <BVHNarrowPhase.h>; Store data related to two finest CollisionModel's. ; More...; Detailed Description; Store data related to two finest CollisionModel's. . Public Attributes; core::CollisionModel * cm1 { nullptr };  ; core::CollisionModel * cm2 { nullptr };  ; core::collision::ElementIntersector * intersector { nullptr };  ElementIntersector corresponding to cm1 and cm2. More...;  ; bool selfCollision { false };  . Attribute details. ◆ cm1. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm1 { nullptr }. ◆ cm2. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm2 { nullptr }. ◆ intersector. core::collision::ElementIntersector* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::intersector { nullptr }. ElementIntersector corresponding to cm1 and cm2. . ◆ selfCollision. bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::selfCollision { false }. sofacomponentcollisiondetectionalgorithmBVHNarrowPhaseFinestCollision; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html:1298,Safety,detect,detection,1298,﻿. SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision Struct Reference . #include <BVHNarrowPhase.h>; Store data related to two finest CollisionModel's. ; More...; Detailed Description; Store data related to two finest CollisionModel's. . Public Attributes; core::CollisionModel * cm1 { nullptr };  ; core::CollisionModel * cm2 { nullptr };  ; core::collision::ElementIntersector * intersector { nullptr };  ElementIntersector corresponding to cm1 and cm2. More...;  ; bool selfCollision { false };  . Attribute details. ◆ cm1. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm1 { nullptr }. ◆ cm2. core::CollisionModel* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::cm2 { nullptr }. ◆ intersector. core::collision::ElementIntersector* sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::intersector { nullptr }. ElementIntersector corresponding to cm1 and cm2. . ◆ selfCollision. bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision::selfCollision { false }. sofacomponentcollisiondetectionalgorithmBVHNarrowPhaseFinestCollision; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase_1_1_finest_collision.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html:316,Modifiability,inherit,inherited,316,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM::CollModID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM::CollModID, including all inherited members. CollModID()sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; CollModID(Index id, core::CollisionModel *cm)sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; enum_typesofa::component::collision::detection::algorithm::CollidingPM::CollModID; operator<(const CollModID &other) constsofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; samplesofa::component::collision::detection::algorithm::CollidingPM::CollModID. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM::CollModID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM::CollModID, including all inherited members. CollModID()sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; CollModID(Index id, core::CollisionModel *cm)sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; enum_typesofa::component::collision::detection::algorithm::CollidingPM::CollModID; operator<(const CollModID &other) constsofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; samplesofa::component::collision::detection::algorithm::CollidingPM::CollModID. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html:256,Safety,detect,detection,256,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM::CollModID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM::CollModID, including all inherited members. CollModID()sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; CollModID(Index id, core::CollisionModel *cm)sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; enum_typesofa::component::collision::detection::algorithm::CollidingPM::CollModID; operator<(const CollModID &other) constsofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; samplesofa::component::collision::detection::algorithm::CollidingPM::CollModID. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html:374,Safety,detect,detection,374,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM::CollModID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM::CollModID, including all inherited members. CollModID()sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; CollModID(Index id, core::CollisionModel *cm)sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; enum_typesofa::component::collision::detection::algorithm::CollidingPM::CollModID; operator<(const CollModID &other) constsofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; samplesofa::component::collision::detection::algorithm::CollidingPM::CollModID. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html:499,Safety,detect,detection,499,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM::CollModID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM::CollModID, including all inherited members. CollModID()sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; CollModID(Index id, core::CollisionModel *cm)sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; enum_typesofa::component::collision::detection::algorithm::CollidingPM::CollModID; operator<(const CollModID &other) constsofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; samplesofa::component::collision::detection::algorithm::CollidingPM::CollModID. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html:588,Safety,detect,detection,588,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM::CollModID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM::CollModID, including all inherited members. CollModID()sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; CollModID(Index id, core::CollisionModel *cm)sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; enum_typesofa::component::collision::detection::algorithm::CollidingPM::CollModID; operator<(const CollModID &other) constsofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; samplesofa::component::collision::detection::algorithm::CollidingPM::CollModID. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html:701,Safety,detect,detection,701,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM::CollModID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM::CollModID, including all inherited members. CollModID()sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; CollModID(Index id, core::CollisionModel *cm)sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; enum_typesofa::component::collision::detection::algorithm::CollidingPM::CollModID; operator<(const CollModID &other) constsofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; samplesofa::component::collision::detection::algorithm::CollidingPM::CollModID. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html:787,Safety,detect,detection,787,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM::CollModID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM::CollModID, including all inherited members. CollModID()sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; CollModID(Index id, core::CollisionModel *cm)sofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; enum_typesofa::component::collision::detection::algorithm::CollidingPM::CollModID; operator<(const CollModID &other) constsofa::component::collision::detection::algorithm::CollidingPM::CollModIDinline; samplesofa::component::collision::detection::algorithm::CollidingPM::CollModID. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference . #include <CollisionPM.h>. Public Attributes; int enum_type;  ; core::CollisionModel * sample;  . Public Member Functions;  CollModID ();  ;  CollModID (Index id, core::CollisionModel *cm);  ; bool operator< (const CollModID &other) const;  . Attribute details. ◆ enum_type. int sofa::component::collision::detection::algorithm::CollidingPM::CollModID::enum_type. ◆ sample. core::CollisionModel* sofa::component::collision::detection::algorithm::CollidingPM::CollModID::sample. Constructor details. ◆ CollModID() [1/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; ). inline . ◆ CollModID() [2/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; Index ; id, . core::CollisionModel * ; cm . ). inline . Function details. ◆ operator<(). bool sofa::component::collision::detection::algorithm::CollidingPM::CollModID::operator< ; (; const CollModID & ; other); const. inline . sofacomponentcollisiondetectionalgorithmCollidingPMCollModID; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html:276,Safety,detect,detection,276,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference . #include <CollisionPM.h>. Public Attributes; int enum_type;  ; core::CollisionModel * sample;  . Public Member Functions;  CollModID ();  ;  CollModID (Index id, core::CollisionModel *cm);  ; bool operator< (const CollModID &other) const;  . Attribute details. ◆ enum_type. int sofa::component::collision::detection::algorithm::CollidingPM::CollModID::enum_type. ◆ sample. core::CollisionModel* sofa::component::collision::detection::algorithm::CollidingPM::CollModID::sample. Constructor details. ◆ CollModID() [1/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; ). inline . ◆ CollModID() [2/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; Index ; id, . core::CollisionModel * ; cm . ). inline . Function details. ◆ operator<(). bool sofa::component::collision::detection::algorithm::CollidingPM::CollModID::operator< ; (; const CollModID & ; other); const. inline . sofacomponentcollisiondetectionalgorithmCollidingPMCollModID; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html:646,Safety,detect,detection,646,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference . #include <CollisionPM.h>. Public Attributes; int enum_type;  ; core::CollisionModel * sample;  . Public Member Functions;  CollModID ();  ;  CollModID (Index id, core::CollisionModel *cm);  ; bool operator< (const CollModID &other) const;  . Attribute details. ◆ enum_type. int sofa::component::collision::detection::algorithm::CollidingPM::CollModID::enum_type. ◆ sample. core::CollisionModel* sofa::component::collision::detection::algorithm::CollidingPM::CollModID::sample. Constructor details. ◆ CollModID() [1/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; ). inline . ◆ CollModID() [2/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; Index ; id, . core::CollisionModel * ; cm . ). inline . Function details. ◆ operator<(). bool sofa::component::collision::detection::algorithm::CollidingPM::CollModID::operator< ; (; const CollModID & ; other); const. inline . sofacomponentcollisiondetectionalgorithmCollidingPMCollModID; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html:763,Safety,detect,detection,763,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference . #include <CollisionPM.h>. Public Attributes; int enum_type;  ; core::CollisionModel * sample;  . Public Member Functions;  CollModID ();  ;  CollModID (Index id, core::CollisionModel *cm);  ; bool operator< (const CollModID &other) const;  . Attribute details. ◆ enum_type. int sofa::component::collision::detection::algorithm::CollidingPM::CollModID::enum_type. ◆ sample. core::CollisionModel* sofa::component::collision::detection::algorithm::CollidingPM::CollModID::sample. Constructor details. ◆ CollModID() [1/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; ). inline . ◆ CollModID() [2/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; Index ; id, . core::CollisionModel * ; cm . ). inline . Function details. ◆ operator<(). bool sofa::component::collision::detection::algorithm::CollidingPM::CollModID::operator< ; (; const CollModID & ; other); const. inline . sofacomponentcollisiondetectionalgorithmCollidingPMCollModID; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html:887,Safety,detect,detection,887,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference . #include <CollisionPM.h>. Public Attributes; int enum_type;  ; core::CollisionModel * sample;  . Public Member Functions;  CollModID ();  ;  CollModID (Index id, core::CollisionModel *cm);  ; bool operator< (const CollModID &other) const;  . Attribute details. ◆ enum_type. int sofa::component::collision::detection::algorithm::CollidingPM::CollModID::enum_type. ◆ sample. core::CollisionModel* sofa::component::collision::detection::algorithm::CollidingPM::CollModID::sample. Constructor details. ◆ CollModID() [1/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; ). inline . ◆ CollModID() [2/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; Index ; id, . core::CollisionModel * ; cm . ). inline . Function details. ◆ operator<(). bool sofa::component::collision::detection::algorithm::CollidingPM::CollModID::operator< ; (; const CollModID & ; other); const. inline . sofacomponentcollisiondetectionalgorithmCollidingPMCollModID; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html:1009,Safety,detect,detection,1009,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference . #include <CollisionPM.h>. Public Attributes; int enum_type;  ; core::CollisionModel * sample;  . Public Member Functions;  CollModID ();  ;  CollModID (Index id, core::CollisionModel *cm);  ; bool operator< (const CollModID &other) const;  . Attribute details. ◆ enum_type. int sofa::component::collision::detection::algorithm::CollidingPM::CollModID::enum_type. ◆ sample. core::CollisionModel* sofa::component::collision::detection::algorithm::CollidingPM::CollModID::sample. Constructor details. ◆ CollModID() [1/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; ). inline . ◆ CollModID() [2/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; Index ; id, . core::CollisionModel * ; cm . ). inline . Function details. ◆ operator<(). bool sofa::component::collision::detection::algorithm::CollidingPM::CollModID::operator< ; (; const CollModID & ; other); const. inline . sofacomponentcollisiondetectionalgorithmCollidingPMCollModID; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html:1192,Safety,detect,detection,1192,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM::CollModID Struct Reference . #include <CollisionPM.h>. Public Attributes; int enum_type;  ; core::CollisionModel * sample;  . Public Member Functions;  CollModID ();  ;  CollModID (Index id, core::CollisionModel *cm);  ; bool operator< (const CollModID &other) const;  . Attribute details. ◆ enum_type. int sofa::component::collision::detection::algorithm::CollidingPM::CollModID::enum_type. ◆ sample. core::CollisionModel* sofa::component::collision::detection::algorithm::CollidingPM::CollModID::sample. Constructor details. ◆ CollModID() [1/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; ). inline . ◆ CollModID() [2/2]. sofa::component::collision::detection::algorithm::CollidingPM::CollModID::CollModID ; (; Index ; id, . core::CollisionModel * ; cm . ). inline . Function details. ◆ operator<(). bool sofa::component::collision::detection::algorithm::CollidingPM::CollModID::operator< ; (; const CollModID & ; other); const. inline . sofacomponentcollisiondetectionalgorithmCollidingPMCollModID; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m_1_1_coll_mod_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html:298,Modifiability,inherit,inherited,298,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CompPEndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CompPEndPoint, including all inherited members. operator()(const EndPoint *ep1, const EndPoint *ep2) constsofa::component::collision::detection::algorithm::CompPEndPointinline. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CompPEndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CompPEndPoint, including all inherited members. operator()(const EndPoint *ep1, const EndPoint *ep2) constsofa::component::collision::detection::algorithm::CompPEndPointinline. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html:247,Safety,detect,detection,247,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CompPEndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CompPEndPoint, including all inherited members. operator()(const EndPoint *ep1, const EndPoint *ep2) constsofa::component::collision::detection::algorithm::CompPEndPointinline. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html:403,Safety,detect,detection,403,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CompPEndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CompPEndPoint, including all inherited members. operator()(const EndPoint *ep1, const EndPoint *ep2) constsofa::component::collision::detection::algorithm::CompPEndPointinline. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CompPEndPoint Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CompPEndPoint Struct Reference . #include <EndPoint.h>. Public Member Functions; bool operator() (const EndPoint *ep1, const EndPoint *ep2) const;  . Function details. ◆ operator()(). bool sofa::component::collision::detection::algorithm::CompPEndPoint::operator() ; (; const EndPoint * ; ep1, . const EndPoint * ; ep2 . ); const. inline . sofacomponentcollisiondetectionalgorithmCompPEndPoint; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point.html:246,Safety,detect,detection,246,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CompPEndPoint Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CompPEndPoint Struct Reference . #include <EndPoint.h>. Public Member Functions; bool operator() (const EndPoint *ep1, const EndPoint *ep2) const;  . Function details. ◆ operator()(). bool sofa::component::collision::detection::algorithm::CompPEndPoint::operator() ; (; const EndPoint * ; ep1, . const EndPoint * ; ep2 . ); const. inline . sofacomponentcollisiondetectionalgorithmCompPEndPoint; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point.html:485,Safety,detect,detection,485,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CompPEndPoint Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CompPEndPoint Struct Reference . #include <EndPoint.h>. Public Member Functions; bool operator() (const EndPoint *ep1, const EndPoint *ep2) const;  . Function details. ◆ operator()(). bool sofa::component::collision::detection::algorithm::CompPEndPoint::operator() ; (; const EndPoint * ; ep1, . const EndPoint * ; ep2 . ); const. inline . sofacomponentcollisiondetectionalgorithmCompPEndPoint; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_comp_p_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html:330,Modifiability,inherit,inherited,330,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData, including all inherited members. collisionElementIteratorsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; contextsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; doesBoxSelfCollidesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isBoxSimulatedsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isInBroadPhasesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; lastCollisionModelsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData, including all inherited members. collisionElementIteratorsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; contextsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; doesBoxSelfCollidesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isBoxSimulatedsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isInBroadPhasesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; lastCollisionModelsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html:263,Safety,detect,detection,263,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData, including all inherited members. collisionElementIteratorsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; contextsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; doesBoxSelfCollidesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isBoxSimulatedsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isInBroadPhasesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; lastCollisionModelsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html:401,Safety,detect,detection,401,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData, including all inherited members. collisionElementIteratorsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; contextsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; doesBoxSelfCollidesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isBoxSimulatedsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isInBroadPhasesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; lastCollisionModelsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html:489,Safety,detect,detection,489,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData, including all inherited members. collisionElementIteratorsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; contextsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; doesBoxSelfCollidesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isBoxSimulatedsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isInBroadPhasesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; lastCollisionModelsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html:588,Safety,detect,detection,588,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData, including all inherited members. collisionElementIteratorsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; contextsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; doesBoxSelfCollidesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isBoxSimulatedsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isInBroadPhasesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; lastCollisionModelsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html:683,Safety,detect,detection,683,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData, including all inherited members. collisionElementIteratorsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; contextsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; doesBoxSelfCollidesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isBoxSimulatedsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isInBroadPhasesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; lastCollisionModelsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html:778,Safety,detect,detection,778,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData, including all inherited members. collisionElementIteratorsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; contextsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; doesBoxSelfCollidesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isBoxSimulatedsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isInBroadPhasesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; lastCollisionModelsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html:877,Safety,detect,detection,877,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData, including all inherited members. collisionElementIteratorsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; contextsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; doesBoxSelfCollidesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isBoxSimulatedsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; isInBroadPhasesofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData; lastCollisionModelsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html:41,Safety,detect,detection,41,﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference . #include <DirectSAPNarrowPhase.h>. Public Attributes; core::CollisionModel * lastCollisionModel {nullptr};  ; sofa::core::objectmodel::BaseContext * context {nullptr};  ; bool isBoxSimulated {false};  ; bool doesBoxSelfCollide {false};  ; sofa::core::CollisionElementIterator collisionElementIterator;  ; bool isInBroadPhase {false};  . Attribute details. ◆ collisionElementIterator. sofa::core::CollisionElementIterator sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::collisionElementIterator. ◆ context. sofa::core::objectmodel::BaseContext* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::context {nullptr}. ◆ doesBoxSelfCollide. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::doesBoxSelfCollide {false}. ◆ isBoxSimulated. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isBoxSimulated {false}. ◆ isInBroadPhase. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isInBroadPhase {false}. ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::lastCollisionModel {nullptr}. sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhaseBoxData; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html:256,Safety,detect,detection,256,﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference . #include <DirectSAPNarrowPhase.h>. Public Attributes; core::CollisionModel * lastCollisionModel {nullptr};  ; sofa::core::objectmodel::BaseContext * context {nullptr};  ; bool isBoxSimulated {false};  ; bool doesBoxSelfCollide {false};  ; sofa::core::CollisionElementIterator collisionElementIterator;  ; bool isInBroadPhase {false};  . Attribute details. ◆ collisionElementIterator. sofa::core::CollisionElementIterator sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::collisionElementIterator. ◆ context. sofa::core::objectmodel::BaseContext* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::context {nullptr}. ◆ doesBoxSelfCollide. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::doesBoxSelfCollide {false}. ◆ isBoxSimulated. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isBoxSimulated {false}. ◆ isInBroadPhase. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isInBroadPhase {false}. ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::lastCollisionModel {nullptr}. sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhaseBoxData; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html:776,Safety,detect,detection,776,﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference . #include <DirectSAPNarrowPhase.h>. Public Attributes; core::CollisionModel * lastCollisionModel {nullptr};  ; sofa::core::objectmodel::BaseContext * context {nullptr};  ; bool isBoxSimulated {false};  ; bool doesBoxSelfCollide {false};  ; sofa::core::CollisionElementIterator collisionElementIterator;  ; bool isInBroadPhase {false};  . Attribute details. ◆ collisionElementIterator. sofa::core::CollisionElementIterator sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::collisionElementIterator. ◆ context. sofa::core::objectmodel::BaseContext* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::context {nullptr}. ◆ doesBoxSelfCollide. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::doesBoxSelfCollide {false}. ◆ isBoxSimulated. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isBoxSimulated {false}. ◆ isInBroadPhase. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isInBroadPhase {false}. ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::lastCollisionModel {nullptr}. sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhaseBoxData; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html:932,Safety,detect,detection,932,﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference . #include <DirectSAPNarrowPhase.h>. Public Attributes; core::CollisionModel * lastCollisionModel {nullptr};  ; sofa::core::objectmodel::BaseContext * context {nullptr};  ; bool isBoxSimulated {false};  ; bool doesBoxSelfCollide {false};  ; sofa::core::CollisionElementIterator collisionElementIterator;  ; bool isInBroadPhase {false};  . Attribute details. ◆ collisionElementIterator. sofa::core::CollisionElementIterator sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::collisionElementIterator. ◆ context. sofa::core::objectmodel::BaseContext* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::context {nullptr}. ◆ doesBoxSelfCollide. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::doesBoxSelfCollide {false}. ◆ isBoxSimulated. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isBoxSimulated {false}. ◆ isInBroadPhase. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isInBroadPhase {false}. ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::lastCollisionModel {nullptr}. sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhaseBoxData; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html:1059,Safety,detect,detection,1059,﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference . #include <DirectSAPNarrowPhase.h>. Public Attributes; core::CollisionModel * lastCollisionModel {nullptr};  ; sofa::core::objectmodel::BaseContext * context {nullptr};  ; bool isBoxSimulated {false};  ; bool doesBoxSelfCollide {false};  ; sofa::core::CollisionElementIterator collisionElementIterator;  ; bool isInBroadPhase {false};  . Attribute details. ◆ collisionElementIterator. sofa::core::CollisionElementIterator sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::collisionElementIterator. ◆ context. sofa::core::objectmodel::BaseContext* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::context {nullptr}. ◆ doesBoxSelfCollide. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::doesBoxSelfCollide {false}. ◆ isBoxSimulated. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isBoxSimulated {false}. ◆ isInBroadPhase. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isInBroadPhase {false}. ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::lastCollisionModel {nullptr}. sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhaseBoxData; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html:1191,Safety,detect,detection,1191,﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference . #include <DirectSAPNarrowPhase.h>. Public Attributes; core::CollisionModel * lastCollisionModel {nullptr};  ; sofa::core::objectmodel::BaseContext * context {nullptr};  ; bool isBoxSimulated {false};  ; bool doesBoxSelfCollide {false};  ; sofa::core::CollisionElementIterator collisionElementIterator;  ; bool isInBroadPhase {false};  . Attribute details. ◆ collisionElementIterator. sofa::core::CollisionElementIterator sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::collisionElementIterator. ◆ context. sofa::core::objectmodel::BaseContext* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::context {nullptr}. ◆ doesBoxSelfCollide. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::doesBoxSelfCollide {false}. ◆ isBoxSimulated. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isBoxSimulated {false}. ◆ isInBroadPhase. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isInBroadPhase {false}. ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::lastCollisionModel {nullptr}. sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhaseBoxData; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html:1319,Safety,detect,detection,1319,﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference . #include <DirectSAPNarrowPhase.h>. Public Attributes; core::CollisionModel * lastCollisionModel {nullptr};  ; sofa::core::objectmodel::BaseContext * context {nullptr};  ; bool isBoxSimulated {false};  ; bool doesBoxSelfCollide {false};  ; sofa::core::CollisionElementIterator collisionElementIterator;  ; bool isInBroadPhase {false};  . Attribute details. ◆ collisionElementIterator. sofa::core::CollisionElementIterator sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::collisionElementIterator. ◆ context. sofa::core::objectmodel::BaseContext* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::context {nullptr}. ◆ doesBoxSelfCollide. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::doesBoxSelfCollide {false}. ◆ isBoxSimulated. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isBoxSimulated {false}. ◆ isInBroadPhase. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isInBroadPhase {false}. ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::lastCollisionModel {nullptr}. sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhaseBoxData; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html:1468,Safety,detect,detection,1468,﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData Struct Reference . #include <DirectSAPNarrowPhase.h>. Public Attributes; core::CollisionModel * lastCollisionModel {nullptr};  ; sofa::core::objectmodel::BaseContext * context {nullptr};  ; bool isBoxSimulated {false};  ; bool doesBoxSelfCollide {false};  ; sofa::core::CollisionElementIterator collisionElementIterator;  ; bool isInBroadPhase {false};  . Attribute details. ◆ collisionElementIterator. sofa::core::CollisionElementIterator sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::collisionElementIterator. ◆ context. sofa::core::objectmodel::BaseContext* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::context {nullptr}. ◆ doesBoxSelfCollide. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::doesBoxSelfCollide {false}. ◆ isBoxSimulated. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isBoxSimulated {false}. ◆ isInBroadPhase. bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::isInBroadPhase {false}. ◆ lastCollisionModel. core::CollisionModel* sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::BoxData::lastCollisionModel {nullptr}. sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhaseBoxData; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase_1_1_box_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model_1_1_cube_data-members.html:304,Modifiability,inherit,inherited,304,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::CubeCollisionModel::CubeData Member List . This is the complete list of members for sofa::component::collision::geometry::CubeCollisionModel::CubeData, including all inherited members. childrensofa::component::collision::geometry::CubeCollisionModel::CubeData; coneAnglesofa::component::collision::geometry::CubeCollisionModel::CubeData; coneAxissofa::component::collision::geometry::CubeCollisionModel::CubeData; maxBBoxsofa::component::collision::geometry::CubeCollisionModel::CubeData; minBBoxsofa::component::collision::geometry::CubeCollisionModel::CubeData; subcellssofa::component::collision::geometry::CubeCollisionModel::CubeData. Generated on Mon Nov 11 2024 02:19:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model_1_1_cube_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model_1_1_cube_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model_1_1_line_data-members.html:332,Modifiability,inherit,inherited,332,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::LineData Member List . This is the complete list of members for sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::LineData, including all inherited members. psofa::component::collision::geometry::LineCollisionModel< TDataTypes >::LineData. Generated on Mon Nov 11 2024 02:23:57 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model_1_1_line_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model_1_1_line_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model_1_1_tetrahedron_info-members.html:332,Modifiability,inherit,inherited,332,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::geometry::TetrahedronCollisionModel::TetrahedronInfo Member List . This is the complete list of members for sofa::component::collision::geometry::TetrahedronCollisionModel::TetrahedronInfo, including all inherited members. bary2coordsofa::component::collision::geometry::TetrahedronCollisionModel::TetrahedronInfo; coord0sofa::component::collision::geometry::TetrahedronCollisionModel::TetrahedronInfo; coord2barysofa::component::collision::geometry::TetrahedronCollisionModel::TetrahedronInfo. Generated on Mon Nov 11 2024 02:24:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model_1_1_tetrahedron_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model_1_1_tetrahedron_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_constraint_activation-members.html:318,Modifiability,inherit,inherited,318,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::correction::ConstraintActivation Member List . This is the complete list of members for sofa::component::constraint::lagrangian::correction::ConstraintActivation, including all inherited members. accsofa::component::constraint::lagrangian::correction::ConstraintActivation; possofa::component::constraint::lagrangian::correction::ConstraintActivation; velsofa::component::constraint::lagrangian::correction::ConstraintActivation. Generated on Mon Nov 11 2024 02:34:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_constraint_activation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_constraint_activation-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_cor29f9ce25ba5bafcd2d240d35d757ef1e.html:400,Modifiability,inherit,inherited,400,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::InverseStorage Member List . This is the complete list of members for sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::InverseStorage, including all inherited members. datasofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::InverseStorage; InverseStorage()sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::InverseStorageinline; nbrefsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::InverseStorage. Generated on Mon Nov 11 2024 02:34:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_cor29f9ce25ba5bafcd2d240d35d757ef1e.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_cor29f9ce25ba5bafcd2d240d35d757ef1e.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint_1_1_contact-members.html:372,Modifiability,inherit,inherited,372,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact Member List . This is the complete list of members for sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact, including all inherited members. contactDistancesofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; contactIdsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; dfreesofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contactmutable; idsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; localIdsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; m1sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; m2sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; musofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; normsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; Psofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; Qsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; ssofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact; tsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::Contact. Generated on Mon Nov 11 2024 02:36:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint_1_1_contact-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint_1_1_contact-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint_1_1_oscillator-members.html:366,Modifiability,inherit,inherited,366,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator Member List . This is the complete list of members for sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator, including all inherited members. amplitudesofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator; indexsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator; meansofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator; operator<<(std::ostream &out, const Oscillator &o)sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillatorfriend; operator>>(std::istream &in, Oscillator &o)sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillatorfriend; Oscillator()sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator; Oscillator(unsigned int i, const Coord &m, const Deriv &a, const Real &w, const Real &p)sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator; phasesofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator; pulsationsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::Oscillator. Generated on Mon Nov 11 2024 02:37:57 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint_1_1_oscillator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint_1_1_oscillator-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1projective_1_1_skeleton_joint-members.html:306,Modifiability,inherit,inherited,306,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::projective::SkeletonJoint< DataTypes > Member List . This is the complete list of members for sofa::component::constraint::projective::SkeletonJoint< DataTypes >, including all inherited members. addChannel(Coord channel, double time)sofa::component::constraint::projective::SkeletonJoint< DataTypes >inline; Coord typedefsofa::component::constraint::projective::SkeletonJoint< DataTypes >; mChannelssofa::component::constraint::projective::SkeletonJoint< DataTypes >; mParentIndexsofa::component::constraint::projective::SkeletonJoint< DataTypes >; mTimessofa::component::constraint::projective::SkeletonJoint< DataTypes >; operator<<(std::ostream &out, const SkeletonJoint &skeletonJoint)sofa::component::constraint::projective::SkeletonJoint< DataTypes >friend; operator>>(std::istream &in, SkeletonJoint &skeletonJoint)sofa::component::constraint::projective::SkeletonJoint< DataTypes >friend; setRestPosition(const Coord &restPosition)sofa::component::constraint::projective::SkeletonJoint< DataTypes >inline; SkeletalMotionProjectiveConstraint< DataTypes > classsofa::component::constraint::projective::SkeletonJoint< DataTypes >friend; SkeletonJoint()sofa::component::constraint::projective::SkeletonJoint< DataTypes >inline; ~SkeletonJoint()sofa::component::constraint::projective::SkeletonJoint< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:38:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1projective_1_1_skeleton_joint-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1constraint_1_1projective_1_1_skeleton_joint-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i_1_1_oriented_box-members.html:318,Modifiability,inherit,inherited,318,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox Member List . This is the complete list of members for sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox, including all inherited members. depthsofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; lengthsofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; normalsofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; p0sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; p2sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; plane0sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; plane1sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; plane2sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; plane3sofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; Real typedefsofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; Vec3 typedefsofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox; widthsofa::component::engine::select::boxroi::BoxROI< DataTypes >::OrientedBox. Generated on Mon Nov 11 2024 02:42:39 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i_1_1_oriented_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i_1_1_oriented_box-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions_1_1_temp_data-members.html:322,Modifiability,inherit,inherited,322,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData Member List . This is the complete list of members for sofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData, including all inherited members. bmaxsofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData; bminsofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData; dirsofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData; inputValuessofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData; x0sofa::component::engine::select::ValuesFromPositions< DataTypes >::TempData. Generated on Mon Nov 11 2024 02:42:39 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions_1_1_temp_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions_1_1_temp_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_add-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpAdd< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpAdd< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpAdd< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpAdd< T >inline. Generated on Mon Nov 11 2024 02:44:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_add-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_add-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_and-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpAnd< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpAnd< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpAnd< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpAnd< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_and-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_and-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_apply-members.html:282,Modifiability,inherit,inherited,282,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpApply< TOps > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpApply< TOps >, including all inherited members. apply(const std::string &op, Data< VecValue > *d_out, const type::vector< Data< VecValue > * > &d_in)sofa::component::engine::transform::MathOpApply< TOps >inlinestatic; isSupported(const std::string &op)sofa::component::engine::transform::MathOpApply< TOps >inlinestatic. Generated on Mon Nov 11 2024 02:44:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_apply-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_apply-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_apply_3_01std_1_1pair_3_01_t_ops1_00_01_t_ops2_01_4_01_4-members.html:324,Modifiability,inherit,inherited,324,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpApply< std::pair< TOps1, TOps2 > > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpApply< std::pair< TOps1, TOps2 > >, including all inherited members. apply(const std::string &op, Data< VecValue > *d_out, const type::vector< Data< VecValue > * > &d_in)sofa::component::engine::transform::MathOpApply< std::pair< TOps1, TOps2 > >inlinestatic; isSupported(const std::string &op)sofa::component::engine::transform::MathOpApply< std::pair< TOps1, TOps2 > >inlinestatic. Generated on Mon Nov 11 2024 02:44:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_apply_3_01std_1_1pair_3_01_t_ops1_00_01_t_ops2_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_apply_3_01std_1_1pair_3_01_t_ops1_00_01_t_ops2_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_div-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpDiv< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpDiv< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpDiv< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpDiv< T >inline. Generated on Mon Nov 11 2024 02:44:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_div-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_div-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_max-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpMax< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpMax< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpMax< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpMax< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_max-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_max-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_min-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpMin< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpMin< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpMin< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpMin< T >inline. Generated on Mon Nov 11 2024 02:44:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_min-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_min-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_mul-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpMul< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpMul< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpMul< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpMul< T >inline. Generated on Mon Nov 11 2024 02:44:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_mul-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_mul-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_names-members.html:282,Modifiability,inherit,inherited,282,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpNames< TOps > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpNames< TOps >, including all inherited members. get(type::vector< std::string > &out)sofa::component::engine::transform::MathOpNames< TOps >inlinestatic. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_names-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_names-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_names_3_01std_1_1pair_3_01_t_ops1_00_01_t_ops2_01_4_01_4-members.html:324,Modifiability,inherit,inherited,324,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpNames< std::pair< TOps1, TOps2 > > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpNames< std::pair< TOps1, TOps2 > >, including all inherited members. get(type::vector< std::string > &out)sofa::component::engine::transform::MathOpNames< std::pair< TOps1, TOps2 > >inlinestatic. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_names_3_01std_1_1pair_3_01_t_ops1_00_01_t_ops2_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_names_3_01std_1_1pair_3_01_t_ops1_00_01_t_ops2_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_not-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpNot< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpNot< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpNot< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpNot< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_not-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_not-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_n_and-members.html:274,Modifiability,inherit,inherited,274,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpNAnd< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpNAnd< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpNAnd< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpNAnd< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_n_and-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_n_and-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_n_or-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpNOr< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpNOr< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpNOr< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpNOr< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_n_or-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_n_or-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_or-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpOr< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpOr< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpOr< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpOr< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_or-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_or-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_sub-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpSub< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpSub< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpSub< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpSub< T >inline. Generated on Mon Nov 11 2024 02:44:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_sub-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_sub-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits-members.html:278,Modifiability,inherit,inherited,278,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpTraits< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpTraits< T >, including all inherited members. Ops typedefsofa::component::engine::transform::MathOpTraits< T >. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_bool-members.html:286,Modifiability,inherit,inherited,286,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpTraitsBool< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpTraitsBool< T >, including all inherited members. Ops typedefsofa::component::engine::transform::MathOpTraitsBool< T >. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_bool-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_bool-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_bool.html:305,Modifiability,Inherit,Inheritance,305,﻿. SOFA API: sofa::component::engine::transform::MathOpTraitsBool< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::component::engine::transform::MathOpTraitsBool< T > Struct Template Reference . Bool-like ops. ; More... Inheritance diagram for sofa::component::engine::transform::MathOpTraitsBool< T >:. [legend]; Detailed Description; template<typename T>; struct sofa::component::engine::transform::MathOpTraitsBool< T >; Bool-like ops. . sofacomponentenginetransformMathOpTraitsBool; Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_bool.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_bool.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_real-members.html:286,Modifiability,inherit,inherited,286,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpTraitsReal< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpTraitsReal< T >, including all inherited members. Ops typedefsofa::component::engine::transform::MathOpTraitsReal< T >. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_real-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_real-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_real.html:305,Modifiability,Inherit,Inheritance,305,﻿. SOFA API: sofa::component::engine::transform::MathOpTraitsReal< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::component::engine::transform::MathOpTraitsReal< T > Struct Template Reference . Real-like ops. ; More... Inheritance diagram for sofa::component::engine::transform::MathOpTraitsReal< T >:. [legend]; Detailed Description; template<typename T>; struct sofa::component::engine::transform::MathOpTraitsReal< T >; Real-like ops. . sofacomponentenginetransformMathOpTraitsReal; Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_real.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_real.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_vec_real-members.html:292,Modifiability,inherit,inherited,292,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpTraitsVecReal< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpTraitsVecReal< T >, including all inherited members. Ops typedefsofa::component::engine::transform::MathOpTraitsVecReal< T >. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_vec_real-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_vec_real-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_vec_real.html:311,Modifiability,Inherit,Inheritance,311,﻿. SOFA API: sofa::component::engine::transform::MathOpTraitsVecReal< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::component::engine::transform::MathOpTraitsVecReal< T > Struct Template Reference . Real-like ops. ; More... Inheritance diagram for sofa::component::engine::transform::MathOpTraitsVecReal< T >:. [legend]; Detailed Description; template<typename T>; struct sofa::component::engine::transform::MathOpTraitsVecReal< T >; Real-like ops. . sofacomponentenginetransformMathOpTraitsVecReal; Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_vec_real.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_traits_vec_real.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_xor-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpXor< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpXor< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpXor< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpXor< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_xor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_xor-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_x_nor-members.html:274,Modifiability,inherit,inherited,274,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::MathOpXNor< T > Member List . This is the complete list of members for sofa::component::engine::transform::MathOpXNor< T >, including all inherited members. Name()sofa::component::engine::transform::MathOpXNor< T >inlinestatic; operator()(T *out, const type::vector< T > &in)sofa::component::engine::transform::MathOpXNor< T >inline. Generated on Mon Nov 11 2024 02:44:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_x_nor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_math_op_x_nor-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation-members.html:286,Modifiability,inherit,inherited,286,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::Rotation< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::Rotation< DataTypes >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >inline; configure(const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *)sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation-members.html:305,Modifiability,config,configure,305,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::Rotation< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::Rotation< DataTypes >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >inline; configure(const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *)sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation-members.html:516,Modifiability,config,configure,516,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::Rotation< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::Rotation< DataTypes >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >inline; configure(const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *)sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html:280,Modifiability,Inherit,Inheritance,280,"﻿. SOFA API: sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Rotation< DataTypes >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . sofacomponentenginetransformRotation; Generated on Mon Nov 11 2024 02:45:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html:385,Modifiability,Inherit,Inherited,385,"﻿. SOFA API: sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Rotation< DataTypes >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . sofacomponentenginetransformRotation; Generated on Mon Nov 11 2024 02:45:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html:429,Modifiability,inherit,inherited,429,"﻿. SOFA API: sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Rotation< DataTypes >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . sofacomponentenginetransformRotation; Generated on Mon Nov 11 2024 02:45:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html:664,Modifiability,config,configure,664,"﻿. SOFA API: sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Rotation< DataTypes >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . sofacomponentenginetransformRotation; Generated on Mon Nov 11 2024 02:45:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html:719,Modifiability,config,configure,719,"﻿. SOFA API: sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Rotation< DataTypes >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . sofacomponentenginetransformRotation; Generated on Mon Nov 11 2024 02:45:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html:837,Modifiability,inherit,inherited,837,"﻿. SOFA API: sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::component::engine::transform::Rotation< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Rotation< DataTypes >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . sofacomponentenginetransformRotation; Generated on Mon Nov 11 2024 02:45:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized-members.html:334,Modifiability,inherit,inherited,334,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Member List . This is the complete list of members for sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >inline; configure(const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *)sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized-members.html:353,Modifiability,config,configure,353,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Member List . This is the complete list of members for sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >inline; configure(const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *)sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized-members.html:486,Modifiability,config,configure,486,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Member List . This is the complete list of members for sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >inline; configure(const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *)sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html:355,Modifiability,Inherit,Inheritance,355,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized; Generated on Mon Nov 11 2024 02:45:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html:557,Modifiability,config,configure,557,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized; Generated on Mon Nov 11 2024 02:45:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html:612,Modifiability,config,configure,612,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized; Generated on Mon Nov 11 2024 02:45:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html:730,Modifiability,inherit,inherited,730,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized; Generated on Mon Nov 11 2024 02:45:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html:869,Modifiability,config,configure,869,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized; Generated on Mon Nov 11 2024 02:45:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html:1027,Modifiability,config,configure,1027,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized; Generated on Mon Nov 11 2024 02:45:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html:1147,Modifiability,config,configure,1147,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized; Generated on Mon Nov 11 2024 02:45:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html:1305,Modifiability,config,configure,1305,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes , int N, bool isVector> . void sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized; Generated on Mon Nov 11 2024 02:45:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4-members.html:328,Modifiability,inherit,inherited,328,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Member List . This is the complete list of members for sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >inline; configure(const type::Quat< SReal > &, bool, sofa::core::objectmodel::Base *pBase)sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4-members.html:347,Modifiability,config,configure,347,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Member List . This is the complete list of members for sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >inline; configure(const type::Quat< SReal > &, bool, sofa::core::objectmodel::Base *pBase)sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4-members.html:477,Modifiability,config,configure,477,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Member List . This is the complete list of members for sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >inline; configure(const type::Quat< SReal > &, bool, sofa::core::objectmodel::Base *pBase)sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html:349,Modifiability,Inherit,Inheritance,349,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &, bool, sofa::core::objectmodel::Base *pBase);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Quat< SReal > & ; , . bool ; , . sofa::core::objectmodel::Base * ; pBase . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 2, false >; Generated on Mon Nov 11 2024 02:45:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html:548,Modifiability,config,configure,548,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &, bool, sofa::core::objectmodel::Base *pBase);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Quat< SReal > & ; , . bool ; , . sofa::core::objectmodel::Base * ; pBase . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 2, false >; Generated on Mon Nov 11 2024 02:45:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html:603,Modifiability,config,configure,603,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &, bool, sofa::core::objectmodel::Base *pBase);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Quat< SReal > & ; , . bool ; , . sofa::core::objectmodel::Base * ; pBase . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 2, false >; Generated on Mon Nov 11 2024 02:45:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html:716,Modifiability,inherit,inherited,716,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &, bool, sofa::core::objectmodel::Base *pBase);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Quat< SReal > & ; , . bool ; , . sofa::core::objectmodel::Base * ; pBase . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 2, false >; Generated on Mon Nov 11 2024 02:45:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html:855,Modifiability,config,configure,855,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &, bool, sofa::core::objectmodel::Base *pBase);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Quat< SReal > & ; , . bool ; , . sofa::core::objectmodel::Base * ; pBase . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 2, false >; Generated on Mon Nov 11 2024 02:45:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html:988,Modifiability,config,configure,988,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &, bool, sofa::core::objectmodel::Base *pBase);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Quat< SReal > & ; , . bool ; , . sofa::core::objectmodel::Base * ; pBase . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 2, false >; Generated on Mon Nov 11 2024 02:45:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html:1104,Modifiability,config,configure,1104,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &, bool, sofa::core::objectmodel::Base *pBase);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Quat< SReal > & ; , . bool ; , . sofa::core::objectmodel::Base * ; pBase . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 2, false >; Generated on Mon Nov 11 2024 02:45:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html:1237,Modifiability,config,configure,1237,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &, bool, sofa::core::objectmodel::Base *pBase);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Quat< SReal > & ; , . bool ; , . sofa::core::objectmodel::Base * ; pBase . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 2, false >; Generated on Mon Nov 11 2024 02:45:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_012_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4-members.html:328,Modifiability,inherit,inherited,328,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Member List . This is the complete list of members for sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >inline; configure(const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *)sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4-members.html:347,Modifiability,config,configure,347,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Member List . This is the complete list of members for sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >inline; configure(const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *)sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4-members.html:477,Modifiability,config,configure,477,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Member List . This is the complete list of members for sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >, including all inherited members. configure(const type::Vec3 &r, bool inverse)sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >inline; configure(const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *)sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >inlinevirtual; Real typedefsofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html:349,Modifiability,Inherit,Inheritance,349,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 3, false >; Generated on Mon Nov 11 2024 02:45:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html:548,Modifiability,config,configure,548,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 3, false >; Generated on Mon Nov 11 2024 02:45:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html:603,Modifiability,config,configure,603,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 3, false >; Generated on Mon Nov 11 2024 02:45:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html:721,Modifiability,inherit,inherited,721,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 3, false >; Generated on Mon Nov 11 2024 02:45:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html:860,Modifiability,config,configure,860,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 3, false >; Generated on Mon Nov 11 2024 02:45:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html:993,Modifiability,config,configure,993,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 3, false >; Generated on Mon Nov 11 2024 02:45:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html:1113,Modifiability,config,configure,1113,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 3, false >; Generated on Mon Nov 11 2024 02:45:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html:1246,Modifiability,config,configure,1246,"﻿. SOFA API: sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >:. [legend]. Public Member Functions; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &r, bool inverse);  ; void configure (const type::Quat< SReal > &qi, bool inverse, sofa::core::objectmodel::Base *);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Function details. ◆ configure() [1/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Quat< SReal > & ; qi, . bool ; inverse, . sofa::core::objectmodel::Base * ;  . ). inline . ◆ configure() [2/2]. template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::configure ; (; const type::Vec3 & ; r, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformRotationSpecialized< DataTypes, 3, false >; Generated on Mon Nov 11 2024 02:45:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_rotation_specialized_3_01_data_types_00_013_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale-members.html:280,Modifiability,inherit,inherited,280,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::Scale< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::Scale< DataTypes >, including all inherited members. configure(const type::Vec3 &s, bool inverse)sofa::component::engine::transform::Scale< DataTypes >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::Scale< DataTypes >inlinevirtual; Real typedefsofa::component::engine::transform::Scale< DataTypes >; Scale()sofa::component::engine::transform::Scale< DataTypes >inline; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale-members.html:299,Modifiability,config,configure,299,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::Scale< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::Scale< DataTypes >, including all inherited members. configure(const type::Vec3 &s, bool inverse)sofa::component::engine::transform::Scale< DataTypes >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::Scale< DataTypes >inlinevirtual; Real typedefsofa::component::engine::transform::Scale< DataTypes >; Scale()sofa::component::engine::transform::Scale< DataTypes >inline; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html:301,Modifiability,Inherit,Inheritance,301,"﻿. SOFA API: sofa::component::engine::transform::Scale< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::Scale< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Scale< DataTypes >:. [legend]. Public Member Functions;  Scale ();  ; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &s, bool inverse);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Constructor details. ◆ Scale(). template<class DataTypes > . sofa::component::engine::transform::Scale< DataTypes >::Scale ; (; ). inline . Function details. ◆ configure(). template<class DataTypes > . void sofa::component::engine::transform::Scale< DataTypes >::configure ; (; const type::Vec3 & ; s, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::Scale< DataTypes >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformScale; Generated on Mon Nov 11 2024 02:45:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html:490,Modifiability,config,configure,490,"﻿. SOFA API: sofa::component::engine::transform::Scale< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::Scale< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Scale< DataTypes >:. [legend]. Public Member Functions;  Scale ();  ; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &s, bool inverse);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Constructor details. ◆ Scale(). template<class DataTypes > . sofa::component::engine::transform::Scale< DataTypes >::Scale ; (; ). inline . Function details. ◆ configure(). template<class DataTypes > . void sofa::component::engine::transform::Scale< DataTypes >::configure ; (; const type::Vec3 & ; s, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::Scale< DataTypes >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformScale; Generated on Mon Nov 11 2024 02:45:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html:565,Modifiability,inherit,inherited,565,"﻿. SOFA API: sofa::component::engine::transform::Scale< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::Scale< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Scale< DataTypes >:. [legend]. Public Member Functions;  Scale ();  ; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &s, bool inverse);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Constructor details. ◆ Scale(). template<class DataTypes > . sofa::component::engine::transform::Scale< DataTypes >::Scale ; (; ). inline . Function details. ◆ configure(). template<class DataTypes > . void sofa::component::engine::transform::Scale< DataTypes >::configure ; (; const type::Vec3 & ; s, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::Scale< DataTypes >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformScale; Generated on Mon Nov 11 2024 02:45:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html:844,Modifiability,config,configure,844,"﻿. SOFA API: sofa::component::engine::transform::Scale< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::Scale< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Scale< DataTypes >:. [legend]. Public Member Functions;  Scale ();  ; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &s, bool inverse);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Constructor details. ◆ Scale(). template<class DataTypes > . sofa::component::engine::transform::Scale< DataTypes >::Scale ; (; ). inline . Function details. ◆ configure(). template<class DataTypes > . void sofa::component::engine::transform::Scale< DataTypes >::configure ; (; const type::Vec3 & ; s, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::Scale< DataTypes >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformScale; Generated on Mon Nov 11 2024 02:45:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html:947,Modifiability,config,configure,947,"﻿. SOFA API: sofa::component::engine::transform::Scale< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::Scale< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Scale< DataTypes >:. [legend]. Public Member Functions;  Scale ();  ; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &s, bool inverse);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Constructor details. ◆ Scale(). template<class DataTypes > . sofa::component::engine::transform::Scale< DataTypes >::Scale ; (; ). inline . Function details. ◆ configure(). template<class DataTypes > . void sofa::component::engine::transform::Scale< DataTypes >::configure ; (; const type::Vec3 & ; s, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::Scale< DataTypes >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformScale; Generated on Mon Nov 11 2024 02:45:00 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_scale.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_transform-members.html:288,Modifiability,inherit,inherited,288,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::Transform< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::Transform< DataTypes >, including all inherited members. add(Operation *op, bool inverse)sofa::component::engine::transform::Transform< DataTypes >inline; getOperations()sofa::component::engine::transform::Transform< DataTypes >inline; Op typedefsofa::component::engine::transform::Transform< DataTypes >; operator()(typename DataTypes::Coord &v) constsofa::component::engine::transform::Transform< DataTypes >inline. Generated on Mon Nov 11 2024 02:45:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_transform-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_transform-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_transform_operation-members.html:306,Modifiability,inherit,inherited,306,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::TransformOperation< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::TransformOperation< DataTypes >, including all inherited members. execute(typename DataTypes::Coord &v) const =0sofa::component::engine::transform::TransformOperation< DataTypes >pure virtual; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:44:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_transform_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_transform_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_transform_operation.html:335,Modifiability,Inherit,Inheritance,335,"﻿. SOFA API: sofa::component::engine::transform::TransformOperation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::TransformOperation< DataTypes > Struct Template Referenceabstract . Inheritance diagram for sofa::component::engine::transform::TransformOperation< DataTypes >:. [legend]. Public Member Functions; virtual ~TransformOperation ();  ; virtual void execute (typename DataTypes::Coord &v) const =0;  . Constructor details. ◆ ~TransformOperation(). template<class DataTypes > . virtual sofa::component::engine::transform::TransformOperation< DataTypes >::~TransformOperation ; (; ). inlinevirtual . Function details. ◆ execute(). template<class DataTypes > . virtual void sofa::component::engine::transform::TransformOperation< DataTypes >::execute ; (; typename DataTypes::Coord & ; v); const. pure virtual . Implemented in sofa::component::engine::transform::Translation< DataTypes >, sofa::component::engine::transform::RotationSpecialized< DataTypes, 3, false >, sofa::component::engine::transform::RotationSpecialized< DataTypes, 2, false >, sofa::component::engine::transform::RotationSpecialized< DataTypes, N, isVector >, sofa::component::engine::transform::RotationSpecialized< DataTypes, DataTypes::spatial_dimensions, DataTypes::coord_total_size==DataTypes::spatial_dimensions >, and sofa::component::engine::transform::Scale< DataTypes >. sofacomponentenginetransformTransformOperation; Generated on Mon Nov 11 2024 02:44:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_transform_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_transform_operation.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation-members.html:292,Modifiability,inherit,inherited,292,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::Translation< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::Translation< DataTypes >, including all inherited members. configure(const type::Vec3 &t, bool inverse)sofa::component::engine::transform::Translation< DataTypes >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::Translation< DataTypes >inlinevirtual; Real typedefsofa::component::engine::transform::Translation< DataTypes >; Translation()sofa::component::engine::transform::Translation< DataTypes >inline; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation-members.html:311,Modifiability,config,configure,311,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::engine::transform::Translation< DataTypes > Member List . This is the complete list of members for sofa::component::engine::transform::Translation< DataTypes >, including all inherited members. configure(const type::Vec3 &t, bool inverse)sofa::component::engine::transform::Translation< DataTypes >inline; execute(typename DataTypes::Coord &p) constsofa::component::engine::transform::Translation< DataTypes >inlinevirtual; Real typedefsofa::component::engine::transform::Translation< DataTypes >; Translation()sofa::component::engine::transform::Translation< DataTypes >inline; ~TransformOperation()sofa::component::engine::transform::TransformOperation< DataTypes >inlinevirtual. Generated on Mon Nov 11 2024 02:45:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html:313,Modifiability,Inherit,Inheritance,313,"﻿. SOFA API: sofa::component::engine::transform::Translation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::Translation< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Translation< DataTypes >:. [legend]. Public Member Functions;  Translation ();  ; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &t, bool inverse);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Constructor details. ◆ Translation(). template<class DataTypes > . sofa::component::engine::transform::Translation< DataTypes >::Translation ; (; ). inline . Function details. ◆ configure(). template<class DataTypes > . void sofa::component::engine::transform::Translation< DataTypes >::configure ; (; const type::Vec3 & ; t, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::Translation< DataTypes >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformTranslation; Generated on Mon Nov 11 2024 02:45:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html:514,Modifiability,config,configure,514,"﻿. SOFA API: sofa::component::engine::transform::Translation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::Translation< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Translation< DataTypes >:. [legend]. Public Member Functions;  Translation ();  ; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &t, bool inverse);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Constructor details. ◆ Translation(). template<class DataTypes > . sofa::component::engine::transform::Translation< DataTypes >::Translation ; (; ). inline . Function details. ◆ configure(). template<class DataTypes > . void sofa::component::engine::transform::Translation< DataTypes >::configure ; (; const type::Vec3 & ; t, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::Translation< DataTypes >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformTranslation; Generated on Mon Nov 11 2024 02:45:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html:589,Modifiability,inherit,inherited,589,"﻿. SOFA API: sofa::component::engine::transform::Translation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::Translation< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Translation< DataTypes >:. [legend]. Public Member Functions;  Translation ();  ; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &t, bool inverse);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Constructor details. ◆ Translation(). template<class DataTypes > . sofa::component::engine::transform::Translation< DataTypes >::Translation ; (; ). inline . Function details. ◆ configure(). template<class DataTypes > . void sofa::component::engine::transform::Translation< DataTypes >::configure ; (; const type::Vec3 & ; t, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::Translation< DataTypes >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformTranslation; Generated on Mon Nov 11 2024 02:45:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html:886,Modifiability,config,configure,886,"﻿. SOFA API: sofa::component::engine::transform::Translation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::Translation< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Translation< DataTypes >:. [legend]. Public Member Functions;  Translation ();  ; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &t, bool inverse);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Constructor details. ◆ Translation(). template<class DataTypes > . sofa::component::engine::transform::Translation< DataTypes >::Translation ; (; ). inline . Function details. ◆ configure(). template<class DataTypes > . void sofa::component::engine::transform::Translation< DataTypes >::configure ; (; const type::Vec3 & ; t, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::Translation< DataTypes >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformTranslation; Generated on Mon Nov 11 2024 02:45:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html:995,Modifiability,config,configure,995,"﻿. SOFA API: sofa::component::engine::transform::Translation< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::engine::transform::Translation< DataTypes > Struct Template Reference . Inheritance diagram for sofa::component::engine::transform::Translation< DataTypes >:. [legend]. Public Member Functions;  Translation ();  ; void execute (typename DataTypes::Coord &p) const;  ; void configure (const type::Vec3 &t, bool inverse);  ;  Public Member Functions inherited from sofa::component::engine::transform::TransformOperation< DataTypes >; virtual ~TransformOperation ();  . Constructor details. ◆ Translation(). template<class DataTypes > . sofa::component::engine::transform::Translation< DataTypes >::Translation ; (; ). inline . Function details. ◆ configure(). template<class DataTypes > . void sofa::component::engine::transform::Translation< DataTypes >::configure ; (; const type::Vec3 & ; t, . bool ; inverse . ). inline . ◆ execute(). template<class DataTypes > . void sofa::component::engine::transform::Translation< DataTypes >::execute ; (; typename DataTypes::Coord & ; p); const. inlinevirtual . Implements sofa::component::engine::transform::TransformOperation< DataTypes >. sofacomponentenginetransformTranslation; Generated on Mon Nov 11 2024 02:45:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1engine_1_1transform_1_1_translation.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy-members.html:290,Modifiability,inherit,inherited,290,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsolver::direct::BaseEigenSolverProxy Member List . This is the complete list of members for sofa::component::linearsolver::direct::BaseEigenSolverProxy, including all inherited members. analyzePattern(const EigenSparseMatrixMap< float > &a)=0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; analyzePattern(const EigenSparseMatrixMap< double > &a)=0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; EigenSparseMatrix typedefsofa::component::linearsolver::direct::BaseEigenSolverProxy; EigenSparseMatrixMap typedefsofa::component::linearsolver::direct::BaseEigenSolverProxy; EigenVectorXdMap typedefsofa::component::linearsolver::direct::BaseEigenSolverProxy; factorize(const EigenSparseMatrixMap< float > &a)=0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; factorize(const EigenSparseMatrixMap< double > &a)=0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; info() const =0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; solve(const EigenVectorXdMap< float > &b, EigenVectorXdMap< float > &x) const =0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; solve(const EigenVectorXdMap< double > &b, EigenVectorXdMap< double > &x) const =0sofa::component::linearsolver::direct::BaseEigenSolverProxypure virtual; ~BaseEigenSolverProxy()sofa::component::linearsolver::direct::BaseEigenSolverProxyinlinevirtual. Generated on Mon Nov 11 2024 02:47:30 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy.html:459,Integrability,wrap,wrapper,459,"﻿. SOFA API: sofa::component::linearsolver::direct::BaseEigenSolverProxy Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::linearsolver::direct::BaseEigenSolverProxy Struct Referenceabstract . #include <EigenSolverFactory.h>. Inheritance diagram for sofa::component::linearsolver::direct::BaseEigenSolverProxy:. [legend]; Detailed Description; A base wrapper class for all solvers based on the Eigen library . Public Member Functions; virtual ~BaseEigenSolverProxy ();  ; virtual Eigen::ComputationInfo info () const =0;  ; virtual void solve (const EigenVectorXdMap< float > &b, EigenVectorXdMap< float > &x) const =0;  ; virtual void solve (const EigenVectorXdMap< double > &b, EigenVectorXdMap< double > &x) const =0;  ; virtual void analyzePattern (const EigenSparseMatrixMap< float > &a)=0;  ; virtual void analyzePattern (const EigenSparseMatrixMap< double > &a)=0;  ; virtual void factorize (const EigenSparseMatrixMap< float > &a)=0;  ; virtual void factorize (const EigenSparseMatrixMap< double > &a)=0;  . Constructor details. ◆ ~BaseEigenSolverProxy(). virtual sofa::component::linearsolver::direct::BaseEigenSolverProxy::~BaseEigenSolverProxy ; (; ). inlinevirtual . Function details. ◆ analyzePattern() [1/2]. virtual void sofa::component::linearsolver::direct::BaseEigenSolverProxy::analyzePattern ; (; const EigenSparseMatrixMap< double > & ; a). pure virtual . Implemented in sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >. ◆ analyzePattern() [2/2]. virtual void sofa::component::linearsolver::direct::BaseEigenSolverProxy::analyzePattern ; (; const EigenSparseMatrixMap< float > & ; a). pure virtual . Implemented in sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >. ◆ factorize() [1/2]. virtual void sofa::component::linearsolver::direct::BaseEigenSolverProxy::factorize ; (; const EigenSparseMatrixMap< double > & ; a). pure v",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy.html:334,Modifiability,Inherit,Inheritance,334,"﻿. SOFA API: sofa::component::linearsolver::direct::BaseEigenSolverProxy Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::linearsolver::direct::BaseEigenSolverProxy Struct Referenceabstract . #include <EigenSolverFactory.h>. Inheritance diagram for sofa::component::linearsolver::direct::BaseEigenSolverProxy:. [legend]; Detailed Description; A base wrapper class for all solvers based on the Eigen library . Public Member Functions; virtual ~BaseEigenSolverProxy ();  ; virtual Eigen::ComputationInfo info () const =0;  ; virtual void solve (const EigenVectorXdMap< float > &b, EigenVectorXdMap< float > &x) const =0;  ; virtual void solve (const EigenVectorXdMap< double > &b, EigenVectorXdMap< double > &x) const =0;  ; virtual void analyzePattern (const EigenSparseMatrixMap< float > &a)=0;  ; virtual void analyzePattern (const EigenSparseMatrixMap< double > &a)=0;  ; virtual void factorize (const EigenSparseMatrixMap< float > &a)=0;  ; virtual void factorize (const EigenSparseMatrixMap< double > &a)=0;  . Constructor details. ◆ ~BaseEigenSolverProxy(). virtual sofa::component::linearsolver::direct::BaseEigenSolverProxy::~BaseEigenSolverProxy ; (; ). inlinevirtual . Function details. ◆ analyzePattern() [1/2]. virtual void sofa::component::linearsolver::direct::BaseEigenSolverProxy::analyzePattern ; (; const EigenSparseMatrixMap< double > & ; a). pure virtual . Implemented in sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >. ◆ analyzePattern() [2/2]. virtual void sofa::component::linearsolver::direct::BaseEigenSolverProxy::analyzePattern ; (; const EigenSparseMatrixMap< float > & ; a). pure virtual . Implemented in sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >. ◆ factorize() [1/2]. virtual void sofa::component::linearsolver::direct::BaseEigenSolverProxy::factorize ; (; const EigenSparseMatrixMap< double > & ; a). pure v",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_factory_1_1_ordering_method_name-members.html:326,Modifiability,inherit,inherited,326,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsolver::direct::EigenSolverFactory::OrderingMethodName Member List . This is the complete list of members for sofa::component::linearsolver::direct::EigenSolverFactory::OrderingMethodName, including all inherited members. namesofa::component::linearsolver::direct::EigenSolverFactory::OrderingMethodName; operator<(const OrderingMethodName &other) constsofa::component::linearsolver::direct::EigenSolverFactory::OrderingMethodNameinline; scalarsofa::component::linearsolver::direct::EigenSolverFactory::OrderingMethodName. Generated on Mon Nov 11 2024 02:47:30 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_factory_1_1_ordering_method_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_factory_1_1_ordering_method_name-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_7859c7675710ba6285f55f982a734768.html:376,Modifiability,inherit,inherited,376,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData Member List . This is the complete list of members for sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData, including all inherited members. LinearSystemData()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemDatainline; matrixAccessorsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData; needInvertsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData; solutionVecIdsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData; systemLHVectorsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData; systemMatrixsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData; systemRHVectorsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemData; ~LinearSystemData()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::LinearSystemDatainline. Generated on Mon Nov 11 2024 02:46:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_7859c7675710ba6285f55f982a734768.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_7859c7675710ba6285f55f982a734768.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order-members.html:292,Modifiability,inherit,inherited,292,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::CheckNoChangeInInsertionOrder Member List . This is the complete list of members for sofa::component::linearsystem::CheckNoChangeInInsertionOrder, including all inherited members. checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col) overridesofa::component::linearsystem::CheckNoChangeInInsertionOrderinlinevirtual; Col typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; currentIdsofa::component::linearsystem::CheckNoChangeInInsertionOrder; logger() constsofa::component::linearsystem::CheckNoChangeInInsertionOrderinline; m_messageComponentsofa::component::linearsystem::CheckNoChangeInInsertionOrder; pairInsertionOrderListsofa::component::linearsystem::CheckNoChangeInInsertionOrder; Row typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; skip_insertion_if_error typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; verify_index typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order-members.html:615,Testability,log,logger,615,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::CheckNoChangeInInsertionOrder Member List . This is the complete list of members for sofa::component::linearsystem::CheckNoChangeInInsertionOrder, including all inherited members. checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col) overridesofa::component::linearsystem::CheckNoChangeInInsertionOrderinlinevirtual; Col typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; currentIdsofa::component::linearsystem::CheckNoChangeInInsertionOrder; logger() constsofa::component::linearsystem::CheckNoChangeInInsertionOrderinline; m_messageComponentsofa::component::linearsystem::CheckNoChangeInInsertionOrder; pairInsertionOrderListsofa::component::linearsystem::CheckNoChangeInInsertionOrder; Row typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; skip_insertion_if_error typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; verify_index typedefsofa::component::linearsystem::CheckNoChangeInInsertionOrder; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html:912,Integrability,Message,MessageDispatcher,912,"stem::CheckNoChangeInInsertionOrder Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::CheckNoChangeInInsertionOrder Struct Reference . Check that the incoming rows and columns are expected by the constant sparsity pattern. ; More... Inheritance diagram for sofa::component::linearsystem::CheckNoChangeInInsertionOrder:. [legend]; Detailed Description; Check that the incoming rows and columns are expected by the constant sparsity pattern. . Public Attributes; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  ; sofa::type::vector< std::pair< Row, Col > > pairInsertionOrderList;  list of expected rows and columns More...;  ; std::size_t * currentId { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Attribute details. ◆ currentId. std::size_t* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::currentId { nullptr }. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::m_messageComponent { nullptr }. ◆ pairInsertionOrderList. sofa::type::vector<std::pair<Row, Col> > sofa::component::linearsystem::CheckNoChangeInInsertionOrder::pairInsertionOrderList. list of expected rows and columns . Function details. ◆ checkRowColIndices(). bool sofa::component::linearsystem::CheckNoChangeInInsertionOrder::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sof",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html:2003,Integrability,Message,MessageDispatcher,2003,"onent::linearsystem::CheckNoChangeInInsertionOrder Struct Reference . Check that the incoming rows and columns are expected by the constant sparsity pattern. ; More... Inheritance diagram for sofa::component::linearsystem::CheckNoChangeInInsertionOrder:. [legend]; Detailed Description; Check that the incoming rows and columns are expected by the constant sparsity pattern. . Public Attributes; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  ; sofa::type::vector< std::pair< Row, Col > > pairInsertionOrderList;  list of expected rows and columns More...;  ; std::size_t * currentId { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Attribute details. ◆ currentId. std::size_t* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::currentId { nullptr }. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::m_messageComponent { nullptr }. ◆ pairInsertionOrderList. sofa::type::vector<std::pair<Row, Col> > sofa::component::linearsystem::CheckNoChangeInInsertionOrder::pairInsertionOrderList. list of expected rows and columns . Function details. ◆ checkRowColIndices(). bool sofa::component::linearsystem::CheckNoChangeInInsertionOrder::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sofa::component::linearsystem::CheckNoChangeInInsertionOrder::logger ; (; ); const. inline . sofacomponentlinearsystemCheckNoChangeInInsertionOrder; Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html:414,Modifiability,Inherit,Inheritance,414,"﻿. SOFA API: sofa::component::linearsystem::CheckNoChangeInInsertionOrder Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::CheckNoChangeInInsertionOrder Struct Reference . Check that the incoming rows and columns are expected by the constant sparsity pattern. ; More... Inheritance diagram for sofa::component::linearsystem::CheckNoChangeInInsertionOrder:. [legend]; Detailed Description; Check that the incoming rows and columns are expected by the constant sparsity pattern. . Public Attributes; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  ; sofa::type::vector< std::pair< Row, Col > > pairInsertionOrderList;  list of expected rows and columns More...;  ; std::size_t * currentId { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Attribute details. ◆ currentId. std::size_t* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::currentId { nullptr }. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::m_messageComponent { nullptr }. ◆ pairInsertionOrderList. sofa::type::vector<std::pair<Row, Col> > sofa::component::linearsystem::CheckNoChangeInInsertionOrder::pairInsertionOrderList. list of expected rows and columns . Function details. ◆ checkRowColIndices(). bool sofa::component::linearsystem::CheckNoChangeInInsertionOrder::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ logger(). helper::logging",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html:1085,Modifiability,inherit,inherited,1085,"stem::CheckNoChangeInInsertionOrder Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::CheckNoChangeInInsertionOrder Struct Reference . Check that the incoming rows and columns are expected by the constant sparsity pattern. ; More... Inheritance diagram for sofa::component::linearsystem::CheckNoChangeInInsertionOrder:. [legend]; Detailed Description; Check that the incoming rows and columns are expected by the constant sparsity pattern. . Public Attributes; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  ; sofa::type::vector< std::pair< Row, Col > > pairInsertionOrderList;  list of expected rows and columns More...;  ; std::size_t * currentId { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Attribute details. ◆ currentId. std::size_t* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::currentId { nullptr }. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::m_messageComponent { nullptr }. ◆ pairInsertionOrderList. sofa::type::vector<std::pair<Row, Col> > sofa::component::linearsystem::CheckNoChangeInInsertionOrder::pairInsertionOrderList. list of expected rows and columns . Function details. ◆ checkRowColIndices(). bool sofa::component::linearsystem::CheckNoChangeInInsertionOrder::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sof",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html:903,Testability,log,logging,903,"stem::CheckNoChangeInInsertionOrder Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::CheckNoChangeInInsertionOrder Struct Reference . Check that the incoming rows and columns are expected by the constant sparsity pattern. ; More... Inheritance diagram for sofa::component::linearsystem::CheckNoChangeInInsertionOrder:. [legend]; Detailed Description; Check that the incoming rows and columns are expected by the constant sparsity pattern. . Public Attributes; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  ; sofa::type::vector< std::pair< Row, Col > > pairInsertionOrderList;  list of expected rows and columns More...;  ; std::size_t * currentId { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Attribute details. ◆ currentId. std::size_t* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::currentId { nullptr }. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::m_messageComponent { nullptr }. ◆ pairInsertionOrderList. sofa::type::vector<std::pair<Row, Col> > sofa::component::linearsystem::CheckNoChangeInInsertionOrder::pairInsertionOrderList. list of expected rows and columns . Function details. ◆ checkRowColIndices(). bool sofa::component::linearsystem::CheckNoChangeInInsertionOrder::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sof",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html:931,Testability,Log,LoggerStream,931,"stem::CheckNoChangeInInsertionOrder Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::CheckNoChangeInInsertionOrder Struct Reference . Check that the incoming rows and columns are expected by the constant sparsity pattern. ; More... Inheritance diagram for sofa::component::linearsystem::CheckNoChangeInInsertionOrder:. [legend]; Detailed Description; Check that the incoming rows and columns are expected by the constant sparsity pattern. . Public Attributes; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  ; sofa::type::vector< std::pair< Row, Col > > pairInsertionOrderList;  list of expected rows and columns More...;  ; std::size_t * currentId { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Attribute details. ◆ currentId. std::size_t* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::currentId { nullptr }. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::m_messageComponent { nullptr }. ◆ pairInsertionOrderList. sofa::type::vector<std::pair<Row, Col> > sofa::component::linearsystem::CheckNoChangeInInsertionOrder::pairInsertionOrderList. list of expected rows and columns . Function details. ◆ checkRowColIndices(). bool sofa::component::linearsystem::CheckNoChangeInInsertionOrder::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sof",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html:944,Testability,log,logger,944,"stem::CheckNoChangeInInsertionOrder Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::CheckNoChangeInInsertionOrder Struct Reference . Check that the incoming rows and columns are expected by the constant sparsity pattern. ; More... Inheritance diagram for sofa::component::linearsystem::CheckNoChangeInInsertionOrder:. [legend]; Detailed Description; Check that the incoming rows and columns are expected by the constant sparsity pattern. . Public Attributes; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  ; sofa::type::vector< std::pair< Row, Col > > pairInsertionOrderList;  list of expected rows and columns More...;  ; std::size_t * currentId { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Attribute details. ◆ currentId. std::size_t* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::currentId { nullptr }. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::m_messageComponent { nullptr }. ◆ pairInsertionOrderList. sofa::type::vector<std::pair<Row, Col> > sofa::component::linearsystem::CheckNoChangeInInsertionOrder::pairInsertionOrderList. list of expected rows and columns . Function details. ◆ checkRowColIndices(). bool sofa::component::linearsystem::CheckNoChangeInInsertionOrder::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sof",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html:1976,Testability,log,logger,1976,"onent::linearsystem::CheckNoChangeInInsertionOrder Struct Reference . Check that the incoming rows and columns are expected by the constant sparsity pattern. ; More... Inheritance diagram for sofa::component::linearsystem::CheckNoChangeInInsertionOrder:. [legend]; Detailed Description; Check that the incoming rows and columns are expected by the constant sparsity pattern. . Public Attributes; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  ; sofa::type::vector< std::pair< Row, Col > > pairInsertionOrderList;  list of expected rows and columns More...;  ; std::size_t * currentId { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Attribute details. ◆ currentId. std::size_t* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::currentId { nullptr }. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::m_messageComponent { nullptr }. ◆ pairInsertionOrderList. sofa::type::vector<std::pair<Row, Col> > sofa::component::linearsystem::CheckNoChangeInInsertionOrder::pairInsertionOrderList. list of expected rows and columns . Function details. ◆ checkRowColIndices(). bool sofa::component::linearsystem::CheckNoChangeInInsertionOrder::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sofa::component::linearsystem::CheckNoChangeInInsertionOrder::logger ; (; ); const. inline . sofacomponentlinearsystemCheckNoChangeInInsertionOrder; Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html:1994,Testability,log,logging,1994,"onent::linearsystem::CheckNoChangeInInsertionOrder Struct Reference . Check that the incoming rows and columns are expected by the constant sparsity pattern. ; More... Inheritance diagram for sofa::component::linearsystem::CheckNoChangeInInsertionOrder:. [legend]; Detailed Description; Check that the incoming rows and columns are expected by the constant sparsity pattern. . Public Attributes; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  ; sofa::type::vector< std::pair< Row, Col > > pairInsertionOrderList;  list of expected rows and columns More...;  ; std::size_t * currentId { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Attribute details. ◆ currentId. std::size_t* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::currentId { nullptr }. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::m_messageComponent { nullptr }. ◆ pairInsertionOrderList. sofa::type::vector<std::pair<Row, Col> > sofa::component::linearsystem::CheckNoChangeInInsertionOrder::pairInsertionOrderList. list of expected rows and columns . Function details. ◆ checkRowColIndices(). bool sofa::component::linearsystem::CheckNoChangeInInsertionOrder::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sofa::component::linearsystem::CheckNoChangeInInsertionOrder::logger ; (; ); const. inline . sofacomponentlinearsystemCheckNoChangeInInsertionOrder; Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html:2022,Testability,Log,LoggerStream,2022,"onent::linearsystem::CheckNoChangeInInsertionOrder Struct Reference . Check that the incoming rows and columns are expected by the constant sparsity pattern. ; More... Inheritance diagram for sofa::component::linearsystem::CheckNoChangeInInsertionOrder:. [legend]; Detailed Description; Check that the incoming rows and columns are expected by the constant sparsity pattern. . Public Attributes; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  ; sofa::type::vector< std::pair< Row, Col > > pairInsertionOrderList;  list of expected rows and columns More...;  ; std::size_t * currentId { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Attribute details. ◆ currentId. std::size_t* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::currentId { nullptr }. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::m_messageComponent { nullptr }. ◆ pairInsertionOrderList. sofa::type::vector<std::pair<Row, Col> > sofa::component::linearsystem::CheckNoChangeInInsertionOrder::pairInsertionOrderList. list of expected rows and columns . Function details. ◆ checkRowColIndices(). bool sofa::component::linearsystem::CheckNoChangeInInsertionOrder::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sofa::component::linearsystem::CheckNoChangeInInsertionOrder::logger ; (; ); const. inline . sofacomponentlinearsystemCheckNoChangeInInsertionOrder; Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html:2097,Testability,log,logger,2097,"onent::linearsystem::CheckNoChangeInInsertionOrder Struct Reference . Check that the incoming rows and columns are expected by the constant sparsity pattern. ; More... Inheritance diagram for sofa::component::linearsystem::CheckNoChangeInInsertionOrder:. [legend]; Detailed Description; Check that the incoming rows and columns are expected by the constant sparsity pattern. . Public Attributes; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  ; sofa::type::vector< std::pair< Row, Col > > pairInsertionOrderList;  list of expected rows and columns More...;  ; std::size_t * currentId { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Attribute details. ◆ currentId. std::size_t* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::currentId { nullptr }. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::component::linearsystem::CheckNoChangeInInsertionOrder::m_messageComponent { nullptr }. ◆ pairInsertionOrderList. sofa::type::vector<std::pair<Row, Col> > sofa::component::linearsystem::CheckNoChangeInInsertionOrder::pairInsertionOrderList. list of expected rows and columns . Function details. ◆ checkRowColIndices(). bool sofa::component::linearsystem::CheckNoChangeInInsertionOrder::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sofa::component::linearsystem::CheckNoChangeInInsertionOrder::logger ; (; ); const. inline . sofacomponentlinearsystemCheckNoChangeInInsertionOrder; Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_check_no_change_in_insertion_order.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_create_matrix_dispatcher-members.html:288,Modifiability,inherit,inherited,288,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::CreateMatrixDispatcher< c > Member List . This is the complete list of members for sofa::component::linearsystem::CreateMatrixDispatcher< c >, including all inherited members. createLocalMappedMatrix()=0sofa::component::linearsystem::CreateMatrixDispatcher< c >pure virtual; createLocalMatrix(const bool withIndexChecking) constsofa::component::linearsystem::CreateMatrixDispatcher< c >inline; createLocalMatrix() const =0sofa::component::linearsystem::CreateMatrixDispatcher< c >protectedpure virtual; createLocalMatrixWithIndexChecking() const =0sofa::component::linearsystem::CreateMatrixDispatcher< c >protectedpure virtual; ~CreateMatrixDispatcher()=defaultsofa::component::linearsystem::CreateMatrixDispatcher< c >virtual. Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_create_matrix_dispatcher-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_create_matrix_dispatcher-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_group_of_components_associated_to_a_pair_of_mechanical_states-members.html:338,Modifiability,inherit,inherited,338,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::GroupOfComponentsAssociatedToAPairOfMechanicalStates Member List . This is the complete list of members for sofa::component::linearsystem::GroupOfComponentsAssociatedToAPairOfMechanicalStates, including all inherited members. forcefiedssofa::component::linearsystem::GroupOfComponentsAssociatedToAPairOfMechanicalStates; mappingssofa::component::linearsystem::GroupOfComponentsAssociatedToAPairOfMechanicalStates; massessofa::component::linearsystem::GroupOfComponentsAssociatedToAPairOfMechanicalStates; operator<<(std::ostream &os, const GroupOfComponentsAssociatedToAPairOfMechanicalStates &group)sofa::component::linearsystem::GroupOfComponentsAssociatedToAPairOfMechanicalStatesfriend. Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_group_of_components_associated_to_a_pair_of_mechanical_states-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_group_of_components_associated_to_a_pair_of_mechanical_states-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html:325,Energy Efficiency,allocate,allocateSystem,325," allocateSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemMatrix()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; getMatrix() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getRHS() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getSolution() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; matrixsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; MatrixType typedefsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::Linea",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html:306,Modifiability,inherit,inherited,306,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::LinearSystemData< TMatrix, TVector > Member List . This is the complete list of members for sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >, including all inherited members. allocateSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemMatrix()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; getMatrix() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getRHS() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getSolution() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; matrixsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; MatrixType typedefsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::Linea",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html:410,Usability,clear,clearSystem,410," allocateSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemMatrix()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; getMatrix() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getRHS() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getSolution() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; matrixsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; MatrixType typedefsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::Linea",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html:492,Usability,clear,clearSystem,492," allocateSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemMatrix()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; getMatrix() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getRHS() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getSolution() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; matrixsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; MatrixType typedefsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::Linea",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html:574,Usability,clear,clearSystem,574," allocateSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemMatrix()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; getMatrix() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getRHS() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getSolution() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; matrixsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; MatrixType typedefsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::Linea",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:951,Energy Efficiency,allocate,allocateSystem,951,"﻿. SOFA API: sofa::component::linearsystem::LinearSystemData< TMatrix, TVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::LinearSystemData< TMatrix, TVector > Struct Template Reference . #include <LinearSystemData.h>. Public Attributes; StoredMatrixType matrix { nullptr };  The global matrix of the linear system. If the linear system is written as Ax=b, it is A. More...;  ; StoredVectorType rhs { nullptr };  The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. More...;  ; StoredVectorType solution { nullptr };  The solution of the linear system. If the linear system is written as Ax=b, it is x. More...;  . Public Member Functions; MatrixType * getMatrix () const;  ; VectorType * getRHS () const;  ; VectorType * getSolution () const;  ; void allocateSystem ();  ; void createSystemMatrix ();  Allocate the object for the global matrix. More...;  ; void createSystemRHSVector ();  Allocate the object for the RHS. More...;  ; void createSystemSolutionVector ();  Allocate the object for the solution. More...;  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemRHSVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemSolutionVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void resizeSystem (sofa::Size n);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void clearSystem ();  ; void createSystemRHSVector ();  ; void createSystemSolutionVector ();  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:1002,Energy Efficiency,Allocate,Allocate,1002,"﻿. SOFA API: sofa::component::linearsystem::LinearSystemData< TMatrix, TVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::LinearSystemData< TMatrix, TVector > Struct Template Reference . #include <LinearSystemData.h>. Public Attributes; StoredMatrixType matrix { nullptr };  The global matrix of the linear system. If the linear system is written as Ax=b, it is A. More...;  ; StoredVectorType rhs { nullptr };  The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. More...;  ; StoredVectorType solution { nullptr };  The solution of the linear system. If the linear system is written as Ax=b, it is x. More...;  . Public Member Functions; MatrixType * getMatrix () const;  ; VectorType * getRHS () const;  ; VectorType * getSolution () const;  ; void allocateSystem ();  ; void createSystemMatrix ();  Allocate the object for the global matrix. More...;  ; void createSystemRHSVector ();  Allocate the object for the RHS. More...;  ; void createSystemSolutionVector ();  Allocate the object for the solution. More...;  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemRHSVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemSolutionVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void resizeSystem (sofa::Size n);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void clearSystem ();  ; void createSystemRHSVector ();  ; void createSystemSolutionVector ();  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:1089,Energy Efficiency,Allocate,Allocate,1089,"t Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::LinearSystemData< TMatrix, TVector > Struct Template Reference . #include <LinearSystemData.h>. Public Attributes; StoredMatrixType matrix { nullptr };  The global matrix of the linear system. If the linear system is written as Ax=b, it is A. More...;  ; StoredVectorType rhs { nullptr };  The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. More...;  ; StoredVectorType solution { nullptr };  The solution of the linear system. If the linear system is written as Ax=b, it is x. More...;  . Public Member Functions; MatrixType * getMatrix () const;  ; VectorType * getRHS () const;  ; VectorType * getSolution () const;  ; void allocateSystem ();  ; void createSystemMatrix ();  Allocate the object for the global matrix. More...;  ; void createSystemRHSVector ();  Allocate the object for the RHS. More...;  ; void createSystemSolutionVector ();  Allocate the object for the solution. More...;  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemRHSVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemSolutionVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void resizeSystem (sofa::Size n);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void clearSystem ();  ; void createSystemRHSVector ();  ; void createSystemSolutionVector ();  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::lin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:1171,Energy Efficiency,Allocate,Allocate,1171,"cs simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::LinearSystemData< TMatrix, TVector > Struct Template Reference . #include <LinearSystemData.h>. Public Attributes; StoredMatrixType matrix { nullptr };  The global matrix of the linear system. If the linear system is written as Ax=b, it is A. More...;  ; StoredVectorType rhs { nullptr };  The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. More...;  ; StoredVectorType solution { nullptr };  The solution of the linear system. If the linear system is written as Ax=b, it is x. More...;  . Public Member Functions; MatrixType * getMatrix () const;  ; VectorType * getRHS () const;  ; VectorType * getSolution () const;  ; void allocateSystem ();  ; void createSystemMatrix ();  Allocate the object for the global matrix. More...;  ; void createSystemRHSVector ();  Allocate the object for the RHS. More...;  ; void createSystemSolutionVector ();  Allocate the object for the solution. More...;  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemRHSVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemSolutionVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void resizeSystem (sofa::Size n);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void clearSystem ();  ; void createSystemRHSVector ();  ; void createSystemSolutionVector ();  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:2523,Energy Efficiency,allocate,allocateSystem,2523,"NT_LINEARSOLVER_ITERATIVE_API void clearSystem ();  ; void createSystemRHSVector ();  ; void createSystemSolutionVector ();  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:2664,Energy Efficiency,allocate,allocateSystem,2664,"mSolutionVector ();  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::compon",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:3334,Energy Efficiency,Allocate,Allocate,3334,"::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemRHSVector. Allocate the object for the RHS. . ◆ createSystemSolutionVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemSolutionVector ; (; ). ◆ createSystemSolutionVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemSolutionVector ; (; ). ◆ crea",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:3926,Energy Efficiency,Allocate,Allocate,3926," GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemRHSVector. Allocate the object for the RHS. . ◆ createSystemSolutionVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemSolutionVector ; (; ). ◆ createSystemSolutionVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemSolutionVector ; (; ). ◆ createSystemSolutionVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemSolutionVector. Allocate the object for the solution. . ◆ getMatrix(). template<typename TMatrix , typename TVector > . MatrixType* sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::getMatrix ; (; ); const. inline . ◆ getRHS(). template<typename TMatrix , typename TVector > . VectorType* sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::getRHS ; (; ); const. inline . ◆ getSolutio",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:4538,Energy Efficiency,Allocate,Allocate,4538,"eateSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemRHSVector. Allocate the object for the RHS. . ◆ createSystemSolutionVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemSolutionVector ; (; ). ◆ createSystemSolutionVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemSolutionVector ; (; ). ◆ createSystemSolutionVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemSolutionVector. Allocate the object for the solution. . ◆ getMatrix(). template<typename TMatrix , typename TVector > . MatrixType* sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::getMatrix ; (; ); const. inline . ◆ getRHS(). template<typename TMatrix , typename TVector > . VectorType* sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::getRHS ; (; ); const. inline . ◆ getSolution(). template<typename TMatrix , typename TVector > . VectorType* sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::getSolution ; (; ); const. inline . ◆ resizeSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::resizeSystem ; (; sofa::Size ; n). ◆ resizeSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::resizeSystem ; (; sofa::Size ; n). ◆ resizeSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa:",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:1263,Usability,clear,clearSystem,1263,"r system. If the linear system is written as Ax=b, it is A. More...;  ; StoredVectorType rhs { nullptr };  The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. More...;  ; StoredVectorType solution { nullptr };  The solution of the linear system. If the linear system is written as Ax=b, it is x. More...;  . Public Member Functions; MatrixType * getMatrix () const;  ; VectorType * getRHS () const;  ; VectorType * getSolution () const;  ; void allocateSystem ();  ; void createSystemMatrix ();  Allocate the object for the global matrix. More...;  ; void createSystemRHSVector ();  Allocate the object for the RHS. More...;  ; void createSystemSolutionVector ();  Allocate the object for the solution. More...;  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemRHSVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemSolutionVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void resizeSystem (sofa::Size n);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void clearSystem ();  ; void createSystemRHSVector ();  ; void createSystemSolutionVector ();  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear sy",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:1565,Usability,clear,clearSystem,1565,"r system. If the linear system is written as Ax=b, it is A. More...;  ; StoredVectorType rhs { nullptr };  The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. More...;  ; StoredVectorType solution { nullptr };  The solution of the linear system. If the linear system is written as Ax=b, it is x. More...;  . Public Member Functions; MatrixType * getMatrix () const;  ; VectorType * getRHS () const;  ; VectorType * getSolution () const;  ; void allocateSystem ();  ; void createSystemMatrix ();  Allocate the object for the global matrix. More...;  ; void createSystemRHSVector ();  Allocate the object for the RHS. More...;  ; void createSystemSolutionVector ();  Allocate the object for the solution. More...;  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemRHSVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemSolutionVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void resizeSystem (sofa::Size n);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void clearSystem ();  ; void createSystemRHSVector ();  ; void createSystemSolutionVector ();  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear sy",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:1699,Usability,clear,clearSystem,1699,"r system. If the linear system is written as Ax=b, it is A. More...;  ; StoredVectorType rhs { nullptr };  The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. More...;  ; StoredVectorType solution { nullptr };  The solution of the linear system. If the linear system is written as Ax=b, it is x. More...;  . Public Member Functions; MatrixType * getMatrix () const;  ; VectorType * getRHS () const;  ; VectorType * getSolution () const;  ; void allocateSystem ();  ; void createSystemMatrix ();  Allocate the object for the global matrix. More...;  ; void createSystemRHSVector ();  Allocate the object for the RHS. More...;  ; void createSystemSolutionVector ();  Allocate the object for the solution. More...;  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemRHSVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemSolutionVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void resizeSystem (sofa::Size n);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void clearSystem ();  ; void createSystemRHSVector ();  ; void createSystemSolutionVector ();  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear sy",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:2682,Usability,clear,clearSystem,2682,"  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:2845,Usability,clear,clearSystem,2845," TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. tem",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:2867,Usability,clear,clearSystem,2867,"tor >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSyste",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:2988,Usability,clear,clearSystem,2988,"e linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemRHSVector. Allocate the object f",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:3010,Usability,clear,clearSystem,3010," TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemRHSVector. Allocate the object for the RHS. . ◆ createSystemSolutionVector() [1/3]. SOFA_COMPONENT_LINEA",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:3154,Usability,clear,clearSystem,3154,"x, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemRHSVector. Allocate the object for the RHS. . ◆ createSystemSolutionVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps-members.html:286,Modifiability,inherit,inherited,286,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::LocalMatrixMaps< c, Real > Member List . This is the complete list of members for sofa::component::linearsystem::LocalMatrixMaps< c, Real >, including all inherited members. clear()sofa::component::linearsystem::LocalMatrixMaps< c, Real >inline; componentLocalMatrixsofa::component::linearsystem::LocalMatrixMaps< c, Real >; ComponentType typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >; indexVerificationStrategysofa::component::linearsystem::LocalMatrixMaps< c, Real >; ListMatrixType typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >; mappedLocalMatrixsofa::component::linearsystem::LocalMatrixMaps< c, Real >; PairMechanicalStates typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >. Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps-members.html:305,Usability,clear,clear,305,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::LocalMatrixMaps< c, Real > Member List . This is the complete list of members for sofa::component::linearsystem::LocalMatrixMaps< c, Real >, including all inherited members. clear()sofa::component::linearsystem::LocalMatrixMaps< c, Real >inline; componentLocalMatrixsofa::component::linearsystem::LocalMatrixMaps< c, Real >; ComponentType typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >; indexVerificationStrategysofa::component::linearsystem::LocalMatrixMaps< c, Real >; ListMatrixType typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >; mappedLocalMatrixsofa::component::linearsystem::LocalMatrixMaps< c, Real >; PairMechanicalStates typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >. Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html:1272,Usability,clear,clear,1272,"earsystem::LocalMatrixMaps< c, Real > Struct Template Reference . #include <MatrixLinearSystem.h>; Detailed Description; template<Contribution c, class Real>; struct sofa::component::linearsystem::LocalMatrixMaps< c, Real >; Data structure storing local matrix components created during the matrix assembly and associated to each component contributing to the global matrix . Public Attributes; std::map< ComponentType *, std::map< PairMechanicalStates, AssemblingMappedMatrixAccumulator< c, Real > * > > mappedLocalMatrix;  The local matrix (value) that has been created and associated to a mapped component (key) More...;  ; std::map< ComponentType *, std::shared_ptr< core::matrixaccumulator::IndexVerificationStrategy > > indexVerificationStrategy;  A verification strategy allowing to verify that the matrix indices provided are valid. More...;  ; std::map< ComponentType *, std::map< PairMechanicalStates, BaseAssemblingMatrixAccumulator< c > * > > componentLocalMatrix;  . Public Member Functions; void clear ();  . Attribute details. ◆ componentLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, BaseAssemblingMatrixAccumulator<c>* > > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::componentLocalMatrix. ◆ indexVerificationStrategy. template<Contribution c, class Real > . std::map< ComponentType*, std::shared_ptr<core::matrixaccumulator::IndexVerificationStrategy> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::indexVerificationStrategy. A verification strategy allowing to verify that the matrix indices provided are valid. . ◆ mappedLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, AssemblingMappedMatrixAccumulator<c, Real>*> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::mappedLocalMatrix. The local matrix (value) that has been created and associated to a mapped component (key) . Function details. ◆ clear(). template<Cont",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html:2241,Usability,clear,clear,2241,"al >; Data structure storing local matrix components created during the matrix assembly and associated to each component contributing to the global matrix . Public Attributes; std::map< ComponentType *, std::map< PairMechanicalStates, AssemblingMappedMatrixAccumulator< c, Real > * > > mappedLocalMatrix;  The local matrix (value) that has been created and associated to a mapped component (key) More...;  ; std::map< ComponentType *, std::shared_ptr< core::matrixaccumulator::IndexVerificationStrategy > > indexVerificationStrategy;  A verification strategy allowing to verify that the matrix indices provided are valid. More...;  ; std::map< ComponentType *, std::map< PairMechanicalStates, BaseAssemblingMatrixAccumulator< c > * > > componentLocalMatrix;  . Public Member Functions; void clear ();  . Attribute details. ◆ componentLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, BaseAssemblingMatrixAccumulator<c>* > > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::componentLocalMatrix. ◆ indexVerificationStrategy. template<Contribution c, class Real > . std::map< ComponentType*, std::shared_ptr<core::matrixaccumulator::IndexVerificationStrategy> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::indexVerificationStrategy. A verification strategy allowing to verify that the matrix indices provided are valid. . ◆ mappedLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, AssemblingMappedMatrixAccumulator<c, Real>*> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::mappedLocalMatrix. The local matrix (value) that has been created and associated to a mapped component (key) . Function details. ◆ clear(). template<Contribution c, class Real > . void sofa::component::linearsystem::LocalMatrixMaps< c, Real >::clear ; (; ). inline . sofacomponentlinearsystemLocalMatrixMaps; Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html:2354,Usability,clear,clear,2354,"al >; Data structure storing local matrix components created during the matrix assembly and associated to each component contributing to the global matrix . Public Attributes; std::map< ComponentType *, std::map< PairMechanicalStates, AssemblingMappedMatrixAccumulator< c, Real > * > > mappedLocalMatrix;  The local matrix (value) that has been created and associated to a mapped component (key) More...;  ; std::map< ComponentType *, std::shared_ptr< core::matrixaccumulator::IndexVerificationStrategy > > indexVerificationStrategy;  A verification strategy allowing to verify that the matrix indices provided are valid. More...;  ; std::map< ComponentType *, std::map< PairMechanicalStates, BaseAssemblingMatrixAccumulator< c > * > > componentLocalMatrix;  . Public Member Functions; void clear ();  . Attribute details. ◆ componentLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, BaseAssemblingMatrixAccumulator<c>* > > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::componentLocalMatrix. ◆ indexVerificationStrategy. template<Contribution c, class Real > . std::map< ComponentType*, std::shared_ptr<core::matrixaccumulator::IndexVerificationStrategy> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::indexVerificationStrategy. A verification strategy allowing to verify that the matrix indices provided are valid. . ◆ mappedLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, AssemblingMappedMatrixAccumulator<c, Real>*> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::mappedLocalMatrix. The local matrix (value) that has been created and associated to a mapped component (key) . Function details. ◆ clear(). template<Contribution c, class Real > . void sofa::component::linearsystem::LocalMatrixMaps< c, Real >::clear ; (; ). inline . sofacomponentlinearsystemLocalMatrixMaps; Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer-members.html:298,Modifiability,inherit,inherited,298,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::MappedMassMatrixObserver< Real > Member List . This is the complete list of members for sofa::component::linearsystem::MappedMassMatrixObserver< Real >, including all inherited members. accumulatorsofa::component::linearsystem::MappedMassMatrixObserver< Real >; getObservableMass() constsofa::component::linearsystem::MappedMassMatrixObserver< Real >; getObservableState() constsofa::component::linearsystem::MappedMassMatrixObserver< Real >; hasObservableChanged()sofa::component::linearsystem::MappedMassMatrixObserver< Real >; m_dataTrackersofa::component::linearsystem::MappedMassMatrixObserver< Real >protected; m_invariantMassMatrixsofa::component::linearsystem::MappedMassMatrixObserver< Real >; m_invariantProjectedMassMatrixsofa::component::linearsystem::MappedMassMatrixObserver< Real >; m_mstatesofa::component::linearsystem::MappedMassMatrixObserver< Real >protected; m_newObservablessofa::component::linearsystem::MappedMassMatrixObserver< Real >protected; m_observedMasssofa::component::linearsystem::MappedMassMatrixObserver< Real >protected; observe(core::behavior::BaseMass *mass)sofa::component::linearsystem::MappedMassMatrixObserver< Real >; observe(core::BaseMapping *mapping)sofa::component::linearsystem::MappedMassMatrixObserver< Real >; observe(core::behavior::BaseMechanicalState *mstate)sofa::component::linearsystem::MappedMassMatrixObserver< Real >. Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html:600,Performance,cache,cache,600,﻿. SOFA API: sofa::component::linearsystem::MappedMassMatrixObserver< Real > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::MappedMassMatrixObserver< Real > Struct Template Reference . #include <MappedMassMatrixObserver.h>; Detailed Description; template<class Real>; struct sofa::component::linearsystem::MappedMassMatrixObserver< Real >; Pre-compute the mapped mass matrix assuming it is constant and store it. Support cache invalidation . Public Attributes; BaseAssemblingMatrixAccumulator< core::matrixaccumulator::Contribution::MASS > * accumulator { nullptr };  The mass accumulator associated to the observable mass. More...;  ; std::shared_ptr< linearalgebra::CompressedRowSparseMatrix< Real > > m_invariantMassMatrix;  ; Data< linearalgebra::CompressedRowSparseMatrix< Real > > m_invariantProjectedMassMatrix;  . Protected Attributes; core::DataTracker m_dataTracker;  ; core::behavior::BaseMass * m_observedMass { nullptr };  ; core::behavior::BaseMechanicalState * m_mstate { nullptr };  The state associated to the observable mass. More...;  ; bool m_newObservables = true;  . Public Member Functions; void observe (core::behavior::BaseMass *mass);  The provided mass is observed to track cache invalidation. More...;  ; void observe (core::BaseMapping *mapping);  ; void observe (core::behavior::BaseMechanicalState *mstate);  The provided state (associated to the mass) is observed to track cache invalidation. More...;  ; core::behavior::BaseMass * getObservableMass () const;  Return the observable mass. More...;  ; core::behavior::BaseMechanicalState * getObservableState () const;  Return the observable state. More...;  ; bool hasObservableChanged ();  Return true if the tracking of the observables noticed a change since the last call. More...;  . Attribute details. ◆ accumulator. template<class Rea,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html:1380,Performance,cache,cache,1380, > Struct Template Reference . #include <MappedMassMatrixObserver.h>; Detailed Description; template<class Real>; struct sofa::component::linearsystem::MappedMassMatrixObserver< Real >; Pre-compute the mapped mass matrix assuming it is constant and store it. Support cache invalidation . Public Attributes; BaseAssemblingMatrixAccumulator< core::matrixaccumulator::Contribution::MASS > * accumulator { nullptr };  The mass accumulator associated to the observable mass. More...;  ; std::shared_ptr< linearalgebra::CompressedRowSparseMatrix< Real > > m_invariantMassMatrix;  ; Data< linearalgebra::CompressedRowSparseMatrix< Real > > m_invariantProjectedMassMatrix;  . Protected Attributes; core::DataTracker m_dataTracker;  ; core::behavior::BaseMass * m_observedMass { nullptr };  ; core::behavior::BaseMechanicalState * m_mstate { nullptr };  The state associated to the observable mass. More...;  ; bool m_newObservables = true;  . Public Member Functions; void observe (core::behavior::BaseMass *mass);  The provided mass is observed to track cache invalidation. More...;  ; void observe (core::BaseMapping *mapping);  ; void observe (core::behavior::BaseMechanicalState *mstate);  The provided state (associated to the mass) is observed to track cache invalidation. More...;  ; core::behavior::BaseMass * getObservableMass () const;  Return the observable mass. More...;  ; core::behavior::BaseMechanicalState * getObservableState () const;  Return the observable state. More...;  ; bool hasObservableChanged ();  Return true if the tracking of the observables noticed a change since the last call. More...;  . Attribute details. ◆ accumulator. template<class Real > . BaseAssemblingMatrixAccumulator<core::matrixaccumulator::Contribution::MASS>* sofa::component::linearsystem::MappedMassMatrixObserver< Real >::accumulator { nullptr }. The mass accumulator associated to the observable mass. . ◆ m_dataTracker. template<class Real > . core::DataTracker sofa::component::linearsystem::MappedMass,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html:1584,Performance,cache,cache,1584,rver< Real >; Pre-compute the mapped mass matrix assuming it is constant and store it. Support cache invalidation . Public Attributes; BaseAssemblingMatrixAccumulator< core::matrixaccumulator::Contribution::MASS > * accumulator { nullptr };  The mass accumulator associated to the observable mass. More...;  ; std::shared_ptr< linearalgebra::CompressedRowSparseMatrix< Real > > m_invariantMassMatrix;  ; Data< linearalgebra::CompressedRowSparseMatrix< Real > > m_invariantProjectedMassMatrix;  . Protected Attributes; core::DataTracker m_dataTracker;  ; core::behavior::BaseMass * m_observedMass { nullptr };  ; core::behavior::BaseMechanicalState * m_mstate { nullptr };  The state associated to the observable mass. More...;  ; bool m_newObservables = true;  . Public Member Functions; void observe (core::behavior::BaseMass *mass);  The provided mass is observed to track cache invalidation. More...;  ; void observe (core::BaseMapping *mapping);  ; void observe (core::behavior::BaseMechanicalState *mstate);  The provided state (associated to the mass) is observed to track cache invalidation. More...;  ; core::behavior::BaseMass * getObservableMass () const;  Return the observable mass. More...;  ; core::behavior::BaseMechanicalState * getObservableState () const;  Return the observable state. More...;  ; bool hasObservableChanged ();  Return true if the tracking of the observables noticed a change since the last call. More...;  . Attribute details. ◆ accumulator. template<class Real > . BaseAssemblingMatrixAccumulator<core::matrixaccumulator::Contribution::MASS>* sofa::component::linearsystem::MappedMassMatrixObserver< Real >::accumulator { nullptr }. The mass accumulator associated to the observable mass. . ◆ m_dataTracker. template<class Real > . core::DataTracker sofa::component::linearsystem::MappedMassMatrixObserver< Real >::m_dataTracker. protected . ◆ m_invariantMassMatrix. template<class Real > . std::shared_ptr<linearalgebra::CompressedRowSparseMatrix<Real> > sofa::c,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html:4334,Performance,cache,cache,4334,ppedMassMatrixObserver< Real >::m_invariantProjectedMassMatrix. ◆ m_mstate. template<class Real > . core::behavior::BaseMechanicalState* sofa::component::linearsystem::MappedMassMatrixObserver< Real >::m_mstate { nullptr }. protected . The state associated to the observable mass. . ◆ m_newObservables. template<class Real > . bool sofa::component::linearsystem::MappedMassMatrixObserver< Real >::m_newObservables = true. protected . ◆ m_observedMass. template<class Real > . core::behavior::BaseMass* sofa::component::linearsystem::MappedMassMatrixObserver< Real >::m_observedMass { nullptr }. protected . Function details. ◆ getObservableMass(). template<class Real > . core::behavior::BaseMass * sofa::component::linearsystem::MappedMassMatrixObserver< Real >::getObservableMass. Return the observable mass. . ◆ getObservableState(). template<class Real > . core::behavior::BaseMechanicalState * sofa::component::linearsystem::MappedMassMatrixObserver< Real >::getObservableState. Return the observable state. . ◆ hasObservableChanged(). template<class Real > . bool sofa::component::linearsystem::MappedMassMatrixObserver< Real >::hasObservableChanged. Return true if the tracking of the observables noticed a change since the last call. . ◆ observe() [1/3]. template<class Real > . void sofa::component::linearsystem::MappedMassMatrixObserver< Real >::observe ; (; core::BaseMapping * ; mapping). ◆ observe() [2/3]. template<class Real > . void sofa::component::linearsystem::MappedMassMatrixObserver< Real >::observe ; (; core::behavior::BaseMass * ; mass). The provided mass is observed to track cache invalidation. . ◆ observe() [3/3]. template<class Real > . void sofa::component::linearsystem::MappedMassMatrixObserver< Real >::observe ; (; core::behavior::BaseMechanicalState * ; mstate). The provided state (associated to the mass) is observed to track cache invalidation. . sofacomponentlinearsystemMappedMassMatrixObserver; Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html:4596,Performance,cache,cache,4596,ppedMassMatrixObserver< Real >::m_invariantProjectedMassMatrix. ◆ m_mstate. template<class Real > . core::behavior::BaseMechanicalState* sofa::component::linearsystem::MappedMassMatrixObserver< Real >::m_mstate { nullptr }. protected . The state associated to the observable mass. . ◆ m_newObservables. template<class Real > . bool sofa::component::linearsystem::MappedMassMatrixObserver< Real >::m_newObservables = true. protected . ◆ m_observedMass. template<class Real > . core::behavior::BaseMass* sofa::component::linearsystem::MappedMassMatrixObserver< Real >::m_observedMass { nullptr }. protected . Function details. ◆ getObservableMass(). template<class Real > . core::behavior::BaseMass * sofa::component::linearsystem::MappedMassMatrixObserver< Real >::getObservableMass. Return the observable mass. . ◆ getObservableState(). template<class Real > . core::behavior::BaseMechanicalState * sofa::component::linearsystem::MappedMassMatrixObserver< Real >::getObservableState. Return the observable state. . ◆ hasObservableChanged(). template<class Real > . bool sofa::component::linearsystem::MappedMassMatrixObserver< Real >::hasObservableChanged. Return true if the tracking of the observables noticed a change since the last call. . ◆ observe() [1/3]. template<class Real > . void sofa::component::linearsystem::MappedMassMatrixObserver< Real >::observe ; (; core::BaseMapping * ; mapping). ◆ observe() [2/3]. template<class Real > . void sofa::component::linearsystem::MappedMassMatrixObserver< Real >::observe ; (; core::behavior::BaseMass * ; mass). The provided mass is observed to track cache invalidation. . ◆ observe() [3/3]. template<class Real > . void sofa::component::linearsystem::MappedMassMatrixObserver< Real >::observe ; (; core::behavior::BaseMechanicalState * ; mstate). The provided state (associated to the mass) is observed to track cache invalidation. . sofacomponentlinearsystemMappedMassMatrixObserver; Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapping_graph_1_1_same_group_components-members.html:300,Modifiability,inherit,inherited,300,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::MappingGraph::SameGroupComponents Member List . This is the complete list of members for sofa::component::linearsystem::MappingGraph::SameGroupComponents, including all inherited members. forceFieldssofa::component::linearsystem::MappingGraph::SameGroupComponents; massessofa::component::linearsystem::MappingGraph::SameGroupComponents. Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapping_graph_1_1_same_group_components-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapping_graph_1_1_same_group_components-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet-members.html:332,Modifiability,inherit,inherited,332,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet Member List . This is the complete list of members for sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet, including all inherited members. discardRowCol(sofa::Index row, sofa::Index col) overridesofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichletvirtual; m_globalMatrixsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet; m_offsetsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet; ~Dirichlet() override=defaultsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet; ~ZeroDirichletCondition()=defaultsofa::core::behavior::ZeroDirichletConditionvirtual. Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet.html:394,Modifiability,Inherit,Inheritance,394,"﻿. SOFA API: sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet Struct Referencefinal . #include <MatrixLinearSystem.h>. Inheritance diagram for sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet:. [legend]; Detailed Description; template<class TMatrix, class TVector>; struct sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet; Define how zero Dirichlet boundary conditions are applied on the global matrix . Public Attributes; sofa::type::Vec2u m_offset;  ; TMatrix * m_globalMatrix { nullptr };  The matrix to apply a zero Dirichlet boundary condition. More...;  . Public Member Functions;  ~Dirichlet () override=default;  ; void discardRowCol (sofa::Index row, sofa::Index col) override;  ;  Public Member Functions inherited from sofa::core::behavior::ZeroDirichletCondition; virtual ~ZeroDirichletCondition ()=default;  . Attribute details. ◆ m_globalMatrix. template<class TMatrix , class TVector > . TMatrix* sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::m_globalMatrix { nullptr }. The matrix to apply a zero Dirichlet boundary condition. . ◆ m_offset. template<class TMatrix , class TVector > . sofa::type::Vec2u sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::m_offset. Constructor details. ◆ ~Dirichlet(). template<class TMatrix , class TVector > . sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::~Dirichlet ; (; ). overridedefault . Function details. ◆ discardRowCol(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::discardRowCol ; (; sofa::Index ; , . sofa::Index ;",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet.html:1054,Modifiability,inherit,inherited,1054,"linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet Struct Referencefinal . #include <MatrixLinearSystem.h>. Inheritance diagram for sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet:. [legend]; Detailed Description; template<class TMatrix, class TVector>; struct sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet; Define how zero Dirichlet boundary conditions are applied on the global matrix . Public Attributes; sofa::type::Vec2u m_offset;  ; TMatrix * m_globalMatrix { nullptr };  The matrix to apply a zero Dirichlet boundary condition. More...;  . Public Member Functions;  ~Dirichlet () override=default;  ; void discardRowCol (sofa::Index row, sofa::Index col) override;  ;  Public Member Functions inherited from sofa::core::behavior::ZeroDirichletCondition; virtual ~ZeroDirichletCondition ()=default;  . Attribute details. ◆ m_globalMatrix. template<class TMatrix , class TVector > . TMatrix* sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::m_globalMatrix { nullptr }. The matrix to apply a zero Dirichlet boundary condition. . ◆ m_offset. template<class TMatrix , class TVector > . sofa::type::Vec2u sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::m_offset. Constructor details. ◆ ~Dirichlet(). template<class TMatrix , class TVector > . sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::~Dirichlet ; (; ). overridedefault . Function details. ◆ discardRowCol(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::discardRowCol ; (; sofa::Index ; , . sofa::Index ;  . ). overridevirtual . Zero ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_independent_contributors-members.html:360,Modifiability,inherit,inherited,360,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors Member List . This is the complete list of members for sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors, including all inherited members. idsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors; m_dampingsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors; m_geometricStiffnesssofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors; m_masssofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors; m_stiffnesssofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::IndependentContributors. Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_independent_contributors-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_independent_contributors-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_center_of_mass_mapping_operation-members.html:314,Modifiability,inherit,inherited,314,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::linear::CenterOfMassMappingOperation< Model > Member List . This is the complete list of members for sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >, including all inherited members. computeTotalMass(const Model *model, const sofa::core::behavior::BaseMass *mass)sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >inlinestatic; Coord typedefsofa::component::mapping::linear::CenterOfMassMappingOperation< Model >; Deriv typedefsofa::component::mapping::linear::CenterOfMassMappingOperation< Model >; fetchMass(const Model *m)sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >inlinestatic; getVecCoord(const Model *m, const sofa::core::VecId id)sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >inlinestatic; getVecDeriv(Model *m, const sofa::core::VecId id)sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >inlinestatic; VecCoord typedefsofa::component::mapping::linear::CenterOfMassMappingOperation< Model >; VecDeriv typedefsofa::component::mapping::linear::CenterOfMassMappingOperation< Model >; WeightedCoord(const VecCoord *v, const sofa::core::behavior::BaseMass *m)sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >inlinestatic; WeightedDeriv(const VecDeriv *v, const sofa::core::behavior::BaseMass *m)sofa::component::mapping::linear::CenterOfMassMappingOperation< Model >inlinestatic. Generated on Mon Nov 11 2024 02:50:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_center_of_mass_mapping_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_center_of_mass_mapping_operation-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_rigid_mapping_matrix_helper_3_012_00_01_real_01_4-members.html:310,Modifiability,inherit,inherited,310,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::linear::RigidMappingMatrixHelper< 2, Real > Member List . This is the complete list of members for sofa::component::mapping::linear::RigidMappingMatrixHelper< 2, Real >, including all inherited members. setMatrix(Matrix &mat, const Vector &vec)sofa::component::mapping::linear::RigidMappingMatrixHelper< 2, Real >inlinestatic. Generated on Mon Nov 11 2024 02:50:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_rigid_mapping_matrix_helper_3_012_00_01_real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_rigid_mapping_matrix_helper_3_012_00_01_real_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_rigid_mapping_matrix_helper_3_013_00_01_real_01_4-members.html:310,Modifiability,inherit,inherited,310,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::linear::RigidMappingMatrixHelper< 3, Real > Member List . This is the complete list of members for sofa::component::mapping::linear::RigidMappingMatrixHelper< 3, Real >, including all inherited members. setMatrix(Matrix &mat, const Vector &vec)sofa::component::mapping::linear::RigidMappingMatrixHelper< 3, Real >inlinestatic. Generated on Mon Nov 11 2024 02:50:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_rigid_mapping_matrix_helper_3_013_00_01_real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1linear_1_1_rigid_mapping_matrix_helper_3_013_00_01_real_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping-members.html:323,Deployability,update,updateTarget,323,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Member List . This is the complete list of members for sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping, including all inherited members. updateTarget(unsigned index, SReal x, SReal y, SReal z)=0sofa::component::mapping::nonlinear::BaseDistanceFromTargetMappingpure virtual. Generated on Mon Nov 11 2024 02:51:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping-members.html:304,Modifiability,inherit,inherited,304,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Member List . This is the complete list of members for sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping, including all inherited members. updateTarget(unsigned index, SReal x, SReal y, SReal z)=0sofa::component::mapping::nonlinear::BaseDistanceFromTargetMappingpure virtual. Generated on Mon Nov 11 2024 02:51:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html:496,Deployability,update,updateTarget,496,"﻿. SOFA API: sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Struct Referenceabstract . #include <DistanceFromTargetMapping.h>. Inheritance diagram for sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping:. [legend]. Public Member Functions; virtual void updateTarget (unsigned index, SReal x, SReal y, SReal z)=0;  . Function details. ◆ updateTarget(). virtual void sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping::updateTarget ; (; unsigned ; index, . SReal ; x, . SReal ; y, . SReal ; z . ). pure virtual . Implemented in sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >. sofacomponentmappingnonlinearBaseDistanceFromTargetMapping; Generated on Mon Nov 11 2024 02:51:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html:579,Deployability,update,updateTarget,579,"﻿. SOFA API: sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Struct Referenceabstract . #include <DistanceFromTargetMapping.h>. Inheritance diagram for sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping:. [legend]. Public Member Functions; virtual void updateTarget (unsigned index, SReal x, SReal y, SReal z)=0;  . Function details. ◆ updateTarget(). virtual void sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping::updateTarget ; (; unsigned ; index, . SReal ; x, . SReal ; y, . SReal ; z . ). pure virtual . Implemented in sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >. sofacomponentmappingnonlinearBaseDistanceFromTargetMapping; Generated on Mon Nov 11 2024 02:51:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html:676,Deployability,update,updateTarget,676,"﻿. SOFA API: sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Struct Referenceabstract . #include <DistanceFromTargetMapping.h>. Inheritance diagram for sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping:. [legend]. Public Member Functions; virtual void updateTarget (unsigned index, SReal x, SReal y, SReal z)=0;  . Function details. ◆ updateTarget(). virtual void sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping::updateTarget ; (; unsigned ; index, . SReal ; x, . SReal ; y, . SReal ; z . ). pure virtual . Implemented in sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >. sofacomponentmappingnonlinearBaseDistanceFromTargetMapping; Generated on Mon Nov 11 2024 02:51:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html:355,Modifiability,Inherit,Inheritance,355,"﻿. SOFA API: sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping Struct Referenceabstract . #include <DistanceFromTargetMapping.h>. Inheritance diagram for sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping:. [legend]. Public Member Functions; virtual void updateTarget (unsigned index, SReal x, SReal y, SReal z)=0;  . Function details. ◆ updateTarget(). virtual void sofa::component::mapping::nonlinear::BaseDistanceFromTargetMapping::updateTarget ; (; unsigned ; index, . SReal ; x, . SReal ; y, . SReal ; z . ). pure virtual . Implemented in sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >. sofacomponentmappingnonlinearBaseDistanceFromTargetMapping; Generated on Mon Nov 11 2024 02:51:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_distance_from_target_mapping.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping_1_1_jacobian_entry-members.html:408,Modifiability,inherit,inherited,408,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >::JacobianEntry Member List . This is the complete list of members for sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >::JacobianEntry, including all inherited members. jacobianValuesofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >::JacobianEntry; operator<(const JacobianEntry &other) constsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >::JacobianEntryinline; vertexIdsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >::JacobianEntry. Generated on Mon Nov 11 2024 02:51:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping_1_1_jacobian_entry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping_1_1_jacobian_entry-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping_matrix_helper_3_012_00_01_real_01_4-members.html:316,Modifiability,inherit,inherited,316,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::nonlinear::RigidMappingMatrixHelper< 2, Real > Member List . This is the complete list of members for sofa::component::mapping::nonlinear::RigidMappingMatrixHelper< 2, Real >, including all inherited members. setMatrix(Matrix &mat, const Vector &vec)sofa::component::mapping::nonlinear::RigidMappingMatrixHelper< 2, Real >inlinestatic. Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping_matrix_helper_3_012_00_01_real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping_matrix_helper_3_012_00_01_real_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping_matrix_helper_3_013_00_01_real_01_4-members.html:316,Modifiability,inherit,inherited,316,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mapping::nonlinear::RigidMappingMatrixHelper< 3, Real > Member List . This is the complete list of members for sofa::component::mapping::nonlinear::RigidMappingMatrixHelper< 3, Real >, including all inherited members. setMatrix(Matrix &mat, const Vector &vec)sofa::component::mapping::nonlinear::RigidMappingMatrixHelper< 3, Real >inlinestatic. Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping_matrix_helper_3_013_00_01_real_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping_matrix_helper_3_013_00_01_real_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_add_m_to_matrix_functor-members.html:318,Modifiability,inherit,inherited,318,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mass::AddMToMatrixFunctor< Deriv, MassType, MatrixType > Member List . This is the complete list of members for sofa::component::mass::AddMToMatrixFunctor< Deriv, MassType, MatrixType >, including all inherited members. operator()(MatrixType *mat, MassType mass, int pos, MassType fact)sofa::component::mass::AddMToMatrixFunctor< Deriv, MassType, MatrixType >inline; operator()(MatrixType *mat, MassType mass, int posRow, int posColumn, MassType fact)sofa::component::mass::AddMToMatrixFunctor< Deriv, MassType, MatrixType >inline. Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_add_m_to_matrix_functor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_add_m_to_matrix_functor-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_add_m_to_matrix_functor_3_01defaulttype_1_1_rigid_deriv_3_01d7907f01a4f64739137740e507957d60.html:426,Modifiability,inherit,inherited,426,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mass::AddMToMatrixFunctor< defaulttype::RigidDeriv< N, Real >, defaulttype::RigidMass< N, Real >, MatrixType > Member List . This is the complete list of members for sofa::component::mass::AddMToMatrixFunctor< defaulttype::RigidDeriv< N, Real >, defaulttype::RigidMass< N, Real >, MatrixType >, including all inherited members. operator()(MatrixType *mat, const defaulttype::RigidMass< N, Real > &mass, int pos, Real fact)sofa::component::mass::AddMToMatrixFunctor< defaulttype::RigidDeriv< N, Real >, defaulttype::RigidMass< N, Real >, MatrixType >inline. Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_add_m_to_matrix_functor_3_01defaulttype_1_1_rigid_deriv_3_01d7907f01a4f64739137740e507957d60.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_add_m_to_matrix_functor_3_01defaulttype_1_1_rigid_deriv_3_01d7907f01a4f64739137740e507957d60.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_mass_type_3_01defaulttype_1_1_std_vector_types_3_01_t_coord_6d3a1e75ff1118f5711a636ce8049aa7.html:346,Modifiability,inherit,inherited,346,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mass::MassType< defaulttype::StdVectorTypes< TCoord, TDeriv, TReal > > Member List . This is the complete list of members for sofa::component::mass::MassType< defaulttype::StdVectorTypes< TCoord, TDeriv, TReal > >, including all inherited members. type typedefsofa::component::mass::MassType< defaulttype::StdVectorTypes< TCoord, TDeriv, TReal > >. Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_mass_type_3_01defaulttype_1_1_std_vector_types_3_01_t_coord_6d3a1e75ff1118f5711a636ce8049aa7.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_mass_type_3_01defaulttype_1_1_std_vector_types_3_01_t_coord_6d3a1e75ff1118f5711a636ce8049aa7.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_mass_type_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html:328,Modifiability,inherit,inherited,328,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mass::MassType< sofa::defaulttype::StdRigidTypes< N, real > > Member List . This is the complete list of members for sofa::component::mass::MassType< sofa::defaulttype::StdRigidTypes< N, real > >, including all inherited members. type typedefsofa::component::mass::MassType< sofa::defaulttype::StdRigidTypes< N, real > >. Generated on Mon Nov 11 2024 02:51:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_mass_type_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mass_1_1_mass_type_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field_1_1_temp_vars-members.html:374,Modifiability,inherit,inherited,374,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars Member List . This is the complete list of members for sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars, including all inherited members. dampingsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; nelemssofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; pos6Dsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; stiffabssofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; stiffnesssofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; vcentersofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; vinv_r2sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars; vrsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars. Generated on Mon Nov 11 2024 02:52:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field_1_1_temp_vars-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field_1_1_temp_vars-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:284,Modifiability,inherit,inherited,284,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:128,Testability,test,testing,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:240,Testability,test,testing,240,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:329,Testability,test,testing,329,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:374,Testability,test,testing,374,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:436,Testability,test,testing,436,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:478,Testability,test,testing,478,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:510,Testability,test,testing,510,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:561,Testability,test,testing,561,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:606,Testability,test,testing,606,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:656,Testability,test,testing,656,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:759,Testability,test,testing,759,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:805,Testability,test,testing,805,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html:856,Testability,test,testing,856,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::odesolver::testing::ODESolverSpringTest Member List . This is the complete list of members for sofa::component::odesolver::testing::ODESolverSpringTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_sisofa::component::odesolver::testing::ODESolverSpringTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; prepareScene(double K, double m, double l0)sofa::component::odesolver::testing::ODESolverSpringTestinline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:554,Integrability,Message,MessageAsTestFailure,554,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:602,Integrability,Message,MessageAsTestFailure,602,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:342,Modifiability,Inherit,Inheritance,342,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:499,Modifiability,inherit,inherited,499,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:739,Modifiability,inherit,inherited,739,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:889,Modifiability,inherit,inherited,889,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:1102,Modifiability,Inherit,Inherited,1102,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:1147,Modifiability,inherit,inherited,1147,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:41,Testability,test,testing,41,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:260,Testability,test,testing,260,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:394,Testability,test,testing,394,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:520,Testability,test,testing,520,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:545,Testability,test,testing,545,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:593,Testability,test,testing,593,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:760,Testability,test,testing,760,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:910,Testability,test,testing,910,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:1168,Testability,test,testing,1168,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:1328,Testability,test,testing,1328,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:1436,Testability,test,testing,1436,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters-members.html:358,Modifiability,inherit,inherited,358,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes > Member List . This is the complete list of members for sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >, including all inherited members. anisotropyDirectionsofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; parameterAlphasofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; parameterArraysofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; parameterTausofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; Real typedefsofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >. Generated on Mon Nov 11 2024 03:01:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html:1169,Deployability,configurat,configuration,1169,"l members . sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes > Struct Template Reference . #include <HyperelasticMaterial.h>; Detailed Description; template<typename DataTypes>; struct sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; structure that store the parameters required to that are necessary to compute the strain energy The material parameters might be constant in space (homogeneous material) or not . Public Attributes; std::vector< Real > parameterArray;  ; std::vector< Coord > anisotropyDirection;  ; std::vector< Real > parameterAlpha;  ; std::vector< Real > parameterTau;  . Attribute details. ◆ anisotropyDirection. template<typename DataTypes > . std::vector<Coord> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::anisotropyDirection. the direction of anisotropy in the rest configuration : the size of the array is 0 if the material is isotropic, 1 if it is transversely isotropic and 2 for orthotropic materials (assumed to be orthogonal to each other) . ◆ parameterAlpha. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterAlpha. for viscous part, give the real alphai and taui such as alpha(t)= alpha0+sum(1,N)alphaiexp(-t/taui) . ◆ parameterArray. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterArray. an array of Real values that correspond to the material parameters : the size depends on the material, e.g. 2 Lame coefficients for St-Venant Kirchhoff materials . ◆ parameterTau. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterTau. sofacomponentsolidmechanicsfemhyperelasticmaterialMaterialParameters; Generated on Mon No",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html:651,Energy Efficiency,energy,energy,651,"﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes > Struct Template Reference . #include <HyperelasticMaterial.h>; Detailed Description; template<typename DataTypes>; struct sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; structure that store the parameters required to that are necessary to compute the strain energy The material parameters might be constant in space (homogeneous material) or not . Public Attributes; std::vector< Real > parameterArray;  ; std::vector< Coord > anisotropyDirection;  ; std::vector< Real > parameterAlpha;  ; std::vector< Real > parameterTau;  . Attribute details. ◆ anisotropyDirection. template<typename DataTypes > . std::vector<Coord> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::anisotropyDirection. the direction of anisotropy in the rest configuration : the size of the array is 0 if the material is isotropic, 1 if it is transversely isotropic and 2 for orthotropic materials (assumed to be orthogonal to each other) . ◆ parameterAlpha. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterAlpha. for viscous part, give the real alphai and taui such as alpha(t)= alpha0+sum(1,N)alphaiexp(-t/taui) . ◆ parameterArray. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterArray. an array of Real values that correspond to the material parameters : the size depends on the material, e.g. 2 Lame coefficients for St-Venant Kirchhoff materials . ◆ parameterTau. template<t",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html:1889,Integrability,depend,depends,1889,"::fem::hyperelastic::material::MaterialParameters< DataTypes > Struct Template Reference . #include <HyperelasticMaterial.h>; Detailed Description; template<typename DataTypes>; struct sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; structure that store the parameters required to that are necessary to compute the strain energy The material parameters might be constant in space (homogeneous material) or not . Public Attributes; std::vector< Real > parameterArray;  ; std::vector< Coord > anisotropyDirection;  ; std::vector< Real > parameterAlpha;  ; std::vector< Real > parameterTau;  . Attribute details. ◆ anisotropyDirection. template<typename DataTypes > . std::vector<Coord> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::anisotropyDirection. the direction of anisotropy in the rest configuration : the size of the array is 0 if the material is isotropic, 1 if it is transversely isotropic and 2 for orthotropic materials (assumed to be orthogonal to each other) . ◆ parameterAlpha. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterAlpha. for viscous part, give the real alphai and taui such as alpha(t)= alpha0+sum(1,N)alphaiexp(-t/taui) . ◆ parameterArray. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterArray. an array of Real values that correspond to the material parameters : the size depends on the material, e.g. 2 Lame coefficients for St-Venant Kirchhoff materials . ◆ parameterTau. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterTau. sofacomponentsolidmechanicsfemhyperelasticmaterialMaterialParameters; Generated on Mon Nov 11 2024 03:01:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html:1169,Modifiability,config,configuration,1169,"l members . sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes > Struct Template Reference . #include <HyperelasticMaterial.h>; Detailed Description; template<typename DataTypes>; struct sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; structure that store the parameters required to that are necessary to compute the strain energy The material parameters might be constant in space (homogeneous material) or not . Public Attributes; std::vector< Real > parameterArray;  ; std::vector< Coord > anisotropyDirection;  ; std::vector< Real > parameterAlpha;  ; std::vector< Real > parameterTau;  . Attribute details. ◆ anisotropyDirection. template<typename DataTypes > . std::vector<Coord> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::anisotropyDirection. the direction of anisotropy in the rest configuration : the size of the array is 0 if the material is isotropic, 1 if it is transversely isotropic and 2 for orthotropic materials (assumed to be orthogonal to each other) . ◆ parameterAlpha. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterAlpha. for viscous part, give the real alphai and taui such as alpha(t)= alpha0+sum(1,N)alphaiexp(-t/taui) . ◆ parameterArray. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterArray. an array of Real values that correspond to the material parameters : the size depends on the material, e.g. 2 Lame coefficients for St-Venant Kirchhoff materials . ◆ parameterTau. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterTau. sofacomponentsolidmechanicsfemhyperelasticmaterialMaterialParameters; Generated on Mon No",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs_1_1_edge_information_1_1_spring-members.html:374,Modifiability,inherit,inherited,374,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation::Spring Member List . This is the complete list of members for sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation::Spring, including all inherited members. DfDxsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation::Spring; edgesofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation::Spring; restLengthsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation::Spring. Generated on Mon Nov 11 2024 03:04:21 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs_1_1_edge_information_1_1_spring-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs_1_1_edge_information_1_1_spring-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs_1_1_force_output-members.html:350,Modifiability,inherit,inherited,350,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::ForceOutput Member List . This is the complete list of members for sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::ForceOutput, including all inherited members. forcesofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::ForceOutput; forceIntensitysofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::ForceOutput; inverseLengthsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::ForceOutput. Generated on Mon Nov 11 2024 03:04:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs_1_1_force_output-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs_1_1_force_output-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force-members.html:548,Energy Efficiency,energy,energysofa,548,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce Member List . This is the complete list of members for sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce, including all inherited members. dForce_dXsofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce; DPos typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce; energysofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce; forcesofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce. Generated on Mon Nov 11 2024 03:05:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force-members.html:338,Modifiability,inherit,inherited,338,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce Member List . This is the complete list of members for sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce, including all inherited members. dForce_dXsofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce; DPos typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce; energysofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce; forcesofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce. Generated on Mon Nov 11 2024 03:05:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force.html:390,Energy Efficiency,energy,energy,390,"﻿. SOFA API: sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce Struct Reference . #include <SpringForceField.h>. Public Attributes; Real energy;  ; std::pair< DPos, DPos > force;  ; type::MatNoInit< N, N, Real > dForce_dX;  . Attribute details. ◆ dForce_dX. template<class DataTypes > . type::MatNoInit<N, N, Real> sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce::dForce_dX. ◆ energy. template<class DataTypes > . Real sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce::energy. ◆ force. template<class DataTypes > . std::pair<DPos, DPos> sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce::force. sofacomponentsolidmechanicsspringSpringForceFieldSpringForce; Generated on Mon Nov 11 2024 03:05:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force.html:666,Energy Efficiency,energy,energy,666,"﻿. SOFA API: sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce Struct Reference . #include <SpringForceField.h>. Public Attributes; Real energy;  ; std::pair< DPos, DPos > force;  ; type::MatNoInit< N, N, Real > dForce_dX;  . Attribute details. ◆ dForce_dX. template<class DataTypes > . type::MatNoInit<N, N, Real> sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce::dForce_dX. ◆ energy. template<class DataTypes > . Real sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce::energy. ◆ force. template<class DataTypes > . std::pair<DPos, DPos> sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce::force. sofacomponentsolidmechanicsspringSpringForceFieldSpringForce; Generated on Mon Nov 11 2024 03:05:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force.html:793,Energy Efficiency,energy,energy,793,"﻿. SOFA API: sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce Struct Reference . #include <SpringForceField.h>. Public Attributes; Real energy;  ; std::pair< DPos, DPos > force;  ; type::MatNoInit< N, N, Real > dForce_dX;  . Attribute details. ◆ dForce_dX. template<class DataTypes > . type::MatNoInit<N, N, Real> sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce::dForce_dX. ◆ energy. template<class DataTypes > . Real sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce::energy. ◆ force. template<class DataTypes > . std::pair<DPos, DPos> sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce::force. sofacomponentsolidmechanicsspringSpringForceFieldSpringForce; Generated on Mon Nov 11 2024 03:05:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field_1_1_spring_force.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field_1_1_spring-members.html:340,Modifiability,inherit,inherited,340,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Spring Member List . This is the complete list of members for sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Spring, including all inherited members. kdsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Spring; kssofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Spring; operator<<(std::ostream &os, const Spring &)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Springfriend; operator>>(std::istream &in, Spring &)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Springfriend; restVectorsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Spring; Spring(Real _ks, Real _kd, Deriv _rl)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Springinline; Spring()sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Springinline. Generated on Mon Nov 11 2024 03:08:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field_1_1_spring-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field_1_1_spring-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology_1_1_connexion-members.html:342,Modifiability,inherit,inherited,342,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion Member List . This is the complete list of members for sofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion, including all inherited members. _childrensofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; _coarsestParentsofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; _hexaIdxsofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; _neighborssofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; _nonRamifiedHexaIdxsofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; _parentsofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; _tmpsofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; Children typedefsofa::component::topology::container::grid::SparseGridRamificationTopology::Connexion; Connexion()sofa::component::topology::container::grid::SparseGridRamificationTopology::Connexioninline; propagateConnexionNumberToNeighbors(int connexionNumber, const type::vector< Connexion * > &allFineConnexions)sofa::component::topology::container::grid::SparseGridRamificationTopology::Connexioninline. Generated on Mon Nov 11 2024 03:10:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology_1_1_connexion-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology_1_1_connexion-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_base_ordering_method_1_1_sparse_matrix_pattern-members.html:294,Modifiability,inherit,inherited,294,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::BaseOrderingMethod::SparseMatrixPattern Member List . This is the complete list of members for sofa::core::behavior::BaseOrderingMethod::SparseMatrixPattern, including all inherited members. colsIndexsofa::core::behavior::BaseOrderingMethod::SparseMatrixPattern; matrixSizesofa::core::behavior::BaseOrderingMethod::SparseMatrixPattern; numberOfNonZerossofa::core::behavior::BaseOrderingMethod::SparseMatrixPattern; rowBeginsofa::core::behavior::BaseOrderingMethod::SparseMatrixPattern. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_base_ordering_method_1_1_sparse_matrix_pattern-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_base_ordering_method_1_1_sparse_matrix_pattern-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_block_type-members.html:234,Modifiability,inherit,inherited,234,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::BlockType Member List . This is the complete list of members for sofa::core::behavior::BlockType, including all inherited members. blocDatasofa::core::behavior::BlockType; blocPrecisionsofa::core::behavior::BlockType; operator<(const BlockType &blocType) constsofa::core::behavior::BlockTypeinline; operator<<(std::ostream &out, const BlockType &s)sofa::core::behavior::BlockTypefriend; operator==(const BlockType &blocType) constsofa::core::behavior::BlockTypeinline; toString() constsofa::core::behavior::BlockTypeinline. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_block_type-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_block_type-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_bloc_matrix_writer_1_1_dispatcher_force_field__add_k_to_matrix-members.html:348,Modifiability,inherit,inherited,348,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::BlocMatrixWriter< TBloc >::DispatcherForceField_addKToMatrix< FF > Member List . This is the complete list of members for sofa::core::behavior::BlocMatrixWriter< TBloc >::DispatcherForceField_addKToMatrix< FF >, including all inherited members. DispatcherForceField_addKToMatrix(FF *main, const sofa::core::MechanicalParams *mparams)sofa::core::behavior::BlocMatrixWriter< TBloc >::DispatcherForceField_addKToMatrix< FF >inline; mainsofa::core::behavior::BlocMatrixWriter< TBloc >::DispatcherForceField_addKToMatrix< FF >; mparamssofa::core::behavior::BlocMatrixWriter< TBloc >::DispatcherForceField_addKToMatrix< FF >; operator()(const MatrixWriter &m)sofa::core::behavior::BlocMatrixWriter< TBloc >::DispatcherForceField_addKToMatrix< FF >inline. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_bloc_matrix_writer_1_1_dispatcher_force_field__add_k_to_matrix-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_bloc_matrix_writer_1_1_dispatcher_force_field__add_k_to_matrix-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_damping_matrix_1_1_d_f-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::DampingMatrix::DF Member List . This is the complete list of members for sofa::core::behavior::DampingMatrix::DF, including all inherited members. DF(BaseMechanicalState *_mstate1, DampingMatrix *_mat)sofa::core::behavior::DampingMatrix::DFinline; withRespectToVelocityIn(BaseMechanicalState *mstate2) constsofa::core::behavior::DampingMatrix::DFinline. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_damping_matrix_1_1_d_f-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_damping_matrix_1_1_d_f-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_stiffness_matrix_1_1_d_f-members.html:254,Modifiability,inherit,inherited,254,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::StiffnessMatrix::DF Member List . This is the complete list of members for sofa::core::behavior::StiffnessMatrix::DF, including all inherited members. DF(BaseMechanicalState *_mstate1, StiffnessMatrix *_mat)sofa::core::behavior::StiffnessMatrix::DFinline; withRespectToPositionsIn(BaseMechanicalState *mstate2) constsofa::core::behavior::StiffnessMatrix::DFinline. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_stiffness_matrix_1_1_d_f-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_stiffness_matrix_1_1_d_f-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_zero_dirichlet_condition-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::ZeroDirichletCondition Member List . This is the complete list of members for sofa::core::behavior::ZeroDirichletCondition, including all inherited members. discardRowCol(sofa::Index, sofa::Index)sofa::core::behavior::ZeroDirichletConditioninlinevirtual; ~ZeroDirichletCondition()=defaultsofa::core::behavior::ZeroDirichletConditionvirtual. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_zero_dirichlet_condition-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_zero_dirichlet_condition-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_zero_dirichlet_condition.html:408,Integrability,Interface,Interface,408,"﻿. SOFA API: sofa::core::behavior::ZeroDirichletCondition Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::behavior::ZeroDirichletCondition Struct Reference . #include <BaseProjectiveConstraintSet.h>. Inheritance diagram for sofa::core::behavior::ZeroDirichletCondition:. [legend]; Detailed Description; Interface to apply a zero Dirichlet boundary condition on a matrix; If K is a matrix to apply a zero Dirichlet boundary condition: K_ii = 1 K_ij = 0 for i != j K_ji = 0 for i != j . Public Member Functions; virtual ~ZeroDirichletCondition ()=default;  ; virtual void discardRowCol (sofa::Index, sofa::Index);  . Constructor details. ◆ ~ZeroDirichletCondition(). virtual sofa::core::behavior::ZeroDirichletCondition::~ZeroDirichletCondition ; (; ). virtualdefault . Function details. ◆ discardRowCol(). virtual void sofa::core::behavior::ZeroDirichletCondition::discardRowCol ; (; sofa::Index ; , . sofa::Index ;  . ). inlinevirtual . Zero out a row and a column of a matrix. The element at the intersection of the row and the column is set to 1. ; Reimplemented in sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet. sofacorebehaviorZeroDirichletCondition; Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_zero_dirichlet_condition.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_zero_dirichlet_condition.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_zero_dirichlet_condition.html:305,Modifiability,Inherit,Inheritance,305,"﻿. SOFA API: sofa::core::behavior::ZeroDirichletCondition Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::behavior::ZeroDirichletCondition Struct Reference . #include <BaseProjectiveConstraintSet.h>. Inheritance diagram for sofa::core::behavior::ZeroDirichletCondition:. [legend]; Detailed Description; Interface to apply a zero Dirichlet boundary condition on a matrix; If K is a matrix to apply a zero Dirichlet boundary condition: K_ii = 1 K_ij = 0 for i != j K_ji = 0 for i != j . Public Member Functions; virtual ~ZeroDirichletCondition ()=default;  ; virtual void discardRowCol (sofa::Index, sofa::Index);  . Constructor details. ◆ ~ZeroDirichletCondition(). virtual sofa::core::behavior::ZeroDirichletCondition::~ZeroDirichletCondition ; (; ). virtualdefault . Function details. ◆ discardRowCol(). virtual void sofa::core::behavior::ZeroDirichletCondition::discardRowCol ; (; sofa::Index ; , . sofa::Index ;  . ). inlinevirtual . Zero out a row and a column of a matrix. The element at the intersection of the row and the column is set to 1. ; Reimplemented in sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet. sofacorebehaviorZeroDirichletCondition; Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_zero_dirichlet_condition.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1behavior_1_1_zero_dirichlet_condition.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1get__base__object__strong-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::get_base_object_strong< c > Member List . This is the complete list of members for sofa::core::get_base_object_strong< c >, including all inherited members. ComponentType typedefsofa::core::get_base_object_strong< c >; type typedefsofa::core::get_base_object_strong< c >. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1get__base__object__strong-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1get__base__object__strong-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1get__base__object__strong.html:561,Integrability,depend,depending,561,"﻿. SOFA API: sofa::core::get_base_object_strong< c > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::get_base_object_strong< c > Struct Template Reference . #include <BaseMatrixAccumulatorComponent.h>; Detailed Description; template<matrixaccumulator::Contribution c>; struct sofa::core::get_base_object_strong< c >; Provides member typedef type for known Contribution using SFINAE; Typedef type is an abstract strong type derived from MatrixAccumulator and BaseObject, and depending on . sofacoreget_base_object_strong; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1get__base__object__strong.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1get__base__object__strong.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong.html:551,Integrability,depend,depending,551,﻿. SOFA API: sofa::core::matrixaccumulator::get_abstract_strong< c > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_abstract_strong< c > Struct Template Reference . #include <MatrixAccumulator.h>; Detailed Description; template<Contribution c>; struct sofa::core::matrixaccumulator::get_abstract_strong< c >; Provides member typedef @type for known Contribution using SFINAE; Typedef @type is an abstract strong type derived from @MatrixAccumulatorInterface and depending on Typedef @ComponentType is the type of object associated to the Contribution . sofacorematrixaccumulatorget_abstract_strong; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html:322,Modifiability,inherit,inherited,322,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_abstract_strong< Contribution::DAMPING > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_abstract_strong< Contribution::DAMPING >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::DAMPING >; MatrixBuilderType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::DAMPING >; type typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::DAMPING >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_g_e_o_m_e588029b2bcc0b21ff1fc66832f9851cb.html:346,Modifiability,inherit,inherited,346,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_abstract_strong< Contribution::GEOMETRIC_STIFFNESS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >; MatrixBuilderType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >; type typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_g_e_o_m_e588029b2bcc0b21ff1fc66832f9851cb.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_g_e_o_m_e588029b2bcc0b21ff1fc66832f9851cb.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_m_a_s_s_01_4-members.html:316,Modifiability,inherit,inherited,316,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_abstract_strong< Contribution::MASS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_abstract_strong< Contribution::MASS >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::MASS >; MatrixBuilderType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::MASS >; type typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::MASS >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_m_a_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_m_a_s_s_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html:326,Modifiability,inherit,inherited,326,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_abstract_strong< Contribution::STIFFNESS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_abstract_strong< Contribution::STIFFNESS >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::STIFFNESS >; MatrixBuilderType typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::STIFFNESS >; type typedefsofa::core::matrixaccumulator::get_abstract_strong< Contribution::STIFFNESS >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong.html:561,Integrability,depend,depending,561,﻿. SOFA API: sofa::core::matrixaccumulator::get_list_abstract_strong< c > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_list_abstract_strong< c > Struct Template Reference . #include <MatrixAccumulator.h>; Detailed Description; template<Contribution c>; struct sofa::core::matrixaccumulator::get_list_abstract_strong< c >; Provides member typedef @type for known Contribution using SFINAE; Typedef @type is an abstract strong type derived from @ListMatrixAccumulator and depending on . sofacorematrixaccumulatorget_list_abstract_strong; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html:332,Modifiability,inherit,inherited,332,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::DAMPING > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::DAMPING >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::DAMPING >; type typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::DAMPING >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_g_ef5b917c1f63b4183ce767c7a826f61b9.html:356,Modifiability,inherit,inherited,356,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::GEOMETRIC_STIFFNESS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >; type typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::GEOMETRIC_STIFFNESS >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_g_ef5b917c1f63b4183ce767c7a826f61b9.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_g_ef5b917c1f63b4183ce767c7a826f61b9.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_m_a_s_s_01_4-members.html:326,Modifiability,inherit,inherited,326,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::MASS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::MASS >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::MASS >; type typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::MASS >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_m_a_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_m_a_s_s_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html:336,Modifiability,inherit,inherited,336,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::STIFFNESS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::STIFFNESS >, including all inherited members. ComponentType typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::STIFFNESS >; type typedefsofa::core::matrixaccumulator::get_list_abstract_strong< Contribution::STIFFNESS >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_composite_index_verification_strategy-members.html:330,Modifiability,inherit,inherited,330,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies > Member List . This is the complete list of members for sofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies >, including all inherited members. checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col) overridesofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies >inline; skip_insertion_if_error typedefsofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies >; verify_index typedefsofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies >. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_composite_index_verification_strategy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_composite_index_verification_strategy-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_composite_index_verification_strategy.html:454,Modifiability,Inherit,Inheritance,454,"﻿. SOFA API: sofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies > Struct Template Reference . #include <MatrixAccumulator.h>; The concatenation of multiple index verification strategies. ; More... Inheritance diagram for sofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies >:. [legend]; Detailed Description; template<class... Strategies>; struct sofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies >; The concatenation of multiple index verification strategies. ; Template Parameters. StrategiesA list of strategy types deriving from @IndexVerificationStrategy . Public Member Functions; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  . Function details. ◆ checkRowColIndices(). template<class... Strategies> . bool sofa::core::matrixaccumulator::CompositeIndexVerificationStrategy< Strategies >::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverride . sofacorematrixaccumulatorCompositeIndexVerificationStrategy; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_composite_index_verification_strategy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_composite_index_verification_strategy.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html:316,Modifiability,inherit,inherited,316,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::ContributionName< Contribution::DAMPING > Member List . This is the complete list of members for sofa::core::matrixaccumulator::ContributionName< Contribution::DAMPING >, including all inherited members. Name()sofa::core::matrixaccumulator::ContributionName< Contribution::DAMPING >inlinestatic. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_d_a_m_p_i_n_g_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_g_e_o_m_e_t_701e39a001625a51e06b3390efed52d8.html:340,Modifiability,inherit,inherited,340,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::ContributionName< Contribution::GEOMETRIC_STIFFNESS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::ContributionName< Contribution::GEOMETRIC_STIFFNESS >, including all inherited members. Name()sofa::core::matrixaccumulator::ContributionName< Contribution::GEOMETRIC_STIFFNESS >inlinestatic. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_g_e_o_m_e_t_701e39a001625a51e06b3390efed52d8.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_g_e_o_m_e_t_701e39a001625a51e06b3390efed52d8.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_m_a_s_s_01_4-members.html:310,Modifiability,inherit,inherited,310,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::ContributionName< Contribution::MASS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::ContributionName< Contribution::MASS >, including all inherited members. Name()sofa::core::matrixaccumulator::ContributionName< Contribution::MASS >inlinestatic. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_m_a_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_m_a_s_s_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html:320,Modifiability,inherit,inherited,320,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::ContributionName< Contribution::STIFFNESS > Member List . This is the complete list of members for sofa::core::matrixaccumulator::ContributionName< Contribution::STIFFNESS >, including all inherited members. Name()sofa::core::matrixaccumulator::ContributionName< Contribution::STIFFNESS >inlinestatic. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_contribution_name_3_01_contribution_1_1_s_t_i_f_f_n_e_s_s_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_index_verification_strategy-members.html:284,Modifiability,inherit,inherited,284,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::IndexVerificationStrategy Member List . This is the complete list of members for sofa::core::matrixaccumulator::IndexVerificationStrategy, including all inherited members. checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col)=0sofa::core::matrixaccumulator::IndexVerificationStrategypure virtual; skip_insertion_if_error typedefsofa::core::matrixaccumulator::IndexVerificationStrategy; verify_index typedefsofa::core::matrixaccumulator::IndexVerificationStrategy; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_index_verification_strategy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_index_verification_strategy-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_index_verification_strategy.html:327,Modifiability,Inherit,Inheritance,327,"﻿. SOFA API: sofa::core::matrixaccumulator::IndexVerificationStrategy Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::matrixaccumulator::IndexVerificationStrategy Struct Referenceabstract . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::IndexVerificationStrategy:. [legend]. Public Member Functions; virtual ~IndexVerificationStrategy ()=default;  ; virtual bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col)=0;  . Constructor details. ◆ ~IndexVerificationStrategy(). virtual sofa::core::matrixaccumulator::IndexVerificationStrategy::~IndexVerificationStrategy ; (; ). virtualdefault . Function details. ◆ checkRowColIndices(). virtual bool sofa::core::matrixaccumulator::IndexVerificationStrategy::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). pure virtual . Implemented in sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy, and sofa::component::linearsystem::CheckNoChangeInInsertionOrder. sofacorematrixaccumulatorIndexVerificationStrategy; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_index_verification_strategy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_index_verification_strategy.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_individual_index_verification_strategy-members.html:304,Modifiability,inherit,inherited,304,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy Member List . This is the complete list of members for sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy, including all inherited members. checkColIndex(sofa::SignedIndex col)=0sofa::core::matrixaccumulator::IndividualIndexVerificationStrategyprotectedpure virtual; checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col) overridesofa::core::matrixaccumulator::IndividualIndexVerificationStrategyinlinevirtual; checkRowIndex(sofa::SignedIndex row)=0sofa::core::matrixaccumulator::IndividualIndexVerificationStrategyprotectedpure virtual; skip_insertion_if_error typedefsofa::core::matrixaccumulator::IndexVerificationStrategy; verify_index typedefsofa::core::matrixaccumulator::IndexVerificationStrategy; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_individual_index_verification_strategy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_individual_index_verification_strategy-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_individual_index_verification_strategy.html:377,Modifiability,Inherit,Inheritance,377,"﻿. SOFA API: sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy Struct Referenceabstract . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy:. [legend]. Public Member Functions; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Protected Member Functions; virtual bool checkRowIndex (sofa::SignedIndex row)=0;  ; virtual bool checkColIndex (sofa::SignedIndex col)=0;  . Function details. ◆ checkColIndex(). virtual bool sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy::checkColIndex ; (; sofa::SignedIndex ; col). protectedpure virtual . Implemented in sofa::core::matrixaccumulator::RangeVerification. ◆ checkRowColIndices(). bool sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ checkRowIndex(). virtual bool sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy::checkRowIndex ; (; sofa::SignedIndex ; row). protectedpure virtual . Implemented in sofa::core::matrixaccumulator::RangeVerification. sofacorematrixaccumulatorIndividualIndexVerificationStrategy; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_individual_index_verification_strategy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_individual_index_verification_strategy.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_individual_index_verification_strategy.html:626,Modifiability,inherit,inherited,626,"﻿. SOFA API: sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy Struct Referenceabstract . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy:. [legend]. Public Member Functions; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Protected Member Functions; virtual bool checkRowIndex (sofa::SignedIndex row)=0;  ; virtual bool checkColIndex (sofa::SignedIndex col)=0;  . Function details. ◆ checkColIndex(). virtual bool sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy::checkColIndex ; (; sofa::SignedIndex ; col). protectedpure virtual . Implemented in sofa::core::matrixaccumulator::RangeVerification. ◆ checkRowColIndices(). bool sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy::checkRowColIndices ; (; const sofa::SignedIndex ; row, . const sofa::SignedIndex ; col . ). inlineoverridevirtual . Implements sofa::core::matrixaccumulator::IndexVerificationStrategy. ◆ checkRowIndex(). virtual bool sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy::checkRowIndex ; (; sofa::SignedIndex ; row). protectedpure virtual . Implemented in sofa::core::matrixaccumulator::RangeVerification. sofacorematrixaccumulatorIndividualIndexVerificationStrategy; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_individual_index_verification_strategy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_individual_index_verification_strategy.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::NoIndexVerification Member List . This is the complete list of members for sofa::core::matrixaccumulator::NoIndexVerification, including all inherited members. skip_insertion_if_error typedefsofa::core::matrixaccumulator::NoIndexVerification; verify_index typedefsofa::core::matrixaccumulator::NoIndexVerification; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification.html:280,Modifiability,Inherit,Inheritance,280,﻿. SOFA API: sofa::core::matrixaccumulator::NoIndexVerification Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::matrixaccumulator::NoIndexVerification Struct Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::NoIndexVerification:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . sofacorematrixaccumulatorNoIndexVerification; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification.html:378,Modifiability,Inherit,Inherited,378,﻿. SOFA API: sofa::core::matrixaccumulator::NoIndexVerification Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::matrixaccumulator::NoIndexVerification Struct Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::NoIndexVerification:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . sofacorematrixaccumulatorNoIndexVerification; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification.html:422,Modifiability,inherit,inherited,422,﻿. SOFA API: sofa::core::matrixaccumulator::NoIndexVerification Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::matrixaccumulator::NoIndexVerification Struct Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::NoIndexVerification:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . sofacorematrixaccumulatorNoIndexVerification; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_no_index_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification-members.html:268,Modifiability,inherit,inherited,268,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::RangeVerification Member List . This is the complete list of members for sofa::core::matrixaccumulator::RangeVerification, including all inherited members. checkColIndex(sofa::SignedIndex col) overridesofa::core::matrixaccumulator::RangeVerificationvirtual; checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col) overridesofa::core::matrixaccumulator::IndividualIndexVerificationStrategyinlinevirtual; checkRowIndex(sofa::SignedIndex row) overridesofa::core::matrixaccumulator::RangeVerificationvirtual; logger() constsofa::core::matrixaccumulator::RangeVerification; m_messageComponentsofa::core::matrixaccumulator::RangeVerification; maxColIndexsofa::core::matrixaccumulator::RangeVerification; maxRowIndexsofa::core::matrixaccumulator::RangeVerification; minColIndexsofa::core::matrixaccumulator::RangeVerification; minRowIndexsofa::core::matrixaccumulator::RangeVerification; skip_insertion_if_error typedefsofa::core::matrixaccumulator::RangeVerification; verify_index typedefsofa::core::matrixaccumulator::RangeVerification; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification-members.html:657,Testability,log,logger,657,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::RangeVerification Member List . This is the complete list of members for sofa::core::matrixaccumulator::RangeVerification, including all inherited members. checkColIndex(sofa::SignedIndex col) overridesofa::core::matrixaccumulator::RangeVerificationvirtual; checkRowColIndices(const sofa::SignedIndex row, const sofa::SignedIndex col) overridesofa::core::matrixaccumulator::IndividualIndexVerificationStrategyinlinevirtual; checkRowIndex(sofa::SignedIndex row) overridesofa::core::matrixaccumulator::RangeVerificationvirtual; logger() constsofa::core::matrixaccumulator::RangeVerification; m_messageComponentsofa::core::matrixaccumulator::RangeVerification; maxColIndexsofa::core::matrixaccumulator::RangeVerification; maxRowIndexsofa::core::matrixaccumulator::RangeVerification; minColIndexsofa::core::matrixaccumulator::RangeVerification; minRowIndexsofa::core::matrixaccumulator::RangeVerification; skip_insertion_if_error typedefsofa::core::matrixaccumulator::RangeVerification; verify_index typedefsofa::core::matrixaccumulator::RangeVerification; ~IndexVerificationStrategy()=defaultsofa::core::matrixaccumulator::IndexVerificationStrategyvirtual. Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:791,Integrability,Message,MessageDispatcher,791,"trixaccumulator::RangeVerification Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::matrixaccumulator::RangeVerification Struct Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::RangeVerification:. [legend]. Public Attributes; sofa::SignedIndex minRowIndex { 0 };  ; sofa::SignedIndex maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::SignedIndex minColIndex { 0 };  ; sofa::SignedIndex maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:2472,Integrability,Message,MessageDispatcher,2472,"core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkColIndex ; (; sofa::SignedIndex ; col). overridevirtual . Implements sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy. ◆ checkRowIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkRowIndex ; (; sofa::SignedIndex ; row). overridevirtual . Implements sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sofa::core::matrixaccumulator::RangeVerification::logger ; (; ); const. sofacorematrixaccumulatorRangeVerification; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:324,Modifiability,Inherit,Inheritance,324,"﻿. SOFA API: sofa::core::matrixaccumulator::RangeVerification Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::matrixaccumulator::RangeVerification Struct Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::RangeVerification:. [legend]. Public Attributes; sofa::SignedIndex minRowIndex { 0 };  ; sofa::SignedIndex maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::SignedIndex minColIndex { 0 };  ; sofa::SignedIndex maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:980,Modifiability,inherit,inherited,980,"trixaccumulator::RangeVerification Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::matrixaccumulator::RangeVerification Struct Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::RangeVerification:. [legend]. Public Attributes; sofa::SignedIndex minRowIndex { 0 };  ; sofa::SignedIndex maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::SignedIndex minColIndex { 0 };  ; sofa::SignedIndex maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:1184,Modifiability,inherit,inherited,1184,"trixaccumulator::RangeVerification Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::matrixaccumulator::RangeVerification Struct Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::RangeVerification:. [legend]. Public Attributes; sofa::SignedIndex minRowIndex { 0 };  ; sofa::SignedIndex maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::SignedIndex minColIndex { 0 };  ; sofa::SignedIndex maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:1318,Modifiability,Inherit,Inherited,1318,">. Inheritance diagram for sofa::core::matrixaccumulator::RangeVerification:. [legend]. Public Attributes; sofa::SignedIndex minRowIndex { 0 };  ; sofa::SignedIndex maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::SignedIndex minColIndex { 0 };  ; sofa::SignedIndex maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkColIndex ; (; sofa::SignedIndex ; col). overridevirtual . Implements sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy. ◆ checkRowIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkRowIndex ; (; s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:782,Testability,log,logging,782,"trixaccumulator::RangeVerification Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::matrixaccumulator::RangeVerification Struct Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::RangeVerification:. [legend]. Public Attributes; sofa::SignedIndex minRowIndex { 0 };  ; sofa::SignedIndex maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::SignedIndex minColIndex { 0 };  ; sofa::SignedIndex maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:810,Testability,Log,LoggerStream,810,"trixaccumulator::RangeVerification Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::matrixaccumulator::RangeVerification Struct Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::RangeVerification:. [legend]. Public Attributes; sofa::SignedIndex minRowIndex { 0 };  ; sofa::SignedIndex maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::SignedIndex minColIndex { 0 };  ; sofa::SignedIndex maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:823,Testability,log,logger,823,"trixaccumulator::RangeVerification Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::matrixaccumulator::RangeVerification Struct Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::matrixaccumulator::RangeVerification:. [legend]. Public Attributes; sofa::SignedIndex minRowIndex { 0 };  ; sofa::SignedIndex maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::SignedIndex minColIndex { 0 };  ; sofa::SignedIndex maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() };  ; sofa::core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:2445,Testability,log,logger,2445,"core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkColIndex ; (; sofa::SignedIndex ; col). overridevirtual . Implements sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy. ◆ checkRowIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkRowIndex ; (; sofa::SignedIndex ; row). overridevirtual . Implements sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sofa::core::matrixaccumulator::RangeVerification::logger ; (; ); const. sofacorematrixaccumulatorRangeVerification; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:2463,Testability,log,logging,2463,"core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkColIndex ; (; sofa::SignedIndex ; col). overridevirtual . Implements sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy. ◆ checkRowIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkRowIndex ; (; sofa::SignedIndex ; row). overridevirtual . Implements sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sofa::core::matrixaccumulator::RangeVerification::logger ; (; ); const. sofacorematrixaccumulatorRangeVerification; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:2491,Testability,Log,LoggerStream,2491,"core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkColIndex ; (; sofa::SignedIndex ; col). overridevirtual . Implements sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy. ◆ checkRowIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkRowIndex ; (; sofa::SignedIndex ; row). overridevirtual . Implements sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sofa::core::matrixaccumulator::RangeVerification::logger ; (; ); const. sofacorematrixaccumulatorRangeVerification; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:2554,Testability,log,logger,2554,"core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkColIndex ; (; sofa::SignedIndex ; col). overridevirtual . Implements sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy. ◆ checkRowIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkRowIndex ; (; sofa::SignedIndex ; row). overridevirtual . Implements sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sofa::core::matrixaccumulator::RangeVerification::logger ; (; ); const. sofacorematrixaccumulatorRangeVerification; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_base_class_name_helper_1_1_default_type_template_name-members.html:320,Modifiability,inherit,inherited,320,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseClassNameHelper::DefaultTypeTemplateName< T > Member List . This is the complete list of members for sofa::core::objectmodel::BaseClassNameHelper::DefaultTypeTemplateName< T >, including all inherited members. Get()sofa::core::objectmodel::BaseClassNameHelper::DefaultTypeTemplateName< T >inlinestatic. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_base_class_name_helper_1_1_default_type_template_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_base_class_name_helper_1_1_default_type_template_name-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_base_class_name_helper_1_1_default_type_template_name_3_01f5b603fa2507d3a0e5a0c76f9a214451.html:346,Modifiability,inherit,inherited,346,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseClassNameHelper::DefaultTypeTemplateName< C< T1, Ts... > > Member List . This is the complete list of members for sofa::core::objectmodel::BaseClassNameHelper::DefaultTypeTemplateName< C< T1, Ts... > >, including all inherited members. Get()sofa::core::objectmodel::BaseClassNameHelper::DefaultTypeTemplateName< C< T1, Ts... > >inlinestatic. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_base_class_name_helper_1_1_default_type_template_name_3_01f5b603fa2507d3a0e5a0c76f9a214451.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_base_class_name_helper_1_1_default_type_template_name_3_01f5b603fa2507d3a0e5a0c76f9a214451.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_link_traits_value_type_3_01_t_dest_type_00_01_t_dest_ptr_0a68410d99502fe8265b0c6310990001c.html:348,Modifiability,inherit,inherited,348,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::T Member List . This is the complete list of members for sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::T, including all inherited members. get() constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator TDestType *() constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator!() constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator!=(const TDestPtr &p) constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator*() constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator->() constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator=(const TDestPtr &v)sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; operator==(const TDestPtr &p) constsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; pathsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::T; ptrsofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::T; T()sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinline; T(const TDestPtr &p)sofa::core::objectmodel::LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >::Tinlineexplicit. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_link_traits_value_type_3_01_t_dest_type_00_01_t_dest_ptr_0a68410d99502fe8265b0c6310990001c.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_link_traits_value_type_3_01_t_dest_type_00_01_t_dest_ptr_0a68410d99502fe8265b0c6310990001c.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_parents-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::Parents< T, Types > Member List . This is the complete list of members for sofa::core::objectmodel::Parents< T, Types >, including all inherited members. get(const std::size_t i)sofa::core::objectmodel::Parents< T, Types >inlinestatic; nbsofa::core::objectmodel::Parents< T, Types >static. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_parents-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_parents-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents-members.html:268,Modifiability,inherit,inherited,268,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::TClassParents< Parent > Member List . This is the complete list of members for sofa::core::objectmodel::TClassParents< Parent >, including all inherited members. get(const std::size_t i)sofa::core::objectmodel::TClassParents< Parent >inlinestatic; nb()sofa::core::objectmodel::TClassParents< Parent >inlinestatic. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents_3_01void_01_4-members.html:264,Modifiability,inherit,inherited,264,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::TClassParents< void > Member List . This is the complete list of members for sofa::core::objectmodel::TClassParents< void >, including all inherited members. get(const std::size_t i)sofa::core::objectmodel::TClassParents< void >inlinestatic; nb()sofa::core::objectmodel::TClassParents< void >inlinestatic. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents_3_01void_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents_3_01void_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents_3_01_parents_3_01_types_8_8_8_01_4_01_4-members.html:294,Modifiability,inherit,inherited,294,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::TClassParents< Parents< Types... > > Member List . This is the complete list of members for sofa::core::objectmodel::TClassParents< Parents< Types... > >, including all inherited members. get(const std::size_t i)sofa::core::objectmodel::TClassParents< Parents< Types... > >inlinestatic; nb()sofa::core::objectmodel::TClassParents< Parents< Types... > >inlinestatic. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents_3_01_parents_3_01_types_8_8_8_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1objectmodel_1_1_t_class_parents_3_01_parents_3_01_types_8_8_8_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_elem_ancestor_elem-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::ElemAncestorElem< NV > Member List . This is the complete list of members for sofa::core::topology::ElemAncestorElem< NV >, including all inherited members. ElemAncestorElem()sofa::core::topology::ElemAncestorElem< NV >inline; ElemAncestorElem(const type::fixed_array< PointAncestorElem, NV > &_pointSrcElems, const type::vector< TopologyElemID > &_srcElems)sofa::core::topology::ElemAncestorElem< NV >inline; ElemAncestorElem(const type::fixed_array< PointAncestorElem, NV > &_pointSrcElems, const TopologyElemID &_srcElem)sofa::core::topology::ElemAncestorElem< NV >inline; pointSrcElemssofa::core::topology::ElemAncestorElem< NV >; srcElemssofa::core::topology::ElemAncestorElem< NV >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_elem_ancestor_elem-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_elem_ancestor_elem-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_point_ancestor_elem-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::PointAncestorElem Member List . This is the complete list of members for sofa::core::topology::PointAncestorElem, including all inherited members. indexsofa::core::topology::PointAncestorElem; LocalCoords typedefsofa::core::topology::PointAncestorElem; localCoordssofa::core::topology::PointAncestorElem; PointAncestorElem()sofa::core::topology::PointAncestorEleminline; PointAncestorElem(geometry::ElementType _type, Topology::ElemID _index, const LocalCoords &_localCoords)sofa::core::topology::PointAncestorEleminline; typesofa::core::topology::PointAncestorElem. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_point_ancestor_elem-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_point_ancestor_elem-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_edge_01_4-members.html:302,Modifiability,inherit,inherited,302,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Edge > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Edge >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; EMoved_Adding typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; EMoved_Removing typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Edge >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Edge >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_edge_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_edge_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_hexahedron_01_4-members.html:314,Modifiability,inherit,inherited,314,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; EMoved_Adding typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; EMoved_Removing typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Hexahedron >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_hexahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_hexahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_point_01_4-members.html:304,Modifiability,inherit,inherited,304,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Point > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Point >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Point >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Point >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Point >; EMoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Point >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Point >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Point >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Point >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Point >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Point >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_point_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_point_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_quad_01_4-members.html:302,Modifiability,inherit,inherited,302,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Quad > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Quad >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; EMoved_Adding typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; EMoved_Removing typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Quad >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_quad_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_quad_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_tetrahedron_01_4-members.html:316,Modifiability,inherit,inherited,316,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; EMoved_Adding typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; EMoved_Removing typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_tetrahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_tetrahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_triangle_01_4-members.html:310,Modifiability,inherit,inherited,310,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Triangle > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; EMoved_Adding typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; EMoved_Removing typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_triangle_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_triangle_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_elem_i_d-members.html:244,Modifiability,inherit,inherited,244,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyElemID Member List . This is the complete list of members for sofa::core::topology::TopologyElemID, including all inherited members. indexsofa::core::topology::TopologyElemID; TopologyElemID()sofa::core::topology::TopologyElemIDinline; TopologyElemID(geometry::ElementType _type, Topology::ElemID _index)sofa::core::topology::TopologyElemIDinline; typesofa::core::topology::TopologyElemID. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_elem_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_elem_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1tristate-members.html:228,Modifiability,inherit,inherited,228,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::tristate Member List . This is the complete list of members for sofa::core::visual::tristate, including all inherited members. difference_tristate(const tristate &previous, const tristate &current)sofa::core::visual::tristatefriend; false_value enum valuesofa::core::visual::tristate; fusion_tristate(const tristate &lhs, const tristate &rhs)sofa::core::visual::tristatefriend; merge_tristate(const tristate &previous, const tristate &current)sofa::core::visual::tristatefriend; neutral_value enum valuesofa::core::visual::tristate; operator bool() constsofa::core::visual::tristateinline; operator!=(const tristate &t) constsofa::core::visual::tristateinline; operator!=(const state_t &s) constsofa::core::visual::tristateinline; operator==(const tristate &t) constsofa::core::visual::tristateinline; operator==(const state_t &s) constsofa::core::visual::tristateinline; statesofa::core::visual::tristate; state_t enum namesofa::core::visual::tristate; tristate(bool b)sofa::core::visual::tristateinline; tristate()sofa::core::visual::tristateinline; tristate(state_t state)sofa::core::visual::tristateinline; true_value enum valuesofa::core::visual::tristate. Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1visual_1_1tristate-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1tristate-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison-members.html:266,Modifiability,inherit,inherited,266,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::FlagTreeItem::ci_comparison Member List . This is the complete list of members for sofa::core::visual::FlagTreeItem::ci_comparison, including all inherited members. operator()(const std::string &s1, const std::string &s2) constsofa::core::visual::FlagTreeItem::ci_comparisoninline. Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison_1_1nocase__compare-members.html:298,Modifiability,inherit,inherited,298,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::FlagTreeItem::ci_comparison::nocase_compare Member List . This is the complete list of members for sofa::core::visual::FlagTreeItem::ci_comparison::nocase_compare, including all inherited members. operator()(const unsigned char &c1, const unsigned char &c2) constsofa::core::visual::FlagTreeItem::ci_comparison::nocase_compareinline. Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison_1_1nocase__compare-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison_1_1nocase__compare-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id-members.html:290,Modifiability,inherit,inherited,290,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Member List . This is the complete list of members for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >, including all inherited members. AccumulationVecId(const State< TDataTypes > &state)sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >inlineexplicit; AccumulationVecId()=deletesofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; addToContributingVecIds(core::ConstVecDerivId vecDerivId)sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; DataTypes typedefsofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Deriv typedefsofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; operator[](Size i) constsofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; removeFromContributingVecIds(core::ConstVecDerivId vecDerivId)sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >. Generated on Mon Nov 11 2024 03:13:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:680,Integrability,interface,interface,680,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:1811,Integrability,interface,interface,1811,"operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; Template Parameters. TDataTypesType of DOFs stored in the State . Public Member Functions; Deriv operator[] (Size i) const;  ; void addToContributingVecIds (core::ConstVecDerivId vecDerivId);  The provided VecDerivId container will contribute in the cumulative sum. More...;  ; void removeFromContributingVecIds (core::ConstVecDerivId vecDerivId);  ;  AccumulationVecId (const State< TDataTypes > &state);  ;  AccumulationVecId ()=delete;  . Constructor details. ◆ AccumulationV",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:1226,Modifiability,Inherit,Inheritance,1226,"ype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove Ve",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:359,Security,access,accessing,359,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:694,Security,access,accessing,694,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:844,Security,access,accessing,844,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:1490,Security,access,accessing,1490,"her containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; Template Parameters. TDataTypesType of DOFs stored in the State . Public Member Functions; Deriv operator[] ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:1825,Security,access,accessing,1825,"operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; Template Parameters. TDataTypesType of DOFs stored in the State . Public Member Functions; Deriv operator[] (Size i) const;  ; void addToContributingVecIds (core::ConstVecDerivId vecDerivId);  The provided VecDerivId container will contribute in the cumulative sum. More...;  ; void removeFromContributingVecIds (core::ConstVecDerivId vecDerivId);  ;  AccumulationVecId (const State< TDataTypes > &state);  ;  AccumulationVecId ()=delete;  . Constructor details. ◆ AccumulationV",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:1975,Security,access,accessing,1975,"dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; Template Parameters. TDataTypesType of DOFs stored in the State . Public Member Functions; Deriv operator[] (Size i) const;  ; void addToContributingVecIds (core::ConstVecDerivId vecDerivId);  The provided VecDerivId container will contribute in the cumulative sum. More...;  ; void removeFromContributingVecIds (core::ConstVecDerivId vecDerivId);  ;  AccumulationVecId (const State< TDataTypes > &state);  ;  AccumulationVecId ()=delete;  . Constructor details. ◆ AccumulationVecId() [1/2]. template<class TDataTypes , VecType vtype, VecAccess vaccess> . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >::AccumulationVecId ; (; const State< TDataTypes > & ; state). inlineexplicit . ◆ ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:669,Usability,simpl,simplified,669,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:1800,Usability,simpl,simplified,1800,"operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; Template Parameters. TDataTypesType of DOFs stored in the State . Public Member Functions; Deriv operator[] (Size i) const;  ; void addToContributingVecIds (core::ConstVecDerivId vecDerivId);  The provided VecDerivId container will contribute in the cumulative sum. More...;  ; void removeFromContributingVecIds (core::ConstVecDerivId vecDerivId);  ;  AccumulationVecId (const State< TDataTypes > &state);  ;  AccumulationVecId ()=delete;  . Constructor details. ◆ AccumulationV",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_data_tracker-members.html:218,Modifiability,inherit,inherited,218,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DataTracker Member List . This is the complete list of members for sofa::core::DataTracker, including all inherited members. clean(const objectmodel::BaseData &data)sofa::core::DataTracker; clean()sofa::core::DataTracker; DataTrackers typedefsofa::core::DataTrackerprotected; getMapTrackedData()sofa::core::DataTrackerinline; hasChanged(const objectmodel::BaseData &data) constsofa::core::DataTracker; hasChanged() constsofa::core::DataTracker; m_dataTrackerssofa::core::DataTrackerprotected; trackData(const objectmodel::BaseData &data)sofa::core::DataTracker. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_data_tracker-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_data_tracker-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_data_tracker.html:2336,Security,access,access,2336,"whether or not the data is up-to-date with its parent values while DataTracker::hasChanged(myData) checks whether the data has been modified since it has last been checked . Protected Attributes; DataTrackers m_dataTrackers;  . Public Member Functions; void trackData (const objectmodel::BaseData &data);  ; bool hasChanged (const objectmodel::BaseData &data) const;  ; bool hasChanged () const;  Did one of the tracked data change since the last call to clean()? More...;  ; void clean (const objectmodel::BaseData &data);  ; void clean ();  comparison point is cleaned for all tracked Data More...;  ; const std::map< const objectmodel::BaseData *, int > & getMapTrackedData ();  Provide the map of tracked Data. More...;  . Attribute details. ◆ m_dataTrackers. DataTrackers sofa::core::DataTracker::m_dataTrackers. protected . Function details. ◆ clean() [1/2]. void sofa::core::DataTracker::clean ; (; ). comparison point is cleaned for all tracked Data . ◆ clean() [2/2]. void sofa::core::DataTracker::clean ; (; const objectmodel::BaseData & ; data). comparison point is cleaned for the specified tracked Data Warningdata must be a tracked Data ; See alsotrackData . ◆ getMapTrackedData(). const std::map<const objectmodel::BaseData*,int>& sofa::core::DataTracker::getMapTrackedData ; (; ). inline . Provide the map of tracked Data. . ◆ hasChanged() [1/2]. bool sofa::core::DataTracker::hasChanged ; (; ); const. Did one of the tracked data change since the last call to clean()? . ◆ hasChanged() [2/2]. bool sofa::core::DataTracker::hasChanged ; (; const objectmodel::BaseData & ; data); const. Did the data change since its last access? Warningdata must be a tracked Data ; See alsotrackData . ◆ trackData(). void sofa::core::DataTracker::trackData ; (; const objectmodel::BaseData & ; data). select a Data to track to be able to check if it was dirtied since the previous clean. See alsoisTrackedDataDirty . sofacoreDataTracker; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_data_tracker.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_data_tracker.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative-members.html:262,Modifiability,inherit,inherited,262,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DerivativeMatrix< c >::Derivative Member List . This is the complete list of members for sofa::core::DerivativeMatrix< c >::Derivative, including all inherited members. checkValidity(const objectmodel::BaseObject *object) constsofa::core::DerivativeMatrix< c >::Derivativeinline; Derivative(BaseState *_mstate1, BaseState *_mstate2, DerivativeMatrix *_mat)sofa::core::DerivativeMatrix< c >::Derivativeinline; isValid() constsofa::core::DerivativeMatrix< c >::Derivativeinline; operator bool() constsofa::core::DerivativeMatrix< c >::Derivativeinline; operator()(sofa::SignedIndex row, sofa::SignedIndex col) constsofa::core::DerivativeMatrix< c >::Derivativeinline. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative_element-members.html:276,Modifiability,inherit,inherited,276,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DerivativeMatrix< c >::DerivativeElement Member List . This is the complete list of members for sofa::core::DerivativeMatrix< c >::DerivativeElement, including all inherited members. DerivativeElement(sofa::SignedIndex _row, sofa::SignedIndex _col, MatrixAccumulator *_mat)sofa::core::DerivativeMatrix< c >::DerivativeElementinline; isValid() constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator bool() constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const float value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const double value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< L, C, real > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 1, 1, float > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 1, 1, double > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 2, 2, float > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 2, 2, double > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 3, 3, float > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 3, 3, double > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 6, 6, float > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 6, 6, double > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative_element-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_geometric_stiffness_matrix_1_1_d_j-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::GeometricStiffnessMatrix::DJ Member List . This is the complete list of members for sofa::core::GeometricStiffnessMatrix::DJ, including all inherited members. DJ(BaseState *_mstate1, GeometricStiffnessMatrix *_mat)sofa::core::GeometricStiffnessMatrix::DJinline; withRespectToPositionsIn(BaseState *mstate2) constsofa::core::GeometricStiffnessMatrix::DJinline. Generated on Mon Nov 11 2024 03:13:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_geometric_stiffness_matrix_1_1_d_j-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_geometric_stiffness_matrix_1_1_d_j-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_object_factory_json-members.html:230,Modifiability,inherit,inherited,230,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ObjectFactoryJson Member List . This is the complete list of members for sofa::core::ObjectFactoryJson, including all inherited members. dump(ObjectFactory *factory)sofa::core::ObjectFactoryJsonstatic. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_object_factory_json-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_object_factory_json-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_object_registration_entry-members.html:242,Modifiability,inherit,inherited,242,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ObjectRegistrationEntry Member List . This is the complete list of members for sofa::core::ObjectRegistrationEntry, including all inherited members. funcsofa::core::ObjectRegistrationEntry; FuncPtr typedefsofa::core::ObjectRegistrationEntry; ObjectRegistrationEntry()sofa::core::ObjectRegistrationEntryinline; operator()(sofa::core::ObjectFactory *data)sofa::core::ObjectRegistrationEntryinline; symbolsofa::core::ObjectRegistrationEntryinlinestatic. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_object_registration_entry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_object_registration_entry-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type.html:434,Modifiability,variab,variables,434,"﻿. SOFA API: sofa::core::StateType< DataTypes, vtype > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateType< DataTypes, vtype > Struct Template Reference . #include <VecId.h>; Detailed Description; template<class DataTypes, core::VecType vtype>; struct sofa::core::StateType< DataTypes, vtype >; Maps a VecType to a DataTypes member typedef representing the state variables Example: StateType_t<DataTypes, core::V_COORD> returns the type DataTypes::Coord . sofacoreStateType; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateType< DataTypes, core::V_COORD > Member List . This is the complete list of members for sofa::core::StateType< DataTypes, core::V_COORD >, including all inherited members. type typedefsofa::core::StateType< DataTypes, core::V_COORD >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateType< DataTypes, core::V_DERIV > Member List . This is the complete list of members for sofa::core::StateType< DataTypes, core::V_DERIV >, including all inherited members. type typedefsofa::core::StateType< DataTypes, core::V_DERIV >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html:422,Modifiability,variab,variable,422,"﻿. SOFA API: sofa::core::StateTypeSize< DataTypes, vtype > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateTypeSize< DataTypes, vtype > Struct Template Reference . #include <VecId.h>; Detailed Description; template<class DataTypes, core::VecType vtype>; struct sofa::core::StateTypeSize< DataTypes, vtype >; Maps a VecType to a DataTypes member static variable representing the size of the state variables Example: StateTypeSize_v<DataTypes, core::V_COORD> is the value of DataTypes::coord_total_size . sofacoreStateTypeSize; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html:466,Modifiability,variab,variables,466,"﻿. SOFA API: sofa::core::StateTypeSize< DataTypes, vtype > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateTypeSize< DataTypes, vtype > Struct Template Reference . #include <VecId.h>; Detailed Description; template<class DataTypes, core::VecType vtype>; struct sofa::core::StateTypeSize< DataTypes, vtype >; Maps a VecType to a DataTypes member static variable representing the size of the state variables Example: StateTypeSize_v<DataTypes, core::V_COORD> is the value of DataTypes::coord_total_size . sofacoreStateTypeSize; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html:278,Modifiability,inherit,inherited,278,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateTypeSize< DataTypes, core::V_COORD > Member List . This is the complete list of members for sofa::core::StateTypeSize< DataTypes, core::V_COORD >, including all inherited members. total_sizesofa::core::StateTypeSize< DataTypes, core::V_COORD >static. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html:278,Modifiability,inherit,inherited,278,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateTypeSize< DataTypes, core::V_DERIV > Member List . This is the complete list of members for sofa::core::StateTypeSize< DataTypes, core::V_DERIV >, including all inherited members. total_sizesofa::core::StateTypeSize< DataTypes, core::V_DERIV >static. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html:274,Security,access,access,274,"﻿. SOFA API: sofa::core::StateVecAccessor< DataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, vtype, vaccess > Struct Template Reference . Helper class to access vectors of a given type in a given State. ; More...; Detailed Description; template<class DataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::StateVecAccessor< DataTypes, vtype, vaccess >; Helper class to access vectors of a given type in a given State. . sofacoreStateVecAccessor; Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html:499,Security,access,access,499,"﻿. SOFA API: sofa::core::StateVecAccessor< DataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, vtype, vaccess > Struct Template Reference . Helper class to access vectors of a given type in a given State. ; More...; Detailed Description; template<class DataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::StateVecAccessor< DataTypes, vtype, vaccess >; Helper class to access vectors of a given type in a given State. . sofacoreStateVecAccessor; Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___r_e_a_d_01_4-members.html:284,Modifiability,inherit,inherited,284,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >protected; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >inline; statesofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >protected; StateVecAccessor(const State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___r_e_a_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___r_e_a_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___w_r_i_t_e_01_4-members.html:286,Modifiability,inherit,inherited,286,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >protected; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >inline; statesofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >protected; StateVecAccessor(State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___w_r_i_t_e_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___w_r_i_t_e_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___r_e_a_d_01_4-members.html:288,Modifiability,inherit,inherited,288,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >inline; statesofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >protected; StateVecAccessor(const State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___r_e_a_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___r_e_a_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___w_r_i_t_e_01_4-members.html:290,Modifiability,inherit,inherited,290,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >inline; statesofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >protected; StateVecAccessor(State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >inline; write() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___w_r_i_t_e_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___w_r_i_t_e_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html:288,Modifiability,inherit,inherited,288,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >inline; statesofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >protected; StateVecAccessor(const State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html:290,Modifiability,inherit,inherited,290,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >inline; statesofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >protected; StateVecAccessor(State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >inline; write() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html:294,Modifiability,inherit,inherited,294,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >inline; statesofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >protected; StateVecAccessor(const State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html:296,Modifiability,inherit,inherited,296,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >inline; statesofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >protected; StateVecAccessor(State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >inline; write() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type.html:451,Modifiability,variab,variables,451,"﻿. SOFA API: sofa::core::StateVecType< DataTypes, vtype > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecType< DataTypes, vtype > Struct Template Reference . #include <VecId.h>; Detailed Description; template<class DataTypes, core::VecType vtype>; struct sofa::core::StateVecType< DataTypes, vtype >; Maps a VecType to a DataTypes member typedef representing a vector of state variables Example: StateVecType_t<DataTypes, core::V_COORD> returns the type DataTypes::VecCoord . sofacoreStateVecType; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html:276,Modifiability,inherit,inherited,276,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecType< DataTypes, core::V_COORD > Member List . This is the complete list of members for sofa::core::StateVecType< DataTypes, core::V_COORD >, including all inherited members. type typedefsofa::core::StateVecType< DataTypes, core::V_COORD >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html:276,Modifiability,inherit,inherited,276,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecType< DataTypes, core::V_DERIV > Member List . This is the complete list of members for sofa::core::StateVecType< DataTypes, core::V_DERIV >, including all inherited members. type typedefsofa::core::StateVecType< DataTypes, core::V_DERIV >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_vec_id_properties-members.html:226,Modifiability,inherit,inherited,226,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::VecIdProperties Member List . This is the complete list of members for sofa::core::VecIdProperties, including all inherited members. groupsofa::core::VecIdProperties; labelsofa::core::VecIdProperties. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_vec_id_properties-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_vec_id_properties-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html:234,Modifiability,inherit,inherited,234,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::BoolTypeInfo Member List . This is the complete list of members for sofa::defaulttype::BoolTypeInfo, including all inherited members. BaseType typedefsofa::defaulttype::BoolTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoolTypeInfo; byteSize()sofa::defaulttype::BoolTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoolTypeInfo; ConvType typedefsofa::defaulttype::BoolTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoolTypeInfo; DataType typedefsofa::defaulttype::BoolTypeInfo; FixedSize enum valuesofa::defaulttype::BoolTypeInfo; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoolTypeInfo; Scalar enum valuesofa::defaulttype::BoolTypeInfo; setSize(DataType &, sofa::Size)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(std::vector< DataType >::reference data, sofa::Size index, const T &v)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(std::vector< DataType >::reference data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoolTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoolTypeInfo; size()sofa::defaulttype::BoolTypeInfoinlinestatic; size(const DataType &)sofa::defaulttype::BoolTypeInfoinlinestatic; Size enum valuesofa::defaulttype::BoolTypeInfo; Text enum valueso",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html:1708,Usability,Simpl,SimpleCopy,1708,"rs. BaseType typedefsofa::defaulttype::BoolTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoolTypeInfo; byteSize()sofa::defaulttype::BoolTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoolTypeInfo; ConvType typedefsofa::defaulttype::BoolTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoolTypeInfo; DataType typedefsofa::defaulttype::BoolTypeInfo; FixedSize enum valuesofa::defaulttype::BoolTypeInfo; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoolTypeInfo; Scalar enum valuesofa::defaulttype::BoolTypeInfo; setSize(DataType &, sofa::Size)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(std::vector< DataType >::reference data, sofa::Size index, const T &v)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(std::vector< DataType >::reference data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoolTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoolTypeInfo; size()sofa::defaulttype::BoolTypeInfoinlinestatic; size(const DataType &)sofa::defaulttype::BoolTypeInfoinlinestatic; Size enum valuesofa::defaulttype::BoolTypeInfo; Text enum valuesofa::defaulttype::BoolTypeInfo; ValidInfo enum valuesofa::defaulttype::BoolTypeInfo; ValueType typedefsofa::defaulttype::BoolTypeInfo; ValueTypeInfo typedefsofa::defaulttype::BoolTypeInfo; ZeroConstructor enum valuesofa::defaulttype::BoolTypeInfo. Ge",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html:1762,Usability,Simpl,SimpleLayout,1762,"rs. BaseType typedefsofa::defaulttype::BoolTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoolTypeInfo; byteSize()sofa::defaulttype::BoolTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoolTypeInfo; ConvType typedefsofa::defaulttype::BoolTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoolTypeInfo; DataType typedefsofa::defaulttype::BoolTypeInfo; FixedSize enum valuesofa::defaulttype::BoolTypeInfo; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoolTypeInfo; Scalar enum valuesofa::defaulttype::BoolTypeInfo; setSize(DataType &, sofa::Size)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(std::vector< DataType >::reference data, sofa::Size index, const T &v)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(std::vector< DataType >::reference data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoolTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoolTypeInfo; size()sofa::defaulttype::BoolTypeInfoinlinestatic; size(const DataType &)sofa::defaulttype::BoolTypeInfoinlinestatic; Size enum valuesofa::defaulttype::BoolTypeInfo; Text enum valuesofa::defaulttype::BoolTypeInfo; ValidInfo enum valuesofa::defaulttype::BoolTypeInfo; ValueType typedefsofa::defaulttype::BoolTypeInfo; ValueTypeInfo typedefsofa::defaulttype::BoolTypeInfo; ZeroConstructor enum valuesofa::defaulttype::BoolTypeInfo. Ge",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info.html:271,Modifiability,Inherit,Inheritance,271,"﻿. SOFA API: sofa::defaulttype::BoolTypeInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::BoolTypeInfo Struct Reference . #include <BoolTypeInfo.h>. Inheritance diagram for sofa::defaulttype::BoolTypeInfo:. [legend]. Static Public Member Functions; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; template<typename T > ; static void setValue (std::vector< DataType >::reference data, sofa::Size index, const T &v);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static void setValueString (std::vector< DataType >::reference data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ byteSize(). static sofa::Size sofa::defaulttype::BoolTypeInfo::byteSize ; (; ). inlinestatic . ◆ getValue(). template<typename T > . static void sofa::defaulttype::BoolTypeInfo::getValue ; (; const DataType & ; data, . sofa::Size ; index, . T & ; value . ). inlinestatic . ◆ getValuePtr() [1/2]. static const void* sofa::defaulttype::BoolTypeInfo::getValuePtr ; (; const DataType & ; data). inlinestatic . ◆ getValuePtr() [2/2]. static void* sofa::defaulttype::BoolTypeInfo::getValuePtr ; (; DataType & ; data). inlinestatic . ◆ getValueString(). static void sofa::defaulttype::BoolTypeInfo::getValueString ; (; const DataType & ; data, . sofa::Size ; index, . std::string & ; value . ). inlinestatic . ◆ setSize(). static ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html:248,Modifiability,inherit,inherited,248,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::BoundingBoxTypeInfo Member List . This is the complete list of members for sofa::defaulttype::BoundingBoxTypeInfo, including all inherited members. BaseType typedefsofa::defaulttype::BoundingBoxTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoundingBoxTypeInfo; byteSize()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoundingBoxTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoundingBoxTypeInfo; DataType typedefsofa::defaulttype::BoundingBoxTypeInfo; FixedSize enum valuesofa::defaulttype::BoundingBoxTypeInfo; getScalarValue(const void *data, sofa::Size index)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(const DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoundingBoxTypeInfo; Scalar enum valuesofa::defaulttype::BoundingBoxTypeInfo; setScalarValue(const void *data, sofa::Size index, SReal value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setSize(DataType &, sofa::Size)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoundingBoxTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoundingBoxTypeInfo; Size enum valuesofa::defaulttype::BoundingBoxTypeInfo; size()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; size(const DataType &)sofa::de",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html:1734,Usability,Simpl,SimpleCopy,1734,"efsofa::defaulttype::BoundingBoxTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoundingBoxTypeInfo; byteSize()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoundingBoxTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoundingBoxTypeInfo; DataType typedefsofa::defaulttype::BoundingBoxTypeInfo; FixedSize enum valuesofa::defaulttype::BoundingBoxTypeInfo; getScalarValue(const void *data, sofa::Size index)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(const DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoundingBoxTypeInfo; Scalar enum valuesofa::defaulttype::BoundingBoxTypeInfo; setScalarValue(const void *data, sofa::Size index, SReal value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setSize(DataType &, sofa::Size)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoundingBoxTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoundingBoxTypeInfo; Size enum valuesofa::defaulttype::BoundingBoxTypeInfo; size()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; size(const DataType &)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Text enum valuesofa::defaulttype::BoundingBoxTypeInfo; ValidInfo enum valuesofa::defaulttype::BoundingBoxTypeInfo; ValueType typedefsofa::defaulttype::BoundingBoxTypeInfo; ZeroConstructor enum valuesofa::defaulttype::BoundingBoxTypeInfo.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html:1795,Usability,Simpl,SimpleLayout,1795,"efsofa::defaulttype::BoundingBoxTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoundingBoxTypeInfo; byteSize()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoundingBoxTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoundingBoxTypeInfo; DataType typedefsofa::defaulttype::BoundingBoxTypeInfo; FixedSize enum valuesofa::defaulttype::BoundingBoxTypeInfo; getScalarValue(const void *data, sofa::Size index)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(const DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoundingBoxTypeInfo; Scalar enum valuesofa::defaulttype::BoundingBoxTypeInfo; setScalarValue(const void *data, sofa::Size index, SReal value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setSize(DataType &, sofa::Size)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoundingBoxTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoundingBoxTypeInfo; Size enum valuesofa::defaulttype::BoundingBoxTypeInfo; size()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; size(const DataType &)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Text enum valuesofa::defaulttype::BoundingBoxTypeInfo; ValidInfo enum valuesofa::defaulttype::BoundingBoxTypeInfo; ValueType typedefsofa::defaulttype::BoundingBoxTypeInfo; ZeroConstructor enum valuesofa::defaulttype::BoundingBoxTypeInfo.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info.html:293,Modifiability,Inherit,Inheritance,293,"﻿. SOFA API: sofa::defaulttype::BoundingBoxTypeInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::BoundingBoxTypeInfo Struct Reference . #include <TypeInfo_BoundingBox.h>. Inheritance diagram for sofa::defaulttype::BoundingBoxTypeInfo:. [legend]. Static Public Member Functions; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  since TypeInfos abstract all containers as 1D arrays, T here is of ValueType More...;  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static double getScalarValue (const void *data, sofa::Size index);  ; static void setScalarValue (const void *data, sofa::Size index, SReal value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &bbox);  ; static void * getValuePtr (DataType &bbox);  . Function details. ◆ byteSize(). static sofa::Size sofa::defaulttype::BoundingBoxTypeInfo::byteSize ; (; ). inlinestatic . ◆ getScalarValue(). static double sofa::defaulttype::BoundingBoxTypeInfo::getScalarValue ; (; const void * ; data, . sofa::Size ; index . ). inlinestatic . ◆ getValue(). template<typename T > . static void sofa::defaulttype::BoundingBoxTypeInfo::getValue ; (; const DataType & ; data, . sofa::Size ; index, . T & ; value . ). inlinestatic . since TypeInfos abstract all containers as 1D arrays, T here is of ValueType . ◆ getValuePtr() [1/2]. static const void* sofa::defaulttype::BoundingBoxTypeInfo::getValuePtr ; (; const DataType & ; bbox). inlinestatic . ◆ getValuePtr() [2/2]. static vo",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; byteSize()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; DataType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValue(const DataType &, Index, T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, Index, std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; name()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValue(DataType &, Index, const T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValueString(DataType &, Index, const std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; Size enum valuesofa::defaulttype::DefaultDataTypeInfo",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html:1798,Usability,Simpl,SimpleCopy,1798,"efaultDataTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; DataType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValue(const DataType &, Index, T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, Index, std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; name()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValue(DataType &, Index, const T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValueString(DataType &, Index, const std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; Size enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; size()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Text enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html:1872,Usability,Simpl,SimpleLayout,1872,"efaultDataTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; DataType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValue(const DataType &, Index, T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, Index, std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; name()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValue(DataType &, Index, const T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValueString(DataType &, Index, const std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; Size enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; size()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Text enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html:281,Modifiability,Inherit,Inheritance,281,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< TDataType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::DataTypeInfo< TDataType > Struct Template Reference . #include <DataTypeInfo.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< TDataType >:. [legend]; Detailed Description; template<class TDataType>; struct sofa::defaulttype::DataTypeInfo< TDataType >; Type traits class for objects stored in Data.; DataTypeInfo is part of the introspection/reflection capabilities of the Sofa scene graph API; it is used to manipulate Data values generically in template code, working transparently with different types of containers (vector, fixed_array, etc), and different types of values (integers, scalars (float, double), strings, etc). For example, it can be used to work with arrays without having to handle all the possible array classes used in Sofa: fixed or dynamic size, CPU or GPU, etc.; Small example; Iterate over the values of a DataType in templated code:; template<DataType>; MyComponent::someMethod(DataType& data) {; const sofa::Size dim = defaulttype::DataTypeInfo<Coord>::size();; for(sofa::Size i = 0; i < dim; ++i) {; DataTypeInfo<DataType>::ValueType value;; DataTypeInfo<Coord>::getValue(data, i, value);; // [...] Do something with 'value'; }; }; sofa::helper::dimSReal SReal SReal SReal int SReal int dimDefinition: LCPcalc.h:100; sofa::defaulttype::DefaultDataTypeInfo::DataTypeTDataType DataTypeTemplate parameter.Definition: DataTypeInfo.h:77; sofa::defaulttype::DefaultDataTypeInfo::ValueTypeDataType ValueTypeType of the final atomic values (i.e. the values indexed by getValue()).Definition: DataTypeInfo.h:82; sofa::defaulttype::DefaultDataTypeInfo::sizestatic sofa::Size size()Definition: DataTypeInfo.h:104; sofa::defaulttype::DefaultDataTypeInfo::getValuestatic void getValue(const DataType &, Index, T &)Definition: DataTypeInfo.h:110; Note about size and indices; ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html:2450,Modifiability,Inherit,Inherited,2450,"getValue(data, i, value);; // [...] Do something with 'value'; }; }; sofa::helper::dimSReal SReal SReal SReal int SReal int dimDefinition: LCPcalc.h:100; sofa::defaulttype::DefaultDataTypeInfo::DataTypeTDataType DataTypeTemplate parameter.Definition: DataTypeInfo.h:77; sofa::defaulttype::DefaultDataTypeInfo::ValueTypeDataType ValueTypeType of the final atomic values (i.e. the values indexed by getValue()).Definition: DataTypeInfo.h:82; sofa::defaulttype::DefaultDataTypeInfo::sizestatic sofa::Size size()Definition: DataTypeInfo.h:104; sofa::defaulttype::DefaultDataTypeInfo::getValuestatic void getValue(const DataType &, Index, T &)Definition: DataTypeInfo.h:110; Note about size and indices; The getValue() and setValue() methods take an index as a parameter, with the following conventions:. If a type is not a container, then the index must be 0.; Multi-dimensional containers are abstracted to a single dimension. This allows iterating over any container using a single index, at the price of some limitations. See alsoAbstractTypeInfo provides similar mechanisms to manipulate Data objects generically in non-template code. . Additional Inherited Members;  Static Public Member Functions inherited from sofa::defaulttype::DefaultDataTypeInfo< TDataType >; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; template<typename T > ; static void getValue (const DataType &, Index, T &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void setValue (DataType &, Index, const T &);  ; static void getValueString (const DataType &, Index, std::string &);  ; static void setValueString (DataType &, Index, const std::string &);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . sofadefaulttypeDataTypeInfo; Generated on Mon Nov 11 2024 03:17:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html:2501,Modifiability,inherit,inherited,2501,"getValue(data, i, value);; // [...] Do something with 'value'; }; }; sofa::helper::dimSReal SReal SReal SReal int SReal int dimDefinition: LCPcalc.h:100; sofa::defaulttype::DefaultDataTypeInfo::DataTypeTDataType DataTypeTemplate parameter.Definition: DataTypeInfo.h:77; sofa::defaulttype::DefaultDataTypeInfo::ValueTypeDataType ValueTypeType of the final atomic values (i.e. the values indexed by getValue()).Definition: DataTypeInfo.h:82; sofa::defaulttype::DefaultDataTypeInfo::sizestatic sofa::Size size()Definition: DataTypeInfo.h:104; sofa::defaulttype::DefaultDataTypeInfo::getValuestatic void getValue(const DataType &, Index, T &)Definition: DataTypeInfo.h:110; Note about size and indices; The getValue() and setValue() methods take an index as a parameter, with the following conventions:. If a type is not a container, then the index must be 0.; Multi-dimensional containers are abstracted to a single dimension. This allows iterating over any container using a single index, at the price of some limitations. See alsoAbstractTypeInfo provides similar mechanisms to manipulate Data objects generically in non-template code. . Additional Inherited Members;  Static Public Member Functions inherited from sofa::defaulttype::DefaultDataTypeInfo< TDataType >; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; template<typename T > ; static void getValue (const DataType &, Index, T &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void setValue (DataType &, Index, const T &);  ; static void getValueString (const DataType &, Index, std::string &);  ; static void setValueString (DataType &, Index, const std::string &);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . sofadefaulttypeDataTypeInfo; Generated on Mon Nov 11 2024 03:17:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< bool > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< bool >, including all inherited members. BaseType typedefsofa::defaulttype::BoolTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoolTypeInfo; byteSize()sofa::defaulttype::BoolTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoolTypeInfo; ConvType typedefsofa::defaulttype::BoolTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoolTypeInfo; DataType typedefsofa::defaulttype::BoolTypeInfo; FixedSize enum valuesofa::defaulttype::BoolTypeInfo; GetTypeName()sofa::defaulttype::DataTypeInfo< bool >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoolTypeInfo; name()sofa::defaulttype::DataTypeInfo< bool >inlinestatic; Scalar enum valuesofa::defaulttype::BoolTypeInfo; setSize(DataType &, sofa::Size)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(std::vector< DataType >::reference data, sofa::Size index, const T &v)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(std::vector< DataType >::reference data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoolTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoolTypeInfo; Size enum valuesofa::defaulttype::BoolType",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html:1849,Usability,Simpl,SimpleCopy,1849,"defaulttype::BoolTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoolTypeInfo; ConvType typedefsofa::defaulttype::BoolTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoolTypeInfo; DataType typedefsofa::defaulttype::BoolTypeInfo; FixedSize enum valuesofa::defaulttype::BoolTypeInfo; GetTypeName()sofa::defaulttype::DataTypeInfo< bool >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoolTypeInfo; name()sofa::defaulttype::DataTypeInfo< bool >inlinestatic; Scalar enum valuesofa::defaulttype::BoolTypeInfo; setSize(DataType &, sofa::Size)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(std::vector< DataType >::reference data, sofa::Size index, const T &v)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(std::vector< DataType >::reference data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoolTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoolTypeInfo; Size enum valuesofa::defaulttype::BoolTypeInfo; size()sofa::defaulttype::BoolTypeInfoinlinestatic; size(const DataType &)sofa::defaulttype::BoolTypeInfoinlinestatic; Text enum valuesofa::defaulttype::BoolTypeInfo; ValidInfo enum valuesofa::defaulttype::BoolTypeInfo; ValueType typedefsofa::defaulttype::BoolTypeInfo; ValueTypeInfo typedefsofa::defaulttype::BoolTypeInfo; ZeroConstructor enum valuesofa::defaulttype::BoolTypeInfo.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html:1903,Usability,Simpl,SimpleLayout,1903,"defaulttype::BoolTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoolTypeInfo; ConvType typedefsofa::defaulttype::BoolTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoolTypeInfo; DataType typedefsofa::defaulttype::BoolTypeInfo; FixedSize enum valuesofa::defaulttype::BoolTypeInfo; GetTypeName()sofa::defaulttype::DataTypeInfo< bool >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoolTypeInfo; name()sofa::defaulttype::DataTypeInfo< bool >inlinestatic; Scalar enum valuesofa::defaulttype::BoolTypeInfo; setSize(DataType &, sofa::Size)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(std::vector< DataType >::reference data, sofa::Size index, const T &v)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(std::vector< DataType >::reference data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoolTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoolTypeInfo; Size enum valuesofa::defaulttype::BoolTypeInfo; size()sofa::defaulttype::BoolTypeInfoinlinestatic; size(const DataType &)sofa::defaulttype::BoolTypeInfoinlinestatic; Text enum valuesofa::defaulttype::BoolTypeInfo; ValidInfo enum valuesofa::defaulttype::BoolTypeInfo; ValueType typedefsofa::defaulttype::BoolTypeInfo; ValueTypeInfo typedefsofa::defaulttype::BoolTypeInfo; ZeroConstructor enum valuesofa::defaulttype::BoolTypeInfo.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4.html:288,Modifiability,Inherit,Inheritance,288,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< bool > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< bool > Struct Reference . #include <TypeInfo_Bool.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< bool >:. [legend]. Static Public Member Functions; static const std::string name ();  ; static const std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::BoolTypeInfo; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; template<typename T > ; static void setValue (std::vector< DataType >::reference data, sofa::Size index, const T &v);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static void setValueString (std::vector< DataType >::reference data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< bool >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< bool >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< bool >; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4.html:509,Modifiability,inherit,inherited,509,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< bool > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< bool > Struct Reference . #include <TypeInfo_Bool.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< bool >:. [legend]. Static Public Member Functions; static const std::string name ();  ; static const std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::BoolTypeInfo; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; template<typename T > ; static void setValue (std::vector< DataType >::reference data, sofa::Size index, const T &v);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static void setValueString (std::vector< DataType >::reference data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< bool >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< bool >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< bool >; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< char > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< char >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< char >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< char >; byteSize()sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< char >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< char >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< char >; DataType typedefsofa::defaulttype::IntegerTypeInfo< char >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< char >; GetTypeName()sofa::defaulttype::DataTypeInfo< char >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< char >; name()sofa::defaulttype::DataTypeInfo< char >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< char >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< char >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< char >; Size enum valuesofa::defaulttype::IntegerTypeInfo< char >; size()sofa::defaulttype::IntegerTypeInfo< ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html:1768,Usability,Simpl,SimpleCopy,1768,"type::IntegerTypeInfo< char >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< char >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< char >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< char >; DataType typedefsofa::defaulttype::IntegerTypeInfo< char >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< char >; GetTypeName()sofa::defaulttype::DataTypeInfo< char >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< char >; name()sofa::defaulttype::DataTypeInfo< char >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< char >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< char >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< char >; Size enum valuesofa::defaulttype::IntegerTypeInfo< char >; size()sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< char >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< char >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< char >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< char >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< char >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html:1833,Usability,Simpl,SimpleLayout,1833,"type::IntegerTypeInfo< char >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< char >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< char >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< char >; DataType typedefsofa::defaulttype::IntegerTypeInfo< char >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< char >; GetTypeName()sofa::defaulttype::DataTypeInfo< char >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< char >; name()sofa::defaulttype::DataTypeInfo< char >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< char >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< char >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< char >; Size enum valuesofa::defaulttype::IntegerTypeInfo< char >; size()sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< char >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< char >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< char >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< char >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< char >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4.html:291,Modifiability,Inherit,Inheritance,291,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< char > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< char > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< char >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< char >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< char >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< char >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< char >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4.html:512,Modifiability,inherit,inherited,512,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< char > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< char > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< char >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< char >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< char >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< char >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< char >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html:254,Modifiability,inherit,inherited,254,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< double > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< double >, including all inherited members. BaseType typedefsofa::defaulttype::ScalarTypeInfo< double >; BaseTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< double >; byteSize()sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< double >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< double >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< double >; DataType typedefsofa::defaulttype::ScalarTypeInfo< double >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< double >; GetTypeName()sofa::defaulttype::DataTypeInfo< double >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< double >; name()sofa::defaulttype::DataTypeInfo< double >inlinestatic; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< double >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< double >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< double >; Size enum valuesofa::defaulttype::ScalarTypeInfo< double >; size()sofa::de",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html:1793,Usability,Simpl,SimpleCopy,1793,">inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< double >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< double >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< double >; DataType typedefsofa::defaulttype::ScalarTypeInfo< double >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< double >; GetTypeName()sofa::defaulttype::DataTypeInfo< double >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< double >; name()sofa::defaulttype::DataTypeInfo< double >inlinestatic; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< double >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< double >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< double >; Size enum valuesofa::defaulttype::ScalarTypeInfo< double >; size()sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; size(const DataType &)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; Text enum valuesofa::defaulttype::ScalarTypeInfo< double >; ValidInfo enum valuesofa::defaulttype::ScalarTypeInfo< double >; ValueType typedefsofa::defaulttype::ScalarTypeInfo< double >; ValueTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< double >; ZeroConstructor enum valuesofa::defaulttype::ScalarTypeInfo< double >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html:1859,Usability,Simpl,SimpleLayout,1859,">inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< double >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< double >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< double >; DataType typedefsofa::defaulttype::ScalarTypeInfo< double >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< double >; GetTypeName()sofa::defaulttype::DataTypeInfo< double >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< double >; name()sofa::defaulttype::DataTypeInfo< double >inlinestatic; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< double >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< double >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< double >; Size enum valuesofa::defaulttype::ScalarTypeInfo< double >; size()sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; size(const DataType &)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; Text enum valuesofa::defaulttype::ScalarTypeInfo< double >; ValidInfo enum valuesofa::defaulttype::ScalarTypeInfo< double >; ValueType typedefsofa::defaulttype::ScalarTypeInfo< double >; ValueTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< double >; ZeroConstructor enum valuesofa::defaulttype::ScalarTypeInfo< double >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4.html:294,Modifiability,Inherit,Inheritance,294,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< double > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< double > Struct Reference . #include <TypeInfo_Scalar.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< double >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::ScalarTypeInfo< double >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< double >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< double >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< double >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4.html:517,Modifiability,inherit,inherited,517,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< double > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< double > Struct Reference . #include <TypeInfo_Scalar.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< double >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::ScalarTypeInfo< double >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< double >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< double >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< double >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< float > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< float >, including all inherited members. BaseType typedefsofa::defaulttype::ScalarTypeInfo< float >; BaseTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< float >; byteSize()sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< float >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< float >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< float >; DataType typedefsofa::defaulttype::ScalarTypeInfo< float >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< float >; GetTypeName()sofa::defaulttype::DataTypeInfo< float >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< float >; name()sofa::defaulttype::DataTypeInfo< float >inlinestatic; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< float >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< float >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< float >; Size enum valuesofa::defaulttype::ScalarTypeInfo< float >; size()sofa::defaulttype::ScalarTypeInf",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html:1772,Usability,Simpl,SimpleCopy,1772,"pe::ScalarTypeInfo< float >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< float >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< float >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< float >; DataType typedefsofa::defaulttype::ScalarTypeInfo< float >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< float >; GetTypeName()sofa::defaulttype::DataTypeInfo< float >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< float >; name()sofa::defaulttype::DataTypeInfo< float >inlinestatic; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< float >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< float >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< float >; Size enum valuesofa::defaulttype::ScalarTypeInfo< float >; size()sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; size(const DataType &)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; Text enum valuesofa::defaulttype::ScalarTypeInfo< float >; ValidInfo enum valuesofa::defaulttype::ScalarTypeInfo< float >; ValueType typedefsofa::defaulttype::ScalarTypeInfo< float >; ValueTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< float >; ZeroConstructor enum valuesofa::defaulttype::ScalarTypeInfo< float >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html:1837,Usability,Simpl,SimpleLayout,1837,"pe::ScalarTypeInfo< float >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< float >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< float >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< float >; DataType typedefsofa::defaulttype::ScalarTypeInfo< float >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< float >; GetTypeName()sofa::defaulttype::DataTypeInfo< float >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< float >; name()sofa::defaulttype::DataTypeInfo< float >inlinestatic; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< float >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< float >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< float >; Size enum valuesofa::defaulttype::ScalarTypeInfo< float >; size()sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; size(const DataType &)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; Text enum valuesofa::defaulttype::ScalarTypeInfo< float >; ValidInfo enum valuesofa::defaulttype::ScalarTypeInfo< float >; ValueType typedefsofa::defaulttype::ScalarTypeInfo< float >; ValueTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< float >; ZeroConstructor enum valuesofa::defaulttype::ScalarTypeInfo< float >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4.html:292,Modifiability,Inherit,Inheritance,292,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< float > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< float > Struct Reference . #include <TypeInfo_Scalar.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< float >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::ScalarTypeInfo< float >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< float >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< float >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< float >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4.html:514,Modifiability,inherit,inherited,514,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< float > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< float > Struct Reference . #include <TypeInfo_Scalar.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< float >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::ScalarTypeInfo< float >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< float >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< float >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< float >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html:248,Modifiability,inherit,inherited,248,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< int > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< int >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< int >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< int >; byteSize()sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< int >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< int >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< int >; DataType typedefsofa::defaulttype::IntegerTypeInfo< int >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< int >; GetTypeName()sofa::defaulttype::DataTypeInfo< int >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< int >; name()sofa::defaulttype::DataTypeInfo< int >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< int >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< int >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< int >; Size enum valuesofa::defaulttype::IntegerTypeInfo< int >; size()sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; size(",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html:1747,Usability,Simpl,SimpleCopy,1747," >; byteSize()sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< int >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< int >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< int >; DataType typedefsofa::defaulttype::IntegerTypeInfo< int >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< int >; GetTypeName()sofa::defaulttype::DataTypeInfo< int >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< int >; name()sofa::defaulttype::DataTypeInfo< int >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< int >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< int >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< int >; Size enum valuesofa::defaulttype::IntegerTypeInfo< int >; size()sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< int >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< int >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< int >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< int >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< int >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html:1811,Usability,Simpl,SimpleLayout,1811," >; byteSize()sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< int >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< int >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< int >; DataType typedefsofa::defaulttype::IntegerTypeInfo< int >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< int >; GetTypeName()sofa::defaulttype::DataTypeInfo< int >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< int >; name()sofa::defaulttype::DataTypeInfo< int >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< int >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< int >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< int >; Size enum valuesofa::defaulttype::IntegerTypeInfo< int >; size()sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< int >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< int >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< int >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< int >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< int >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4.html:289,Modifiability,Inherit,Inheritance,289,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< int > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< int > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< int >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< int >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< int >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< int >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< int >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4.html:509,Modifiability,inherit,inherited,509,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< int > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< int > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< int >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< int >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< int >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< int >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< int >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< long long > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< long long >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< long long >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< long long >; byteSize()sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< long long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< long long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< long long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< long long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< long long >; GetTypeName()sofa::defaulttype::DataTypeInfo< long long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< long long >; name()sofa::defaulttype::DataTypeInfo< long long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< long long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< long long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo<",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html:1873,Usability,Simpl,SimpleCopy,1873,"fa::defaulttype::IntegerTypeInfo< long long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< long long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< long long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< long long >; GetTypeName()sofa::defaulttype::DataTypeInfo< long long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< long long >; name()sofa::defaulttype::DataTypeInfo< long long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< long long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< long long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< long long >; Size enum valuesofa::defaulttype::IntegerTypeInfo< long long >; size()sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< long long >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< long long >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< long long >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< long long >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< long long >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html:1943,Usability,Simpl,SimpleLayout,1943,"fa::defaulttype::IntegerTypeInfo< long long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< long long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< long long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< long long >; GetTypeName()sofa::defaulttype::DataTypeInfo< long long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< long long >; name()sofa::defaulttype::DataTypeInfo< long long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< long long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< long long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< long long >; Size enum valuesofa::defaulttype::IntegerTypeInfo< long long >; size()sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< long long >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< long long >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< long long >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< long long >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< long long >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4.html:301,Modifiability,Inherit,Inheritance,301,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< long long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< long long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< long long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< long long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< long long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< long long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< long long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4.html:527,Modifiability,inherit,inherited,527,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< long long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< long long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< long long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< long long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< long long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< long long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< long long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< long > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< long >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< long >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< long >; byteSize()sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< long >; GetTypeName()sofa::defaulttype::DataTypeInfo< long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< long >; name()sofa::defaulttype::DataTypeInfo< long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< long >; Size enum valuesofa::defaulttype::IntegerTypeInfo< long >; size()sofa::defaulttype::IntegerTypeInfo< ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html:1768,Usability,Simpl,SimpleCopy,1768,"type::IntegerTypeInfo< long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< long >; GetTypeName()sofa::defaulttype::DataTypeInfo< long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< long >; name()sofa::defaulttype::DataTypeInfo< long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< long >; Size enum valuesofa::defaulttype::IntegerTypeInfo< long >; size()sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< long >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< long >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< long >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< long >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< long >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html:1833,Usability,Simpl,SimpleLayout,1833,"type::IntegerTypeInfo< long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< long >; GetTypeName()sofa::defaulttype::DataTypeInfo< long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< long >; name()sofa::defaulttype::DataTypeInfo< long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< long >; Size enum valuesofa::defaulttype::IntegerTypeInfo< long >; size()sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< long >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< long >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< long >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< long >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< long >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4.html:291,Modifiability,Inherit,Inheritance,291,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4.html:512,Modifiability,inherit,inherited,512,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< short > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< short >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< short >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< short >; byteSize()sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< short >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< short >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< short >; DataType typedefsofa::defaulttype::IntegerTypeInfo< short >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< short >; GetTypeName()sofa::defaulttype::DataTypeInfo< short >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< short >; name()sofa::defaulttype::DataTypeInfo< short >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< short >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< short >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< short >; Size enum valuesofa::defaulttype::IntegerTypeInfo< short >; size()sofa::defaul",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html:1789,Usability,Simpl,SimpleCopy,1789,"t >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< short >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< short >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< short >; DataType typedefsofa::defaulttype::IntegerTypeInfo< short >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< short >; GetTypeName()sofa::defaulttype::DataTypeInfo< short >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< short >; name()sofa::defaulttype::DataTypeInfo< short >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< short >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< short >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< short >; Size enum valuesofa::defaulttype::IntegerTypeInfo< short >; size()sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< short >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< short >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< short >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< short >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< short >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html:1855,Usability,Simpl,SimpleLayout,1855,"t >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< short >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< short >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< short >; DataType typedefsofa::defaulttype::IntegerTypeInfo< short >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< short >; GetTypeName()sofa::defaulttype::DataTypeInfo< short >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< short >; name()sofa::defaulttype::DataTypeInfo< short >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< short >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< short >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< short >; Size enum valuesofa::defaulttype::IntegerTypeInfo< short >; size()sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< short >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< short >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< short >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< short >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< short >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4.html:293,Modifiability,Inherit,Inheritance,293,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< short > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< short > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< short >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< short >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< short >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< short >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< short >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4.html:515,Modifiability,inherit,inherited,515,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< short > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< short > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< short >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< short >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< short >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< short >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< short >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html:298,Modifiability,inherit,inherited,298,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >, including all inherited members. BaseType typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; BaseTypeInfo typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; byteSize()sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Container enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ConvType typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; CopyOnWrite enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; DataType typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; FixedSize enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; name()sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Scalar enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; setValueString(DataType &data",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html:2123,Usability,Simpl,SimpleCopy,2123,":Tag >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; name()sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Scalar enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; SimpleCopy enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; SimpleLayout enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; Size enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; size()sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; size(const DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Text enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ValidInfo enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ValueType typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ValueTypeInfo typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ZeroConstructor enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html:2209,Usability,Simpl,SimpleLayout,2209,":Tag >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; name()sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Scalar enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; SimpleCopy enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; SimpleLayout enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; Size enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; size()sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; size(const DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Text enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ValidInfo enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ValueType typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ValueTypeInfo typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ZeroConstructor enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4.html:326,Modifiability,Inherit,Inheritance,326,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag > Struct Reference . #include <Tag.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >:. [legend]. Static Public Member Functions; static const char * name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ name(). static const char* sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::core::objectmodel::Tag >; Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4.html:522,Modifiability,inherit,inherited,522,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag > Struct Reference . #include <Tag.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >:. [legend]. Static Public Member Functions; static const char * name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ name(). static const char* sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::core::objectmodel::Tag >; Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html:304,Modifiability,inherit,inherited,304,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >, including all inherited members. BaseType typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; BaseTypeInfo typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; byteSize()sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Container enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; CopyOnWrite enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; DataType typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; FixedSize enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; name()sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Scalar enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa:",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html:2075,Usability,Simpl,SimpleCopy,2075,", sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; name()sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Scalar enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; SimpleCopy enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; SimpleLayout enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; Size enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; size()sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; size(const DataType &data)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Text enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; ValidInfo enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; ValueType typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; ValueTypeInfo typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; ZeroConstructor enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html:2163,Usability,Simpl,SimpleLayout,2163,", sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; name()sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Scalar enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; SimpleCopy enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; SimpleLayout enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; Size enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; size()sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; size(const DataType &data)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Text enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; ValidInfo enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; ValueType typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; ValueTypeInfo typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; ZeroConstructor enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4.html:335,Modifiability,Inherit,Inheritance,335,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet > Struct Reference . #include <TagSet.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >:. [legend]. Static Public Member Functions; static const char * name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ name(). static const char* sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::core::objectmodel::TagSet >; Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4.html:534,Modifiability,inherit,inherited,534,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet > Struct Reference . #include <TagSet.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >:. [legend]. Static Public Member Functions; static const char * name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ name(). static const char* sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::core::objectmodel::TagSet >; Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html:322,Modifiability,inherit,inherited,322,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::de",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html:3349,Usability,Simpl,SimpleCopy,3349,"ulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeI",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html:3507,Usability,Simpl,SimpleLayout,3507,"eInfo< sofa::defaulttype::RigidCoord< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4.html:384,Modifiability,Inherit,Inheritance,384,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4.html:629,Modifiability,inherit,inherited,629,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html:322,Modifiability,inherit,inherited,322,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::de",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html:3349,Usability,Simpl,SimpleCopy,3349,"ulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeI",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html:3507,Usability,Simpl,SimpleLayout,3507,"eInfo< sofa::defaulttype::RigidDeriv< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4.html:384,Modifiability,Inherit,Inheritance,384,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4.html:629,Modifiability,inherit,inherited,629,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html:320,Modifiability,inherit,inherited,320,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; BaseTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; byteSize()sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; Container enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; CopyOnWrite enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; DataType typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; FixedSize enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValuePtr(const RigidMass< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValuePtr(RigidMass< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; setValueString(Data",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html:2131,Usability,Simpl,SimpleCopy,2131,"efaulttype::RigidMass< N, real > >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValuePtr(const RigidMass< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValuePtr(RigidMass< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; SimpleLayout enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; Size enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; size()sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; size(const DataType &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; Text enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; ValidInfo enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; ValueType typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; ValueTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; ZeroConstructor enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html:2215,Usability,Simpl,SimpleLayout,2215,"efaulttype::RigidMass< N, real > >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValuePtr(const RigidMass< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValuePtr(RigidMass< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; SimpleLayout enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; Size enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; size()sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; size(const DataType &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; Text enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; ValidInfo enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; ValueType typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; ValueTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; ZeroConstructor enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4.html:382,Modifiability,Inherit,Inheritance,382,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static void getValue (const DataType &, sofa::Size, T &);  ; static bool setSize (DataType &, sofa::Size);  ; static void setValue (DataType &, sofa::Size, const T &);  ; static void getValueString (const DataType &, sofa::Size, std::string &);  ; static const void * getValuePtr (const RigidMass< N, real > &data);  ; static void * getValuePtr (RigidMass< N, real > &data);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::RigidMass< N, real > >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4.html:626,Modifiability,inherit,inherited,626,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static void getValue (const DataType &, sofa::Size, T &);  ; static bool setSize (DataType &, sofa::Size);  ; static void setValue (DataType &, sofa::Size, const T &);  ; static void getValueString (const DataType &, sofa::Size, std::string &);  ; static const void * getValuePtr (const RigidMass< N, real > &data);  ; static void * getValuePtr (RigidMass< N, real > &data);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::RigidMass< N, real > >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html:328,Modifiability,inherit,inherited,328,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; BaseTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; byteSize()sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Container enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; CopyOnWrite enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; DataType typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; FixedSize enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValuePtr(const sofa::defaulttype::StdRigidTypes< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValuePtr(sofa::defaulttype::StdRigidTypes< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html:2561,Usability,Simpl,SimpleCopy,2561,"efaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; SimpleLayout enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; Size enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; size()sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; size(const DataType &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Text enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; ValidInfo enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; ValueType typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; ValueTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; ZeroConstructor enum valuesofa::defaulttype::Inc",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html:2668,Usability,Simpl,SimpleLayout,2668,"s< N, real > >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; SimpleLayout enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; Size enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; size()sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; size(const DataType &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Text enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; ValidInfo enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; ValueType typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; ValueTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; ZeroConstructor enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4.html:390,Modifiability,Inherit,Inheritance,390,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static void getValue (const DataType &, sofa::Size, T &);  ; static bool setSize (DataType &, sofa::Size);  ; static void setValue (DataType &, sofa::Size, const T &);  ; static void getValueString (const DataType &, sofa::Size, std::string &);  ; static const void * getValuePtr (const sofa::defaulttype::StdRigidTypes< N, real > &data);  ; static void * getValuePtr (sofa::defaulttype::StdRigidTypes< N, real > &data);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; Generated on Mon Nov 11 2024 03:18:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4.html:638,Modifiability,inherit,inherited,638,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static void getValue (const DataType &, sofa::Size, T &);  ; static bool setSize (DataType &, sofa::Size);  ; static void setValue (DataType &, sofa::Size, const T &);  ; static void getValueString (const DataType &, sofa::Size, std::string &);  ; static const void * getValuePtr (const sofa::defaulttype::StdRigidTypes< N, real > &data);  ; static void * getValuePtr (sofa::defaulttype::StdRigidTypes< N, real > &data);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; Generated on Mon Nov 11 2024 03:18:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html:282,Modifiability,inherit,inherited,282,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Edge > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html:2003,Usability,Simpl,SimpleCopy,2003,"ypeInfo< sofa::topology::Edge >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html:2087,Usability,Simpl,SimpleLayout,2087,"ypeInfo< sofa::topology::Edge >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4.html:324,Modifiability,Inherit,Inheritance,324,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Edge > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Edge > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Edge >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4.html:511,Modifiability,inherit,inherited,511,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Edge > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Edge > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Edge >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html:294,Modifiability,inherit,inherited,294,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; setValueString(DataType &data, sofa::Si",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html:2117,Usability,Simpl,SimpleCopy,2117,"TypeInfo< sofa::topology::Hexahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html:2207,Usability,Simpl,SimpleLayout,2207,"TypeInfo< sofa::topology::Hexahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4.html:336,Modifiability,Inherit,Inheritance,336,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Hexahedron >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4.html:529,Modifiability,inherit,inherited,529,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Hexahedron >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html:296,Modifiability,inherit,inherited,296,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; setValueString(DataTy",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html:2136,Usability,Simpl,SimpleCopy,2136,"logy::Pentahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html:2227,Usability,Simpl,SimpleLayout,2227,"logy::Pentahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4.html:338,Modifiability,Inherit,Inheritance,338,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Pentahedron >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4.html:532,Modifiability,inherit,inherited,532,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Pentahedron >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html:288,Modifiability,inherit,inherited,288,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html:2060,Usability,Simpl,SimpleCopy,2060,"ta, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html:2147,Usability,Simpl,SimpleLayout,2147,"ta, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4.html:330,Modifiability,Inherit,Inheritance,330,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Pyramid >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4.html:520,Modifiability,inherit,inherited,520,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Pyramid >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html:282,Modifiability,inherit,inherited,282,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Quad > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; setSize(DataType &data, sofa::Size size)sofa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html:2435,Usability,Simpl,SimpleCopy,2435,"gy::Element< sofa::geometry::Quad > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; ZeroCons",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html:2546,Usability,Simpl,SimpleLayout,2546,"td::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4.html:324,Modifiability,Inherit,Inheritance,324,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Quad > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Quad > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Quad >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4.html:511,Modifiability,inherit,inherited,511,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Quad > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Quad > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Quad >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html:296,Modifiability,inherit,inherited,296,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; setValueString(DataTy",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html:2136,Usability,Simpl,SimpleCopy,2136,"logy::Tetrahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html:2227,Usability,Simpl,SimpleLayout,2227,"logy::Tetrahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4.html:338,Modifiability,Inherit,Inheritance,338,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Tetrahedron >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4.html:532,Modifiability,inherit,inherited,532,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Tetrahedron >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html:290,Modifiability,inherit,inherited,290,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html:2079,Usability,Simpl,SimpleCopy,2079,", T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html:2167,Usability,Simpl,SimpleLayout,2167,", T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4.html:332,Modifiability,Inherit,Inheritance,332,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Triangle >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4.html:523,Modifiability,inherit,inherited,523,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Triangle >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html:304,Modifiability,inherit,inherited,304,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html:2305,Usability,Simpl,SimpleCopy,2305,"ulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html:2400,Usability,Simpl,SimpleLayout,2400,"ulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html:366,Modifiability,Inherit,Inheritance,366,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > > Struct Template Reference . #include <TypeInfo_FixedArray.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<class T , sofa::Size N> . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<class T , sofa::Size N> . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::fixed_array< T, N > >; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html:602,Modifiability,inherit,inherited,602,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > > Struct Template Reference . #include <TypeInfo_FixedArray.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<class T , sofa::Size N> . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<class T , sofa::Size N> . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::fixed_array< T, N > >; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html:308,Modifiability,inherit,inherited,308,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >, including all inherited members. BaseType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; BaseTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; byteSize()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Container enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; DataType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; GetTypeName()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValuePtr(const sofa::type::vector< bool, Alloc > &)sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValuePtr(sofa::type::vector< bool, Alloc > &)sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; name()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, A",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html:2323,Usability,Simpl,SimpleCopy,2323,"oc > &)sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValuePtr(sofa::type::vector< bool, Alloc > &)sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; name()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; SimpleLayout enum valuesofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >; size()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; size(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Size enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; Text enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; ValidInfo enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; ValueType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; ValueTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; ZeroConstructor enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html:2416,Usability,Simpl,SimpleLayout,2416,"oc > &)sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValuePtr(sofa::type::vector< bool, Alloc > &)sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; name()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; SimpleLayout enum valuesofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >; size()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; size(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Size enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; Text enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; ValidInfo enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; ValueType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; ValueTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; ZeroConstructor enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4.html:366,Modifiability,Inherit,Inheritance,366,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >:. [legend]. Static Public Member Functions; static const void * getValuePtr (const sofa::type::vector< bool, Alloc > &);  ; static void * getValuePtr (sofa::type::vector< bool, Alloc > &);  ;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ getValuePtr() [1/2]. template<class Alloc > . static const void* sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >::getValuePtr ; (; const sofa::type::vector< bool, Alloc > & ; ). inlinestatic . ◆ getValuePtr() [2/2]. template<class Alloc > . static void* sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >::getValuePtr ; (; sofa::type::vector< bool, Alloc > & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class Alloc > . anonymous enum. EnumeratorSimpleLayout . sofadefaultt",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4.html:683,Modifiability,inherit,inherited,683,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >:. [legend]. Static Public Member Functions; static const void * getValuePtr (const sofa::type::vector< bool, Alloc > &);  ; static void * getValuePtr (sofa::type::vector< bool, Alloc > &);  ;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ getValuePtr() [1/2]. template<class Alloc > . static const void* sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >::getValuePtr ; (; const sofa::type::vector< bool, Alloc > & ; ). inlinestatic . ◆ getValuePtr() [2/2]. template<class Alloc > . static void* sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >::getValuePtr ; (; sofa::type::vector< bool, Alloc > & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class Alloc > . anonymous enum. EnumeratorSimpleLayout . sofadefaultt",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html:322,Modifiability,inherit,inherited,322,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >, including all inherited members. BaseType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; BaseTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; byteSize()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; Container enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; DataType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; GetTypeName()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; getValueString(const sofa::type::vector< std::string, Alloc > &data, sofa::Index index, std::string &value)sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; VectorTypeInfo< sofa::type::vector< std::string, Alloc > >::getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< so",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html:3158,Usability,Simpl,SimpleCopy,3158,"defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; setSize(sofa::type::vector< std::string, Alloc > &data, sofa::Size size)sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; VectorTypeInfo< sofa::type::vector< std::string, Alloc > >::setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; setValueString(sofa::type::vector< std::string, Alloc > &data, sofa::Index index, const std::string &value)sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; VectorTypeInfo< sofa::type::vector< std::string, Alloc > >::setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; SimpleLayout enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; Size enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; size()sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; size(const sofa::type::vector< std::string, Alloc > &data)sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; VectorTypeInfo< sofa::type::vector< std::string, Alloc > >::size(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; Text enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; ValidInfo enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; ValueType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; Va",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html:3258,Usability,Simpl,SimpleLayout,3258,"std::string, Alloc > &data, sofa::Size size)sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; VectorTypeInfo< sofa::type::vector< std::string, Alloc > >::setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; setValueString(sofa::type::vector< std::string, Alloc > &data, sofa::Index index, const std::string &value)sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; VectorTypeInfo< sofa::type::vector< std::string, Alloc > >::setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; SimpleLayout enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; Size enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; size()sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; size(const sofa::type::vector< std::string, Alloc > &data)sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; VectorTypeInfo< sofa::type::vector< std::string, Alloc > >::size(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; Text enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; ValidInfo enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; ValueType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; ValueTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; Zer",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html:380,Modifiability,Inherit,Inheritance,380,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >:. [legend]. Static Public Member Functions; static sofa::Size size ();  ; static sofa::Size size (const sofa::type::vector< std::string, Alloc > &data);  ; static bool setSize (sofa::type::vector< std::string, Alloc > &data, sofa::Size size);  ; static void setValueString (sofa::type::vector< std::string, Alloc > &data, sofa::Index index, const std::string &value);  ; static void getValueString (const sofa::type::vector< std::string, Alloc > &data, sofa::Index index, std::string &value);  ;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ getValueString(). template<class Alloc > . static void sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >::getValueString ; (; const sofa::type::vector< std::string, Alloc",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html:1008,Modifiability,inherit,inherited,1008,". Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >:. [legend]. Static Public Member Functions; static sofa::Size size ();  ; static sofa::Size size (const sofa::type::vector< std::string, Alloc > &data);  ; static bool setSize (sofa::type::vector< std::string, Alloc > &data, sofa::Size size);  ; static void setValueString (sofa::type::vector< std::string, Alloc > &data, sofa::Index index, const std::string &value);  ; static void getValueString (const sofa::type::vector< std::string, Alloc > &data, sofa::Index index, std::string &value);  ;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ getValueString(). template<class Alloc > . static void sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >::getValueString ; (; const sofa::type::vector< std::string, Alloc > & ; data, . sofa::Index ; index, . std::string & ; value . ). inlinestatic . ◆ setSize(). template<class Alloc > . static bool sofa::d",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html:302,Modifiability,inherit,inherited,302,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > >, including all inherited members. BaseType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; BaseTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; byteSize()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Container enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; DataType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; GetTypeName()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; name()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaul",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html:2225,Usability,Simpl,SimpleCopy,2225,"sofa::type::vector< T, Alloc > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; name()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; SimpleLayout enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; Size enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; size()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; size(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Text enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; ValidInfo enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; ValueType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; ValueTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; ZeroConstructor enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html:2315,Usability,Simpl,SimpleLayout,2315,"sofa::type::vector< T, Alloc > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; name()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; SimpleLayout enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; Size enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; size()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; size(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Text enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; ValidInfo enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; ValueType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; ValueTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; ZeroConstructor enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html:326,Modifiability,Inherit,Inheritance,326,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . sofadefaulttypeDataTypeInfo< sofa::type::vector< T, Alloc > >; Generated on Mon Nov 11 2024 03:18:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html:439,Modifiability,Inherit,Inherited,439,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . sofadefaulttypeDataTypeInfo< sofa::type::vector< T, Alloc > >; Generated on Mon Nov 11 2024 03:18:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html:490,Modifiability,inherit,inherited,490,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . sofadefaulttypeDataTypeInfo< sofa::type::vector< T, Alloc > >; Generated on Mon Nov 11 2024 03:18:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html:300,Modifiability,inherit,inherited,300,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; setValue(DataType &data, sofa::Size ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html:2265,Usability,Simpl,SimpleCopy,2265,"luePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html:2358,Usability,Simpl,SimpleLayout,2358,"luePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4.html:355,Modifiability,Inherit,Inheritance,355,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > > Struct Template Reference . #include <TypeInfo_Mat.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size L, sofa::Size C, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size L, sofa::Size C, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::Mat< L, C, real > >; Generated on Mon Nov 11 2024 03:18:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4.html:589,Modifiability,inherit,inherited,589,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > > Struct Template Reference . #include <TypeInfo_Mat.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size L, sofa::Size C, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size L, sofa::Size C, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::Mat< L, C, real > >; Generated on Mon Nov 11 2024 03:18:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html:284,Modifiability,inherit,inherited,284,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; setValueString(DataType &data, sofa::Size inde",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html:2105,Usability,Simpl,SimpleCopy,2105,"nlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html:2190,Usability,Simpl,SimpleLayout,2190,"nlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4.html:340,Modifiability,Inherit,Inheritance,340,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > > Struct Template Reference . #include <TypeInfo_Quat.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<class T > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<class T > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::Quat< T > >; Generated on Mon Nov 11 2024 03:18:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4.html:566,Modifiability,inherit,inherited,566,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > > Struct Template Reference . #include <TypeInfo_Quat.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<class T > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<class T > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::Quat< T > >; Generated on Mon Nov 11 2024 03:18:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html:294,Modifiability,inherit,inherited,294,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTyp",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html:2205,Usability,Simpl,SimpleCopy,2205,"TypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html:2295,Usability,Simpl,SimpleLayout,2295,"TypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4.html:349,Modifiability,Inherit,Inheritance,349,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > > Struct Template Reference . #include <TypeInfo_Vec.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::Vec< N, real > >; Generated on Mon Nov 11 2024 03:18:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4.html:580,Modifiability,inherit,inherited,580,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > > Struct Template Reference . #include <TypeInfo_Vec.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::Vec< N, real > >; Generated on Mon Nov 11 2024 03:18:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html:306,Modifiability,inherit,inherited,306,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html:2325,Usability,Simpl,SimpleCopy,2325,"TypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html:2421,Usability,Simpl,SimpleLayout,2421,"TypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4.html:361,Modifiability,Inherit,Inheritance,361,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > > Struct Template Reference . #include <TypeInfo_Vec.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::VecNoInit< N, real > >; Generated on Mon Nov 11 2024 03:18:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4.html:598,Modifiability,inherit,inherited,598,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > > Struct Template Reference . #include <TypeInfo_Vec.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::VecNoInit< N, real > >; Generated on Mon Nov 11 2024 03:18:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html:300,Modifiability,inherit,inherited,300,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >, including all inherited members. BaseType typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; BaseTypeInfo typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; byteSize()sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Container enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; CopyOnWrite enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; DataType typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; FixedSize enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; GetTypeName()sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; name()sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; setValueString(Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html:2128,Usability,Simpl,SimpleCopy,2128,"inestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; name()sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; SimpleLayout enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; Size enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; size()sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; size(const DataType &data)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Text enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; ValidInfo enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; ValueType typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; ValueTypeInfo typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; ZeroConstructor enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html:2214,Usability,Simpl,SimpleLayout,2214,"inestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; name()sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; SimpleLayout enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; Size enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; size()sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; size(const DataType &data)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Text enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; ValidInfo enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; ValueType typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; ValueTypeInfo typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; ZeroConstructor enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4.html:355,Modifiability,Inherit,Inheritance,355,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > > Struct Template Reference . #include <TypeInfo_Set.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ GetTypeName(). template<class T , class Compare , class Alloc > . static std::string sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<class T , class Compare , class Alloc > . static std::string sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< std::set< T, Compare, Alloc > >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4.html:589,Modifiability,inherit,inherited,589,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > > Struct Template Reference . #include <TypeInfo_Set.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ GetTypeName(). template<class T , class Compare , class Alloc > . static std::string sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<class T , class Compare , class Alloc > . static std::string sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< std::set< T, Compare, Alloc > >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html:264,Modifiability,inherit,inherited,264,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< std::string > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< std::string >, including all inherited members. BaseType typedefsofa::defaulttype::TextTypeInfo< std::string >; BaseTypeInfo typedefsofa::defaulttype::TextTypeInfo< std::string >; byteSize()sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; Container enum valuesofa::defaulttype::TextTypeInfo< std::string >; ConvType typedefsofa::defaulttype::TextTypeInfo< std::string >; CopyOnWrite enum valuesofa::defaulttype::TextTypeInfo< std::string >; DataType typedefsofa::defaulttype::TextTypeInfo< std::string >; FixedSize enum valuesofa::defaulttype::TextTypeInfo< std::string >; GetTypeName()sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; getValuePtr(const std::string &data)sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValuePtr(std::string &data)sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< std::string >; name()sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; Scalar enum valuesofa::defaulttype::TextTypeInfo< std::string >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; SimpleCopy enum valuesofa::defaulttype::TextTypeInfo< std::string >; SimpleLayout enum valuesofa::defaulttype::TextTypeInfo< std::s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html:1870,Usability,Simpl,SimpleCopy,1870,"ype typedefsofa::defaulttype::TextTypeInfo< std::string >; CopyOnWrite enum valuesofa::defaulttype::TextTypeInfo< std::string >; DataType typedefsofa::defaulttype::TextTypeInfo< std::string >; FixedSize enum valuesofa::defaulttype::TextTypeInfo< std::string >; GetTypeName()sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; getValuePtr(const std::string &data)sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValuePtr(std::string &data)sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< std::string >; name()sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; Scalar enum valuesofa::defaulttype::TextTypeInfo< std::string >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; SimpleCopy enum valuesofa::defaulttype::TextTypeInfo< std::string >; SimpleLayout enum valuesofa::defaulttype::TextTypeInfo< std::string >; Size enum valuesofa::defaulttype::TextTypeInfo< std::string >; size()sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; size(const DataType &)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; Text enum valuesofa::defaulttype::TextTypeInfo< std::string >; ValidInfo enum valuesofa::defaulttype::TextTypeInfo< std::string >; ValueType typedefsofa::defaulttype::TextTypeInfo< std::string >; ValueTypeInfo typedefsofa::defaulttype::TextTypeInfo< std::string >; ZeroConstructor enum valuesofa::defaulttype::TextTypeInfo< std::string >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html:1939,Usability,Simpl,SimpleLayout,1939,"ype typedefsofa::defaulttype::TextTypeInfo< std::string >; CopyOnWrite enum valuesofa::defaulttype::TextTypeInfo< std::string >; DataType typedefsofa::defaulttype::TextTypeInfo< std::string >; FixedSize enum valuesofa::defaulttype::TextTypeInfo< std::string >; GetTypeName()sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; getValuePtr(const std::string &data)sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValuePtr(std::string &data)sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< std::string >; name()sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; Scalar enum valuesofa::defaulttype::TextTypeInfo< std::string >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; SimpleCopy enum valuesofa::defaulttype::TextTypeInfo< std::string >; SimpleLayout enum valuesofa::defaulttype::TextTypeInfo< std::string >; Size enum valuesofa::defaulttype::TextTypeInfo< std::string >; size()sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; size(const DataType &)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; Text enum valuesofa::defaulttype::TextTypeInfo< std::string >; ValidInfo enum valuesofa::defaulttype::TextTypeInfo< std::string >; ValueType typedefsofa::defaulttype::TextTypeInfo< std::string >; ValueTypeInfo typedefsofa::defaulttype::TextTypeInfo< std::string >; ZeroConstructor enum valuesofa::defaulttype::TextTypeInfo< std::string >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4.html:302,Modifiability,Inherit,Inheritance,302,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< std::string > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< std::string > Struct Reference . #include <TypeInfo_Text.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< std::string >:. [legend]. Static Public Member Functions; static const std::string name ();  ; static const std::string GetTypeName ();  ; static const void * getValuePtr (const std::string &data);  ; static void * getValuePtr (std::string &data);  ;  Static Public Member Functions inherited from sofa::defaulttype::TextTypeInfo< std::string >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< std::string >::GetTypeName ; (; ). inlinestatic . ◆ getValuePtr() [1/2]. static const void* sofa::defaulttype::DataTypeInfo< std::string >::getValuePtr ; (; const std::string & ; data). inlinestatic . ◆ getValuePtr() [2/2]. static void* sofa::defaulttype::DataTypeInfo< std::string >::getValuePtr ; (; std::string & ; data). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< std::string >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< std::string >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4.html:642,Modifiability,inherit,inherited,642,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< std::string > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< std::string > Struct Reference . #include <TypeInfo_Text.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< std::string >:. [legend]. Static Public Member Functions; static const std::string name ();  ; static const std::string GetTypeName ();  ; static const void * getValuePtr (const std::string &data);  ; static void * getValuePtr (std::string &data);  ;  Static Public Member Functions inherited from sofa::defaulttype::TextTypeInfo< std::string >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< std::string >::GetTypeName ; (; ). inlinestatic . ◆ getValuePtr() [1/2]. static const void* sofa::defaulttype::DataTypeInfo< std::string >::getValuePtr ; (; const std::string & ; data). inlinestatic . ◆ getValuePtr() [2/2]. static void* sofa::defaulttype::DataTypeInfo< std::string >::getValuePtr ; (; std::string & ; data). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< std::string >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< std::string >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html:276,Modifiability,inherit,inherited,276,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< type::BoundingBox > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< type::BoundingBox >, including all inherited members. BaseType typedefsofa::defaulttype::BoundingBoxTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoundingBoxTypeInfo; byteSize()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoundingBoxTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoundingBoxTypeInfo; DataType typedefsofa::defaulttype::BoundingBoxTypeInfo; FixedSize enum valuesofa::defaulttype::BoundingBoxTypeInfo; getScalarValue(const void *data, sofa::Size index)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; GetTypeName()sofa::defaulttype::DataTypeInfo< type::BoundingBox >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(const DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoundingBoxTypeInfo; name()sofa::defaulttype::DataTypeInfo< type::BoundingBox >inlinestatic; Scalar enum valuesofa::defaulttype::BoundingBoxTypeInfo; setScalarValue(const void *data, sofa::Size index, SReal value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setSize(DataType &, sofa::Size)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoundingBoxTypeInfo; SimpleLayout enum valuesofa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html:1913,Usability,Simpl,SimpleCopy,1913,"nlinestatic; Container enum valuesofa::defaulttype::BoundingBoxTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoundingBoxTypeInfo; DataType typedefsofa::defaulttype::BoundingBoxTypeInfo; FixedSize enum valuesofa::defaulttype::BoundingBoxTypeInfo; getScalarValue(const void *data, sofa::Size index)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; GetTypeName()sofa::defaulttype::DataTypeInfo< type::BoundingBox >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(const DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoundingBoxTypeInfo; name()sofa::defaulttype::DataTypeInfo< type::BoundingBox >inlinestatic; Scalar enum valuesofa::defaulttype::BoundingBoxTypeInfo; setScalarValue(const void *data, sofa::Size index, SReal value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setSize(DataType &, sofa::Size)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoundingBoxTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoundingBoxTypeInfo; Size enum valuesofa::defaulttype::BoundingBoxTypeInfo; size()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; size(const DataType &)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Text enum valuesofa::defaulttype::BoundingBoxTypeInfo; ValidInfo enum valuesofa::defaulttype::BoundingBoxTypeInfo; ValueType typedefsofa::defaulttype::BoundingBoxTypeInfo; ZeroConstructor enum valuesofa::defaulttype::BoundingBoxTypeInfo.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html:1974,Usability,Simpl,SimpleLayout,1974,"nlinestatic; Container enum valuesofa::defaulttype::BoundingBoxTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoundingBoxTypeInfo; DataType typedefsofa::defaulttype::BoundingBoxTypeInfo; FixedSize enum valuesofa::defaulttype::BoundingBoxTypeInfo; getScalarValue(const void *data, sofa::Size index)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; GetTypeName()sofa::defaulttype::DataTypeInfo< type::BoundingBox >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(const DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoundingBoxTypeInfo; name()sofa::defaulttype::DataTypeInfo< type::BoundingBox >inlinestatic; Scalar enum valuesofa::defaulttype::BoundingBoxTypeInfo; setScalarValue(const void *data, sofa::Size index, SReal value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setSize(DataType &, sofa::Size)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoundingBoxTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoundingBoxTypeInfo; Size enum valuesofa::defaulttype::BoundingBoxTypeInfo; size()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; size(const DataType &)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Text enum valuesofa::defaulttype::BoundingBoxTypeInfo; ValidInfo enum valuesofa::defaulttype::BoundingBoxTypeInfo; ValueType typedefsofa::defaulttype::BoundingBoxTypeInfo; ZeroConstructor enum valuesofa::defaulttype::BoundingBoxTypeInfo.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4.html:321,Modifiability,Inherit,Inheritance,321,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< type::BoundingBox > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< type::BoundingBox > Struct Reference . #include <TypeInfo_BoundingBox.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< type::BoundingBox >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::BoundingBoxTypeInfo; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  since TypeInfos abstract all containers as 1D arrays, T here is of ValueType More...;  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static double getScalarValue (const void *data, sofa::Size index);  ; static void setScalarValue (const void *data, sofa::Size index, SReal value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &bbox);  ; static void * getValuePtr (DataType &bbox);  . Function details. ◆ GetTypeName(). static std::string sofa::defaulttype::DataTypeInfo< type::BoundingBox >::GetTypeName ; (; ). inlinestatic . ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< type::BoundingBox >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< type::BoundingBox >; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4.html:543,Modifiability,inherit,inherited,543,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< type::BoundingBox > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< type::BoundingBox > Struct Reference . #include <TypeInfo_BoundingBox.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< type::BoundingBox >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::BoundingBoxTypeInfo; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  since TypeInfos abstract all containers as 1D arrays, T here is of ValueType More...;  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static double getScalarValue (const void *data, sofa::Size index);  ; static void setScalarValue (const void *data, sofa::Size index, SReal value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &bbox);  ; static void * getValuePtr (DataType &bbox);  . Function details. ◆ GetTypeName(). static std::string sofa::defaulttype::DataTypeInfo< type::BoundingBox >::GetTypeName ; (; ). inlinestatic . ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< type::BoundingBox >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< type::BoundingBox >; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html:268,Modifiability,inherit,inherited,268,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned char > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned char >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned char >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; name()sofa::defaulttype::DataTypeInfo< unsigned char >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; SimpleCopy enum valuesofa::defaulttype::Inte",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html:1957,Usability,Simpl,SimpleCopy,1957,"ypeInfo< unsigned char >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned char >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; name()sofa::defaulttype::DataTypeInfo< unsigned char >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; Size enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; size()sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html:2031,Usability,Simpl,SimpleLayout,2031,"ypeInfo< unsigned char >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned char >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; name()sofa::defaulttype::DataTypeInfo< unsigned char >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; Size enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; size()sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4.html:309,Modifiability,Inherit,Inheritance,309,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned char > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned char > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned char >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned char >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned char >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned char >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned char >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4.html:539,Modifiability,inherit,inherited,539,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned char > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned char > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned char >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned char >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned char >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned char >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned char >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html:266,Modifiability,inherit,inherited,266,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned int > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned int >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned int >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; name()sofa::defaulttype::DataTypeInfo< unsigned int >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html:1936,Usability,Simpl,SimpleCopy,1936,"a::defaulttype::IntegerTypeInfo< unsigned int >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned int >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; name()sofa::defaulttype::DataTypeInfo< unsigned int >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; Size enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; size()sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html:2009,Usability,Simpl,SimpleLayout,2009,"a::defaulttype::IntegerTypeInfo< unsigned int >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned int >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; name()sofa::defaulttype::DataTypeInfo< unsigned int >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; Size enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; size()sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4.html:307,Modifiability,Inherit,Inheritance,307,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned int > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned int > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned int >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned int >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned int >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned int >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned int >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4.html:536,Modifiability,inherit,inherited,536,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned int > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned int > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned int >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned int >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned int >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned int >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned int >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html:278,Modifiability,inherit,inherited,278,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned long long > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned long long >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned long long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; name()sofa::defaulttype::DataTypeInfo< unsigned long long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::def",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html:2062,Usability,Simpl,SimpleCopy,2062,"valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned long long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; name()sofa::defaulttype::DataTypeInfo< unsigned long long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; Size enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; size()sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html:2141,Usability,Simpl,SimpleLayout,2141,"valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned long long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; name()sofa::defaulttype::DataTypeInfo< unsigned long long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; Size enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; size()sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4.html:319,Modifiability,Inherit,Inheritance,319,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned long long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned long long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned long long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned long long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned long long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4.html:554,Modifiability,inherit,inherited,554,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned long long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned long long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned long long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned long long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned long long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html:268,Modifiability,inherit,inherited,268,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned long > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned long >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; name()sofa::defaulttype::DataTypeInfo< unsigned long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::Inte",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html:1957,Usability,Simpl,SimpleCopy,1957,"ypeInfo< unsigned long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; name()sofa::defaulttype::DataTypeInfo< unsigned long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; Size enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; size()sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html:2031,Usability,Simpl,SimpleLayout,2031,"ypeInfo< unsigned long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; name()sofa::defaulttype::DataTypeInfo< unsigned long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; Size enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; size()sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4.html:309,Modifiability,Inherit,Inheritance,309,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4.html:539,Modifiability,inherit,inherited,539,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned short > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned short >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned short >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; name()sofa::defaulttype::DataTypeInfo< unsigned short >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; SimpleCopy enum valueso",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html:1978,Usability,Simpl,SimpleCopy,1978,">; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned short >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; name()sofa::defaulttype::DataTypeInfo< unsigned short >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; Size enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; size()sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html:2053,Usability,Simpl,SimpleLayout,2053,">; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned short >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; name()sofa::defaulttype::DataTypeInfo< unsigned short >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; Size enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; size()sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4.html:311,Modifiability,Inherit,Inheritance,311,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned short > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned short > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned short >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned short >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned short >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned short >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned short >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4.html:542,Modifiability,inherit,inherited,542,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned short > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned short > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned short >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned short >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned short >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned short >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned short >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html:274,Modifiability,inherit,inherited,274,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DefaultDataTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::DefaultDataTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; byteSize()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; DataType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValue(const DataType &, Index, T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, Index, std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; name()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValue(DataType &, Index, const T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValueString(DataType &, Index, const std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; Size enum valuesofa::defaulttype::Defau",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html:1812,Usability,Simpl,SimpleCopy,1812,"efaultDataTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; DataType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValue(const DataType &, Index, T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, Index, std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; name()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValue(DataType &, Index, const T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValueString(DataType &, Index, const std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; Size enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; size()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Text enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html:1886,Usability,Simpl,SimpleLayout,1886,"efaultDataTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; DataType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValue(const DataType &, Index, T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, Index, std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; name()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValue(DataType &, Index, const T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValueString(DataType &, Index, const std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; Size enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; size()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Text enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html:4821,Energy Efficiency,allocate,allocate,4821,"peInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest known fixed size for this type, as returned by size() . sofadefaulttypeDefaultDataTypeInfo; Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html:295,Modifiability,Inherit,Inheritance,295,"﻿. SOFA API: sofa::defaulttype::DefaultDataTypeInfo< TDataType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::DefaultDataTypeInfo< TDataType > Struct Template Reference . #include <DataTypeInfo.h>. Inheritance diagram for sofa::defaulttype::DefaultDataTypeInfo< TDataType >:. [legend]. enum  { ValidInfo = 0; };  ; enum  { FixedSize = 0; };  ; enum  { ZeroConstructor = 0; };  ; enum  { SimpleCopy = 0; };  ; enum  { SimpleLayout = 0; };  ; enum  { Integer = 0; };  ; enum  { Scalar = 0; };  ; enum  { Text = 0; };  ; enum  { CopyOnWrite = 0; };  ; enum  { Container = 0; };  ; enum  { Size = 1; };  ; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; template<typename T > ; static void getValue (const DataType &, Index, T &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void setValue (DataType &, Index, const T &);  ; static void getValueString (const DataType &, Index, std::string &);  ; static void setValueString (DataType &, Index, const std::string &);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . Function details. ◆ byteSize(). template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::byteSize ; (; ). inlinestatic . ◆ GetTypeName(). template<class TDataType > . static const std::string sofa::defaulttype::DefaultDataTypeInfo< TDataType >::GetTypeName ; (; ). inlinestatic . ◆ getValue(). template<class TDataType > . template<typename T > . static void sofa::defaulttype::DefaultDataTypeInfo< TDataType >::getValue ; (; const DataType & ; , . Index ; , . T & ;  . ). inlinestatic . ◆ getValuePtr() [1/2]. template<class TDataType > . static const void* sofa::defaulttype::DefaultDataTypeInfo< TDataType >::getVa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html:484,Usability,Simpl,SimpleCopy,484,"﻿. SOFA API: sofa::defaulttype::DefaultDataTypeInfo< TDataType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::DefaultDataTypeInfo< TDataType > Struct Template Reference . #include <DataTypeInfo.h>. Inheritance diagram for sofa::defaulttype::DefaultDataTypeInfo< TDataType >:. [legend]. enum  { ValidInfo = 0; };  ; enum  { FixedSize = 0; };  ; enum  { ZeroConstructor = 0; };  ; enum  { SimpleCopy = 0; };  ; enum  { SimpleLayout = 0; };  ; enum  { Integer = 0; };  ; enum  { Scalar = 0; };  ; enum  { Text = 0; };  ; enum  { CopyOnWrite = 0; };  ; enum  { Container = 0; };  ; enum  { Size = 1; };  ; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; template<typename T > ; static void getValue (const DataType &, Index, T &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void setValue (DataType &, Index, const T &);  ; static void getValueString (const DataType &, Index, std::string &);  ; static void setValueString (DataType &, Index, const std::string &);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . Function details. ◆ byteSize(). template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::byteSize ; (; ). inlinestatic . ◆ GetTypeName(). template<class TDataType > . static const std::string sofa::defaulttype::DefaultDataTypeInfo< TDataType >::GetTypeName ; (; ). inlinestatic . ◆ getValue(). template<class TDataType > . template<typename T > . static void sofa::defaulttype::DefaultDataTypeInfo< TDataType >::getValue ; (; const DataType & ; , . Index ; , . T & ;  . ). inlinestatic . ◆ getValuePtr() [1/2]. template<class TDataType > . static const void* sofa::defaulttype::DefaultDataTypeInfo< TDataType >::getVa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html:514,Usability,Simpl,SimpleLayout,514,"﻿. SOFA API: sofa::defaulttype::DefaultDataTypeInfo< TDataType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::DefaultDataTypeInfo< TDataType > Struct Template Reference . #include <DataTypeInfo.h>. Inheritance diagram for sofa::defaulttype::DefaultDataTypeInfo< TDataType >:. [legend]. enum  { ValidInfo = 0; };  ; enum  { FixedSize = 0; };  ; enum  { ZeroConstructor = 0; };  ; enum  { SimpleCopy = 0; };  ; enum  { SimpleLayout = 0; };  ; enum  { Integer = 0; };  ; enum  { Scalar = 0; };  ; enum  { Text = 0; };  ; enum  { CopyOnWrite = 0; };  ; enum  { Container = 0; };  ; enum  { Size = 1; };  ; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; template<typename T > ; static void getValue (const DataType &, Index, T &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void setValue (DataType &, Index, const T &);  ; static void getValueString (const DataType &, Index, std::string &);  ; static void setValueString (DataType &, Index, const std::string &);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . Function details. ◆ byteSize(). template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::byteSize ; (; ). inlinestatic . ◆ GetTypeName(). template<class TDataType > . static const std::string sofa::defaulttype::DefaultDataTypeInfo< TDataType >::GetTypeName ; (; ). inlinestatic . ◆ getValue(). template<class TDataType > . template<typename T > . static void sofa::defaulttype::DefaultDataTypeInfo< TDataType >::getValue ; (; const DataType & ; , . Index ; , . T & ;  . ). inlinestatic . ◆ getValuePtr() [1/2]. template<class TDataType > . static const void* sofa::defaulttype::DefaultDataTypeInfo< TDataType >::getVa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html:4104,Usability,simpl,simply,4104,"Index ; , . const std::string & ;  . ). inlinestatic . ◆ size() [1/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest know",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_vec-members.html:306,Modifiability,inherit,inherited,306,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real > Member List . This is the complete list of members for sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >, including all inherited members. EigenSparseMatrix typedefsofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >; operator()(const EigenSparseMatrix &eigenMat)sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >inline; TMapMapSparseMatrix typedefsofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >. Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_vec-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_vec-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_vec.html:370,Modifiability,Inherit,Inheritance,370,"﻿. SOFA API: sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real > Struct Template Reference . #include <MapMapSparseMatrixEigenUtils.h>. Inheritance diagram for sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >:. [legend]. Public Member Functions; TMapMapSparseMatrix operator() (const EigenSparseMatrix &eigenMat);  . Function details. ◆ operator()(). template<typename TVec , typename Real > . TMapMapSparseMatrix sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >::operator() ; (; const EigenSparseMatrix & ; eigenMat). inline . sofadefaulttypeEigenSparseToMapMapSparseMatrixVec; Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_vec.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_vec.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html:298,Modifiability,inherit,inherited,298,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size > Member List . This is the complete list of members for sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; SimpleCopy enum valuesofa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html:1976,Usability,Simpl,SimpleCopy,1976,"valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; size()sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html:2062,Usability,Simpl,SimpleLayout,2062,"valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; size()sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info.html:359,Modifiability,Inherit,Inheritance,359,"﻿. SOFA API: sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size > Struct Template Reference . #include <FixedArrayTypeInfo.h>. Inheritance diagram for sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >:. [legend]. Static Public Member Functions; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &data);  ; static bool setSize (DataType &data, sofa::Size size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ byteSize(). template<class TDataType , sofa::Size static_size = TDataType::static_size> . static sofa::Size sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >::byteSize ; (; ). inlinestatic . ◆ getValue(). template<class TDataType , sofa::Size static_size = TDataType::static_size> . template<typename T > . static void sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >::getValue ; (; const DataType & ; data, . sofa::Size ; index, . T & ; value . ). inlinestatic . ◆ getValuePtr() [1/2]. template<class TDataType , sofa::Size static_size = TDataType::static_size> . static const void* sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >::getValuePtr ; (; const DataType & ; data). inlinestatic . ◆ getValuePtr() [2/2]. template<class TDataType , sofa::Size static_size = TDataType::static",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::IncompleteTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::IncompleteTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; byteSize()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; DataType typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValuePtr(const TDataType &data)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValuePtr(TDataType &data)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; name()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; Size enum values",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html:1837,Usability,Simpl,SimpleCopy,1837,"DataType >; CopyOnWrite enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; DataType typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValuePtr(const TDataType &data)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValuePtr(TDataType &data)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; name()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; Size enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; size()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Text enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html:1910,Usability,Simpl,SimpleLayout,1910,"DataType >; CopyOnWrite enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; DataType typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValuePtr(const TDataType &data)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValuePtr(TDataType &data)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; name()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; Size enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; size()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Text enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html:4651,Energy Efficiency,allocate,allocate,4651,"TypeInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest known fixed size for this type, as returned by size() . sofadefaulttypeIncompleteTypeInfo; Generated on Mon Nov 11 2024 03:18:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html:333,Modifiability,Inherit,Inheritance,333,"﻿. SOFA API: sofa::defaulttype::IncompleteTypeInfo< TDataType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::IncompleteTypeInfo< TDataType > Struct Template Reference . #include <IncompleteTypeInfo.h>. Inheritance diagram for sofa::defaulttype::IncompleteTypeInfo< TDataType >:. [legend]. Static Public Member Functions; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; template<typename T > ; static void getValue (const DataType &, sofa::Size, T &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void setValue (DataType &, sofa::Size, const T &);  ; static void getValueString (const DataType &, sofa::Size, std::string &);  ; static const void * getValuePtr (const TDataType &data);  ; static void * getValuePtr (TDataType &data);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . Function details. ◆ byteSize(). template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::byteSize ; (; ). inlinestatic . ◆ GetTypeName(). template<class TDataType > . static const std::string sofa::defaulttype::IncompleteTypeInfo< TDataType >::GetTypeName ; (; ). inlinestatic . ◆ getValue(). template<class TDataType > . template<typename T > . static void sofa::defaulttype::IncompleteTypeInfo< TDataType >::getValue ; (; const DataType & ; , . sofa::Size ; , . T & ;  . ). inlinestatic . ◆ getValuePtr() [1/2]. template<class TDataType > . static const void* sofa::defaulttype::IncompleteTypeInfo< TDataType >::getValuePtr ; (; const TDataType & ; data). inlinestatic . ◆ getValuePtr() [2/2]. template<class TDataType > . static void* sofa::defaulttype::IncompleteTypeInfo< TDataType >::getValuePtr ; (; TDataType & ;",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html:3934,Usability,simpl,simply,3934,"index, . const std::string & ; value . ). inlinestatic . ◆ size() [1/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest know",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html:266,Modifiability,inherit,inherited,266,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::IntegerTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::IntegerTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; byteSize()sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; DataType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; size()sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::Integer",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html:1744,Usability,Simpl,SimpleCopy,1744,"type::IntegerTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; DataType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; size()sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; Text enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html:1814,Usability,Simpl,SimpleLayout,1814,"type::IntegerTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; DataType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; size()sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; Text enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info.html:324,Modifiability,Inherit,Inheritance,324,"﻿. SOFA API: sofa::defaulttype::IntegerTypeInfo< TDataType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::IntegerTypeInfo< TDataType > Struct Template Reference . #include <IntegerTypeInfo.h>. Inheritance diagram for sofa::defaulttype::IntegerTypeInfo< TDataType >:. [legend]. Static Public Member Functions; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ byteSize(). template<class TDataType > . static sofa::Size sofa::defaulttype::IntegerTypeInfo< TDataType >::byteSize ; (; ). inlinestatic . ◆ getValue(). template<class TDataType > . template<typename T > . static void sofa::defaulttype::IntegerTypeInfo< TDataType >::getValue ; (; const DataType & ; data, . sofa::Size ; index, . T & ; value . ). inlinestatic . ◆ getValuePtr() [1/2]. template<class TDataType > . static const void* sofa::defaulttype::IntegerTypeInfo< TDataType >::getValuePtr ; (; const DataType & ; data). inlinestatic . ◆ getValuePtr() [2/2]. template<class TDataType > . static void* sofa::defaulttype::IntegerTypeInfo< TDataType >::getValuePtr ; (; DataType & ; data). inlinestatic . ◆ getValueString(). template<class TDataType > . static void sofa::defaulttype::IntegerTypeInfo< TDataType >::getValueString ; (; const DataType & ; data, . sofa::Size ; index, . std::s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html:264,Modifiability,inherit,inherited,264,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::ScalarTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::ScalarTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; byteSize()sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; DataType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; size()sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::ScalarTypeInfo< TDataType >in",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html:1725,Usability,Simpl,SimpleCopy,1725,"; byteSize()sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; DataType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; size()sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; Text enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html:1794,Usability,Simpl,SimpleLayout,1794,"; byteSize()sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; DataType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; size()sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; Text enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info.html:321,Modifiability,Inherit,Inheritance,321,"﻿. SOFA API: sofa::defaulttype::ScalarTypeInfo< TDataType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::ScalarTypeInfo< TDataType > Struct Template Reference . #include <ScalarTypeInfo.h>. Inheritance diagram for sofa::defaulttype::ScalarTypeInfo< TDataType >:. [legend]. Static Public Member Functions; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ byteSize(). template<class TDataType > . static sofa::Size sofa::defaulttype::ScalarTypeInfo< TDataType >::byteSize ; (; ). inlinestatic . ◆ getValue(). template<class TDataType > . template<typename T > . static void sofa::defaulttype::ScalarTypeInfo< TDataType >::getValue ; (; const DataType & ; data, . sofa::Size ; index, . T & ; value . ). inlinestatic . ◆ getValuePtr() [1/2]. template<class TDataType > . static const void* sofa::defaulttype::ScalarTypeInfo< TDataType >::getValuePtr ; (; const DataType & ; data). inlinestatic . ◆ getValuePtr() [2/2]. template<class TDataType > . static void* sofa::defaulttype::ScalarTypeInfo< TDataType >::getValuePtr ; (; DataType & ; data). inlinestatic . ◆ getValueString(). template<class TDataType > . static void sofa::defaulttype::ScalarTypeInfo< TDataType >::getValueString ; (; const DataType & ; data, . sofa::Size ; index, . std::string & ;",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html:258,Modifiability,inherit,inherited,258,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::SetTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::SetTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::SetTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::SetTypeInfo< TDataType >; byteSize()sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::SetTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::SetTypeInfo< TDataType >; DataType typedefsofa::defaulttype::SetTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::SetTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::SetTypeInfo< TDataType >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::SetTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::SetTypeInfo< TDataType >; size()sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; size(const DataType &data)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::SetTypeInfo< TDataType >; Text enum valuesofa::defaulttype::SetTypeInfo< TDataType >; ValidInfo ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html:1591,Usability,Simpl,SimpleCopy,1591,"ed members. BaseType typedefsofa::defaulttype::SetTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::SetTypeInfo< TDataType >; byteSize()sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::SetTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::SetTypeInfo< TDataType >; DataType typedefsofa::defaulttype::SetTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::SetTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::SetTypeInfo< TDataType >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::SetTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::SetTypeInfo< TDataType >; size()sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; size(const DataType &data)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::SetTypeInfo< TDataType >; Text enum valuesofa::defaulttype::SetTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::SetTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::SetTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::SetTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::SetTypeInfo< TDataType >. Generated ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html:1657,Usability,Simpl,SimpleLayout,1657,"ed members. BaseType typedefsofa::defaulttype::SetTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::SetTypeInfo< TDataType >; byteSize()sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::SetTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::SetTypeInfo< TDataType >; DataType typedefsofa::defaulttype::SetTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::SetTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::SetTypeInfo< TDataType >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::SetTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::SetTypeInfo< TDataType >; size()sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; size(const DataType &data)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::SetTypeInfo< TDataType >; Text enum valuesofa::defaulttype::SetTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::SetTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::SetTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::SetTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::SetTypeInfo< TDataType >. Generated ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info.html:312,Modifiability,Inherit,Inheritance,312,"﻿. SOFA API: sofa::defaulttype::SetTypeInfo< TDataType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::SetTypeInfo< TDataType > Struct Template Reference . #include <SetTypeInfo.h>. Inheritance diagram for sofa::defaulttype::SetTypeInfo< TDataType >:. [legend]. Static Public Member Functions; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &data);  ; static bool setSize (DataType &data, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; template<typename T > ; static void setValue (DataType &data, sofa::Size, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ byteSize(). template<class TDataType > . static sofa::Size sofa::defaulttype::SetTypeInfo< TDataType >::byteSize ; (; ). inlinestatic . ◆ getValue(). template<class TDataType > . template<typename T > . static void sofa::defaulttype::SetTypeInfo< TDataType >::getValue ; (; const DataType & ; data, . sofa::Size ; index, . T & ; value . ). inlinestatic . ◆ getValuePtr() [1/2]. template<class TDataType > . static const void* sofa::defaulttype::SetTypeInfo< TDataType >::getValuePtr ; (; const DataType & ; ). inlinestatic . ◆ getValuePtr() [2/2]. template<class TDataType > . static void* sofa::defaulttype::SetTypeInfo< TDataType >::getValuePtr ; (; DataType & ; ). inlinestatic . ◆ getValueString(). template<class TDataType > . static void sofa::defaulttype::SetTypeInfo< TDataType >::getValueString ; (; const DataType & ; data, . sofa::Size ; index, . std::string & ; value . ). inlinestatic . ◆ setSize(). templat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_std_vector_types_1_1_impl-members.html:316,Modifiability,inherit,inherited,316,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T > Member List . This is the complete list of members for sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T >, including all inherited members. add(Coord &c, T x, T y, T z)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T >inlinestatic; get(T &x, T &y, T &z, const Coord &c)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T >inlinestatic; set(Coord &c, T x, T y, T z)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T >inlinestatic. Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_std_vector_types_1_1_impl-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_std_vector_types_1_1_impl-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::TextTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::TextTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::TextTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::TextTypeInfo< TDataType >; byteSize()sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::TextTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::TextTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::TextTypeInfo< TDataType >; DataType typedefsofa::defaulttype::TextTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::TextTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::TextTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::TextTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::TextTypeInfo< TDataType >; size()sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::TextType",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html:1679,Usability,Simpl,SimpleCopy,1679,"peInfo typedefsofa::defaulttype::TextTypeInfo< TDataType >; byteSize()sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::TextTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::TextTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::TextTypeInfo< TDataType >; DataType typedefsofa::defaulttype::TextTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::TextTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::TextTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::TextTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::TextTypeInfo< TDataType >; size()sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::TextTypeInfo< TDataType >; Text enum valuesofa::defaulttype::TextTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::TextTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::TextTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::TextTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::TextTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html:1746,Usability,Simpl,SimpleLayout,1746,"peInfo typedefsofa::defaulttype::TextTypeInfo< TDataType >; byteSize()sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::TextTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::TextTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::TextTypeInfo< TDataType >; DataType typedefsofa::defaulttype::TextTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::TextTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::TextTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::TextTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::TextTypeInfo< TDataType >; size()sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::TextTypeInfo< TDataType >; Text enum valuesofa::defaulttype::TextTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::TextTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::TextTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::TextTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::TextTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info.html:315,Modifiability,Inherit,Inheritance,315,"﻿. SOFA API: sofa::defaulttype::TextTypeInfo< TDataType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::TextTypeInfo< TDataType > Struct Template Reference . #include <TextTypeInfo.h>. Inheritance diagram for sofa::defaulttype::TextTypeInfo< TDataType >:. [legend]. Static Public Member Functions; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ byteSize(). template<class TDataType > . static sofa::Size sofa::defaulttype::TextTypeInfo< TDataType >::byteSize ; (; ). inlinestatic . ◆ getValue(). template<class TDataType > . template<typename T > . static void sofa::defaulttype::TextTypeInfo< TDataType >::getValue ; (; const DataType & ; data, . sofa::Size ; index, . T & ; value . ). inlinestatic . ◆ getValuePtr() [1/2]. template<class TDataType > . static const void* sofa::defaulttype::TextTypeInfo< TDataType >::getValuePtr ; (; const DataType & ; ). inlinestatic . ◆ getValuePtr() [2/2]. template<class TDataType > . static void* sofa::defaulttype::TextTypeInfo< TDataType >::getValuePtr ; (; DataType & ; ). inlinestatic . ◆ getValueString(). template<class TDataType > . static void sofa::defaulttype::TextTypeInfo< TDataType >::getValueString ; (; const DataType & ; data, . sofa::Size ; index, . std::string & ; value . ). inlinestatic . ◆ setSi",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html:264,Modifiability,inherit,inherited,264,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::VectorTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::VectorTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::VectorTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::VectorTypeInfo< TDataType >; byteSize()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; DataType typedefsofa::defaulttype::VectorTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; name()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; Size enum valuesofa::defaulttype::VectorTypeInfo< TD",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html:1809,Usability,Simpl,SimpleCopy,1809,"aluesofa::defaulttype::VectorTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; DataType typedefsofa::defaulttype::VectorTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; name()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; Size enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; size()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; size(const DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Text enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::VectorTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::VectorTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::VectorTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html:1878,Usability,Simpl,SimpleLayout,1878,"aluesofa::defaulttype::VectorTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; DataType typedefsofa::defaulttype::VectorTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; name()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; Size enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; size()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; size(const DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Text enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::VectorTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::VectorTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::VectorTypeInfo< TDataType >.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info.html:321,Modifiability,Inherit,Inheritance,321,"﻿. SOFA API: sofa::defaulttype::VectorTypeInfo< TDataType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::VectorTypeInfo< TDataType > Struct Template Reference . #include <VectorTypeInfo.h>. Inheritance diagram for sofa::defaulttype::VectorTypeInfo< TDataType >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &data);  ; static bool setSize (DataType &data, sofa::Size size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ byteSize(). template<class TDataType > . static sofa::Size sofa::defaulttype::VectorTypeInfo< TDataType >::byteSize ; (; ). inlinestatic . ◆ GetTypeName(). template<class TDataType > . static std::string sofa::defaulttype::VectorTypeInfo< TDataType >::GetTypeName ; (; ). inlinestatic . ◆ getValue(). template<class TDataType > . template<typename T > . static void sofa::defaulttype::VectorTypeInfo< TDataType >::getValue ; (; const DataType & ; data, . sofa::Size ; index, . T & ; value . ). inlinestatic . ◆ getValuePtr() [1/2]. template<class TDataType > . static const void* sofa::defaulttype::VectorTypeInfo< TDataType >::getValuePtr ; (; const DataType & ; data). inlinestatic . ◆ getValuePtr() [2/2]. template<class TDataType > . static void* sofa::defaulttype::VectorTypeInfo< TDataType >::getValuePtr ; (",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge-members.html:212,Modifiability,inherit,inherited,212,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Edge Member List . This is the complete list of members for sofa::geometry::Edge, including all inherited members. Edge()=deletesofa::geometry::Edge; Element_typesofa::geometry::Edgestatic; getBarycentricCoordinates(const Node &point, const Node &n0, const Node &n1)sofa::geometry::Edgeinlinestatic; intersectionWithEdge(const Node &pA, const Node &pB, const Node &pC, const Node &pD, sofa::type::Vec< 2, T > &intersectionBaryCoord)sofa::geometry::Edgeinlinestatic; intersectionWithPlane(const Node &n0, const Node &n1, const sofa::type::Vec< 3, T > &planeP0, const sofa::type::Vec< 3, T > &normal, sofa::type::Vec< 3, T > &intersection)sofa::geometry::Edgeinlinestatic; isPointOnEdge(const Node &p0, const Node &n0, const Node &n1)sofa::geometry::Edgeinlinestatic; length(const Node &n0, const Node &n1)sofa::geometry::Edgeinlinestatic; NumberOfNodessofa::geometry::Edgestatic; squaredLength(const Node &n0, const Node &n1)sofa::geometry::Edgeinlinestatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html:6504,Performance,optimiz,optimized,6504,") between the plane and the Edge . Returnsbool true if there is an intersection, otherwise false . ◆ isPointOnEdge(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Edge::isPointOnEdge ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Test if a point is on Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1nodes of the edge . Returnsbool result if point is on Edge. . ◆ length(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::length ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for squaredLength()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsLength of the edge (a T scalar) . ◆ squaredLength(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::squaredLength ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the squared length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for operator- and norm2()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsSquared length of the edge (a T scalar) . sofageometryEdge; Generated on Mon Nov 11 20",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html:6541,Performance,Optimiz,Optimizations,6541,"eturnsbool true if there is an intersection, otherwise false . ◆ isPointOnEdge(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Edge::isPointOnEdge ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Test if a point is on Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1nodes of the edge . Returnsbool result if point is on Edge. . ◆ length(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::length ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for squaredLength()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsLength of the edge (a T scalar) . ◆ squaredLength(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::squaredLength ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the squared length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for operator- and norm2()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsSquared length of the edge (a T scalar) . sofageometryEdge; Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html:7173,Performance,optimiz,optimized,7173,"eturnsbool true if there is an intersection, otherwise false . ◆ isPointOnEdge(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Edge::isPointOnEdge ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Test if a point is on Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1nodes of the edge . Returnsbool result if point is on Edge. . ◆ length(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::length ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for squaredLength()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsLength of the edge (a T scalar) . ◆ squaredLength(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::squaredLength ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the squared length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for operator- and norm2()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsSquared length of the edge (a T scalar) . sofageometryEdge; Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html:7210,Performance,Optimiz,Optimizations,7210,"eturnsbool true if there is an intersection, otherwise false . ◆ isPointOnEdge(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Edge::isPointOnEdge ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Test if a point is on Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1nodes of the edge . Returnsbool result if point is on Edge. . ◆ length(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::length ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for squaredLength()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsLength of the edge (a T scalar) . ◆ squaredLength(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::squaredLength ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the squared length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for operator- and norm2()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsSquared length of the edge (a T scalar) . sofageometryEdge; Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html:1795,Testability,Test,Test,1795,"ngth (const Node &n0, const Node &n1);  Compute the squared length (or norm) of an edge. More...;  ; template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> ; static constexpr auto length (const Node &n0, const Node &n1);  Compute the length (or norm) of an edge. More...;  ; template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> ; static constexpr auto getBarycentricCoordinates (const Node &point, const Node &n0, const Node &n1);  Compute the barycentric coordinates of input point on Edge (n0, n1). It can be interpreted as masses placed at the Edge vertices such that the point is the center of mass of these masses. No check is done if point is on Edge. Method. More...;  ; template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> ; static constexpr bool isPointOnEdge (const Node &p0, const Node &n0, const Node &n1);  Test if a point is on Edge (n0, n1) More...;  ; template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> ; static constexpr bool intersectionWithPlane (const Node &n0, const Node &n1, const sofa::type::Vec< 3, T > &planeP0, const sofa::type::Vec< 3, T > &normal, sofa::type::Vec< 3, T > &intersection);  Compute the intersection between a plane (defined by a point and a normal) and the Edge (n0, n1) More...;  ; template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> ; static constexpr bool intersectionWithEdge (const Node &pA, const Node &pB, const Node &pC, const Node &pD, sofa::type::Vec< 2, T > &intersectionBaryCoord);  Compute the intersection coordinate of the 2 input edges. More...;  . Attribute details. ◆",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html:5910,Testability,Test,Test,5910,"xpr bool sofa::geometry::Edge::intersectionWithPlane ; (; const Node & ; n0, . const Node & ; n1, . const sofa::type::Vec< 3, T > & ; planeP0, . const sofa::type::Vec< 3, T > & ; normal, . sofa::type::Vec< 3, T > & ; intersection . ). inlinestaticconstexpr . Compute the intersection between a plane (defined by a point and a normal) and the Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. n0,n1nodes of the edge ; planeP0,normalposition and normal defining the plan ; intersectionposition of the intersection (if one) between the plane and the Edge . Returnsbool true if there is an intersection, otherwise false . ◆ isPointOnEdge(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Edge::isPointOnEdge ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Test if a point is on Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1nodes of the edge . Returnsbool result if point is on Edge. . ◆ length(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::length ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for squaredLength()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsLength of the edge (a T scalar) . ◆ squaredLength(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html:6043,Testability,test,test,6043,"sofa::type::Vec< 3, T > & ; planeP0, . const sofa::type::Vec< 3, T > & ; normal, . sofa::type::Vec< 3, T > & ; intersection . ). inlinestaticconstexpr . Compute the intersection between a plane (defined by a point and a normal) and the Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. n0,n1nodes of the edge ; planeP0,normalposition and normal defining the plan ; intersectionposition of the intersection (if one) between the plane and the Edge . Returnsbool true if there is an intersection, otherwise false . ◆ isPointOnEdge(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Edge::isPointOnEdge ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Test if a point is on Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1nodes of the edge . Returnsbool result if point is on Edge. . ◆ length(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::length ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for squaredLength()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsLength of the edge (a T scalar) . ◆ squaredLength(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::squaredLength ; (; const Node & ; n0, . const Node & ; n1 . ). inline",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_element_info-members.html:264,Modifiability,inherit,inherited,264,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::ElementInfo< GeometryElement > Member List . This is the complete list of members for sofa::geometry::ElementInfo< GeometryElement >, including all inherited members. name()sofa::geometry::ElementInfo< GeometryElement >inlinestatic; type()sofa::geometry::ElementInfo< GeometryElement >inlinestatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_element_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_element_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_element_info_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_point_01_4-members.html:308,Modifiability,inherit,inherited,308,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::ElementInfo< sofa::core::topology::Topology::Point > Member List . This is the complete list of members for sofa::geometry::ElementInfo< sofa::core::topology::Topology::Point >, including all inherited members. name()sofa::geometry::ElementInfo< sofa::core::topology::Topology::Point >inlinestatic; type()sofa::geometry::ElementInfo< sofa::core::topology::Topology::Point >inlinestatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_element_info_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_point_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_element_info_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_point_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron-members.html:224,Modifiability,inherit,inherited,224,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Hexahedron Member List . This is the complete list of members for sofa::geometry::Hexahedron, including all inherited members. barycentricCoefficients(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7, const Node &pos)sofa::geometry::Hexahedroninlinestatic; center(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7)sofa::geometry::Hexahedroninlinestatic; Element_typesofa::geometry::Hexahedronstatic; getPositionFromBarycentricCoefficients(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7, const sofa::type::fixed_array< SReal, 3 > &baryC)sofa::geometry::Hexahedroninlinestatic; Hexahedron()=deletesofa::geometry::Hexahedron; NumberOfNodessofa::geometry::Hexahedronstatic; squaredDistanceTo(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7, const Node &pos)sofa::geometry::Hexahedroninlinestatic; volume(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7)sofa::geometry::Hexahedroninlinestatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html:3516,Performance,optimiz,optimizations,3516,"st Node &n7);  Compute the volume of a hexahedron. More...;  . Attribute details. ◆ Element_type. constexpr ElementType sofa::geometry::Hexahedron::Element_type = ElementType::HEXAHEDRON. staticconstexpr . ◆ NumberOfNodes. constexpr sofa::Size sofa::geometry::Hexahedron::NumberOfNodes = 8. staticconstexpr . Constructor details. ◆ Hexahedron(). sofa::geometry::Hexahedron::Hexahedron ; (; ). delete . Function details. ◆ barycentricCoefficients(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::barycentricCoefficients ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7, . const Node & ; pos . ). inlinestaticconstexpr . Compute the barycentric coefficients of a node in a hexahedron. ; RemarksDue to some optimizations, the order of nodes given as parameter is necessary. ; Template Parameters. Nodeiterable container, with operator[] ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron ; posposition of the node from which the coefficients will be computed . ReturnsA Vec3 container with the barycentric coefficients of the given node . ◆ center(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::center ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7 . ). inlinestaticconstexpr . Compute the center of a hexahedron. ; RemarksThe order of nodes given as parameter is not necessary. ; Template Parameters. Nodeiterable container, with operator[] ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron . ReturnsCenter of",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html:6094,Performance,optimiz,optimizations,6094,"expr . Compute a position from a given set of barycentric coefficients and the associated hexahedron. ; RemarksThe order of nodes given as parameter is necessary. ; Template Parameters. Nodeiterable container, with operator* applicable with a scalar ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron ; baryCbarycentric coefficients . ReturnsPosition computed from the coefficients, as a Node type . ◆ squaredDistanceTo(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::squaredDistanceTo ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7, . const Node & ; pos . ). inlinestaticconstexpr . Compute the squared distance between a node and the center of a hexahedron. ; RemarksDue to some optimizations, the order of nodes given as parameter is necessary. ; Template Parameters. Nodeiterable container, with operator[] ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron ; posposition of the node from which the distance will be computed . ReturnsDistance from the node and the center of the hexahedron, as a T scalar . ◆ volume(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::volume ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7 . ). inlinestaticconstexpr . Compute the volume of a hexahedron. ; Remarksnon optimized version: just return the sum of the 6 inner-tetrahedra ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron . ReturnsVolume of the h",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html:6910,Performance,optimiz,optimized,6910,"e order of nodes given as parameter is necessary. ; Template Parameters. Nodeiterable container, with operator* applicable with a scalar ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron ; baryCbarycentric coefficients . ReturnsPosition computed from the coefficients, as a Node type . ◆ squaredDistanceTo(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::squaredDistanceTo ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7, . const Node & ; pos . ). inlinestaticconstexpr . Compute the squared distance between a node and the center of a hexahedron. ; RemarksDue to some optimizations, the order of nodes given as parameter is necessary. ; Template Parameters. Nodeiterable container, with operator[] ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron ; posposition of the node from which the distance will be computed . ReturnsDistance from the node and the center of the hexahedron, as a T scalar . ◆ volume(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::volume ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7 . ). inlinestaticconstexpr . Compute the volume of a hexahedron. ; Remarksnon optimized version: just return the sum of the 6 inner-tetrahedra ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron . ReturnsVolume of the hexahedron, as a T scalar . sofageometryHexahedron; Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_pentahedron-members.html:226,Modifiability,inherit,inherited,226,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Pentahedron Member List . This is the complete list of members for sofa::geometry::Pentahedron, including all inherited members. Element_typesofa::geometry::Pentahedronstatic; NumberOfNodessofa::geometry::Pentahedronstatic; Pentahedron()=deletesofa::geometry::Pentahedron. Generated on Mon Nov 11 2024 03:18:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_pentahedron-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_pentahedron-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_point-members.html:214,Modifiability,inherit,inherited,214,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Point Member List . This is the complete list of members for sofa::geometry::Point, including all inherited members. Element_typesofa::geometry::Pointstatic; NumberOfNodessofa::geometry::Pointstatic; Point()=deletesofa::geometry::Point. Generated on Mon Nov 11 2024 03:18:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_pyramid-members.html:218,Modifiability,inherit,inherited,218,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Pyramid Member List . This is the complete list of members for sofa::geometry::Pyramid, including all inherited members. Element_typesofa::geometry::Pyramidstatic; NumberOfNodessofa::geometry::Pyramidstatic; Pyramid()=deletesofa::geometry::Pyramid. Generated on Mon Nov 11 2024 03:18:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_pyramid-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_pyramid-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_quad-members.html:212,Modifiability,inherit,inherited,212,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Quad Member List . This is the complete list of members for sofa::geometry::Quad, including all inherited members. area(const Node &n0, const Node &n1, const Node &n2, const Node &n3)sofa::geometry::Quadinlinestatic; Element_typesofa::geometry::Quadstatic; NumberOfNodessofa::geometry::Quadstatic; Quad()=deletesofa::geometry::Quad. Generated on Mon Nov 11 2024 03:18:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_quad-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_quad-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_tetrahedron-members.html:226,Modifiability,inherit,inherited,226,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Tetrahedron Member List . This is the complete list of members for sofa::geometry::Tetrahedron, including all inherited members. Element_typesofa::geometry::Tetrahedronstatic; NumberOfNodessofa::geometry::Tetrahedronstatic; Tetrahedron()=deletesofa::geometry::Tetrahedron; volume(const Node &n0, const Node &n1, const Node &n2, const Node &n3)sofa::geometry::Tetrahedroninlinestatic. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_tetrahedron-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_tetrahedron-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle-members.html:220,Modifiability,inherit,inherited,220,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Triangle Member List . This is the complete list of members for sofa::geometry::Triangle, including all inherited members. area(const Node &n0, const Node &n1, const Node &n2)sofa::geometry::Triangleinlinestatic; Element_typesofa::geometry::Trianglestatic; getBarycentricCoordinates(const Node &p0, const Node &n0, const Node &n1, const Node &n2)sofa::geometry::Triangleinlinestatic; isPointInTriangle(const Node &p0, const Node &n0, const Node &n1, const Node &n2, sofa::type::Vec< 3, T > &baryCoefs)sofa::geometry::Triangleinlinestatic; normal(const Node &n0, const Node &n1, const Node &n2)sofa::geometry::Triangleinlinestatic; NumberOfNodessofa::geometry::Trianglestatic; rayIntersection(const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction, TReal &t, TReal &u, TReal &v)sofa::geometry::Triangleinlinestatic; rayIntersection(const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction)sofa::geometry::Triangleinlinestatic; Triangle()=deletesofa::geometry::Triangle. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html:3432,Performance,optimiz,optimized,3432,"tersection (const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction);  Test if a ray intersects a triangle. More...;  . Attribute details. ◆ Element_type. constexpr ElementType sofa::geometry::Triangle::Element_type = ElementType::TRIANGLE. staticconstexpr . ◆ NumberOfNodes. constexpr sofa::Size sofa::geometry::Triangle::NumberOfNodes = 3. staticconstexpr . Constructor details. ◆ Triangle(). sofa::geometry::Triangle::Triangle ; (; ). delete . Function details. ◆ area(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::area ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the area of a triangle. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec and the dimension (2D or 3D) ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle . ReturnsArea of the triangle (a T scalar) . ◆ getBarycentricCoordinates(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::getBarycentricCoordinates ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the barycentric coordinates of the input point in the Triangle. It can be interpreted as masses placed at the vertices of Triangle (n0, n1, n2), such that the point is the center of mass of these masses. ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the input point to c",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html:3469,Performance,Optimiz,Optimizations,3469,"fa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction);  Test if a ray intersects a triangle. More...;  . Attribute details. ◆ Element_type. constexpr ElementType sofa::geometry::Triangle::Element_type = ElementType::TRIANGLE. staticconstexpr . ◆ NumberOfNodes. constexpr sofa::Size sofa::geometry::Triangle::NumberOfNodes = 3. staticconstexpr . Constructor details. ◆ Triangle(). sofa::geometry::Triangle::Triangle ; (; ). delete . Function details. ◆ area(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::area ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the area of a triangle. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec and the dimension (2D or 3D) ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle . ReturnsArea of the triangle (a T scalar) . ◆ getBarycentricCoordinates(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::getBarycentricCoordinates ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the barycentric coordinates of the input point in the Triangle. It can be interpreted as masses placed at the vertices of Triangle (n0, n1, n2), such that the point is the center of mass of these masses. ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the input point to compute the coefficients ; n0,n1,n2nodes of the triangle . Returnssofa::type::Vec<3, T> barycentric",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html:1861,Testability,Test,Test,1861,"nst Node &n2);  Compute the area of a triangle. More...;  ; template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> ; static constexpr auto getBarycentricCoordinates (const Node &p0, const Node &n0, const Node &n1, const Node &n2);  Compute the barycentric coordinates of the input point in the Triangle. It can be interpreted as masses placed at the vertices of Triangle (n0, n1, n2), such that the point is the center of mass of these masses. More...;  ; template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> ; static constexpr auto normal (const Node &n0, const Node &n1, const Node &n2);  Compute the normal of a triangle. More...;  ; template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> ; static constexpr bool isPointInTriangle (const Node &p0, const Node &n0, const Node &n1, const Node &n2, sofa::type::Vec< 3, T > &baryCoefs);  Test if input point is inside Triangle (n0, n1, n2) using Triangle. More...;  ; template<typename TReal > ; static constexpr bool rayIntersection (const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction, TReal &t, TReal &u, TReal &v);  Test if a ray intersects a triangle, and gives barycentric coordinates of the intersection if applicable. More...;  ; template<typename TReal > ; static constexpr bool rayIntersection (const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction);  Test if a ray intersects a triangle. More...;  . Attribute details. ◆ Element_type. constexpr ElementType s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html:2246,Testability,Test,Test,2246,"t can be interpreted as masses placed at the vertices of Triangle (n0, n1, n2), such that the point is the center of mass of these masses. More...;  ; template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> ; static constexpr auto normal (const Node &n0, const Node &n1, const Node &n2);  Compute the normal of a triangle. More...;  ; template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> ; static constexpr bool isPointInTriangle (const Node &p0, const Node &n0, const Node &n1, const Node &n2, sofa::type::Vec< 3, T > &baryCoefs);  Test if input point is inside Triangle (n0, n1, n2) using Triangle. More...;  ; template<typename TReal > ; static constexpr bool rayIntersection (const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction, TReal &t, TReal &u, TReal &v);  Test if a ray intersects a triangle, and gives barycentric coordinates of the intersection if applicable. More...;  ; template<typename TReal > ; static constexpr bool rayIntersection (const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction);  Test if a ray intersects a triangle. More...;  . Attribute details. ◆ Element_type. constexpr ElementType sofa::geometry::Triangle::Element_type = ElementType::TRIANGLE. staticconstexpr . ◆ NumberOfNodes. constexpr sofa::Size sofa::geometry::Triangle::NumberOfNodes = 3. staticconstexpr . Constructor details. ◆ Triangle(). sofa::geometry::Triangle::Triangle ; (; ). delete . Function details. ◆ area(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, type",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html:2639,Testability,Test,Test,2639,"n2);  Compute the normal of a triangle. More...;  ; template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> ; static constexpr bool isPointInTriangle (const Node &p0, const Node &n0, const Node &n1, const Node &n2, sofa::type::Vec< 3, T > &baryCoefs);  Test if input point is inside Triangle (n0, n1, n2) using Triangle. More...;  ; template<typename TReal > ; static constexpr bool rayIntersection (const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction, TReal &t, TReal &u, TReal &v);  Test if a ray intersects a triangle, and gives barycentric coordinates of the intersection if applicable. More...;  ; template<typename TReal > ; static constexpr bool rayIntersection (const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction);  Test if a ray intersects a triangle. More...;  . Attribute details. ◆ Element_type. constexpr ElementType sofa::geometry::Triangle::Element_type = ElementType::TRIANGLE. staticconstexpr . ◆ NumberOfNodes. constexpr sofa::Size sofa::geometry::Triangle::NumberOfNodes = 3. staticconstexpr . Constructor details. ◆ Triangle(). sofa::geometry::Triangle::Triangle ; (; ). delete . Function details. ◆ area(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::area ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the area of a triangle. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec an",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html:5068,Testability,Test,Test,5068,". Compute the barycentric coordinates of the input point in the Triangle. It can be interpreted as masses placed at the vertices of Triangle (n0, n1, n2), such that the point is the center of mass of these masses. ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the input point to compute the coefficients ; n0,n1,n2nodes of the triangle . Returnssofa::type::Vec<3, T> barycentric coefficients of each vertex of the Triangle. These masses can be zero or negative; they are all positive if and only if the point is inside the Triangle. . ◆ isPointInTriangle(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Triangle::isPointInTriangle ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . sofa::type::Vec< 3, T > & ; baryCoefs . ). inlinestaticconstexpr . Test if input point is inside Triangle (n0, n1, n2) using Triangle. ; See alsogetBarycentricCoordinates . The point is inside the Triangle if and only if Those coordinates are all positive. ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1,n2nodes of the triangle ; outputparameter: sofa::type::Vec<3, T> barycentric coordinates of the input point in Triangle . Returnsbool result if point is inside Triangle. . ◆ normal(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::normal ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the normal of a triangle. ; Remarkstriangle normal computation is only possible in 3D . normal returned is not normalized ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html:5355,Testability,test,test,5355," point to compute the coefficients ; n0,n1,n2nodes of the triangle . Returnssofa::type::Vec<3, T> barycentric coefficients of each vertex of the Triangle. These masses can be zero or negative; they are all positive if and only if the point is inside the Triangle. . ◆ isPointInTriangle(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Triangle::isPointInTriangle ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . sofa::type::Vec< 3, T > & ; baryCoefs . ). inlinestaticconstexpr . Test if input point is inside Triangle (n0, n1, n2) using Triangle. ; See alsogetBarycentricCoordinates . The point is inside the Triangle if and only if Those coordinates are all positive. ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1,n2nodes of the triangle ; outputparameter: sofa::type::Vec<3, T> barycentric coordinates of the input point in Triangle . Returnsbool result if point is inside Triangle. . ◆ normal(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::normal ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the normal of a triangle. ; Remarkstriangle normal computation is only possible in 3D . normal returned is not normalized ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle . ReturnsVec3 normal of this triangle . ◆ rayIntersection() [1/2]. template<typename TReal > . static constexpr bool sofa::geometry::Triangle::rayIntersection ; (; const sofa::type::Vec< 3, TReal > & ; n0, . const sofa::type::Vec< 3, TReal > & ; n1, . const sofa::type::Vec< 3, TReal",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html:6546,Testability,Test,Test,6546,"pename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::normal ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the normal of a triangle. ; Remarkstriangle normal computation is only possible in 3D . normal returned is not normalized ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle . ReturnsVec3 normal of this triangle . ◆ rayIntersection() [1/2]. template<typename TReal > . static constexpr bool sofa::geometry::Triangle::rayIntersection ; (; const sofa::type::Vec< 3, TReal > & ; n0, . const sofa::type::Vec< 3, TReal > & ; n1, . const sofa::type::Vec< 3, TReal > & ; n2, . const sofa::type::Vec< 3, TReal > & ; origin, . const sofa::type::Vec< 3, TReal > & ; direction . ). inlinestaticconstexpr . Test if a ray intersects a triangle. ; RemarksImplementation for 3D only ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle . Returnseither if the given ray intersects the given triangle or not . ◆ rayIntersection() [2/2]. template<typename TReal > . static constexpr bool sofa::geometry::Triangle::rayIntersection ; (; const sofa::type::Vec< 3, TReal > & ; n0, . const sofa::type::Vec< 3, TReal > & ; n1, . const sofa::type::Vec< 3, TReal > & ; n2, . const sofa::type::Vec< 3, TReal > & ; origin, . const sofa::type::Vec< 3, TReal > & ; direction, . TReal & ; t, . TReal & ; u, . TReal & ; v . ). inlinestaticconstexpr . Test if a ray intersects a triangle, and gives barycentric coordinates of the intersection if applicable. ; RemarksImplementation for 3D only ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle ; t,u,vbarycent",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html:7262,Testability,Test,Test,7262,"onst Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the normal of a triangle. ; Remarkstriangle normal computation is only possible in 3D . normal returned is not normalized ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle . ReturnsVec3 normal of this triangle . ◆ rayIntersection() [1/2]. template<typename TReal > . static constexpr bool sofa::geometry::Triangle::rayIntersection ; (; const sofa::type::Vec< 3, TReal > & ; n0, . const sofa::type::Vec< 3, TReal > & ; n1, . const sofa::type::Vec< 3, TReal > & ; n2, . const sofa::type::Vec< 3, TReal > & ; origin, . const sofa::type::Vec< 3, TReal > & ; direction . ). inlinestaticconstexpr . Test if a ray intersects a triangle. ; RemarksImplementation for 3D only ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle . Returnseither if the given ray intersects the given triangle or not . ◆ rayIntersection() [2/2]. template<typename TReal > . static constexpr bool sofa::geometry::Triangle::rayIntersection ; (; const sofa::type::Vec< 3, TReal > & ; n0, . const sofa::type::Vec< 3, TReal > & ; n1, . const sofa::type::Vec< 3, TReal > & ; n2, . const sofa::type::Vec< 3, TReal > & ; origin, . const sofa::type::Vec< 3, TReal > & ; direction, . TReal & ; t, . TReal & ; u, . TReal & ; v . ). inlinestaticconstexpr . Test if a ray intersects a triangle, and gives barycentric coordinates of the intersection if applicable. ; RemarksImplementation for 3D only ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle ; t,u,vbarycentric coefficients of the potential intersection in the triangle . Returnseither if the given ray intersects the given triangle or not . sofageometryTriangle; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1fbo_parameters-members.html:218,Modifiability,inherit,inherited,218,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::fboParameters Member List . This is the complete list of members for sofa::gl::fboParameters, including all inherited members. colorFormatsofa::gl::fboParameters; colorInternalformatsofa::gl::fboParameters; colorTypesofa::gl::fboParameters; depthInternalformatsofa::gl::fboParameters; fboParameters()sofa::gl::fboParametersinline. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1fbo_parameters-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1fbo_parameters-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_custom_g_l_buffer-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::BasicShapesGL::CustomGLBuffer Member List . This is the complete list of members for sofa::gl::BasicShapesGL::CustomGLBuffer, including all inherited members. bufferSizesofa::gl::BasicShapesGL::CustomGLBuffer; locationsofa::gl::BasicShapesGL::CustomGLBuffer; VBOsofa::gl::BasicShapesGL::CustomGLBuffer. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_custom_g_l_buffer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_custom_g_l_buffer-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_g_l_buffers-members.html:240,Modifiability,inherit,inherited,240,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::BasicShapesGL::GLBuffers Member List . This is the complete list of members for sofa::gl::BasicShapesGL::GLBuffers, including all inherited members. IBOsofa::gl::BasicShapesGL::GLBuffers; indicesSizesofa::gl::BasicShapesGL::GLBuffers; normalsBufferSizesofa::gl::BasicShapesGL::GLBuffers; texcoordsBufferSizesofa::gl::BasicShapesGL::GLBuffers; totalSizesofa::gl::BasicShapesGL::GLBuffers; VBOsofa::gl::BasicShapesGL::GLBuffers; verticesBufferSizesofa::gl::BasicShapesGL::GLBuffers. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_g_l_buffers-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_g_l_buffers-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l___sphere_1_1_sphere_description-members.html:298,Modifiability,inherit,inherited,298,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescription Member List . This is the complete list of members for sofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescription, including all inherited members. operator<(const SphereDescription &d) constsofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescriptioninline; ringssofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescription; sectorssofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescription; SphereDescription(unsigned int r, unsigned int s)sofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescriptioninline. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l___sphere_1_1_sphere_description-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l___sphere_1_1_sphere_description-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_disable-members.html:222,Modifiability,inherit,inherited,222,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Disable< Flag > Member List . This is the complete list of members for sofa::gl::Disable< Flag >, including all inherited members. Disable()sofa::gl::Disable< Flag >inline; statesofa::gl::Disable< Flag >; ~Disable()sofa::gl::Disable< Flag >inline. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_disable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_disable-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_enable-members.html:220,Modifiability,inherit,inherited,220,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Enable< Flag > Member List . This is the complete list of members for sofa::gl::Enable< Flag >, including all inherited members. Enable()sofa::gl::Enable< Flag >inline; statesofa::gl::Enable< Flag >; ~Enable()sofa::gl::Enable< Flag >inline. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_enable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_enable-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents-members.html:244,Modifiability,inherit,inherited,244,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::GLSLShader::ShaderContents Member List . This is the complete list of members for sofa::gl::GLSLShader::ShaderContents, including all inherited members. filenamesofa::gl::GLSLShader::ShaderContents; ShaderContents()sofa::gl::GLSLShader::ShaderContentsinline; textsofa::gl::GLSLShader::ShaderContents. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html:338,Performance,load,loaded,338,"﻿. SOFA API: sofa::gl::GLSLShader::ShaderContents Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::GLSLShader::ShaderContents Struct Reference . #include <GLSLShader.h>; A shader is a source code, as such it can be loaded either directly by its source or a filename (containing the source) ; More...; Detailed Description; A shader is a source code, as such it can be loaded either directly by its source or a filename (containing the source) . Public Attributes; std::string filename;  ; std::string text;  . Public Member Functions;  ShaderContents ();  . Attribute details. ◆ filename. std::string sofa::gl::GLSLShader::ShaderContents::filename. ◆ text. std::string sofa::gl::GLSLShader::ShaderContents::text. Constructor details. ◆ ShaderContents(). sofa::gl::GLSLShader::ShaderContents::ShaderContents ; (; ). inline . sofaglGLSLShaderShaderContents; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html:491,Performance,load,loaded,491,"﻿. SOFA API: sofa::gl::GLSLShader::ShaderContents Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::GLSLShader::ShaderContents Struct Reference . #include <GLSLShader.h>; A shader is a source code, as such it can be loaded either directly by its source or a filename (containing the source) ; More...; Detailed Description; A shader is a source code, as such it can be loaded either directly by its source or a filename (containing the source) . Public Attributes; std::string filename;  ; std::string text;  . Public Member Functions;  ShaderContents ();  . Attribute details. ◆ filename. std::string sofa::gl::GLSLShader::ShaderContents::filename. ◆ text. std::string sofa::gl::GLSLShader::ShaderContents::text. Constructor details. ◆ ShaderContents(). sofa::gl::GLSLShader::ShaderContents::ShaderContents ; (; ). inline . sofaglGLSLShaderShaderContents; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_g_u_i_manager_1_1_g_u_i_creator-members.html:254,Modifiability,inherit,inherited,254,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::GUIManager::GUICreator Member List . This is the complete list of members for sofa::gui::common::GUIManager::GUICreator, including all inherited members. creatorsofa::gui::common::GUIManager::GUICreator; namesofa::gui::common::GUIManager::GUICreator; parameterssofa::gui::common::GUIManager::GUICreator; prioritysofa::gui::common::GUIManager::GUICreator. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_g_u_i_manager_1_1_g_u_i_creator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_g_u_i_manager_1_1_g_u_i_creator-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_mouse_position-members.html:236,Modifiability,inherit,inherited,236,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::MousePosition Member List . This is the complete list of members for sofa::gui::common::MousePosition, including all inherited members. screenHeightsofa::gui::common::MousePosition; screenWidthsofa::gui::common::MousePosition; xsofa::gui::common::MousePosition; ysofa::gui::common::MousePosition. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_mouse_position-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_mouse_position-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:258,Modifiability,inherit,inherited,258,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:122,Performance,perform,performer,122,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:221,Performance,perform,performer,221,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:303,Performance,perform,performer,303,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:360,Performance,perform,performer,360,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:415,Performance,perform,performer,415,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:481,Performance,perform,performer,481,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:532,Performance,perform,performer,532,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:592,Performance,perform,performer,592,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:648,Performance,perform,performer,648,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:702,Performance,perform,performer,702,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:35,Performance,perform,performer,35,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:241,Performance,perform,performer,241,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:852,Performance,perform,performer,852,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:917,Performance,perform,performer,917,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:1005,Performance,perform,performer,1005,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:1126,Performance,perform,performer,1126,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:1199,Performance,perform,performer,1199,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:1270,Performance,perform,performer,1270,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:1363,Performance,perform,performer,1363,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:1473,Performance,perform,performer,1473,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1data_time-members.html:218,Modifiability,inherit,inherited,218,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::dataTime Member List . This is the complete list of members for sofa::gui::qt::dataTime, including all inherited members. dataTime(double t, std::string n, std::string ty=std::string(), std::string address=std::string())sofa::gui::qt::dataTimeinline; namesofa::gui::qt::dataTime; operator==(const dataTime &other)sofa::gui::qt::dataTimeinline; ptrsofa::gui::qt::dataTime; timesofa::gui::qt::dataTime; typesofa::gui::qt::dataTime. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1data_time-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1data_time-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_activation_functor-members.html:236,Modifiability,inherit,inherited,236,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ActivationFunctor Member List . This is the complete list of members for sofa::gui::qt::ActivationFunctor, including all inherited members. ActivationFunctor(bool act, GraphListenerQListView *l)sofa::gui::qt::ActivationFunctorinlinesignal; activesofa::gui::qt::ActivationFunctorprotected; listenersofa::gui::qt::ActivationFunctorprotected; operator()(core::objectmodel::BaseNode *n)sofa::gui::qt::ActivationFunctorinline; pixmap_filenamesofa::gui::qt::ActivationFunctorprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_activation_functor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_activation_functor-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_data_widget_1_1_creator_argument-members.html:256,Modifiability,inherit,inherited,256,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::DataWidget::CreatorArgument Member List . This is the complete list of members for sofa::gui::qt::DataWidget::CreatorArgument, including all inherited members. datasofa::gui::qt::DataWidget::CreatorArgument; namesofa::gui::qt::DataWidget::CreatorArgument; parentsofa::gui::qt::DataWidget::CreatorArgument; readOnlysofa::gui::qt::DataWidget::CreatorArgument. Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_data_widget_1_1_creator_argument-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_data_widget_1_1_creator_argument-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_link_widget_1_1_creator_argument-members.html:256,Modifiability,inherit,inherited,256,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::LinkWidget::CreatorArgument Member List . This is the complete list of members for sofa::gui::qt::LinkWidget::CreatorArgument, including all inherited members. linksofa::gui::qt::LinkWidget::CreatorArgument; namesofa::gui::qt::LinkWidget::CreatorArgument; parentsofa::gui::qt::LinkWidget::CreatorArgument; readOnlysofa::gui::qt::LinkWidget::CreatorArgument. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_link_widget_1_1_creator_argument-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_link_widget_1_1_creator_argument-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_modify_object_flags-members.html:236,Modifiability,inherit,inherited,236,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ModifyObjectFlags Member List . This is the complete list of members for sofa::gui::qt::ModifyObjectFlags, including all inherited members. EMPTY_FLAGsofa::gui::qt::ModifyObjectFlags; HIDE_FLAGsofa::gui::qt::ModifyObjectFlags; LINKPATH_MODIFIABLE_FLAGsofa::gui::qt::ModifyObjectFlags; MODELER_FLAGsofa::gui::qt::ModifyObjectFlags; ModifyObjectFlags()sofa::gui::qt::ModifyObjectFlagsinline; PROPERTY_WIDGET_FLAGsofa::gui::qt::ModifyObjectFlags; READONLY_FLAGsofa::gui::qt::ModifyObjectFlags; REINIT_FLAGsofa::gui::qt::ModifyObjectFlags; RESIZABLE_FLAGsofa::gui::qt::ModifyObjectFlags; setFlagsForModeler()sofa::gui::qt::ModifyObjectFlagsinline; setFlagsForSofa()sofa::gui::qt::ModifyObjectFlagsinline. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_modify_object_flags-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_modify_object_flags-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_movie_options_widget_1_1_codec-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::MovieOptionsWidget::Codec Member List . This is the complete list of members for sofa::gui::qt::MovieOptionsWidget::Codec, including all inherited members. codecsofa::gui::qt::MovieOptionsWidget::Codec; Codec(std::string e, std::string c, std::string d)sofa::gui::qt::MovieOptionsWidget::Codecinline; Codec(std::string e, std::string d)sofa::gui::qt::MovieOptionsWidget::Codecinline; descriptionsofa::gui::qt::MovieOptionsWidget::Codec; extensionsofa::gui::qt::MovieOptionsWidget::Codec. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_movie_options_widget_1_1_codec-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_movie_options_widget_1_1_codec-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_object_model-members.html:224,Modifiability,inherit,inherited,224,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ObjectModel Member List . This is the complete list of members for sofa::gui::qt::ObjectModel, including all inherited members. asBase()sofa::gui::qt::ObjectModelinline; isBase()sofa::gui::qt::ObjectModelinline; isData()sofa::gui::qt::ObjectModelinline; isNode()sofa::gui::qt::ObjectModelinline; isObject()sofa::gui::qt::ObjectModelinline; ptrsofa::gui::qt::ObjectModel; typesofa::gui::qt::ObjectModel. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_object_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_object_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_checked_series-members.html:268,Modifiability,inherit,inherited,268,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaWindowProfiler::CheckedSeries Member List . This is the complete list of members for sofa::gui::qt::SofaWindowProfiler::CheckedSeries, including all inherited members. checkedParentStepsofa::gui::qt::SofaWindowProfiler::CheckedSeries; lineSeriessofa::gui::qt::SofaWindowProfiler::CheckedSeries. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_checked_series-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_checked_series-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background-members.html:238,Modifiability,inherit,inherited,238,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::console::Background Member List . This is the complete list of members for sofa::helper::console::Background, including all inherited members. Bright enum namesofa::helper::console::Background; Normal enum namesofa::helper::console::Background. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background.html:341,Energy Efficiency,Green,Green,341,﻿. SOFA API: sofa::helper::console::Background Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::helper::console::Background Struct Reference . #include <console.h>; Enum details. ◆ Bright. enum sofa::helper::console::Background::Bright. strong . EnumeratorBlack ; Red ; Green ; Yellow ; Blue ; Magenta ; Cyan ; Gray . ◆ Normal. enum sofa::helper::console::Background::Normal. strong . EnumeratorBlack ; Red ; Green ; Yellow ; Blue ; Magenta ; Cyan ; Gray ; Reset . sofahelperconsoleBackground; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background.html:480,Energy Efficiency,Green,Green,480,﻿. SOFA API: sofa::helper::console::Background Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::helper::console::Background Struct Reference . #include <console.h>; Enum details. ◆ Bright. enum sofa::helper::console::Background::Bright. strong . EnumeratorBlack ; Red ; Green ; Yellow ; Blue ; Magenta ; Cyan ; Gray . ◆ Normal. enum sofa::helper::console::Background::Normal. strong . EnumeratorBlack ; Red ; Green ; Yellow ; Blue ; Magenta ; Cyan ; Gray ; Reset . sofahelperconsoleBackground; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground-members.html:238,Modifiability,inherit,inherited,238,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::console::Foreground Member List . This is the complete list of members for sofa::helper::console::Foreground, including all inherited members. Bright enum namesofa::helper::console::Foreground; Normal enum namesofa::helper::console::Foreground. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground.html:341,Energy Efficiency,Green,Green,341,﻿. SOFA API: sofa::helper::console::Foreground Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::helper::console::Foreground Struct Reference . #include <console.h>; Enum details. ◆ Bright. enum sofa::helper::console::Foreground::Bright. strong . EnumeratorBlack ; Red ; Green ; Yellow ; Blue ; Magenta ; Cyan ; Gray . ◆ Normal. enum sofa::helper::console::Foreground::Normal. strong . EnumeratorBlack ; Red ; Green ; Yellow ; Blue ; Magenta ; Cyan ; Gray ; Reset . sofahelperconsoleForeground; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground.html:480,Energy Efficiency,Green,Green,480,﻿. SOFA API: sofa::helper::console::Foreground Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::helper::console::Foreground Struct Reference . #include <console.h>; Enum details. ◆ Bright. enum sofa::helper::console::Foreground::Bright. strong . EnumeratorBlack ; Red ; Green ; Yellow ; Blue ; Magenta ; Cyan ; Gray . ◆ Normal. enum sofa::helper::console::Foreground::Normal. strong . EnumeratorBlack ; Red ; Green ; Yellow ; Blue ; Magenta ; Cyan ; Gray ; Reset . sofahelperconsoleForeground; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header-members.html:226,Modifiability,inherit,inherited,226,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::DDSHeader Member List . This is the complete list of members for sofa::helper::io::DDSHeader, including all inherited members. ddpfPixelFormatsofa::helper::io::DDSHeader; ddsCapssofa::helper::io::DDSHeader; dwDepthsofa::helper::io::DDSHeader; dwFlagssofa::helper::io::DDSHeader; dwHeightsofa::helper::io::DDSHeader; dwMagicsofa::helper::io::DDSHeader; dwMipMapCountsofa::helper::io::DDSHeader; dwPitchOrLinearSizesofa::helper::io::DDSHeader; dwReservedsofa::helper::io::DDSHeader; dwReserved2sofa::helper::io::DDSHeader; dwSizesofa::helper::io::DDSHeader; dwWidthsofa::helper::io::DDSHeader. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_caps-members.html:244,Modifiability,inherit,inherited,244,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::DDSHeader::DDSCaps Member List . This is the complete list of members for sofa::helper::io::DDSHeader::DDSCaps, including all inherited members. dwCaps1sofa::helper::io::DDSHeader::DDSCaps; dwCaps2sofa::helper::io::DDSHeader::DDSCaps; Reservedsofa::helper::io::DDSHeader::DDSCaps. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_caps-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_caps-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_pixel_format-members.html:258,Modifiability,inherit,inherited,258,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::DDSHeader::DDSPixelFormat Member List . This is the complete list of members for sofa::helper::io::DDSHeader::DDSPixelFormat, including all inherited members. dwBBitMasksofa::helper::io::DDSHeader::DDSPixelFormat; dwFlagssofa::helper::io::DDSHeader::DDSPixelFormat; dwFourCCsofa::helper::io::DDSHeader::DDSPixelFormat; dwGBitMasksofa::helper::io::DDSHeader::DDSPixelFormat; dwRBitMasksofa::helper::io::DDSHeader::DDSPixelFormat; dwRGBAlphaBitMasksofa::helper::io::DDSHeader::DDSPixelFormat; dwRGBBitCountsofa::helper::io::DDSHeader::DDSPixelFormat; dwSizesofa::helper::io::DDSHeader::DDSPixelFormat. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_pixel_format-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_pixel_format-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1kd_tree_1_1_t_r_e_e_n_o_d_e-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::kdTree< Coord >::TREENODE Member List . This is the complete list of members for sofa::helper::kdTree< Coord >::TREENODE, including all inherited members. leftsofa::helper::kdTree< Coord >::TREENODE; rightsofa::helper::kdTree< Coord >::TREENODE; splitdirsofa::helper::kdTree< Coord >::TREENODE. Generated on Mon Nov 11 2024 03:30:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1kd_tree_1_1_t_r_e_e_n_o_d_e-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1kd_tree_1_1_t_r_e_e_n_o_d_e-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:244,Modifiability,inherit,inherited,244,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:206,Testability,log,logging,206,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:292,Testability,log,logging,292,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:368,Testability,log,logging,368,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:414,Testability,log,logging,414,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:516,Testability,log,logging,516,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:615,Testability,log,logging,615,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:673,Testability,log,logging,673,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:723,Testability,log,logging,723,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:794,Testability,log,logging,794,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:855,Testability,log,logging,855,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:467,Integrability,message,message,467,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:575,Integrability,message,message,575,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:838,Integrability,message,message,838,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1648,Integrability,message,message,1648,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:310,Modifiability,Inherit,Inheritance,310,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1880,Modifiability,inherit,inheriting,1880,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:27,Testability,log,logging,27,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:240,Testability,log,logging,240,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:348,Testability,log,logging,348,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1139,Testability,log,logging,1139,"Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. st",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1245,Testability,log,logging,1245,"fo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingCompone",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1330,Testability,log,logging,1330,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1436,Testability,log,logging,1436,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1557,Testability,log,logging,1557,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1702,Testability,log,logging,1702,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1959,Testability,log,logging,1959,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:148,Availability,Error,ErrorMessageException,148,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:273,Availability,Error,ErrorMessageException,273,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:329,Availability,Error,ErrorMessageException,329,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:400,Availability,Error,ErrorMessageExceptioninline,400,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:489,Availability,Error,ErrorMessageExceptioninlinevirtual,489,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:310,Modifiability,inherit,inherited,310,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:239,Testability,log,logging,239,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:366,Testability,log,logging,366,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:455,Testability,log,logging,455,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:61,Availability,Error,ErrorMessageException,61,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:272,Availability,Error,ErrorMessageException,272,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:378,Availability,error,error,378,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:473,Availability,Error,ErrorMessageException,473,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:556,Availability,error,error,556,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:598,Availability,Error,ErrorMessageException,598,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:698,Availability,Error,ErrorMessageException,698,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:771,Availability,Error,ErrorMessageException,771,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:794,Availability,Error,ErrorMessageException,794,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:929,Availability,Error,ErrorMessageException,929,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:384,Integrability,Message,Message,384,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:562,Integrability,Message,Message,562,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:401,Modifiability,Inherit,Inheritance,401,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:27,Testability,log,logging,27,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:238,Testability,log,logging,238,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:439,Testability,log,logging,439,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:737,Testability,log,logging,737,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:895,Testability,log,logging,895,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:234,Modifiability,inherit,inherited,234,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:201,Testability,log,logging,201,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:297,Testability,log,logging,297,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:346,Testability,log,logging,346,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:402,Testability,log,logging,402,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:439,Testability,log,logging,439,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:484,Testability,log,logging,484,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:444,Integrability,message,message,444,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:522,Integrability,message,message,522,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:311,Modifiability,Inherit,Inheritance,311,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:27,Testability,log,logging,27,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
