id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/su2code/SU2/issues/2:146,Testability,Test,Test,146,"I just (08/23/2013 @ ~12:30p.m. PDT) pulled over the latest changes via git. After re-compiling, and launching a parallel job (OM6 Turbulent Wing Test Case) with the parallel_computation.py script, SU2 seems to launch 4 serial, duplicate jobs rather than 1 parallel job on 4 cores.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/2
https://github.com/su2code/SU2/issues/4:15,Modifiability,variab,variable,15,"Currently, the variable name headings are comma delimited and the values are tab delimited. It would be nice if this were consistent.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/4
https://github.com/su2code/SU2/issues/5:182,Availability,error,errors,182,"I saw in 8 places of the code that non-constant expression have been used which are illegal in standard C/C++.; Since by default the Gcc enables new extensions you can not see these errors but actually you don't need those extension and at this moment they weaken potability of your code. ; To see these errors you can add -pedantic-errors switch to gcc or compile it by Microsoft Visual Studio.; I list them in the following (version 2.0.8). I changed them to pointer and the code can be compiled in microsoft visual studio without any change.; 1- geometry_structure.cpp -> Line 11597 ->NewSort[nPoint]; 2- config_structure.cpp -> Line 1459 -> periods[N_MOTION_TYPES]; 3-solver_structure.cpp -> Line 1354 -> Solution[nVar]; 4- -> Line 1566 -> Solution[nVar]; 5-solver_direct_tne2.cpp -> Line 4469 -> FluxTensor[nVar][nDim]; 6-solver_direct_mean.cpp -> Line 4124~4132 -> FanFace_MassFlow_local[nMarker ...]; 7-solver_direct_mean.cpp -> Line 4146~4150 -> Exhaust_MassFlow_local[nMarker ...]; 8-numerics_direct_transition.cpp ->Line 152,153 -> Density_Grid_i[nDim],...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/5
https://github.com/su2code/SU2/issues/5:304,Availability,error,errors,304,"I saw in 8 places of the code that non-constant expression have been used which are illegal in standard C/C++.; Since by default the Gcc enables new extensions you can not see these errors but actually you don't need those extension and at this moment they weaken potability of your code. ; To see these errors you can add -pedantic-errors switch to gcc or compile it by Microsoft Visual Studio.; I list them in the following (version 2.0.8). I changed them to pointer and the code can be compiled in microsoft visual studio without any change.; 1- geometry_structure.cpp -> Line 11597 ->NewSort[nPoint]; 2- config_structure.cpp -> Line 1459 -> periods[N_MOTION_TYPES]; 3-solver_structure.cpp -> Line 1354 -> Solution[nVar]; 4- -> Line 1566 -> Solution[nVar]; 5-solver_direct_tne2.cpp -> Line 4469 -> FluxTensor[nVar][nDim]; 6-solver_direct_mean.cpp -> Line 4124~4132 -> FanFace_MassFlow_local[nMarker ...]; 7-solver_direct_mean.cpp -> Line 4146~4150 -> Exhaust_MassFlow_local[nMarker ...]; 8-numerics_direct_transition.cpp ->Line 152,153 -> Density_Grid_i[nDim],...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/5
https://github.com/su2code/SU2/issues/5:333,Availability,error,errors,333,"I saw in 8 places of the code that non-constant expression have been used which are illegal in standard C/C++.; Since by default the Gcc enables new extensions you can not see these errors but actually you don't need those extension and at this moment they weaken potability of your code. ; To see these errors you can add -pedantic-errors switch to gcc or compile it by Microsoft Visual Studio.; I list them in the following (version 2.0.8). I changed them to pointer and the code can be compiled in microsoft visual studio without any change.; 1- geometry_structure.cpp -> Line 11597 ->NewSort[nPoint]; 2- config_structure.cpp -> Line 1459 -> periods[N_MOTION_TYPES]; 3-solver_structure.cpp -> Line 1354 -> Solution[nVar]; 4- -> Line 1566 -> Solution[nVar]; 5-solver_direct_tne2.cpp -> Line 4469 -> FluxTensor[nVar][nDim]; 6-solver_direct_mean.cpp -> Line 4124~4132 -> FanFace_MassFlow_local[nMarker ...]; 7-solver_direct_mean.cpp -> Line 4146~4150 -> Exhaust_MassFlow_local[nMarker ...]; 8-numerics_direct_transition.cpp ->Line 152,153 -> Density_Grid_i[nDim],...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/5
https://github.com/su2code/SU2/issues/6:0,Testability,test,test,0,test issue,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/6
https://github.com/su2code/SU2/issues/12:23,Availability,error,error,23,"Right now, there is no error checking whatsoever for the solution restart file. You can give it a tecplot file (for instance) and it will read in without any warning. When we fix that, we should also be adding to the header file (this was run for X solver, etc.) to check that the variables mean the same thing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/12
https://github.com/su2code/SU2/issues/12:281,Modifiability,variab,variables,281,"Right now, there is no error checking whatsoever for the solution restart file. You can give it a tecplot file (for instance) and it will read in without any warning. When we fix that, we should also be adding to the header file (this was run for X solver, etc.) to check that the variables mean the same thing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/12
https://github.com/su2code/SU2/issues/13:185,Availability,error,error,185,"Right now if you include an EnumListOption with no values, for example, . % Type of mesh motion; % Type: EnumListOption Default: GridMovement_Map; GRID_MOVEMENT_KIND= ( ). SU2 gives an error of . Error inT okenizeString(): option GRID_MOVEMENT_KIND in configuration file with no value assigned. I think this is not good behavior. It means that you cannot easily switch from a config file that uses grid movement to one that does not, and it means your can't write a valid config file that has all of the config options in it.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/13
https://github.com/su2code/SU2/issues/13:196,Availability,Error,Error,196,"Right now if you include an EnumListOption with no values, for example, . % Type of mesh motion; % Type: EnumListOption Default: GridMovement_Map; GRID_MOVEMENT_KIND= ( ). SU2 gives an error of . Error inT okenizeString(): option GRID_MOVEMENT_KIND in configuration file with no value assigned. I think this is not good behavior. It means that you cannot easily switch from a config file that uses grid movement to one that does not, and it means your can't write a valid config file that has all of the config options in it.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/13
https://github.com/su2code/SU2/issues/13:252,Deployability,configurat,configuration,252,"Right now if you include an EnumListOption with no values, for example, . % Type of mesh motion; % Type: EnumListOption Default: GridMovement_Map; GRID_MOVEMENT_KIND= ( ). SU2 gives an error of . Error inT okenizeString(): option GRID_MOVEMENT_KIND in configuration file with no value assigned. I think this is not good behavior. It means that you cannot easily switch from a config file that uses grid movement to one that does not, and it means your can't write a valid config file that has all of the config options in it.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/13
https://github.com/su2code/SU2/issues/13:252,Modifiability,config,configuration,252,"Right now if you include an EnumListOption with no values, for example, . % Type of mesh motion; % Type: EnumListOption Default: GridMovement_Map; GRID_MOVEMENT_KIND= ( ). SU2 gives an error of . Error inT okenizeString(): option GRID_MOVEMENT_KIND in configuration file with no value assigned. I think this is not good behavior. It means that you cannot easily switch from a config file that uses grid movement to one that does not, and it means your can't write a valid config file that has all of the config options in it.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/13
https://github.com/su2code/SU2/issues/13:376,Modifiability,config,config,376,"Right now if you include an EnumListOption with no values, for example, . % Type of mesh motion; % Type: EnumListOption Default: GridMovement_Map; GRID_MOVEMENT_KIND= ( ). SU2 gives an error of . Error inT okenizeString(): option GRID_MOVEMENT_KIND in configuration file with no value assigned. I think this is not good behavior. It means that you cannot easily switch from a config file that uses grid movement to one that does not, and it means your can't write a valid config file that has all of the config options in it.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/13
https://github.com/su2code/SU2/issues/13:472,Modifiability,config,config,472,"Right now if you include an EnumListOption with no values, for example, . % Type of mesh motion; % Type: EnumListOption Default: GridMovement_Map; GRID_MOVEMENT_KIND= ( ). SU2 gives an error of . Error inT okenizeString(): option GRID_MOVEMENT_KIND in configuration file with no value assigned. I think this is not good behavior. It means that you cannot easily switch from a config file that uses grid movement to one that does not, and it means your can't write a valid config file that has all of the config options in it.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/13
https://github.com/su2code/SU2/issues/13:504,Modifiability,config,config,504,"Right now if you include an EnumListOption with no values, for example, . % Type of mesh motion; % Type: EnumListOption Default: GridMovement_Map; GRID_MOVEMENT_KIND= ( ). SU2 gives an error of . Error inT okenizeString(): option GRID_MOVEMENT_KIND in configuration file with no value assigned. I think this is not good behavior. It means that you cannot easily switch from a config file that uses grid movement to one that does not, and it means your can't write a valid config file that has all of the config options in it.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/13
https://github.com/su2code/SU2/issues/14:284,Availability,error,error,284,"The default values for the marker options do not parse. It would be nice to add a ""NONE"" flag that can be parsed as not having any of that boundary type. . in config:; % Dirichlet boundary marker(s); % Type: MarkerOption Default: Marker_Dirichlet; MARKER_DIRICHLET= Marker_Dirichlet. error is:; Error in CMarkerDirichletRef::SetValue(): incorrect number of MARKER_DIRICHLET_ELEC parameters in the configuration file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/14
https://github.com/su2code/SU2/issues/14:295,Availability,Error,Error,295,"The default values for the marker options do not parse. It would be nice to add a ""NONE"" flag that can be parsed as not having any of that boundary type. . in config:; % Dirichlet boundary marker(s); % Type: MarkerOption Default: Marker_Dirichlet; MARKER_DIRICHLET= Marker_Dirichlet. error is:; Error in CMarkerDirichletRef::SetValue(): incorrect number of MARKER_DIRICHLET_ELEC parameters in the configuration file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/14
https://github.com/su2code/SU2/issues/14:397,Deployability,configurat,configuration,397,"The default values for the marker options do not parse. It would be nice to add a ""NONE"" flag that can be parsed as not having any of that boundary type. . in config:; % Dirichlet boundary marker(s); % Type: MarkerOption Default: Marker_Dirichlet; MARKER_DIRICHLET= Marker_Dirichlet. error is:; Error in CMarkerDirichletRef::SetValue(): incorrect number of MARKER_DIRICHLET_ELEC parameters in the configuration file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/14
https://github.com/su2code/SU2/issues/14:159,Modifiability,config,config,159,"The default values for the marker options do not parse. It would be nice to add a ""NONE"" flag that can be parsed as not having any of that boundary type. . in config:; % Dirichlet boundary marker(s); % Type: MarkerOption Default: Marker_Dirichlet; MARKER_DIRICHLET= Marker_Dirichlet. error is:; Error in CMarkerDirichletRef::SetValue(): incorrect number of MARKER_DIRICHLET_ELEC parameters in the configuration file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/14
https://github.com/su2code/SU2/issues/14:397,Modifiability,config,configuration,397,"The default values for the marker options do not parse. It would be nice to add a ""NONE"" flag that can be parsed as not having any of that boundary type. . in config:; % Dirichlet boundary marker(s); % Type: MarkerOption Default: Marker_Dirichlet; MARKER_DIRICHLET= Marker_Dirichlet. error is:; Error in CMarkerDirichletRef::SetValue(): incorrect number of MARKER_DIRICHLET_ELEC parameters in the configuration file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/14
https://github.com/su2code/SU2/issues/15:14,Availability,error,error,14,Currently the error is:; COptionRef::SetValue(const vector<string>&): number of input values does not match size of option array.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/15
https://github.com/su2code/SU2/issues/17:106,Performance,load,load,106,"Right now, the solution file (where SU2 writes the solution upon a successful conclusion) and the restart load file (where SU2 loads the solution) are the same file. It would be nice to at least have the option to make these two different files. Take, for example, my case or Alejandro's case where we load from a converged solution to run our turbulence models. If I run for 100 iterations as a test, for example, my restart file (the SU2 solution file) is overwritten. So instead, I have to make a copy of the restart file, and upon completion rename the output solution file to something else, and rename my copied solution file (really the restart file) back to the SU2 solution file name.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/17
https://github.com/su2code/SU2/issues/17:127,Performance,load,loads,127,"Right now, the solution file (where SU2 writes the solution upon a successful conclusion) and the restart load file (where SU2 loads the solution) are the same file. It would be nice to at least have the option to make these two different files. Take, for example, my case or Alejandro's case where we load from a converged solution to run our turbulence models. If I run for 100 iterations as a test, for example, my restart file (the SU2 solution file) is overwritten. So instead, I have to make a copy of the restart file, and upon completion rename the output solution file to something else, and rename my copied solution file (really the restart file) back to the SU2 solution file name.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/17
https://github.com/su2code/SU2/issues/17:302,Performance,load,load,302,"Right now, the solution file (where SU2 writes the solution upon a successful conclusion) and the restart load file (where SU2 loads the solution) are the same file. It would be nice to at least have the option to make these two different files. Take, for example, my case or Alejandro's case where we load from a converged solution to run our turbulence models. If I run for 100 iterations as a test, for example, my restart file (the SU2 solution file) is overwritten. So instead, I have to make a copy of the restart file, and upon completion rename the output solution file to something else, and rename my copied solution file (really the restart file) back to the SU2 solution file name.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/17
https://github.com/su2code/SU2/issues/17:396,Testability,test,test,396,"Right now, the solution file (where SU2 writes the solution upon a successful conclusion) and the restart load file (where SU2 loads the solution) are the same file. It would be nice to at least have the option to make these two different files. Take, for example, my case or Alejandro's case where we load from a converged solution to run our turbulence models. If I run for 100 iterations as a test, for example, my restart file (the SU2 solution file) is overwritten. So instead, I have to make a copy of the restart file, and upon completion rename the output solution file to something else, and rename my copied solution file (really the restart file) back to the SU2 solution file name.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/17
https://github.com/su2code/SU2/issues/19:53,Availability,error,error,53,"When I try to build with Metis 5 I get the following error : ; ../src/geometry_structure.cpp:4994:101: error: cannot convert 'int_' to 'idx_t_ {aka long int_}' for argument '1' to 'int METIS_PartMeshNodal(idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, real_t_, idx_t_, idx_t_, idx_t_, idx_t*)'; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);. the other problem is that you are using metis static (libmetis.a ) instead of libmetis.so (shared). that' s a problem when you try to package SU^2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/19
https://github.com/su2code/SU2/issues/19:103,Availability,error,error,103,"When I try to build with Metis 5 I get the following error : ; ../src/geometry_structure.cpp:4994:101: error: cannot convert 'int_' to 'idx_t_ {aka long int_}' for argument '1' to 'int METIS_PartMeshNodal(idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, real_t_, idx_t_, idx_t_, idx_t_, idx_t*)'; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);. the other problem is that you are using metis static (libmetis.a ) instead of libmetis.so (shared). that' s a problem when you try to package SU^2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/19
https://github.com/su2code/SU2/issues/19:644,Deployability,patch,patch,644,"When I try to build with Metis 5 I get the following error : ; ../src/geometry_structure.cpp:4994:101: error: cannot convert 'int_' to 'idx_t_ {aka long int_}' for argument '1' to 'int METIS_PartMeshNodal(idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, real_t_, idx_t_, idx_t_, idx_t_, idx_t*)'; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);. the other problem is that you are using metis static (libmetis.a ) instead of libmetis.so (shared). that' s a problem when you try to package SU^2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/19
https://github.com/su2code/SU2/issues/19:683,Modifiability,config,configure,683,"When I try to build with Metis 5 I get the following error : ; ../src/geometry_structure.cpp:4994:101: error: cannot convert 'int_' to 'idx_t_ {aka long int_}' for argument '1' to 'int METIS_PartMeshNodal(idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, real_t_, idx_t_, idx_t_, idx_t_, idx_t*)'; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);. the other problem is that you are using metis static (libmetis.a ) instead of libmetis.so (shared). that' s a problem when you try to package SU^2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/19
https://github.com/su2code/SU2/issues/19:777,Modifiability,config,configure,777,"When I try to build with Metis 5 I get the following error : ; ../src/geometry_structure.cpp:4994:101: error: cannot convert 'int_' to 'idx_t_ {aka long int_}' for argument '1' to 'int METIS_PartMeshNodal(idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, real_t_, idx_t_, idx_t_, idx_t_, idx_t*)'; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);. the other problem is that you are using metis static (libmetis.a ) instead of libmetis.so (shared). that' s a problem when you try to package SU^2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/19
https://github.com/su2code/SU2/issues/19:802,Modifiability,config,configure,802,"When I try to build with Metis 5 I get the following error : ; ../src/geometry_structure.cpp:4994:101: error: cannot convert 'int_' to 'idx_t_ {aka long int_}' for argument '1' to 'int METIS_PartMeshNodal(idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, real_t_, idx_t_, idx_t_, idx_t_, idx_t*)'; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);. the other problem is that you are using metis static (libmetis.a ) instead of libmetis.so (shared). that' s a problem when you try to package SU^2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/19
https://github.com/su2code/SU2/issues/19:1451,Modifiability,config,configure,1451,"atic (libmetis.a ) instead of libmetis.so (shared). that' s a problem when you try to package SU^2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.so]), ; [with_Metis_lib=$withval], [with_Metis_lib=""no""]); AC_ARG_WITH(Metis-include,; AS_HELP_STRING([--with-Metis-include[=ARG]], [Metis include directory, ARG = path to metis.h]), ; @@ -121,7 +121,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/Common/src/geometry_structure.cpp; ====================================",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/19
https://github.com/su2code/SU2/issues/19:1548,Modifiability,config,configure,1548,"2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.so]), ; [with_Metis_lib=$withval], [with_Metis_lib=""no""]); AC_ARG_WITH(Metis-include,; AS_HELP_STRING([--with-Metis-include[=ARG]], [Metis include directory, ARG = path to metis.h]), ; @@ -121,7 +121,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/Common/src/geometry_structure.cpp; ===================================================================; --- SU2-2.0.8/Common/src/geometry_structure.cpp; +++ SU2-2.0.8/C",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/19
https://github.com/su2code/SU2/issues/19:1576,Modifiability,config,configure,1576,"ike Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.so]), ; [with_Metis_lib=$withval], [with_Metis_lib=""no""]); AC_ARG_WITH(Metis-include,; AS_HELP_STRING([--with-Metis-include[=ARG]], [Metis include directory, ARG = path to metis.h]), ; @@ -121,7 +121,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/Common/src/geometry_structure.cpp; ===================================================================; --- SU2-2.0.8/Common/src/geometry_structure.cpp; +++ SU2-2.0.8/Common/src/geometry_structure",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/19
https://github.com/su2code/SU2/pull/20:124,Deployability,update,update,124,This makes sure DV_KIND comes before DV_PARAM when a config file is output by the python scripts. The python dict passed to update doesn't guarantee order. This issue occured when DV_KIND and DV_PARAM were not previously defined in a config file passed to shape_optimization.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/20
https://github.com/su2code/SU2/pull/20:53,Modifiability,config,config,53,This makes sure DV_KIND comes before DV_PARAM when a config file is output by the python scripts. The python dict passed to update doesn't guarantee order. This issue occured when DV_KIND and DV_PARAM were not previously defined in a config file passed to shape_optimization.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/20
https://github.com/su2code/SU2/pull/20:234,Modifiability,config,config,234,This makes sure DV_KIND comes before DV_PARAM when a config file is output by the python scripts. The python dict passed to update doesn't guarantee order. This issue occured when DV_KIND and DV_PARAM were not previously defined in a config file passed to shape_optimization.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/20
https://github.com/su2code/SU2/pull/21:44,Availability,down,downloaded,44,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/21
https://github.com/su2code/SU2/pull/21:169,Availability,avail,available,169,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/21
https://github.com/su2code/SU2/pull/21:847,Availability,down,downloads,847,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/21
https://github.com/su2code/SU2/pull/21:692,Deployability,integrat,integration,692,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/21
https://github.com/su2code/SU2/pull/21:1080,Deployability,update,update,1080,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/21
https://github.com/su2code/SU2/pull/21:469,Integrability,depend,dependencies,469,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/21
https://github.com/su2code/SU2/pull/21:576,Integrability,depend,dependencies,576,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/21
https://github.com/su2code/SU2/pull/21:692,Integrability,integrat,integration,692,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/21
https://github.com/su2code/SU2/pull/21:725,Integrability,depend,dependencies,725,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/21
https://github.com/su2code/SU2/pull/21:1009,Modifiability,config,configure,1009,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/21
https://github.com/su2code/SU2/pull/21:1106,Modifiability,config,configure,1106,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/21
https://github.com/su2code/SU2/pull/21:568,Usability,simpl,simple,568,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/21
https://github.com/su2code/SU2/issues/22:214,Integrability,interface,interface,214,"Not sure if you are aware, but the C++ MPI bindings have been deprecated since MPI-2.2:. http://www.mpi-forum.org/docs/mpi-2.2/mpi22-report/node328.htm. As MPI-3 becomes more prevalent, using the deprecate C++ MPI interface is dangerous for portability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/22
https://github.com/su2code/SU2/issues/22:241,Modifiability,portab,portability,241,"Not sure if you are aware, but the C++ MPI bindings have been deprecated since MPI-2.2:. http://www.mpi-forum.org/docs/mpi-2.2/mpi22-report/node328.htm. As MPI-3 becomes more prevalent, using the deprecate C++ MPI interface is dangerous for portability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/22
https://github.com/su2code/SU2/issues/23:214,Availability,Error,Error,214,"Ubuntu 12.04.3; OpenMPI 1.4.3 (repo). OpenMPI runs well on my system with other applications, but fails 100% of the time with SU2 compiled for mpi. Specific example:. shape_optimization.py -f inv_ONERAM6.cfg -p 4. Error:. ------------------------- Solver Preprocessing --------------------------; Area projection in the z-plane = 0.758602.; Traceback (most recent call last):; File ""../SU2_PY/shape_optimization.py"", line 124, in <module>; main(); File ""../SU2_PY/shape_optimization.py"", line 69, in main; options.step ); File ""../SU2_PY/shape_optimization.py"", line 107, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 102, in scipy_slsqp; epsilon = 1.0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:2141,Availability,error,error,2141,"erodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f7495f2acb0]; [ system:14029] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f7495b91425]; [ system:14029] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f7495b94b8b]; [ system:14030] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f13a80aecb0]; [ system:14030] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f13a7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_term",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:4412,Availability,error,error,4412,7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f13a888569d]; [ system:14030] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f13a8883846]; [ system:14030] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f13a8883873]; [ system:14030] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f13a888396e]; [ system:14030] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14030] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14030] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14030] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14030] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f13a7d0076d]; [ system:14030] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14030] **\* End of error message ***; [ system:14031] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7fa4e9ecccb0]; [ system:14031] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7fa4e9b33425]; [ system:14031] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7fa4e9b36b8b]; [ system:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:140,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:5621,Availability,error,error,5621,33425]; [ system:14031] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7fa4e9b36b8b]; [ system:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f749670169d]; [ system:14029] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f74966ff846]; [ system:14029] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f74966ff873]; [ system:14029] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f74966ff96e]; [ system:14029] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14029] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14029] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14029] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14029] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f7495b7c76d]; [ system:14029] [12] /usr/local/bin/SU2_CFD() [0x459049]; ## [ system:14029] **\* End of error message **,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:6578,Availability,error,error,6578,:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f749670169d]; [ system:14029] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f74966ff846]; [ system:14029] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f74966ff873]; [ system:14029] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f74966ff96e]; [ system:14029] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14029] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14029] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14029] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14029] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f7495b7c76d]; [ system:14029] [12] /usr/local/bin/SU2_CFD() [0x459049]; ## [ system:14029] **\* End of error message ***; ## mpirun noticed that process rank 2 with PID 14030 on node system exited on signal 6 (Aborted).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:1828,Integrability,interface,interface,1828,"line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:1924,Integrability,interface,interface,1924,"ipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal cod",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:1983,Integrability,message,message,1983,"line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:4418,Integrability,message,message,4418,7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f13a888569d]; [ system:14030] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f13a8883846]; [ system:14030] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f13a8883873]; [ system:14030] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f13a888396e]; [ system:14030] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14030] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14030] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14030] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14030] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f13a7d0076d]; [ system:14030] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14030] **\* End of error message ***; [ system:14031] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7fa4e9ecccb0]; [ system:14031] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7fa4e9b33425]; [ system:14031] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7fa4e9b36b8b]; [ system:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:140,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:5627,Integrability,message,message,5627,33425]; [ system:14031] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7fa4e9b36b8b]; [ system:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f749670169d]; [ system:14029] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f74966ff846]; [ system:14029] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f74966ff873]; [ system:14029] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f74966ff96e]; [ system:14029] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14029] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14029] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14029] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14029] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f7495b7c76d]; [ system:14029] [12] /usr/local/bin/SU2_CFD() [0x459049]; ## [ system:14029] **\* End of error message **,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:6584,Integrability,message,message,6584,:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f749670169d]; [ system:14029] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f74966ff846]; [ system:14029] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f74966ff873]; [ system:14029] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f74966ff96e]; [ system:14029] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14029] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14029] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14029] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14029] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f7495b7c76d]; [ system:14029] [12] /usr/local/bin/SU2_CFD() [0x459049]; ## [ system:14029] **\* End of error message ***; ## mpirun noticed that process rank 2 with PID 14030 on node system exited on signal 6 (Aborted).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:1478,Modifiability,config,config,1478,"py"", line 69, in main; options.step ); File ""../SU2_PY/shape_optimization.py"", line 107, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 102, in scipy_slsqp; epsilon = 1.0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of '",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:1581,Modifiability,config,config,1581,"n; SU2.opt.SLSQP(project,x0,xb,its); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 102, in scipy_slsqp; epsilon = 1.0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:1698,Modifiability,config,config,1698,"0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:774,Performance,optimiz,optimize,774,"Ubuntu 12.04.3; OpenMPI 1.4.3 (repo). OpenMPI runs well on my system with other applications, but fails 100% of the time with SU2 compiled for mpi. Specific example:. shape_optimization.py -f inv_ONERAM6.cfg -p 4. Error:. ------------------------- Solver Preprocessing --------------------------; Area projection in the z-plane = 0.758602.; Traceback (most recent call last):; File ""../SU2_PY/shape_optimization.py"", line 124, in <module>; main(); File ""../SU2_PY/shape_optimization.py"", line 69, in main; options.step ); File ""../SU2_PY/shape_optimization.py"", line 107, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 102, in scipy_slsqp; epsilon = 1.0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:890,Performance,optimiz,optimize,890,"Ubuntu 12.04.3; OpenMPI 1.4.3 (repo). OpenMPI runs well on my system with other applications, but fails 100% of the time with SU2 compiled for mpi. Specific example:. shape_optimization.py -f inv_ONERAM6.cfg -p 4. Error:. ------------------------- Solver Preprocessing --------------------------; Area projection in the z-plane = 0.758602.; Traceback (most recent call last):; File ""../SU2_PY/shape_optimization.py"", line 124, in <module>; main(); File ""../SU2_PY/shape_optimization.py"", line 69, in main; options.step ); File ""../SU2_PY/shape_optimization.py"", line 107, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 102, in scipy_slsqp; epsilon = 1.0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:899,Performance,optimiz,optimize,899,"Ubuntu 12.04.3; OpenMPI 1.4.3 (repo). OpenMPI runs well on my system with other applications, but fails 100% of the time with SU2 compiled for mpi. Specific example:. shape_optimization.py -f inv_ONERAM6.cfg -p 4. Error:. ------------------------- Solver Preprocessing --------------------------; Area projection in the z-plane = 0.758602.; Traceback (most recent call last):; File ""../SU2_PY/shape_optimization.py"", line 124, in <module>; main(); File ""../SU2_PY/shape_optimization.py"", line 69, in main; options.step ); File ""../SU2_PY/shape_optimization.py"", line 107, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 102, in scipy_slsqp; epsilon = 1.0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:2618,Safety,Abort,Aborted,2618,"erodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f7495f2acb0]; [ system:14029] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f7495b91425]; [ system:14029] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f7495b94b8b]; [ system:14030] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f13a80aecb0]; [ system:14030] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f13a7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_term",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:2847,Safety,Abort,Aborted,2847,"erodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f7495f2acb0]; [ system:14029] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f7495b91425]; [ system:14029] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f7495b94b8b]; [ system:14030] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f13a80aecb0]; [ system:14030] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f13a7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_term",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:2919,Safety,Abort,Aborted,2919,"erodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f7495f2acb0]; [ system:14029] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f7495b91425]; [ system:14029] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f7495b94b8b]; [ system:14030] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f13a80aecb0]; [ system:14030] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f13a7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_term",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:3191,Safety,abort,abort,3191,"k, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f7495f2acb0]; [ system:14029] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f7495b91425]; [ system:14029] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f7495b94b8b]; [ system:14030] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f13a80aecb0]; [ system:14030] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f13a7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f13a888569d]; [ system:14030] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f13a8883846]; [ system:14030] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f13a8883873]; [ system:14030] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f13a888396e]; [ system:14030] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14030] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14030] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14030] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:3446,Safety,abort,abort,3446,"ate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f7495f2acb0]; [ system:14029] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f7495b91425]; [ system:14029] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f7495b94b8b]; [ system:14030] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f13a80aecb0]; [ system:14030] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f13a7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f13a888569d]; [ system:14030] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f13a8883846]; [ system:14030] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f13a8883873]; [ system:14030] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f13a888396e]; [ system:14030] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14030] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14030] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14030] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14030] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f13a7d0076d]; [ system:14030] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14030] **\* End of error message ***; [ system:14031] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:4655,Safety,abort,abort,4655, [ system:14030] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f13a8883873]; [ system:14030] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f13a888396e]; [ system:14030] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14030] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14030] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14030] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14030] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f13a7d0076d]; [ system:14030] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14030] **\* End of error message ***; [ system:14031] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7fa4e9ecccb0]; [ system:14031] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7fa4e9b33425]; [ system:14031] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7fa4e9b36b8b]; [ system:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.s,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/23:6685,Safety,Abort,Aborted,6685,:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f749670169d]; [ system:14029] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f74966ff846]; [ system:14029] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f74966ff873]; [ system:14029] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f74966ff96e]; [ system:14029] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14029] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14029] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14029] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14029] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f7495b7c76d]; [ system:14029] [12] /usr/local/bin/SU2_CFD() [0x459049]; ## [ system:14029] **\* End of error message ***; ## mpirun noticed that process rank 2 with PID 14030 on node system exited on signal 6 (Aborted).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/23
https://github.com/su2code/SU2/issues/25:71,Availability,down,download,71,"Dear,. I have recently installed SU2 v3.0 64bit (pre-compiled from SU2 download) on a Windows 7 x64 single_threded and installed python2.7.6 (winPython_amd64) also tried python3.3. I have installed SU2 as c:\SU2 (no spaces as in program files installation).; When I tried to run the test case of turb_RAE2822 at command prompt: . Code:; python ""c:\su2\shape_optimization.py"" -f turb_rae2822.cfg; Follwing error displayed:. Traceback (most recent call last):; File ""shape_optimization.py"", line 26, in <module>; import_su2; File ""_init_.py"", line 13, in <module>; if 'libedit' in readline._doc_. Type Error: argument of type 'nonetype' is not iterable. How can it be solved?; What is the appropriate version of python?; One more thing that I have found that SU2 is slower than Fluent, i tried naca0012 test case, how can it be sppedy?. ---. Best Regards; Ali",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/25
https://github.com/su2code/SU2/issues/25:405,Availability,error,error,405,"Dear,. I have recently installed SU2 v3.0 64bit (pre-compiled from SU2 download) on a Windows 7 x64 single_threded and installed python2.7.6 (winPython_amd64) also tried python3.3. I have installed SU2 as c:\SU2 (no spaces as in program files installation).; When I tried to run the test case of turb_RAE2822 at command prompt: . Code:; python ""c:\su2\shape_optimization.py"" -f turb_rae2822.cfg; Follwing error displayed:. Traceback (most recent call last):; File ""shape_optimization.py"", line 26, in <module>; import_su2; File ""_init_.py"", line 13, in <module>; if 'libedit' in readline._doc_. Type Error: argument of type 'nonetype' is not iterable. How can it be solved?; What is the appropriate version of python?; One more thing that I have found that SU2 is slower than Fluent, i tried naca0012 test case, how can it be sppedy?. ---. Best Regards; Ali",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/25
https://github.com/su2code/SU2/issues/25:600,Availability,Error,Error,600,"Dear,. I have recently installed SU2 v3.0 64bit (pre-compiled from SU2 download) on a Windows 7 x64 single_threded and installed python2.7.6 (winPython_amd64) also tried python3.3. I have installed SU2 as c:\SU2 (no spaces as in program files installation).; When I tried to run the test case of turb_RAE2822 at command prompt: . Code:; python ""c:\su2\shape_optimization.py"" -f turb_rae2822.cfg; Follwing error displayed:. Traceback (most recent call last):; File ""shape_optimization.py"", line 26, in <module>; import_su2; File ""_init_.py"", line 13, in <module>; if 'libedit' in readline._doc_. Type Error: argument of type 'nonetype' is not iterable. How can it be solved?; What is the appropriate version of python?; One more thing that I have found that SU2 is slower than Fluent, i tried naca0012 test case, how can it be sppedy?. ---. Best Regards; Ali",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/25
https://github.com/su2code/SU2/issues/25:23,Deployability,install,installed,23,"Dear,. I have recently installed SU2 v3.0 64bit (pre-compiled from SU2 download) on a Windows 7 x64 single_threded and installed python2.7.6 (winPython_amd64) also tried python3.3. I have installed SU2 as c:\SU2 (no spaces as in program files installation).; When I tried to run the test case of turb_RAE2822 at command prompt: . Code:; python ""c:\su2\shape_optimization.py"" -f turb_rae2822.cfg; Follwing error displayed:. Traceback (most recent call last):; File ""shape_optimization.py"", line 26, in <module>; import_su2; File ""_init_.py"", line 13, in <module>; if 'libedit' in readline._doc_. Type Error: argument of type 'nonetype' is not iterable. How can it be solved?; What is the appropriate version of python?; One more thing that I have found that SU2 is slower than Fluent, i tried naca0012 test case, how can it be sppedy?. ---. Best Regards; Ali",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/25
https://github.com/su2code/SU2/issues/25:119,Deployability,install,installed,119,"Dear,. I have recently installed SU2 v3.0 64bit (pre-compiled from SU2 download) on a Windows 7 x64 single_threded and installed python2.7.6 (winPython_amd64) also tried python3.3. I have installed SU2 as c:\SU2 (no spaces as in program files installation).; When I tried to run the test case of turb_RAE2822 at command prompt: . Code:; python ""c:\su2\shape_optimization.py"" -f turb_rae2822.cfg; Follwing error displayed:. Traceback (most recent call last):; File ""shape_optimization.py"", line 26, in <module>; import_su2; File ""_init_.py"", line 13, in <module>; if 'libedit' in readline._doc_. Type Error: argument of type 'nonetype' is not iterable. How can it be solved?; What is the appropriate version of python?; One more thing that I have found that SU2 is slower than Fluent, i tried naca0012 test case, how can it be sppedy?. ---. Best Regards; Ali",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/25
https://github.com/su2code/SU2/issues/25:188,Deployability,install,installed,188,"Dear,. I have recently installed SU2 v3.0 64bit (pre-compiled from SU2 download) on a Windows 7 x64 single_threded and installed python2.7.6 (winPython_amd64) also tried python3.3. I have installed SU2 as c:\SU2 (no spaces as in program files installation).; When I tried to run the test case of turb_RAE2822 at command prompt: . Code:; python ""c:\su2\shape_optimization.py"" -f turb_rae2822.cfg; Follwing error displayed:. Traceback (most recent call last):; File ""shape_optimization.py"", line 26, in <module>; import_su2; File ""_init_.py"", line 13, in <module>; if 'libedit' in readline._doc_. Type Error: argument of type 'nonetype' is not iterable. How can it be solved?; What is the appropriate version of python?; One more thing that I have found that SU2 is slower than Fluent, i tried naca0012 test case, how can it be sppedy?. ---. Best Regards; Ali",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/25
https://github.com/su2code/SU2/issues/25:243,Deployability,install,installation,243,"Dear,. I have recently installed SU2 v3.0 64bit (pre-compiled from SU2 download) on a Windows 7 x64 single_threded and installed python2.7.6 (winPython_amd64) also tried python3.3. I have installed SU2 as c:\SU2 (no spaces as in program files installation).; When I tried to run the test case of turb_RAE2822 at command prompt: . Code:; python ""c:\su2\shape_optimization.py"" -f turb_rae2822.cfg; Follwing error displayed:. Traceback (most recent call last):; File ""shape_optimization.py"", line 26, in <module>; import_su2; File ""_init_.py"", line 13, in <module>; if 'libedit' in readline._doc_. Type Error: argument of type 'nonetype' is not iterable. How can it be solved?; What is the appropriate version of python?; One more thing that I have found that SU2 is slower than Fluent, i tried naca0012 test case, how can it be sppedy?. ---. Best Regards; Ali",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/25
https://github.com/su2code/SU2/issues/25:283,Testability,test,test,283,"Dear,. I have recently installed SU2 v3.0 64bit (pre-compiled from SU2 download) on a Windows 7 x64 single_threded and installed python2.7.6 (winPython_amd64) also tried python3.3. I have installed SU2 as c:\SU2 (no spaces as in program files installation).; When I tried to run the test case of turb_RAE2822 at command prompt: . Code:; python ""c:\su2\shape_optimization.py"" -f turb_rae2822.cfg; Follwing error displayed:. Traceback (most recent call last):; File ""shape_optimization.py"", line 26, in <module>; import_su2; File ""_init_.py"", line 13, in <module>; if 'libedit' in readline._doc_. Type Error: argument of type 'nonetype' is not iterable. How can it be solved?; What is the appropriate version of python?; One more thing that I have found that SU2 is slower than Fluent, i tried naca0012 test case, how can it be sppedy?. ---. Best Regards; Ali",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/25
https://github.com/su2code/SU2/issues/25:801,Testability,test,test,801,"Dear,. I have recently installed SU2 v3.0 64bit (pre-compiled from SU2 download) on a Windows 7 x64 single_threded and installed python2.7.6 (winPython_amd64) also tried python3.3. I have installed SU2 as c:\SU2 (no spaces as in program files installation).; When I tried to run the test case of turb_RAE2822 at command prompt: . Code:; python ""c:\su2\shape_optimization.py"" -f turb_rae2822.cfg; Follwing error displayed:. Traceback (most recent call last):; File ""shape_optimization.py"", line 26, in <module>; import_su2; File ""_init_.py"", line 13, in <module>; if 'libedit' in readline._doc_. Type Error: argument of type 'nonetype' is not iterable. How can it be solved?; What is the appropriate version of python?; One more thing that I have found that SU2 is slower than Fluent, i tried naca0012 test case, how can it be sppedy?. ---. Best Regards; Ali",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/25
https://github.com/su2code/SU2/issues/27:272,Deployability,install,installed,272,"I tried to compile SU2 with:. ```; git clone https://github.com/su2code/SU2; cd SU2; ./configure; make -j$(nproc); ```. `Configure` ran without any issues, but `make` failed because it was looking for `automake-1.14` and `aclocal-1.14`. On my system I have version `1.11` installed. So I created two symlinks:. ```; sudo ln -s /usr/bin/automake /usr/local/bin/automake-1.14; sudo ln -s /usr/bin/aclocal /usr/local/bin/aclocal-1.14; ```. Ran make again, et voila, everything worked out fine. No issues. I would like to suggest to change the source of SU2 to **not** specifically require version 1.14 of `automake` and `aclocal`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/27
https://github.com/su2code/SU2/issues/27:87,Modifiability,config,configure,87,"I tried to compile SU2 with:. ```; git clone https://github.com/su2code/SU2; cd SU2; ./configure; make -j$(nproc); ```. `Configure` ran without any issues, but `make` failed because it was looking for `automake-1.14` and `aclocal-1.14`. On my system I have version `1.11` installed. So I created two symlinks:. ```; sudo ln -s /usr/bin/automake /usr/local/bin/automake-1.14; sudo ln -s /usr/bin/aclocal /usr/local/bin/aclocal-1.14; ```. Ran make again, et voila, everything worked out fine. No issues. I would like to suggest to change the source of SU2 to **not** specifically require version 1.14 of `automake` and `aclocal`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/27
https://github.com/su2code/SU2/issues/27:121,Modifiability,Config,Configure,121,"I tried to compile SU2 with:. ```; git clone https://github.com/su2code/SU2; cd SU2; ./configure; make -j$(nproc); ```. `Configure` ran without any issues, but `make` failed because it was looking for `automake-1.14` and `aclocal-1.14`. On my system I have version `1.11` installed. So I created two symlinks:. ```; sudo ln -s /usr/bin/automake /usr/local/bin/automake-1.14; sudo ln -s /usr/bin/aclocal /usr/local/bin/aclocal-1.14; ```. Ran make again, et voila, everything worked out fine. No issues. I would like to suggest to change the source of SU2 to **not** specifically require version 1.14 of `automake` and `aclocal`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/27
https://github.com/su2code/SU2/pull/30:21,Deployability,configurat,configuration,21,I have created CMake configuration files to build and install SU2.; I have tested the build and installation process on both the Linux and OS X platform.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/30
https://github.com/su2code/SU2/pull/30:54,Deployability,install,install,54,I have created CMake configuration files to build and install SU2.; I have tested the build and installation process on both the Linux and OS X platform.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/30
https://github.com/su2code/SU2/pull/30:96,Deployability,install,installation,96,I have created CMake configuration files to build and install SU2.; I have tested the build and installation process on both the Linux and OS X platform.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/30
https://github.com/su2code/SU2/pull/30:21,Modifiability,config,configuration,21,I have created CMake configuration files to build and install SU2.; I have tested the build and installation process on both the Linux and OS X platform.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/30
https://github.com/su2code/SU2/pull/30:75,Testability,test,tested,75,I have created CMake configuration files to build and install SU2.; I have tested the build and installation process on both the Linux and OS X platform.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/30
https://github.com/su2code/SU2/issues/31:134,Availability,error,errors,134,"I used SU2-3.0.0 'eagle' ; My metis version is 5.1.0. But when I compile Metis 64bit (set IDXTYPEWIDTH to 64) .There are some compile errors occured below:. ......; ......; ../src/geometry_structure.cpp(5371): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_SetDefaultOptions(options);; ^; ../src/geometry_structure.cpp(5373): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);; ......; ...... Same to metis, when I compile cgns with hdf5. There are also some errors. The library link may be had some mistake. But the most important error is that -- when I change --with-mpi=mpicxx to --with-mpi=mpiicpc . Build Configuration Summary:. ```; Source code location: /parastor/users/isc01/zy/temp/SU2-master-back; Install location: ; Version: 3.0.0 ""eagle""; Compiler: mpiicpc; Preprocessor flags: -O3; Compiler flags: -O3; Linker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/lib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:210,Availability,error,error,210,"I used SU2-3.0.0 'eagle' ; My metis version is 5.1.0. But when I compile Metis 64bit (set IDXTYPEWIDTH to 64) .There are some compile errors occured below:. ......; ......; ../src/geometry_structure.cpp(5371): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_SetDefaultOptions(options);; ^; ../src/geometry_structure.cpp(5373): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);; ......; ...... Same to metis, when I compile cgns with hdf5. There are also some errors. The library link may be had some mistake. But the most important error is that -- when I change --with-mpi=mpicxx to --with-mpi=mpiicpc . Build Configuration Summary:. ```; Source code location: /parastor/users/isc01/zy/temp/SU2-master-back; Install location: ; Version: 3.0.0 ""eagle""; Compiler: mpiicpc; Preprocessor flags: -O3; Compiler flags: -O3; Linker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/lib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:385,Availability,error,error,385,"I used SU2-3.0.0 'eagle' ; My metis version is 5.1.0. But when I compile Metis 64bit (set IDXTYPEWIDTH to 64) .There are some compile errors occured below:. ......; ......; ../src/geometry_structure.cpp(5371): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_SetDefaultOptions(options);; ^; ../src/geometry_structure.cpp(5373): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);; ......; ...... Same to metis, when I compile cgns with hdf5. There are also some errors. The library link may be had some mistake. But the most important error is that -- when I change --with-mpi=mpicxx to --with-mpi=mpiicpc . Build Configuration Summary:. ```; Source code location: /parastor/users/isc01/zy/temp/SU2-master-back; Install location: ; Version: 3.0.0 ""eagle""; Compiler: mpiicpc; Preprocessor flags: -O3; Compiler flags: -O3; Linker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/lib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:669,Availability,error,errors,669,"I used SU2-3.0.0 'eagle' ; My metis version is 5.1.0. But when I compile Metis 64bit (set IDXTYPEWIDTH to 64) .There are some compile errors occured below:. ......; ......; ../src/geometry_structure.cpp(5371): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_SetDefaultOptions(options);; ^; ../src/geometry_structure.cpp(5373): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);; ......; ...... Same to metis, when I compile cgns with hdf5. There are also some errors. The library link may be had some mistake. But the most important error is that -- when I change --with-mpi=mpicxx to --with-mpi=mpiicpc . Build Configuration Summary:. ```; Source code location: /parastor/users/isc01/zy/temp/SU2-master-back; Install location: ; Version: 3.0.0 ""eagle""; Compiler: mpiicpc; Preprocessor flags: -O3; Compiler flags: -O3; Linker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/lib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:742,Availability,error,error,742,"I used SU2-3.0.0 'eagle' ; My metis version is 5.1.0. But when I compile Metis 64bit (set IDXTYPEWIDTH to 64) .There are some compile errors occured below:. ......; ......; ../src/geometry_structure.cpp(5371): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_SetDefaultOptions(options);; ^; ../src/geometry_structure.cpp(5373): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);; ......; ...... Same to metis, when I compile cgns with hdf5. There are also some errors. The library link may be had some mistake. But the most important error is that -- when I change --with-mpi=mpicxx to --with-mpi=mpiicpc . Build Configuration Summary:. ```; Source code location: /parastor/users/isc01/zy/temp/SU2-master-back; Install location: ; Version: 3.0.0 ""eagle""; Compiler: mpiicpc; Preprocessor flags: -O3; Compiler flags: -O3; Linker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/lib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:1364,Availability,error,errors,1364,"_structure.cpp(5373): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);; ......; ...... Same to metis, when I compile cgns with hdf5. There are also some errors. The library link may be had some mistake. But the most important error is that -- when I change --with-mpi=mpicxx to --with-mpi=mpiicpc . Build Configuration Summary:. ```; Source code location: /parastor/users/isc01/zy/temp/SU2-master-back; Install location: ; Version: 3.0.0 ""eagle""; Compiler: mpiicpc; Preprocessor flags: -O3; Compiler flags: -O3; Linker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:2067,Availability,echo,echo,2067,"support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""SEEK_SET is #defined but must not be f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:2784,Availability,echo,echo,2784,"Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""**; ^. compilation aborted for ../src/dual_grid_structure.cpp (code 4); make[1]: **\* [../src/libSU2_a-dual_grid_structure.o] Error 4; make[1]: Leaving directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; make: **\* [all-recursive] Error 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:2897,Availability,error,error,2897,"Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""**; ^. compilation aborted for ../src/dual_grid_structure.cpp (code 4); make[1]: **\* [../src/libSU2_a-dual_grid_structure.o] Error 4; make[1]: Leaving directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; make: **\* [all-recursive] Error 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:2905,Availability,error,error,2905,"Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""**; ^. compilation aborted for ../src/dual_grid_structure.cpp (code 4); make[1]: **\* [../src/libSU2_a-dual_grid_structure.o] Error 4; make[1]: Leaving directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; make: **\* [all-recursive] Error 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:3022,Availability,error,error,3022,"Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""**; ^. compilation aborted for ../src/dual_grid_structure.cpp (code 4); make[1]: **\* [../src/libSU2_a-dual_grid_structure.o] Error 4; make[1]: Leaving directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; make: **\* [all-recursive] Error 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:3249,Availability,Error,Error,3249,"Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""**; ^. compilation aborted for ../src/dual_grid_structure.cpp (code 4); make[1]: **\* [../src/libSU2_a-dual_grid_structure.o] Error 4; make[1]: Leaving directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; make: **\* [all-recursive] Error 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:3372,Availability,Error,Error,3372,"Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""**; ^. compilation aborted for ../src/dual_grid_structure.cpp (code 4); make[1]: **\* [../src/libSU2_a-dual_grid_structure.o] Error 4; make[1]: Leaving directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; make: **\* [all-recursive] Error 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:821,Deployability,Configurat,Configuration,821,"I used SU2-3.0.0 'eagle' ; My metis version is 5.1.0. But when I compile Metis 64bit (set IDXTYPEWIDTH to 64) .There are some compile errors occured below:. ......; ......; ../src/geometry_structure.cpp(5371): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_SetDefaultOptions(options);; ^; ../src/geometry_structure.cpp(5373): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);; ......; ...... Same to metis, when I compile cgns with hdf5. There are also some errors. The library link may be had some mistake. But the most important error is that -- when I change --with-mpi=mpicxx to --with-mpi=mpiicpc . Build Configuration Summary:. ```; Source code location: /parastor/users/isc01/zy/temp/SU2-master-back; Install location: ; Version: 3.0.0 ""eagle""; Compiler: mpiicpc; Preprocessor flags: -O3; Compiler flags: -O3; Linker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/lib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:919,Deployability,Install,Install,919,"I used SU2-3.0.0 'eagle' ; My metis version is 5.1.0. But when I compile Metis 64bit (set IDXTYPEWIDTH to 64) .There are some compile errors occured below:. ......; ......; ../src/geometry_structure.cpp(5371): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_SetDefaultOptions(options);; ^; ../src/geometry_structure.cpp(5373): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);; ......; ...... Same to metis, when I compile cgns with hdf5. There are also some errors. The library link may be had some mistake. But the most important error is that -- when I change --with-mpi=mpicxx to --with-mpi=mpiicpc . Build Configuration Summary:. ```; Source code location: /parastor/users/isc01/zy/temp/SU2-master-back; Install location: ; Version: 3.0.0 ""eagle""; Compiler: mpiicpc; Preprocessor flags: -O3; Compiler flags: -O3; Linker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/lib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:821,Modifiability,Config,Configuration,821,"I used SU2-3.0.0 'eagle' ; My metis version is 5.1.0. But when I compile Metis 64bit (set IDXTYPEWIDTH to 64) .There are some compile errors occured below:. ......; ......; ../src/geometry_structure.cpp(5371): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_SetDefaultOptions(options);; ^; ../src/geometry_structure.cpp(5373): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);; ......; ...... Same to metis, when I compile cgns with hdf5. There are also some errors. The library link may be had some mistake. But the most important error is that -- when I change --with-mpi=mpicxx to --with-mpi=mpiicpc . Build Configuration Summary:. ```; Source code location: /parastor/users/isc01/zy/temp/SU2-master-back; Install location: ; Version: 3.0.0 ""eagle""; Compiler: mpiicpc; Preprocessor flags: -O3; Compiler flags: -O3; Linker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/lib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:3142,Safety,abort,aborted,3142,"Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""**; ^. compilation aborted for ../src/dual_grid_structure.cpp (code 4); make[1]: **\* [../src/libSU2_a-dual_grid_structure.o] Error 4; make[1]: Leaving directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; make: **\* [all-recursive] Error 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:2026,Testability,test,test,2026,"nker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""S",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/issues/31:2740,Testability,test,test,2740,"Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""**; ^. compilation aborted for ../src/dual_grid_structure.cpp (code 4); make[1]: **\* [../src/libSU2_a-dual_grid_structure.o] Error 4; make[1]: Leaving directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; make: **\* [all-recursive] Error 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/31
https://github.com/su2code/SU2/pull/32:45,Modifiability,config,configure,45,"This pull request implements . ``` bash; $ ./configure --with-metis-cppflags=""...""; ```. if needed, but sets the METIS C preprocessor flags to sane values by default in m4/metis.m4. Thomas, this relies on the system default **linux** rather than -DLINUX.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/32
https://github.com/su2code/SU2/pull/33:35,Testability,log,logic,35,This adds the 'increment-progress' logic to the vertex export process. The sub-progress bar now shows the progress of the vertex export for a more accurate experience.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/33
https://github.com/su2code/SU2/pull/33:79,Usability,progress bar,progress bar,79,This adds the 'increment-progress' logic to the vertex export process. The sub-progress bar now shows the progress of the vertex export for a more accurate experience.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/33
https://github.com/su2code/SU2/issues/34:37,Modifiability,config,config,37,"The enum options (for example in the config file) should be of their type, not just as unsigned short.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/34
https://github.com/su2code/SU2/issues/35:21,Availability,down,download,21,"Hi,; I have tried to download the .su2 files for the tutorials from. http://su2.stanford.edu/download/v3.1.0/TestCases_3.1.0.tar.gz. but I found that the file seems unexistent .",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/35
https://github.com/su2code/SU2/issues/35:93,Availability,down,download,93,"Hi,; I have tried to download the .su2 files for the tutorials from. http://su2.stanford.edu/download/v3.1.0/TestCases_3.1.0.tar.gz. but I found that the file seems unexistent .",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/35
https://github.com/su2code/SU2/issues/37:194,Deployability,update,updated,194,"The NACA 0012 test case (TestCases/rans/naca0012) does not converge with the provided config file if RESTART_SOL=NO, and the number of iterations is increased beyond 25. The test case should be updated to have a config file which converges ""out of the box""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/37
https://github.com/su2code/SU2/issues/37:86,Modifiability,config,config,86,"The NACA 0012 test case (TestCases/rans/naca0012) does not converge with the provided config file if RESTART_SOL=NO, and the number of iterations is increased beyond 25. The test case should be updated to have a config file which converges ""out of the box""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/37
https://github.com/su2code/SU2/issues/37:212,Modifiability,config,config,212,"The NACA 0012 test case (TestCases/rans/naca0012) does not converge with the provided config file if RESTART_SOL=NO, and the number of iterations is increased beyond 25. The test case should be updated to have a config file which converges ""out of the box""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/37
https://github.com/su2code/SU2/issues/37:14,Testability,test,test,14,"The NACA 0012 test case (TestCases/rans/naca0012) does not converge with the provided config file if RESTART_SOL=NO, and the number of iterations is increased beyond 25. The test case should be updated to have a config file which converges ""out of the box""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/37
https://github.com/su2code/SU2/issues/37:25,Testability,Test,TestCases,25,"The NACA 0012 test case (TestCases/rans/naca0012) does not converge with the provided config file if RESTART_SOL=NO, and the number of iterations is increased beyond 25. The test case should be updated to have a config file which converges ""out of the box""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/37
https://github.com/su2code/SU2/issues/37:174,Testability,test,test,174,"The NACA 0012 test case (TestCases/rans/naca0012) does not converge with the provided config file if RESTART_SOL=NO, and the number of iterations is increased beyond 25. The test case should be updated to have a config file which converges ""out of the box""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/37
https://github.com/su2code/SU2/issues/40:407,Availability,error,error,407,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:1707,Availability,error,error,1707,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:1749,Availability,error,error,1749,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:1175,Deployability,release,release,1175,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:1274,Deployability,release,release,1274,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:1376,Deployability,release,release,1376,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:1482,Deployability,release,release,1482,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:1607,Deployability,release,release,1607,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:789,Integrability,MESSAGE,MESSAGES,789,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:1399,Integrability,interface,interface,1399,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:1505,Integrability,interface,interface,1505,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:1564,Integrability,message,message,1564,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:1772,Integrability,interface,interface,1772,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:1144,Modifiability,config,config,1144,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:1345,Modifiability,config,config,1345,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:79,Testability,test,test,79,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/40:131,Testability,test,test,131,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/40
https://github.com/su2code/SU2/issues/41:65,Modifiability,config,config,65,"SU2 right now is inconsistent with how it does file names in the config file. For example, the restart file needs to be specified with a "".dat"" suffix, but in the case of the surface files, the "".csv"" is added automatically. SU2 should be consistent across all filenames. Preferably, this will be fixed by having the user specify all suffixes. This is a tiny amount of additional work for the user, but it makes writing scripts that use the config file much easier. When the suffix is in the config file, it's easy to have python say ""open this file"". If the config file just has the base name of the file (no extension) then the knowledge of what suffix SU2 uses must be hard-coded into the follow-on script (which can then break later if SU2 changes).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/41
https://github.com/su2code/SU2/issues/41:441,Modifiability,config,config,441,"SU2 right now is inconsistent with how it does file names in the config file. For example, the restart file needs to be specified with a "".dat"" suffix, but in the case of the surface files, the "".csv"" is added automatically. SU2 should be consistent across all filenames. Preferably, this will be fixed by having the user specify all suffixes. This is a tiny amount of additional work for the user, but it makes writing scripts that use the config file much easier. When the suffix is in the config file, it's easy to have python say ""open this file"". If the config file just has the base name of the file (no extension) then the knowledge of what suffix SU2 uses must be hard-coded into the follow-on script (which can then break later if SU2 changes).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/41
https://github.com/su2code/SU2/issues/41:492,Modifiability,config,config,492,"SU2 right now is inconsistent with how it does file names in the config file. For example, the restart file needs to be specified with a "".dat"" suffix, but in the case of the surface files, the "".csv"" is added automatically. SU2 should be consistent across all filenames. Preferably, this will be fixed by having the user specify all suffixes. This is a tiny amount of additional work for the user, but it makes writing scripts that use the config file much easier. When the suffix is in the config file, it's easy to have python say ""open this file"". If the config file just has the base name of the file (no extension) then the knowledge of what suffix SU2 uses must be hard-coded into the follow-on script (which can then break later if SU2 changes).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/41
https://github.com/su2code/SU2/issues/41:559,Modifiability,config,config,559,"SU2 right now is inconsistent with how it does file names in the config file. For example, the restart file needs to be specified with a "".dat"" suffix, but in the case of the surface files, the "".csv"" is added automatically. SU2 should be consistent across all filenames. Preferably, this will be fixed by having the user specify all suffixes. This is a tiny amount of additional work for the user, but it makes writing scripts that use the config file much easier. When the suffix is in the config file, it's easy to have python say ""open this file"". If the config file just has the base name of the file (no extension) then the knowledge of what suffix SU2 uses must be hard-coded into the follow-on script (which can then break later if SU2 changes).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/41
https://github.com/su2code/SU2/pull/43:203,Deployability,release,releases,203,"This version works with 2D and 3D elements (TRIANGLE, RECTANGLE, TETRAHEDRON, PYRAMID, WEDGE, HEXAHEDRON). Steady is working, the unsteady capability is implemented but not working (it works in previous releases).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/43
https://github.com/su2code/SU2/issues/46:380,Usability,clear,clearly,380,"The NACA 0012 Mesh (mesh_NACA0012_turb_897x257.su2) has 3 floating point numbers and then one integer number, but is listed as a 2-dimensional mesh. CPhysicalGeometry::Read_SU2_Format is fine with the mesh file. Worse, it seems to use the z coordinate as the local index under certain conditions (see line 3430). In serial, the node number is ignored, so we are okay, but this is clearly undesirable behavior.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/46
https://github.com/su2code/SU2/issues/48:196,Modifiability,config,config,196,"Currently, the source term assumes that the axisymmetric behavior is about the x-axis in a 2D problem (uses the y-coordinate in the implementation). For clarity, we should add a disclaimer in the config file description/comment or print this information during preprocessing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/48
https://github.com/su2code/SU2/issues/49:97,Performance,optimiz,optimize,97,Check shape_optimization.py and http://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.optimize.fmin_slsqp.html,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/49
https://github.com/su2code/SU2/issues/63:50,Deployability,update,updated,50,Try to minimize the size of the folder and add an updated logo.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/63
https://github.com/su2code/SU2/issues/63:58,Testability,log,logo,58,Try to minimize the size of the folder and add an updated logo.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/63
https://github.com/su2code/SU2/issues/64:18,Performance,optimiz,optimization,18,Repeat the LM1021 optimization. Focus on the constraints and using a larger FFD box.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/64
https://github.com/su2code/SU2/pull/65:4,Testability,test,test,4,The test cases are going to fail because the change in the Jacobians,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/65
https://github.com/su2code/SU2/issues/66:5,Energy Efficiency,monitor,monitoring,5,"When monitoring the forces on a large number of markers, the output won’t fit in the buffer(s), and this causes memory issues: the code either hangs, has a buffer overflow, or segfaults depending on the compiler, etc. As a temporary fix, the monitoring_coeff[] buffer has been increased, but this should be remedied asap.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/66
https://github.com/su2code/SU2/issues/66:186,Integrability,depend,depending,186,"When monitoring the forces on a large number of markers, the output won’t fit in the buffer(s), and this causes memory issues: the code either hangs, has a buffer overflow, or segfaults depending on the compiler, etc. As a temporary fix, the monitoring_coeff[] buffer has been increased, but this should be remedied asap.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/66
https://github.com/su2code/SU2/pull/69:213,Deployability,configurat,configuration,213,"The Near-Field BC (useful for Equivalent Area based optimizations) was using the old MPI with buffering, and conservative variables instead of primitive variables. The new version has been tested using the LM1021 configuration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/69
https://github.com/su2code/SU2/pull/69:122,Modifiability,variab,variables,122,"The Near-Field BC (useful for Equivalent Area based optimizations) was using the old MPI with buffering, and conservative variables instead of primitive variables. The new version has been tested using the LM1021 configuration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/69
https://github.com/su2code/SU2/pull/69:153,Modifiability,variab,variables,153,"The Near-Field BC (useful for Equivalent Area based optimizations) was using the old MPI with buffering, and conservative variables instead of primitive variables. The new version has been tested using the LM1021 configuration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/69
https://github.com/su2code/SU2/pull/69:213,Modifiability,config,configuration,213,"The Near-Field BC (useful for Equivalent Area based optimizations) was using the old MPI with buffering, and conservative variables instead of primitive variables. The new version has been tested using the LM1021 configuration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/69
https://github.com/su2code/SU2/pull/69:52,Performance,optimiz,optimizations,52,"The Near-Field BC (useful for Equivalent Area based optimizations) was using the old MPI with buffering, and conservative variables instead of primitive variables. The new version has been tested using the LM1021 configuration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/69
https://github.com/su2code/SU2/pull/69:189,Testability,test,tested,189,"The Near-Field BC (useful for Equivalent Area based optimizations) was using the old MPI with buffering, and conservative variables instead of primitive variables. The new version has been tested using the LM1021 configuration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/69
https://github.com/su2code/SU2/issues/70:48,Integrability,rout,routine,48,"In solver_direct_mean.cpp at the Viscous_Forces routine the heat flux is computed incorrectly. The variable GradTemperature should be multiplied by the UnitNormal variable, rather than the Normal variable. If not, it will result in incorrect heat fluxes at the wall.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/70
https://github.com/su2code/SU2/issues/70:99,Modifiability,variab,variable,99,"In solver_direct_mean.cpp at the Viscous_Forces routine the heat flux is computed incorrectly. The variable GradTemperature should be multiplied by the UnitNormal variable, rather than the Normal variable. If not, it will result in incorrect heat fluxes at the wall.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/70
https://github.com/su2code/SU2/issues/70:163,Modifiability,variab,variable,163,"In solver_direct_mean.cpp at the Viscous_Forces routine the heat flux is computed incorrectly. The variable GradTemperature should be multiplied by the UnitNormal variable, rather than the Normal variable. If not, it will result in incorrect heat fluxes at the wall.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/70
https://github.com/su2code/SU2/issues/70:196,Modifiability,variab,variable,196,"In solver_direct_mean.cpp at the Viscous_Forces routine the heat flux is computed incorrectly. The variable GradTemperature should be multiplied by the UnitNormal variable, rather than the Normal variable. If not, it will result in incorrect heat fluxes at the wall.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/70
https://github.com/su2code/SU2/pull/72:120,Modifiability,plugin,plugin,120,This commit adds the appropriate code to more accurately report the; progress of the vertex export in the SU2 Pointwise plugin.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/72
https://github.com/su2code/SU2/pull/73:125,Deployability,update,update,125,This makes sure DV_KIND comes before DV_PARAM when a config file is; output by the python scripts. The python dict passed to update doesn't; guarantee order. This issue occured when DV_KIND and DV_PARAM; were not previously defined in a config file passed to; shape_optimization.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/73
https://github.com/su2code/SU2/pull/73:53,Modifiability,config,config,53,This makes sure DV_KIND comes before DV_PARAM when a config file is; output by the python scripts. The python dict passed to update doesn't; guarantee order. This issue occured when DV_KIND and DV_PARAM; were not previously defined in a config file passed to; shape_optimization.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/73
https://github.com/su2code/SU2/pull/73:237,Modifiability,config,config,237,This makes sure DV_KIND comes before DV_PARAM when a config file is; output by the python scripts. The python dict passed to update doesn't; guarantee order. This issue occured when DV_KIND and DV_PARAM; were not previously defined in a config file passed to; shape_optimization.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/73
https://github.com/su2code/SU2/issues/75:20,Testability,test,tests,20,copy the regression tests for master,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/75
https://github.com/su2code/SU2/issues/81:68,Deployability,integrat,integration,68,"The word ""numerics"" applies to most of what SU2 does including time integration. For this reason, a class called CNumerics that only relates to spatial discretization is confusing. . Considering the routines which inherit from this parent class (CUpwRoe_Flow, CAvgGradCorrected_Flow, etc.), I suggest as a new name CSpatialSchemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/81
https://github.com/su2code/SU2/issues/81:68,Integrability,integrat,integration,68,"The word ""numerics"" applies to most of what SU2 does including time integration. For this reason, a class called CNumerics that only relates to spatial discretization is confusing. . Considering the routines which inherit from this parent class (CUpwRoe_Flow, CAvgGradCorrected_Flow, etc.), I suggest as a new name CSpatialSchemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/81
https://github.com/su2code/SU2/issues/81:199,Integrability,rout,routines,199,"The word ""numerics"" applies to most of what SU2 does including time integration. For this reason, a class called CNumerics that only relates to spatial discretization is confusing. . Considering the routines which inherit from this parent class (CUpwRoe_Flow, CAvgGradCorrected_Flow, etc.), I suggest as a new name CSpatialSchemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/81
https://github.com/su2code/SU2/issues/81:214,Modifiability,inherit,inherit,214,"The word ""numerics"" applies to most of what SU2 does including time integration. For this reason, a class called CNumerics that only relates to spatial discretization is confusing. . Considering the routines which inherit from this parent class (CUpwRoe_Flow, CAvgGradCorrected_Flow, etc.), I suggest as a new name CSpatialSchemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/81
https://github.com/su2code/SU2/issues/82:190,Deployability,integrat,integration,190,"Classes associated with spatial discretization are all instantiated once during initialization [see: Numerics_Preprocessing in definition_structure.cpp] whereas classes associated with time integration are instantiated and deleted over and over in solver_container[a][b][c]->ImplicitEuler_Iteration(). Similarly, each time a preconditioner is invoked, a new class is instantiated. I think the code will be easier to read and understand if space and time are treated similarly. The CSysSolve class can also be instantiated for each solver during Numerics_Preprocessing() using the new keyword. A caveat of this change is that it might be necessary to assure that the matrix/vector data in the CSysSolve class is cleared prior to each iteration. This is the cost of not creating and deleting the data structure at each step.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/82
https://github.com/su2code/SU2/issues/82:190,Integrability,integrat,integration,190,"Classes associated with spatial discretization are all instantiated once during initialization [see: Numerics_Preprocessing in definition_structure.cpp] whereas classes associated with time integration are instantiated and deleted over and over in solver_container[a][b][c]->ImplicitEuler_Iteration(). Similarly, each time a preconditioner is invoked, a new class is instantiated. I think the code will be easier to read and understand if space and time are treated similarly. The CSysSolve class can also be instantiated for each solver during Numerics_Preprocessing() using the new keyword. A caveat of this change is that it might be necessary to assure that the matrix/vector data in the CSysSolve class is cleared prior to each iteration. This is the cost of not creating and deleting the data structure at each step.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/82
https://github.com/su2code/SU2/issues/82:711,Usability,clear,cleared,711,"Classes associated with spatial discretization are all instantiated once during initialization [see: Numerics_Preprocessing in definition_structure.cpp] whereas classes associated with time integration are instantiated and deleted over and over in solver_container[a][b][c]->ImplicitEuler_Iteration(). Similarly, each time a preconditioner is invoked, a new class is instantiated. I think the code will be easier to read and understand if space and time are treated similarly. The CSysSolve class can also be instantiated for each solver during Numerics_Preprocessing() using the new keyword. A caveat of this change is that it might be necessary to assure that the matrix/vector data in the CSysSolve class is cleared prior to each iteration. This is the cost of not creating and deleting the data structure at each step.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/82
https://github.com/su2code/SU2/issues/83:34,Integrability,rout,routine,34,"Currently in the top-level main() routine, there are a number of multiple-indexed data structures, such as:. ```; solver_container[iZone][iMesh][iEqn]->DoSomething();; numerics_container[iZone][iMesh][iEqn][iTerm]->DoSomethingElse();; ```. Instead of this, I suggest using classes to encapsulate each level of indexing. At the top level, calling a routine from CNumerics could look like:. ```; zone_container[iZone]->integration_container[iEqn]->solver_container[iMesh]->numerics_container[iTerm]->DoSomethingElse();; ```. This looks much more complicated from the top level, but we rarely call routines from CNumerics at the top level. We call them from inside the CSolver classes. Indeed, it makes no sense for there to be a CNumerics instance that is not associated with a specific instance of CSolver. So, currently we have routines such as:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container, CNumerics *numerics,; CConfig *config, unsigned short iMesh) {; ...; numerics->ComputeResidual();; ...; }; ```. Under the proposed scheme, we can remove the CNumerics input to this routine, as the numerics_container array is itself a member of the CSolver, so the same code becomes:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container,; CConfig *config, unsigned short iMesh) {; ...; numerics_container[iUpwind]->ComputeResidual();; ...; }; ```. Currently, the instances of CVariable are already encapsulated in this way inside of CSolver. The proposed reorganization demotes numerics_container from the top-level array to a member of CSolver. Similarly, solver_container itself is encapsulated in CIntegration. Organizing the data structures in this way makes more clear the hierarchy of classes as they are used.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/83
https://github.com/su2code/SU2/issues/83:348,Integrability,rout,routine,348,"Currently in the top-level main() routine, there are a number of multiple-indexed data structures, such as:. ```; solver_container[iZone][iMesh][iEqn]->DoSomething();; numerics_container[iZone][iMesh][iEqn][iTerm]->DoSomethingElse();; ```. Instead of this, I suggest using classes to encapsulate each level of indexing. At the top level, calling a routine from CNumerics could look like:. ```; zone_container[iZone]->integration_container[iEqn]->solver_container[iMesh]->numerics_container[iTerm]->DoSomethingElse();; ```. This looks much more complicated from the top level, but we rarely call routines from CNumerics at the top level. We call them from inside the CSolver classes. Indeed, it makes no sense for there to be a CNumerics instance that is not associated with a specific instance of CSolver. So, currently we have routines such as:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container, CNumerics *numerics,; CConfig *config, unsigned short iMesh) {; ...; numerics->ComputeResidual();; ...; }; ```. Under the proposed scheme, we can remove the CNumerics input to this routine, as the numerics_container array is itself a member of the CSolver, so the same code becomes:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container,; CConfig *config, unsigned short iMesh) {; ...; numerics_container[iUpwind]->ComputeResidual();; ...; }; ```. Currently, the instances of CVariable are already encapsulated in this way inside of CSolver. The proposed reorganization demotes numerics_container from the top-level array to a member of CSolver. Similarly, solver_container itself is encapsulated in CIntegration. Organizing the data structures in this way makes more clear the hierarchy of classes as they are used.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/83
https://github.com/su2code/SU2/issues/83:595,Integrability,rout,routines,595,"Currently in the top-level main() routine, there are a number of multiple-indexed data structures, such as:. ```; solver_container[iZone][iMesh][iEqn]->DoSomething();; numerics_container[iZone][iMesh][iEqn][iTerm]->DoSomethingElse();; ```. Instead of this, I suggest using classes to encapsulate each level of indexing. At the top level, calling a routine from CNumerics could look like:. ```; zone_container[iZone]->integration_container[iEqn]->solver_container[iMesh]->numerics_container[iTerm]->DoSomethingElse();; ```. This looks much more complicated from the top level, but we rarely call routines from CNumerics at the top level. We call them from inside the CSolver classes. Indeed, it makes no sense for there to be a CNumerics instance that is not associated with a specific instance of CSolver. So, currently we have routines such as:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container, CNumerics *numerics,; CConfig *config, unsigned short iMesh) {; ...; numerics->ComputeResidual();; ...; }; ```. Under the proposed scheme, we can remove the CNumerics input to this routine, as the numerics_container array is itself a member of the CSolver, so the same code becomes:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container,; CConfig *config, unsigned short iMesh) {; ...; numerics_container[iUpwind]->ComputeResidual();; ...; }; ```. Currently, the instances of CVariable are already encapsulated in this way inside of CSolver. The proposed reorganization demotes numerics_container from the top-level array to a member of CSolver. Similarly, solver_container itself is encapsulated in CIntegration. Organizing the data structures in this way makes more clear the hierarchy of classes as they are used.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/83
https://github.com/su2code/SU2/issues/83:828,Integrability,rout,routines,828,"Currently in the top-level main() routine, there are a number of multiple-indexed data structures, such as:. ```; solver_container[iZone][iMesh][iEqn]->DoSomething();; numerics_container[iZone][iMesh][iEqn][iTerm]->DoSomethingElse();; ```. Instead of this, I suggest using classes to encapsulate each level of indexing. At the top level, calling a routine from CNumerics could look like:. ```; zone_container[iZone]->integration_container[iEqn]->solver_container[iMesh]->numerics_container[iTerm]->DoSomethingElse();; ```. This looks much more complicated from the top level, but we rarely call routines from CNumerics at the top level. We call them from inside the CSolver classes. Indeed, it makes no sense for there to be a CNumerics instance that is not associated with a specific instance of CSolver. So, currently we have routines such as:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container, CNumerics *numerics,; CConfig *config, unsigned short iMesh) {; ...; numerics->ComputeResidual();; ...; }; ```. Under the proposed scheme, we can remove the CNumerics input to this routine, as the numerics_container array is itself a member of the CSolver, so the same code becomes:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container,; CConfig *config, unsigned short iMesh) {; ...; numerics_container[iUpwind]->ComputeResidual();; ...; }; ```. Currently, the instances of CVariable are already encapsulated in this way inside of CSolver. The proposed reorganization demotes numerics_container from the top-level array to a member of CSolver. Similarly, solver_container itself is encapsulated in CIntegration. Organizing the data structures in this way makes more clear the hierarchy of classes as they are used.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/83
https://github.com/su2code/SU2/issues/83:1117,Integrability,rout,routine,1117,"Currently in the top-level main() routine, there are a number of multiple-indexed data structures, such as:. ```; solver_container[iZone][iMesh][iEqn]->DoSomething();; numerics_container[iZone][iMesh][iEqn][iTerm]->DoSomethingElse();; ```. Instead of this, I suggest using classes to encapsulate each level of indexing. At the top level, calling a routine from CNumerics could look like:. ```; zone_container[iZone]->integration_container[iEqn]->solver_container[iMesh]->numerics_container[iTerm]->DoSomethingElse();; ```. This looks much more complicated from the top level, but we rarely call routines from CNumerics at the top level. We call them from inside the CSolver classes. Indeed, it makes no sense for there to be a CNumerics instance that is not associated with a specific instance of CSolver. So, currently we have routines such as:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container, CNumerics *numerics,; CConfig *config, unsigned short iMesh) {; ...; numerics->ComputeResidual();; ...; }; ```. Under the proposed scheme, we can remove the CNumerics input to this routine, as the numerics_container array is itself a member of the CSolver, so the same code becomes:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container,; CConfig *config, unsigned short iMesh) {; ...; numerics_container[iUpwind]->ComputeResidual();; ...; }; ```. Currently, the instances of CVariable are already encapsulated in this way inside of CSolver. The proposed reorganization demotes numerics_container from the top-level array to a member of CSolver. Similarly, solver_container itself is encapsulated in CIntegration. Organizing the data structures in this way makes more clear the hierarchy of classes as they are used.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/83
https://github.com/su2code/SU2/issues/83:967,Modifiability,config,config,967,"Currently in the top-level main() routine, there are a number of multiple-indexed data structures, such as:. ```; solver_container[iZone][iMesh][iEqn]->DoSomething();; numerics_container[iZone][iMesh][iEqn][iTerm]->DoSomethingElse();; ```. Instead of this, I suggest using classes to encapsulate each level of indexing. At the top level, calling a routine from CNumerics could look like:. ```; zone_container[iZone]->integration_container[iEqn]->solver_container[iMesh]->numerics_container[iTerm]->DoSomethingElse();; ```. This looks much more complicated from the top level, but we rarely call routines from CNumerics at the top level. We call them from inside the CSolver classes. Indeed, it makes no sense for there to be a CNumerics instance that is not associated with a specific instance of CSolver. So, currently we have routines such as:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container, CNumerics *numerics,; CConfig *config, unsigned short iMesh) {; ...; numerics->ComputeResidual();; ...; }; ```. Under the proposed scheme, we can remove the CNumerics input to this routine, as the numerics_container array is itself a member of the CSolver, so the same code becomes:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container,; CConfig *config, unsigned short iMesh) {; ...; numerics_container[iUpwind]->ComputeResidual();; ...; }; ```. Currently, the instances of CVariable are already encapsulated in this way inside of CSolver. The proposed reorganization demotes numerics_container from the top-level array to a member of CSolver. Similarly, solver_container itself is encapsulated in CIntegration. Organizing the data structures in this way makes more clear the hierarchy of classes as they are used.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/83
https://github.com/su2code/SU2/issues/83:1319,Modifiability,config,config,1319,"Currently in the top-level main() routine, there are a number of multiple-indexed data structures, such as:. ```; solver_container[iZone][iMesh][iEqn]->DoSomething();; numerics_container[iZone][iMesh][iEqn][iTerm]->DoSomethingElse();; ```. Instead of this, I suggest using classes to encapsulate each level of indexing. At the top level, calling a routine from CNumerics could look like:. ```; zone_container[iZone]->integration_container[iEqn]->solver_container[iMesh]->numerics_container[iTerm]->DoSomethingElse();; ```. This looks much more complicated from the top level, but we rarely call routines from CNumerics at the top level. We call them from inside the CSolver classes. Indeed, it makes no sense for there to be a CNumerics instance that is not associated with a specific instance of CSolver. So, currently we have routines such as:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container, CNumerics *numerics,; CConfig *config, unsigned short iMesh) {; ...; numerics->ComputeResidual();; ...; }; ```. Under the proposed scheme, we can remove the CNumerics input to this routine, as the numerics_container array is itself a member of the CSolver, so the same code becomes:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container,; CConfig *config, unsigned short iMesh) {; ...; numerics_container[iUpwind]->ComputeResidual();; ...; }; ```. Currently, the instances of CVariable are already encapsulated in this way inside of CSolver. The proposed reorganization demotes numerics_container from the top-level array to a member of CSolver. Similarly, solver_container itself is encapsulated in CIntegration. Organizing the data structures in this way makes more clear the hierarchy of classes as they are used.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/83
https://github.com/su2code/SU2/issues/83:1739,Usability,clear,clear,1739,"Currently in the top-level main() routine, there are a number of multiple-indexed data structures, such as:. ```; solver_container[iZone][iMesh][iEqn]->DoSomething();; numerics_container[iZone][iMesh][iEqn][iTerm]->DoSomethingElse();; ```. Instead of this, I suggest using classes to encapsulate each level of indexing. At the top level, calling a routine from CNumerics could look like:. ```; zone_container[iZone]->integration_container[iEqn]->solver_container[iMesh]->numerics_container[iTerm]->DoSomethingElse();; ```. This looks much more complicated from the top level, but we rarely call routines from CNumerics at the top level. We call them from inside the CSolver classes. Indeed, it makes no sense for there to be a CNumerics instance that is not associated with a specific instance of CSolver. So, currently we have routines such as:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container, CNumerics *numerics,; CConfig *config, unsigned short iMesh) {; ...; numerics->ComputeResidual();; ...; }; ```. Under the proposed scheme, we can remove the CNumerics input to this routine, as the numerics_container array is itself a member of the CSolver, so the same code becomes:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container,; CConfig *config, unsigned short iMesh) {; ...; numerics_container[iUpwind]->ComputeResidual();; ...; }; ```. Currently, the instances of CVariable are already encapsulated in this way inside of CSolver. The proposed reorganization demotes numerics_container from the top-level array to a member of CSolver. Similarly, solver_container itself is encapsulated in CIntegration. Organizing the data structures in this way makes more clear the hierarchy of classes as they are used.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/83
https://github.com/su2code/SU2/issues/89:67,Usability,guid,guidelines,67,http://adl-public.stanford.edu/docs/display/SUSQUARED/Coding+style+guidelines,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/89
https://github.com/su2code/SU2/issues/100:79,Energy Efficiency,monitor,monitored,79,"For example, take an average of the surface element size for the markers being monitored.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/100
https://github.com/su2code/SU2/issues/104:7,Performance,optimiz,optimization,7,If the optimization problem has geometrical constraints and the section GEOMETRY EVALUATION PARAMETERS is incomplete SU2 (shape_optimization) will work but the result is going to be wrong.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/104
https://github.com/su2code/SU2/issues/108:191,Performance,optimiz,optimization,191,"Currently, we output all CFD evaluations during shape design, which will include calculations as part of line searches. We should tag the subset of candidate designs that represent the major optimization iterations.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/108
https://github.com/su2code/SU2/issues/111:72,Modifiability,variab,variable,72,DV_MARKER should work with a list of different surfaces for each design variable (like DV_PARAM),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/111
https://github.com/su2code/SU2/issues/113:24,Integrability,message,message,24,or remove the following message (only adjoint):; There is no Target Equivalent Area file (TargetEA.dat)!!; Using default parameters (Target Equiv Area = 0.0),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/113
https://github.com/su2code/SU2/issues/122:191,Availability,avail,available,191,Doxygen groups can be used to create a separate page which will display anything specified by a \ingroup command. I think this would be a good way to keep our documentation updated about the available config file options and their syntax.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/122
https://github.com/su2code/SU2/issues/122:173,Deployability,update,updated,173,Doxygen groups can be used to create a separate page which will display anything specified by a \ingroup command. I think this would be a good way to keep our documentation updated about the available config file options and their syntax.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/122
https://github.com/su2code/SU2/issues/122:201,Modifiability,config,config,201,Doxygen groups can be used to create a separate page which will display anything specified by a \ingroup command. I think this would be a good way to keep our documentation updated about the available config file options and their syntax.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/122
https://github.com/su2code/SU2/issues/123:148,Energy Efficiency,meter,meter,148,"After removing the local surface element area from the calculation, it results in viewing a map of change in the objective (e.g. drag) per 1 square meter w/ a 1 meter deflection at all nodes (for SI units). Makes it easier to see where the geometry is most sensitive.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/123
https://github.com/su2code/SU2/issues/123:161,Energy Efficiency,meter,meter,161,"After removing the local surface element area from the calculation, it results in viewing a map of change in the objective (e.g. drag) per 1 square meter w/ a 1 meter deflection at all nodes (for SI units). Makes it easier to see where the geometry is most sensitive.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/123
https://github.com/su2code/SU2/pull/130:199,Modifiability,variab,variable,199,"This new version of SU2_DEF generates only one .plt file independently of the number of MPI ranks. It is a visualization issue but, this new capability is very useful to study the effect of a design variable dealing with large cases that require multiple MPI ranks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/130
https://github.com/su2code/SU2/pull/132:24,Integrability,rout,routines,24,"Via adding SetTime_Step routines, which call the corresponding flow solution's time step calculation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/132
https://github.com/su2code/SU2/issues/134:4,Availability,error,error,4,Add error checking to find if the DV_MARKER (surface in which the deformation using FFD boxes is going to be applied) exists in the mesh.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/134
https://github.com/su2code/SU2/pull/135:136,Modifiability,config,configure,136,"Incorporate Parmetis into the SU2 build environment. Note that to build parmetis, a MPI-enabed C compiler is required, so . ``` sh; $ ./configure ... # looks for MPI C++/C compilers; $ ./configure --with-cxx=`which mpicxx` --with-cc=`which mpicc`; $ ./configure --disable-mpi # implicitly disables parmetis; $ ./configure --disable-metis # implicitly disables parmetis too; ```. all do the expected things.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/135
https://github.com/su2code/SU2/pull/135:187,Modifiability,config,configure,187,"Incorporate Parmetis into the SU2 build environment. Note that to build parmetis, a MPI-enabed C compiler is required, so . ``` sh; $ ./configure ... # looks for MPI C++/C compilers; $ ./configure --with-cxx=`which mpicxx` --with-cc=`which mpicc`; $ ./configure --disable-mpi # implicitly disables parmetis; $ ./configure --disable-metis # implicitly disables parmetis too; ```. all do the expected things.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/135
https://github.com/su2code/SU2/pull/135:252,Modifiability,config,configure,252,"Incorporate Parmetis into the SU2 build environment. Note that to build parmetis, a MPI-enabed C compiler is required, so . ``` sh; $ ./configure ... # looks for MPI C++/C compilers; $ ./configure --with-cxx=`which mpicxx` --with-cc=`which mpicc`; $ ./configure --disable-mpi # implicitly disables parmetis; $ ./configure --disable-metis # implicitly disables parmetis too; ```. all do the expected things.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/135
https://github.com/su2code/SU2/pull/135:312,Modifiability,config,configure,312,"Incorporate Parmetis into the SU2 build environment. Note that to build parmetis, a MPI-enabed C compiler is required, so . ``` sh; $ ./configure ... # looks for MPI C++/C compilers; $ ./configure --with-cxx=`which mpicxx` --with-cc=`which mpicc`; $ ./configure --disable-mpi # implicitly disables parmetis; $ ./configure --disable-metis # implicitly disables parmetis too; ```. all do the expected things.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/135
https://github.com/su2code/SU2/issues/141:214,Availability,mask,mask,214,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/141
https://github.com/su2code/SU2/issues/141:233,Availability,error,errors,233,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/141
https://github.com/su2code/SU2/issues/141:578,Availability,error,error,578,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/141
https://github.com/su2code/SU2/issues/141:27,Modifiability,config,config,27,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/141
https://github.com/su2code/SU2/issues/141:72,Modifiability,config,config,72,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/141
https://github.com/su2code/SU2/issues/141:180,Modifiability,config,config,180,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/141
https://github.com/su2code/SU2/issues/141:275,Modifiability,config,config,275,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/141
https://github.com/su2code/SU2/issues/141:325,Modifiability,config,config,325,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/141
https://github.com/su2code/SU2/issues/141:405,Modifiability,config,config,405,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/141
https://github.com/su2code/SU2/issues/141:522,Modifiability,config,config,522,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/141
https://github.com/su2code/SU2/issues/141:258,Security,integrity,integrity,258,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/141
https://github.com/su2code/SU2/issues/141:223,Testability,assert,assertion,223,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/141
https://github.com/su2code/SU2/issues/141:682,Testability,assert,assertions,682,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/141
https://github.com/su2code/SU2/pull/144:26,Availability,error,errors,26,"Simple bug that converted errors like ""duplicate MACH setting in configuration file"" to ""missing configuration file"".",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/144
https://github.com/su2code/SU2/pull/144:65,Deployability,configurat,configuration,65,"Simple bug that converted errors like ""duplicate MACH setting in configuration file"" to ""missing configuration file"".",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/144
https://github.com/su2code/SU2/pull/144:97,Deployability,configurat,configuration,97,"Simple bug that converted errors like ""duplicate MACH setting in configuration file"" to ""missing configuration file"".",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/144
https://github.com/su2code/SU2/pull/144:65,Modifiability,config,configuration,65,"Simple bug that converted errors like ""duplicate MACH setting in configuration file"" to ""missing configuration file"".",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/144
https://github.com/su2code/SU2/pull/144:97,Modifiability,config,configuration,97,"Simple bug that converted errors like ""duplicate MACH setting in configuration file"" to ""missing configuration file"".",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/144
https://github.com/su2code/SU2/pull/144:0,Usability,Simpl,Simple,0,"Simple bug that converted errors like ""duplicate MACH setting in configuration file"" to ""missing configuration file"".",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/144
https://github.com/su2code/SU2/pull/146:277,Modifiability,config,config,277,"Various changes:; && switch to || for solid boundary (previously a marker was only ""solid"" if it was heat flux AND euler AND isothermal); additions/modifications to the euler adjoint BC_OUTLET (average pressure, stagnation pressure); changes to doxygen-compatible comments for config options",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/146
https://github.com/su2code/SU2/issues/152:190,Availability,error,error,190,Just compiled today and it seems like the options `CFL_ADAPT` and `CFL_ADAPT_PARAM` have been deprecated? . Running the 2D inviscid cylinder and the euler channel flow example both throw an error. ```; CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; ```. Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/152
https://github.com/su2code/SU2/issues/152:500,Energy Efficiency,adapt,adaptive,500,Just compiled today and it seems like the options `CFL_ADAPT` and `CFL_ADAPT_PARAM` have been deprecated? . Running the 2D inviscid cylinder and the euler channel flow example both throw an error. ```; CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; ```. Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/152
https://github.com/su2code/SU2/issues/152:500,Modifiability,adapt,adaptive,500,Just compiled today and it seems like the options `CFL_ADAPT` and `CFL_ADAPT_PARAM` have been deprecated? . Running the 2D inviscid cylinder and the euler channel flow example both throw an error. ```; CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; ```. Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/152
https://github.com/su2code/SU2/issues/152:415,Testability,test,test,415,Just compiled today and it seems like the options `CFL_ADAPT` and `CFL_ADAPT_PARAM` have been deprecated? . Running the 2D inviscid cylinder and the euler channel flow example both throw an error. ```; CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; ```. Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/152
https://github.com/su2code/SU2/issues/153:4,Modifiability,Config,Config,4,"The Config --. ```; DV_KIND= FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D; DV_MARKER= ( airfoil ); DV_PARAM= ( AIRFOIL, 1.0) ; ( AIRFOIL, 2.0) ; ( AIRFOIL, 3.0) ; ( AIRFOIL, 4.0) ; ( AIRFOIL, 5.0) ; ( AIRFOIL, 6.0) ; ( AIRFOIL, 7.0) ; ( AIRFOIL, 8.0) ; ( AIRFOIL, 9.0) ; ( AIRFOIL, 10.0) ; ( AIRFOIL, 11.0) ; ( AIRFOIL, 12.0) ; ( AIRFOIL, 13.0) ; ( AIRFOIL, 14.0) ; ( AIRFOIL, 15.0) ; ( AIRFOIL, 16.0) ; ( AIRFOIL, 17.0) ; ( AIRFOIL, 18.0) ; ( AIRFOIL, 1.0) ; ( AIRFOIL, 2.0) ; ( AIRFOIL, 3.0) ; ( AIRFOIL, 4.0) ; ( AIRFOIL, 5.0) ; ( AIRFOIL, 6.0) ; ( AIRFOIL, 7.0) ; ( AIRFOIL, 8.0) ; ( AIRFOIL, 9.0) ; ( AIRFOIL, 10.0) ; ( AIRFOIL, 11.0) ; ( AIRFOIL, 12.0) ; ( AIRFOIL, 13.0) ; ( AIRFOIL, 14.0) ; ( AIRFOIL, 15.0) ; ( AIRFOIL, 16.0) ; ( AIRFOIL, 17.0) ; ( AIRFOIL, 18.0) ; DV_VALUE= 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1; ```. From the Log -- . ```; FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 1 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 2 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 3 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 4 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 5 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 6 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 7 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 8 ); FFD 2D (camber) <-> airfoil ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/153
https://github.com/su2code/SU2/issues/153:1527,Testability,Log,Log,1527,"SS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D; DV_MARKER= ( airfoil ); DV_PARAM= ( AIRFOIL, 1.0) ; ( AIRFOIL, 2.0) ; ( AIRFOIL, 3.0) ; ( AIRFOIL, 4.0) ; ( AIRFOIL, 5.0) ; ( AIRFOIL, 6.0) ; ( AIRFOIL, 7.0) ; ( AIRFOIL, 8.0) ; ( AIRFOIL, 9.0) ; ( AIRFOIL, 10.0) ; ( AIRFOIL, 11.0) ; ( AIRFOIL, 12.0) ; ( AIRFOIL, 13.0) ; ( AIRFOIL, 14.0) ; ( AIRFOIL, 15.0) ; ( AIRFOIL, 16.0) ; ( AIRFOIL, 17.0) ; ( AIRFOIL, 18.0) ; ( AIRFOIL, 1.0) ; ( AIRFOIL, 2.0) ; ( AIRFOIL, 3.0) ; ( AIRFOIL, 4.0) ; ( AIRFOIL, 5.0) ; ( AIRFOIL, 6.0) ; ( AIRFOIL, 7.0) ; ( AIRFOIL, 8.0) ; ( AIRFOIL, 9.0) ; ( AIRFOIL, 10.0) ; ( AIRFOIL, 11.0) ; ( AIRFOIL, 12.0) ; ( AIRFOIL, 13.0) ; ( AIRFOIL, 14.0) ; ( AIRFOIL, 15.0) ; ( AIRFOIL, 16.0) ; ( AIRFOIL, 17.0) ; ( AIRFOIL, 18.0) ; DV_VALUE= 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1; ```. From the Log -- . ```; FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 1 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 2 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 3 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 4 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 5 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 6 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 7 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 8 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 9 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 10 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 11 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 12 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 13 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 14 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 15 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 16 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 17 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 18 ); FFD ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/153
https://github.com/su2code/SU2/pull/154:75,Modifiability,variab,variables,75,Fix COptionEnumList bug. The previous parsing script set all of the DVKind variables to the first one. This commit changes it.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/154
https://github.com/su2code/SU2/pull/155:60,Modifiability,variab,variable,60,"If cgns is built with the flag CG_BUILD_SCOPE, all type and variable names are prefixed with 'CG_', which makes SU2 uncompilable.; Prefixing all CGNS variables and types with the macros CGNS_ENUMV and CGNS_ENUMT takes care of this.; This macros are defined in cgnslib.h:. ``` c; #ifdef CGNS_SCOPE_ENUMS; /* set scope prefix for values only */; #define CGNS_ENUMV( e ) CG_ ## e; /* set scope prefix for types */; #define CGNS_ENUMT( e ) CG_ ## e; /* set scope prefix for defines */; #define CGNS_ENUMD( e ) CG_ ## e; /* set scope prefix for variables (lowercase same as functions) */; #define CGNS_ENUMF( e ) cg_ ## e; #else; #define CGNS_ENUMV( e ) e; #define CGNS_ENUMT( e ) e; #define CGNS_ENUMD( e ) e; #define CGNS_ENUMF( e ) e; #endif; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/155
https://github.com/su2code/SU2/pull/155:150,Modifiability,variab,variables,150,"If cgns is built with the flag CG_BUILD_SCOPE, all type and variable names are prefixed with 'CG_', which makes SU2 uncompilable.; Prefixing all CGNS variables and types with the macros CGNS_ENUMV and CGNS_ENUMT takes care of this.; This macros are defined in cgnslib.h:. ``` c; #ifdef CGNS_SCOPE_ENUMS; /* set scope prefix for values only */; #define CGNS_ENUMV( e ) CG_ ## e; /* set scope prefix for types */; #define CGNS_ENUMT( e ) CG_ ## e; /* set scope prefix for defines */; #define CGNS_ENUMD( e ) CG_ ## e; /* set scope prefix for variables (lowercase same as functions) */; #define CGNS_ENUMF( e ) cg_ ## e; #else; #define CGNS_ENUMV( e ) e; #define CGNS_ENUMT( e ) e; #define CGNS_ENUMD( e ) e; #define CGNS_ENUMF( e ) e; #endif; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/155
https://github.com/su2code/SU2/pull/155:540,Modifiability,variab,variables,540,"If cgns is built with the flag CG_BUILD_SCOPE, all type and variable names are prefixed with 'CG_', which makes SU2 uncompilable.; Prefixing all CGNS variables and types with the macros CGNS_ENUMV and CGNS_ENUMT takes care of this.; This macros are defined in cgnslib.h:. ``` c; #ifdef CGNS_SCOPE_ENUMS; /* set scope prefix for values only */; #define CGNS_ENUMV( e ) CG_ ## e; /* set scope prefix for types */; #define CGNS_ENUMT( e ) CG_ ## e; /* set scope prefix for defines */; #define CGNS_ENUMD( e ) CG_ ## e; /* set scope prefix for variables (lowercase same as functions) */; #define CGNS_ENUMF( e ) cg_ ## e; #else; #define CGNS_ENUMV( e ) e; #define CGNS_ENUMT( e ) e; #define CGNS_ENUMD( e ) e; #define CGNS_ENUMF( e ) e; #endif; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/155
https://github.com/su2code/SU2/pull/157:60,Modifiability,variab,variable,60,"If cgns is built with the flag CG_BUILD_SCOPE, all type and variable names are prefixed with 'CG_', which makes SU2 uncompilable.; Prefixing all CGNS variables and types with the macros CGNS_ENUMV and CGNS_ENUMT takes care of this.; These macros are defined in cgnslib.h:. ``` c; #ifdef CGNS_SCOPE_ENUMS; /* set scope prefix for values only */; #define CGNS_ENUMV( e ) CG_ ## e; /* set scope prefix for types */; #define CGNS_ENUMT( e ) CG_ ## e; /* set scope prefix for defines */; #define CGNS_ENUMD( e ) CG_ ## e; /* set scope prefix for variables (lowercase same as functions) */; #define CGNS_ENUMF( e ) cg_ ## e; #else; #define CGNS_ENUMV( e ) e; #define CGNS_ENUMT( e ) e; #define CGNS_ENUMD( e ) e; #define CGNS_ENUMF( e ) e; #endif; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/157
https://github.com/su2code/SU2/pull/157:150,Modifiability,variab,variables,150,"If cgns is built with the flag CG_BUILD_SCOPE, all type and variable names are prefixed with 'CG_', which makes SU2 uncompilable.; Prefixing all CGNS variables and types with the macros CGNS_ENUMV and CGNS_ENUMT takes care of this.; These macros are defined in cgnslib.h:. ``` c; #ifdef CGNS_SCOPE_ENUMS; /* set scope prefix for values only */; #define CGNS_ENUMV( e ) CG_ ## e; /* set scope prefix for types */; #define CGNS_ENUMT( e ) CG_ ## e; /* set scope prefix for defines */; #define CGNS_ENUMD( e ) CG_ ## e; /* set scope prefix for variables (lowercase same as functions) */; #define CGNS_ENUMF( e ) cg_ ## e; #else; #define CGNS_ENUMV( e ) e; #define CGNS_ENUMT( e ) e; #define CGNS_ENUMD( e ) e; #define CGNS_ENUMF( e ) e; #endif; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/157
https://github.com/su2code/SU2/pull/157:541,Modifiability,variab,variables,541,"If cgns is built with the flag CG_BUILD_SCOPE, all type and variable names are prefixed with 'CG_', which makes SU2 uncompilable.; Prefixing all CGNS variables and types with the macros CGNS_ENUMV and CGNS_ENUMT takes care of this.; These macros are defined in cgnslib.h:. ``` c; #ifdef CGNS_SCOPE_ENUMS; /* set scope prefix for values only */; #define CGNS_ENUMV( e ) CG_ ## e; /* set scope prefix for types */; #define CGNS_ENUMT( e ) CG_ ## e; /* set scope prefix for defines */; #define CGNS_ENUMD( e ) CG_ ## e; /* set scope prefix for variables (lowercase same as functions) */; #define CGNS_ENUMF( e ) cg_ ## e; #else; #define CGNS_ENUMV( e ) e; #define CGNS_ENUMT( e ) e; #define CGNS_ENUMD( e ) e; #define CGNS_ENUMF( e ) e; #endif; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/157
https://github.com/su2code/SU2/issues/158:16,Deployability,patch,patching,16,"Does SU2 allows patching of quadrilateral mesh. If yes, then are there any issues concerned with the same?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/158
https://github.com/su2code/SU2/issues/163:218,Availability,error,error,218,"Hello. I have a mesh which has a boundary condition with name containing : symbol. SU2 considered just the part of the name in before : When : was used in definition of the optimization problem, the parser returned an error message",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/163
https://github.com/su2code/SU2/issues/163:224,Integrability,message,message,224,"Hello. I have a mesh which has a boundary condition with name containing : symbol. SU2 considered just the part of the name in before : When : was used in definition of the optimization problem, the parser returned an error message",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/163
https://github.com/su2code/SU2/issues/163:173,Performance,optimiz,optimization,173,"Hello. I have a mesh which has a boundary condition with name containing : symbol. SU2 considered just the part of the name in before : When : was used in definition of the optimization problem, the parser returned an error message",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/163
https://github.com/su2code/SU2/issues/164:54,Deployability,release,release,54,I found that in my old linux SU2's master node didn't release memory after mesh partition .; So I reviewed the code in CGeometry::~CGeometry. I find you use delete like this. ```; if (bound != NULL) {; for (iMarker = 0; iMarker < nMarker; iMarker++) {; for (iElem_Bound = 0; iElem_Bound < nElem_Bound[iMarker]; iElem_Bound++) {; if (bound[iMarker][iElem_Bound] != NULL) delete bound[iMarker][iElem_Bound];; }; }; ```. This will cause only **bound[iMarker][iElem_Bound][0]** be released correctly. ; Sometimes compiler will fix this for you. ; But I think you should change this. ; Just change **delete** to **delete[]**,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/164
https://github.com/su2code/SU2/issues/164:477,Deployability,release,released,477,I found that in my old linux SU2's master node didn't release memory after mesh partition .; So I reviewed the code in CGeometry::~CGeometry. I find you use delete like this. ```; if (bound != NULL) {; for (iMarker = 0; iMarker < nMarker; iMarker++) {; for (iElem_Bound = 0; iElem_Bound < nElem_Bound[iMarker]; iElem_Bound++) {; if (bound[iMarker][iElem_Bound] != NULL) delete bound[iMarker][iElem_Bound];; }; }; ```. This will cause only **bound[iMarker][iElem_Bound][0]** be released correctly. ; Sometimes compiler will fix this for you. ; But I think you should change this. ; Just change **delete** to **delete[]**,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/164
https://github.com/su2code/SU2/issues/165:108,Integrability,depend,depends,108,"When WRT_CSV_SOL = NO, the adjoint gradient method results in 0 valued gradients because the SU2_DOT method depends on the data in the surface_adjoint.csv file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/165
https://github.com/su2code/SU2/issues/166:177,Modifiability,config,config,177,"On industrial cases, there can be tens of independent boundaries of a same type (eg. inlets / outlets). It would be very good to be able to define them in separate lines in the config file. Some graphical text editor can't even handle such ""infinite"" lines. (This is also true for optimization variables like DEFINITION_DV.)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/166
https://github.com/su2code/SU2/issues/166:294,Modifiability,variab,variables,294,"On industrial cases, there can be tens of independent boundaries of a same type (eg. inlets / outlets). It would be very good to be able to define them in separate lines in the config file. Some graphical text editor can't even handle such ""infinite"" lines. (This is also true for optimization variables like DEFINITION_DV.)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/166
https://github.com/su2code/SU2/issues/166:281,Performance,optimiz,optimization,281,"On industrial cases, there can be tens of independent boundaries of a same type (eg. inlets / outlets). It would be very good to be able to define them in separate lines in the config file. Some graphical text editor can't even handle such ""infinite"" lines. (This is also true for optimization variables like DEFINITION_DV.)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/166
https://github.com/su2code/SU2/issues/167:374,Modifiability,variab,variables,374,"I am using SU2 version 3.2.8. I have tried all the steady-state Euler and Navier-Stokes test cases and they worked fine. However, none of the demos for Rotating (NACA and CAradonna) are working. Both are diverging. I have decreased the Courant number from 4 to 2 and increased the number of implicit iterations. There is still divergence. In the cfg file, I removed all the variables related to the dynamic mesh motion nad put a freestream of 0.8. SU2 did not diverge. Is there a specific setting to put in the cfg file in order to get convergence for the Rotating test cases",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/167
https://github.com/su2code/SU2/issues/167:88,Testability,test,test,88,"I am using SU2 version 3.2.8. I have tried all the steady-state Euler and Navier-Stokes test cases and they worked fine. However, none of the demos for Rotating (NACA and CAradonna) are working. Both are diverging. I have decreased the Courant number from 4 to 2 and increased the number of implicit iterations. There is still divergence. In the cfg file, I removed all the variables related to the dynamic mesh motion nad put a freestream of 0.8. SU2 did not diverge. Is there a specific setting to put in the cfg file in order to get convergence for the Rotating test cases",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/167
https://github.com/su2code/SU2/issues/167:565,Testability,test,test,565,"I am using SU2 version 3.2.8. I have tried all the steady-state Euler and Navier-Stokes test cases and they worked fine. However, none of the demos for Rotating (NACA and CAradonna) are working. Both are diverging. I have decreased the Courant number from 4 to 2 and increased the number of implicit iterations. There is still divergence. In the cfg file, I removed all the variables related to the dynamic mesh motion nad put a freestream of 0.8. SU2 did not diverge. Is there a specific setting to put in the cfg file in order to get convergence for the Rotating test cases",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/167
https://github.com/su2code/SU2/pull/168:42,Usability,simpl,simple,42,I did changes to Quickstart and created a simple docker file with readme on how to create the binaries and work with it. This will help others to jump start their development environment. I am also write up on setting up their development environment.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/168
https://github.com/su2code/SU2/pull/169:27,Deployability,deploy,deployment,27,Added Docker file for easy deployment and setup development environment with README.md,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/169
https://github.com/su2code/SU2/issues/170:256,Availability,error,error,256,"I am using SU2 version 3.2.8 on a Linux workstation.; I am trying to optimize an NACA0012 for Euler flow Test_cases/Optimization_euler/steady_naca0012).; The code diverged after 115 call to functions. I am including the output.; If I am trying to read the error, it seems there is an issue with slsqp that; is provided by Python. If this is the cases, what Scipy version of Python would you recommend?. python shape_optimization.py -f inv_NACA0012_adv.cfg -r 0. ---. | ___ _ _ ___ |; | / **| | | |_ ) Release 3.2.8 ""eagle"" |; | \** \ |_| |/ / |; | |___/_**//_**| Aerodynamic Shape Optimization Script |; ## | |. NIT FC OBJFUN GNORM; 1 1 2.134595E-05 1.958771E-02; 2 6 2.134988E-05 1.958696E-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:2985,Availability,error,error,2985,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:501,Deployability,Release,Release,501,"I am using SU2 version 3.2.8 on a Linux workstation.; I am trying to optimize an NACA0012 for Euler flow Test_cases/Optimization_euler/steady_naca0012).; The code diverged after 115 call to functions. I am including the output.; If I am trying to read the error, it seems there is an issue with slsqp that; is provided by Python. If this is the cases, what Scipy version of Python would you recommend?. python shape_optimization.py -f inv_NACA0012_adv.cfg -r 0. ---. | ___ _ _ ___ |; | / **| | | |_ ) Release 3.2.8 ""eagle"" |; | \** \ |_| |/ / |; | |___/_**//_**| Aerodynamic Shape Optimization Script |; ## | |. NIT FC OBJFUN GNORM; 1 1 2.134595E-05 1.958771E-02; 2 6 2.134988E-05 1.958696E-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:2649,Integrability,interface,interface,2649,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:2747,Integrability,interface,interface,2747,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:2806,Integrability,message,message,2806,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:2291,Modifiability,config,config,2291,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:2396,Modifiability,config,config,2396,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:2515,Modifiability,config,config,2515,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:69,Performance,optimiz,optimize,69,"I am using SU2 version 3.2.8 on a Linux workstation.; I am trying to optimize an NACA0012 for Euler flow Test_cases/Optimization_euler/steady_naca0012).; The code diverged after 115 call to functions. I am including the output.; If I am trying to read the error, it seems there is an issue with slsqp that; is provided by Python. If this is the cases, what Scipy version of Python would you recommend?. python shape_optimization.py -f inv_NACA0012_adv.cfg -r 0. ---. | ___ _ _ ___ |; | / **| | | |_ ) Release 3.2.8 ""eagle"" |; | \** \ |_| |/ / |; | |___/_**//_**| Aerodynamic Shape Optimization Script |; ## | |. NIT FC OBJFUN GNORM; 1 1 2.134595E-05 1.958771E-02; 2 6 2.134988E-05 1.958696E-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:581,Performance,Optimiz,Optimization,581,"I am using SU2 version 3.2.8 on a Linux workstation.; I am trying to optimize an NACA0012 for Euler flow Test_cases/Optimization_euler/steady_naca0012).; The code diverged after 115 call to functions. I am including the output.; If I am trying to read the error, it seems there is an issue with slsqp that; is provided by Python. If this is the cases, what Scipy version of Python would you recommend?. python shape_optimization.py -f inv_NACA0012_adv.cfg -r 0. ---. | ___ _ _ ___ |; | / **| | | |_ ) Release 3.2.8 ""eagle"" |; | \** \ |_| |/ / |; | |___/_**//_**| Aerodynamic Shape Optimization Script |; ## | |. NIT FC OBJFUN GNORM; 1 1 2.134595E-05 1.958771E-02; 2 6 2.134988E-05 1.958696E-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:1462,Performance,optimiz,optimize,1462," 0. ---. | ___ _ _ ___ |; | / **| | | |_ ) Release 3.2.8 ""eagle"" |; | \** \ |_| |/ / |; | |___/_**//_**| Aerodynamic Shape Optimization Script |; ## | |. NIT FC OBJFUN GNORM; 1 1 2.134595E-05 1.958771E-02; 2 6 2.134988E-05 1.958696E-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:1581,Performance,optimiz,optimize,1581,"ape Optimization Script |; ## | |. NIT FC OBJFUN GNORM; 1 1 2.134595E-05 1.958771E-02; 2 6 2.134988E-05 1.958696E-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:1692,Performance,optimiz,optimize,1692,"-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_comma",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:1701,Performance,optimiz,optimize,1701,"-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_comma",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/170:3024,Safety,abort,aborted,3024,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/170
https://github.com/su2code/SU2/issues/171:103,Availability,fault,fault,103,"Tried to run the time-spectral test case (v3.2.9) using the NACA64A010 aerofoil and got a segmentation fault. The fault occurs in the ""MeanFlowIteration"" routine due to the change in the ""nZone"" variable value when using the time-spectral method. I tried a quick fix by updating ""nZone"" in main.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/171
https://github.com/su2code/SU2/issues/171:114,Availability,fault,fault,114,"Tried to run the time-spectral test case (v3.2.9) using the NACA64A010 aerofoil and got a segmentation fault. The fault occurs in the ""MeanFlowIteration"" routine due to the change in the ""nZone"" variable value when using the time-spectral method. I tried a quick fix by updating ""nZone"" in main.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/171
https://github.com/su2code/SU2/issues/171:154,Integrability,rout,routine,154,"Tried to run the time-spectral test case (v3.2.9) using the NACA64A010 aerofoil and got a segmentation fault. The fault occurs in the ""MeanFlowIteration"" routine due to the change in the ""nZone"" variable value when using the time-spectral method. I tried a quick fix by updating ""nZone"" in main.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/171
https://github.com/su2code/SU2/issues/171:195,Modifiability,variab,variable,195,"Tried to run the time-spectral test case (v3.2.9) using the NACA64A010 aerofoil and got a segmentation fault. The fault occurs in the ""MeanFlowIteration"" routine due to the change in the ""nZone"" variable value when using the time-spectral method. I tried a quick fix by updating ""nZone"" in main.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/171
https://github.com/su2code/SU2/issues/171:31,Testability,test,test,31,"Tried to run the time-spectral test case (v3.2.9) using the NACA64A010 aerofoil and got a segmentation fault. The fault occurs in the ""MeanFlowIteration"" routine due to the change in the ""nZone"" variable value when using the time-spectral method. I tried a quick fix by updating ""nZone"" in main.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/171
https://github.com/su2code/SU2/pull/172:320,Deployability,configurat,configuration,320,"Hello team,. I have done following changes,; - I have created Dockerfiles for Ubuntu and CentOS and included a Readme file for people to understand how to create and setup binaries to be used, based on this pull request [#169](https://github.com/su2code/SU2/pull/169) as per Heather's recommendation; - I also created a configuration file generator to aid people to quickly create a .cfg file and use them. It is a simple HTML page without anything to be installed. For more details, please read the README.md file checked in @ SU2_IDE/Configuration-gen location. Let me know if you have any questions. Krishna",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/172
https://github.com/su2code/SU2/pull/172:455,Deployability,install,installed,455,"Hello team,. I have done following changes,; - I have created Dockerfiles for Ubuntu and CentOS and included a Readme file for people to understand how to create and setup binaries to be used, based on this pull request [#169](https://github.com/su2code/SU2/pull/169) as per Heather's recommendation; - I also created a configuration file generator to aid people to quickly create a .cfg file and use them. It is a simple HTML page without anything to be installed. For more details, please read the README.md file checked in @ SU2_IDE/Configuration-gen location. Let me know if you have any questions. Krishna",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/172
https://github.com/su2code/SU2/pull/172:536,Deployability,Configurat,Configuration-gen,536,"Hello team,. I have done following changes,; - I have created Dockerfiles for Ubuntu and CentOS and included a Readme file for people to understand how to create and setup binaries to be used, based on this pull request [#169](https://github.com/su2code/SU2/pull/169) as per Heather's recommendation; - I also created a configuration file generator to aid people to quickly create a .cfg file and use them. It is a simple HTML page without anything to be installed. For more details, please read the README.md file checked in @ SU2_IDE/Configuration-gen location. Let me know if you have any questions. Krishna",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/172
https://github.com/su2code/SU2/pull/172:320,Modifiability,config,configuration,320,"Hello team,. I have done following changes,; - I have created Dockerfiles for Ubuntu and CentOS and included a Readme file for people to understand how to create and setup binaries to be used, based on this pull request [#169](https://github.com/su2code/SU2/pull/169) as per Heather's recommendation; - I also created a configuration file generator to aid people to quickly create a .cfg file and use them. It is a simple HTML page without anything to be installed. For more details, please read the README.md file checked in @ SU2_IDE/Configuration-gen location. Let me know if you have any questions. Krishna",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/172
https://github.com/su2code/SU2/pull/172:536,Modifiability,Config,Configuration-gen,536,"Hello team,. I have done following changes,; - I have created Dockerfiles for Ubuntu and CentOS and included a Readme file for people to understand how to create and setup binaries to be used, based on this pull request [#169](https://github.com/su2code/SU2/pull/169) as per Heather's recommendation; - I also created a configuration file generator to aid people to quickly create a .cfg file and use them. It is a simple HTML page without anything to be installed. For more details, please read the README.md file checked in @ SU2_IDE/Configuration-gen location. Let me know if you have any questions. Krishna",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/172
https://github.com/su2code/SU2/pull/172:415,Usability,simpl,simple,415,"Hello team,. I have done following changes,; - I have created Dockerfiles for Ubuntu and CentOS and included a Readme file for people to understand how to create and setup binaries to be used, based on this pull request [#169](https://github.com/su2code/SU2/pull/169) as per Heather's recommendation; - I also created a configuration file generator to aid people to quickly create a .cfg file and use them. It is a simple HTML page without anything to be installed. For more details, please read the README.md file checked in @ SU2_IDE/Configuration-gen location. Let me know if you have any questions. Krishna",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/172
https://github.com/su2code/SU2/issues/173:7,Availability,down,downloaded,7,I have downloaded most up to date version of SU2 and compiled for parallel. Analysis produced history etc. files successfully but no vtk plot files. I tested it on Quick folder with given example and there also it does not produce any plot files. I wonder if there is something I need to do to fix the issue.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/173
https://github.com/su2code/SU2/issues/173:151,Testability,test,tested,151,I have downloaded most up to date version of SU2 and compiled for parallel. Analysis produced history etc. files successfully but no vtk plot files. I tested it on Quick folder with given example and there also it does not produce any plot files. I wonder if there is something I need to do to fix the issue.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/173
https://github.com/su2code/SU2/pull/174:109,Testability,test,tests,109,Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/174
https://github.com/su2code/SU2/issues/175:253,Availability,error,error,253,"Tne2 using O2 gas model has a memory bug. N2 model as given in the TestCases folder works, but O2 model give bad_alloc or segfault before starting solver. . Thanks to:; http://www.cfd-online.com/Forums/su2/147743-changing-gas-model-tne-tutorial-results-error.html#post546080",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/175
https://github.com/su2code/SU2/issues/175:67,Testability,Test,TestCases,67,"Tne2 using O2 gas model has a memory bug. N2 model as given in the TestCases folder works, but O2 model give bad_alloc or segfault before starting solver. . Thanks to:; http://www.cfd-online.com/Forums/su2/147743-changing-gas-model-tne-tutorial-results-error.html#post546080",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/175
https://github.com/su2code/SU2/pull/176:15,Availability,mask,masks,15,fixed bug that masks config file errors as missing file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/176
https://github.com/su2code/SU2/pull/176:33,Availability,error,errors,33,fixed bug that masks config file errors as missing file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/176
https://github.com/su2code/SU2/pull/176:21,Modifiability,config,config,21,fixed bug that masks config file errors as missing file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/176
https://github.com/su2code/SU2/pull/178:0,Deployability,update,update,0,update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/178
https://github.com/su2code/SU2/issues/179:59,Testability,test,test,59,SU2_DOT seems to give wrong results. For example using the test case cont_adj_euler/naca0012.; Just use the continuous_adjoint.py script to test this.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/179
https://github.com/su2code/SU2/issues/179:140,Testability,test,test,140,SU2_DOT seems to give wrong results. For example using the test case cont_adj_euler/naca0012.; Just use the continuous_adjoint.py script to test this.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/179
https://github.com/su2code/SU2/issues/180:204,Usability,simpl,simply,204,"Hello,; In STAR-CCM+, it's enough to put an outward flow direction on a ""mass flow inlet"" condition to have a mass flow _outlet_.; I tried this with SU2 but the result was not expected (the mass flow was simply not the desired one).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/180
https://github.com/su2code/SU2/issues/181:673,Deployability,update,update,673,"Hello,. I wanted to put a given mass flow and given temperature at an inlet.; Here is the thread: http://www.cfd-online.com/Forums/su2/151385-mass-flow-inlet-given-temperature.html. My workaround was 1) to estimate the pressure (eg. p = p_inf), then 2) to use the perfect gas equation to get the density:; p = rho . Rs . T => rho = p / Rs / T; , thanks to which I could 3) get the velocity:; v = mass_flow / rho / S. Thanks to this, and because my case was quite simple, I could have somehow the desired temperature at my inlets. I think, though, that it would be nice to estimate the local pressure at each iteration, for example by averaging it on the boundary, so as to update the inlet density & velocity.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/181
https://github.com/su2code/SU2/issues/181:463,Usability,simpl,simple,463,"Hello,. I wanted to put a given mass flow and given temperature at an inlet.; Here is the thread: http://www.cfd-online.com/Forums/su2/151385-mass-flow-inlet-given-temperature.html. My workaround was 1) to estimate the pressure (eg. p = p_inf), then 2) to use the perfect gas equation to get the density:; p = rho . Rs . T => rho = p / Rs / T; , thanks to which I could 3) get the velocity:; v = mass_flow / rho / S. Thanks to this, and because my case was quite simple, I could have somehow the desired temperature at my inlets. I think, though, that it would be nice to estimate the local pressure at each iteration, for example by averaging it on the boundary, so as to update the inlet density & velocity.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/181
https://github.com/su2code/SU2/issues/183:318,Availability,error,error,318,"Let me begin by saying ""Thank you so, so much for your time and efforts to write SU2 and then distribute as open source!"" . I now wish to make a complaint -- as far as I can tell there is not even a command manual for SU2. I think this should be a requirement for SU2. Tutorials are not enough:. > SU2 includes strict error checking of the config file upon execution of one of the C++ modules. For example, the code **will throw errors if unknown options are specified**, options appear more than once, extra text appears outside of comments, etc. A user should be able to reference a single document to find command syntax and options. As an excercise, I ""tried"" to use a dd-ilut preconditioner with 2 submatrices, symmetric overlap, a drop-tolerance of 1e-4, and a fill of 1.3, with a GMRES solver utilizing a modified Gram-Schmidt orthoganolization, kspace of 30, and RCM reordering... SU2 failed. Ok, so I didn't _actually_ try to do this, but if I were to try this how would I know SU2 _couldn't_ use this? To fill in this exercise I accessed the Trilinos Aztec User Manual: https://trilinos.org/oldsite/packages/aztecoo/AztecOOUserGuide.pdf which, while it doesn't attempt to tell me _what_ a krylov subspace is, at least tells me that I can and how to use the argument _AZ_kspace_. Then as a user I can google _GMRES kspace_ to find the theory / explanation if I so choose. Can this be a thing? At least a text document with commands and allowed arguments?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/183
https://github.com/su2code/SU2/issues/183:429,Availability,error,errors,429,"Let me begin by saying ""Thank you so, so much for your time and efforts to write SU2 and then distribute as open source!"" . I now wish to make a complaint -- as far as I can tell there is not even a command manual for SU2. I think this should be a requirement for SU2. Tutorials are not enough:. > SU2 includes strict error checking of the config file upon execution of one of the C++ modules. For example, the code **will throw errors if unknown options are specified**, options appear more than once, extra text appears outside of comments, etc. A user should be able to reference a single document to find command syntax and options. As an excercise, I ""tried"" to use a dd-ilut preconditioner with 2 submatrices, symmetric overlap, a drop-tolerance of 1e-4, and a fill of 1.3, with a GMRES solver utilizing a modified Gram-Schmidt orthoganolization, kspace of 30, and RCM reordering... SU2 failed. Ok, so I didn't _actually_ try to do this, but if I were to try this how would I know SU2 _couldn't_ use this? To fill in this exercise I accessed the Trilinos Aztec User Manual: https://trilinos.org/oldsite/packages/aztecoo/AztecOOUserGuide.pdf which, while it doesn't attempt to tell me _what_ a krylov subspace is, at least tells me that I can and how to use the argument _AZ_kspace_. Then as a user I can google _GMRES kspace_ to find the theory / explanation if I so choose. Can this be a thing? At least a text document with commands and allowed arguments?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/183
https://github.com/su2code/SU2/issues/183:742,Availability,toler,tolerance,742,"Let me begin by saying ""Thank you so, so much for your time and efforts to write SU2 and then distribute as open source!"" . I now wish to make a complaint -- as far as I can tell there is not even a command manual for SU2. I think this should be a requirement for SU2. Tutorials are not enough:. > SU2 includes strict error checking of the config file upon execution of one of the C++ modules. For example, the code **will throw errors if unknown options are specified**, options appear more than once, extra text appears outside of comments, etc. A user should be able to reference a single document to find command syntax and options. As an excercise, I ""tried"" to use a dd-ilut preconditioner with 2 submatrices, symmetric overlap, a drop-tolerance of 1e-4, and a fill of 1.3, with a GMRES solver utilizing a modified Gram-Schmidt orthoganolization, kspace of 30, and RCM reordering... SU2 failed. Ok, so I didn't _actually_ try to do this, but if I were to try this how would I know SU2 _couldn't_ use this? To fill in this exercise I accessed the Trilinos Aztec User Manual: https://trilinos.org/oldsite/packages/aztecoo/AztecOOUserGuide.pdf which, while it doesn't attempt to tell me _what_ a krylov subspace is, at least tells me that I can and how to use the argument _AZ_kspace_. Then as a user I can google _GMRES kspace_ to find the theory / explanation if I so choose. Can this be a thing? At least a text document with commands and allowed arguments?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/183
https://github.com/su2code/SU2/issues/183:340,Modifiability,config,config,340,"Let me begin by saying ""Thank you so, so much for your time and efforts to write SU2 and then distribute as open source!"" . I now wish to make a complaint -- as far as I can tell there is not even a command manual for SU2. I think this should be a requirement for SU2. Tutorials are not enough:. > SU2 includes strict error checking of the config file upon execution of one of the C++ modules. For example, the code **will throw errors if unknown options are specified**, options appear more than once, extra text appears outside of comments, etc. A user should be able to reference a single document to find command syntax and options. As an excercise, I ""tried"" to use a dd-ilut preconditioner with 2 submatrices, symmetric overlap, a drop-tolerance of 1e-4, and a fill of 1.3, with a GMRES solver utilizing a modified Gram-Schmidt orthoganolization, kspace of 30, and RCM reordering... SU2 failed. Ok, so I didn't _actually_ try to do this, but if I were to try this how would I know SU2 _couldn't_ use this? To fill in this exercise I accessed the Trilinos Aztec User Manual: https://trilinos.org/oldsite/packages/aztecoo/AztecOOUserGuide.pdf which, while it doesn't attempt to tell me _what_ a krylov subspace is, at least tells me that I can and how to use the argument _AZ_kspace_. Then as a user I can google _GMRES kspace_ to find the theory / explanation if I so choose. Can this be a thing? At least a text document with commands and allowed arguments?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/183
https://github.com/su2code/SU2/issues/183:1039,Security,access,accessed,1039,"Let me begin by saying ""Thank you so, so much for your time and efforts to write SU2 and then distribute as open source!"" . I now wish to make a complaint -- as far as I can tell there is not even a command manual for SU2. I think this should be a requirement for SU2. Tutorials are not enough:. > SU2 includes strict error checking of the config file upon execution of one of the C++ modules. For example, the code **will throw errors if unknown options are specified**, options appear more than once, extra text appears outside of comments, etc. A user should be able to reference a single document to find command syntax and options. As an excercise, I ""tried"" to use a dd-ilut preconditioner with 2 submatrices, symmetric overlap, a drop-tolerance of 1e-4, and a fill of 1.3, with a GMRES solver utilizing a modified Gram-Schmidt orthoganolization, kspace of 30, and RCM reordering... SU2 failed. Ok, so I didn't _actually_ try to do this, but if I were to try this how would I know SU2 _couldn't_ use this? To fill in this exercise I accessed the Trilinos Aztec User Manual: https://trilinos.org/oldsite/packages/aztecoo/AztecOOUserGuide.pdf which, while it doesn't attempt to tell me _what_ a krylov subspace is, at least tells me that I can and how to use the argument _AZ_kspace_. Then as a user I can google _GMRES kspace_ to find the theory / explanation if I so choose. Can this be a thing? At least a text document with commands and allowed arguments?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/183
https://github.com/su2code/SU2/pull/184:70,Deployability,update,updated,70,"Hey Guys,. I fixed the Riemann BC to work also with grid movement and updated the entropy fix of the GeneralRoe scheme. The testcases failing are only the ones in the folder nicf (as expected). After the merge i will update the value of the regression tests!. cheers!!!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/184
https://github.com/su2code/SU2/pull/184:217,Deployability,update,update,217,"Hey Guys,. I fixed the Riemann BC to work also with grid movement and updated the entropy fix of the GeneralRoe scheme. The testcases failing are only the ones in the folder nicf (as expected). After the merge i will update the value of the regression tests!. cheers!!!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/184
https://github.com/su2code/SU2/pull/184:124,Testability,test,testcases,124,"Hey Guys,. I fixed the Riemann BC to work also with grid movement and updated the entropy fix of the GeneralRoe scheme. The testcases failing are only the ones in the folder nicf (as expected). After the merge i will update the value of the regression tests!. cheers!!!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/184
https://github.com/su2code/SU2/pull/184:252,Testability,test,tests,252,"Hey Guys,. I fixed the Riemann BC to work also with grid movement and updated the entropy fix of the GeneralRoe scheme. The testcases failing are only the ones in the folder nicf (as expected). After the merge i will update the value of the regression tests!. cheers!!!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/184
https://github.com/su2code/SU2/pull/185:195,Deployability,continuous,continuous,195,"This is the first of a number of important changes to make way for the discrete adjoint framework. With this change, one must use CONTINUOUS_ADJOINT instead of ADJOINT in config files to run the continuous adjoint problem. Contains all necessary changes to the C++ and Python source.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/185
https://github.com/su2code/SU2/pull/185:171,Modifiability,config,config,171,"This is the first of a number of important changes to make way for the discrete adjoint framework. With this change, one must use CONTINUOUS_ADJOINT instead of ADJOINT in config files to run the continuous adjoint problem. Contains all necessary changes to the C++ and Python source.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/185
https://github.com/su2code/SU2/pull/187:157,Deployability,update,updated,157,"recently (in develop) scale/rotate/translate were changed to do volume deformations (aka, all at once and not requiring a linear elasticity solve to get the updated volume mesh). This branch includes changes to allow scaling, translating, or rotating only a surface w/in the volume. If all markers are included in the deformation, it returns to the all-at-once volume deformation. . Hypothetically this should allow multi-body movements (as in, rotating a control surface) while maintaining the more efficient volume deformation for operations like scaling the mesh.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/187
https://github.com/su2code/SU2/pull/187:500,Energy Efficiency,efficient,efficient,500,"recently (in develop) scale/rotate/translate were changed to do volume deformations (aka, all at once and not requiring a linear elasticity solve to get the updated volume mesh). This branch includes changes to allow scaling, translating, or rotating only a surface w/in the volume. If all markers are included in the deformation, it returns to the all-at-once volume deformation. . Hypothetically this should allow multi-body movements (as in, rotating a control surface) while maintaining the more efficient volume deformation for operations like scaling the mesh.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/187
https://github.com/su2code/SU2/pull/188:240,Integrability,interface,interface,240,"Supersonic outflow non reflecting boundary condition has been implemented and tested in this branch. The implementation follow the approach proposed by Giles. This was a mandatory preparatory step for the implementation of the mixing plane interface, that is needed for the simulation of multi-stages turbine. cheers",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/188
https://github.com/su2code/SU2/pull/188:78,Testability,test,tested,78,"Supersonic outflow non reflecting boundary condition has been implemented and tested in this branch. The implementation follow the approach proposed by Giles. This was a mandatory preparatory step for the implementation of the mixing plane interface, that is needed for the simulation of multi-stages turbine. cheers",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/188
https://github.com/su2code/SU2/pull/189:327,Integrability,interface,interface,327,"First of all, my apologies for the mistake in creating the pull request to the master. Supersonic outflow non reflecting boundary condition has been implemented and tested in this branch. The implementation follow the approach proposed by Giles. This was a mandatory preparatory step for the implementation of the mixing plane interface, that is needed for the simulations of multi-stage turbines and compressors. cheers",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/189
https://github.com/su2code/SU2/pull/189:165,Testability,test,tested,165,"First of all, my apologies for the mistake in creating the pull request to the master. Supersonic outflow non reflecting boundary condition has been implemented and tested in this branch. The implementation follow the approach proposed by Giles. This was a mandatory preparatory step for the implementation of the mixing plane interface, that is needed for the simulations of multi-stage turbines and compressors. cheers",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/189
https://github.com/su2code/SU2/pull/190:904,Availability,avail,available,904,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:172,Deployability,update,update,172,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:1057,Deployability,install,install,1057,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:48,Modifiability,config,config,48,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:185,Modifiability,config,config,185,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:1039,Modifiability,config,configure,1039,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:21,Testability,test,test,21,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:122,Testability,Test,TestCases,122,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:411,Testability,Test,TestCases,411,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:493,Testability,test,test,493,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:676,Testability,test,test,676,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:809,Testability,test,test,809,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:1009,Testability,Test,TestCases,1009,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:1077,Testability,Test,TestCases,1077,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:1091,Testability,Test,TestCases,1091,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:1110,Testability,Test,TestCases,1110,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/190:1272,Testability,test,test,1272,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/190
https://github.com/su2code/SU2/pull/192:6,Testability,Test,Test,6,Added Test Cases for discrete adjoint and a couple of other changes to the preconfiguration.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/192
https://github.com/su2code/SU2/issues/193:1638,Availability,Error,Error,1638,"IGID_ROTATION, RIGID_PITCHING); GRID_MOVEMENT_KIND= DEFORMING; %; MARKER_MOVING = ( airfoil); %; % Coordinates of the motion origin; MOTION_ORIGIN_X= 0.25; MOTION_ORIGIN_Y= 0.0; MOTION_ORIGIN_Z= 0.0; %; % Pitching angular freq. (rad/s) about the motion origin; PITCHING_OMEGA_X= 0.0 ; PITCHING_OMEGA_Y= 0.0; PITCHING_OMEGA_Z= 106.69842; %; % Pitching amplitude (degrees) about the motion origin; PITCHING_AMPL_X= 0.0; PITCHING_AMPL_Y= 0.0; PITCHING_AMPL_Z= 30; %; % Pitching phase offset (degrees) about the motion origin; PITCHING_PHASE_X= 0.0; PITCHING_PHASE_Y= 0.0; PITCHING_PHASE_Z= 0.0; ```. When running this cfg file, the terminal prints. ```; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 8.19188e+48) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; Non-linear iter.: 1/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Non-linear iter.: 2/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Storing rotati",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:1767,Availability,Error,Error,1767,"in; MOTION_ORIGIN_X= 0.25; MOTION_ORIGIN_Y= 0.0; MOTION_ORIGIN_Z= 0.0; %; % Pitching angular freq. (rad/s) about the motion origin; PITCHING_OMEGA_X= 0.0 ; PITCHING_OMEGA_Y= 0.0; PITCHING_OMEGA_Z= 106.69842; %; % Pitching amplitude (degrees) about the motion origin; PITCHING_AMPL_X= 0.0; PITCHING_AMPL_Y= 0.0; PITCHING_AMPL_Z= 30; %; % Pitching phase offset (degrees) about the motion origin; PITCHING_PHASE_X= 0.0; PITCHING_PHASE_Y= 0.0; PITCHING_PHASE_Z= 0.0; ```. When running this cfg file, the terminal prints. ```; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 8.19188e+48) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; Non-linear iter.: 1/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Non-linear iter.: 2/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:2054,Availability,Error,Error,2054,"; PITCHING_AMPL_Y= 0.0; PITCHING_AMPL_Z= 30; %; % Pitching phase offset (degrees) about the motion origin; PITCHING_PHASE_X= 0.0; PITCHING_PHASE_Y= 0.0; PITCHING_PHASE_Z= 0.0; ```. When running this cfg file, the terminal prints. ```; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 8.19188e+48) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; Non-linear iter.: 1/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Non-linear iter.: 2/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:2183,Availability,Error,Error,2183," PITCHING_PHASE_Y= 0.0; PITCHING_PHASE_Z= 0.0; ```. When running this cfg file, the terminal prints. ```; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 8.19188e+48) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; Non-linear iter.: 1/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Non-linear iter.: 2/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:2521,Availability,Error,Error,2521,"olve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 8.19188e+48) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; Non-linear iter.: 1/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Non-linear iter.: 2/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or fre",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:2607,Availability,Error,Error,2607,"0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 8.19188e+48) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; Non-linear iter.: 1/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Non-linear iter.: 2/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference veloc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:2889,Availability,Error,Error,2889,", 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 8.19188e+48) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; Non-linear iter.: 1/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Non-linear iter.: 2/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeSt",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:3018,Availability,Error,Error,3018,"er.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 8.19188e+48) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; Non-linear iter.: 1/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Non-linear iter.: 2/2. Linear iter.: 92. Min. area: 5.37582e-07. Error: 1.20232e-27.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStrea",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:4788,Availability,error,errors,4788,"FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing pitching ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:5177,Availability,Error,Error,5177,"have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 106.698) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-lin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:5306,Availability,Error,Error,5306,"ef = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 106.698) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing rotating displacement for marker: airfoil.; Angular v",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:5593,Availability,Error,Error,5593,"ig->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 106.698) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:5722,Availability,Error,Error,5722,", terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 106.698) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Computing grid velocities by finite differencing.; Segmentation fault. ```. ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:6109,Availability,Error,Error,6109,"requency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 106.698) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Computing grid velocities by finite differencing.; Segmentation fault. ```. Could you fix this bug?. Best regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:6238,Availability,Error,Error,6238,"requency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 106.698) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Computing grid velocities by finite differencing.; Segmentation fault. ```. Could you fix this bug?. Best regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:6510,Availability,Error,Error,6510,"requency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 106.698) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Computing grid velocities by finite differencing.; Segmentation fault. ```. Could you fix this bug?. Best regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:6639,Availability,Error,Error,6639,"requency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 106.698) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Computing grid velocities by finite differencing.; Segmentation fault. ```. Could you fix this bug?. Best regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:6714,Availability,fault,fault,6714,"requency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing pitching displacement for marker: airfoil.; Pitching frequency: (0, 0, 106.698) rad/s about origin: (0.25, 0, 0).; Pitching amplitude about origin: (0, 0, 30) degrees.; Pitching phase lag about origin: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing rotating displacement for marker: airfoil.; Angular velocity: (0, 0, 0) rad/s about origin: (0.25, 0, 0).; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Computing grid velocities by finite differencing.; Segmentation fault. ```. Could you fix this bug?. Best regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:4208,Energy Efficiency,meter,meters,4208,"is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. E",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:3709,Modifiability,config,config,3709,"ysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:3784,Modifiability,config,config,3784,"ysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:3901,Modifiability,config,config,3901,"-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating di",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:3940,Modifiability,config,config,3940,"-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating di",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:4026,Modifiability,config,config,4026,"-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating di",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:4235,Modifiability,config,config,4235,"; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:4265,Modifiability,config,config,4265,"; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:4335,Modifiability,config,config,4335,"; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:4407,Modifiability,config,config,4407,"; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:4503,Modifiability,config,config,4503,"; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:4593,Modifiability,config,config,4593,"; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/issues/193:218,Testability,test,testcases,218,"Hi, SU2 developers,. I recently working on the flapping wing using SU2. Since the Mach number is much smaller than 0.3, I use the incompressible solver with pitching mesh deformation to simulate the flapping. . In the testcases folder, you guys provide the plunging of NACA0012 in compressible NS flow. I modified it into pitching of NACA0012 in incompressible NS flow by adding and changing keywords:. ``` matlab; REGIME_TYPE = INCOMPRESSIBLE; % ----------------------- DYNAMIC MESH DEFINITION -----------------------------%; %; % Mesh motion for unsteady simulations (NO, YES); GRID_MOVEMENT= YES; %; % Type of mesh motion (NONE, FLUTTER, RIGID_ROTATION, RIGID_PITCHING); GRID_MOVEMENT_KIND= DEFORMING; %; MARKER_MOVING = ( airfoil); %; % Coordinates of the motion origin; MOTION_ORIGIN_X= 0.25; MOTION_ORIGIN_Y= 0.0; MOTION_ORIGIN_Z= 0.0; %; % Pitching angular freq. (rad/s) about the motion origin; PITCHING_OMEGA_X= 0.0 ; PITCHING_OMEGA_Y= 0.0; PITCHING_OMEGA_Z= 106.69842; %; % Pitching amplitude (degrees) about the motion origin; PITCHING_AMPL_X= 0.0; PITCHING_AMPL_Y= 0.0; PITCHING_AMPL_Z= 30; %; % Pitching phase offset (degrees) about the motion origin; PITCHING_PHASE_X= 0.0; PITCHING_PHASE_Y= 0.0; PITCHING_PHASE_Z= 0.0; ```. When running this cfg file, the terminal prints. ```; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/193
https://github.com/su2code/SU2/pull/194:119,Modifiability,config,config,119,"Dear all,; SU2 now prints N restart file for each of the zone, of course if a multizone flow problem is run. If in the config file we specify something like this. % Output file restart flow; RESTART_FLOW_FILENAME= restart_flow.dat. It will automatically create nZone restart file:; ""restart_flow_0.dat "" ""restart_flow_1.dat"" .... ""restart_flow_N.dat"". Nothing changed also for the input restart file. We can still specify a single solution file . % Restart flow input file; SOLUTION_FLOW_FILENAME= restart_flow.dat. and it automatically crate the numbered file using the root = restart_flow. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/194
https://github.com/su2code/SU2/pull/195:179,Integrability,depend,dependencies,179,"Note: moving solver_, numerics_, integration_preprocessing to driver.cpp not only possible, but necessary because if they are left in definition_structure.cpp there are recursive dependencies. (with driver_preprocessing)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/195
https://github.com/su2code/SU2/pull/196:835,Deployability,update,update,835,"This is a first complete implementation of the new CDriver and CIteration classes. More info to come soon via email assuming the tests pass. . Still to do:; - Consider moving geometry preprocessing into CDriver constructor from SU2_CFD.cpp; - Remove MeanFlowIteration() function in iteration_structure.cpp, which is still being used by CDiscAdjMeanFlowIteration->Iterate(); - Find new home for remainder of iteration_structure.cpp functions, such as grid movement (likely CMeanFlowIteration for that one, for example); - Decompose Iterate() routines for different physics to take advantage of the other CIteration() methods; - Move ""zone"" loops up out of the Iterate() methods, as CMultiZoneDriver should manage this now; - In the previous bullet, take care to correctly move the time spectral routines in iteration_structure.cpp that update all zones",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/196
https://github.com/su2code/SU2/pull/196:541,Integrability,rout,routines,541,"This is a first complete implementation of the new CDriver and CIteration classes. More info to come soon via email assuming the tests pass. . Still to do:; - Consider moving geometry preprocessing into CDriver constructor from SU2_CFD.cpp; - Remove MeanFlowIteration() function in iteration_structure.cpp, which is still being used by CDiscAdjMeanFlowIteration->Iterate(); - Find new home for remainder of iteration_structure.cpp functions, such as grid movement (likely CMeanFlowIteration for that one, for example); - Decompose Iterate() routines for different physics to take advantage of the other CIteration() methods; - Move ""zone"" loops up out of the Iterate() methods, as CMultiZoneDriver should manage this now; - In the previous bullet, take care to correctly move the time spectral routines in iteration_structure.cpp that update all zones",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/196
https://github.com/su2code/SU2/pull/196:794,Integrability,rout,routines,794,"This is a first complete implementation of the new CDriver and CIteration classes. More info to come soon via email assuming the tests pass. . Still to do:; - Consider moving geometry preprocessing into CDriver constructor from SU2_CFD.cpp; - Remove MeanFlowIteration() function in iteration_structure.cpp, which is still being used by CDiscAdjMeanFlowIteration->Iterate(); - Find new home for remainder of iteration_structure.cpp functions, such as grid movement (likely CMeanFlowIteration for that one, for example); - Decompose Iterate() routines for different physics to take advantage of the other CIteration() methods; - Move ""zone"" loops up out of the Iterate() methods, as CMultiZoneDriver should manage this now; - In the previous bullet, take care to correctly move the time spectral routines in iteration_structure.cpp that update all zones",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/196
https://github.com/su2code/SU2/pull/196:129,Testability,test,tests,129,"This is a first complete implementation of the new CDriver and CIteration classes. More info to come soon via email assuming the tests pass. . Still to do:; - Consider moving geometry preprocessing into CDriver constructor from SU2_CFD.cpp; - Remove MeanFlowIteration() function in iteration_structure.cpp, which is still being used by CDiscAdjMeanFlowIteration->Iterate(); - Find new home for remainder of iteration_structure.cpp functions, such as grid movement (likely CMeanFlowIteration for that one, for example); - Decompose Iterate() routines for different physics to take advantage of the other CIteration() methods; - Move ""zone"" loops up out of the Iterate() methods, as CMultiZoneDriver should manage this now; - In the previous bullet, take care to correctly move the time spectral routines in iteration_structure.cpp that update all zones",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/196
https://github.com/su2code/SU2/issues/197:129,Availability,error,error,129,It seems `int totalNumParameters;` has been deleted from the line #205 in _numerics_machine_learning_ header which brings up the error: `‘class CNeurNet’ has no member named ‘totalNumParameters’` in version _4.0.1_ while configuring the suit with Jsoncpp options. I just add it back.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/197
https://github.com/su2code/SU2/issues/197:221,Modifiability,config,configuring,221,It seems `int totalNumParameters;` has been deleted from the line #205 in _numerics_machine_learning_ header which brings up the error: `‘class CNeurNet’ has no member named ‘totalNumParameters’` in version _4.0.1_ while configuring the suit with Jsoncpp options. I just add it back.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/197
https://github.com/su2code/SU2/pull/199:5,Modifiability,refactor,refactoring,5,"More refactoring, fixes, and new features related to CDriver and CIteration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/199
https://github.com/su2code/SU2/pull/200:340,Energy Efficiency,allocate,allocated,340,"Dear all,. I was having some memory issues when running FSI problems using the code in my branch. In particular, when running unsteady F-S simulations (which also subiterate internally on each time step) a big amount of memory was being used, and kept increasing as the simulation moved on. I found out that new spaces in memory were being allocated every time I was updating the mesh using the volumetric movement structure, this is, every subiteration. This lead to a very big amount of memory being used. In my particular case, this problem may be solved by initializing the LinSysSol, LinSysRes and StiffMatrix in the constructor of the CVolumetricMovement class, as opposed to doing so in the function SetVolume_Deformation(). . I changed this into the branch feature_FSI_FEA, and then committed and pushed the changes. Nevertheless, I considered that these changes may affect some of your work, so instead of carrying the modification along with all the other changes in my branch, I think it is better to create a pull request now and make sure it doesn't affect negatively anybody else's work. Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/200
https://github.com/su2code/SU2/pull/201:973,Availability,error,error,973,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/201
https://github.com/su2code/SU2/pull/201:1454,Availability,mainten,maintenance,1454,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/201
https://github.com/su2code/SU2/pull/201:256,Deployability,continuous,continuous,256,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/201
https://github.com/su2code/SU2/pull/201:530,Deployability,update,updated,530,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/201
https://github.com/su2code/SU2/pull/201:873,Integrability,depend,depend,873,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/201
https://github.com/su2code/SU2/pull/201:1208,Integrability,rout,routine,1208,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/201
https://github.com/su2code/SU2/pull/201:1232,Integrability,rout,routine,1232,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/201
https://github.com/su2code/SU2/pull/201:1177,Modifiability,variab,variables,1177,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/201
https://github.com/su2code/SU2/pull/201:1334,Modifiability,coupling,coupling,1334,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/201
https://github.com/su2code/SU2/pull/201:1369,Modifiability,variab,variables,1369,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/201
https://github.com/su2code/SU2/pull/201:1058,Performance,perform,performance,1058,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/201
https://github.com/su2code/SU2/pull/204:298,Modifiability,config,config,298,"If 'downstream_function.py' is put in the run directory, whatever function is defined there will be used by finite_differences.py and continuous_adjoint.py with newly implemented boundary conditions that allow passing in gradients from an external function (or defined manually as constants in the config file). ; These are accessed with the ""OUTLET_CHAIN_RULE"" objective and can also be used with optimization. Other changes:; - addition of downstream_function.py in SU2_PY folder: if used this should be copied to the run directory and modified to contain whatever function of interest you want. Limited to quasi 1D functions for now.; - back pressure sensitivity output to screen and convergence history if an outflow-based objective is specified (average pressure, outlet-chain-rule, etc); - 2D symmetry plan now allows movement in the direction of the symmetry line (previously deformations intersecting a symmetry plane resulted in undesired deformations)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/204
https://github.com/su2code/SU2/pull/204:398,Performance,optimiz,optimization,398,"If 'downstream_function.py' is put in the run directory, whatever function is defined there will be used by finite_differences.py and continuous_adjoint.py with newly implemented boundary conditions that allow passing in gradients from an external function (or defined manually as constants in the config file). ; These are accessed with the ""OUTLET_CHAIN_RULE"" objective and can also be used with optimization. Other changes:; - addition of downstream_function.py in SU2_PY folder: if used this should be copied to the run directory and modified to contain whatever function of interest you want. Limited to quasi 1D functions for now.; - back pressure sensitivity output to screen and convergence history if an outflow-based objective is specified (average pressure, outlet-chain-rule, etc); - 2D symmetry plan now allows movement in the direction of the symmetry line (previously deformations intersecting a symmetry plane resulted in undesired deformations)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/204
https://github.com/su2code/SU2/pull/204:324,Security,access,accessed,324,"If 'downstream_function.py' is put in the run directory, whatever function is defined there will be used by finite_differences.py and continuous_adjoint.py with newly implemented boundary conditions that allow passing in gradients from an external function (or defined manually as constants in the config file). ; These are accessed with the ""OUTLET_CHAIN_RULE"" objective and can also be used with optimization. Other changes:; - addition of downstream_function.py in SU2_PY folder: if used this should be copied to the run directory and modified to contain whatever function of interest you want. Limited to quasi 1D functions for now.; - back pressure sensitivity output to screen and convergence history if an outflow-based objective is specified (average pressure, outlet-chain-rule, etc); - 2D symmetry plan now allows movement in the direction of the symmetry line (previously deformations intersecting a symmetry plane resulted in undesired deformations)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/204
https://github.com/su2code/SU2/pull/205:294,Availability,error,error,294,"As the name of the pull request already says it, i fixed the full MG and low fidelity simulation when using RANS. The turbulence model is now solved also only on the current finest mesh. . I don't know if this will be useful, but I think it makes more sense this way instead of just getting an error.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/205
https://github.com/su2code/SU2/pull/207:192,Integrability,Interface,Interface,192,"With this branch some turbomachinery capabilities have been added to the code. The main features are:; -Supersonic outlet Non Reflecting BC; -Conservative and Non-Conservative 2D Mixing-Plane Interface; -2D Turbomachinery performances calcualation for single blade, stage and multi-stage geometry. This will be soon used to derive a Discrete Adjoint using as OF turbomachinery performance.; - restart_file for multizone flow simulation . I ve created a turbomachinery folder in the TestCase folder with two new testcases in which these new capabilities can be tested. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/207
https://github.com/su2code/SU2/pull/207:222,Performance,perform,performances,222,"With this branch some turbomachinery capabilities have been added to the code. The main features are:; -Supersonic outlet Non Reflecting BC; -Conservative and Non-Conservative 2D Mixing-Plane Interface; -2D Turbomachinery performances calcualation for single blade, stage and multi-stage geometry. This will be soon used to derive a Discrete Adjoint using as OF turbomachinery performance.; - restart_file for multizone flow simulation . I ve created a turbomachinery folder in the TestCase folder with two new testcases in which these new capabilities can be tested. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/207
https://github.com/su2code/SU2/pull/207:377,Performance,perform,performance,377,"With this branch some turbomachinery capabilities have been added to the code. The main features are:; -Supersonic outlet Non Reflecting BC; -Conservative and Non-Conservative 2D Mixing-Plane Interface; -2D Turbomachinery performances calcualation for single blade, stage and multi-stage geometry. This will be soon used to derive a Discrete Adjoint using as OF turbomachinery performance.; - restart_file for multizone flow simulation . I ve created a turbomachinery folder in the TestCase folder with two new testcases in which these new capabilities can be tested. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/207
https://github.com/su2code/SU2/pull/207:482,Testability,Test,TestCase,482,"With this branch some turbomachinery capabilities have been added to the code. The main features are:; -Supersonic outlet Non Reflecting BC; -Conservative and Non-Conservative 2D Mixing-Plane Interface; -2D Turbomachinery performances calcualation for single blade, stage and multi-stage geometry. This will be soon used to derive a Discrete Adjoint using as OF turbomachinery performance.; - restart_file for multizone flow simulation . I ve created a turbomachinery folder in the TestCase folder with two new testcases in which these new capabilities can be tested. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/207
https://github.com/su2code/SU2/pull/207:511,Testability,test,testcases,511,"With this branch some turbomachinery capabilities have been added to the code. The main features are:; -Supersonic outlet Non Reflecting BC; -Conservative and Non-Conservative 2D Mixing-Plane Interface; -2D Turbomachinery performances calcualation for single blade, stage and multi-stage geometry. This will be soon used to derive a Discrete Adjoint using as OF turbomachinery performance.; - restart_file for multizone flow simulation . I ve created a turbomachinery folder in the TestCase folder with two new testcases in which these new capabilities can be tested. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/207
https://github.com/su2code/SU2/pull/207:560,Testability,test,tested,560,"With this branch some turbomachinery capabilities have been added to the code. The main features are:; -Supersonic outlet Non Reflecting BC; -Conservative and Non-Conservative 2D Mixing-Plane Interface; -2D Turbomachinery performances calcualation for single blade, stage and multi-stage geometry. This will be soon used to derive a Discrete Adjoint using as OF turbomachinery performance.; - restart_file for multizone flow simulation . I ve created a turbomachinery folder in the TestCase folder with two new testcases in which these new capabilities can be tested. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/207
https://github.com/su2code/SU2/pull/208:241,Availability,recover,recover,241,"Hi,. As in previous years, I have performed an extensive cleaning of SU2 for the sake of code clearness, memory optimization and speed. Remember that nothing has been permanently removed from the git server and I encourage the developers to recover some of the removed code as a branch and continue working on it. Obviously, I have been very careful to do not remove any active implementation. I have also fixed some bugs and issues with the C++ compilation under Windows. Now, it should be a straightforward process. Thanks,; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/208
https://github.com/su2code/SU2/pull/208:34,Performance,perform,performed,34,"Hi,. As in previous years, I have performed an extensive cleaning of SU2 for the sake of code clearness, memory optimization and speed. Remember that nothing has been permanently removed from the git server and I encourage the developers to recover some of the removed code as a branch and continue working on it. Obviously, I have been very careful to do not remove any active implementation. I have also fixed some bugs and issues with the C++ compilation under Windows. Now, it should be a straightforward process. Thanks,; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/208
https://github.com/su2code/SU2/pull/208:112,Performance,optimiz,optimization,112,"Hi,. As in previous years, I have performed an extensive cleaning of SU2 for the sake of code clearness, memory optimization and speed. Remember that nothing has been permanently removed from the git server and I encourage the developers to recover some of the removed code as a branch and continue working on it. Obviously, I have been very careful to do not remove any active implementation. I have also fixed some bugs and issues with the C++ compilation under Windows. Now, it should be a straightforward process. Thanks,; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/208
https://github.com/su2code/SU2/pull/208:241,Safety,recover,recover,241,"Hi,. As in previous years, I have performed an extensive cleaning of SU2 for the sake of code clearness, memory optimization and speed. Remember that nothing has been permanently removed from the git server and I encourage the developers to recover some of the removed code as a branch and continue working on it. Obviously, I have been very careful to do not remove any active implementation. I have also fixed some bugs and issues with the C++ compilation under Windows. Now, it should be a straightforward process. Thanks,; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/208
https://github.com/su2code/SU2/pull/208:94,Usability,clear,clearness,94,"Hi,. As in previous years, I have performed an extensive cleaning of SU2 for the sake of code clearness, memory optimization and speed. Remember that nothing has been permanently removed from the git server and I encourage the developers to recover some of the removed code as a branch and continue working on it. Obviously, I have been very careful to do not remove any active implementation. I have also fixed some bugs and issues with the C++ compilation under Windows. Now, it should be a straightforward process. Thanks,; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/208
https://github.com/su2code/SU2/pull/209:359,Modifiability,variab,variables,359,In this branch the HLLC algorithm has been generalized to Non-Ideal flows so that now it can be used with more complex equations of state. Computation on nicfd LS89 test case with Van der Waals eos show quite similar Cd/Cl predicted values. Furthermore I cleaned up a little bit the original CUpwHLLC_Flow::ComputeResidual: there were some redundancies (some variables were computed twice). I also made changes that in my opinion improve code readability. Regression tests (for the original HLLC) passed on my PC with a difference of 1E-6 on RhoE residual (slight differences were anyway expected). A couple of bugs fixed. Cheers ; Giulio,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/209
https://github.com/su2code/SU2/pull/209:223,Safety,predict,predicted,223,In this branch the HLLC algorithm has been generalized to Non-Ideal flows so that now it can be used with more complex equations of state. Computation on nicfd LS89 test case with Van der Waals eos show quite similar Cd/Cl predicted values. Furthermore I cleaned up a little bit the original CUpwHLLC_Flow::ComputeResidual: there were some redundancies (some variables were computed twice). I also made changes that in my opinion improve code readability. Regression tests (for the original HLLC) passed on my PC with a difference of 1E-6 on RhoE residual (slight differences were anyway expected). A couple of bugs fixed. Cheers ; Giulio,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/209
https://github.com/su2code/SU2/pull/209:340,Safety,redund,redundancies,340,In this branch the HLLC algorithm has been generalized to Non-Ideal flows so that now it can be used with more complex equations of state. Computation on nicfd LS89 test case with Van der Waals eos show quite similar Cd/Cl predicted values. Furthermore I cleaned up a little bit the original CUpwHLLC_Flow::ComputeResidual: there were some redundancies (some variables were computed twice). I also made changes that in my opinion improve code readability. Regression tests (for the original HLLC) passed on my PC with a difference of 1E-6 on RhoE residual (slight differences were anyway expected). A couple of bugs fixed. Cheers ; Giulio,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/209
https://github.com/su2code/SU2/pull/209:165,Testability,test,test,165,In this branch the HLLC algorithm has been generalized to Non-Ideal flows so that now it can be used with more complex equations of state. Computation on nicfd LS89 test case with Van der Waals eos show quite similar Cd/Cl predicted values. Furthermore I cleaned up a little bit the original CUpwHLLC_Flow::ComputeResidual: there were some redundancies (some variables were computed twice). I also made changes that in my opinion improve code readability. Regression tests (for the original HLLC) passed on my PC with a difference of 1E-6 on RhoE residual (slight differences were anyway expected). A couple of bugs fixed. Cheers ; Giulio,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/209
https://github.com/su2code/SU2/pull/209:467,Testability,test,tests,467,In this branch the HLLC algorithm has been generalized to Non-Ideal flows so that now it can be used with more complex equations of state. Computation on nicfd LS89 test case with Van der Waals eos show quite similar Cd/Cl predicted values. Furthermore I cleaned up a little bit the original CUpwHLLC_Flow::ComputeResidual: there were some redundancies (some variables were computed twice). I also made changes that in my opinion improve code readability. Regression tests (for the original HLLC) passed on my PC with a difference of 1E-6 on RhoE residual (slight differences were anyway expected). A couple of bugs fixed. Cheers ; Giulio,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/209
https://github.com/su2code/SU2/issues/210:287,Integrability,rout,routines,287,I noticed that it is not possible to run an optimization of a case where you have FFD design variables and periodic boundaries defined. It seems like that SU2_DEF is not correctly writing out the periodic information to the new mesh file. I think the problem is that there are different routines responsible for writing the FDD information and the periodic information.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/210
https://github.com/su2code/SU2/issues/210:93,Modifiability,variab,variables,93,I noticed that it is not possible to run an optimization of a case where you have FFD design variables and periodic boundaries defined. It seems like that SU2_DEF is not correctly writing out the periodic information to the new mesh file. I think the problem is that there are different routines responsible for writing the FDD information and the periodic information.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/210
https://github.com/su2code/SU2/issues/210:44,Performance,optimiz,optimization,44,I noticed that it is not possible to run an optimization of a case where you have FFD design variables and periodic boundaries defined. It seems like that SU2_DEF is not correctly writing out the periodic information to the new mesh file. I think the problem is that there are different routines responsible for writing the FDD information and the periodic information.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/210
https://github.com/su2code/SU2/pull/211:166,Modifiability,config,config,166,I tried to fix the problem with FFD and periodic boundaries. Would be good if someone could have a look at this solution. PS: WRT_HALO still has to be enabled in the config file in order to work.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/211
https://github.com/su2code/SU2/pull/215:47,Modifiability,variab,variable,47,This pull request introduces a 'custom' design variable that can be used in an objective defined in an external script. ; Also includes some clean-up/ name changes to outflow-generalized adjoint (previously 'chain rule adjoint'). Also adds a test case.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/215
https://github.com/su2code/SU2/pull/215:242,Testability,test,test,242,This pull request introduces a 'custom' design variable that can be used in an objective defined in an external script. ; Also includes some clean-up/ name changes to outflow-generalized adjoint (previously 'chain rule adjoint'). Also adds a test case.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/215
https://github.com/su2code/SU2/issues/216:710,Deployability,install,install,710,"When I run config_gui.by, it goes wrong. Traceback (most recent call last):; File ""./SU2_PY/config_gui.py"", line 314, in <module>; option_data = prepare_data() ; File ""./SU2_PY/config_gui.py"", line 300, in prepare_data; option_list = parse_config(config_cpp, config_hpp); File ""/home/ubuntu/SU2/SU2_PY/parse_config.py"", line 84, in parse_config; thisval = s2.split('""')[1]; IndexError: list index out of range. When it reads an empty line, split() returns a list with one element. So the index [1] goes beyond the range. ---. My OS:; Linux ip-172-31-10-55 3.13.0-48-generic #80-Ubuntu SMP Thu Mar 12 11:16:15 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux. SU2 version:; 4.0.2. ---. p.s. Another problem is I have to install wxpython to run config_gui.py. But I think it would be better to use Tkinter which is distributed with python. So it would be helpful to run in cluster environment.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/216
https://github.com/su2code/SU2/pull/217:366,Deployability,install,install,366,"Based on the feature_pyWrapper branch :. -new SU2_API folder with :; *include for header files (.h/.hpp); *src for source files (.cpp); *obj for lib and Makefile; *_SU2_API for the Pyhon wrapper and the SWIG conf file. -new FSI folder in the SU2_PY folder + new LaunchFSIComputation.py file. -The compilation should run fine (./configure + options --> make --> make install) but only if the Tec IO support is disabled, otherwise there are some missing references that I have not fixed yet. -You have to compile manually the _SU2_API folder with the Makefile + change the SU2_DIR variable in the Makefile before this compilation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/217
https://github.com/su2code/SU2/pull/217:187,Integrability,wrap,wrapper,187,"Based on the feature_pyWrapper branch :. -new SU2_API folder with :; *include for header files (.h/.hpp); *src for source files (.cpp); *obj for lib and Makefile; *_SU2_API for the Pyhon wrapper and the SWIG conf file. -new FSI folder in the SU2_PY folder + new LaunchFSIComputation.py file. -The compilation should run fine (./configure + options --> make --> make install) but only if the Tec IO support is disabled, otherwise there are some missing references that I have not fixed yet. -You have to compile manually the _SU2_API folder with the Makefile + change the SU2_DIR variable in the Makefile before this compilation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/217
https://github.com/su2code/SU2/pull/217:328,Modifiability,config,configure,328,"Based on the feature_pyWrapper branch :. -new SU2_API folder with :; *include for header files (.h/.hpp); *src for source files (.cpp); *obj for lib and Makefile; *_SU2_API for the Pyhon wrapper and the SWIG conf file. -new FSI folder in the SU2_PY folder + new LaunchFSIComputation.py file. -The compilation should run fine (./configure + options --> make --> make install) but only if the Tec IO support is disabled, otherwise there are some missing references that I have not fixed yet. -You have to compile manually the _SU2_API folder with the Makefile + change the SU2_DIR variable in the Makefile before this compilation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/217
https://github.com/su2code/SU2/pull/217:579,Modifiability,variab,variable,579,"Based on the feature_pyWrapper branch :. -new SU2_API folder with :; *include for header files (.h/.hpp); *src for source files (.cpp); *obj for lib and Makefile; *_SU2_API for the Pyhon wrapper and the SWIG conf file. -new FSI folder in the SU2_PY folder + new LaunchFSIComputation.py file. -The compilation should run fine (./configure + options --> make --> make install) but only if the Tec IO support is disabled, otherwise there are some missing references that I have not fixed yet. -You have to compile manually the _SU2_API folder with the Makefile + change the SU2_DIR variable in the Makefile before this compilation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/217
https://github.com/su2code/SU2/issues/219:498,Availability,error,errors,498,"Hello,. I am trying to compile SU2 on the central HPC facility at Sheffield University. I am running into problems with SU2 trying to link against HDF5 or ZLIB when I would rather it did not. When I try and not build against HDF5 I use the following script:; https://gist.github.com/385ee9c8589fd9146ade. and get this output:; https://gist.github.com/8fb4ab586ea12d9c28b2. which can basically be summed up as it is configured to not build with HDF5 (it says this in the configure output), but then errors because it can not link against the HDF5 lib. If I try and build SU2 against the version of HDF5 we have compiled on the cluster it will then error because that library was not built with ZLIB support. Am I doing something wrong to disable linking against HDF5 or will I have to recompile HDF5 with ZLIB?. Thanks. rcgsheffield/iceberg_software#159",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/219
https://github.com/su2code/SU2/issues/219:647,Availability,error,error,647,"Hello,. I am trying to compile SU2 on the central HPC facility at Sheffield University. I am running into problems with SU2 trying to link against HDF5 or ZLIB when I would rather it did not. When I try and not build against HDF5 I use the following script:; https://gist.github.com/385ee9c8589fd9146ade. and get this output:; https://gist.github.com/8fb4ab586ea12d9c28b2. which can basically be summed up as it is configured to not build with HDF5 (it says this in the configure output), but then errors because it can not link against the HDF5 lib. If I try and build SU2 against the version of HDF5 we have compiled on the cluster it will then error because that library was not built with ZLIB support. Am I doing something wrong to disable linking against HDF5 or will I have to recompile HDF5 with ZLIB?. Thanks. rcgsheffield/iceberg_software#159",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/219
https://github.com/su2code/SU2/issues/219:415,Modifiability,config,configured,415,"Hello,. I am trying to compile SU2 on the central HPC facility at Sheffield University. I am running into problems with SU2 trying to link against HDF5 or ZLIB when I would rather it did not. When I try and not build against HDF5 I use the following script:; https://gist.github.com/385ee9c8589fd9146ade. and get this output:; https://gist.github.com/8fb4ab586ea12d9c28b2. which can basically be summed up as it is configured to not build with HDF5 (it says this in the configure output), but then errors because it can not link against the HDF5 lib. If I try and build SU2 against the version of HDF5 we have compiled on the cluster it will then error because that library was not built with ZLIB support. Am I doing something wrong to disable linking against HDF5 or will I have to recompile HDF5 with ZLIB?. Thanks. rcgsheffield/iceberg_software#159",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/219
https://github.com/su2code/SU2/issues/219:470,Modifiability,config,configure,470,"Hello,. I am trying to compile SU2 on the central HPC facility at Sheffield University. I am running into problems with SU2 trying to link against HDF5 or ZLIB when I would rather it did not. When I try and not build against HDF5 I use the following script:; https://gist.github.com/385ee9c8589fd9146ade. and get this output:; https://gist.github.com/8fb4ab586ea12d9c28b2. which can basically be summed up as it is configured to not build with HDF5 (it says this in the configure output), but then errors because it can not link against the HDF5 lib. If I try and build SU2 against the version of HDF5 we have compiled on the cluster it will then error because that library was not built with ZLIB support. Am I doing something wrong to disable linking against HDF5 or will I have to recompile HDF5 with ZLIB?. Thanks. rcgsheffield/iceberg_software#159",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/219
https://github.com/su2code/SU2/pull/220:105,Energy Efficiency,reduce,reduces,105,"I have mainly implemented the Preaccumulation approach for the discrete adjoint solver. This drastically reduces the memory requirements. However, this requires some additional statements in the code itself. A lot of them are in the numerics_direct_mean.cpp and numerics_direct_turbulent.cpp. I hope that they will not create to much confusion. If the code is compiled with double, all of the AD::... statements are simply expanded to nothing. ~~To improve readibilty I used variadic templates to declare inputs/outputs of the preaccumulation sections. Due to this, C++11 support is now also required for the normal version of the code!~~ (Removed variadic templates for now). I will add more information about this technique to the developer wiki soon. Other important thing: I removed ADOLC support for now. I could not guarantee that it is still working.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/220
https://github.com/su2code/SU2/pull/220:416,Usability,simpl,simply,416,"I have mainly implemented the Preaccumulation approach for the discrete adjoint solver. This drastically reduces the memory requirements. However, this requires some additional statements in the code itself. A lot of them are in the numerics_direct_mean.cpp and numerics_direct_turbulent.cpp. I hope that they will not create to much confusion. If the code is compiled with double, all of the AD::... statements are simply expanded to nothing. ~~To improve readibilty I used variadic templates to declare inputs/outputs of the preaccumulation sections. Due to this, C++11 support is now also required for the normal version of the code!~~ (Removed variadic templates for now). I will add more information about this technique to the developer wiki soon. Other important thing: I removed ADOLC support for now. I could not guarantee that it is still working.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/220
https://github.com/su2code/SU2/pull/221:0,Availability,Error,Errors,0,Errors in the low Mach number reconstruction code have been fixed.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/221
https://github.com/su2code/SU2/issues/222:156,Availability,error,error,156,"All the TestCases seem broken when I try to run SU2 4.1 compiled from source. When I run the serial_regression.py and parallel_regression.py scripts, I get error messages like . There is no geometry file (GetnZone))!. and mesh files like mesh_ONERAM6_turb_hexa_43008.su2 appear to be missing. When I copy one of these from a 4.0 sample directory (where everything worked) and rerun the test case manually by typing something like. mpirun -n 2 /mit/su2_v4.1/bin/SU2_CFD config_CFD.cfg. it works. Something seems to be missing that generates the mesh files but I'm no SU2 expert, I just install it for the real users. Thanks for any help. ```; Alex; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/222
https://github.com/su2code/SU2/issues/222:585,Deployability,install,install,585,"All the TestCases seem broken when I try to run SU2 4.1 compiled from source. When I run the serial_regression.py and parallel_regression.py scripts, I get error messages like . There is no geometry file (GetnZone))!. and mesh files like mesh_ONERAM6_turb_hexa_43008.su2 appear to be missing. When I copy one of these from a 4.0 sample directory (where everything worked) and rerun the test case manually by typing something like. mpirun -n 2 /mit/su2_v4.1/bin/SU2_CFD config_CFD.cfg. it works. Something seems to be missing that generates the mesh files but I'm no SU2 expert, I just install it for the real users. Thanks for any help. ```; Alex; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/222
https://github.com/su2code/SU2/issues/222:162,Integrability,message,messages,162,"All the TestCases seem broken when I try to run SU2 4.1 compiled from source. When I run the serial_regression.py and parallel_regression.py scripts, I get error messages like . There is no geometry file (GetnZone))!. and mesh files like mesh_ONERAM6_turb_hexa_43008.su2 appear to be missing. When I copy one of these from a 4.0 sample directory (where everything worked) and rerun the test case manually by typing something like. mpirun -n 2 /mit/su2_v4.1/bin/SU2_CFD config_CFD.cfg. it works. Something seems to be missing that generates the mesh files but I'm no SU2 expert, I just install it for the real users. Thanks for any help. ```; Alex; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/222
https://github.com/su2code/SU2/issues/222:8,Testability,Test,TestCases,8,"All the TestCases seem broken when I try to run SU2 4.1 compiled from source. When I run the serial_regression.py and parallel_regression.py scripts, I get error messages like . There is no geometry file (GetnZone))!. and mesh files like mesh_ONERAM6_turb_hexa_43008.su2 appear to be missing. When I copy one of these from a 4.0 sample directory (where everything worked) and rerun the test case manually by typing something like. mpirun -n 2 /mit/su2_v4.1/bin/SU2_CFD config_CFD.cfg. it works. Something seems to be missing that generates the mesh files but I'm no SU2 expert, I just install it for the real users. Thanks for any help. ```; Alex; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/222
https://github.com/su2code/SU2/issues/222:386,Testability,test,test,386,"All the TestCases seem broken when I try to run SU2 4.1 compiled from source. When I run the serial_regression.py and parallel_regression.py scripts, I get error messages like . There is no geometry file (GetnZone))!. and mesh files like mesh_ONERAM6_turb_hexa_43008.su2 appear to be missing. When I copy one of these from a 4.0 sample directory (where everything worked) and rerun the test case manually by typing something like. mpirun -n 2 /mit/su2_v4.1/bin/SU2_CFD config_CFD.cfg. it works. Something seems to be missing that generates the mesh files but I'm no SU2 expert, I just install it for the real users. Thanks for any help. ```; Alex; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/222
https://github.com/su2code/SU2/pull/223:154,Performance,optimiz,optimization,154,The title says it already. Apparently projection was called twice (and info was overwritten). This fix should solve the problem. Maybe we should add some optimization to the CI.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/223
https://github.com/su2code/SU2/pull/224:41,Testability,test,tests,41,Same pull request then before to run reg tests.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/224
https://github.com/su2code/SU2/pull/227:17,Deployability,update,updated,17,"Python interface updated to automatically use ibrun when using slurm on a tacc machine (ie, Stampede)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/227
https://github.com/su2code/SU2/pull/227:7,Integrability,interface,interface,7,"Python interface updated to automatically use ibrun when using slurm on a tacc machine (ie, Stampede)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/227
https://github.com/su2code/SU2/issues/228:27,Testability,test,tests,27,"These could be simple unit tests, or for some larger automated tasks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/228
https://github.com/su2code/SU2/issues/228:15,Usability,simpl,simple,15,"These could be simple unit tests, or for some larger automated tasks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/228
https://github.com/su2code/SU2/issues/230:23,Energy Efficiency,Joule,Joule,23,"I am trying to include Joule heating as a source term.; Although the source term for Joule heating is defined in numerics_structure.hpp, unlike other source terms (like Wind Gust), it is not allocated in definition_structure.cpp. Also its option is not present in either the config_structure.cpp file or the config_template.cfg file.; Is any modification of code required?. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/230
https://github.com/su2code/SU2/issues/230:85,Energy Efficiency,Joule,Joule,85,"I am trying to include Joule heating as a source term.; Although the source term for Joule heating is defined in numerics_structure.hpp, unlike other source terms (like Wind Gust), it is not allocated in definition_structure.cpp. Also its option is not present in either the config_structure.cpp file or the config_template.cfg file.; Is any modification of code required?. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/230
https://github.com/su2code/SU2/issues/230:191,Energy Efficiency,allocate,allocated,191,"I am trying to include Joule heating as a source term.; Although the source term for Joule heating is defined in numerics_structure.hpp, unlike other source terms (like Wind Gust), it is not allocated in definition_structure.cpp. Also its option is not present in either the config_structure.cpp file or the config_template.cfg file.; Is any modification of code required?. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/230
https://github.com/su2code/SU2/pull/231:0,Deployability,Update,Updates,0,Updates to interpolation:; - Parallelized isoparametric interpolation; - Modified variable names w/in isoparametric calc for easier human-interpretation; - Introduced 'mirror' interpolation for use with Consistent & Conservative interpolation; - modified driver_structure such that structure -> fluid interpolation is defined first (which is necessary for C&C interpolation); - some code which was repeated in multiple interpolator child classes was moved to functions defined in the parent interpolator class (Determine_ArraySize and Collect_VertexInfo).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/231
https://github.com/su2code/SU2/pull/231:82,Modifiability,variab,variable,82,Updates to interpolation:; - Parallelized isoparametric interpolation; - Modified variable names w/in isoparametric calc for easier human-interpretation; - Introduced 'mirror' interpolation for use with Consistent & Conservative interpolation; - modified driver_structure such that structure -> fluid interpolation is defined first (which is necessary for C&C interpolation); - some code which was repeated in multiple interpolator child classes was moved to functions defined in the parent interpolator class (Determine_ArraySize and Collect_VertexInfo).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/231
https://github.com/su2code/SU2/pull/232:19,Testability,test,test,19,Added a regression test case for the low Mach number reconstruction. Uses the same mesh as the existing cylinder_lam test case.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/232
https://github.com/su2code/SU2/pull/232:117,Testability,test,test,117,Added a regression test case for the low Mach number reconstruction. Uses the same mesh as the existing cylinder_lam test case.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/232
https://github.com/su2code/SU2/pull/233:73,Energy Efficiency,adapt,adaptive,73,This commit fixes an issue causing incorrect reporting of the specified; adaptive CFL behavior. Thanks for your consideration!,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/233
https://github.com/su2code/SU2/pull/233:73,Modifiability,adapt,adaptive,73,This commit fixes an issue causing incorrect reporting of the specified; adaptive CFL behavior. Thanks for your consideration!,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/233
https://github.com/su2code/SU2/pull/234:1009,Deployability,configurat,configuration,1009,"Dear all,. as many of you know, we have been working for quite a while in the development of the FSI solver within SU2. So far, we have been using a separate branch; however, this branch has grown quite big (almost 200 commits!) and it's probably time to merge it with the develop branch. This way, other folks can start using the new code infrastructure for multi-physics problems, while reducing the hassle for everyone in future pull requests from our side. . This pull request includes, among others:; 1. Multi-physics support and improvements: ; - CTransfer structure with MPI support for parallel multi-zone simulations.; - CTransfer subclasses for physical definition of multi-physics interaction variables.; - CInterpolator structure with support for interpolation algorithms.; 2. A FEM structural solver aiming to deal with geometrical and material nonlinearities.; 3. A BGS driver structure for FSI problems.; 4. General bug fixes and improvements for unsteady problems with dynamic meshes.; 5. New configuration options required for the different kinds of problems tackled. If all the tests pass, I will add some regression tests, once the mesh files and solution files have been added to the TestCases repository. Please note that this version of the code is still under development, and we are currently working on further improvements in the efficiency and the capabilities of the solver. We intend to include these further developments by the time of the next release of the code. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/234
https://github.com/su2code/SU2/pull/234:1475,Deployability,release,release,1475,"Dear all,. as many of you know, we have been working for quite a while in the development of the FSI solver within SU2. So far, we have been using a separate branch; however, this branch has grown quite big (almost 200 commits!) and it's probably time to merge it with the develop branch. This way, other folks can start using the new code infrastructure for multi-physics problems, while reducing the hassle for everyone in future pull requests from our side. . This pull request includes, among others:; 1. Multi-physics support and improvements: ; - CTransfer structure with MPI support for parallel multi-zone simulations.; - CTransfer subclasses for physical definition of multi-physics interaction variables.; - CInterpolator structure with support for interpolation algorithms.; 2. A FEM structural solver aiming to deal with geometrical and material nonlinearities.; 3. A BGS driver structure for FSI problems.; 4. General bug fixes and improvements for unsteady problems with dynamic meshes.; 5. New configuration options required for the different kinds of problems tackled. If all the tests pass, I will add some regression tests, once the mesh files and solution files have been added to the TestCases repository. Please note that this version of the code is still under development, and we are currently working on further improvements in the efficiency and the capabilities of the solver. We intend to include these further developments by the time of the next release of the code. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/234
https://github.com/su2code/SU2/pull/234:704,Modifiability,variab,variables,704,"Dear all,. as many of you know, we have been working for quite a while in the development of the FSI solver within SU2. So far, we have been using a separate branch; however, this branch has grown quite big (almost 200 commits!) and it's probably time to merge it with the develop branch. This way, other folks can start using the new code infrastructure for multi-physics problems, while reducing the hassle for everyone in future pull requests from our side. . This pull request includes, among others:; 1. Multi-physics support and improvements: ; - CTransfer structure with MPI support for parallel multi-zone simulations.; - CTransfer subclasses for physical definition of multi-physics interaction variables.; - CInterpolator structure with support for interpolation algorithms.; 2. A FEM structural solver aiming to deal with geometrical and material nonlinearities.; 3. A BGS driver structure for FSI problems.; 4. General bug fixes and improvements for unsteady problems with dynamic meshes.; 5. New configuration options required for the different kinds of problems tackled. If all the tests pass, I will add some regression tests, once the mesh files and solution files have been added to the TestCases repository. Please note that this version of the code is still under development, and we are currently working on further improvements in the efficiency and the capabilities of the solver. We intend to include these further developments by the time of the next release of the code. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/234
https://github.com/su2code/SU2/pull/234:1009,Modifiability,config,configuration,1009,"Dear all,. as many of you know, we have been working for quite a while in the development of the FSI solver within SU2. So far, we have been using a separate branch; however, this branch has grown quite big (almost 200 commits!) and it's probably time to merge it with the develop branch. This way, other folks can start using the new code infrastructure for multi-physics problems, while reducing the hassle for everyone in future pull requests from our side. . This pull request includes, among others:; 1. Multi-physics support and improvements: ; - CTransfer structure with MPI support for parallel multi-zone simulations.; - CTransfer subclasses for physical definition of multi-physics interaction variables.; - CInterpolator structure with support for interpolation algorithms.; 2. A FEM structural solver aiming to deal with geometrical and material nonlinearities.; 3. A BGS driver structure for FSI problems.; 4. General bug fixes and improvements for unsteady problems with dynamic meshes.; 5. New configuration options required for the different kinds of problems tackled. If all the tests pass, I will add some regression tests, once the mesh files and solution files have been added to the TestCases repository. Please note that this version of the code is still under development, and we are currently working on further improvements in the efficiency and the capabilities of the solver. We intend to include these further developments by the time of the next release of the code. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/234
https://github.com/su2code/SU2/pull/234:1096,Testability,test,tests,1096,"Dear all,. as many of you know, we have been working for quite a while in the development of the FSI solver within SU2. So far, we have been using a separate branch; however, this branch has grown quite big (almost 200 commits!) and it's probably time to merge it with the develop branch. This way, other folks can start using the new code infrastructure for multi-physics problems, while reducing the hassle for everyone in future pull requests from our side. . This pull request includes, among others:; 1. Multi-physics support and improvements: ; - CTransfer structure with MPI support for parallel multi-zone simulations.; - CTransfer subclasses for physical definition of multi-physics interaction variables.; - CInterpolator structure with support for interpolation algorithms.; 2. A FEM structural solver aiming to deal with geometrical and material nonlinearities.; 3. A BGS driver structure for FSI problems.; 4. General bug fixes and improvements for unsteady problems with dynamic meshes.; 5. New configuration options required for the different kinds of problems tackled. If all the tests pass, I will add some regression tests, once the mesh files and solution files have been added to the TestCases repository. Please note that this version of the code is still under development, and we are currently working on further improvements in the efficiency and the capabilities of the solver. We intend to include these further developments by the time of the next release of the code. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/234
https://github.com/su2code/SU2/pull/234:1135,Testability,test,tests,1135,"Dear all,. as many of you know, we have been working for quite a while in the development of the FSI solver within SU2. So far, we have been using a separate branch; however, this branch has grown quite big (almost 200 commits!) and it's probably time to merge it with the develop branch. This way, other folks can start using the new code infrastructure for multi-physics problems, while reducing the hassle for everyone in future pull requests from our side. . This pull request includes, among others:; 1. Multi-physics support and improvements: ; - CTransfer structure with MPI support for parallel multi-zone simulations.; - CTransfer subclasses for physical definition of multi-physics interaction variables.; - CInterpolator structure with support for interpolation algorithms.; 2. A FEM structural solver aiming to deal with geometrical and material nonlinearities.; 3. A BGS driver structure for FSI problems.; 4. General bug fixes and improvements for unsteady problems with dynamic meshes.; 5. New configuration options required for the different kinds of problems tackled. If all the tests pass, I will add some regression tests, once the mesh files and solution files have been added to the TestCases repository. Please note that this version of the code is still under development, and we are currently working on further improvements in the efficiency and the capabilities of the solver. We intend to include these further developments by the time of the next release of the code. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/234
https://github.com/su2code/SU2/pull/234:1204,Testability,Test,TestCases,1204,"Dear all,. as many of you know, we have been working for quite a while in the development of the FSI solver within SU2. So far, we have been using a separate branch; however, this branch has grown quite big (almost 200 commits!) and it's probably time to merge it with the develop branch. This way, other folks can start using the new code infrastructure for multi-physics problems, while reducing the hassle for everyone in future pull requests from our side. . This pull request includes, among others:; 1. Multi-physics support and improvements: ; - CTransfer structure with MPI support for parallel multi-zone simulations.; - CTransfer subclasses for physical definition of multi-physics interaction variables.; - CInterpolator structure with support for interpolation algorithms.; 2. A FEM structural solver aiming to deal with geometrical and material nonlinearities.; 3. A BGS driver structure for FSI problems.; 4. General bug fixes and improvements for unsteady problems with dynamic meshes.; 5. New configuration options required for the different kinds of problems tackled. If all the tests pass, I will add some regression tests, once the mesh files and solution files have been added to the TestCases repository. Please note that this version of the code is still under development, and we are currently working on further improvements in the efficiency and the capabilities of the solver. We intend to include these further developments by the time of the next release of the code. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/234
https://github.com/su2code/SU2/pull/235:369,Availability,error,error,369,The manual changes in this branch are in the Makefile.am file; the Makefile.in files are generated by automake. ; This makes a slight change to the SU2_SOL makefile reducing the number of objects that are compiled - it was previously recompiling several of the SU2_CFD/ files. It appears to be necessary for SU2_SOL to recompile the solver_structure file (otherwise an error appears).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/235
https://github.com/su2code/SU2/pull/236:138,Energy Efficiency,reduce,reduced,138,"This pull request contains two important things:; 1. Major reductions in memory usage during grid partitioning for parallel calculations (reduced by half in some unofficial tests).; 2. Improvements to how the information needed by ParMETIS for the partitioning is prepared. At a minimum, there is some storage benefit, and in some cases, especially for mixed element meshes, slightly higher quality partitions may be obtained. The second point means that some of the parallel regression tests may break due to changes in the partitions. I have already taken care of most of these, but I'll wait for Travis CI to report any other necessary changes.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/236
https://github.com/su2code/SU2/pull/236:173,Testability,test,tests,173,"This pull request contains two important things:; 1. Major reductions in memory usage during grid partitioning for parallel calculations (reduced by half in some unofficial tests).; 2. Improvements to how the information needed by ParMETIS for the partitioning is prepared. At a minimum, there is some storage benefit, and in some cases, especially for mixed element meshes, slightly higher quality partitions may be obtained. The second point means that some of the parallel regression tests may break due to changes in the partitions. I have already taken care of most of these, but I'll wait for Travis CI to report any other necessary changes.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/236
https://github.com/su2code/SU2/pull/236:487,Testability,test,tests,487,"This pull request contains two important things:; 1. Major reductions in memory usage during grid partitioning for parallel calculations (reduced by half in some unofficial tests).; 2. Improvements to how the information needed by ParMETIS for the partitioning is prepared. At a minimum, there is some storage benefit, and in some cases, especially for mixed element meshes, slightly higher quality partitions may be obtained. The second point means that some of the parallel regression tests may break due to changes in the partitions. I have already taken care of most of these, but I'll wait for Travis CI to report any other necessary changes.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/236
https://github.com/su2code/SU2/pull/237:419,Modifiability,config,config,419,"This pull request is intended to be the first of two (or more) pull requests implementing multi-objective functionality. I am separating it into multiple requests since some structural changes are made which could potentially effect things outside the regression tests, and I want to make it easier for code review. . In this pull request, the ability to run multiple objectives is added to the python tools and to the config options. Within the CFD and adjoint solvers, the only major change is in the data structure containing the objectives - it now can hold a list of objectives, but when the adjoint solver is run only one objective is included. Later pull requests are planned to include the ability to run a single adjoint solution for a sum of objectives defined on different markers.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/237
https://github.com/su2code/SU2/pull/237:263,Testability,test,tests,263,"This pull request is intended to be the first of two (or more) pull requests implementing multi-objective functionality. I am separating it into multiple requests since some structural changes are made which could potentially effect things outside the regression tests, and I want to make it easier for code review. . In this pull request, the ability to run multiple objectives is added to the python tools and to the config options. Within the CFD and adjoint solvers, the only major change is in the data structure containing the objectives - it now can hold a list of objectives, but when the adjoint solver is run only one objective is included. Later pull requests are planned to include the ability to run a single adjoint solution for a sum of objectives defined on different markers.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/237
https://github.com/su2code/SU2/pull/238:52,Availability,error,errors,52,This commit fixes what seems to be a few copy-paste errors related to; solution file output. Thank you for your consideration.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/238
https://github.com/su2code/SU2/pull/239:320,Deployability,update,updated,320,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/239
https://github.com/su2code/SU2/pull/239:559,Energy Efficiency,reduce,reduce,559,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/239
https://github.com/su2code/SU2/pull/239:246,Modifiability,variab,variable,246,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/239
https://github.com/su2code/SU2/pull/239:476,Modifiability,extend,extended,476,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/239
https://github.com/su2code/SU2/pull/239:533,Modifiability,refactor,refactoring,533,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/239
https://github.com/su2code/SU2/pull/239:596,Performance,optimiz,optimization,596,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/239
https://github.com/su2code/SU2/issues/240:315,Availability,fault,fault,315,"Hey,. i have here a little bigger testcase (3D pipe with 1.5 Mio cells). The solution_flow.dat filesize is ~265M.; First the flow.vtk was written perfectly allright.; After i restart the case, the flow.vtk wasn't written automaticly.; Also i tried to do manual with SU2_SOL but here i get all the time _Segmenation fault (core dump)_; after or while; ""Merging solution in the Master node"". I tried it ""local"" on our visualisation cluster and also on our HPC-Cluster with same error.; I'm using branch **feature_internalflow**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/240
https://github.com/su2code/SU2/issues/240:476,Availability,error,error,476,"Hey,. i have here a little bigger testcase (3D pipe with 1.5 Mio cells). The solution_flow.dat filesize is ~265M.; First the flow.vtk was written perfectly allright.; After i restart the case, the flow.vtk wasn't written automaticly.; Also i tried to do manual with SU2_SOL but here i get all the time _Segmenation fault (core dump)_; after or while; ""Merging solution in the Master node"". I tried it ""local"" on our visualisation cluster and also on our HPC-Cluster with same error.; I'm using branch **feature_internalflow**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/240
https://github.com/su2code/SU2/issues/240:34,Testability,test,testcase,34,"Hey,. i have here a little bigger testcase (3D pipe with 1.5 Mio cells). The solution_flow.dat filesize is ~265M.; First the flow.vtk was written perfectly allright.; After i restart the case, the flow.vtk wasn't written automaticly.; Also i tried to do manual with SU2_SOL but here i get all the time _Segmenation fault (core dump)_; after or while; ""Merging solution in the Master node"". I tried it ""local"" on our visualisation cluster and also on our HPC-Cluster with same error.; I'm using branch **feature_internalflow**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/240
https://github.com/su2code/SU2/pull/241:352,Energy Efficiency,reduce,reduce,352,"This is a relatively small code change, but the change in options will effect the config files for everyone currently using optimization, and for anyone who has an OPT_OBJECTIVE defined in their config file. . The reasoning behind deprecating this option:; -Compressing the OPT_OBJECTIVE and OBJECTIVE_FUNCTION options into a single specification will reduce potential confusion about the behavior of these options. ; -Using the new OBJECTIVE_WEIGHT option to specify not only the scaling but also the sign clarifies the behavior of the optimizer - previously, the sign of the objective function was automatically flipped behind the scenes, now this is controlled by the user.; - This change facilitates planned further modifications to allow multiple objectives. . Please feel free to comment both on the code changes themselves as well as on the new config option format",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/241
https://github.com/su2code/SU2/pull/241:82,Modifiability,config,config,82,"This is a relatively small code change, but the change in options will effect the config files for everyone currently using optimization, and for anyone who has an OPT_OBJECTIVE defined in their config file. . The reasoning behind deprecating this option:; -Compressing the OPT_OBJECTIVE and OBJECTIVE_FUNCTION options into a single specification will reduce potential confusion about the behavior of these options. ; -Using the new OBJECTIVE_WEIGHT option to specify not only the scaling but also the sign clarifies the behavior of the optimizer - previously, the sign of the objective function was automatically flipped behind the scenes, now this is controlled by the user.; - This change facilitates planned further modifications to allow multiple objectives. . Please feel free to comment both on the code changes themselves as well as on the new config option format",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/241
https://github.com/su2code/SU2/pull/241:195,Modifiability,config,config,195,"This is a relatively small code change, but the change in options will effect the config files for everyone currently using optimization, and for anyone who has an OPT_OBJECTIVE defined in their config file. . The reasoning behind deprecating this option:; -Compressing the OPT_OBJECTIVE and OBJECTIVE_FUNCTION options into a single specification will reduce potential confusion about the behavior of these options. ; -Using the new OBJECTIVE_WEIGHT option to specify not only the scaling but also the sign clarifies the behavior of the optimizer - previously, the sign of the objective function was automatically flipped behind the scenes, now this is controlled by the user.; - This change facilitates planned further modifications to allow multiple objectives. . Please feel free to comment both on the code changes themselves as well as on the new config option format",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/241
https://github.com/su2code/SU2/pull/241:852,Modifiability,config,config,852,"This is a relatively small code change, but the change in options will effect the config files for everyone currently using optimization, and for anyone who has an OPT_OBJECTIVE defined in their config file. . The reasoning behind deprecating this option:; -Compressing the OPT_OBJECTIVE and OBJECTIVE_FUNCTION options into a single specification will reduce potential confusion about the behavior of these options. ; -Using the new OBJECTIVE_WEIGHT option to specify not only the scaling but also the sign clarifies the behavior of the optimizer - previously, the sign of the objective function was automatically flipped behind the scenes, now this is controlled by the user.; - This change facilitates planned further modifications to allow multiple objectives. . Please feel free to comment both on the code changes themselves as well as on the new config option format",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/241
https://github.com/su2code/SU2/pull/241:124,Performance,optimiz,optimization,124,"This is a relatively small code change, but the change in options will effect the config files for everyone currently using optimization, and for anyone who has an OPT_OBJECTIVE defined in their config file. . The reasoning behind deprecating this option:; -Compressing the OPT_OBJECTIVE and OBJECTIVE_FUNCTION options into a single specification will reduce potential confusion about the behavior of these options. ; -Using the new OBJECTIVE_WEIGHT option to specify not only the scaling but also the sign clarifies the behavior of the optimizer - previously, the sign of the objective function was automatically flipped behind the scenes, now this is controlled by the user.; - This change facilitates planned further modifications to allow multiple objectives. . Please feel free to comment both on the code changes themselves as well as on the new config option format",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/241
https://github.com/su2code/SU2/pull/241:537,Performance,optimiz,optimizer,537,"This is a relatively small code change, but the change in options will effect the config files for everyone currently using optimization, and for anyone who has an OPT_OBJECTIVE defined in their config file. . The reasoning behind deprecating this option:; -Compressing the OPT_OBJECTIVE and OBJECTIVE_FUNCTION options into a single specification will reduce potential confusion about the behavior of these options. ; -Using the new OBJECTIVE_WEIGHT option to specify not only the scaling but also the sign clarifies the behavior of the optimizer - previously, the sign of the objective function was automatically flipped behind the scenes, now this is controlled by the user.; - This change facilitates planned further modifications to allow multiple objectives. . Please feel free to comment both on the code changes themselves as well as on the new config option format",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/241
https://github.com/su2code/SU2/pull/242:844,Testability,Test,Testing,844,"This pull request features a lot of improvements to the FFD, especially in combination with periodic boundaries. But it contains also other bug fixes for internal flows.; - SU2_DEF now correctly maintains the periodic information in the mesh file.; - Fixed the mesh deformation of the periodic boundaries (transformation of the displacement was missing).; - SU2_DEF/SU2_DOT check now for intersection of FFD boxes with the designing surfaces in 2D to keep the continuity (like it is already done in 3D).; - Fixed the periodic transformation in SU2_SOL.; - Added output for discrete sensitivity in SU2_DOT (requires now additional object files similar to SU2_SOL, but I already removed the unnecessary recompilation). This is a follow up pull request of #239. I already opened it to keep the work organized. Status:; - [x] Implementation; - [x] Testing; - [x] Ready",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/242
https://github.com/su2code/SU2/pull/243:452,Deployability,update,update,452,"This pull request includes the exact formulation of HLLC jacobians.; The implementation can deal both with ideal and real gases and moving grids too.; (The formulation for real gases is based on ""Exact jacobians for implicit Navier-Stokes simulations of equilibrium real gas flows"" Rinaldi et al, J. of Computational Physics 2014). Regression tests for HLLC scheme are expected to fail since residuals will change due to the new implementation, I will update them later as soon as I have new values. Let me know if you have any question. cheers,; Giulio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/243
https://github.com/su2code/SU2/pull/243:343,Testability,test,tests,343,"This pull request includes the exact formulation of HLLC jacobians.; The implementation can deal both with ideal and real gases and moving grids too.; (The formulation for real gases is based on ""Exact jacobians for implicit Navier-Stokes simulations of equilibrium real gas flows"" Rinaldi et al, J. of Computational Physics 2014). Regression tests for HLLC scheme are expected to fail since residuals will change due to the new implementation, I will update them later as soon as I have new values. Let me know if you have any question. cheers,; Giulio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/243
https://github.com/su2code/SU2/pull/244:33,Deployability,Continuous,ContinuousAdjoint,33,"Variable name change (Adjoint -> ContinuousAdjoint). There is now a clear distinction between DiscreteAdjoint variable and ContinuousAdjoint variable (booleans). I have also fixed some bugs in the I/O (tecplot and fieldview) due to the previous problem: we were using only the Adjoint boolean and the Discrete adjoint output was incorrect. An interesting bug in geometry.py has been also fixed. We must keep an eye on shape design using geometrical constraints. Because of this problem, it is not working in the master repository and current release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/244
https://github.com/su2code/SU2/pull/244:123,Deployability,Continuous,ContinuousAdjoint,123,"Variable name change (Adjoint -> ContinuousAdjoint). There is now a clear distinction between DiscreteAdjoint variable and ContinuousAdjoint variable (booleans). I have also fixed some bugs in the I/O (tecplot and fieldview) due to the previous problem: we were using only the Adjoint boolean and the Discrete adjoint output was incorrect. An interesting bug in geometry.py has been also fixed. We must keep an eye on shape design using geometrical constraints. Because of this problem, it is not working in the master repository and current release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/244
https://github.com/su2code/SU2/pull/244:542,Deployability,release,release,542,"Variable name change (Adjoint -> ContinuousAdjoint). There is now a clear distinction between DiscreteAdjoint variable and ContinuousAdjoint variable (booleans). I have also fixed some bugs in the I/O (tecplot and fieldview) due to the previous problem: we were using only the Adjoint boolean and the Discrete adjoint output was incorrect. An interesting bug in geometry.py has been also fixed. We must keep an eye on shape design using geometrical constraints. Because of this problem, it is not working in the master repository and current release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/244
https://github.com/su2code/SU2/pull/244:0,Modifiability,Variab,Variable,0,"Variable name change (Adjoint -> ContinuousAdjoint). There is now a clear distinction between DiscreteAdjoint variable and ContinuousAdjoint variable (booleans). I have also fixed some bugs in the I/O (tecplot and fieldview) due to the previous problem: we were using only the Adjoint boolean and the Discrete adjoint output was incorrect. An interesting bug in geometry.py has been also fixed. We must keep an eye on shape design using geometrical constraints. Because of this problem, it is not working in the master repository and current release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/244
https://github.com/su2code/SU2/pull/244:110,Modifiability,variab,variable,110,"Variable name change (Adjoint -> ContinuousAdjoint). There is now a clear distinction between DiscreteAdjoint variable and ContinuousAdjoint variable (booleans). I have also fixed some bugs in the I/O (tecplot and fieldview) due to the previous problem: we were using only the Adjoint boolean and the Discrete adjoint output was incorrect. An interesting bug in geometry.py has been also fixed. We must keep an eye on shape design using geometrical constraints. Because of this problem, it is not working in the master repository and current release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/244
https://github.com/su2code/SU2/pull/244:141,Modifiability,variab,variable,141,"Variable name change (Adjoint -> ContinuousAdjoint). There is now a clear distinction between DiscreteAdjoint variable and ContinuousAdjoint variable (booleans). I have also fixed some bugs in the I/O (tecplot and fieldview) due to the previous problem: we were using only the Adjoint boolean and the Discrete adjoint output was incorrect. An interesting bug in geometry.py has been also fixed. We must keep an eye on shape design using geometrical constraints. Because of this problem, it is not working in the master repository and current release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/244
https://github.com/su2code/SU2/pull/244:68,Usability,clear,clear,68,"Variable name change (Adjoint -> ContinuousAdjoint). There is now a clear distinction between DiscreteAdjoint variable and ContinuousAdjoint variable (booleans). I have also fixed some bugs in the I/O (tecplot and fieldview) due to the previous problem: we were using only the Adjoint boolean and the Discrete adjoint output was incorrect. An interesting bug in geometry.py has been also fixed. We must keep an eye on shape design using geometrical constraints. Because of this problem, it is not working in the master repository and current release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/244
https://github.com/su2code/SU2/issues/245:364,Deployability,install,install,364,"A section of the Build From Source tab of the WIKI mentions the following: . ""For example, to configure SU2 for parallel calculations (i.e., with ParMETIS and MPI) along with CGNS and TecIO support and a high level of compiler optimization, the configure command might look like this (replace with specific paths on your system):. ""$ ./configure --prefix=/path/to/install/SU2 --enable-mpi --with-cc=/path/to/mpicc ; --with-cxx=/path/to/mpicxx CXXFLAGS=""-O3"" --with-CGNS-lib=/path/to/CGNS/lib ; --with-CGNS-include=/path/to/CGNS/header"". Note that the actual configure call does not actually use TECIO as discribed in the paragraph leading up to the call.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/245
https://github.com/su2code/SU2/issues/245:94,Modifiability,config,configure,94,"A section of the Build From Source tab of the WIKI mentions the following: . ""For example, to configure SU2 for parallel calculations (i.e., with ParMETIS and MPI) along with CGNS and TecIO support and a high level of compiler optimization, the configure command might look like this (replace with specific paths on your system):. ""$ ./configure --prefix=/path/to/install/SU2 --enable-mpi --with-cc=/path/to/mpicc ; --with-cxx=/path/to/mpicxx CXXFLAGS=""-O3"" --with-CGNS-lib=/path/to/CGNS/lib ; --with-CGNS-include=/path/to/CGNS/header"". Note that the actual configure call does not actually use TECIO as discribed in the paragraph leading up to the call.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/245
https://github.com/su2code/SU2/issues/245:245,Modifiability,config,configure,245,"A section of the Build From Source tab of the WIKI mentions the following: . ""For example, to configure SU2 for parallel calculations (i.e., with ParMETIS and MPI) along with CGNS and TecIO support and a high level of compiler optimization, the configure command might look like this (replace with specific paths on your system):. ""$ ./configure --prefix=/path/to/install/SU2 --enable-mpi --with-cc=/path/to/mpicc ; --with-cxx=/path/to/mpicxx CXXFLAGS=""-O3"" --with-CGNS-lib=/path/to/CGNS/lib ; --with-CGNS-include=/path/to/CGNS/header"". Note that the actual configure call does not actually use TECIO as discribed in the paragraph leading up to the call.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/245
https://github.com/su2code/SU2/issues/245:336,Modifiability,config,configure,336,"A section of the Build From Source tab of the WIKI mentions the following: . ""For example, to configure SU2 for parallel calculations (i.e., with ParMETIS and MPI) along with CGNS and TecIO support and a high level of compiler optimization, the configure command might look like this (replace with specific paths on your system):. ""$ ./configure --prefix=/path/to/install/SU2 --enable-mpi --with-cc=/path/to/mpicc ; --with-cxx=/path/to/mpicxx CXXFLAGS=""-O3"" --with-CGNS-lib=/path/to/CGNS/lib ; --with-CGNS-include=/path/to/CGNS/header"". Note that the actual configure call does not actually use TECIO as discribed in the paragraph leading up to the call.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/245
https://github.com/su2code/SU2/issues/245:558,Modifiability,config,configure,558,"A section of the Build From Source tab of the WIKI mentions the following: . ""For example, to configure SU2 for parallel calculations (i.e., with ParMETIS and MPI) along with CGNS and TecIO support and a high level of compiler optimization, the configure command might look like this (replace with specific paths on your system):. ""$ ./configure --prefix=/path/to/install/SU2 --enable-mpi --with-cc=/path/to/mpicc ; --with-cxx=/path/to/mpicxx CXXFLAGS=""-O3"" --with-CGNS-lib=/path/to/CGNS/lib ; --with-CGNS-include=/path/to/CGNS/header"". Note that the actual configure call does not actually use TECIO as discribed in the paragraph leading up to the call.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/245
https://github.com/su2code/SU2/issues/245:227,Performance,optimiz,optimization,227,"A section of the Build From Source tab of the WIKI mentions the following: . ""For example, to configure SU2 for parallel calculations (i.e., with ParMETIS and MPI) along with CGNS and TecIO support and a high level of compiler optimization, the configure command might look like this (replace with specific paths on your system):. ""$ ./configure --prefix=/path/to/install/SU2 --enable-mpi --with-cc=/path/to/mpicc ; --with-cxx=/path/to/mpicxx CXXFLAGS=""-O3"" --with-CGNS-lib=/path/to/CGNS/lib ; --with-CGNS-include=/path/to/CGNS/header"". Note that the actual configure call does not actually use TECIO as discribed in the paragraph leading up to the call.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/245
https://github.com/su2code/SU2/issues/246:316,Modifiability,config,config,316,"Is a python 3.x support planned or existing for SU2 ?; It is not so hard to make a code compatible with both version python 2 and 3 but only with recent version of each (2.7 and 3.5 for example). ; So my question is about python 2.x : what minimal version do you want to support ?. You can see a quick fix, only for config class for the moment, here: [gbaty/SU2/py2_and_py3_support](https://github.com/gbaty/SU2/tree/py2_and_py3_support)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/246
https://github.com/su2code/SU2/issues/247:1356,Availability,error,error,1356,"Hi, SU2 developers,. When I worked on a 2D vicsid laminar problem with a gird movement, SU2 goes wrong at the time when it computes the BC_HeatFlux_Wall. The condition of the moving wall is setted to be MARKER_HEATFLUX=(wall, 0.0). So I checked the code and found problems in the function CNSSolver::BC_HeatFlux_Wall. The problematic codes are here. ```; void CNSSolver::BC_HeatFlux_Wall(CGeometry *geometry, CSolver **solver_container, CNumerics *conv_numerics, CNumerics *visc_numerics, CConfig *config, unsigned short val_marker) {. ...; /*--- Implicit Jacobian contributions due to moving walls ---*/. if (implicit) {. /*--- Jacobian contribution related to the pressure term ---*/. GridVel2 = 0.0;; for (iDim = 0; iDim < nDim; iDim++); GridVel2 += GridVel[iDim]*GridVel[iDim];; for (iVar = 0; iVar < nVar; iVar++); for (jVar = 0; jVar < nVar; jVar++); Jacobian_i[iVar][jVar] = 0.0;; Jacobian_i[nDim+1][0] = 0.5*(Gamma-1.0)*GridVel2*ProjGridVel;; for (jDim = 0; jDim < nDim; jDim++); Jacobian_i[nDim+1][jDim+1] = -(Gamma-1.0)*GridVel[jDim]*ProjGridVel;; Jacobian_i[nDim+1][nDim+1] = (Gamma-1.0)*ProjGridVel;. /*--- Add the block to the Global Jacobian structure ---*/; ... ```. In 2D incompressible cases, the number of conservative variables is 3, so nVar = 3 and the size of Jacobian should be 3x3. The codes `Jacobian_i[nDim+1][0]` has memory acess error.; Obviously, the codes are for compressible problems. Can you fix the bug ? What's the right method to compute BC_HeatFlux for incompressoble cases with grid movment ?. Another small bug. In function COutput::SetSurfaceCSV_Flow. ```; Pressure = FlowSolver->node[iPoint]->GetPressure();; PressCoeff = FlowSolver->GetCPressure(iMarker, iVertex);; ```. Pressure is wrong for incompressible problems",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/247
https://github.com/su2code/SU2/issues/247:498,Modifiability,config,config,498,"Hi, SU2 developers,. When I worked on a 2D vicsid laminar problem with a gird movement, SU2 goes wrong at the time when it computes the BC_HeatFlux_Wall. The condition of the moving wall is setted to be MARKER_HEATFLUX=(wall, 0.0). So I checked the code and found problems in the function CNSSolver::BC_HeatFlux_Wall. The problematic codes are here. ```; void CNSSolver::BC_HeatFlux_Wall(CGeometry *geometry, CSolver **solver_container, CNumerics *conv_numerics, CNumerics *visc_numerics, CConfig *config, unsigned short val_marker) {. ...; /*--- Implicit Jacobian contributions due to moving walls ---*/. if (implicit) {. /*--- Jacobian contribution related to the pressure term ---*/. GridVel2 = 0.0;; for (iDim = 0; iDim < nDim; iDim++); GridVel2 += GridVel[iDim]*GridVel[iDim];; for (iVar = 0; iVar < nVar; iVar++); for (jVar = 0; jVar < nVar; jVar++); Jacobian_i[iVar][jVar] = 0.0;; Jacobian_i[nDim+1][0] = 0.5*(Gamma-1.0)*GridVel2*ProjGridVel;; for (jDim = 0; jDim < nDim; jDim++); Jacobian_i[nDim+1][jDim+1] = -(Gamma-1.0)*GridVel[jDim]*ProjGridVel;; Jacobian_i[nDim+1][nDim+1] = (Gamma-1.0)*ProjGridVel;. /*--- Add the block to the Global Jacobian structure ---*/; ... ```. In 2D incompressible cases, the number of conservative variables is 3, so nVar = 3 and the size of Jacobian should be 3x3. The codes `Jacobian_i[nDim+1][0]` has memory acess error.; Obviously, the codes are for compressible problems. Can you fix the bug ? What's the right method to compute BC_HeatFlux for incompressoble cases with grid movment ?. Another small bug. In function COutput::SetSurfaceCSV_Flow. ```; Pressure = FlowSolver->node[iPoint]->GetPressure();; PressCoeff = FlowSolver->GetCPressure(iMarker, iVertex);; ```. Pressure is wrong for incompressible problems",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/247
https://github.com/su2code/SU2/issues/247:1237,Modifiability,variab,variables,1237,"Hi, SU2 developers,. When I worked on a 2D vicsid laminar problem with a gird movement, SU2 goes wrong at the time when it computes the BC_HeatFlux_Wall. The condition of the moving wall is setted to be MARKER_HEATFLUX=(wall, 0.0). So I checked the code and found problems in the function CNSSolver::BC_HeatFlux_Wall. The problematic codes are here. ```; void CNSSolver::BC_HeatFlux_Wall(CGeometry *geometry, CSolver **solver_container, CNumerics *conv_numerics, CNumerics *visc_numerics, CConfig *config, unsigned short val_marker) {. ...; /*--- Implicit Jacobian contributions due to moving walls ---*/. if (implicit) {. /*--- Jacobian contribution related to the pressure term ---*/. GridVel2 = 0.0;; for (iDim = 0; iDim < nDim; iDim++); GridVel2 += GridVel[iDim]*GridVel[iDim];; for (iVar = 0; iVar < nVar; iVar++); for (jVar = 0; jVar < nVar; jVar++); Jacobian_i[iVar][jVar] = 0.0;; Jacobian_i[nDim+1][0] = 0.5*(Gamma-1.0)*GridVel2*ProjGridVel;; for (jDim = 0; jDim < nDim; jDim++); Jacobian_i[nDim+1][jDim+1] = -(Gamma-1.0)*GridVel[jDim]*ProjGridVel;; Jacobian_i[nDim+1][nDim+1] = (Gamma-1.0)*ProjGridVel;. /*--- Add the block to the Global Jacobian structure ---*/; ... ```. In 2D incompressible cases, the number of conservative variables is 3, so nVar = 3 and the size of Jacobian should be 3x3. The codes `Jacobian_i[nDim+1][0]` has memory acess error.; Obviously, the codes are for compressible problems. Can you fix the bug ? What's the right method to compute BC_HeatFlux for incompressoble cases with grid movment ?. Another small bug. In function COutput::SetSurfaceCSV_Flow. ```; Pressure = FlowSolver->node[iPoint]->GetPressure();; PressCoeff = FlowSolver->GetCPressure(iMarker, iVertex);; ```. Pressure is wrong for incompressible problems",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/247
https://github.com/su2code/SU2/pull/248:204,Availability,avail,available,204,"Hi all,. this pull request eliminates the old linear elasticity structural solver, which was no longer actively developed, with the objective of maintaining the code clearness. All the features are still available using new FEM solver. It also renames the files from *_fem_elasticity to *_direct_elasticity, in order to follow the general code criteria. . Additionally, I have fixed some bugs and added some options to the structural and FSI solvers. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/248
https://github.com/su2code/SU2/pull/248:166,Usability,clear,clearness,166,"Hi all,. this pull request eliminates the old linear elasticity structural solver, which was no longer actively developed, with the objective of maintaining the code clearness. All the features are still available using new FEM solver. It also renames the files from *_fem_elasticity to *_direct_elasticity, in order to follow the general code criteria. . Additionally, I have fixed some bugs and added some options to the structural and FSI solvers. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/248
https://github.com/su2code/SU2/pull/249:63,Integrability,message,message,63,"Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/249
https://github.com/su2code/SU2/pull/249:94,Integrability,message,message,94,"Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/249
https://github.com/su2code/SU2/pull/249:113,Integrability,message,message,113,"Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/249
https://github.com/su2code/SU2/pull/249:132,Integrability,message,message,132,"Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/249
https://github.com/su2code/SU2/issues/250:1466,Availability,echo,echo,1466,"h/SU2-4.1.0/externals'; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; Making all in Common/lib; make[1]: Entering directory `/home/antodech/SU2-4.1.0/Common/lib'; g++ -DPACKAGE_NAME=\""SU2\"" -DPACKAGE_TARNAME=\""SU2\"" -DPACKAGE_VERSION=\""4.1.0\"" -DPACKAGE_STRING=\""SU2\ 4.1.0\"" -DPACKAGE_BUGREPORT=\""su2code-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""https://github.com/su2code\"" -DPACKAGE=\""SU2\"" -DVERSION=\""4.1.0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:1710,Availability,error,error,1710,"ACKAGE_STRING=\""SU2\ 4.1.0\"" -DPACKAGE_BUGREPORT=\""su2code-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""https://github.com/su2code\"" -DPACKAGE=\""SU2\"" -DVERSION=\""4.1.0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expec",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:1798,Availability,error,error,1798,""" -DPACKAGE_URL=\""https://github.com/su2code\"" -DPACKAGE=\""SU2\"" -DVERSION=\""4.1.0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:1873,Availability,error,error,1873,"0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemT",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:1961,Availability,error,error,1961,"HAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:2036,Availability,error,error,2036,"INT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:2127,Availability,error,error,2127,"=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: erro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:2202,Availability,error,error,2202,"-DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:2288,Availability,error,error,2288,"bSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:720",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:2374,Availability,error,error,2374,"bSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: e",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:2460,Availability,error,error,2460,"c/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:2548,Availability,error,error,2548,"icalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘T",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:2634,Availability,error,error,2634,rt unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:2720,Availability,error,error,2720,ot declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘T,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:2796,Availability,error,error,2796,’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:2882,Availability,error,error,2882,eclared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:2968,Availability,error,error,2968, ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error:,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:3051,Availability,error,error,3051,red in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:3138,Availability,error,error,3138,Type’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘e,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:3225,Availability,error,error,3225,cope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘el,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:3312,Availability,error,error,3312, scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘e,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:3394,Availability,error,error,3394,his scope; ../src/geometry_structure.cpp:7040: error: ‘RealDouble’ was not declared in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:3477,Availability,error,error,3477, in this scope; ../src/geometry_structure.cpp:7051: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: er,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:3560,Availability,error,error,3560,red in this scope; ../src/geometry_structure.cpp:7107: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: err,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:3643,Availability,error,error,3643,clared in this scope; ../src/geometry_structure.cpp:7167: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: erro,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:3727,Availability,error,error,3727,‘elmt_type’; ../src/geometry_structure.cpp:7168: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:3812,Availability,error,error,3812,in this scope; ../src/geometry_structure.cpp:7179: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:3896,Availability,error,error,3896, in this scope; ../src/geometry_structure.cpp:7179: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:3981,Availability,error,error,3981,in this scope; ../src/geometry_structure.cpp:7180: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:4065,Availability,error,error,4065,d in this scope; ../src/geometry_structure.cpp:7185: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:4150,Availability,error,error,4150,red in this scope; ../src/geometry_structure.cpp:7204: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:4236,Availability,error,error,4236,ared in this scope; ../src/geometry_structure.cpp:7205: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HE,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:4322,Availability,error,error,4322, in this scope; ../src/geometry_structure.cpp:7209: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIX,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:4408,Availability,error,error,4408, this scope; ../src/geometry_structure.cpp:7213: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expecte,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:4494,Availability,error,error,4494,this scope; ../src/geometry_structure.cpp:7217: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:4576,Availability,error,error,4576,this scope; ../src/geometry_structure.cpp:7221: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:4659,Availability,error,error,4659, this scope; ../src/geometry_structure.cpp:7225: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was n,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:4742,Availability,error,error,4742,in this scope; ../src/geometry_structure.cpp:7229: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was no,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:4825,Availability,error,error,4825, in this scope; ../src/geometry_structure.cpp:7233: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:4909,Availability,error,error,4909, in this scope; ../src/geometry_structure.cpp:7237: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:4994,Availability,error,error,4994, in this scope; ../src/geometry_structure.cpp:7241: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not de,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:5078,Availability,error,error,5078, in this scope; ../src/geometry_structure.cpp:7259: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not de,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:5163,Availability,error,error,5163,ed in this scope; ../src/geometry_structure.cpp:7350: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not de,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:5247,Availability,error,error,5247,red in this scope; ../src/geometry_structure.cpp:7367: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not de,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:5332,Availability,error,error,5332,lared in this scope; ../src/geometry_structure.cpp:7374: error: ‘elemType’ was not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not d,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:5415,Availability,error,error,5415,not declared in this scope; ../src/geometry_structure.cpp:7375: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was n,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:5491,Availability,error,error,5491,not declared in this scope; ../src/geometry_structure.cpp:7378: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:5578,Availability,error,error,5578,s not declared in this scope; ../src/geometry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/Common/lib'; make: *** [all-r,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:5654,Availability,error,error,5654,ry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/Common/lib'; make: *** [all-recursive] Error 1; ```. Thx for your help.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:5741,Availability,error,error,5741,ry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/Common/lib'; make: *** [all-recursive] Error 1; ```. Thx for your help.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:5823,Availability,error,error,5823,ry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/Common/lib'; make: *** [all-recursive] Error 1; ```. Thx for your help.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:5906,Availability,error,error,5906,ry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/Common/lib'; make: *** [all-recursive] Error 1; ```. Thx for your help.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:5989,Availability,error,error,5989,ry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/Common/lib'; make: *** [all-recursive] Error 1; ```. Thx for your help.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:6072,Availability,error,error,6072,ry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/Common/lib'; make: *** [all-recursive] Error 1; ```. Thx for your help.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:6156,Availability,error,error,6156,ry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/Common/lib'; make: *** [all-recursive] Error 1; ```. Thx for your help.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:6241,Availability,error,error,6241,ry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/Common/lib'; make: *** [all-recursive] Error 1; ```. Thx for your help.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:6325,Availability,error,error,6325,ry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/Common/lib'; make: *** [all-recursive] Error 1; ```. Thx for your help.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:6410,Availability,error,error,6410,ry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/Common/lib'; make: *** [all-recursive] Error 1; ```. Thx for your help.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:6503,Availability,Error,Error,6503,ry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/Common/lib'; make: *** [all-recursive] Error 1; ```. Thx for your help.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:6604,Availability,Error,Error,6604,ry_structure.cpp:7381: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:7384: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:7387: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:7390: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:7393: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:7396: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:7399: error: ‘PYRA_5’ was not declared in this scope; ../src/geometry_structure.cpp:7402: error: ‘HEXA_20’ was not declared in this scope; ../src/geometry_structure.cpp:7415: error: ‘MIXED’ was not declared in this scope; ../src/geometry_structure.cpp:7460: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:7461: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8124: error: expected ‘;’ before ‘elmt_type’; ../src/geometry_structure.cpp:8125: error: ‘elmt_type’ was not declared in this scope; ../src/geometry_structure.cpp:8128: error: ‘NODE’ was not declared in this scope; ../src/geometry_structure.cpp:8129: error: ‘BAR_2’ was not declared in this scope; ../src/geometry_structure.cpp:8130: error: ‘BAR_3’ was not declared in this scope; ../src/geometry_structure.cpp:8131: error: ‘TRI_3’ was not declared in this scope; ../src/geometry_structure.cpp:8132: error: ‘QUAD_4’ was not declared in this scope; ../src/geometry_structure.cpp:8133: error: ‘TETRA_4’ was not declared in this scope; ../src/geometry_structure.cpp:8134: error: ‘HEXA_8’ was not declared in this scope; ../src/geometry_structure.cpp:8135: error: ‘PENTA_6’ was not declared in this scope; ../src/geometry_structure.cpp:8136: error: ‘PYRA_5’ was not declared in this scope; make[1]: *** [libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/Common/lib'; make: *** [all-recursive] Error 1; ```. Thx for your help.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:174,Modifiability,config,configure,174,"Hello,. I the same issue with v4.1.0 as in #28, which has been closed but does not contain helpful information. The cgns headers and libs (v3.2.1) are correctly detected by `configure`. Here is the output of make V=1:. ```; Making all in externals; make[1]: Entering directory `/home/antodech/SU2-4.1.0/externals'; make[2]: Entering directory `/home/antodech/SU2-4.1.0/externals'; make[2]: Nothing to be done for `all-am'.; make[2]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; Making all in Common/lib; make[1]: Entering directory `/home/antodech/SU2-4.1.0/Common/lib'; g++ -DPACKAGE_NAME=\""SU2\"" -DPACKAGE_TARNAME=\""SU2\"" -DPACKAGE_VERSION=\""4.1.0\"" -DPACKAGE_STRING=\""SU2\ 4.1.0\"" -DPACKAGE_BUGREPORT=\""su2code-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""https://github.com/su2code\"" -DPACKAGE=\""SU2\"" -DVERSION=\""4.1.0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; .",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:161,Safety,detect,detected,161,"Hello,. I the same issue with v4.1.0 as in #28, which has been closed but does not contain helpful information. The cgns headers and libs (v3.2.1) are correctly detected by `configure`. Here is the output of make V=1:. ```; Making all in externals; make[1]: Entering directory `/home/antodech/SU2-4.1.0/externals'; make[2]: Entering directory `/home/antodech/SU2-4.1.0/externals'; make[2]: Nothing to be done for `all-am'.; make[2]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; Making all in Common/lib; make[1]: Entering directory `/home/antodech/SU2-4.1.0/Common/lib'; g++ -DPACKAGE_NAME=\""SU2\"" -DPACKAGE_TARNAME=\""SU2\"" -DPACKAGE_VERSION=\""4.1.0\"" -DPACKAGE_STRING=\""SU2\ 4.1.0\"" -DPACKAGE_BUGREPORT=\""su2code-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""https://github.com/su2code\"" -DPACKAGE=\""SU2\"" -DVERSION=\""4.1.0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; .",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/issues/250:1423,Testability,test,test,1423,"ke[2]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; Making all in Common/lib; make[1]: Entering directory `/home/antodech/SU2-4.1.0/Common/lib'; g++ -DPACKAGE_NAME=\""SU2\"" -DPACKAGE_TARNAME=\""SU2\"" -DPACKAGE_VERSION=\""4.1.0\"" -DPACKAGE_STRING=\""SU2\ 4.1.0\"" -DPACKAGE_BUGREPORT=\""su2code-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""https://github.com/su2code\"" -DPACKAGE=\""SU2\"" -DVERSION=\""4.1.0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/250
https://github.com/su2code/SU2/pull/251:32,Deployability,continuous,continuous,32,Some small changes to bring the continuous adjoint total heat flux gradient closer to finite difference result (mainly there was a missing area term in BC_isothermal). ; There may still be a problem with the continuous adjoint for maximum heat flux; modifications also include changing norm used on the max heat flux to be the same as the norm used in the output calculation for max heat flux.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/251
https://github.com/su2code/SU2/pull/251:208,Deployability,continuous,continuous,208,Some small changes to bring the continuous adjoint total heat flux gradient closer to finite difference result (mainly there was a missing area term in BC_isothermal). ; There may still be a problem with the continuous adjoint for maximum heat flux; modifications also include changing norm used on the max heat flux to be the same as the norm used in the output calculation for max heat flux.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/251
https://github.com/su2code/SU2/issues/252:1250,Integrability,rout,routine,1250,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/252
https://github.com/su2code/SU2/issues/252:1332,Integrability,rout,routines,1332,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/252
https://github.com/su2code/SU2/issues/252:272,Modifiability,config,config,272,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/252
https://github.com/su2code/SU2/issues/252:317,Modifiability,config,config,317,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/252
https://github.com/su2code/SU2/issues/252:377,Modifiability,config,config,377,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/252
https://github.com/su2code/SU2/issues/252:825,Modifiability,config,config,825,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/252
https://github.com/su2code/SU2/issues/252:888,Modifiability,config,config,888,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/252
https://github.com/su2code/SU2/issues/252:948,Modifiability,config,config,948,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/252
https://github.com/su2code/SU2/issues/252:1098,Performance,perform,performance,1098,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/252
https://github.com/su2code/SU2/pull/253:17,Testability,test,tests,17,Added regression tests for some of the SU2 design features,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/253
https://github.com/su2code/SU2/pull/254:17,Testability,test,tests,17,Added regression tests for SU2 design features,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/254
https://github.com/su2code/SU2/pull/256:63,Integrability,message,message,63,"Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/256
https://github.com/su2code/SU2/pull/256:94,Integrability,message,message,94,"Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/256
https://github.com/su2code/SU2/pull/256:113,Integrability,message,message,113,"Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/256
https://github.com/su2code/SU2/pull/256:132,Integrability,message,message,132,"Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/256
https://github.com/su2code/SU2/pull/258:64,Testability,test,tests,64,"Do not merge yet - pull request submitted mainly for regression tests, and to aid in discussion of changes.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/258
https://github.com/su2code/SU2/pull/260:105,Integrability,message,message,105,"Support both Python 2.6+ and Python 3.4+. Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/260
https://github.com/su2code/SU2/pull/260:136,Integrability,message,message,136,"Support both Python 2.6+ and Python 3.4+. Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/260
https://github.com/su2code/SU2/pull/260:155,Integrability,message,message,155,"Support both Python 2.6+ and Python 3.4+. Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/260
https://github.com/su2code/SU2/pull/260:174,Integrability,message,message,174,"Support both Python 2.6+ and Python 3.4+. Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/260
https://github.com/su2code/SU2/pull/263:117,Energy Efficiency,reduce,reduce,117,"This pull request contains a bunch of clean up within the parallel mesh readers and partitioning routines. It should reduce memory usage quite a bit during preprocessing, and several important leaks have been fixed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/263
https://github.com/su2code/SU2/pull/263:97,Integrability,rout,routines,97,"This pull request contains a bunch of clean up within the parallel mesh readers and partitioning routines. It should reduce memory usage quite a bit during preprocessing, and several important leaks have been fixed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/263
https://github.com/su2code/SU2/pull/265:817,Availability,error,error,817,"Several class objects are now explicitly deleted at the end of SU2_CFD, which provides a check that their deconstructors are properly implemented. ; Some memory leaks may still exist, and future work will be needed for postprocessing routines implemented, but not currently called, in driver->Postprocessing. . For future development reference some common problems:; - pointer not initialized to NULL, causing a segfault when delete [] is called in the deconstructor. (When set to NULL an if statement avoids this segfault). ; - pointers owned by a parent class deleted in the child class. An exception could be when only the child class has information about the size of pointers to pointers, but otherwise risks double-frees (a segfault) and creates duplicated code. ; - FYI, although it does not seem to cause any error, Classname.~Classname() does not have defined behavior, and will do nothing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/265
https://github.com/su2code/SU2/pull/265:234,Integrability,rout,routines,234,"Several class objects are now explicitly deleted at the end of SU2_CFD, which provides a check that their deconstructors are properly implemented. ; Some memory leaks may still exist, and future work will be needed for postprocessing routines implemented, but not currently called, in driver->Postprocessing. . For future development reference some common problems:; - pointer not initialized to NULL, causing a segfault when delete [] is called in the deconstructor. (When set to NULL an if statement avoids this segfault). ; - pointers owned by a parent class deleted in the child class. An exception could be when only the child class has information about the size of pointers to pointers, but otherwise risks double-frees (a segfault) and creates duplicated code. ; - FYI, although it does not seem to cause any error, Classname.~Classname() does not have defined behavior, and will do nothing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/265
https://github.com/su2code/SU2/pull/265:502,Safety,avoid,avoids,502,"Several class objects are now explicitly deleted at the end of SU2_CFD, which provides a check that their deconstructors are properly implemented. ; Some memory leaks may still exist, and future work will be needed for postprocessing routines implemented, but not currently called, in driver->Postprocessing. . For future development reference some common problems:; - pointer not initialized to NULL, causing a segfault when delete [] is called in the deconstructor. (When set to NULL an if statement avoids this segfault). ; - pointers owned by a parent class deleted in the child class. An exception could be when only the child class has information about the size of pointers to pointers, but otherwise risks double-frees (a segfault) and creates duplicated code. ; - FYI, although it does not seem to cause any error, Classname.~Classname() does not have defined behavior, and will do nothing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/265
https://github.com/su2code/SU2/pull/265:708,Safety,risk,risks,708,"Several class objects are now explicitly deleted at the end of SU2_CFD, which provides a check that their deconstructors are properly implemented. ; Some memory leaks may still exist, and future work will be needed for postprocessing routines implemented, but not currently called, in driver->Postprocessing. . For future development reference some common problems:; - pointer not initialized to NULL, causing a segfault when delete [] is called in the deconstructor. (When set to NULL an if statement avoids this segfault). ; - pointers owned by a parent class deleted in the child class. An exception could be when only the child class has information about the size of pointers to pointers, but otherwise risks double-frees (a segfault) and creates duplicated code. ; - FYI, although it does not seem to cause any error, Classname.~Classname() does not have defined behavior, and will do nothing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/265
https://github.com/su2code/SU2/pull/267:140,Modifiability,variab,variable,140,RANS output now includes the full C_f vector instead of the magnitude (useful for finding separation on surfaces) and some clean up for the variable names in Tecplot.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/267
https://github.com/su2code/SU2/issues/268:26,Deployability,install,installed,26,"Version 4.1.0 ""Cardinal"", installed both on my own MacBook Pro and the super computer at my school. Neither can output flow solution when using more than one cores, but the restart file is written with no problem. Not quite sure why... Have to trick the code and restart it to get the solution. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/268
https://github.com/su2code/SU2/issues/269:425,Availability,error,error,425,"Perhaps i found a little bug. ; Can someone confirm, that the output name of variables is different which flow.vtk ""maker"" you use?. SU2_SOL creates ""Conservative_1"" with """" and the automatic flow.vtk has Conservative_1 without """".; This is little irritating when using Paraview and especially Paraview states. If u have a state file created without """" variables and want import a flow.vtk created with SU2_SOLfirst u get an error, second u have to add """" in every calc to get results again",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/269
https://github.com/su2code/SU2/issues/269:77,Modifiability,variab,variables,77,"Perhaps i found a little bug. ; Can someone confirm, that the output name of variables is different which flow.vtk ""maker"" you use?. SU2_SOL creates ""Conservative_1"" with """" and the automatic flow.vtk has Conservative_1 without """".; This is little irritating when using Paraview and especially Paraview states. If u have a state file created without """" variables and want import a flow.vtk created with SU2_SOLfirst u get an error, second u have to add """" in every calc to get results again",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/269
https://github.com/su2code/SU2/issues/269:353,Modifiability,variab,variables,353,"Perhaps i found a little bug. ; Can someone confirm, that the output name of variables is different which flow.vtk ""maker"" you use?. SU2_SOL creates ""Conservative_1"" with """" and the automatic flow.vtk has Conservative_1 without """".; This is little irritating when using Paraview and especially Paraview states. If u have a state file created without """" variables and want import a flow.vtk created with SU2_SOLfirst u get an error, second u have to add """" in every calc to get results again",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/269
https://github.com/su2code/SU2/issues/270:4,Performance,optimiz,optimization,4,"SU2 optimization does not work correctly with CGNS format. Direct computation with CGNS format work correctly. First step of optimization is correct (DSN_001).; On second step (DSN_002) the program write the mesh_airfoil_deform.cgns.; The extension is correct, but internal format is SU2 format.; The command CONVERT_TO_SU2= YES does not work also. May be I do not know something. . Help me!. MESH_FILENAME= mesh_airfoil.cgns; MESH_FORMAT= CGNS; %CGNS_TO_SU2= YES; MESH_OUT_FILENAME= mesh_out.cgns or MESH_OUT_FILENAME= mesh_out.su2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/270
https://github.com/su2code/SU2/issues/270:125,Performance,optimiz,optimization,125,"SU2 optimization does not work correctly with CGNS format. Direct computation with CGNS format work correctly. First step of optimization is correct (DSN_001).; On second step (DSN_002) the program write the mesh_airfoil_deform.cgns.; The extension is correct, but internal format is SU2 format.; The command CONVERT_TO_SU2= YES does not work also. May be I do not know something. . Help me!. MESH_FILENAME= mesh_airfoil.cgns; MESH_FORMAT= CGNS; %CGNS_TO_SU2= YES; MESH_OUT_FILENAME= mesh_out.cgns or MESH_OUT_FILENAME= mesh_out.su2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/270
https://github.com/su2code/SU2/issues/276:123,Testability,test,tests,123,"There seems to be a bug in the multigrid agglomeration. I came across this issue while running the **parallel** regression tests on a local machine. Here, everything was fine. On travis, however, the laminar flatplate case failed. So I ran the case several times and I noticed that the agglomeration rate changes randomly between. `MG level: 3 -> CVs: 97. Agglomeration rate 1/3.28. CFL 3.02.`. and. `MG level: 3 -> CVs: 98. Agglomeration rate 1/3.24. CFL 3.03.`. each time you run the case (sometimes you have to try it a lot of times to get the other result though). This of course also gives slightly different solutions. . For more information just check the most recent travis ci run at pull request #242 (https://travis-ci.org/su2code/SU2/jobs/131067620). Note that this bug also occurs on the develop branch. I labeled this issue ""priority"" because it could potentially lead to other problems as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/276
https://github.com/su2code/SU2/issues/277:294,Usability,simpl,simplify,294,"First one:; It seems, some parameters are missing in config_template.cfg. Would be realy great if u can add rly all parameter u can set. For example ARTCOMP_FACTOR isnt listed in the actual *.cfg. But this parameter can be very important to convergence a problem.; For SU2 beginners this would simplify the getting in not crawling through. The second one is, that some mor detailed infos for every single parameters would be nice, the default value. Either directly in the *.cfg or in an extra description file. An example for ARTCOMP_FACTOR; Adds artificially compressibility | default 1.0 | Can help to convergence a problem or can speed up convergence",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/277
https://github.com/su2code/SU2/pull/278:571,Availability,recover,recover,571,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/278
https://github.com/su2code/SU2/pull/278:83,Deployability,update,updated,83,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/278
https://github.com/su2code/SU2/pull/278:1052,Deployability,release,release,1052,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/278
https://github.com/su2code/SU2/pull/278:349,Integrability,depend,depending,349,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/278
https://github.com/su2code/SU2/pull/278:61,Modifiability,config,config,61,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/278
https://github.com/su2code/SU2/pull/278:707,Performance,perform,performed,707,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/278
https://github.com/su2code/SU2/pull/278:571,Safety,recover,recover,571,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/278
https://github.com/su2code/SU2/pull/278:722,Testability,test,tests,722,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/278
https://github.com/su2code/SU2/pull/278:802,Testability,test,tests,802,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/278
https://github.com/su2code/SU2/pull/278:945,Testability,test,test,945,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/278
https://github.com/su2code/SU2/pull/278:528,Usability,simpl,simplification,528,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/278
https://github.com/su2code/SU2/pull/278:658,Usability,simpl,simplified,658,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/278
https://github.com/su2code/SU2/pull/278:693,Usability,clear,clear,693,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/278
https://github.com/su2code/SU2/issues/279:355,Modifiability,config,config,355,"Hey at all. I have a problem with the discrete_adjoint-Phytonsript. The problem is, that my cases needs a lot of RAM(Over 500GB for CFD_AD and MG). But it is impossible to start the script on our HPC an the machine where I can start the script is low memoried.; With smaller cases it was possible to start discrete_adjoint.py with EXT_ITER=1 to creat all config files, modifying some options and send them separately to the HPC. But as I said with the big files the CFD_AD part takes to much memory. So the last *cfg-files aren't created because the files are just created directly before the calculation. For me especially the config_DOT_AD script is importend. I come to mind to two options; 1. Changing the creation sequence of the *.cfg files from ""before calculation"" to all *.cfg-files at once directly after starting the script; 1. Please tell me how I can creat the *.cfg-files ""manually"". Especially the config_DOT_AD script. Thank you",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/279
https://github.com/su2code/SU2/pull/280:32,Testability,test,tests,32,"First cut at fixing the failing tests, along with adding a whole new set of mesh deformation tests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/280
https://github.com/su2code/SU2/pull/280:93,Testability,test,tests,93,"First cut at fixing the failing tests, along with adding a whole new set of mesh deformation tests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/280
https://github.com/su2code/SU2/pull/281:241,Performance,perform,performance,241,"Output file writing was taking long time in NFS based cluster for huge grids (40 millions case). This change fixes this issue. . End of line output is changed to **\n** from **endl**. **endl** forces a flush to the stream and hence incurs a performance penalty. For a small case with 13000 points, backup time _reduced_ from 7 seconds to 0.5 seconds after this fix.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/281
https://github.com/su2code/SU2/issues/282:143,Performance,perform,performance,143,"Wall distance computation is SU2 right now seems to be doing brute force search along the wall boundaries to find the nearest wall vertex. One performance optimization here would be to use k-d search tree to find the nearest neighbor. Is it necessary to have a internal k-d tree code or can I use a third party library (like pointcloud). Since I was not sure, I have raised this as an issue and not a pull request.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/282
https://github.com/su2code/SU2/issues/282:155,Performance,optimiz,optimization,155,"Wall distance computation is SU2 right now seems to be doing brute force search along the wall boundaries to find the nearest wall vertex. One performance optimization here would be to use k-d search tree to find the nearest neighbor. Is it necessary to have a internal k-d tree code or can I use a third party library (like pointcloud). Since I was not sure, I have raised this as an issue and not a pull request.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/282
https://github.com/su2code/SU2/issues/283:16,Deployability,Update,Update,16,"Hi,. After the ""Update IO"" on April 17 (4c4c296) commit, the Yplus seems to be not right in the output files. The skin friction has been split in x,y and z components and after that I noticed that the y+ in the outputs started to be strange. It's may be a MPI synchronization issue. And just another quick question: Is there any motivation to change the names from ""Pressure_Coefficient"" to ""C<sub>p</sub>"" in the output?. Best,. Cleber.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/283
https://github.com/su2code/SU2/issues/283:260,Integrability,synchroniz,synchronization,260,"Hi,. After the ""Update IO"" on April 17 (4c4c296) commit, the Yplus seems to be not right in the output files. The skin friction has been split in x,y and z components and after that I noticed that the y+ in the outputs started to be strange. It's may be a MPI synchronization issue. And just another quick question: Is there any motivation to change the names from ""Pressure_Coefficient"" to ""C<sub>p</sub>"" in the output?. Best,. Cleber.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/283
https://github.com/su2code/SU2/pull/284:27,Deployability,release,release,27,Some final changes for the release.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/284
https://github.com/su2code/SU2/issues/287:132,Performance,optimiz,optimization,132,"Being able to produce a deformed mesh in cgns rather than SU2 format would be useful for:; - transferring geometries resulting from optimization cases to other simulation tools (whether another fluid solver or for multiphysics simulations); - editting meshes when the files used to generate the mesh have been lost or are unavailable (currently there is no way to load an su2 mesh into pointwise, for example). ; - general compatibility with external tools: 3rd party mesh deformation & generation, CAD, etc. . Since we can already read CGNS format hopefully that won't be too burdensome.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/287
https://github.com/su2code/SU2/issues/287:364,Performance,load,load,364,"Being able to produce a deformed mesh in cgns rather than SU2 format would be useful for:; - transferring geometries resulting from optimization cases to other simulation tools (whether another fluid solver or for multiphysics simulations); - editting meshes when the files used to generate the mesh have been lost or are unavailable (currently there is no way to load an su2 mesh into pointwise, for example). ; - general compatibility with external tools: 3rd party mesh deformation & generation, CAD, etc. . Since we can already read CGNS format hopefully that won't be too burdensome.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/287
https://github.com/su2code/SU2/pull/288:173,Testability,test,tests,173,"This contains a new implementation of tree-based searches with a first application to computing wall distances for RANS calculations (thanks due to Edwin!). Initial scaling tests look good, but still completing some... checking for correctness now.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/288
https://github.com/su2code/SU2/issues/289:457,Availability,error,errorfile,457,"in an optimisation process, once the turbulent flow sim is converged, the adjoint gradients will not. be calculated unless the value of VALUE_OBJFUNC_FILENAME is set to of_func.dat. ; i had it set to of_eval.dat and the optimiser stopped before even creating adjoint-lift and adjoint-drag directories. ; [M6NSopt.txt](https://github.com/su2code/SU2/files/354316/M6NSopt.txt); [processfile.txt](https://github.com/su2code/SU2/files/354339/processfile.txt); [errorfile.txt](https://github.com/su2code/SU2/files/354340/errorfile.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/289
https://github.com/su2code/SU2/issues/289:516,Availability,error,errorfile,516,"in an optimisation process, once the turbulent flow sim is converged, the adjoint gradients will not. be calculated unless the value of VALUE_OBJFUNC_FILENAME is set to of_func.dat. ; i had it set to of_eval.dat and the optimiser stopped before even creating adjoint-lift and adjoint-drag directories. ; [M6NSopt.txt](https://github.com/su2code/SU2/files/354316/M6NSopt.txt); [processfile.txt](https://github.com/su2code/SU2/files/354339/processfile.txt); [errorfile.txt](https://github.com/su2code/SU2/files/354340/errorfile.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/289
https://github.com/su2code/SU2/issues/290:462,Modifiability,config,config,462,"when running an optimisation process, when the solution files are arranged in the /DESIGNS/DSN_001/DIRECT/ directory tree, if the option RESTART_SOLUTION is set to YES in the cfg file, the solution does not restart from a previous restart file! instead it simply deletes all old designs and runs the process from scratch again. ; for example: if i want to run the first N design iterations, then stop the process on the Nth iteration and change something in the config file -e.g. cfl num- (including setting the restart option to YES), upon resubmitting the job all N design iterations are lost and the process starts again from DSN_001. this has proven to be quite an expensive problem for large 3D optimisations, and i am not sure wether this is a bug or something which has been hardcoded for a reason? ; it could be quite useful to have an option of where to restart the solution from? (e.g. restart from DSN_00X); Cheers, T.P.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/290
https://github.com/su2code/SU2/issues/290:256,Usability,simpl,simply,256,"when running an optimisation process, when the solution files are arranged in the /DESIGNS/DSN_001/DIRECT/ directory tree, if the option RESTART_SOLUTION is set to YES in the cfg file, the solution does not restart from a previous restart file! instead it simply deletes all old designs and runs the process from scratch again. ; for example: if i want to run the first N design iterations, then stop the process on the Nth iteration and change something in the config file -e.g. cfl num- (including setting the restart option to YES), upon resubmitting the job all N design iterations are lost and the process starts again from DSN_001. this has proven to be quite an expensive problem for large 3D optimisations, and i am not sure wether this is a bug or something which has been hardcoded for a reason? ; it could be quite useful to have an option of where to restart the solution from? (e.g. restart from DSN_00X); Cheers, T.P.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/290
https://github.com/su2code/SU2/issues/291:195,Availability,avail,available,195,"I am trying to run a big case with approximately 60 million mesh size. I am running it on multiple nodes, each having 8 processors. Problem is that I am able to make use of only 4 cores out of 8 available on each node for this size of problem and rest cores will be idle. ; If I try to run it on more cores, it fails during start and throws a message something like -- error while converting array I4 -I5 for CGNS ..........; But while checking the memory usage during solution time with 4 core per node usage (24 GB memory for each node and around 60 such nodes), it shows only 30-35% memory usage for each node.; May be something need to be improve during start up phase while reading CGNS and converting to SU2 data structure, parmetis phase etc.; This will enable efficient usage of resources for this size problem . For smaller size problems, I am able to use all the cores on each node.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/291
https://github.com/su2code/SU2/issues/291:369,Availability,error,error,369,"I am trying to run a big case with approximately 60 million mesh size. I am running it on multiple nodes, each having 8 processors. Problem is that I am able to make use of only 4 cores out of 8 available on each node for this size of problem and rest cores will be idle. ; If I try to run it on more cores, it fails during start and throws a message something like -- error while converting array I4 -I5 for CGNS ..........; But while checking the memory usage during solution time with 4 core per node usage (24 GB memory for each node and around 60 such nodes), it shows only 30-35% memory usage for each node.; May be something need to be improve during start up phase while reading CGNS and converting to SU2 data structure, parmetis phase etc.; This will enable efficient usage of resources for this size problem . For smaller size problems, I am able to use all the cores on each node.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/291
https://github.com/su2code/SU2/issues/291:768,Energy Efficiency,efficient,efficient,768,"I am trying to run a big case with approximately 60 million mesh size. I am running it on multiple nodes, each having 8 processors. Problem is that I am able to make use of only 4 cores out of 8 available on each node for this size of problem and rest cores will be idle. ; If I try to run it on more cores, it fails during start and throws a message something like -- error while converting array I4 -I5 for CGNS ..........; But while checking the memory usage during solution time with 4 core per node usage (24 GB memory for each node and around 60 such nodes), it shows only 30-35% memory usage for each node.; May be something need to be improve during start up phase while reading CGNS and converting to SU2 data structure, parmetis phase etc.; This will enable efficient usage of resources for this size problem . For smaller size problems, I am able to use all the cores on each node.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/291
https://github.com/su2code/SU2/issues/291:343,Integrability,message,message,343,"I am trying to run a big case with approximately 60 million mesh size. I am running it on multiple nodes, each having 8 processors. Problem is that I am able to make use of only 4 cores out of 8 available on each node for this size of problem and rest cores will be idle. ; If I try to run it on more cores, it fails during start and throws a message something like -- error while converting array I4 -I5 for CGNS ..........; But while checking the memory usage during solution time with 4 core per node usage (24 GB memory for each node and around 60 such nodes), it shows only 30-35% memory usage for each node.; May be something need to be improve during start up phase while reading CGNS and converting to SU2 data structure, parmetis phase etc.; This will enable efficient usage of resources for this size problem . For smaller size problems, I am able to use all the cores on each node.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/291
https://github.com/su2code/SU2/pull/292:1750,Availability,error,errors,1750,"This pull requests adds a capability for multi-objective adjoint evaluation. ; In order to use this capability, a matching number of objectives and surface markers on which to evaluate those objectives, as well as weighting values for each objective must be set. This also works with the python optimization tools, where a flag (COMBINE_OBJECTIVE) determines whether the gradients will be evaluated with a single combined adjoint evaluation or with separate, sequential evaluations. . Option Syntax:; For use with shape_optimization.py:; OPT_OBJECTIVE = DRAG*1.0; LIFT*2.0 ; COMBINE_OBJECTIVE = YES; For use with continuous_adjoint, SU2_CFD, etc, or automatically set by the shape_optimization script:; OBJECTIVE = DRAG, LIFT; OBJECTIVE_WEIGHT = 1.0, -2.0; (Note: opt_objective is still effected by automatically-applied signs - that is, whatever scale is applied to lift will be *-1 to make it a maximization problem. User can now reverse that sign if desired.); In either case, MARKER_MONITORING =( drag_surface, lift_surface); If only one surface is specified, it will automatically be the surface for all objectives listed. Different objectives on different surfaces can also be applied, using lists of the same length. . This change required moving some scaling terms - which means that in one of the test cases the values changed because a scaling factor is moved within the boundary conditions rather than applied after the fact (the final gradient result is the same). In addition to allowing the adjoint for a weighted sum of objectives, this may theoretically allow for applying a numerically convenient scaling factor in the future - ie, in cases where the boundary terms are either too large or too small and cause numerical cancellation errors. . Currently limited to finite difference and continuous adjoint - discrete adjoint coming soon in a separate pull request. ; Also coming soon: an additional test case to add this capability to the regressions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/292
https://github.com/su2code/SU2/pull/292:1803,Deployability,continuous,continuous,1803,"This pull requests adds a capability for multi-objective adjoint evaluation. ; In order to use this capability, a matching number of objectives and surface markers on which to evaluate those objectives, as well as weighting values for each objective must be set. This also works with the python optimization tools, where a flag (COMBINE_OBJECTIVE) determines whether the gradients will be evaluated with a single combined adjoint evaluation or with separate, sequential evaluations. . Option Syntax:; For use with shape_optimization.py:; OPT_OBJECTIVE = DRAG*1.0; LIFT*2.0 ; COMBINE_OBJECTIVE = YES; For use with continuous_adjoint, SU2_CFD, etc, or automatically set by the shape_optimization script:; OBJECTIVE = DRAG, LIFT; OBJECTIVE_WEIGHT = 1.0, -2.0; (Note: opt_objective is still effected by automatically-applied signs - that is, whatever scale is applied to lift will be *-1 to make it a maximization problem. User can now reverse that sign if desired.); In either case, MARKER_MONITORING =( drag_surface, lift_surface); If only one surface is specified, it will automatically be the surface for all objectives listed. Different objectives on different surfaces can also be applied, using lists of the same length. . This change required moving some scaling terms - which means that in one of the test cases the values changed because a scaling factor is moved within the boundary conditions rather than applied after the fact (the final gradient result is the same). In addition to allowing the adjoint for a weighted sum of objectives, this may theoretically allow for applying a numerically convenient scaling factor in the future - ie, in cases where the boundary terms are either too large or too small and cause numerical cancellation errors. . Currently limited to finite difference and continuous adjoint - discrete adjoint coming soon in a separate pull request. ; Also coming soon: an additional test case to add this capability to the regressions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/292
https://github.com/su2code/SU2/pull/292:295,Performance,optimiz,optimization,295,"This pull requests adds a capability for multi-objective adjoint evaluation. ; In order to use this capability, a matching number of objectives and surface markers on which to evaluate those objectives, as well as weighting values for each objective must be set. This also works with the python optimization tools, where a flag (COMBINE_OBJECTIVE) determines whether the gradients will be evaluated with a single combined adjoint evaluation or with separate, sequential evaluations. . Option Syntax:; For use with shape_optimization.py:; OPT_OBJECTIVE = DRAG*1.0; LIFT*2.0 ; COMBINE_OBJECTIVE = YES; For use with continuous_adjoint, SU2_CFD, etc, or automatically set by the shape_optimization script:; OBJECTIVE = DRAG, LIFT; OBJECTIVE_WEIGHT = 1.0, -2.0; (Note: opt_objective is still effected by automatically-applied signs - that is, whatever scale is applied to lift will be *-1 to make it a maximization problem. User can now reverse that sign if desired.); In either case, MARKER_MONITORING =( drag_surface, lift_surface); If only one surface is specified, it will automatically be the surface for all objectives listed. Different objectives on different surfaces can also be applied, using lists of the same length. . This change required moving some scaling terms - which means that in one of the test cases the values changed because a scaling factor is moved within the boundary conditions rather than applied after the fact (the final gradient result is the same). In addition to allowing the adjoint for a weighted sum of objectives, this may theoretically allow for applying a numerically convenient scaling factor in the future - ie, in cases where the boundary terms are either too large or too small and cause numerical cancellation errors. . Currently limited to finite difference and continuous adjoint - discrete adjoint coming soon in a separate pull request. ; Also coming soon: an additional test case to add this capability to the regressions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/292
https://github.com/su2code/SU2/pull/292:1306,Testability,test,test,1306,"This pull requests adds a capability for multi-objective adjoint evaluation. ; In order to use this capability, a matching number of objectives and surface markers on which to evaluate those objectives, as well as weighting values for each objective must be set. This also works with the python optimization tools, where a flag (COMBINE_OBJECTIVE) determines whether the gradients will be evaluated with a single combined adjoint evaluation or with separate, sequential evaluations. . Option Syntax:; For use with shape_optimization.py:; OPT_OBJECTIVE = DRAG*1.0; LIFT*2.0 ; COMBINE_OBJECTIVE = YES; For use with continuous_adjoint, SU2_CFD, etc, or automatically set by the shape_optimization script:; OBJECTIVE = DRAG, LIFT; OBJECTIVE_WEIGHT = 1.0, -2.0; (Note: opt_objective is still effected by automatically-applied signs - that is, whatever scale is applied to lift will be *-1 to make it a maximization problem. User can now reverse that sign if desired.); In either case, MARKER_MONITORING =( drag_surface, lift_surface); If only one surface is specified, it will automatically be the surface for all objectives listed. Different objectives on different surfaces can also be applied, using lists of the same length. . This change required moving some scaling terms - which means that in one of the test cases the values changed because a scaling factor is moved within the boundary conditions rather than applied after the fact (the final gradient result is the same). In addition to allowing the adjoint for a weighted sum of objectives, this may theoretically allow for applying a numerically convenient scaling factor in the future - ie, in cases where the boundary terms are either too large or too small and cause numerical cancellation errors. . Currently limited to finite difference and continuous adjoint - discrete adjoint coming soon in a separate pull request. ; Also coming soon: an additional test case to add this capability to the regressions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/292
https://github.com/su2code/SU2/pull/292:1915,Testability,test,test,1915,"This pull requests adds a capability for multi-objective adjoint evaluation. ; In order to use this capability, a matching number of objectives and surface markers on which to evaluate those objectives, as well as weighting values for each objective must be set. This also works with the python optimization tools, where a flag (COMBINE_OBJECTIVE) determines whether the gradients will be evaluated with a single combined adjoint evaluation or with separate, sequential evaluations. . Option Syntax:; For use with shape_optimization.py:; OPT_OBJECTIVE = DRAG*1.0; LIFT*2.0 ; COMBINE_OBJECTIVE = YES; For use with continuous_adjoint, SU2_CFD, etc, or automatically set by the shape_optimization script:; OBJECTIVE = DRAG, LIFT; OBJECTIVE_WEIGHT = 1.0, -2.0; (Note: opt_objective is still effected by automatically-applied signs - that is, whatever scale is applied to lift will be *-1 to make it a maximization problem. User can now reverse that sign if desired.); In either case, MARKER_MONITORING =( drag_surface, lift_surface); If only one surface is specified, it will automatically be the surface for all objectives listed. Different objectives on different surfaces can also be applied, using lists of the same length. . This change required moving some scaling terms - which means that in one of the test cases the values changed because a scaling factor is moved within the boundary conditions rather than applied after the fact (the final gradient result is the same). In addition to allowing the adjoint for a weighted sum of objectives, this may theoretically allow for applying a numerically convenient scaling factor in the future - ie, in cases where the boundary terms are either too large or too small and cause numerical cancellation errors. . Currently limited to finite difference and continuous adjoint - discrete adjoint coming soon in a separate pull request. ; Also coming soon: an additional test case to add this capability to the regressions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/292
https://github.com/su2code/SU2/issues/293:53,Modifiability,config,config,53,"If you try to execute parallel_computation.py with a config file that includes two or more design variables:; DV_KIND= ROTATION, ROTATION; DV_MARKER= ( AIRCRAFT ); DV_PARAM= ( 32.90150, 0.0, 0.0, 32.90150, 0.0, 1.0 ); ( 32.90150, 0.0, 0.0, 32.90150, 1.0, 0.0 ); DV_VALUE= 45, 45; SU2 will create a config file config_CFD.cfg that doesn’t work. It doesn’t work because the python is changing DV_VALUE= 45, 45 by DV_VALUE= 0 and the new config file is not correct.; The problem is at the end of config.py, where you can read; # HACK - twl; if config.has_key('DV_VALUE_NEW'):; config.DV_VALUE = config.DV_VALUE_NEW; this line sets to 0 the DV_VALUE. I cannot modify (eliminate) this line without running a serious study about its implications during shape optimization, maybe in the near future if we find a volunteer...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/293
https://github.com/su2code/SU2/issues/293:98,Modifiability,variab,variables,98,"If you try to execute parallel_computation.py with a config file that includes two or more design variables:; DV_KIND= ROTATION, ROTATION; DV_MARKER= ( AIRCRAFT ); DV_PARAM= ( 32.90150, 0.0, 0.0, 32.90150, 0.0, 1.0 ); ( 32.90150, 0.0, 0.0, 32.90150, 1.0, 0.0 ); DV_VALUE= 45, 45; SU2 will create a config file config_CFD.cfg that doesn’t work. It doesn’t work because the python is changing DV_VALUE= 45, 45 by DV_VALUE= 0 and the new config file is not correct.; The problem is at the end of config.py, where you can read; # HACK - twl; if config.has_key('DV_VALUE_NEW'):; config.DV_VALUE = config.DV_VALUE_NEW; this line sets to 0 the DV_VALUE. I cannot modify (eliminate) this line without running a serious study about its implications during shape optimization, maybe in the near future if we find a volunteer...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/293
https://github.com/su2code/SU2/issues/293:298,Modifiability,config,config,298,"If you try to execute parallel_computation.py with a config file that includes two or more design variables:; DV_KIND= ROTATION, ROTATION; DV_MARKER= ( AIRCRAFT ); DV_PARAM= ( 32.90150, 0.0, 0.0, 32.90150, 0.0, 1.0 ); ( 32.90150, 0.0, 0.0, 32.90150, 1.0, 0.0 ); DV_VALUE= 45, 45; SU2 will create a config file config_CFD.cfg that doesn’t work. It doesn’t work because the python is changing DV_VALUE= 45, 45 by DV_VALUE= 0 and the new config file is not correct.; The problem is at the end of config.py, where you can read; # HACK - twl; if config.has_key('DV_VALUE_NEW'):; config.DV_VALUE = config.DV_VALUE_NEW; this line sets to 0 the DV_VALUE. I cannot modify (eliminate) this line without running a serious study about its implications during shape optimization, maybe in the near future if we find a volunteer...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/293
https://github.com/su2code/SU2/issues/293:435,Modifiability,config,config,435,"If you try to execute parallel_computation.py with a config file that includes two or more design variables:; DV_KIND= ROTATION, ROTATION; DV_MARKER= ( AIRCRAFT ); DV_PARAM= ( 32.90150, 0.0, 0.0, 32.90150, 0.0, 1.0 ); ( 32.90150, 0.0, 0.0, 32.90150, 1.0, 0.0 ); DV_VALUE= 45, 45; SU2 will create a config file config_CFD.cfg that doesn’t work. It doesn’t work because the python is changing DV_VALUE= 45, 45 by DV_VALUE= 0 and the new config file is not correct.; The problem is at the end of config.py, where you can read; # HACK - twl; if config.has_key('DV_VALUE_NEW'):; config.DV_VALUE = config.DV_VALUE_NEW; this line sets to 0 the DV_VALUE. I cannot modify (eliminate) this line without running a serious study about its implications during shape optimization, maybe in the near future if we find a volunteer...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/293
https://github.com/su2code/SU2/issues/293:493,Modifiability,config,config,493,"If you try to execute parallel_computation.py with a config file that includes two or more design variables:; DV_KIND= ROTATION, ROTATION; DV_MARKER= ( AIRCRAFT ); DV_PARAM= ( 32.90150, 0.0, 0.0, 32.90150, 0.0, 1.0 ); ( 32.90150, 0.0, 0.0, 32.90150, 1.0, 0.0 ); DV_VALUE= 45, 45; SU2 will create a config file config_CFD.cfg that doesn’t work. It doesn’t work because the python is changing DV_VALUE= 45, 45 by DV_VALUE= 0 and the new config file is not correct.; The problem is at the end of config.py, where you can read; # HACK - twl; if config.has_key('DV_VALUE_NEW'):; config.DV_VALUE = config.DV_VALUE_NEW; this line sets to 0 the DV_VALUE. I cannot modify (eliminate) this line without running a serious study about its implications during shape optimization, maybe in the near future if we find a volunteer...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/293
https://github.com/su2code/SU2/issues/293:541,Modifiability,config,config,541,"If you try to execute parallel_computation.py with a config file that includes two or more design variables:; DV_KIND= ROTATION, ROTATION; DV_MARKER= ( AIRCRAFT ); DV_PARAM= ( 32.90150, 0.0, 0.0, 32.90150, 0.0, 1.0 ); ( 32.90150, 0.0, 0.0, 32.90150, 1.0, 0.0 ); DV_VALUE= 45, 45; SU2 will create a config file config_CFD.cfg that doesn’t work. It doesn’t work because the python is changing DV_VALUE= 45, 45 by DV_VALUE= 0 and the new config file is not correct.; The problem is at the end of config.py, where you can read; # HACK - twl; if config.has_key('DV_VALUE_NEW'):; config.DV_VALUE = config.DV_VALUE_NEW; this line sets to 0 the DV_VALUE. I cannot modify (eliminate) this line without running a serious study about its implications during shape optimization, maybe in the near future if we find a volunteer...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/293
https://github.com/su2code/SU2/issues/293:574,Modifiability,config,config,574,"If you try to execute parallel_computation.py with a config file that includes two or more design variables:; DV_KIND= ROTATION, ROTATION; DV_MARKER= ( AIRCRAFT ); DV_PARAM= ( 32.90150, 0.0, 0.0, 32.90150, 0.0, 1.0 ); ( 32.90150, 0.0, 0.0, 32.90150, 1.0, 0.0 ); DV_VALUE= 45, 45; SU2 will create a config file config_CFD.cfg that doesn’t work. It doesn’t work because the python is changing DV_VALUE= 45, 45 by DV_VALUE= 0 and the new config file is not correct.; The problem is at the end of config.py, where you can read; # HACK - twl; if config.has_key('DV_VALUE_NEW'):; config.DV_VALUE = config.DV_VALUE_NEW; this line sets to 0 the DV_VALUE. I cannot modify (eliminate) this line without running a serious study about its implications during shape optimization, maybe in the near future if we find a volunteer...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/293
https://github.com/su2code/SU2/issues/293:592,Modifiability,config,config,592,"If you try to execute parallel_computation.py with a config file that includes two or more design variables:; DV_KIND= ROTATION, ROTATION; DV_MARKER= ( AIRCRAFT ); DV_PARAM= ( 32.90150, 0.0, 0.0, 32.90150, 0.0, 1.0 ); ( 32.90150, 0.0, 0.0, 32.90150, 1.0, 0.0 ); DV_VALUE= 45, 45; SU2 will create a config file config_CFD.cfg that doesn’t work. It doesn’t work because the python is changing DV_VALUE= 45, 45 by DV_VALUE= 0 and the new config file is not correct.; The problem is at the end of config.py, where you can read; # HACK - twl; if config.has_key('DV_VALUE_NEW'):; config.DV_VALUE = config.DV_VALUE_NEW; this line sets to 0 the DV_VALUE. I cannot modify (eliminate) this line without running a serious study about its implications during shape optimization, maybe in the near future if we find a volunteer...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/293
https://github.com/su2code/SU2/issues/293:753,Performance,optimiz,optimization,753,"If you try to execute parallel_computation.py with a config file that includes two or more design variables:; DV_KIND= ROTATION, ROTATION; DV_MARKER= ( AIRCRAFT ); DV_PARAM= ( 32.90150, 0.0, 0.0, 32.90150, 0.0, 1.0 ); ( 32.90150, 0.0, 0.0, 32.90150, 1.0, 0.0 ); DV_VALUE= 45, 45; SU2 will create a config file config_CFD.cfg that doesn’t work. It doesn’t work because the python is changing DV_VALUE= 45, 45 by DV_VALUE= 0 and the new config file is not correct.; The problem is at the end of config.py, where you can read; # HACK - twl; if config.has_key('DV_VALUE_NEW'):; config.DV_VALUE = config.DV_VALUE_NEW; this line sets to 0 the DV_VALUE. I cannot modify (eliminate) this line without running a serious study about its implications during shape optimization, maybe in the near future if we find a volunteer...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/293
https://github.com/su2code/SU2/pull/294:294,Deployability,integrat,integrating,294,"This PR contains two items:; 1. Improvements to the periodic BC. The periodic BCs are now more stable, especially in parallel.; 2. Memory clean up. The RANS solver is now entirely free of memory leaks. I recommend that everyone should run valgrind (http://valgrind.org) on their branches after integrating, in order to check for memory problems and to fix them. While all tests are passing, it is possible that you may see segfaults or other memory problems on your individual branches, now that the class destructors are all active when the code exits. Please let me know asap if you have any problems.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/294
https://github.com/su2code/SU2/pull/294:294,Integrability,integrat,integrating,294,"This PR contains two items:; 1. Improvements to the periodic BC. The periodic BCs are now more stable, especially in parallel.; 2. Memory clean up. The RANS solver is now entirely free of memory leaks. I recommend that everyone should run valgrind (http://valgrind.org) on their branches after integrating, in order to check for memory problems and to fix them. While all tests are passing, it is possible that you may see segfaults or other memory problems on your individual branches, now that the class destructors are all active when the code exits. Please let me know asap if you have any problems.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/294
https://github.com/su2code/SU2/pull/294:372,Testability,test,tests,372,"This PR contains two items:; 1. Improvements to the periodic BC. The periodic BCs are now more stable, especially in parallel.; 2. Memory clean up. The RANS solver is now entirely free of memory leaks. I recommend that everyone should run valgrind (http://valgrind.org) on their branches after integrating, in order to check for memory problems and to fix them. While all tests are passing, it is possible that you may see segfaults or other memory problems on your individual branches, now that the class destructors are all active when the code exits. Please let me know asap if you have any problems.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/294
https://github.com/su2code/SU2/pull/295:454,Deployability,install,installed,454,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/295
https://github.com/su2code/SU2/pull/295:550,Deployability,install,installation,550,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/295
https://github.com/su2code/SU2/pull/295:808,Energy Efficiency,monitor,monitor,808,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/295
https://github.com/su2code/SU2/pull/295:40,Integrability,wrap,wrapping,40,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/295
https://github.com/su2code/SU2/pull/295:70,Integrability,wrap,wrapper,70,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/295
https://github.com/su2code/SU2/pull/295:356,Integrability,wrap,wrapper,356,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/295
https://github.com/su2code/SU2/pull/295:1241,Integrability,interface,interface,1241,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/295
https://github.com/su2code/SU2/pull/295:1351,Integrability,wrap,wrapper,1351,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/295
https://github.com/su2code/SU2/pull/295:263,Modifiability,config,configure,263,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/295
https://github.com/su2code/SU2/pull/295:934,Modifiability,coupling,coupling,934,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/295
https://github.com/su2code/SU2/pull/295:1307,Testability,test,testing,1307,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/295
https://github.com/su2code/SU2/pull/295:1370,Testability,test,test,1370,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/295
https://github.com/su2code/SU2/issues/296:20,Performance,optimiz,optimization,20,"when doing unsteady optimization in parallel, SU2 can not compute the gradients. Ive tested this issue on many cases (pitching, plunging, gist simulation, ....) with both SU2v4.0.0 and SU2-4.2.0 but each time the gradients are NaN. ; both flow and adjoint equations converged well and also the results on single possessor is ok.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/296
https://github.com/su2code/SU2/issues/296:85,Testability,test,tested,85,"when doing unsteady optimization in parallel, SU2 can not compute the gradients. Ive tested this issue on many cases (pitching, plunging, gist simulation, ....) with both SU2v4.0.0 and SU2-4.2.0 but each time the gradients are NaN. ; both flow and adjoint equations converged well and also the results on single possessor is ok.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/296
https://github.com/su2code/SU2/pull/297:382,Availability,avail,available,382,A way to parameterize an airfoil shape is with the use of Kulfan parameters as part of the CST method (http://brendakulfan.com/docs/CST3.pdf). I added the feature to use the CST method for 2D airfoils in SU2 for mesh deformation and obtaining gradients with Kulfan parameters. I have used this method with SU2 in my research on wind turbine blade optimization and wanted to make it available for those that want to use a built-in CST method for airfoil shape parameterization and optimization with SU2.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/297
https://github.com/su2code/SU2/pull/297:9,Modifiability,parameteriz,parameterize,9,A way to parameterize an airfoil shape is with the use of Kulfan parameters as part of the CST method (http://brendakulfan.com/docs/CST3.pdf). I added the feature to use the CST method for 2D airfoils in SU2 for mesh deformation and obtaining gradients with Kulfan parameters. I have used this method with SU2 in my research on wind turbine blade optimization and wanted to make it available for those that want to use a built-in CST method for airfoil shape parameterization and optimization with SU2.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/297
https://github.com/su2code/SU2/pull/297:459,Modifiability,parameteriz,parameterization,459,A way to parameterize an airfoil shape is with the use of Kulfan parameters as part of the CST method (http://brendakulfan.com/docs/CST3.pdf). I added the feature to use the CST method for 2D airfoils in SU2 for mesh deformation and obtaining gradients with Kulfan parameters. I have used this method with SU2 in my research on wind turbine blade optimization and wanted to make it available for those that want to use a built-in CST method for airfoil shape parameterization and optimization with SU2.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/297
https://github.com/su2code/SU2/pull/297:347,Performance,optimiz,optimization,347,A way to parameterize an airfoil shape is with the use of Kulfan parameters as part of the CST method (http://brendakulfan.com/docs/CST3.pdf). I added the feature to use the CST method for 2D airfoils in SU2 for mesh deformation and obtaining gradients with Kulfan parameters. I have used this method with SU2 in my research on wind turbine blade optimization and wanted to make it available for those that want to use a built-in CST method for airfoil shape parameterization and optimization with SU2.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/297
https://github.com/su2code/SU2/pull/297:480,Performance,optimiz,optimization,480,A way to parameterize an airfoil shape is with the use of Kulfan parameters as part of the CST method (http://brendakulfan.com/docs/CST3.pdf). I added the feature to use the CST method for 2D airfoils in SU2 for mesh deformation and obtaining gradients with Kulfan parameters. I have used this method with SU2 in my research on wind turbine blade optimization and wanted to make it available for those that want to use a built-in CST method for airfoil shape parameterization and optimization with SU2.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/297
https://github.com/su2code/SU2/pull/298:1133,Deployability,install,installed,1133,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:1726,Deployability,configurat,configuration,1726,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:1772,Deployability,install,installed,1772,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:1536,Energy Efficiency,adapt,adapted,1536,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:59,Integrability,wrap,wrapper,59,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:347,Integrability,wrap,wrapped,347,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:1468,Integrability,wrap,wrapper,1468,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:463,Modifiability,coupling,coupling,463,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:945,Modifiability,coupling,coupling,945,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:1536,Modifiability,adapt,adapted,1536,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:1726,Modifiability,config,configuration,1726,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:33,Testability,test,test,33,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:85,Testability,test,tests,85,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:118,Testability,test,test,118,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:215,Testability,test,test,215,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:280,Testability,test,tests,280,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:410,Testability,test,tests,410,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:439,Testability,test,test,439,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:523,Testability,Test,TestCases,523,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:731,Testability,test,test,731,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:861,Testability,test,tester,861,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:1031,Testability,test,test,1031,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:1257,Testability,test,test,1257,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:1488,Testability,test,tests,1488,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:1211,Usability,simpl,simply,1211,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/298:1765,Usability,simpl,simply,1765,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/298
https://github.com/su2code/SU2/pull/299:99,Deployability,integrat,integration,99,Consistent calculation of dissipation terms for the Roe scheme for both explicit and implicit time integration. The previous explicit implementation was unstable with the high-order DG solver.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/299
https://github.com/su2code/SU2/pull/299:99,Integrability,integrat,integration,99,Consistent calculation of dissipation terms for the Roe scheme for both explicit and implicit time integration. The previous explicit implementation was unstable with the high-order DG solver.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/299
https://github.com/su2code/SU2/pull/300:8,Deployability,integrat,integrates,8,This PR integrates the source for CGNS v3.3.0 into the SU2 distribution (in externals/cgns/*) and into the autotools build so that it is automatically compiled and linked for you (on by default).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/300
https://github.com/su2code/SU2/pull/300:8,Integrability,integrat,integrates,8,This PR integrates the source for CGNS v3.3.0 into the SU2 distribution (in externals/cgns/*) and into the autotools build so that it is automatically compiled and linked for you (on by default).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/300
https://github.com/su2code/SU2/issues/301:106,Integrability,depend,depending,106,"I have been researching about the Sutherland's law in different CFD codes. The form and coefficients vary depending on the implementation. Assuming a 3 parameters fit (there is a less popular 2 parameters version). I. SU2 (SI units) is using:; MU_REF = 1.716E-5 kg / ms; MU_T_REF = 273.15 K; SUTHERLAND_CONSTANT = 110.4 K; from http://www.cfd-online.com/Wiki/Sutherland's_law. II. FLUENT is using ; MU_REF = 1.716E-5 kg / ms; MU_T_REF = 273.11 K; SUTHERLAND_CONSTANT = 110.56 K. III. The classical book ""Viscous Fluid Flow"" by Frank White (McGraw-Hill) proposes; MU_REF = 1.716E-5 kg / ms; MU_T_REF = 273 K; SUTHERLAND_CONSTANT = 111 K. IV. The NASA webpage https://www.grc.nasa.gov/www/BGH/viscosity.html and SU2 (US units); MU_REF = 1.733E-5 kg / ms; MU_T_REF = 288.16 K; SUTHERLAND_CONSTANT = 110.4 K. And each CFD solver seems to use some slightly different parameters. The difference between I, II and III is small...(%0.5) but large if we compare with IV (%3) (could be a typo in the NASA web page?) . Sutherland's law is very important for SU2 because the nondimensionalization is based on the Reynolds number that typically comes from the viscosity (Sutherland's law again) that we compute from the Temperature evaluated using the Standard US atmosphere. If the viscosity formula that we use to evaluate Re is not consistent with the one that is implemented in SU2 we can find large discrepancies in, for example, the static pressure at the Far-field. I have two recommendations: 1) US and SI should be consistent and we should use exactly the same number for both. 2) Instead of using an internet source I would use the values at White's book which is a classic and permanent reference. I'll implement the change as soon as possible. Best,; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/301
https://github.com/su2code/SU2/issues/303:322,Availability,fault,fault,322,"The same configurations are used to compile; ./configure CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/local/mpi3-dynamic/bin/mpicc --with-cxx=/usr/local/mpi3-dynamic/bin/mpicxx ; CGNS flag is no need to enable since the new version has already taken care of it. . A couple of issues when ran the quicktest,; 1. segmentation fault after the Begin Solver. ; 2. when using multi-cores, got multi-thread outputs. Must be something wrong with the mpi. . Does anybody else have a similar issue? Or it is just my problem. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/303
https://github.com/su2code/SU2/issues/303:9,Deployability,configurat,configurations,9,"The same configurations are used to compile; ./configure CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/local/mpi3-dynamic/bin/mpicc --with-cxx=/usr/local/mpi3-dynamic/bin/mpicxx ; CGNS flag is no need to enable since the new version has already taken care of it. . A couple of issues when ran the quicktest,; 1. segmentation fault after the Begin Solver. ; 2. when using multi-cores, got multi-thread outputs. Must be something wrong with the mpi. . Does anybody else have a similar issue? Or it is just my problem. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/303
https://github.com/su2code/SU2/issues/303:9,Modifiability,config,configurations,9,"The same configurations are used to compile; ./configure CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/local/mpi3-dynamic/bin/mpicc --with-cxx=/usr/local/mpi3-dynamic/bin/mpicxx ; CGNS flag is no need to enable since the new version has already taken care of it. . A couple of issues when ran the quicktest,; 1. segmentation fault after the Begin Solver. ; 2. when using multi-cores, got multi-thread outputs. Must be something wrong with the mpi. . Does anybody else have a similar issue? Or it is just my problem. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/303
https://github.com/su2code/SU2/issues/303:47,Modifiability,config,configure,47,"The same configurations are used to compile; ./configure CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/local/mpi3-dynamic/bin/mpicc --with-cxx=/usr/local/mpi3-dynamic/bin/mpicxx ; CGNS flag is no need to enable since the new version has already taken care of it. . A couple of issues when ran the quicktest,; 1. segmentation fault after the Begin Solver. ; 2. when using multi-cores, got multi-thread outputs. Must be something wrong with the mpi. . Does anybody else have a similar issue? Or it is just my problem. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/303
https://github.com/su2code/SU2/issues/303:385,Performance,multi-thread,multi-thread,385,"The same configurations are used to compile; ./configure CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/local/mpi3-dynamic/bin/mpicc --with-cxx=/usr/local/mpi3-dynamic/bin/mpicxx ; CGNS flag is no need to enable since the new version has already taken care of it. . A couple of issues when ran the quicktest,; 1. segmentation fault after the Begin Solver. ; 2. when using multi-cores, got multi-thread outputs. Must be something wrong with the mpi. . Does anybody else have a similar issue? Or it is just my problem. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/303
https://github.com/su2code/SU2/pull/304:883,Modifiability,config,config,883,"This feature includes several minor changes to unify the style:; - Now we are using CL, CD, CSF across the entire code (instead of Clift, CDrag, CSideForce). This new nomenclature is more consistent with CMx, Fx, that we were using before.; - string GetMarker_xxx to GetMarker_xxx_TagBound to reflect that the output is the name of the bound. this is also more consistent with the existing GetMarker_TagBound; - Minor cosmetic changes e.g. something=something -> something = something. Code comments using /_--- ---_/, else{ -> else { or ){ to ) {. And an important change, now SU2 is able to divide between pressure, momentum and friction contribution to the computed total force. The momentum is important if we are dealing with open surfaces like an engine inlet/outlet. The new names for the main subroutines are. void CEulerSolver::Pressure_Forces(CGeometry *geometry, CConfig *config); void CEulerSolver::Momentum_Forces(CGeometry *geometry, CConfig *config); void CNSSolver::Friction_Forces(CGeometry *geometry, CConfig *config). which are also more consistent with its content.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/304
https://github.com/su2code/SU2/pull/304:957,Modifiability,config,config,957,"This feature includes several minor changes to unify the style:; - Now we are using CL, CD, CSF across the entire code (instead of Clift, CDrag, CSideForce). This new nomenclature is more consistent with CMx, Fx, that we were using before.; - string GetMarker_xxx to GetMarker_xxx_TagBound to reflect that the output is the name of the bound. this is also more consistent with the existing GetMarker_TagBound; - Minor cosmetic changes e.g. something=something -> something = something. Code comments using /_--- ---_/, else{ -> else { or ){ to ) {. And an important change, now SU2 is able to divide between pressure, momentum and friction contribution to the computed total force. The momentum is important if we are dealing with open surfaces like an engine inlet/outlet. The new names for the main subroutines are. void CEulerSolver::Pressure_Forces(CGeometry *geometry, CConfig *config); void CEulerSolver::Momentum_Forces(CGeometry *geometry, CConfig *config); void CNSSolver::Friction_Forces(CGeometry *geometry, CConfig *config). which are also more consistent with its content.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/304
https://github.com/su2code/SU2/pull/304:1028,Modifiability,config,config,1028,"This feature includes several minor changes to unify the style:; - Now we are using CL, CD, CSF across the entire code (instead of Clift, CDrag, CSideForce). This new nomenclature is more consistent with CMx, Fx, that we were using before.; - string GetMarker_xxx to GetMarker_xxx_TagBound to reflect that the output is the name of the bound. this is also more consistent with the existing GetMarker_TagBound; - Minor cosmetic changes e.g. something=something -> something = something. Code comments using /_--- ---_/, else{ -> else { or ){ to ) {. And an important change, now SU2 is able to divide between pressure, momentum and friction contribution to the computed total force. The momentum is important if we are dealing with open surfaces like an engine inlet/outlet. The new names for the main subroutines are. void CEulerSolver::Pressure_Forces(CGeometry *geometry, CConfig *config); void CEulerSolver::Momentum_Forces(CGeometry *geometry, CConfig *config); void CNSSolver::Friction_Forces(CGeometry *geometry, CConfig *config). which are also more consistent with its content.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/304
https://github.com/su2code/SU2/issues/309:67,Availability,avail,available,67,"I was wondering if there is a cell-based structure for primal grid available in SU2, so the primal cells can be looped according to its index in each partition, and its centroid values can be averaged over all of the nodes surrounding it. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/309
https://github.com/su2code/SU2/pull/312:89,Availability,avail,available,89,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/312
https://github.com/su2code/SU2/pull/312:109,Deployability,continuous,continuous,109,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/312
https://github.com/su2code/SU2/pull/312:624,Energy Efficiency,monitor,monitored,624,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/312
https://github.com/su2code/SU2/pull/312:699,Modifiability,variab,variables,699,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/312
https://github.com/su2code/SU2/pull/312:434,Performance,optimiz,optimization,434,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/312
https://github.com/su2code/SU2/pull/312:283,Safety,redund,redundancy,283,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/312
https://github.com/su2code/SU2/pull/312:132,Testability,test,test,132,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/312
https://github.com/su2code/SU2/issues/313:270,Availability,Error,Error,270,"As identified by @LaSerpe during conversation in pull request https://github.com/su2code/SU2/pull/312, there is a bug in the develop branch somewhere during the merge of the solution for the parallel fsi2d test case, which may be related to recent changes in SU2_SOL. . Error output can be seen in: https://travis-ci.org/su2code/SU2/jobs/165118367. Fix should include the addition or modification of a regression test case to catch similar errors in the future. My suggestion for where to start: go back in the builds until you get to one that does not have this error, and check out what the difference in the SU2_SOL routines are there.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/313
https://github.com/su2code/SU2/issues/313:440,Availability,error,errors,440,"As identified by @LaSerpe during conversation in pull request https://github.com/su2code/SU2/pull/312, there is a bug in the develop branch somewhere during the merge of the solution for the parallel fsi2d test case, which may be related to recent changes in SU2_SOL. . Error output can be seen in: https://travis-ci.org/su2code/SU2/jobs/165118367. Fix should include the addition or modification of a regression test case to catch similar errors in the future. My suggestion for where to start: go back in the builds until you get to one that does not have this error, and check out what the difference in the SU2_SOL routines are there.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/313
https://github.com/su2code/SU2/issues/313:563,Availability,error,error,563,"As identified by @LaSerpe during conversation in pull request https://github.com/su2code/SU2/pull/312, there is a bug in the develop branch somewhere during the merge of the solution for the parallel fsi2d test case, which may be related to recent changes in SU2_SOL. . Error output can be seen in: https://travis-ci.org/su2code/SU2/jobs/165118367. Fix should include the addition or modification of a regression test case to catch similar errors in the future. My suggestion for where to start: go back in the builds until you get to one that does not have this error, and check out what the difference in the SU2_SOL routines are there.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/313
https://github.com/su2code/SU2/issues/313:619,Integrability,rout,routines,619,"As identified by @LaSerpe during conversation in pull request https://github.com/su2code/SU2/pull/312, there is a bug in the develop branch somewhere during the merge of the solution for the parallel fsi2d test case, which may be related to recent changes in SU2_SOL. . Error output can be seen in: https://travis-ci.org/su2code/SU2/jobs/165118367. Fix should include the addition or modification of a regression test case to catch similar errors in the future. My suggestion for where to start: go back in the builds until you get to one that does not have this error, and check out what the difference in the SU2_SOL routines are there.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/313
https://github.com/su2code/SU2/issues/313:206,Testability,test,test,206,"As identified by @LaSerpe during conversation in pull request https://github.com/su2code/SU2/pull/312, there is a bug in the develop branch somewhere during the merge of the solution for the parallel fsi2d test case, which may be related to recent changes in SU2_SOL. . Error output can be seen in: https://travis-ci.org/su2code/SU2/jobs/165118367. Fix should include the addition or modification of a regression test case to catch similar errors in the future. My suggestion for where to start: go back in the builds until you get to one that does not have this error, and check out what the difference in the SU2_SOL routines are there.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/313
https://github.com/su2code/SU2/issues/313:413,Testability,test,test,413,"As identified by @LaSerpe during conversation in pull request https://github.com/su2code/SU2/pull/312, there is a bug in the develop branch somewhere during the merge of the solution for the parallel fsi2d test case, which may be related to recent changes in SU2_SOL. . Error output can be seen in: https://travis-ci.org/su2code/SU2/jobs/165118367. Fix should include the addition or modification of a regression test case to catch similar errors in the future. My suggestion for where to start: go back in the builds until you get to one that does not have this error, and check out what the difference in the SU2_SOL routines are there.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/313
https://github.com/su2code/SU2/issues/314:361,Modifiability,variab,variable,361,"Hi all,; i was having troubles with the navierstoke/flatplate regression test.; Using develop branch, on my local server sometimes I get different residuals due to a undefined behaviour during multi-grid construction. ; In particular the problem arises during the agglomeration process.; I pin-pointed this issue and it seems to be related to the fact that the variable ""Parent_CV"" is not set to an initial value. ; I solve this issue by setting it to 0 in the CPoint constructor (in dual_grid_structure.cpp). Could please anyone have a look into this to double-check it?; To reproduce this issue I just run the test case multiple times and once every while I got different values of CFL at the lowest MG level.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/314
https://github.com/su2code/SU2/issues/314:73,Testability,test,test,73,"Hi all,; i was having troubles with the navierstoke/flatplate regression test.; Using develop branch, on my local server sometimes I get different residuals due to a undefined behaviour during multi-grid construction. ; In particular the problem arises during the agglomeration process.; I pin-pointed this issue and it seems to be related to the fact that the variable ""Parent_CV"" is not set to an initial value. ; I solve this issue by setting it to 0 in the CPoint constructor (in dual_grid_structure.cpp). Could please anyone have a look into this to double-check it?; To reproduce this issue I just run the test case multiple times and once every while I got different values of CFL at the lowest MG level.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/314
https://github.com/su2code/SU2/issues/314:612,Testability,test,test,612,"Hi all,; i was having troubles with the navierstoke/flatplate regression test.; Using develop branch, on my local server sometimes I get different residuals due to a undefined behaviour during multi-grid construction. ; In particular the problem arises during the agglomeration process.; I pin-pointed this issue and it seems to be related to the fact that the variable ""Parent_CV"" is not set to an initial value. ; I solve this issue by setting it to 0 in the CPoint constructor (in dual_grid_structure.cpp). Could please anyone have a look into this to double-check it?; To reproduce this issue I just run the test case multiple times and once every while I got different values of CFL at the lowest MG level.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/314
https://github.com/su2code/SU2/pull/316:42,Modifiability,variab,variable,42,This pull request solves issue #276 ; The variable Parent_CV had no initial value causing undefined behaviour during multigrid agglomeration process. The variable is now initialized to 0 in CPoint constructor in dual_geometry_structure.cpp.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/316
https://github.com/su2code/SU2/pull/316:154,Modifiability,variab,variable,154,This pull request solves issue #276 ; The variable Parent_CV had no initial value causing undefined behaviour during multigrid agglomeration process. The variable is now initialized to 0 in CPoint constructor in dual_geometry_structure.cpp.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/316
https://github.com/su2code/SU2/pull/318:9,Deployability,update,update,9,"Complete update of the engine and actuator disk boundary conditions, including a new regression test (propeller.cfg).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/318
https://github.com/su2code/SU2/pull/318:96,Testability,test,test,96,"Complete update of the engine and actuator disk boundary conditions, including a new regression test (propeller.cfg).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/318
https://github.com/su2code/SU2/issues/319:362,Availability,error,errors,362,"Hi,. First of all, thanks for the developing the AD capabilities, they are awesome and very useful. The AD compilation is working great on the master branch using x86_64-apple-darwin15.6.0. However, the current develop branch does not compile using the same platform and commands. It seems a problem with some functions like copysign. Please find below the main errors. Any thought?. Thanks!; Francisco. In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:604:19: error: no; matching function for call to 'copysign'; __a = copysign(isinf(__a) ? _Tp(1) : _Tp(0), __a);; ^~~~~~~~; ../../../SU2_CFD/obj/../src/driver_structure.cpp:3489:74: note: in instantiation of function template specialization; 'std::__1::operator_<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >; >' requested here; Einv[i][k] = complex<su2double>(cos(Omega_HB[k]_(i_Period/nZone))) + J_complex<su2double>(sin(Omega_HB...; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:526:15: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'double' for 1st argument; extern double copysign(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1112:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'float' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:612,Availability,error,error,612,"Hi,. First of all, thanks for the developing the AD capabilities, they are awesome and very useful. The AD compilation is working great on the master branch using x86_64-apple-darwin15.6.0. However, the current develop branch does not compile using the same platform and commands. It seems a problem with some functions like copysign. Please find below the main errors. Any thought?. Thanks!; Francisco. In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:604:19: error: no; matching function for call to 'copysign'; __a = copysign(isinf(__a) ? _Tp(1) : _Tp(0), __a);; ^~~~~~~~; ../../../SU2_CFD/obj/../src/driver_structure.cpp:3489:74: note: in instantiation of function template specialization; 'std::__1::operator_<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >; >' requested here; Einv[i][k] = complex<su2double>(cos(Omega_HB[k]_(i_Period/nZone))) + J_complex<su2double>(sin(Omega_HB...; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:526:15: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'double' for 1st argument; extern double copysign(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1112:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'float' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:2544,Availability,failure,failure,2544,"LINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'long double' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return copysignl(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1123:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:605:19: error: no; matching function for call to 'copysign'; __b = copysign(isinf(__b) ? _Tp(1) : _Tp(0), __b);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:3604,Availability,error,error,3604,"t>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:605:19: error: no; matching function for call to 'copysign'; __b = copysign(isinf(__b) ? _Tp(1) : _Tp(0), __b);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:526:15: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'double' for 1st argument; extern double copysign(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1112:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'float' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:5161,Availability,failure,failure,5161,"LINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'long double' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return copysignl(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1123:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:607:23: error: no; matching function for call to 'copysign'; __c = copysign(_Tp(0), __c);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:6221,Availability,error,error,6221,"xHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:607:23: error: no; matching function for call to 'copysign'; __c = copysign(_Tp(0), __c);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:526:15: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'double' for 1st argument; extern double copysign(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1112:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'float' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:7756,Availability,failure,failure,7756,"LINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'long double' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return copysignl(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1123:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:609:23: error: no; matching function for call to 'copysign'; __d = copysign(_Tp(0), __d);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:8816,Availability,error,error,8816,"xHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:609:23: error: no; matching function for call to 'copysign'; __d = copysign(_Tp(0), __d);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:526:15: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'double' for 1st argument; extern double copysign(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1112:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'float' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:10351,Availability,failure,failure,10351,"LINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'long double' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return copysignl(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1123:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:614:19: error: no; matching function for call to 'copysign'; __c = copysign(isinf(__c) ? _Tp(1) : _Tp(0), __c);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:11411,Availability,error,error,11411,"t>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:614:19: error: no; matching function for call to 'copysign'; __c = copysign(isinf(__c) ? _Tp(1) : _Tp(0), __c);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:526:15: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'double' for 1st argument; extern double copysign(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1112:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'float' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:12968,Availability,failure,failure,12968,"LINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'long double' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return copysignl(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1123:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:615:19: error: no; matching function for call to 'copysign'; __d = copysign(isinf(__d) ? _Tp(1) : _Tp(0), __d);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:14028,Availability,error,error,14028,"t>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:615:19: error: no; matching function for call to 'copysign'; __d = copysign(isinf(__d) ? _Tp(1) : _Tp(0), __d);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:526:15: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'double' for 1st argument; extern double copysign(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1112:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'float' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:15585,Availability,failure,failure,15585,"LINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'long double' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return copysignl(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1123:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:617:23: error: no; matching function for call to 'copysign'; __a = copysign(_Tp(0), __a);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:16645,Availability,error,error,16645,"xHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:617:23: error: no; matching function for call to 'copysign'; __a = copysign(_Tp(0), __a);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:526:15: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'double' for 1st argument; extern double copysign(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1112:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'float' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:18180,Availability,failure,failure,18180,"LINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'long double' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return copysignl(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1123:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:619:23: error: no; matching function for call to 'copysign'; __b = copysign(_Tp(0), __b);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:19240,Availability,error,error,19240,"xHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:619:23: error: no; matching function for call to 'copysign'; __b = copysign(_Tp(0), __b);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:526:15: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'double' for 1st argument; extern double copysign(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1112:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'float' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:20775,Availability,failure,failure,20775,"LINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'long double' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return copysignl(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1123:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:626:23: error: no; matching function for call to 'copysign'; __a = copysign(_Tp(0), __a);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:21835,Availability,error,error,21835,"xHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:626:23: error: no; matching function for call to 'copysign'; __a = copysign(_Tp(0), __a);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:526:15: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'double' for 1st argument; extern double copysign(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1112:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'float' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:23370,Availability,failure,failure,23370,"LINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'long double' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return copysignl(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1123:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:628:23: error: no; matching function for call to 'copysign'; __b = copysign(_Tp(0), __b);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:24430,Availability,error,error,24430,"xHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:628:23: error: no; matching function for call to 'copysign'; __b = copysign(_Tp(0), __b);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:526:15: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'double' for 1st argument; extern double copysign(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1112:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'float' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:25965,Availability,failure,failure,25965,"LINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'long double' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return copysignl(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1123:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:630:23: error: no; matching function for call to 'copysign'; __c = copysign(_Tp(0), __c);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:27025,Availability,error,error,27025,"xHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:630:23: error: no; matching function for call to 'copysign'; __c = copysign(_Tp(0), __c);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:526:15: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'double' for 1st argument; extern double copysign(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1112:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'float' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:28560,Availability,failure,failure,28560,"LINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'long double' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return copysignl(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1123:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:632:23: error: no; matching function for call to 'copysign'; __d = copysign(_Tp(0), __d);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:29620,Availability,error,error,29620,"xHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:632:23: error: no; matching function for call to 'copysign'; __d = copysign(_Tp(0), __d);; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:526:15: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'double' for 1st argument; extern double copysign(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1112:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'float' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:31155,Availability,failure,failure,31155,"LINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return copysignf(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1113:46: note: ; candidate function not viable: no known conversion from 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >' to 'long double' for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return copysignl(...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1123:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:885:12: error: no; matching function for call to 'hypot'; return hypot(__c.real(), __c.imag());; ^~~~~; ../../../SU2_CFD/obj/../src/driver_structure.cpp:3516:13: note: in instantiation of function template specialization",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:32215,Availability,error,error,32215,"uble,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:885:12: error: no; matching function for call to 'hypot'; return hypot(__c.real(), __c.imag());; ^~~~~; ../../../SU2_CFD/obj/../src/driver_structure.cpp:3516:13: note: in instantiation of function template specialization; 'std::__1::abs<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >'; requested here; max_val = abs(temp[k][k]);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:439:15: note: ; candidate function not viable: no known conversion from 'value_type' (aka; 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >') to 'double' for 1st; argument; extern double hypot(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1288:46: note: ; candidate function not viable: no known conversion from 'value_type' (aka; 'codi::ActiveReal<codi::JacobiTape<cod",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:34100,Availability,failure,failure,34100,"at hypot(float __lcpp_x, float __lcpp_y) _NOEXCEPT {return hypotf(__lcpp...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1289:46: note: ; candidate function not viable: no known conversion from 'value_type' (aka; 'codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >') to 'long double'; for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double hypot(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return hypotl(__lcpp...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1299:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; hypot(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:673:24: error: no; matching function for call to 'fmax'; _Tp __logbw = logb(fmax(fabs(__c), fabs(__d)));; ^~~~; ../../../SU2_CFD/obj/../src/driver_structure.cpp:3532:38: note: in instantiation of function template special",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:35157,Availability,error,error,35157,"earIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; hypot(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:673:24: error: no; matching function for call to 'fmax'; _Tp __logbw = logb(fmax(fabs(__c), fabs(__d)));; ^~~~; ../../../SU2_CFD/obj/../src/driver_structure.cpp:3532:38: note: in instantiation of function template specialization; 'std::__1::operator/<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >; >' requested here; complex<su2double> c = temp[i][k] / temp[k][k];; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:546:15: note: ; candidate function not viable: no known conversion from 'Abs<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >' to 'double' for 1st; argument; extern double fmax(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1240:46: note: ; candidate function not viable: no known conversion from 'Abs<double,; codi::ActiveReal<codi::JacobiTape",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:37061,Availability,failure,failure,37061,"p_y) _NOEXCEPT {return fmaxf(__lcpp_x...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1241:46: note: ; candidate function not viable: no known conversion from 'Abs<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >' to 'long double'; for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double fmax(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return fmaxl(__lcpp_x...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1251:1: note: ; candidate template ignored: substitution failure [with _A1 = codi::Abs<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >, _A2 =; codi::Abs<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >]:; no type named 'type' in 'std::__1::__lazy_enable_if<false, std::__1::__promote<codi::Abs<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >, codi::Abs<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >, void> >'; fmax(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:681:15: error: no; matching function for call to 'scalbn'; _Tp __x = scalbn((__a \* __c + __b \* __d) / __denom, -__ilogbw);; ^~~~~~; /Applications/Xcode.app/Contents/Developer/Plat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:38198,Availability,error,error,38198,"::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >]:; no type named 'type' in 'std::__1::__lazy_enable_if<false, std::__1::__promote<codi::Abs<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >, codi::Abs<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >, void> >'; fmax(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:681:15: error: no; matching function for call to 'scalbn'; _Tp __x = scalbn((__a \* __c + __b \* __d) / __denom, -__ilogbw);; ^~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:423:15: note: ; candidate function not viable: no known conversion from 'Divide11<double, codi::Add11<double, codi::Multiply11<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >' to 'double' for 1st; argument; extern double scalbn(double, int);; ^; /Applications/Xcode.app/Contents/D",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:42540,Availability,error,error,42540,"TapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >]; typename enable_if<is_integral<_A1>::value, double>::type; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:682:15: error: no; matching function for call to 'scalbn'; _Tp __y = scalbn((__b \* __c - __a \* __d) / __denom, -__ilogbw);; ^~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:423:15: note: ; candidate function not viable: no known conversion from 'Divide11<double, codi::Subtract11<double, codi::Multiply11<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >' to 'double' for 1st; argument; extern double scalbn(double, int);; ^; /Applications/Xcode.app/Conte",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:46444,Availability,error,errors,46444,"582:46: note: ; candidate function not viable: no known conversion from 'Divide11<double, codi::Subtract11<double, codi::Multiply11<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >' to 'long double'; for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double scalbn(long double __lcpp_x, int __lcpp_y) _NOEXCEPT {return scalbnl(__lcpp_x, __...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1586:20: note: ; candidate template ignored: disabled by 'enable_if' [with _A1 = codi::Divide11<double, codi::Subtract11<double,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >]; typename enable_if<is_integral<_A1>::value, double>::type; ^; 16 errors generated.; make[2]: **\* [../src/___bin_SU2_CFD_AD-driver_structure.o] Error 1; make[2]: **\* Waiting for unfinished jobs....; make[1]: **\* [install-recursive] Error 1; make: **\* [install-SU2_AD] Error 2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:46523,Availability,Error,Error,46523,"582:46: note: ; candidate function not viable: no known conversion from 'Divide11<double, codi::Subtract11<double, codi::Multiply11<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >' to 'long double'; for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double scalbn(long double __lcpp_x, int __lcpp_y) _NOEXCEPT {return scalbnl(__lcpp_x, __...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1586:20: note: ; candidate template ignored: disabled by 'enable_if' [with _A1 = codi::Divide11<double, codi::Subtract11<double,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >]; typename enable_if<is_integral<_A1>::value, double>::type; ^; 16 errors generated.; make[2]: **\* [../src/___bin_SU2_CFD_AD-driver_structure.o] Error 1; make[2]: **\* Waiting for unfinished jobs....; make[1]: **\* [install-recursive] Error 1; make: **\* [install-SU2_AD] Error 2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:46613,Availability,Error,Error,46613,"582:46: note: ; candidate function not viable: no known conversion from 'Divide11<double, codi::Subtract11<double, codi::Multiply11<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >' to 'long double'; for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double scalbn(long double __lcpp_x, int __lcpp_y) _NOEXCEPT {return scalbnl(__lcpp_x, __...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1586:20: note: ; candidate template ignored: disabled by 'enable_if' [with _A1 = codi::Divide11<double, codi::Subtract11<double,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >]; typename enable_if<is_integral<_A1>::value, double>::type; ^; 16 errors generated.; make[2]: **\* [../src/___bin_SU2_CFD_AD-driver_structure.o] Error 1; make[2]: **\* Waiting for unfinished jobs....; make[1]: **\* [install-recursive] Error 1; make: **\* [install-SU2_AD] Error 2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:46650,Availability,Error,Error,46650,"582:46: note: ; candidate function not viable: no known conversion from 'Divide11<double, codi::Subtract11<double, codi::Multiply11<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >' to 'long double'; for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double scalbn(long double __lcpp_x, int __lcpp_y) _NOEXCEPT {return scalbnl(__lcpp_x, __...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1586:20: note: ; candidate template ignored: disabled by 'enable_if' [with _A1 = codi::Divide11<double, codi::Subtract11<double,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >]; typename enable_if<is_integral<_A1>::value, double>::type; ^; 16 errors generated.; make[2]: **\* [../src/___bin_SU2_CFD_AD-driver_structure.o] Error 1; make[2]: **\* Waiting for unfinished jobs....; make[1]: **\* [install-recursive] Error 1; make: **\* [install-SU2_AD] Error 2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:46594,Deployability,install,install-recursive,46594,"582:46: note: ; candidate function not viable: no known conversion from 'Divide11<double, codi::Subtract11<double, codi::Multiply11<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >' to 'long double'; for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double scalbn(long double __lcpp_x, int __lcpp_y) _NOEXCEPT {return scalbnl(__lcpp_x, __...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1586:20: note: ; candidate template ignored: disabled by 'enable_if' [with _A1 = codi::Divide11<double, codi::Subtract11<double,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >]; typename enable_if<is_integral<_A1>::value, double>::type; ^; 16 errors generated.; make[2]: **\* [../src/___bin_SU2_CFD_AD-driver_structure.o] Error 1; make[2]: **\* Waiting for unfinished jobs....; make[1]: **\* [install-recursive] Error 1; make: **\* [install-SU2_AD] Error 2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:46634,Deployability,install,install-,46634,"582:46: note: ; candidate function not viable: no known conversion from 'Divide11<double, codi::Subtract11<double, codi::Multiply11<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >' to 'long double'; for 1st argument; inline _LIBCPP_INLINE_VISIBILITY long double scalbn(long double __lcpp_x, int __lcpp_y) _NOEXCEPT {return scalbnl(__lcpp_x, __...; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1586:20: note: ; candidate template ignored: disabled by 'enable_if' [with _A1 = codi::Divide11<double, codi::Subtract11<double,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >,; codi::Multiply11<double, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> >; >, codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >]; typename enable_if<is_integral<_A1>::value, double>::type; ^; 16 errors generated.; make[2]: **\* [../src/___bin_SU2_CFD_AD-driver_structure.o] Error 1; make[2]: **\* Waiting for unfinished jobs....; make[1]: **\* [install-recursive] Error 1; make: **\* [install-SU2_AD] Error 2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/319:35220,Testability,log,logb,35220,"earIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; hypot(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:673:24: error: no; matching function for call to 'fmax'; _Tp __logbw = logb(fmax(fabs(__c), fabs(__d)));; ^~~~; ../../../SU2_CFD/obj/../src/driver_structure.cpp:3532:38: note: in instantiation of function template specialization; 'std::__1::operator/<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >; >' requested here; complex<su2double> c = temp[i][k] / temp[k][k];; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:546:15: note: ; candidate function not viable: no known conversion from 'Abs<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >' to 'double' for 1st; argument; extern double fmax(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1240:46: note: ; candidate function not viable: no known conversion from 'Abs<double,; codi::ActiveReal<codi::JacobiTape",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/319
https://github.com/su2code/SU2/issues/320:468,Energy Efficiency,Reduce,Reduce,468,"Got this question when running a shocktube problem. Used Euler explicit time stepping method and a fixed time step. In addition, I non-dimensionalized the variables. By cheking the solution, the solution is marching by the specified physical time. It is supposed to use the non-dimensional time step, right? If so, then a bug report is submmitted. . if (time_steping) {; # ifdef HAVE_MPI. ```; su2double rbuf_time, sbuf_time;; sbuf_time = Global_Delta_Time;; SU2_MPI::Reduce(&sbuf_time, &rbuf_time, 1, MPI_DOUBLE, MPI_MIN, MASTER_NODE, MPI_COMM_WORLD);; SU2_MPI::Bcast(&rbuf_time, 1, MPI_DOUBLE, MASTER_NODE, MPI_COMM_WORLD);; Global_Delta_Time = rbuf_time;; ```; # endif. ```; for (iPoint = 0; iPoint < nPointDomain; iPoint++){. /*--- Sets the regular CFL equal to the unsteady CFL ---*/; config->SetCFL(iMesh,config->GetUnst_CFL());. /*--- If the unsteady CFL is set to zero, it uses the defined unsteady time step, otherwise; it computes the time step based on the unsteady CFL ---*/; if (config->GetCFL(iMesh) == 0.0){; node[iPoint]->SetDelta_Time(config->GetDelta_UnstTime()); //Here should we use GetDelta_UnstTimeND?; } else {; node[iPoint]->SetDelta_Time(Global_Delta_Time);; }; }; ```. }",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/320
https://github.com/su2code/SU2/issues/320:155,Modifiability,variab,variables,155,"Got this question when running a shocktube problem. Used Euler explicit time stepping method and a fixed time step. In addition, I non-dimensionalized the variables. By cheking the solution, the solution is marching by the specified physical time. It is supposed to use the non-dimensional time step, right? If so, then a bug report is submmitted. . if (time_steping) {; # ifdef HAVE_MPI. ```; su2double rbuf_time, sbuf_time;; sbuf_time = Global_Delta_Time;; SU2_MPI::Reduce(&sbuf_time, &rbuf_time, 1, MPI_DOUBLE, MPI_MIN, MASTER_NODE, MPI_COMM_WORLD);; SU2_MPI::Bcast(&rbuf_time, 1, MPI_DOUBLE, MASTER_NODE, MPI_COMM_WORLD);; Global_Delta_Time = rbuf_time;; ```; # endif. ```; for (iPoint = 0; iPoint < nPointDomain; iPoint++){. /*--- Sets the regular CFL equal to the unsteady CFL ---*/; config->SetCFL(iMesh,config->GetUnst_CFL());. /*--- If the unsteady CFL is set to zero, it uses the defined unsteady time step, otherwise; it computes the time step based on the unsteady CFL ---*/; if (config->GetCFL(iMesh) == 0.0){; node[iPoint]->SetDelta_Time(config->GetDelta_UnstTime()); //Here should we use GetDelta_UnstTimeND?; } else {; node[iPoint]->SetDelta_Time(Global_Delta_Time);; }; }; ```. }",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/320
https://github.com/su2code/SU2/issues/320:790,Modifiability,config,config,790,"Got this question when running a shocktube problem. Used Euler explicit time stepping method and a fixed time step. In addition, I non-dimensionalized the variables. By cheking the solution, the solution is marching by the specified physical time. It is supposed to use the non-dimensional time step, right? If so, then a bug report is submmitted. . if (time_steping) {; # ifdef HAVE_MPI. ```; su2double rbuf_time, sbuf_time;; sbuf_time = Global_Delta_Time;; SU2_MPI::Reduce(&sbuf_time, &rbuf_time, 1, MPI_DOUBLE, MPI_MIN, MASTER_NODE, MPI_COMM_WORLD);; SU2_MPI::Bcast(&rbuf_time, 1, MPI_DOUBLE, MASTER_NODE, MPI_COMM_WORLD);; Global_Delta_Time = rbuf_time;; ```; # endif. ```; for (iPoint = 0; iPoint < nPointDomain; iPoint++){. /*--- Sets the regular CFL equal to the unsteady CFL ---*/; config->SetCFL(iMesh,config->GetUnst_CFL());. /*--- If the unsteady CFL is set to zero, it uses the defined unsteady time step, otherwise; it computes the time step based on the unsteady CFL ---*/; if (config->GetCFL(iMesh) == 0.0){; node[iPoint]->SetDelta_Time(config->GetDelta_UnstTime()); //Here should we use GetDelta_UnstTimeND?; } else {; node[iPoint]->SetDelta_Time(Global_Delta_Time);; }; }; ```. }",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/320
https://github.com/su2code/SU2/issues/320:811,Modifiability,config,config,811,"Got this question when running a shocktube problem. Used Euler explicit time stepping method and a fixed time step. In addition, I non-dimensionalized the variables. By cheking the solution, the solution is marching by the specified physical time. It is supposed to use the non-dimensional time step, right? If so, then a bug report is submmitted. . if (time_steping) {; # ifdef HAVE_MPI. ```; su2double rbuf_time, sbuf_time;; sbuf_time = Global_Delta_Time;; SU2_MPI::Reduce(&sbuf_time, &rbuf_time, 1, MPI_DOUBLE, MPI_MIN, MASTER_NODE, MPI_COMM_WORLD);; SU2_MPI::Bcast(&rbuf_time, 1, MPI_DOUBLE, MASTER_NODE, MPI_COMM_WORLD);; Global_Delta_Time = rbuf_time;; ```; # endif. ```; for (iPoint = 0; iPoint < nPointDomain; iPoint++){. /*--- Sets the regular CFL equal to the unsteady CFL ---*/; config->SetCFL(iMesh,config->GetUnst_CFL());. /*--- If the unsteady CFL is set to zero, it uses the defined unsteady time step, otherwise; it computes the time step based on the unsteady CFL ---*/; if (config->GetCFL(iMesh) == 0.0){; node[iPoint]->SetDelta_Time(config->GetDelta_UnstTime()); //Here should we use GetDelta_UnstTimeND?; } else {; node[iPoint]->SetDelta_Time(Global_Delta_Time);; }; }; ```. }",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/320
https://github.com/su2code/SU2/issues/320:992,Modifiability,config,config,992,"Got this question when running a shocktube problem. Used Euler explicit time stepping method and a fixed time step. In addition, I non-dimensionalized the variables. By cheking the solution, the solution is marching by the specified physical time. It is supposed to use the non-dimensional time step, right? If so, then a bug report is submmitted. . if (time_steping) {; # ifdef HAVE_MPI. ```; su2double rbuf_time, sbuf_time;; sbuf_time = Global_Delta_Time;; SU2_MPI::Reduce(&sbuf_time, &rbuf_time, 1, MPI_DOUBLE, MPI_MIN, MASTER_NODE, MPI_COMM_WORLD);; SU2_MPI::Bcast(&rbuf_time, 1, MPI_DOUBLE, MASTER_NODE, MPI_COMM_WORLD);; Global_Delta_Time = rbuf_time;; ```; # endif. ```; for (iPoint = 0; iPoint < nPointDomain; iPoint++){. /*--- Sets the regular CFL equal to the unsteady CFL ---*/; config->SetCFL(iMesh,config->GetUnst_CFL());. /*--- If the unsteady CFL is set to zero, it uses the defined unsteady time step, otherwise; it computes the time step based on the unsteady CFL ---*/; if (config->GetCFL(iMesh) == 0.0){; node[iPoint]->SetDelta_Time(config->GetDelta_UnstTime()); //Here should we use GetDelta_UnstTimeND?; } else {; node[iPoint]->SetDelta_Time(Global_Delta_Time);; }; }; ```. }",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/320
https://github.com/su2code/SU2/issues/320:1052,Modifiability,config,config,1052,"Got this question when running a shocktube problem. Used Euler explicit time stepping method and a fixed time step. In addition, I non-dimensionalized the variables. By cheking the solution, the solution is marching by the specified physical time. It is supposed to use the non-dimensional time step, right? If so, then a bug report is submmitted. . if (time_steping) {; # ifdef HAVE_MPI. ```; su2double rbuf_time, sbuf_time;; sbuf_time = Global_Delta_Time;; SU2_MPI::Reduce(&sbuf_time, &rbuf_time, 1, MPI_DOUBLE, MPI_MIN, MASTER_NODE, MPI_COMM_WORLD);; SU2_MPI::Bcast(&rbuf_time, 1, MPI_DOUBLE, MASTER_NODE, MPI_COMM_WORLD);; Global_Delta_Time = rbuf_time;; ```; # endif. ```; for (iPoint = 0; iPoint < nPointDomain; iPoint++){. /*--- Sets the regular CFL equal to the unsteady CFL ---*/; config->SetCFL(iMesh,config->GetUnst_CFL());. /*--- If the unsteady CFL is set to zero, it uses the defined unsteady time step, otherwise; it computes the time step based on the unsteady CFL ---*/; if (config->GetCFL(iMesh) == 0.0){; node[iPoint]->SetDelta_Time(config->GetDelta_UnstTime()); //Here should we use GetDelta_UnstTimeND?; } else {; node[iPoint]->SetDelta_Time(Global_Delta_Time);; }; }; ```. }",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/320
https://github.com/su2code/SU2/issues/321:200,Modifiability,config,config,200,"I have recently been trying to run a series of 3D inverse design cases but have been struggling to get it to work properly. . To use the inverse design feature i have set; INV_DESIGN_CP= YES ; in the config file, this adds an output variable CP_diff to the history file. To test this variables i have been running a test with two wings:; NACA0012 wing (unit chord, span 4, no sweep or taper); NACA4410 wing (unit chord, span 4, no sweep or taper). Here there NACA0012 will act as the starting wing and the NACA4410 will be the target. My current process is:; Mesh NACA0012;; Deform mesh to NACA4410;; Run SU2;; Read in data from solution file and output wing surface to TargetCP.dat in format; ""Global_Index"", ""x_coord"", ""y_coord"", ""z_coord"", ""Pressure"", ""Pressure_Coefficient"", ""Mach_Number"";; Set mesh back to original NACA0012;; Run SU2; (This produces a solution with Cp_diff=3.4868); Deform mesh to NACA4410;; Run SU2; (This produces a solution with Cp_diff=0.4733). This final run should surely give Cp_diff=0?? I have checked the final pressure distributions and they are within 5e-8 of each other at all points. What equation is used to calculate Cp_diff?. What format should the TargetCp.dat file be in? I have based the format used here on the test case example, this is only a 2D case though. Any help would be much appreciated. I have included my config file and a TargetCp.dat file below. [inv_opt3D.cfg.txt](https://github.com/su2code/SU2/files/533463/inv_opt3D.cfg.txt); [TargetCp.dat.txt](https://github.com/su2code/SU2/files/533465/TargetCp.dat.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/321
https://github.com/su2code/SU2/issues/321:233,Modifiability,variab,variable,233,"I have recently been trying to run a series of 3D inverse design cases but have been struggling to get it to work properly. . To use the inverse design feature i have set; INV_DESIGN_CP= YES ; in the config file, this adds an output variable CP_diff to the history file. To test this variables i have been running a test with two wings:; NACA0012 wing (unit chord, span 4, no sweep or taper); NACA4410 wing (unit chord, span 4, no sweep or taper). Here there NACA0012 will act as the starting wing and the NACA4410 will be the target. My current process is:; Mesh NACA0012;; Deform mesh to NACA4410;; Run SU2;; Read in data from solution file and output wing surface to TargetCP.dat in format; ""Global_Index"", ""x_coord"", ""y_coord"", ""z_coord"", ""Pressure"", ""Pressure_Coefficient"", ""Mach_Number"";; Set mesh back to original NACA0012;; Run SU2; (This produces a solution with Cp_diff=3.4868); Deform mesh to NACA4410;; Run SU2; (This produces a solution with Cp_diff=0.4733). This final run should surely give Cp_diff=0?? I have checked the final pressure distributions and they are within 5e-8 of each other at all points. What equation is used to calculate Cp_diff?. What format should the TargetCp.dat file be in? I have based the format used here on the test case example, this is only a 2D case though. Any help would be much appreciated. I have included my config file and a TargetCp.dat file below. [inv_opt3D.cfg.txt](https://github.com/su2code/SU2/files/533463/inv_opt3D.cfg.txt); [TargetCp.dat.txt](https://github.com/su2code/SU2/files/533465/TargetCp.dat.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/321
https://github.com/su2code/SU2/issues/321:284,Modifiability,variab,variables,284,"I have recently been trying to run a series of 3D inverse design cases but have been struggling to get it to work properly. . To use the inverse design feature i have set; INV_DESIGN_CP= YES ; in the config file, this adds an output variable CP_diff to the history file. To test this variables i have been running a test with two wings:; NACA0012 wing (unit chord, span 4, no sweep or taper); NACA4410 wing (unit chord, span 4, no sweep or taper). Here there NACA0012 will act as the starting wing and the NACA4410 will be the target. My current process is:; Mesh NACA0012;; Deform mesh to NACA4410;; Run SU2;; Read in data from solution file and output wing surface to TargetCP.dat in format; ""Global_Index"", ""x_coord"", ""y_coord"", ""z_coord"", ""Pressure"", ""Pressure_Coefficient"", ""Mach_Number"";; Set mesh back to original NACA0012;; Run SU2; (This produces a solution with Cp_diff=3.4868); Deform mesh to NACA4410;; Run SU2; (This produces a solution with Cp_diff=0.4733). This final run should surely give Cp_diff=0?? I have checked the final pressure distributions and they are within 5e-8 of each other at all points. What equation is used to calculate Cp_diff?. What format should the TargetCp.dat file be in? I have based the format used here on the test case example, this is only a 2D case though. Any help would be much appreciated. I have included my config file and a TargetCp.dat file below. [inv_opt3D.cfg.txt](https://github.com/su2code/SU2/files/533463/inv_opt3D.cfg.txt); [TargetCp.dat.txt](https://github.com/su2code/SU2/files/533465/TargetCp.dat.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/321
https://github.com/su2code/SU2/issues/321:1359,Modifiability,config,config,1359,"I have recently been trying to run a series of 3D inverse design cases but have been struggling to get it to work properly. . To use the inverse design feature i have set; INV_DESIGN_CP= YES ; in the config file, this adds an output variable CP_diff to the history file. To test this variables i have been running a test with two wings:; NACA0012 wing (unit chord, span 4, no sweep or taper); NACA4410 wing (unit chord, span 4, no sweep or taper). Here there NACA0012 will act as the starting wing and the NACA4410 will be the target. My current process is:; Mesh NACA0012;; Deform mesh to NACA4410;; Run SU2;; Read in data from solution file and output wing surface to TargetCP.dat in format; ""Global_Index"", ""x_coord"", ""y_coord"", ""z_coord"", ""Pressure"", ""Pressure_Coefficient"", ""Mach_Number"";; Set mesh back to original NACA0012;; Run SU2; (This produces a solution with Cp_diff=3.4868); Deform mesh to NACA4410;; Run SU2; (This produces a solution with Cp_diff=0.4733). This final run should surely give Cp_diff=0?? I have checked the final pressure distributions and they are within 5e-8 of each other at all points. What equation is used to calculate Cp_diff?. What format should the TargetCp.dat file be in? I have based the format used here on the test case example, this is only a 2D case though. Any help would be much appreciated. I have included my config file and a TargetCp.dat file below. [inv_opt3D.cfg.txt](https://github.com/su2code/SU2/files/533463/inv_opt3D.cfg.txt); [TargetCp.dat.txt](https://github.com/su2code/SU2/files/533465/TargetCp.dat.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/321
https://github.com/su2code/SU2/issues/321:274,Testability,test,test,274,"I have recently been trying to run a series of 3D inverse design cases but have been struggling to get it to work properly. . To use the inverse design feature i have set; INV_DESIGN_CP= YES ; in the config file, this adds an output variable CP_diff to the history file. To test this variables i have been running a test with two wings:; NACA0012 wing (unit chord, span 4, no sweep or taper); NACA4410 wing (unit chord, span 4, no sweep or taper). Here there NACA0012 will act as the starting wing and the NACA4410 will be the target. My current process is:; Mesh NACA0012;; Deform mesh to NACA4410;; Run SU2;; Read in data from solution file and output wing surface to TargetCP.dat in format; ""Global_Index"", ""x_coord"", ""y_coord"", ""z_coord"", ""Pressure"", ""Pressure_Coefficient"", ""Mach_Number"";; Set mesh back to original NACA0012;; Run SU2; (This produces a solution with Cp_diff=3.4868); Deform mesh to NACA4410;; Run SU2; (This produces a solution with Cp_diff=0.4733). This final run should surely give Cp_diff=0?? I have checked the final pressure distributions and they are within 5e-8 of each other at all points. What equation is used to calculate Cp_diff?. What format should the TargetCp.dat file be in? I have based the format used here on the test case example, this is only a 2D case though. Any help would be much appreciated. I have included my config file and a TargetCp.dat file below. [inv_opt3D.cfg.txt](https://github.com/su2code/SU2/files/533463/inv_opt3D.cfg.txt); [TargetCp.dat.txt](https://github.com/su2code/SU2/files/533465/TargetCp.dat.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/321
https://github.com/su2code/SU2/issues/321:316,Testability,test,test,316,"I have recently been trying to run a series of 3D inverse design cases but have been struggling to get it to work properly. . To use the inverse design feature i have set; INV_DESIGN_CP= YES ; in the config file, this adds an output variable CP_diff to the history file. To test this variables i have been running a test with two wings:; NACA0012 wing (unit chord, span 4, no sweep or taper); NACA4410 wing (unit chord, span 4, no sweep or taper). Here there NACA0012 will act as the starting wing and the NACA4410 will be the target. My current process is:; Mesh NACA0012;; Deform mesh to NACA4410;; Run SU2;; Read in data from solution file and output wing surface to TargetCP.dat in format; ""Global_Index"", ""x_coord"", ""y_coord"", ""z_coord"", ""Pressure"", ""Pressure_Coefficient"", ""Mach_Number"";; Set mesh back to original NACA0012;; Run SU2; (This produces a solution with Cp_diff=3.4868); Deform mesh to NACA4410;; Run SU2; (This produces a solution with Cp_diff=0.4733). This final run should surely give Cp_diff=0?? I have checked the final pressure distributions and they are within 5e-8 of each other at all points. What equation is used to calculate Cp_diff?. What format should the TargetCp.dat file be in? I have based the format used here on the test case example, this is only a 2D case though. Any help would be much appreciated. I have included my config file and a TargetCp.dat file below. [inv_opt3D.cfg.txt](https://github.com/su2code/SU2/files/533463/inv_opt3D.cfg.txt); [TargetCp.dat.txt](https://github.com/su2code/SU2/files/533465/TargetCp.dat.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/321
https://github.com/su2code/SU2/issues/321:1254,Testability,test,test,1254,"I have recently been trying to run a series of 3D inverse design cases but have been struggling to get it to work properly. . To use the inverse design feature i have set; INV_DESIGN_CP= YES ; in the config file, this adds an output variable CP_diff to the history file. To test this variables i have been running a test with two wings:; NACA0012 wing (unit chord, span 4, no sweep or taper); NACA4410 wing (unit chord, span 4, no sweep or taper). Here there NACA0012 will act as the starting wing and the NACA4410 will be the target. My current process is:; Mesh NACA0012;; Deform mesh to NACA4410;; Run SU2;; Read in data from solution file and output wing surface to TargetCP.dat in format; ""Global_Index"", ""x_coord"", ""y_coord"", ""z_coord"", ""Pressure"", ""Pressure_Coefficient"", ""Mach_Number"";; Set mesh back to original NACA0012;; Run SU2; (This produces a solution with Cp_diff=3.4868); Deform mesh to NACA4410;; Run SU2; (This produces a solution with Cp_diff=0.4733). This final run should surely give Cp_diff=0?? I have checked the final pressure distributions and they are within 5e-8 of each other at all points. What equation is used to calculate Cp_diff?. What format should the TargetCp.dat file be in? I have based the format used here on the test case example, this is only a 2D case though. Any help would be much appreciated. I have included my config file and a TargetCp.dat file below. [inv_opt3D.cfg.txt](https://github.com/su2code/SU2/files/533463/inv_opt3D.cfg.txt); [TargetCp.dat.txt](https://github.com/su2code/SU2/files/533465/TargetCp.dat.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/321
https://github.com/su2code/SU2/pull/322:1035,Integrability,interface,interface,1035,"This pull request contains a first step towards sliding mesh implementation. Fluid-Fluid simulations are now possible using the NEAREST_NEIGHBOUR approach between an arbitrary number of zones. The driver structure has changed: a CFluidDriver and a CGeneralDriver were created in place of the singlezone and multizone drivers.; FluidDriver is capable of managing an arbitrary number of fluid zones exploiting the Cinterpolator and the CTransfer classes.; CGeneralDriver is left to run single-zone FEM, heat, poisson or wave problems. For the time being they are still limited to single zone problems only (as in the current develop branch).; If you any idea or suggestion about what the new drivers' names should be or about some reference multizone problem we may use in the future to extend the General driver we could start a discussion. The CTransfer and CInterpolator classes were modified to deal with an arbitrary number of fluid zone, (they were limited to 2 zones only). . A new BC MARKER_FLUID_INTERFACE was introduced.; This interface must be specified like, for instance, the MARKER_CLAMPED or MARKER_NORMAL_LOAD in FSI problems.; Regarding this BC, now it still requires the MARKER_FSI_INTERFACE to be specified in order to create the interfaces.; For this pull request I left the old name but I think it should change, maybe into something more general like MARKER_ZONE_INTERFACE. Any suggestion?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/322
https://github.com/su2code/SU2/pull/322:1247,Integrability,interface,interfaces,1247,"This pull request contains a first step towards sliding mesh implementation. Fluid-Fluid simulations are now possible using the NEAREST_NEIGHBOUR approach between an arbitrary number of zones. The driver structure has changed: a CFluidDriver and a CGeneralDriver were created in place of the singlezone and multizone drivers.; FluidDriver is capable of managing an arbitrary number of fluid zones exploiting the Cinterpolator and the CTransfer classes.; CGeneralDriver is left to run single-zone FEM, heat, poisson or wave problems. For the time being they are still limited to single zone problems only (as in the current develop branch).; If you any idea or suggestion about what the new drivers' names should be or about some reference multizone problem we may use in the future to extend the General driver we could start a discussion. The CTransfer and CInterpolator classes were modified to deal with an arbitrary number of fluid zone, (they were limited to 2 zones only). . A new BC MARKER_FLUID_INTERFACE was introduced.; This interface must be specified like, for instance, the MARKER_CLAMPED or MARKER_NORMAL_LOAD in FSI problems.; Regarding this BC, now it still requires the MARKER_FSI_INTERFACE to be specified in order to create the interfaces.; For this pull request I left the old name but I think it should change, maybe into something more general like MARKER_ZONE_INTERFACE. Any suggestion?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/322
https://github.com/su2code/SU2/pull/322:785,Modifiability,extend,extend,785,"This pull request contains a first step towards sliding mesh implementation. Fluid-Fluid simulations are now possible using the NEAREST_NEIGHBOUR approach between an arbitrary number of zones. The driver structure has changed: a CFluidDriver and a CGeneralDriver were created in place of the singlezone and multizone drivers.; FluidDriver is capable of managing an arbitrary number of fluid zones exploiting the Cinterpolator and the CTransfer classes.; CGeneralDriver is left to run single-zone FEM, heat, poisson or wave problems. For the time being they are still limited to single zone problems only (as in the current develop branch).; If you any idea or suggestion about what the new drivers' names should be or about some reference multizone problem we may use in the future to extend the General driver we could start a discussion. The CTransfer and CInterpolator classes were modified to deal with an arbitrary number of fluid zone, (they were limited to 2 zones only). . A new BC MARKER_FLUID_INTERFACE was introduced.; This interface must be specified like, for instance, the MARKER_CLAMPED or MARKER_NORMAL_LOAD in FSI problems.; Regarding this BC, now it still requires the MARKER_FSI_INTERFACE to be specified in order to create the interfaces.; For this pull request I left the old name but I think it should change, maybe into something more general like MARKER_ZONE_INTERFACE. Any suggestion?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/322
https://github.com/su2code/SU2/issues/323:98,Modifiability,config,config,98,"I know this is silly... but... Am I the only one who finds the lower case ""o"" in the AoA keyword (config file) a little bit disturbing?... I think we should use all capital letter for all the keyword and ; AoA should be ANGLE_OF_ATTACK or just AOA... unfortunately, this change will affect a couple of config files :-)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/323
https://github.com/su2code/SU2/issues/323:302,Modifiability,config,config,302,"I know this is silly... but... Am I the only one who finds the lower case ""o"" in the AoA keyword (config file) a little bit disturbing?... I think we should use all capital letter for all the keyword and ; AoA should be ANGLE_OF_ATTACK or just AOA... unfortunately, this change will affect a couple of config files :-)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/323
https://github.com/su2code/SU2/pull/325:99,Deployability,update,updated,99,"Critical improvements in the CL driver including the restart capability. New information, like the updated AoA or the current external iteration, is stored at the end of the restart file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/325
https://github.com/su2code/SU2/pull/326:278,Modifiability,variab,variable,278,"An algebraic transition model that relies on local information, herein named as BC model, is added. The model uses Spalart-Allmaras model as the baseline model. BC model does not solve for any transport equations as in LM model, but instead, it uses the already transported S-A variable, nu_t. The model achieves its purpose by modifying the production term of the S-A. IMPORTANT: A research paper is written about our model, and submitted to ASME Journal of Fluids Engineering, and currently it is under review. If you need detailed information regarding to the model, please contact me from sametcakmakcioglu@gmail.com. Under the TestCases folder, I have added three test cases. Feel free to test the transition model for your own test cases. I also have T106 turbine cascade test case with successful results, and I can share it with you if requested. Please do not hesitate to contact me if you have more test cases (especially 3-D transition cases) that you would like me to solve. I would be more than happy to hear back your comments/suggestions. . Sincerely, ; Samet C. Cakmakcioglu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/326
https://github.com/su2code/SU2/pull/326:632,Testability,Test,TestCases,632,"An algebraic transition model that relies on local information, herein named as BC model, is added. The model uses Spalart-Allmaras model as the baseline model. BC model does not solve for any transport equations as in LM model, but instead, it uses the already transported S-A variable, nu_t. The model achieves its purpose by modifying the production term of the S-A. IMPORTANT: A research paper is written about our model, and submitted to ASME Journal of Fluids Engineering, and currently it is under review. If you need detailed information regarding to the model, please contact me from sametcakmakcioglu@gmail.com. Under the TestCases folder, I have added three test cases. Feel free to test the transition model for your own test cases. I also have T106 turbine cascade test case with successful results, and I can share it with you if requested. Please do not hesitate to contact me if you have more test cases (especially 3-D transition cases) that you would like me to solve. I would be more than happy to hear back your comments/suggestions. . Sincerely, ; Samet C. Cakmakcioglu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/326
https://github.com/su2code/SU2/pull/326:669,Testability,test,test,669,"An algebraic transition model that relies on local information, herein named as BC model, is added. The model uses Spalart-Allmaras model as the baseline model. BC model does not solve for any transport equations as in LM model, but instead, it uses the already transported S-A variable, nu_t. The model achieves its purpose by modifying the production term of the S-A. IMPORTANT: A research paper is written about our model, and submitted to ASME Journal of Fluids Engineering, and currently it is under review. If you need detailed information regarding to the model, please contact me from sametcakmakcioglu@gmail.com. Under the TestCases folder, I have added three test cases. Feel free to test the transition model for your own test cases. I also have T106 turbine cascade test case with successful results, and I can share it with you if requested. Please do not hesitate to contact me if you have more test cases (especially 3-D transition cases) that you would like me to solve. I would be more than happy to hear back your comments/suggestions. . Sincerely, ; Samet C. Cakmakcioglu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/326
https://github.com/su2code/SU2/pull/326:694,Testability,test,test,694,"An algebraic transition model that relies on local information, herein named as BC model, is added. The model uses Spalart-Allmaras model as the baseline model. BC model does not solve for any transport equations as in LM model, but instead, it uses the already transported S-A variable, nu_t. The model achieves its purpose by modifying the production term of the S-A. IMPORTANT: A research paper is written about our model, and submitted to ASME Journal of Fluids Engineering, and currently it is under review. If you need detailed information regarding to the model, please contact me from sametcakmakcioglu@gmail.com. Under the TestCases folder, I have added three test cases. Feel free to test the transition model for your own test cases. I also have T106 turbine cascade test case with successful results, and I can share it with you if requested. Please do not hesitate to contact me if you have more test cases (especially 3-D transition cases) that you would like me to solve. I would be more than happy to hear back your comments/suggestions. . Sincerely, ; Samet C. Cakmakcioglu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/326
https://github.com/su2code/SU2/pull/326:733,Testability,test,test,733,"An algebraic transition model that relies on local information, herein named as BC model, is added. The model uses Spalart-Allmaras model as the baseline model. BC model does not solve for any transport equations as in LM model, but instead, it uses the already transported S-A variable, nu_t. The model achieves its purpose by modifying the production term of the S-A. IMPORTANT: A research paper is written about our model, and submitted to ASME Journal of Fluids Engineering, and currently it is under review. If you need detailed information regarding to the model, please contact me from sametcakmakcioglu@gmail.com. Under the TestCases folder, I have added three test cases. Feel free to test the transition model for your own test cases. I also have T106 turbine cascade test case with successful results, and I can share it with you if requested. Please do not hesitate to contact me if you have more test cases (especially 3-D transition cases) that you would like me to solve. I would be more than happy to hear back your comments/suggestions. . Sincerely, ; Samet C. Cakmakcioglu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/326
https://github.com/su2code/SU2/pull/326:778,Testability,test,test,778,"An algebraic transition model that relies on local information, herein named as BC model, is added. The model uses Spalart-Allmaras model as the baseline model. BC model does not solve for any transport equations as in LM model, but instead, it uses the already transported S-A variable, nu_t. The model achieves its purpose by modifying the production term of the S-A. IMPORTANT: A research paper is written about our model, and submitted to ASME Journal of Fluids Engineering, and currently it is under review. If you need detailed information regarding to the model, please contact me from sametcakmakcioglu@gmail.com. Under the TestCases folder, I have added three test cases. Feel free to test the transition model for your own test cases. I also have T106 turbine cascade test case with successful results, and I can share it with you if requested. Please do not hesitate to contact me if you have more test cases (especially 3-D transition cases) that you would like me to solve. I would be more than happy to hear back your comments/suggestions. . Sincerely, ; Samet C. Cakmakcioglu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/326
https://github.com/su2code/SU2/pull/326:909,Testability,test,test,909,"An algebraic transition model that relies on local information, herein named as BC model, is added. The model uses Spalart-Allmaras model as the baseline model. BC model does not solve for any transport equations as in LM model, but instead, it uses the already transported S-A variable, nu_t. The model achieves its purpose by modifying the production term of the S-A. IMPORTANT: A research paper is written about our model, and submitted to ASME Journal of Fluids Engineering, and currently it is under review. If you need detailed information regarding to the model, please contact me from sametcakmakcioglu@gmail.com. Under the TestCases folder, I have added three test cases. Feel free to test the transition model for your own test cases. I also have T106 turbine cascade test case with successful results, and I can share it with you if requested. Please do not hesitate to contact me if you have more test cases (especially 3-D transition cases) that you would like me to solve. I would be more than happy to hear back your comments/suggestions. . Sincerely, ; Samet C. Cakmakcioglu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/326
https://github.com/su2code/SU2/pull/328:1686,Deployability,update,update,1686,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/328:207,Integrability,rout,routines,207,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/328:257,Integrability,rout,routines,257,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/328:423,Integrability,rout,routines,423,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/328:1223,Integrability,rout,routines,1223,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/328:670,Modifiability,refactor,refactoring,670,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/328:686,Modifiability,rewrite,rewrite,686,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/328:937,Modifiability,refactor,refactoring,937,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/328:997,Modifiability,variab,variables,997,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/328:1025,Modifiability,variab,variables,1025,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/328:102,Performance,bottleneck,bottleneck,102,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/328:1081,Performance,load,loading,1081,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/328:1705,Performance,load,loaders,1705,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/328:661,Usability,simpl,simply,661,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/328
https://github.com/su2code/SU2/pull/330:151,Energy Efficiency,reduce,reduce,151,"This implementation allows the definition of cartesian, cylindrical and spherical FFD boxes. The gradient evaluation itself has been also revisited to reduce the required time by skipping the surface deformation process when the variable is has been fixed by the user.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/330
https://github.com/su2code/SU2/pull/330:229,Modifiability,variab,variable,229,"This implementation allows the definition of cartesian, cylindrical and spherical FFD boxes. The gradient evaluation itself has been also revisited to reduce the required time by skipping the surface deformation process when the variable is has been fixed by the user.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/330
https://github.com/su2code/SU2/pull/331:25,Deployability,patch,patched,25,Until now we have always patched the interface.py by hand to make it run on Windows Server 2012 R2.; By issueing a PR we hope this won't be necessary in the future anymore.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/331
https://github.com/su2code/SU2/pull/331:37,Integrability,interface,interface,37,Until now we have always patched the interface.py by hand to make it run on Windows Server 2012 R2.; By issueing a PR we hope this won't be necessary in the future anymore.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/331
https://github.com/su2code/SU2/pull/333:282,Availability,avail,available,282,"Hi all,. I have implemented the Delayed Detached Eddy Simulation (DDES) in SU2. Also, I added 2 of the newest sub-grid scales (SGS) in order to mitigate the so-called ""grey area"": Vorticity based SGS (Deck et al. 2012) and Shear-layer adapted SGS (Shur et at. 2015). This option is available as ""HYBRID RANS/LES= SA_DDES, SA_ZDES OR SA_EDDES"". In order to lower the dissipation of the Roe scheme in LES areas, 3 different numerical blending are available: FD (Using the DDES' F_dt function), NTS (Travin et al. 2002 numerical blending) and NTS_DUCROS (the NTS + Ducros' Shock Sensor). Option: ""ROE_LOW_DISSIPATION= FD"". Lastly, 3 SA's turbulence model variants were added: Edward and Chandra Modification (SA_E), Mixing layer Compressibility Correction (SA_COMP) and both together (SA_E_COMP). I would like to hear some comments about the implementation. Regards,. Eduardo. Please see the attached pdf showing some detailed implementation and preliminary results.; [Molina_DDESinSU2.pdf](https://github.com/su2code/SU2/files/602029/Molina_DDESinSU2.pdf)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/333
https://github.com/su2code/SU2/pull/333:445,Availability,avail,available,445,"Hi all,. I have implemented the Delayed Detached Eddy Simulation (DDES) in SU2. Also, I added 2 of the newest sub-grid scales (SGS) in order to mitigate the so-called ""grey area"": Vorticity based SGS (Deck et al. 2012) and Shear-layer adapted SGS (Shur et at. 2015). This option is available as ""HYBRID RANS/LES= SA_DDES, SA_ZDES OR SA_EDDES"". In order to lower the dissipation of the Roe scheme in LES areas, 3 different numerical blending are available: FD (Using the DDES' F_dt function), NTS (Travin et al. 2002 numerical blending) and NTS_DUCROS (the NTS + Ducros' Shock Sensor). Option: ""ROE_LOW_DISSIPATION= FD"". Lastly, 3 SA's turbulence model variants were added: Edward and Chandra Modification (SA_E), Mixing layer Compressibility Correction (SA_COMP) and both together (SA_E_COMP). I would like to hear some comments about the implementation. Regards,. Eduardo. Please see the attached pdf showing some detailed implementation and preliminary results.; [Molina_DDESinSU2.pdf](https://github.com/su2code/SU2/files/602029/Molina_DDESinSU2.pdf)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/333
https://github.com/su2code/SU2/pull/333:235,Energy Efficiency,adapt,adapted,235,"Hi all,. I have implemented the Delayed Detached Eddy Simulation (DDES) in SU2. Also, I added 2 of the newest sub-grid scales (SGS) in order to mitigate the so-called ""grey area"": Vorticity based SGS (Deck et al. 2012) and Shear-layer adapted SGS (Shur et at. 2015). This option is available as ""HYBRID RANS/LES= SA_DDES, SA_ZDES OR SA_EDDES"". In order to lower the dissipation of the Roe scheme in LES areas, 3 different numerical blending are available: FD (Using the DDES' F_dt function), NTS (Travin et al. 2002 numerical blending) and NTS_DUCROS (the NTS + Ducros' Shock Sensor). Option: ""ROE_LOW_DISSIPATION= FD"". Lastly, 3 SA's turbulence model variants were added: Edward and Chandra Modification (SA_E), Mixing layer Compressibility Correction (SA_COMP) and both together (SA_E_COMP). I would like to hear some comments about the implementation. Regards,. Eduardo. Please see the attached pdf showing some detailed implementation and preliminary results.; [Molina_DDESinSU2.pdf](https://github.com/su2code/SU2/files/602029/Molina_DDESinSU2.pdf)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/333
https://github.com/su2code/SU2/pull/333:576,Energy Efficiency,Sensor,Sensor,576,"Hi all,. I have implemented the Delayed Detached Eddy Simulation (DDES) in SU2. Also, I added 2 of the newest sub-grid scales (SGS) in order to mitigate the so-called ""grey area"": Vorticity based SGS (Deck et al. 2012) and Shear-layer adapted SGS (Shur et at. 2015). This option is available as ""HYBRID RANS/LES= SA_DDES, SA_ZDES OR SA_EDDES"". In order to lower the dissipation of the Roe scheme in LES areas, 3 different numerical blending are available: FD (Using the DDES' F_dt function), NTS (Travin et al. 2002 numerical blending) and NTS_DUCROS (the NTS + Ducros' Shock Sensor). Option: ""ROE_LOW_DISSIPATION= FD"". Lastly, 3 SA's turbulence model variants were added: Edward and Chandra Modification (SA_E), Mixing layer Compressibility Correction (SA_COMP) and both together (SA_E_COMP). I would like to hear some comments about the implementation. Regards,. Eduardo. Please see the attached pdf showing some detailed implementation and preliminary results.; [Molina_DDESinSU2.pdf](https://github.com/su2code/SU2/files/602029/Molina_DDESinSU2.pdf)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/333
https://github.com/su2code/SU2/pull/333:235,Modifiability,adapt,adapted,235,"Hi all,. I have implemented the Delayed Detached Eddy Simulation (DDES) in SU2. Also, I added 2 of the newest sub-grid scales (SGS) in order to mitigate the so-called ""grey area"": Vorticity based SGS (Deck et al. 2012) and Shear-layer adapted SGS (Shur et at. 2015). This option is available as ""HYBRID RANS/LES= SA_DDES, SA_ZDES OR SA_EDDES"". In order to lower the dissipation of the Roe scheme in LES areas, 3 different numerical blending are available: FD (Using the DDES' F_dt function), NTS (Travin et al. 2002 numerical blending) and NTS_DUCROS (the NTS + Ducros' Shock Sensor). Option: ""ROE_LOW_DISSIPATION= FD"". Lastly, 3 SA's turbulence model variants were added: Edward and Chandra Modification (SA_E), Mixing layer Compressibility Correction (SA_COMP) and both together (SA_E_COMP). I would like to hear some comments about the implementation. Regards,. Eduardo. Please see the attached pdf showing some detailed implementation and preliminary results.; [Molina_DDESinSU2.pdf](https://github.com/su2code/SU2/files/602029/Molina_DDESinSU2.pdf)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/333
https://github.com/su2code/SU2/pull/335:388,Modifiability,config,config,388,"With this (very small) change, users can quickly change the system command used by the python scripts to launch parallel jobs without making any modifications to the code. ; Example:; (bash); export SU2_MPI_COMMAND=""mpiexec -n %i %s"". NOTE:; SU2_MPI_COMMAND must contain '%i' and '%s', in that order, which will be replaced with the number of processors and the SU2 command (ie, 'SU2_CFD config.cfg') respectively.; If this environment variable exists in the workspace, whatever is in it will be used instead of the default options. This should allow things like nonstandard mpi launchers, additional arguments like hostfiles, etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/335
https://github.com/su2code/SU2/pull/335:436,Modifiability,variab,variable,436,"With this (very small) change, users can quickly change the system command used by the python scripts to launch parallel jobs without making any modifications to the code. ; Example:; (bash); export SU2_MPI_COMMAND=""mpiexec -n %i %s"". NOTE:; SU2_MPI_COMMAND must contain '%i' and '%s', in that order, which will be replaced with the number of processors and the SU2 command (ie, 'SU2_CFD config.cfg') respectively.; If this environment variable exists in the workspace, whatever is in it will be used instead of the default options. This should allow things like nonstandard mpi launchers, additional arguments like hostfiles, etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/335
https://github.com/su2code/SU2/pull/336:396,Modifiability,config,config,396,"With this (very small) change, users can quickly change the system command used by the python scripts to launch parallel jobs without making any modifications to the code.; Example (for bash shell):; export SU2_MPI_COMMAND=""mpiexec -n %i %s"". NOTE:; SU2_MPI_COMMAND must contain '%i' and '%s', in that order, which will be replaced with the number of processors and the SU2 command (ie, 'SU2_CFD config.cfg') respectively.; If this environment variable exists in the workspace, whatever is in it will be used instead of the default options. This should allow things like nonstandard mpi launchers, additional arguments like hostfiles, etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/336
https://github.com/su2code/SU2/pull/336:444,Modifiability,variab,variable,444,"With this (very small) change, users can quickly change the system command used by the python scripts to launch parallel jobs without making any modifications to the code.; Example (for bash shell):; export SU2_MPI_COMMAND=""mpiexec -n %i %s"". NOTE:; SU2_MPI_COMMAND must contain '%i' and '%s', in that order, which will be replaced with the number of processors and the SU2 command (ie, 'SU2_CFD config.cfg') respectively.; If this environment variable exists in the workspace, whatever is in it will be used instead of the default options. This should allow things like nonstandard mpi launchers, additional arguments like hostfiles, etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/336
https://github.com/su2code/SU2/issues/337:20,Performance,optimiz,optimizing,20,"Hi!. Currently I am optimizing 2D airfoil models for my master thesis. I did a small test with a naca0012 at AOA of 0 degree (Re = 0.7e6) just to check whether the optimization process works for this incompressible case.; I changed the objective function to drag, without any constraints. I aspected the optimizer to deform the airfoil shape untill a flat plate is reached, but this is not the case. It creates approximately 14 designs and after the 14th design, it starts over and it calculates the first design again. Furthermore the 14th design was just a small adjustment on the 1st design.; I am wondering whether there is an inbuild constraint in the code, which prevents the code to flatten out the airfoil totally. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/337
https://github.com/su2code/SU2/issues/337:164,Performance,optimiz,optimization,164,"Hi!. Currently I am optimizing 2D airfoil models for my master thesis. I did a small test with a naca0012 at AOA of 0 degree (Re = 0.7e6) just to check whether the optimization process works for this incompressible case.; I changed the objective function to drag, without any constraints. I aspected the optimizer to deform the airfoil shape untill a flat plate is reached, but this is not the case. It creates approximately 14 designs and after the 14th design, it starts over and it calculates the first design again. Furthermore the 14th design was just a small adjustment on the 1st design.; I am wondering whether there is an inbuild constraint in the code, which prevents the code to flatten out the airfoil totally. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/337
https://github.com/su2code/SU2/issues/337:304,Performance,optimiz,optimizer,304,"Hi!. Currently I am optimizing 2D airfoil models for my master thesis. I did a small test with a naca0012 at AOA of 0 degree (Re = 0.7e6) just to check whether the optimization process works for this incompressible case.; I changed the objective function to drag, without any constraints. I aspected the optimizer to deform the airfoil shape untill a flat plate is reached, but this is not the case. It creates approximately 14 designs and after the 14th design, it starts over and it calculates the first design again. Furthermore the 14th design was just a small adjustment on the 1st design.; I am wondering whether there is an inbuild constraint in the code, which prevents the code to flatten out the airfoil totally. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/337
https://github.com/su2code/SU2/issues/337:85,Testability,test,test,85,"Hi!. Currently I am optimizing 2D airfoil models for my master thesis. I did a small test with a naca0012 at AOA of 0 degree (Re = 0.7e6) just to check whether the optimization process works for this incompressible case.; I changed the objective function to drag, without any constraints. I aspected the optimizer to deform the airfoil shape untill a flat plate is reached, but this is not the case. It creates approximately 14 designs and after the 14th design, it starts over and it calculates the first design again. Furthermore the 14th design was just a small adjustment on the 1st design.; I am wondering whether there is an inbuild constraint in the code, which prevents the code to flatten out the airfoil totally. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/337
https://github.com/su2code/SU2/pull/339:89,Availability,error,error,89,"replaced pointer conversion by atoi function, previous implementation caused compilation error on newer 64 bit platform compilers",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/339
https://github.com/su2code/SU2/pull/340:712,Testability,test,test,712,"The new wall distance using ADT is a great contribution to SU2, incredible useful to run large grids. Unfortunately, AD mode doesn't work properly and it is not possible to run any medium or large grid (>~1.5MCells). This is an important limitation. I think (not really sure) it is a memory issue... the AD of this subroutine requires too much memory and kills the code. In fact, the original Wall Distance subroutine uses passivedouble to fix that issue. Anyway, for the time being, the develop branch should work properly (direct and adjoint mode). And, until we fix AD implementation of this subrotuine, the traditional Wall distance subroutine is is going to be used. I have added #ifdef ADT_WALLDISTANCE to test the ADT distance (AD mode). Thanks and sorry for the extra work. PS.- If the code passes the tests, I think it is important to accept the change as soon as possible. As I said before, the develop branch (AD mode) is not working for moderate size grids.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/340
https://github.com/su2code/SU2/pull/340:810,Testability,test,tests,810,"The new wall distance using ADT is a great contribution to SU2, incredible useful to run large grids. Unfortunately, AD mode doesn't work properly and it is not possible to run any medium or large grid (>~1.5MCells). This is an important limitation. I think (not really sure) it is a memory issue... the AD of this subroutine requires too much memory and kills the code. In fact, the original Wall Distance subroutine uses passivedouble to fix that issue. Anyway, for the time being, the develop branch should work properly (direct and adjoint mode). And, until we fix AD implementation of this subrotuine, the traditional Wall distance subroutine is is going to be used. I have added #ifdef ADT_WALLDISTANCE to test the ADT distance (AD mode). Thanks and sorry for the extra work. PS.- If the code passes the tests, I think it is important to accept the change as soon as possible. As I said before, the develop branch (AD mode) is not working for moderate size grids.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/340
https://github.com/su2code/SU2/issues/341:58,Availability,error,error,58,"This is two, related, issues:; 1. Currently there is some error during postprocessing, apparently mainly for unsteady cases, and occurring at the step where it is trying to read in the restart file. This seemed to crop up somewhere after build 711 . (within the last month, error does not occur at https://travis-ci.org/su2code/SU2/builds/174140107, and does in square_cylinder and other unsteady cases in https://travis-ci.org/su2code/SU2/jobs/181044438); 2. The regression tests did not catch this error - because the error occurs during postprocessing, and the regression test checks values obtained prior to that step, the regressions appear to pass in this case. Maybe a check on the output flow file, or introducing a check to catch any error output for all the tests. . Labeled as priority since there seems to be a bug in unsteady post-processing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/341
https://github.com/su2code/SU2/issues/341:274,Availability,error,error,274,"This is two, related, issues:; 1. Currently there is some error during postprocessing, apparently mainly for unsteady cases, and occurring at the step where it is trying to read in the restart file. This seemed to crop up somewhere after build 711 . (within the last month, error does not occur at https://travis-ci.org/su2code/SU2/builds/174140107, and does in square_cylinder and other unsteady cases in https://travis-ci.org/su2code/SU2/jobs/181044438); 2. The regression tests did not catch this error - because the error occurs during postprocessing, and the regression test checks values obtained prior to that step, the regressions appear to pass in this case. Maybe a check on the output flow file, or introducing a check to catch any error output for all the tests. . Labeled as priority since there seems to be a bug in unsteady post-processing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/341
https://github.com/su2code/SU2/issues/341:500,Availability,error,error,500,"This is two, related, issues:; 1. Currently there is some error during postprocessing, apparently mainly for unsteady cases, and occurring at the step where it is trying to read in the restart file. This seemed to crop up somewhere after build 711 . (within the last month, error does not occur at https://travis-ci.org/su2code/SU2/builds/174140107, and does in square_cylinder and other unsteady cases in https://travis-ci.org/su2code/SU2/jobs/181044438); 2. The regression tests did not catch this error - because the error occurs during postprocessing, and the regression test checks values obtained prior to that step, the regressions appear to pass in this case. Maybe a check on the output flow file, or introducing a check to catch any error output for all the tests. . Labeled as priority since there seems to be a bug in unsteady post-processing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/341
https://github.com/su2code/SU2/issues/341:520,Availability,error,error,520,"This is two, related, issues:; 1. Currently there is some error during postprocessing, apparently mainly for unsteady cases, and occurring at the step where it is trying to read in the restart file. This seemed to crop up somewhere after build 711 . (within the last month, error does not occur at https://travis-ci.org/su2code/SU2/builds/174140107, and does in square_cylinder and other unsteady cases in https://travis-ci.org/su2code/SU2/jobs/181044438); 2. The regression tests did not catch this error - because the error occurs during postprocessing, and the regression test checks values obtained prior to that step, the regressions appear to pass in this case. Maybe a check on the output flow file, or introducing a check to catch any error output for all the tests. . Labeled as priority since there seems to be a bug in unsteady post-processing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/341
https://github.com/su2code/SU2/issues/341:743,Availability,error,error,743,"This is two, related, issues:; 1. Currently there is some error during postprocessing, apparently mainly for unsteady cases, and occurring at the step where it is trying to read in the restart file. This seemed to crop up somewhere after build 711 . (within the last month, error does not occur at https://travis-ci.org/su2code/SU2/builds/174140107, and does in square_cylinder and other unsteady cases in https://travis-ci.org/su2code/SU2/jobs/181044438); 2. The regression tests did not catch this error - because the error occurs during postprocessing, and the regression test checks values obtained prior to that step, the regressions appear to pass in this case. Maybe a check on the output flow file, or introducing a check to catch any error output for all the tests. . Labeled as priority since there seems to be a bug in unsteady post-processing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/341
https://github.com/su2code/SU2/issues/341:475,Testability,test,tests,475,"This is two, related, issues:; 1. Currently there is some error during postprocessing, apparently mainly for unsteady cases, and occurring at the step where it is trying to read in the restart file. This seemed to crop up somewhere after build 711 . (within the last month, error does not occur at https://travis-ci.org/su2code/SU2/builds/174140107, and does in square_cylinder and other unsteady cases in https://travis-ci.org/su2code/SU2/jobs/181044438); 2. The regression tests did not catch this error - because the error occurs during postprocessing, and the regression test checks values obtained prior to that step, the regressions appear to pass in this case. Maybe a check on the output flow file, or introducing a check to catch any error output for all the tests. . Labeled as priority since there seems to be a bug in unsteady post-processing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/341
https://github.com/su2code/SU2/issues/341:575,Testability,test,test,575,"This is two, related, issues:; 1. Currently there is some error during postprocessing, apparently mainly for unsteady cases, and occurring at the step where it is trying to read in the restart file. This seemed to crop up somewhere after build 711 . (within the last month, error does not occur at https://travis-ci.org/su2code/SU2/builds/174140107, and does in square_cylinder and other unsteady cases in https://travis-ci.org/su2code/SU2/jobs/181044438); 2. The regression tests did not catch this error - because the error occurs during postprocessing, and the regression test checks values obtained prior to that step, the regressions appear to pass in this case. Maybe a check on the output flow file, or introducing a check to catch any error output for all the tests. . Labeled as priority since there seems to be a bug in unsteady post-processing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/341
https://github.com/su2code/SU2/issues/341:768,Testability,test,tests,768,"This is two, related, issues:; 1. Currently there is some error during postprocessing, apparently mainly for unsteady cases, and occurring at the step where it is trying to read in the restart file. This seemed to crop up somewhere after build 711 . (within the last month, error does not occur at https://travis-ci.org/su2code/SU2/builds/174140107, and does in square_cylinder and other unsteady cases in https://travis-ci.org/su2code/SU2/jobs/181044438); 2. The regression tests did not catch this error - because the error occurs during postprocessing, and the regression test checks values obtained prior to that step, the regressions appear to pass in this case. Maybe a check on the output flow file, or introducing a check to catch any error output for all the tests. . Labeled as priority since there seems to be a bug in unsteady post-processing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/341
https://github.com/su2code/SU2/pull/342:139,Modifiability,variab,variables,139,"There were several places where the compiler was returning warnings, for things like comparing signed and unsigned integers, uninitialized variables, unused variables, etc. ; This pull request corrects for these warnings; the largest change is in changing the type of some consts that previously returned signed-unsigned comparison warnings.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/342
https://github.com/su2code/SU2/pull/342:157,Modifiability,variab,variables,157,"There were several places where the compiler was returning warnings, for things like comparing signed and unsigned integers, uninitialized variables, unused variables, etc. ; This pull request corrects for these warnings; the largest change is in changing the type of some consts that previously returned signed-unsigned comparison warnings.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/342
https://github.com/su2code/SU2/issues/343:121,Availability,avail,available,121,"Hi,; I would like to optimize 3D isolated helicopter rotor blade to get optimum twist for uniform blade loading with the available power and overall helicopter weight constraints. the helicopter is 2-bladed, but i will simulate only one with periodic BCs.; Kindly help me how can I do this using SU2 on windows platform?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/343
https://github.com/su2code/SU2/issues/343:131,Energy Efficiency,power,power,131,"Hi,; I would like to optimize 3D isolated helicopter rotor blade to get optimum twist for uniform blade loading with the available power and overall helicopter weight constraints. the helicopter is 2-bladed, but i will simulate only one with periodic BCs.; Kindly help me how can I do this using SU2 on windows platform?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/343
https://github.com/su2code/SU2/issues/343:21,Performance,optimiz,optimize,21,"Hi,; I would like to optimize 3D isolated helicopter rotor blade to get optimum twist for uniform blade loading with the available power and overall helicopter weight constraints. the helicopter is 2-bladed, but i will simulate only one with periodic BCs.; Kindly help me how can I do this using SU2 on windows platform?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/343
https://github.com/su2code/SU2/issues/343:104,Performance,load,loading,104,"Hi,; I would like to optimize 3D isolated helicopter rotor blade to get optimum twist for uniform blade loading with the available power and overall helicopter weight constraints. the helicopter is 2-bladed, but i will simulate only one with periodic BCs.; Kindly help me how can I do this using SU2 on windows platform?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/343
https://github.com/su2code/SU2/issues/345:136,Integrability,message,message,136,SU2_DOT_AD works great with the ASCII Tecplot files but it is not able to write the **binary** files. The code stops with the following message. ```; Merging solution in the Master node.; Writing Tecplot Binary file (volume grid). ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 11; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; ```. Thanks!; Francisco,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/345
https://github.com/su2code/SU2/issues/345:459,Integrability,MESSAGE,MESSAGES,459,SU2_DOT_AD works great with the ASCII Tecplot files but it is not able to write the **binary** files. The code stops with the following message. ```; Merging solution in the Master node.; Writing Tecplot Binary file (volume grid). ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 11; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; ```. Thanks!; Francisco,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/345
https://github.com/su2code/SU2/issues/347:565,Performance,optimiz,optimizations,565,"Fetched developed branch and ran serial_regression.py. Got case FAILED with GCC for ls89_sa, centrifugal_blade, centrifugal_stage.; With INTEL compiler on same platform get passed for ls89_sa, centrifugal_blade, centrifugal_stage but failed for statbeam3d. Strange are the differences for naca0012_def and most of the brick-tests with intel. They converge in significant fewer steps and are marked FAILED.; Is it worthwhile to investigate the differences between GCC and Intel for the brick-cases?; I'am asking, because I'm gone look to fasten calculations up with optimizations in the existing code for single core and perhaps MPI. Far goal, but really far, may be using GPUs as well. Currently I have a 15% improvement single core for RANS from the Comp&Fluids_129 paper. But of course the calculations should not only be faster but correct as well.; Regards, Josef",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/347
https://github.com/su2code/SU2/issues/347:324,Testability,test,tests,324,"Fetched developed branch and ran serial_regression.py. Got case FAILED with GCC for ls89_sa, centrifugal_blade, centrifugal_stage.; With INTEL compiler on same platform get passed for ls89_sa, centrifugal_blade, centrifugal_stage but failed for statbeam3d. Strange are the differences for naca0012_def and most of the brick-tests with intel. They converge in significant fewer steps and are marked FAILED.; Is it worthwhile to investigate the differences between GCC and Intel for the brick-cases?; I'am asking, because I'm gone look to fasten calculations up with optimizations in the existing code for single core and perhaps MPI. Far goal, but really far, may be using GPUs as well. Currently I have a 15% improvement single core for RANS from the Comp&Fluids_129 paper. But of course the calculations should not only be faster but correct as well.; Regards, Josef",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/347
https://github.com/su2code/SU2/issues/349:95,Modifiability,config,config,95,If you run a shape optimization problem (shape_optimization.py) with the RESTART_FLOW_FILENAME config option equal to the SOLUTION_FLOW_FILENAME config option then in each design folder you get symbolic links to the solution in DSN_001 instead of the solution for this design iteration.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/349
https://github.com/su2code/SU2/issues/349:145,Modifiability,config,config,145,If you run a shape optimization problem (shape_optimization.py) with the RESTART_FLOW_FILENAME config option equal to the SOLUTION_FLOW_FILENAME config option then in each design folder you get symbolic links to the solution in DSN_001 instead of the solution for this design iteration.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/349
https://github.com/su2code/SU2/issues/349:19,Performance,optimiz,optimization,19,If you run a shape optimization problem (shape_optimization.py) with the RESTART_FLOW_FILENAME config option equal to the SOLUTION_FLOW_FILENAME config option then in each design folder you get symbolic links to the solution in DSN_001 instead of the solution for this design iteration.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/349
https://github.com/su2code/SU2/pull/350:52,Testability,test,tests,52,"I opened this pull request to let the AD regression tests run. Once this is finished, it can directly be merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/350
https://github.com/su2code/SU2/pull/351:66,Deployability,update,update,66,This pull request fixes the issue #319. Already includes the codi update #350. Would be better to merge the latter first though.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/351
https://github.com/su2code/SU2/pull/352:124,Availability,error,error,124,At the moment it is not possible to have an area/volume constraint for the shape optimization. SU2_GEO simply exits with an error because OBJECTIVE_FUNCTION=AREA/VOLUME is missing in the objective function definition. This pull request simply adds them. Maybe someone removed them accidentally. If it was intentionally then we should also remove the thickness entries and modify the python scripts accordingly.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/352
https://github.com/su2code/SU2/pull/352:81,Performance,optimiz,optimization,81,At the moment it is not possible to have an area/volume constraint for the shape optimization. SU2_GEO simply exits with an error because OBJECTIVE_FUNCTION=AREA/VOLUME is missing in the objective function definition. This pull request simply adds them. Maybe someone removed them accidentally. If it was intentionally then we should also remove the thickness entries and modify the python scripts accordingly.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/352
https://github.com/su2code/SU2/pull/352:103,Usability,simpl,simply,103,At the moment it is not possible to have an area/volume constraint for the shape optimization. SU2_GEO simply exits with an error because OBJECTIVE_FUNCTION=AREA/VOLUME is missing in the objective function definition. This pull request simply adds them. Maybe someone removed them accidentally. If it was intentionally then we should also remove the thickness entries and modify the python scripts accordingly.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/352
https://github.com/su2code/SU2/pull/352:236,Usability,simpl,simply,236,At the moment it is not possible to have an area/volume constraint for the shape optimization. SU2_GEO simply exits with an error because OBJECTIVE_FUNCTION=AREA/VOLUME is missing in the objective function definition. This pull request simply adds them. Maybe someone removed them accidentally. If it was intentionally then we should also remove the thickness entries and modify the python scripts accordingly.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/352
https://github.com/su2code/SU2/issues/353:380,Usability,clear,clear,380,"If there is no a mesh file... the output in parallel is too dramatic :-). ```; There is no geometry file (GetnZone))!cstr=model.su2; There is no geometry file (GetnZone))! . cstr=model.su2; There is no geometry file (GetnZone))!; cstr=model.su2 ; There is no geometry file (GetnZone))!; cstr=model.su2 ; There is no geometry file (GetnZone))!; ```. It should be only one nice and clear line (even in parallel mode) and ""geometry file"" is not very accurate... mesh or grid file would be better. The information about the subroutine (GetnZone) ... it is not really very useful for an average user.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/353
https://github.com/su2code/SU2/pull/354:252,Testability,test,test,252,"I made the blending function for the FFD implementation more general and added the possibility to use BSplines instead of Bezier curves. . BSplines have a local support which might be advantageous in some cases. The implementation is ready, I'll add a test case asap (possibly simply based on an existing FFD case).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/354
https://github.com/su2code/SU2/pull/354:277,Usability,simpl,simply,277,"I made the blending function for the FFD implementation more general and added the possibility to use BSplines instead of Bezier curves. . BSplines have a local support which might be advantageous in some cases. The implementation is ready, I'll add a test case asap (possibly simply based on an existing FFD case).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/354
https://github.com/su2code/SU2/pull/357:28,Deployability,update,updates,28,This PR introduces the last updates for the Python wrapper :. - Ability to run a SU2 computation that can interact with an external Python environment in order to exchange data (in both directions). - The code has been cleaned and comments were added. - The structure for an arbitrary MPI communicator (other than COMM_WORLD) to be passed to the Python wrapper is set but cannot be used at this time. COMM_WORLD is still used by default. - The Python wrapper is now compatible with Mac OS. PR #356 has to be closed first. Then I will push a last commit after merging with the fixed develop.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/357
https://github.com/su2code/SU2/pull/357:51,Integrability,wrap,wrapper,51,This PR introduces the last updates for the Python wrapper :. - Ability to run a SU2 computation that can interact with an external Python environment in order to exchange data (in both directions). - The code has been cleaned and comments were added. - The structure for an arbitrary MPI communicator (other than COMM_WORLD) to be passed to the Python wrapper is set but cannot be used at this time. COMM_WORLD is still used by default. - The Python wrapper is now compatible with Mac OS. PR #356 has to be closed first. Then I will push a last commit after merging with the fixed develop.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/357
https://github.com/su2code/SU2/pull/357:353,Integrability,wrap,wrapper,353,This PR introduces the last updates for the Python wrapper :. - Ability to run a SU2 computation that can interact with an external Python environment in order to exchange data (in both directions). - The code has been cleaned and comments were added. - The structure for an arbitrary MPI communicator (other than COMM_WORLD) to be passed to the Python wrapper is set but cannot be used at this time. COMM_WORLD is still used by default. - The Python wrapper is now compatible with Mac OS. PR #356 has to be closed first. Then I will push a last commit after merging with the fixed develop.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/357
https://github.com/su2code/SU2/pull/357:451,Integrability,wrap,wrapper,451,This PR introduces the last updates for the Python wrapper :. - Ability to run a SU2 computation that can interact with an external Python environment in order to exchange data (in both directions). - The code has been cleaned and comments were added. - The structure for an arbitrary MPI communicator (other than COMM_WORLD) to be passed to the Python wrapper is set but cannot be used at this time. COMM_WORLD is still used by default. - The Python wrapper is now compatible with Mac OS. PR #356 has to be closed first. Then I will push a last commit after merging with the fixed develop.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/357
https://github.com/su2code/SU2/pull/360:118,Usability,simpl,simply,118,"Addresses issue #296 . The problem was that the non-dimensional time step was not computed and therefore zero. We can simply use the dimensional one, as the non-dimensionalization factor cancels out anyway.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/360
https://github.com/su2code/SU2/pull/361:0,Deployability,Update,Updates,0,"Updates to compute_polar.py and supporting library before releasing. Added a new test case to the regressions. Thanks again for the contribution, Eran!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/361
https://github.com/su2code/SU2/pull/361:81,Testability,test,test,81,"Updates to compute_polar.py and supporting library before releasing. Added a new test case to the regressions. Thanks again for the contribution, Eran!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/361
https://github.com/su2code/SU2/pull/362:32,Modifiability,config,config,32,updating settings in the _basic config file to match the _adv settings in the oneram6 constrained optimization tutorial folder,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/362
https://github.com/su2code/SU2/pull/362:98,Performance,optimiz,optimization,98,updating settings in the _basic config file to match the _adv settings in the oneram6 constrained optimization tutorial folder,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/362
https://github.com/su2code/SU2/issues/363:71,Modifiability,config,config,71,"~~I have noticed that some recent PR introduced in the develop the old config options for the time spectral implementation instead of the new harmonic balance implementation, introduced with PR #311.~~ The develop is fine, I close this issue.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/363
https://github.com/su2code/SU2/pull/364:284,Deployability,release,release,284,"To be safe for v5, we will disable the new parallel IO restart routines until we have time to test on more and larger machines (a few folks have reported issues). All of the necessary code remains in the develop branch, however, and we will be working on this heavily right after the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/364
https://github.com/su2code/SU2/pull/364:63,Integrability,rout,routines,63,"To be safe for v5, we will disable the new parallel IO restart routines until we have time to test on more and larger machines (a few folks have reported issues). All of the necessary code remains in the develop branch, however, and we will be working on this heavily right after the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/364
https://github.com/su2code/SU2/pull/364:6,Safety,safe,safe,6,"To be safe for v5, we will disable the new parallel IO restart routines until we have time to test on more and larger machines (a few folks have reported issues). All of the necessary code remains in the develop branch, however, and we will be working on this heavily right after the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/364
https://github.com/su2code/SU2/pull/364:94,Testability,test,test,94,"To be safe for v5, we will disable the new parallel IO restart routines until we have time to test on more and larger machines (a few folks have reported issues). All of the necessary code remains in the develop branch, however, and we will be working on this heavily right after the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/364
https://github.com/su2code/SU2/issues/367:117,Modifiability,config,config,117,There is a problem with the finite_difference.py script. The step size is currently taken from the REF_LENGTH_MOMENT config option. See . https://github.com/su2code/SU2/blob/develop/SU2_PY/SU2/eval/gradients.py#L470. I don't think that this was intentionally done. @fpalacios it looks like it was introduced with one of your commits (https://github.com/su2code/SU2/commit/90ab5347fc3071d44c0e9c2010a9faeacca0abc4),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/367
https://github.com/su2code/SU2/pull/368:28,Testability,test,test,28,Mengjun add another line to test the pull request function in GitHub,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/368
https://github.com/su2code/SU2/issues/370:29,Performance,optimiz,optimizing,29,"Hello guys,. Currently, I am optimizing an 2D airfoil in an incompressible flow, using a 2D FFD box. First I searched for help at the CFD-online.com website; https://www.cfd-online.com/Forums/su2-shape-design/180783-question-about-constraints-objective-function.html. However, people recommend me to get help from the developers group. In short the optimizer process returns to initial shape after a couple of new designs. The first design is quite deformed, however not as much as expected. However in the line search process the shape is deforming back to the initial shape and the optimizer stops succesfully. For input files/ adjoint files/ deformation files, I would like to refer you to : https://www.cfd-online.com/Forums/su2-shape-design/180783-question-about-constraints-objective-function.html. I would appriciate any help;)!. Thanks in advance,. Floris",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/370
https://github.com/su2code/SU2/issues/370:349,Performance,optimiz,optimizer,349,"Hello guys,. Currently, I am optimizing an 2D airfoil in an incompressible flow, using a 2D FFD box. First I searched for help at the CFD-online.com website; https://www.cfd-online.com/Forums/su2-shape-design/180783-question-about-constraints-objective-function.html. However, people recommend me to get help from the developers group. In short the optimizer process returns to initial shape after a couple of new designs. The first design is quite deformed, however not as much as expected. However in the line search process the shape is deforming back to the initial shape and the optimizer stops succesfully. For input files/ adjoint files/ deformation files, I would like to refer you to : https://www.cfd-online.com/Forums/su2-shape-design/180783-question-about-constraints-objective-function.html. I would appriciate any help;)!. Thanks in advance,. Floris",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/370
https://github.com/su2code/SU2/issues/370:584,Performance,optimiz,optimizer,584,"Hello guys,. Currently, I am optimizing an 2D airfoil in an incompressible flow, using a 2D FFD box. First I searched for help at the CFD-online.com website; https://www.cfd-online.com/Forums/su2-shape-design/180783-question-about-constraints-objective-function.html. However, people recommend me to get help from the developers group. In short the optimizer process returns to initial shape after a couple of new designs. The first design is quite deformed, however not as much as expected. However in the line search process the shape is deforming back to the initial shape and the optimizer stops succesfully. For input files/ adjoint files/ deformation files, I would like to refer you to : https://www.cfd-online.com/Forums/su2-shape-design/180783-question-about-constraints-objective-function.html. I would appriciate any help;)!. Thanks in advance,. Floris",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/370
https://github.com/su2code/SU2/issues/371:292,Modifiability,layers,layers,292,"Hi all,. I am trying to run SU2 (v. 5.0) on big endian platform but am unable to do so. I have tried using both .su2 and .cgns meshes, but the simulation pauses at:. _Calling ParMETIS...; Finished partitioning using ParMETIS (39838 edge cuts).; Communicating partition data and creating halo layers._. Is there any way to make the grid compatible for such platforms?. Thanks in advance,. - Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/371
https://github.com/su2code/SU2/issues/371:154,Usability,pause,pauses,154,"Hi all,. I am trying to run SU2 (v. 5.0) on big endian platform but am unable to do so. I have tried using both .su2 and .cgns meshes, but the simulation pauses at:. _Calling ParMETIS...; Finished partitioning using ParMETIS (39838 edge cuts).; Communicating partition data and creating halo layers._. Is there any way to make the grid compatible for such platforms?. Thanks in advance,. - Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/371
https://github.com/su2code/SU2/pull/372:230,Deployability,update,update,230,FIx a bug which influenced the convergence behavior when using multigrid and SST by allowing the turbulent solution vector to propagate into the coarser grids (during multigrid) at each iteration. In addition this fix includes an update in the variable names for the parallel output.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/372
https://github.com/su2code/SU2/pull/372:244,Modifiability,variab,variable,244,FIx a bug which influenced the convergence behavior when using multigrid and SST by allowing the turbulent solution vector to propagate into the coarser grids (during multigrid) at each iteration. In addition this fix includes an update in the variable names for the parallel output.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/372
https://github.com/su2code/SU2/pull/373:16,Deployability,update,updated,16,"This PR adds an updated doxyfile (thanks Gigi Martinelli!) and a logo directly to SU2/Common/doc. Doxygen is now set up to be run directly from that directory with. $ doxygen su2_doxyfile. and an html/ directory will be created with the output. The latest Doxygen docs for v5.0 have been generated and can be found here: http://su2.stanford.edu/doxygen/. However, we have many warnings when running doxy, and we can do a lot more to improve the documentation. We should customize further the doxyfile, update the SU2/Common/doc/docmain.hpp, and clean / improve the doxy comments throughout the code. Any volunteers to help?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/373
https://github.com/su2code/SU2/pull/373:502,Deployability,update,update,502,"This PR adds an updated doxyfile (thanks Gigi Martinelli!) and a logo directly to SU2/Common/doc. Doxygen is now set up to be run directly from that directory with. $ doxygen su2_doxyfile. and an html/ directory will be created with the output. The latest Doxygen docs for v5.0 have been generated and can be found here: http://su2.stanford.edu/doxygen/. However, we have many warnings when running doxy, and we can do a lot more to improve the documentation. We should customize further the doxyfile, update the SU2/Common/doc/docmain.hpp, and clean / improve the doxy comments throughout the code. Any volunteers to help?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/373
https://github.com/su2code/SU2/pull/373:65,Testability,log,logo,65,"This PR adds an updated doxyfile (thanks Gigi Martinelli!) and a logo directly to SU2/Common/doc. Doxygen is now set up to be run directly from that directory with. $ doxygen su2_doxyfile. and an html/ directory will be created with the output. The latest Doxygen docs for v5.0 have been generated and can be found here: http://su2.stanford.edu/doxygen/. However, we have many warnings when running doxy, and we can do a lot more to improve the documentation. We should customize further the doxyfile, update the SU2/Common/doc/docmain.hpp, and clean / improve the doxy comments throughout the code. Any volunteers to help?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/373
https://github.com/su2code/SU2/pull/374:102,Integrability,rout,routines,102,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:341,Integrability,rout,routines,341,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:779,Integrability,rout,routine,779,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:963,Integrability,rout,routine,963,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:1104,Integrability,rout,routines,1104,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:2029,Integrability,rout,routines,2029,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:155,Modifiability,refactor,refactoring,155,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:1779,Modifiability,config,config,1779,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:41,Performance,load,loading,41,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:88,Performance,Load,LoadRestart,88,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:327,Performance,Load,LoadRestart,327,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:765,Performance,Load,LoadRestart,765,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:844,Performance,load,loaded,844,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:1090,Performance,Load,LoadRestart,1090,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:2042,Performance,load,loading,2042,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/374:1640,Usability,feedback,feedback,1640,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/374
https://github.com/su2code/SU2/pull/376:49,Deployability,integrat,integration,49,Adds the classical fourth-order Runge-Kutta time integration scheme to the finite volume flow solver.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/376
https://github.com/su2code/SU2/pull/376:49,Integrability,integrat,integration,49,Adds the classical fourth-order Runge-Kutta time integration scheme to the finite volume flow solver.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/376
https://github.com/su2code/SU2/issues/377:9,Performance,optimiz,optimization,9,"Unsteady optimization in V5.0 has some issues. The problem is that after direct iterations SU2 cannot calculate adjoint for each time step properly.; It just keep calculating adjoint equation for one time step. For example a part of the log_adjoint file for NACA64A010 optimization is as follow:. Loading flow solution from direct iteration 250.; Begin direct solver to store flow data (single iteration).; Compute residuals to check the convergence of the direct problem.; log10[Maximum residual]: -2.77153, located at point 1018.; End direct solver, begin adjoint problem. Min DT: 0.000323558.Max DT: 1.20067.Dual Time step: 0.677451.; log10[Maximum residual]: -3.34769.; Maximum residual point 134, located at (0.63649, 0.0371117). IntIter ExtIter Res[Psi_Rho] Res[Psi_E] Sens_Geo Sens_AoA; 0 0 -4.444881 -4.159977 4.4996e+00 -6.5737e-04; 10 0 -4.488648 -4.764869 4.4053e+00 -6.5737e-04; 20 0 -4.433964 -4.864120 2.7194e+00 -6.5737e-04; 30 0 -4.449170 -4.851557 1.7148e+00 -6.5737e-04; 40 0 -4.669063 -4.954710 1.1593e+00 -6.5737e-04; 50 0 -4.689637 -5.116023 9.2103e-01 -6.5737e-04; 60 0 -4.797857 -5.289007 8.5846e-01 -6.5737e-04; 70 0 -4.922113 -5.428807 8.9570e-01 -6.5737e-04; 80 0 -5.021316 -5.534515 9.5224e-01 -6.5737e-04; 90 0 -5.102257 -5.604468 9.9700e-01 -6.5737e-04; 100 0 -5.169358 -5.654203 1.0424e+00 -6.5737e-04. Min DT: 0.0003236.Max DT: 1.201.Dual Time step: 0.6775.; log10[Maximum residual]: -4.172.; Maximum residual point 693, located at (0.03989, -0.0254). IntIter ExtIter Res[Psi_Rho] Res[Psi_E] Sens_Geo Sens_AoA; 0 0 -5.221491 -5.704096 1.0838e+00 -6.5737e-04; 10 0 -5.262729 -5.764520 1.1144e+00 -6.5737e-04; 20 0 -5.306548 -5.835208 1.1305e+00 -6.5737e-04; 30 0 -5.363881 -5.911928 1.1291e+00 -6.5737e-04; 40 0 -5.436887 -5.991739 1.1172e+00 -6.5737e-04; 50 0 -5.521833 -6.072162 1.1056e+00 -6.5737e-04; 60 0 -5.611948 -6.152996 1.0993e+00 -6.5737e-04; 70 0 -5.701126 -6.235540 1.0974e+00 -6.5737e-04; ........... the ExtIter is locked to 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/377
https://github.com/su2code/SU2/issues/377:269,Performance,optimiz,optimization,269,"Unsteady optimization in V5.0 has some issues. The problem is that after direct iterations SU2 cannot calculate adjoint for each time step properly.; It just keep calculating adjoint equation for one time step. For example a part of the log_adjoint file for NACA64A010 optimization is as follow:. Loading flow solution from direct iteration 250.; Begin direct solver to store flow data (single iteration).; Compute residuals to check the convergence of the direct problem.; log10[Maximum residual]: -2.77153, located at point 1018.; End direct solver, begin adjoint problem. Min DT: 0.000323558.Max DT: 1.20067.Dual Time step: 0.677451.; log10[Maximum residual]: -3.34769.; Maximum residual point 134, located at (0.63649, 0.0371117). IntIter ExtIter Res[Psi_Rho] Res[Psi_E] Sens_Geo Sens_AoA; 0 0 -4.444881 -4.159977 4.4996e+00 -6.5737e-04; 10 0 -4.488648 -4.764869 4.4053e+00 -6.5737e-04; 20 0 -4.433964 -4.864120 2.7194e+00 -6.5737e-04; 30 0 -4.449170 -4.851557 1.7148e+00 -6.5737e-04; 40 0 -4.669063 -4.954710 1.1593e+00 -6.5737e-04; 50 0 -4.689637 -5.116023 9.2103e-01 -6.5737e-04; 60 0 -4.797857 -5.289007 8.5846e-01 -6.5737e-04; 70 0 -4.922113 -5.428807 8.9570e-01 -6.5737e-04; 80 0 -5.021316 -5.534515 9.5224e-01 -6.5737e-04; 90 0 -5.102257 -5.604468 9.9700e-01 -6.5737e-04; 100 0 -5.169358 -5.654203 1.0424e+00 -6.5737e-04. Min DT: 0.0003236.Max DT: 1.201.Dual Time step: 0.6775.; log10[Maximum residual]: -4.172.; Maximum residual point 693, located at (0.03989, -0.0254). IntIter ExtIter Res[Psi_Rho] Res[Psi_E] Sens_Geo Sens_AoA; 0 0 -5.221491 -5.704096 1.0838e+00 -6.5737e-04; 10 0 -5.262729 -5.764520 1.1144e+00 -6.5737e-04; 20 0 -5.306548 -5.835208 1.1305e+00 -6.5737e-04; 30 0 -5.363881 -5.911928 1.1291e+00 -6.5737e-04; 40 0 -5.436887 -5.991739 1.1172e+00 -6.5737e-04; 50 0 -5.521833 -6.072162 1.1056e+00 -6.5737e-04; 60 0 -5.611948 -6.152996 1.0993e+00 -6.5737e-04; 70 0 -5.701126 -6.235540 1.0974e+00 -6.5737e-04; ........... the ExtIter is locked to 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/377
https://github.com/su2code/SU2/issues/377:297,Performance,Load,Loading,297,"Unsteady optimization in V5.0 has some issues. The problem is that after direct iterations SU2 cannot calculate adjoint for each time step properly.; It just keep calculating adjoint equation for one time step. For example a part of the log_adjoint file for NACA64A010 optimization is as follow:. Loading flow solution from direct iteration 250.; Begin direct solver to store flow data (single iteration).; Compute residuals to check the convergence of the direct problem.; log10[Maximum residual]: -2.77153, located at point 1018.; End direct solver, begin adjoint problem. Min DT: 0.000323558.Max DT: 1.20067.Dual Time step: 0.677451.; log10[Maximum residual]: -3.34769.; Maximum residual point 134, located at (0.63649, 0.0371117). IntIter ExtIter Res[Psi_Rho] Res[Psi_E] Sens_Geo Sens_AoA; 0 0 -4.444881 -4.159977 4.4996e+00 -6.5737e-04; 10 0 -4.488648 -4.764869 4.4053e+00 -6.5737e-04; 20 0 -4.433964 -4.864120 2.7194e+00 -6.5737e-04; 30 0 -4.449170 -4.851557 1.7148e+00 -6.5737e-04; 40 0 -4.669063 -4.954710 1.1593e+00 -6.5737e-04; 50 0 -4.689637 -5.116023 9.2103e-01 -6.5737e-04; 60 0 -4.797857 -5.289007 8.5846e-01 -6.5737e-04; 70 0 -4.922113 -5.428807 8.9570e-01 -6.5737e-04; 80 0 -5.021316 -5.534515 9.5224e-01 -6.5737e-04; 90 0 -5.102257 -5.604468 9.9700e-01 -6.5737e-04; 100 0 -5.169358 -5.654203 1.0424e+00 -6.5737e-04. Min DT: 0.0003236.Max DT: 1.201.Dual Time step: 0.6775.; log10[Maximum residual]: -4.172.; Maximum residual point 693, located at (0.03989, -0.0254). IntIter ExtIter Res[Psi_Rho] Res[Psi_E] Sens_Geo Sens_AoA; 0 0 -5.221491 -5.704096 1.0838e+00 -6.5737e-04; 10 0 -5.262729 -5.764520 1.1144e+00 -6.5737e-04; 20 0 -5.306548 -5.835208 1.1305e+00 -6.5737e-04; 30 0 -5.363881 -5.911928 1.1291e+00 -6.5737e-04; 40 0 -5.436887 -5.991739 1.1172e+00 -6.5737e-04; 50 0 -5.521833 -6.072162 1.1056e+00 -6.5737e-04; 60 0 -5.611948 -6.152996 1.0993e+00 -6.5737e-04; 70 0 -5.701126 -6.235540 1.0974e+00 -6.5737e-04; ........... the ExtIter is locked to 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/377
https://github.com/su2code/SU2/issues/378:74,Modifiability,variab,variable,74,"Hi All,. I’m a little bit confused with the python scripts and the design variable definition. It seems that to compute the number of design variable we use something like this:. ```; # number of design variables; dv_size = project.config['DEFINITION_DV']['SIZE']; n_dv = sum(dv_size); ```. I think that dv_size is new for me. Do you know what is the reason for this? Is it possible to put several design variable together in the output file and the python stuff will split the design variables?. Related with this, I have noticed several inconsistencies like:. We use:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; k = 0; for i, dv_scl in enumerate(dv_scales):; for j in range(dv_size[i]):; x0[k] = x0[k]/dv_scl;; k = k + 1; ```; or this:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; x0 = [ x0[i]/dv_scl for i,dv_scl in enumerate(dv_scales) ]; ```. Any clarification would be very appreciated. Thanks!; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/378
https://github.com/su2code/SU2/issues/378:141,Modifiability,variab,variable,141,"Hi All,. I’m a little bit confused with the python scripts and the design variable definition. It seems that to compute the number of design variable we use something like this:. ```; # number of design variables; dv_size = project.config['DEFINITION_DV']['SIZE']; n_dv = sum(dv_size); ```. I think that dv_size is new for me. Do you know what is the reason for this? Is it possible to put several design variable together in the output file and the python stuff will split the design variables?. Related with this, I have noticed several inconsistencies like:. We use:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; k = 0; for i, dv_scl in enumerate(dv_scales):; for j in range(dv_size[i]):; x0[k] = x0[k]/dv_scl;; k = k + 1; ```; or this:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; x0 = [ x0[i]/dv_scl for i,dv_scl in enumerate(dv_scales) ]; ```. Any clarification would be very appreciated. Thanks!; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/378
https://github.com/su2code/SU2/issues/378:203,Modifiability,variab,variables,203,"Hi All,. I’m a little bit confused with the python scripts and the design variable definition. It seems that to compute the number of design variable we use something like this:. ```; # number of design variables; dv_size = project.config['DEFINITION_DV']['SIZE']; n_dv = sum(dv_size); ```. I think that dv_size is new for me. Do you know what is the reason for this? Is it possible to put several design variable together in the output file and the python stuff will split the design variables?. Related with this, I have noticed several inconsistencies like:. We use:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; k = 0; for i, dv_scl in enumerate(dv_scales):; for j in range(dv_size[i]):; x0[k] = x0[k]/dv_scl;; k = k + 1; ```; or this:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; x0 = [ x0[i]/dv_scl for i,dv_scl in enumerate(dv_scales) ]; ```. Any clarification would be very appreciated. Thanks!; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/378
https://github.com/su2code/SU2/issues/378:232,Modifiability,config,config,232,"Hi All,. I’m a little bit confused with the python scripts and the design variable definition. It seems that to compute the number of design variable we use something like this:. ```; # number of design variables; dv_size = project.config['DEFINITION_DV']['SIZE']; n_dv = sum(dv_size); ```. I think that dv_size is new for me. Do you know what is the reason for this? Is it possible to put several design variable together in the output file and the python stuff will split the design variables?. Related with this, I have noticed several inconsistencies like:. We use:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; k = 0; for i, dv_scl in enumerate(dv_scales):; for j in range(dv_size[i]):; x0[k] = x0[k]/dv_scl;; k = k + 1; ```; or this:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; x0 = [ x0[i]/dv_scl for i,dv_scl in enumerate(dv_scales) ]; ```. Any clarification would be very appreciated. Thanks!; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/378
https://github.com/su2code/SU2/issues/378:405,Modifiability,variab,variable,405,"Hi All,. I’m a little bit confused with the python scripts and the design variable definition. It seems that to compute the number of design variable we use something like this:. ```; # number of design variables; dv_size = project.config['DEFINITION_DV']['SIZE']; n_dv = sum(dv_size); ```. I think that dv_size is new for me. Do you know what is the reason for this? Is it possible to put several design variable together in the output file and the python stuff will split the design variables?. Related with this, I have noticed several inconsistencies like:. We use:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; k = 0; for i, dv_scl in enumerate(dv_scales):; for j in range(dv_size[i]):; x0[k] = x0[k]/dv_scl;; k = k + 1; ```; or this:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; x0 = [ x0[i]/dv_scl for i,dv_scl in enumerate(dv_scales) ]; ```. Any clarification would be very appreciated. Thanks!; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/378
https://github.com/su2code/SU2/issues/378:485,Modifiability,variab,variables,485,"Hi All,. I’m a little bit confused with the python scripts and the design variable definition. It seems that to compute the number of design variable we use something like this:. ```; # number of design variables; dv_size = project.config['DEFINITION_DV']['SIZE']; n_dv = sum(dv_size); ```. I think that dv_size is new for me. Do you know what is the reason for this? Is it possible to put several design variable together in the output file and the python stuff will split the design variables?. Related with this, I have noticed several inconsistencies like:. We use:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; k = 0; for i, dv_scl in enumerate(dv_scales):; for j in range(dv_size[i]):; x0[k] = x0[k]/dv_scl;; k = k + 1; ```; or this:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; x0 = [ x0[i]/dv_scl for i,dv_scl in enumerate(dv_scales) ]; ```. Any clarification would be very appreciated. Thanks!; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/378
https://github.com/su2code/SU2/issues/378:611,Modifiability,config,config,611,"Hi All,. I’m a little bit confused with the python scripts and the design variable definition. It seems that to compute the number of design variable we use something like this:. ```; # number of design variables; dv_size = project.config['DEFINITION_DV']['SIZE']; n_dv = sum(dv_size); ```. I think that dv_size is new for me. Do you know what is the reason for this? Is it possible to put several design variable together in the output file and the python stuff will split the design variables?. Related with this, I have noticed several inconsistencies like:. We use:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; k = 0; for i, dv_scl in enumerate(dv_scales):; for j in range(dv_size[i]):; x0[k] = x0[k]/dv_scl;; k = k + 1; ```; or this:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; x0 = [ x0[i]/dv_scl for i,dv_scl in enumerate(dv_scales) ]; ```. Any clarification would be very appreciated. Thanks!; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/378
https://github.com/su2code/SU2/issues/378:810,Modifiability,config,config,810,"Hi All,. I’m a little bit confused with the python scripts and the design variable definition. It seems that to compute the number of design variable we use something like this:. ```; # number of design variables; dv_size = project.config['DEFINITION_DV']['SIZE']; n_dv = sum(dv_size); ```. I think that dv_size is new for me. Do you know what is the reason for this? Is it possible to put several design variable together in the output file and the python stuff will split the design variables?. Related with this, I have noticed several inconsistencies like:. We use:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; k = 0; for i, dv_scl in enumerate(dv_scales):; for j in range(dv_size[i]):; x0[k] = x0[k]/dv_scl;; k = k + 1; ```; or this:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; x0 = [ x0[i]/dv_scl for i,dv_scl in enumerate(dv_scales) ]; ```. Any clarification would be very appreciated. Thanks!; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/378
https://github.com/su2code/SU2/pull/380:259,Testability,test,testing,259,"Adds a general body force source term implementation to the Finite Volume flow solver, which is particularly useful for pressure-driven / gravity / channel problems, for instance. . Also includes a simple 2D Poiseuille flow case with an analytic solution for testing the body force and periodic implementations.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/380
https://github.com/su2code/SU2/pull/380:198,Usability,simpl,simple,198,"Adds a general body force source term implementation to the Finite Volume flow solver, which is particularly useful for pressure-driven / gravity / channel problems, for instance. . Also includes a simple 2D Poiseuille flow case with an analytic solution for testing the body force and periodic implementations.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/380
https://github.com/su2code/SU2/issues/381:81,Performance,perform,performance,81,Would be good to support the newer Vulkan compute api as this is showing greater performance and lower overheads. Vulkan is also the prefered api for Aarch64.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/381
https://github.com/su2code/SU2/pull/382:208,Energy Efficiency,reduce,reduce,208,"This pull request extends the fluid interface to viscous and turbulent calculations (SA and SST). * One note:; nVar is still passed in driver_structure.cpp:2509 but is not used. I left it, for the moment, to reduce potential conflicts but it can be removed in a future PR.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/382
https://github.com/su2code/SU2/pull/382:36,Integrability,interface,interface,36,"This pull request extends the fluid interface to viscous and turbulent calculations (SA and SST). * One note:; nVar is still passed in driver_structure.cpp:2509 but is not used. I left it, for the moment, to reduce potential conflicts but it can be removed in a future PR.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/382
https://github.com/su2code/SU2/pull/382:18,Modifiability,extend,extends,18,"This pull request extends the fluid interface to viscous and turbulent calculations (SA and SST). * One note:; nVar is still passed in driver_structure.cpp:2509 but is not used. I left it, for the moment, to reduce potential conflicts but it can be removed in a future PR.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/382
https://github.com/su2code/SU2/issues/383:287,Availability,Error,Error,287,"When i am evaluating RANS simulation with fixed cl model in su2-5.0, after it reached the convergence criteria (I have tried EXT_ITER, CAUCHY and RESIDUAL) and executed ""Deleted CIntegration container. Deleted CIntegration container. "", the routine always stopped with this message: *** Error in `/home/wanghao/software/SU2-5.0.0/bin/SU2_CFD': double free or corruption (!prev): 0x00000000045312d0 ***.; But applying fixed AOA won't has this problem. ; My command is :parallel_computation.py -n 8 -f opt_crm.cfg ; Ubuntu 16.04. ![screen](https://cloud.githubusercontent.com/assets/23302629/23536602/0932d9a6-0001-11e7-989d-2515b6942dd1.png). [opt_crm.txt](https://github.com/su2code/SU2/files/815706/opt_crm.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/383
https://github.com/su2code/SU2/issues/383:241,Integrability,rout,routine,241,"When i am evaluating RANS simulation with fixed cl model in su2-5.0, after it reached the convergence criteria (I have tried EXT_ITER, CAUCHY and RESIDUAL) and executed ""Deleted CIntegration container. Deleted CIntegration container. "", the routine always stopped with this message: *** Error in `/home/wanghao/software/SU2-5.0.0/bin/SU2_CFD': double free or corruption (!prev): 0x00000000045312d0 ***.; But applying fixed AOA won't has this problem. ; My command is :parallel_computation.py -n 8 -f opt_crm.cfg ; Ubuntu 16.04. ![screen](https://cloud.githubusercontent.com/assets/23302629/23536602/0932d9a6-0001-11e7-989d-2515b6942dd1.png). [opt_crm.txt](https://github.com/su2code/SU2/files/815706/opt_crm.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/383
https://github.com/su2code/SU2/issues/383:274,Integrability,message,message,274,"When i am evaluating RANS simulation with fixed cl model in su2-5.0, after it reached the convergence criteria (I have tried EXT_ITER, CAUCHY and RESIDUAL) and executed ""Deleted CIntegration container. Deleted CIntegration container. "", the routine always stopped with this message: *** Error in `/home/wanghao/software/SU2-5.0.0/bin/SU2_CFD': double free or corruption (!prev): 0x00000000045312d0 ***.; But applying fixed AOA won't has this problem. ; My command is :parallel_computation.py -n 8 -f opt_crm.cfg ; Ubuntu 16.04. ![screen](https://cloud.githubusercontent.com/assets/23302629/23536602/0932d9a6-0001-11e7-989d-2515b6942dd1.png). [opt_crm.txt](https://github.com/su2code/SU2/files/815706/opt_crm.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/383
https://github.com/su2code/SU2/issues/384:371,Deployability,configurat,configuration,371,"I used SU2_DEF to evaluate CRM wing grid deformation, but the quality of my structured mesh is pretty bad. My question is whether the FFD box settings could affect the grid deformation,for example the distance of FFD box from the wall. Another question is whether the strctured mesh doesn't fit SU2_DEF? ; Could anyone help with this ? thank you!; Here are my FFD boxes, configuration file and slice of my wing (red color is deformed grid, the black one is original grid); [screen output.txt](https://github.com/su2code/SU2/files/835550/screen.output.txt); [configuration.txt](https://github.com/su2code/SU2/files/835551/configuration.txt); ![comparison](https://cloud.githubusercontent.com/assets/23302629/23821092/b4b13030-0663-11e7-91b5-e63849c323ab.png); ![ffdbox1](https://cloud.githubusercontent.com/assets/23302629/23821093/b5400cf6-0663-11e7-9975-e59a144298e6.png); ![ffdbox2](https://cloud.githubusercontent.com/assets/23302629/23821094/b541fd22-0663-11e7-8423-46502ca059d0.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/384
https://github.com/su2code/SU2/issues/384:558,Deployability,configurat,configuration,558,"I used SU2_DEF to evaluate CRM wing grid deformation, but the quality of my structured mesh is pretty bad. My question is whether the FFD box settings could affect the grid deformation,for example the distance of FFD box from the wall. Another question is whether the strctured mesh doesn't fit SU2_DEF? ; Could anyone help with this ? thank you!; Here are my FFD boxes, configuration file and slice of my wing (red color is deformed grid, the black one is original grid); [screen output.txt](https://github.com/su2code/SU2/files/835550/screen.output.txt); [configuration.txt](https://github.com/su2code/SU2/files/835551/configuration.txt); ![comparison](https://cloud.githubusercontent.com/assets/23302629/23821092/b4b13030-0663-11e7-91b5-e63849c323ab.png); ![ffdbox1](https://cloud.githubusercontent.com/assets/23302629/23821093/b5400cf6-0663-11e7-9975-e59a144298e6.png); ![ffdbox2](https://cloud.githubusercontent.com/assets/23302629/23821094/b541fd22-0663-11e7-8423-46502ca059d0.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/384
https://github.com/su2code/SU2/issues/384:621,Deployability,configurat,configuration,621,"I used SU2_DEF to evaluate CRM wing grid deformation, but the quality of my structured mesh is pretty bad. My question is whether the FFD box settings could affect the grid deformation,for example the distance of FFD box from the wall. Another question is whether the strctured mesh doesn't fit SU2_DEF? ; Could anyone help with this ? thank you!; Here are my FFD boxes, configuration file and slice of my wing (red color is deformed grid, the black one is original grid); [screen output.txt](https://github.com/su2code/SU2/files/835550/screen.output.txt); [configuration.txt](https://github.com/su2code/SU2/files/835551/configuration.txt); ![comparison](https://cloud.githubusercontent.com/assets/23302629/23821092/b4b13030-0663-11e7-91b5-e63849c323ab.png); ![ffdbox1](https://cloud.githubusercontent.com/assets/23302629/23821093/b5400cf6-0663-11e7-9975-e59a144298e6.png); ![ffdbox2](https://cloud.githubusercontent.com/assets/23302629/23821094/b541fd22-0663-11e7-8423-46502ca059d0.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/384
https://github.com/su2code/SU2/issues/384:371,Modifiability,config,configuration,371,"I used SU2_DEF to evaluate CRM wing grid deformation, but the quality of my structured mesh is pretty bad. My question is whether the FFD box settings could affect the grid deformation,for example the distance of FFD box from the wall. Another question is whether the strctured mesh doesn't fit SU2_DEF? ; Could anyone help with this ? thank you!; Here are my FFD boxes, configuration file and slice of my wing (red color is deformed grid, the black one is original grid); [screen output.txt](https://github.com/su2code/SU2/files/835550/screen.output.txt); [configuration.txt](https://github.com/su2code/SU2/files/835551/configuration.txt); ![comparison](https://cloud.githubusercontent.com/assets/23302629/23821092/b4b13030-0663-11e7-91b5-e63849c323ab.png); ![ffdbox1](https://cloud.githubusercontent.com/assets/23302629/23821093/b5400cf6-0663-11e7-9975-e59a144298e6.png); ![ffdbox2](https://cloud.githubusercontent.com/assets/23302629/23821094/b541fd22-0663-11e7-8423-46502ca059d0.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/384
https://github.com/su2code/SU2/issues/384:558,Modifiability,config,configuration,558,"I used SU2_DEF to evaluate CRM wing grid deformation, but the quality of my structured mesh is pretty bad. My question is whether the FFD box settings could affect the grid deformation,for example the distance of FFD box from the wall. Another question is whether the strctured mesh doesn't fit SU2_DEF? ; Could anyone help with this ? thank you!; Here are my FFD boxes, configuration file and slice of my wing (red color is deformed grid, the black one is original grid); [screen output.txt](https://github.com/su2code/SU2/files/835550/screen.output.txt); [configuration.txt](https://github.com/su2code/SU2/files/835551/configuration.txt); ![comparison](https://cloud.githubusercontent.com/assets/23302629/23821092/b4b13030-0663-11e7-91b5-e63849c323ab.png); ![ffdbox1](https://cloud.githubusercontent.com/assets/23302629/23821093/b5400cf6-0663-11e7-9975-e59a144298e6.png); ![ffdbox2](https://cloud.githubusercontent.com/assets/23302629/23821094/b541fd22-0663-11e7-8423-46502ca059d0.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/384
https://github.com/su2code/SU2/issues/384:621,Modifiability,config,configuration,621,"I used SU2_DEF to evaluate CRM wing grid deformation, but the quality of my structured mesh is pretty bad. My question is whether the FFD box settings could affect the grid deformation,for example the distance of FFD box from the wall. Another question is whether the strctured mesh doesn't fit SU2_DEF? ; Could anyone help with this ? thank you!; Here are my FFD boxes, configuration file and slice of my wing (red color is deformed grid, the black one is original grid); [screen output.txt](https://github.com/su2code/SU2/files/835550/screen.output.txt); [configuration.txt](https://github.com/su2code/SU2/files/835551/configuration.txt); ![comparison](https://cloud.githubusercontent.com/assets/23302629/23821092/b4b13030-0663-11e7-91b5-e63849c323ab.png); ![ffdbox1](https://cloud.githubusercontent.com/assets/23302629/23821093/b5400cf6-0663-11e7-9975-e59a144298e6.png); ![ffdbox2](https://cloud.githubusercontent.com/assets/23302629/23821094/b541fd22-0663-11e7-8423-46502ca059d0.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/384
https://github.com/su2code/SU2/pull/385:31,Deployability,update,updates,31,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/385
https://github.com/su2code/SU2/pull/385:404,Modifiability,config,config,404,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/385
https://github.com/su2code/SU2/pull/385:100,Performance,optimiz,optimization,100,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/385
https://github.com/su2code/SU2/pull/385:187,Performance,optimiz,optimization,187,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/385
https://github.com/su2code/SU2/pull/385:958,Performance,optimiz,optimization,958,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/385
https://github.com/su2code/SU2/pull/385:308,Testability,test,test,308,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/385
https://github.com/su2code/SU2/pull/385:867,Usability,simpl,simply,867,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/385
https://github.com/su2code/SU2/pull/386:47,Performance,optimiz,optimization,47,"Gauss-Elimination with reciprocal values, some optimization in limiter calc. ...; A suspected bug in Line 230 solver_structure.cpp fixed",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/386
https://github.com/su2code/SU2/pull/387:49,Modifiability,Config,Config,49,Test Case was not running due to AssertionError: Config file has multiple specifications of CFL_ADAPT_PARAM; Duplicated entry of CFL_ADAPT_PARAM removed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/387
https://github.com/su2code/SU2/pull/387:0,Testability,Test,Test,0,Test Case was not running due to AssertionError: Config file has multiple specifications of CFL_ADAPT_PARAM; Duplicated entry of CFL_ADAPT_PARAM removed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/387
https://github.com/su2code/SU2/pull/387:33,Testability,Assert,AssertionError,33,Test Case was not running due to AssertionError: Config file has multiple specifications of CFL_ADAPT_PARAM; Duplicated entry of CFL_ADAPT_PARAM removed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/387
https://github.com/su2code/SU2/issues/388:49,Availability,error,error,49,"Running serial_regression.py I get the following error:; ==================== Start Test: contadj_euler_py ====================; /home/andreak/tmp/AUR/su2/src/SU2/TestCases/cont_adj_euler/naca0012; Traceback (most recent call last):; File ""/opt/su2/bin/continuous_adjoint.py"", line 36, in <module>; sys.path.append(os.environ['SU2_RUN']); File ""/usr/lib/python3.6/os.py"", line 669, in __getitem__; raise KeyError(key) from None; KeyError: 'SU2_RUN'; Traceback (most recent call last):; File ""serial_regression.py"", line 983, in <module>; main(); File ""serial_regression.py"", line 861, in main; pass_list.append(contadj_euler_py.run_filediff()); File ""/home/andreak/tmp/AUR/su2/src/SU2/TestCases/TestCase.py"", line 241, in run_filediff; todate = time.ctime(os.stat(tofile).st_mtime); OSError: [Errno 2] No such file or directory: 'of_grad_cd.dat'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/388
https://github.com/su2code/SU2/issues/388:84,Testability,Test,Test,84,"Running serial_regression.py I get the following error:; ==================== Start Test: contadj_euler_py ====================; /home/andreak/tmp/AUR/su2/src/SU2/TestCases/cont_adj_euler/naca0012; Traceback (most recent call last):; File ""/opt/su2/bin/continuous_adjoint.py"", line 36, in <module>; sys.path.append(os.environ['SU2_RUN']); File ""/usr/lib/python3.6/os.py"", line 669, in __getitem__; raise KeyError(key) from None; KeyError: 'SU2_RUN'; Traceback (most recent call last):; File ""serial_regression.py"", line 983, in <module>; main(); File ""serial_regression.py"", line 861, in main; pass_list.append(contadj_euler_py.run_filediff()); File ""/home/andreak/tmp/AUR/su2/src/SU2/TestCases/TestCase.py"", line 241, in run_filediff; todate = time.ctime(os.stat(tofile).st_mtime); OSError: [Errno 2] No such file or directory: 'of_grad_cd.dat'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/388
https://github.com/su2code/SU2/issues/388:163,Testability,Test,TestCases,163,"Running serial_regression.py I get the following error:; ==================== Start Test: contadj_euler_py ====================; /home/andreak/tmp/AUR/su2/src/SU2/TestCases/cont_adj_euler/naca0012; Traceback (most recent call last):; File ""/opt/su2/bin/continuous_adjoint.py"", line 36, in <module>; sys.path.append(os.environ['SU2_RUN']); File ""/usr/lib/python3.6/os.py"", line 669, in __getitem__; raise KeyError(key) from None; KeyError: 'SU2_RUN'; Traceback (most recent call last):; File ""serial_regression.py"", line 983, in <module>; main(); File ""serial_regression.py"", line 861, in main; pass_list.append(contadj_euler_py.run_filediff()); File ""/home/andreak/tmp/AUR/su2/src/SU2/TestCases/TestCase.py"", line 241, in run_filediff; todate = time.ctime(os.stat(tofile).st_mtime); OSError: [Errno 2] No such file or directory: 'of_grad_cd.dat'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/388
https://github.com/su2code/SU2/issues/388:685,Testability,Test,TestCases,685,"Running serial_regression.py I get the following error:; ==================== Start Test: contadj_euler_py ====================; /home/andreak/tmp/AUR/su2/src/SU2/TestCases/cont_adj_euler/naca0012; Traceback (most recent call last):; File ""/opt/su2/bin/continuous_adjoint.py"", line 36, in <module>; sys.path.append(os.environ['SU2_RUN']); File ""/usr/lib/python3.6/os.py"", line 669, in __getitem__; raise KeyError(key) from None; KeyError: 'SU2_RUN'; Traceback (most recent call last):; File ""serial_regression.py"", line 983, in <module>; main(); File ""serial_regression.py"", line 861, in main; pass_list.append(contadj_euler_py.run_filediff()); File ""/home/andreak/tmp/AUR/su2/src/SU2/TestCases/TestCase.py"", line 241, in run_filediff; todate = time.ctime(os.stat(tofile).st_mtime); OSError: [Errno 2] No such file or directory: 'of_grad_cd.dat'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/388
https://github.com/su2code/SU2/issues/388:695,Testability,Test,TestCase,695,"Running serial_regression.py I get the following error:; ==================== Start Test: contadj_euler_py ====================; /home/andreak/tmp/AUR/su2/src/SU2/TestCases/cont_adj_euler/naca0012; Traceback (most recent call last):; File ""/opt/su2/bin/continuous_adjoint.py"", line 36, in <module>; sys.path.append(os.environ['SU2_RUN']); File ""/usr/lib/python3.6/os.py"", line 669, in __getitem__; raise KeyError(key) from None; KeyError: 'SU2_RUN'; Traceback (most recent call last):; File ""serial_regression.py"", line 983, in <module>; main(); File ""serial_regression.py"", line 861, in main; pass_list.append(contadj_euler_py.run_filediff()); File ""/home/andreak/tmp/AUR/su2/src/SU2/TestCases/TestCase.py"", line 241, in run_filediff; todate = time.ctime(os.stat(tofile).st_mtime); OSError: [Errno 2] No such file or directory: 'of_grad_cd.dat'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/388
https://github.com/su2code/SU2/pull/389:183,Energy Efficiency,efficient,efficient,183,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/389
https://github.com/su2code/SU2/pull/389:209,Energy Efficiency,green,green,209,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/389
https://github.com/su2code/SU2/pull/389:215,Energy Efficiency,power,power,215,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/389
https://github.com/su2code/SU2/pull/389:362,Integrability,interface,interface,362,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/389
https://github.com/su2code/SU2/pull/389:483,Integrability,interface,interface,483,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/389
https://github.com/su2code/SU2/pull/389:522,Integrability,interface,interface,522,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/389
https://github.com/su2code/SU2/pull/389:324,Modifiability,config,config,324,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/389
https://github.com/su2code/SU2/pull/389:565,Modifiability,config,config,565,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/389
https://github.com/su2code/SU2/pull/390:90,Availability,avail,available,90,"This pull request deprecates the generalized outflow adjoint. This functionality is still available in an alternate branch, however I won't be able to maintain it for future updates. ; This means that some of the regression tests had to be updated, since they previously included testing this functionality. . This pull request uses a matching branch in the TestCases repository to ease that update - the .travis.yml file will can be switched back to the TestCases/develop branch when needed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/390
https://github.com/su2code/SU2/pull/390:174,Deployability,update,updates,174,"This pull request deprecates the generalized outflow adjoint. This functionality is still available in an alternate branch, however I won't be able to maintain it for future updates. ; This means that some of the regression tests had to be updated, since they previously included testing this functionality. . This pull request uses a matching branch in the TestCases repository to ease that update - the .travis.yml file will can be switched back to the TestCases/develop branch when needed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/390
https://github.com/su2code/SU2/pull/390:240,Deployability,update,updated,240,"This pull request deprecates the generalized outflow adjoint. This functionality is still available in an alternate branch, however I won't be able to maintain it for future updates. ; This means that some of the regression tests had to be updated, since they previously included testing this functionality. . This pull request uses a matching branch in the TestCases repository to ease that update - the .travis.yml file will can be switched back to the TestCases/develop branch when needed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/390
https://github.com/su2code/SU2/pull/390:392,Deployability,update,update,392,"This pull request deprecates the generalized outflow adjoint. This functionality is still available in an alternate branch, however I won't be able to maintain it for future updates. ; This means that some of the regression tests had to be updated, since they previously included testing this functionality. . This pull request uses a matching branch in the TestCases repository to ease that update - the .travis.yml file will can be switched back to the TestCases/develop branch when needed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/390
https://github.com/su2code/SU2/pull/390:224,Testability,test,tests,224,"This pull request deprecates the generalized outflow adjoint. This functionality is still available in an alternate branch, however I won't be able to maintain it for future updates. ; This means that some of the regression tests had to be updated, since they previously included testing this functionality. . This pull request uses a matching branch in the TestCases repository to ease that update - the .travis.yml file will can be switched back to the TestCases/develop branch when needed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/390
https://github.com/su2code/SU2/pull/390:280,Testability,test,testing,280,"This pull request deprecates the generalized outflow adjoint. This functionality is still available in an alternate branch, however I won't be able to maintain it for future updates. ; This means that some of the regression tests had to be updated, since they previously included testing this functionality. . This pull request uses a matching branch in the TestCases repository to ease that update - the .travis.yml file will can be switched back to the TestCases/develop branch when needed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/390
https://github.com/su2code/SU2/pull/390:358,Testability,Test,TestCases,358,"This pull request deprecates the generalized outflow adjoint. This functionality is still available in an alternate branch, however I won't be able to maintain it for future updates. ; This means that some of the regression tests had to be updated, since they previously included testing this functionality. . This pull request uses a matching branch in the TestCases repository to ease that update - the .travis.yml file will can be switched back to the TestCases/develop branch when needed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/390
https://github.com/su2code/SU2/pull/390:455,Testability,Test,TestCases,455,"This pull request deprecates the generalized outflow adjoint. This functionality is still available in an alternate branch, however I won't be able to maintain it for future updates. ; This means that some of the regression tests had to be updated, since they previously included testing this functionality. . This pull request uses a matching branch in the TestCases repository to ease that update - the .travis.yml file will can be switched back to the TestCases/develop branch when needed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/390
https://github.com/su2code/SU2/pull/391:47,Modifiability,Config,Config,47,Example was not running due to AssertionError: Config file has multiple specifications of CFL_ADAPT_PARAM; Duplicated entry of CFL_ADAPT_PARAM removed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/391
https://github.com/su2code/SU2/pull/391:31,Testability,Assert,AssertionError,31,Example was not running due to AssertionError: Config file has multiple specifications of CFL_ADAPT_PARAM; Duplicated entry of CFL_ADAPT_PARAM removed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/391
https://github.com/su2code/SU2/pull/394:13,Availability,error,error,13,"This adds an error check on the file type for restarts (binary vs ascii). A magic number (535532 = SU2 in hex) was added as the first int in our native binary format. If this is *not* found when attempting to read a binary restart, or if it *is* found when attempting to read an ascii restart, the code now throws a proper error.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/394
https://github.com/su2code/SU2/pull/394:323,Availability,error,error,323,"This adds an error check on the file type for restarts (binary vs ascii). A magic number (535532 = SU2 in hex) was added as the first int in our native binary format. If this is *not* found when attempting to read a binary restart, or if it *is* found when attempting to read an ascii restart, the code now throws a proper error.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/394
https://github.com/su2code/SU2/issues/395:26,Performance,optimiz,optimizing,26,"Hello!. Last week I ran a optimizing case, this time I optimized the efficiency of an airfoil (2D). ; According to @hlkline , the Python scripts automatically recognize the kind of objective and automatically distinguished the objectives which have to be minimized from the ones which have to be maximized. There is no need to scale the objective function by a negative symbol to change the optimizer from a minimum to maximum case, this is all done by the Python scripts, right?; However in my case the objective function values are all negative in the log.txt file, but not in the history file. Furthermore after 18 NIT, the optimizer stops and says that an positive directional derivative for line-search is found. Which should because otherwise the efficiency won't increase. Can you guys have a look at the log and history file, because I don't think the optimizer gives a right output (the FC of the log.txt and of the history file do not agree, it goes wrong between FC 56 and FC 67). ; I appreciate your help!. Kind regards,. Floris . [history_project.txt](https://github.com/su2code/SU2/files/1018645/history_project.txt); [log.txt](https://github.com/su2code/SU2/files/1018647/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/395
https://github.com/su2code/SU2/issues/395:55,Performance,optimiz,optimized,55,"Hello!. Last week I ran a optimizing case, this time I optimized the efficiency of an airfoil (2D). ; According to @hlkline , the Python scripts automatically recognize the kind of objective and automatically distinguished the objectives which have to be minimized from the ones which have to be maximized. There is no need to scale the objective function by a negative symbol to change the optimizer from a minimum to maximum case, this is all done by the Python scripts, right?; However in my case the objective function values are all negative in the log.txt file, but not in the history file. Furthermore after 18 NIT, the optimizer stops and says that an positive directional derivative for line-search is found. Which should because otherwise the efficiency won't increase. Can you guys have a look at the log and history file, because I don't think the optimizer gives a right output (the FC of the log.txt and of the history file do not agree, it goes wrong between FC 56 and FC 67). ; I appreciate your help!. Kind regards,. Floris . [history_project.txt](https://github.com/su2code/SU2/files/1018645/history_project.txt); [log.txt](https://github.com/su2code/SU2/files/1018647/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/395
https://github.com/su2code/SU2/issues/395:391,Performance,optimiz,optimizer,391,"Hello!. Last week I ran a optimizing case, this time I optimized the efficiency of an airfoil (2D). ; According to @hlkline , the Python scripts automatically recognize the kind of objective and automatically distinguished the objectives which have to be minimized from the ones which have to be maximized. There is no need to scale the objective function by a negative symbol to change the optimizer from a minimum to maximum case, this is all done by the Python scripts, right?; However in my case the objective function values are all negative in the log.txt file, but not in the history file. Furthermore after 18 NIT, the optimizer stops and says that an positive directional derivative for line-search is found. Which should because otherwise the efficiency won't increase. Can you guys have a look at the log and history file, because I don't think the optimizer gives a right output (the FC of the log.txt and of the history file do not agree, it goes wrong between FC 56 and FC 67). ; I appreciate your help!. Kind regards,. Floris . [history_project.txt](https://github.com/su2code/SU2/files/1018645/history_project.txt); [log.txt](https://github.com/su2code/SU2/files/1018647/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/395
https://github.com/su2code/SU2/issues/395:627,Performance,optimiz,optimizer,627,"Hello!. Last week I ran a optimizing case, this time I optimized the efficiency of an airfoil (2D). ; According to @hlkline , the Python scripts automatically recognize the kind of objective and automatically distinguished the objectives which have to be minimized from the ones which have to be maximized. There is no need to scale the objective function by a negative symbol to change the optimizer from a minimum to maximum case, this is all done by the Python scripts, right?; However in my case the objective function values are all negative in the log.txt file, but not in the history file. Furthermore after 18 NIT, the optimizer stops and says that an positive directional derivative for line-search is found. Which should because otherwise the efficiency won't increase. Can you guys have a look at the log and history file, because I don't think the optimizer gives a right output (the FC of the log.txt and of the history file do not agree, it goes wrong between FC 56 and FC 67). ; I appreciate your help!. Kind regards,. Floris . [history_project.txt](https://github.com/su2code/SU2/files/1018645/history_project.txt); [log.txt](https://github.com/su2code/SU2/files/1018647/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/395
https://github.com/su2code/SU2/issues/395:860,Performance,optimiz,optimizer,860,"Hello!. Last week I ran a optimizing case, this time I optimized the efficiency of an airfoil (2D). ; According to @hlkline , the Python scripts automatically recognize the kind of objective and automatically distinguished the objectives which have to be minimized from the ones which have to be maximized. There is no need to scale the objective function by a negative symbol to change the optimizer from a minimum to maximum case, this is all done by the Python scripts, right?; However in my case the objective function values are all negative in the log.txt file, but not in the history file. Furthermore after 18 NIT, the optimizer stops and says that an positive directional derivative for line-search is found. Which should because otherwise the efficiency won't increase. Can you guys have a look at the log and history file, because I don't think the optimizer gives a right output (the FC of the log.txt and of the history file do not agree, it goes wrong between FC 56 and FC 67). ; I appreciate your help!. Kind regards,. Floris . [history_project.txt](https://github.com/su2code/SU2/files/1018645/history_project.txt); [log.txt](https://github.com/su2code/SU2/files/1018647/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/395
https://github.com/su2code/SU2/issues/395:554,Testability,log,log,554,"Hello!. Last week I ran a optimizing case, this time I optimized the efficiency of an airfoil (2D). ; According to @hlkline , the Python scripts automatically recognize the kind of objective and automatically distinguished the objectives which have to be minimized from the ones which have to be maximized. There is no need to scale the objective function by a negative symbol to change the optimizer from a minimum to maximum case, this is all done by the Python scripts, right?; However in my case the objective function values are all negative in the log.txt file, but not in the history file. Furthermore after 18 NIT, the optimizer stops and says that an positive directional derivative for line-search is found. Which should because otherwise the efficiency won't increase. Can you guys have a look at the log and history file, because I don't think the optimizer gives a right output (the FC of the log.txt and of the history file do not agree, it goes wrong between FC 56 and FC 67). ; I appreciate your help!. Kind regards,. Floris . [history_project.txt](https://github.com/su2code/SU2/files/1018645/history_project.txt); [log.txt](https://github.com/su2code/SU2/files/1018647/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/395
https://github.com/su2code/SU2/issues/395:812,Testability,log,log,812,"Hello!. Last week I ran a optimizing case, this time I optimized the efficiency of an airfoil (2D). ; According to @hlkline , the Python scripts automatically recognize the kind of objective and automatically distinguished the objectives which have to be minimized from the ones which have to be maximized. There is no need to scale the objective function by a negative symbol to change the optimizer from a minimum to maximum case, this is all done by the Python scripts, right?; However in my case the objective function values are all negative in the log.txt file, but not in the history file. Furthermore after 18 NIT, the optimizer stops and says that an positive directional derivative for line-search is found. Which should because otherwise the efficiency won't increase. Can you guys have a look at the log and history file, because I don't think the optimizer gives a right output (the FC of the log.txt and of the history file do not agree, it goes wrong between FC 56 and FC 67). ; I appreciate your help!. Kind regards,. Floris . [history_project.txt](https://github.com/su2code/SU2/files/1018645/history_project.txt); [log.txt](https://github.com/su2code/SU2/files/1018647/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/395
https://github.com/su2code/SU2/issues/395:906,Testability,log,log,906,"Hello!. Last week I ran a optimizing case, this time I optimized the efficiency of an airfoil (2D). ; According to @hlkline , the Python scripts automatically recognize the kind of objective and automatically distinguished the objectives which have to be minimized from the ones which have to be maximized. There is no need to scale the objective function by a negative symbol to change the optimizer from a minimum to maximum case, this is all done by the Python scripts, right?; However in my case the objective function values are all negative in the log.txt file, but not in the history file. Furthermore after 18 NIT, the optimizer stops and says that an positive directional derivative for line-search is found. Which should because otherwise the efficiency won't increase. Can you guys have a look at the log and history file, because I don't think the optimizer gives a right output (the FC of the log.txt and of the history file do not agree, it goes wrong between FC 56 and FC 67). ; I appreciate your help!. Kind regards,. Floris . [history_project.txt](https://github.com/su2code/SU2/files/1018645/history_project.txt); [log.txt](https://github.com/su2code/SU2/files/1018647/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/395
https://github.com/su2code/SU2/issues/395:1133,Testability,log,log,1133,"Hello!. Last week I ran a optimizing case, this time I optimized the efficiency of an airfoil (2D). ; According to @hlkline , the Python scripts automatically recognize the kind of objective and automatically distinguished the objectives which have to be minimized from the ones which have to be maximized. There is no need to scale the objective function by a negative symbol to change the optimizer from a minimum to maximum case, this is all done by the Python scripts, right?; However in my case the objective function values are all negative in the log.txt file, but not in the history file. Furthermore after 18 NIT, the optimizer stops and says that an positive directional derivative for line-search is found. Which should because otherwise the efficiency won't increase. Can you guys have a look at the log and history file, because I don't think the optimizer gives a right output (the FC of the log.txt and of the history file do not agree, it goes wrong between FC 56 and FC 67). ; I appreciate your help!. Kind regards,. Floris . [history_project.txt](https://github.com/su2code/SU2/files/1018645/history_project.txt); [log.txt](https://github.com/su2code/SU2/files/1018647/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/395
https://github.com/su2code/SU2/issues/395:1187,Testability,log,log,1187,"Hello!. Last week I ran a optimizing case, this time I optimized the efficiency of an airfoil (2D). ; According to @hlkline , the Python scripts automatically recognize the kind of objective and automatically distinguished the objectives which have to be minimized from the ones which have to be maximized. There is no need to scale the objective function by a negative symbol to change the optimizer from a minimum to maximum case, this is all done by the Python scripts, right?; However in my case the objective function values are all negative in the log.txt file, but not in the history file. Furthermore after 18 NIT, the optimizer stops and says that an positive directional derivative for line-search is found. Which should because otherwise the efficiency won't increase. Can you guys have a look at the log and history file, because I don't think the optimizer gives a right output (the FC of the log.txt and of the history file do not agree, it goes wrong between FC 56 and FC 67). ; I appreciate your help!. Kind regards,. Floris . [history_project.txt](https://github.com/su2code/SU2/files/1018645/history_project.txt); [log.txt](https://github.com/su2code/SU2/files/1018647/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/395
https://github.com/su2code/SU2/pull/397:23,Modifiability,variab,variables,23,The order on which the variables were being written in the restart file was wrong. This issue only appeared when limiters and/or residuals were written. This pull request fixes the issue by reorganizing the variable location when writing limiters and/or residuals.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/397
https://github.com/su2code/SU2/pull/397:207,Modifiability,variab,variable,207,The order on which the variables were being written in the restart file was wrong. This issue only appeared when limiters and/or residuals were written. This pull request fixes the issue by reorganizing the variable location when writing limiters and/or residuals.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/397
https://github.com/su2code/SU2/issues/398:168,Availability,error,error,168,"Hi. While attempting to run compressible N-S simulation using Peng-Robinsion EoS, I ran into a problem with non-physical solutions. Running SU2_CFD gives the following error multiple times and exits:. ------------------------------ Begin Solver -----------------------------; not physical solution found, h and s input -1.24974 -3.8387; ...; !!! Error: SU2 has diverged. Now exiting... !!! . The simulation which resulted in the error was run at around 313 K and 400 bar, which is in the critical region of the fluid I used (CO2). Repeating the simulation at lower pressures (less than about 100 bar) seems to work fine. In the critical region the EoS has only one real solution, so perhaps the problem is related to finding a root for the EoS in fluid_model_ppr.cpp. Has anyone else encountered the problem?. Relevant configuration options were:. FREESTREAM_PRESSURE= 399E+5; FREESTREAM_TEMPERATURE= 313; REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE. MARKER_RIEMANN= (inlet, TOTAL_CONDITIONS_PT, 400E+5, 313.15, 1.0, 0.0, 0.0); MARKER_NRBC= ( outlet, STATIC_PRESSURE, 395E+5, 0.0, 0.0, 0.0, 0.0). % ---- IDEAL GAS, POLYTROPIC, VAN DER WAALS AND PENG ROBINSON CONSTANTS -------%; FLUID_MODEL= PR_GAS; GAMMA_VALUE= 1.28; GAS_CONSTANT= 188.9221; CRITICAL_TEMPERATURE= 304.1282; CRITICAL_PRESSURE= 7377300; CRITICAL_DENSITY= 480.9911; ACENTRIC_FACTOR= 0.2239",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/398
https://github.com/su2code/SU2/issues/398:346,Availability,Error,Error,346,"Hi. While attempting to run compressible N-S simulation using Peng-Robinsion EoS, I ran into a problem with non-physical solutions. Running SU2_CFD gives the following error multiple times and exits:. ------------------------------ Begin Solver -----------------------------; not physical solution found, h and s input -1.24974 -3.8387; ...; !!! Error: SU2 has diverged. Now exiting... !!! . The simulation which resulted in the error was run at around 313 K and 400 bar, which is in the critical region of the fluid I used (CO2). Repeating the simulation at lower pressures (less than about 100 bar) seems to work fine. In the critical region the EoS has only one real solution, so perhaps the problem is related to finding a root for the EoS in fluid_model_ppr.cpp. Has anyone else encountered the problem?. Relevant configuration options were:. FREESTREAM_PRESSURE= 399E+5; FREESTREAM_TEMPERATURE= 313; REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE. MARKER_RIEMANN= (inlet, TOTAL_CONDITIONS_PT, 400E+5, 313.15, 1.0, 0.0, 0.0); MARKER_NRBC= ( outlet, STATIC_PRESSURE, 395E+5, 0.0, 0.0, 0.0, 0.0). % ---- IDEAL GAS, POLYTROPIC, VAN DER WAALS AND PENG ROBINSON CONSTANTS -------%; FLUID_MODEL= PR_GAS; GAMMA_VALUE= 1.28; GAS_CONSTANT= 188.9221; CRITICAL_TEMPERATURE= 304.1282; CRITICAL_PRESSURE= 7377300; CRITICAL_DENSITY= 480.9911; ACENTRIC_FACTOR= 0.2239",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/398
https://github.com/su2code/SU2/issues/398:429,Availability,error,error,429,"Hi. While attempting to run compressible N-S simulation using Peng-Robinsion EoS, I ran into a problem with non-physical solutions. Running SU2_CFD gives the following error multiple times and exits:. ------------------------------ Begin Solver -----------------------------; not physical solution found, h and s input -1.24974 -3.8387; ...; !!! Error: SU2 has diverged. Now exiting... !!! . The simulation which resulted in the error was run at around 313 K and 400 bar, which is in the critical region of the fluid I used (CO2). Repeating the simulation at lower pressures (less than about 100 bar) seems to work fine. In the critical region the EoS has only one real solution, so perhaps the problem is related to finding a root for the EoS in fluid_model_ppr.cpp. Has anyone else encountered the problem?. Relevant configuration options were:. FREESTREAM_PRESSURE= 399E+5; FREESTREAM_TEMPERATURE= 313; REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE. MARKER_RIEMANN= (inlet, TOTAL_CONDITIONS_PT, 400E+5, 313.15, 1.0, 0.0, 0.0); MARKER_NRBC= ( outlet, STATIC_PRESSURE, 395E+5, 0.0, 0.0, 0.0, 0.0). % ---- IDEAL GAS, POLYTROPIC, VAN DER WAALS AND PENG ROBINSON CONSTANTS -------%; FLUID_MODEL= PR_GAS; GAMMA_VALUE= 1.28; GAS_CONSTANT= 188.9221; CRITICAL_TEMPERATURE= 304.1282; CRITICAL_PRESSURE= 7377300; CRITICAL_DENSITY= 480.9911; ACENTRIC_FACTOR= 0.2239",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/398
https://github.com/su2code/SU2/issues/398:819,Deployability,configurat,configuration,819,"Hi. While attempting to run compressible N-S simulation using Peng-Robinsion EoS, I ran into a problem with non-physical solutions. Running SU2_CFD gives the following error multiple times and exits:. ------------------------------ Begin Solver -----------------------------; not physical solution found, h and s input -1.24974 -3.8387; ...; !!! Error: SU2 has diverged. Now exiting... !!! . The simulation which resulted in the error was run at around 313 K and 400 bar, which is in the critical region of the fluid I used (CO2). Repeating the simulation at lower pressures (less than about 100 bar) seems to work fine. In the critical region the EoS has only one real solution, so perhaps the problem is related to finding a root for the EoS in fluid_model_ppr.cpp. Has anyone else encountered the problem?. Relevant configuration options were:. FREESTREAM_PRESSURE= 399E+5; FREESTREAM_TEMPERATURE= 313; REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE. MARKER_RIEMANN= (inlet, TOTAL_CONDITIONS_PT, 400E+5, 313.15, 1.0, 0.0, 0.0); MARKER_NRBC= ( outlet, STATIC_PRESSURE, 395E+5, 0.0, 0.0, 0.0, 0.0). % ---- IDEAL GAS, POLYTROPIC, VAN DER WAALS AND PENG ROBINSON CONSTANTS -------%; FLUID_MODEL= PR_GAS; GAMMA_VALUE= 1.28; GAS_CONSTANT= 188.9221; CRITICAL_TEMPERATURE= 304.1282; CRITICAL_PRESSURE= 7377300; CRITICAL_DENSITY= 480.9911; ACENTRIC_FACTOR= 0.2239",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/398
https://github.com/su2code/SU2/issues/398:819,Modifiability,config,configuration,819,"Hi. While attempting to run compressible N-S simulation using Peng-Robinsion EoS, I ran into a problem with non-physical solutions. Running SU2_CFD gives the following error multiple times and exits:. ------------------------------ Begin Solver -----------------------------; not physical solution found, h and s input -1.24974 -3.8387; ...; !!! Error: SU2 has diverged. Now exiting... !!! . The simulation which resulted in the error was run at around 313 K and 400 bar, which is in the critical region of the fluid I used (CO2). Repeating the simulation at lower pressures (less than about 100 bar) seems to work fine. In the critical region the EoS has only one real solution, so perhaps the problem is related to finding a root for the EoS in fluid_model_ppr.cpp. Has anyone else encountered the problem?. Relevant configuration options were:. FREESTREAM_PRESSURE= 399E+5; FREESTREAM_TEMPERATURE= 313; REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE. MARKER_RIEMANN= (inlet, TOTAL_CONDITIONS_PT, 400E+5, 313.15, 1.0, 0.0, 0.0); MARKER_NRBC= ( outlet, STATIC_PRESSURE, 395E+5, 0.0, 0.0, 0.0, 0.0). % ---- IDEAL GAS, POLYTROPIC, VAN DER WAALS AND PENG ROBINSON CONSTANTS -------%; FLUID_MODEL= PR_GAS; GAMMA_VALUE= 1.28; GAS_CONSTANT= 188.9221; CRITICAL_TEMPERATURE= 304.1282; CRITICAL_PRESSURE= 7377300; CRITICAL_DENSITY= 480.9911; ACENTRIC_FACTOR= 0.2239",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/398
https://github.com/su2code/SU2/issues/400:167,Availability,redundant,redundant,167,"This suggestion is a continuation for the previous report on the topic “[Remove unnecessary null pointer checks](https://github.com/su2code/SU2/issues/26 ""Deletion of redundant pointer checks?"")”.; Would you like to wrap any pointer data members with the template class “[std::unique_ptr](https://en.wikipedia.org/wiki/Smart_pointer#unique_ptr ""Description for std::unique_ptr"")”?. Update candidates:; - [CPoint](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/dual_grid_structure.cpp#L323); - [CSysMatrix](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/matrix_structure.cpp#L70)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/400
https://github.com/su2code/SU2/issues/400:382,Deployability,Update,Update,382,"This suggestion is a continuation for the previous report on the topic “[Remove unnecessary null pointer checks](https://github.com/su2code/SU2/issues/26 ""Deletion of redundant pointer checks?"")”.; Would you like to wrap any pointer data members with the template class “[std::unique_ptr](https://en.wikipedia.org/wiki/Smart_pointer#unique_ptr ""Description for std::unique_ptr"")”?. Update candidates:; - [CPoint](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/dual_grid_structure.cpp#L323); - [CSysMatrix](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/matrix_structure.cpp#L70)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/400
https://github.com/su2code/SU2/issues/400:216,Integrability,wrap,wrap,216,"This suggestion is a continuation for the previous report on the topic “[Remove unnecessary null pointer checks](https://github.com/su2code/SU2/issues/26 ""Deletion of redundant pointer checks?"")”.; Would you like to wrap any pointer data members with the template class “[std::unique_ptr](https://en.wikipedia.org/wiki/Smart_pointer#unique_ptr ""Description for std::unique_ptr"")”?. Update candidates:; - [CPoint](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/dual_grid_structure.cpp#L323); - [CSysMatrix](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/matrix_structure.cpp#L70)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/400
https://github.com/su2code/SU2/issues/400:167,Safety,redund,redundant,167,"This suggestion is a continuation for the previous report on the topic “[Remove unnecessary null pointer checks](https://github.com/su2code/SU2/issues/26 ""Deletion of redundant pointer checks?"")”.; Would you like to wrap any pointer data members with the template class “[std::unique_ptr](https://en.wikipedia.org/wiki/Smart_pointer#unique_ptr ""Description for std::unique_ptr"")”?. Update candidates:; - [CPoint](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/dual_grid_structure.cpp#L323); - [CSysMatrix](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/matrix_structure.cpp#L70)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/400
https://github.com/su2code/SU2/issues/401:278,Availability,error,error,278,"Hi. I have successfully run the sliding mesh test case for rotating cylinders. However, when I change the simulation type to Navier-Stokes in the cfg file the solution diverges before starting the CFD iterations. Can you please suggest what is going wrong and how to avoid this error. Regards; Suman Vajjala",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/401
https://github.com/su2code/SU2/issues/401:267,Safety,avoid,avoid,267,"Hi. I have successfully run the sliding mesh test case for rotating cylinders. However, when I change the simulation type to Navier-Stokes in the cfg file the solution diverges before starting the CFD iterations. Can you please suggest what is going wrong and how to avoid this error. Regards; Suman Vajjala",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/401
https://github.com/su2code/SU2/issues/401:45,Testability,test,test,45,"Hi. I have successfully run the sliding mesh test case for rotating cylinders. However, when I change the simulation type to Navier-Stokes in the cfg file the solution diverges before starting the CFD iterations. Can you please suggest what is going wrong and how to avoid this error. Regards; Suman Vajjala",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/401
https://github.com/su2code/SU2/issues/402:115,Deployability,configurat,configuration,115,"Hello,. I just tried to run the sliding_interface/channel_2D case, which has 3 zones (0,1,2) in the grid file. The configuration file I used is same as in TestCase, and the only thing I changed is the OUTPUT_FORMAT set to TECPLOT format. The solution output file for zone 1 is not corrected, and a lot of terms in flow_1_*.dat file are 2.502053e-316. Anyone has idea about this issue?. Thanks!. ![bug](https://user-images.githubusercontent.com/20882368/27462920-abbe023e-57f6-11e7-9842-b15b864d79d8.png); ![bug1](https://user-images.githubusercontent.com/20882368/27462924-affcbde0-57f6-11e7-8fa5-8400a5ba6f40.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/402
https://github.com/su2code/SU2/issues/402:115,Modifiability,config,configuration,115,"Hello,. I just tried to run the sliding_interface/channel_2D case, which has 3 zones (0,1,2) in the grid file. The configuration file I used is same as in TestCase, and the only thing I changed is the OUTPUT_FORMAT set to TECPLOT format. The solution output file for zone 1 is not corrected, and a lot of terms in flow_1_*.dat file are 2.502053e-316. Anyone has idea about this issue?. Thanks!. ![bug](https://user-images.githubusercontent.com/20882368/27462920-abbe023e-57f6-11e7-9842-b15b864d79d8.png); ![bug1](https://user-images.githubusercontent.com/20882368/27462924-affcbde0-57f6-11e7-8fa5-8400a5ba6f40.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/402
https://github.com/su2code/SU2/issues/402:155,Testability,Test,TestCase,155,"Hello,. I just tried to run the sliding_interface/channel_2D case, which has 3 zones (0,1,2) in the grid file. The configuration file I used is same as in TestCase, and the only thing I changed is the OUTPUT_FORMAT set to TECPLOT format. The solution output file for zone 1 is not corrected, and a lot of terms in flow_1_*.dat file are 2.502053e-316. Anyone has idea about this issue?. Thanks!. ![bug](https://user-images.githubusercontent.com/20882368/27462920-abbe023e-57f6-11e7-9842-b15b864d79d8.png); ![bug1](https://user-images.githubusercontent.com/20882368/27462924-affcbde0-57f6-11e7-8fa5-8400a5ba6f40.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/402
https://github.com/su2code/SU2/issues/404:69,Performance,perform,perform,69,"Hi, ; I'm new to CFD and SU2. I would like to ask if its possible to perform an axisymmetric flow simulation? I cannot find AXISYMMETRIC tag in the config_template, so I'm wondering if that option still exists. . Thanks for reply",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/404
https://github.com/su2code/SU2/issues/405:326,Modifiability,config,config,326,"Hi. I think there is a bug in the Farfield BC implementation in SU2 v5. ; It is in the file solver_direct_mean.cpp at line number 10446 in the function CEulerSolver::BC_Far_Field. Basically, the boundary state is computed and then the residual is obtained as ; conv_numerics->ComputeResidual(Residual, Jacobian_i, Jacobian_j, config). Could this be a bug?. Shouldn't it be ; conv_numerics->GetInviscidProjFlux(&V_infty[nDim+2], Velocity, &Pressure, &V_infty[nDim+3], Normal, Residual). . Regards; Suman Vajjala",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/405
https://github.com/su2code/SU2/pull/406:276,Integrability,interface,interface,276,"- Adding multipoint design capability based on the Stability Functions python script example. I can add an example in test cases (if you are interested).; - Adding some consistency in CL, CD, CSF vs. Clift, CDrag, CSidyForce in the python scripts.; - Detecting a bug in fluid interface and updating custom obj. function capability",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/406
https://github.com/su2code/SU2/pull/406:251,Safety,Detect,Detecting,251,"- Adding multipoint design capability based on the Stability Functions python script example. I can add an example in test cases (if you are interested).; - Adding some consistency in CL, CD, CSF vs. Clift, CDrag, CSidyForce in the python scripts.; - Detecting a bug in fluid interface and updating custom obj. function capability",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/406
https://github.com/su2code/SU2/pull/406:118,Testability,test,test,118,"- Adding multipoint design capability based on the Stability Functions python script example. I can add an example in test cases (if you are interested).; - Adding some consistency in CL, CD, CSF vs. Clift, CDrag, CSidyForce in the python scripts.; - Detecting a bug in fluid interface and updating custom obj. function capability",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/406
https://github.com/su2code/SU2/pull/407:106,Integrability,rout,routines,106,This pull request introduces major structural changes to the discrete adjoint solver. I moved some of the routines to the driver level so that multi-zone problems work with the discrete adjoint. The basic implementation works for Fluid-Fluid zones. Other drivers follow soon (e.g. turbomachinery). Along with that there also some other minor changes:. - The low memory tecplot output (which was not working properly anyway) is now removed.; - The issue with the unsteady cont. adjoint referenced in #377 is solved.; - Restart for the discrete adjoint works properly (as long as the same number of procs is used); - I added options for frozen eddy viscosity and frozen limiter. This can be enabled with the options FROZEN_VISC_DISC/FROZEN_LIMITER_DISC. The default is NO for both.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/407
https://github.com/su2code/SU2/pull/408:489,Usability,usab,usability,489,"Hi, I have been working on SU2 for a while and I have some improvements (some of them are just cosmetic improvements):. - SU2 is now able to identify several engines with multiple intakes and exhaust (this is an important change).; - Renaming of the keywords REF_LENGTH_MOMENT (the word MOMENT was really confusing) or RefAreaCoeff.; - This is a interesting one. There were two wing slicing subroutines... I have I have picked the best one for the entire code and improve a little bit its usability.; - The grid deformation was not perfect. It was computing only the distance from the moving surfaces. I have added the possibility to compute distance from any solid surface (that is the default that works better).; - Removing some options that look like incomplete and adding some extra info like CoP. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/408
https://github.com/su2code/SU2/issues/409:1268,Deployability,update,updates,1268,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/409
https://github.com/su2code/SU2/issues/409:1416,Deployability,update,update,1416,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/409
https://github.com/su2code/SU2/issues/409:1496,Deployability,update,updated,1496,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/409
https://github.com/su2code/SU2/issues/409:98,Performance,optimiz,optimization,98,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/409
https://github.com/su2code/SU2/issues/409:145,Performance,optimiz,optimizer,145,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/409
https://github.com/su2code/SU2/issues/409:1188,Performance,optimiz,optimization,1188,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/409
https://github.com/su2code/SU2/issues/409:1454,Performance,optimiz,optimizer,1454,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/409
https://github.com/su2code/SU2/issues/409:283,Safety,detect,detect,283,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/409
https://github.com/su2code/SU2/issues/409:227,Testability,test,test,227,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/409
https://github.com/su2code/SU2/issues/409:333,Testability,test,test,333,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/409
https://github.com/su2code/SU2/pull/412:323,Usability,usab,usability,323,"Hi again, I have cleaned my previous pull request. In this one you can find the following:. Renaming of the keywords REF_LENGTH_MOMENT (the word MOMENT was really confusing) or RefAreaCoeff.; In the original SU2 there were two geometry slicing subroutines... I have picked the best one for the entire code and improved its usability.; The original grid deformation subroutine only computes the distance from the moving surfaces. I have added the possibility to compute distance from any solid surface (now by default).; Removing some options that look like incomplete. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/412
https://github.com/su2code/SU2/pull/413:276,Availability,avail,available,276,"This pull request enlarges the capability of SU2 to simulate internal flows in turbomachinery. The flow solver is now capable of performing 3D steady multi-zone simulations via a 3D Non-Reflecting Mixing Plane. The implementation is based on the work done by Saxer and Giles (available at https://doi.org/10.2514/3.23618). To adapt the implementation of Saxer and Giles to an unstructured vertex-based solver such as SU2, a new data structure, called **_CTurboVertex_**, was created for the inflow and outflow boundaries. The **_CTurboVertex_** class is a child of the class **_CVertex_**; thus, it maintains all the standard vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.da",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/pull/413:2510,Availability,avail,available,2510,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/pull/413:326,Energy Efficiency,adapt,adapt,326,"This pull request enlarges the capability of SU2 to simulate internal flows in turbomachinery. The flow solver is now capable of performing 3D steady multi-zone simulations via a 3D Non-Reflecting Mixing Plane. The implementation is based on the work done by Saxer and Giles (available at https://doi.org/10.2514/3.23618). To adapt the implementation of Saxer and Giles to an unstructured vertex-based solver such as SU2, a new data structure, called **_CTurboVertex_**, was created for the inflow and outflow boundaries. The **_CTurboVertex_** class is a child of the class **_CVertex_**; thus, it maintains all the standard vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.da",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/pull/413:2035,Energy Efficiency,monitor,monitoring,2035,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/pull/413:2867,Energy Efficiency,adapt,adapted,2867,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/pull/413:1446,Integrability,interface,interface,1446,"vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/pull/413:1730,Integrability,interface,interface,1730,"vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/pull/413:2841,Integrability,rout,routines,2841,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/pull/413:326,Modifiability,adapt,adapt,326,"This pull request enlarges the capability of SU2 to simulate internal flows in turbomachinery. The flow solver is now capable of performing 3D steady multi-zone simulations via a 3D Non-Reflecting Mixing Plane. The implementation is based on the work done by Saxer and Giles (available at https://doi.org/10.2514/3.23618). To adapt the implementation of Saxer and Giles to an unstructured vertex-based solver such as SU2, a new data structure, called **_CTurboVertex_**, was created for the inflow and outflow boundaries. The **_CTurboVertex_** class is a child of the class **_CVertex_**; thus, it maintains all the standard vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.da",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/pull/413:2867,Modifiability,adapt,adapted,2867,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/pull/413:129,Performance,perform,performing,129,"This pull request enlarges the capability of SU2 to simulate internal flows in turbomachinery. The flow solver is now capable of performing 3D steady multi-zone simulations via a 3D Non-Reflecting Mixing Plane. The implementation is based on the work done by Saxer and Giles (available at https://doi.org/10.2514/3.23618). To adapt the implementation of Saxer and Giles to an unstructured vertex-based solver such as SU2, a new data structure, called **_CTurboVertex_**, was created for the inflow and outflow boundaries. The **_CTurboVertex_** class is a child of the class **_CVertex_**; thus, it maintains all the standard vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.da",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/pull/413:2651,Performance,perform,performance,2651,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/pull/413:2757,Performance,optimiz,optimization,2757,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/pull/413:730,Security,access,accessing,730,"This pull request enlarges the capability of SU2 to simulate internal flows in turbomachinery. The flow solver is now capable of performing 3D steady multi-zone simulations via a 3D Non-Reflecting Mixing Plane. The implementation is based on the work done by Saxer and Giles (available at https://doi.org/10.2514/3.23618). To adapt the implementation of Saxer and Giles to an unstructured vertex-based solver such as SU2, a new data structure, called **_CTurboVertex_**, was created for the inflow and outflow boundaries. The **_CTurboVertex_** class is a child of the class **_CVertex_**; thus, it maintains all the standard vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.da",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/413
https://github.com/su2code/SU2/issues/414:425,Energy Efficiency,Energy,Energy,425,"Current within the fluid_model.hpp defines the CFluidModel class with varibles however, the variables have incorrect commenting for the briefs with majority of the second half being repeated. From this it's difficult to determine what the variables actually are a part of as the nomenclature of them is a little ambiguous. Could this be sorted?. `class CFluidModel {. protected:; su2double StaticEnergy, /*!< \brief Internal Energy. */; Entropy, /*!< \brief Entropy. */; Density, /*!< \brief Density. */; Pressure, /*!< \brief Pressure. */; SoundSpeed2, /*!< \brief SpeedSound. */; Temperature, /*!< \brief Temperature. */; dPdrho_e, /*!< \brief DpDd_e. */; dPde_rho, /*!< \brief DpDe_d. */; dTdrho_e, /*!< \brief DTDd_e. */; dTde_rho, /*!< \brief DTDe_d. */; Cp, /*!< \brief Specific Heat Capacity at constant pressure. */; Mu, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudT_rho, /*!< \brief Specific Heat Capacity at constant pressure. */; Kt, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdT_rho; /*!< \brief Specific Heat Capacity at constant pressure. */`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/414
https://github.com/su2code/SU2/issues/414:92,Modifiability,variab,variables,92,"Current within the fluid_model.hpp defines the CFluidModel class with varibles however, the variables have incorrect commenting for the briefs with majority of the second half being repeated. From this it's difficult to determine what the variables actually are a part of as the nomenclature of them is a little ambiguous. Could this be sorted?. `class CFluidModel {. protected:; su2double StaticEnergy, /*!< \brief Internal Energy. */; Entropy, /*!< \brief Entropy. */; Density, /*!< \brief Density. */; Pressure, /*!< \brief Pressure. */; SoundSpeed2, /*!< \brief SpeedSound. */; Temperature, /*!< \brief Temperature. */; dPdrho_e, /*!< \brief DpDd_e. */; dPde_rho, /*!< \brief DpDe_d. */; dTdrho_e, /*!< \brief DTDd_e. */; dTde_rho, /*!< \brief DTDe_d. */; Cp, /*!< \brief Specific Heat Capacity at constant pressure. */; Mu, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudT_rho, /*!< \brief Specific Heat Capacity at constant pressure. */; Kt, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdT_rho; /*!< \brief Specific Heat Capacity at constant pressure. */`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/414
https://github.com/su2code/SU2/issues/414:239,Modifiability,variab,variables,239,"Current within the fluid_model.hpp defines the CFluidModel class with varibles however, the variables have incorrect commenting for the briefs with majority of the second half being repeated. From this it's difficult to determine what the variables actually are a part of as the nomenclature of them is a little ambiguous. Could this be sorted?. `class CFluidModel {. protected:; su2double StaticEnergy, /*!< \brief Internal Energy. */; Entropy, /*!< \brief Entropy. */; Density, /*!< \brief Density. */; Pressure, /*!< \brief Pressure. */; SoundSpeed2, /*!< \brief SpeedSound. */; Temperature, /*!< \brief Temperature. */; dPdrho_e, /*!< \brief DpDd_e. */; dPde_rho, /*!< \brief DpDe_d. */; dTdrho_e, /*!< \brief DTDd_e. */; dTde_rho, /*!< \brief DTDe_d. */; Cp, /*!< \brief Specific Heat Capacity at constant pressure. */; Mu, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudT_rho, /*!< \brief Specific Heat Capacity at constant pressure. */; Kt, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdT_rho; /*!< \brief Specific Heat Capacity at constant pressure. */`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/414
https://github.com/su2code/SU2/issues/417:103,Integrability,interface,interface,103,"Dear Team SU2,. I would like to inform you that, while post processing the results of a 3-zone sliding interface 3D simulation with Tecplot, it is noticed that output file of one of the zone (The outermost zone, within which remaining two zones are present) is showing 80% of data as ~x.xxxe-317 and 10% as nan. Whereas the run went very very smoothly with very good fall in residue in all the blocks without any non-physical points. Hence I am suspecting that there is some problem in post processing (SU2_SOL) it self. Please let me know how to solve this issue. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/417
https://github.com/su2code/SU2/issues/418:186,Performance,optimiz,optimization,186,"Hello and thanks for doing great work for this software!. I don't know for sure, but it seems the Optimal Shape Design of a Transonic Airfoil tutorial has a typo?:. 2. Execute the shape optimization script by entering `$ python shape_optimization.py -f inv_NACA0012_basic.cfg' at the command line. where it should be(?):. 2. Execute the shape optimization script by entering `$ shape_optimization.py -f inv_NACA0012_basic.cfg' at the command line.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/418
https://github.com/su2code/SU2/issues/418:343,Performance,optimiz,optimization,343,"Hello and thanks for doing great work for this software!. I don't know for sure, but it seems the Optimal Shape Design of a Transonic Airfoil tutorial has a typo?:. 2. Execute the shape optimization script by entering `$ python shape_optimization.py -f inv_NACA0012_basic.cfg' at the command line. where it should be(?):. 2. Execute the shape optimization script by entering `$ shape_optimization.py -f inv_NACA0012_basic.cfg' at the command line.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/418
https://github.com/su2code/SU2/pull/419:475,Deployability,release,release,475,"Dear all,; This pull request is to add the gamma_BC variable (the intermittency function of B-C transition model) to the output file for visualization purposes, so that the user can see the laminar and turbulent regions of the flow.; This does not work as is now, and needs to be corrected. Tim is already helping me on this, and I am trying to figure everything out according to his comments. Any additional advice/help is appreciated. Hope this would be ready for the next release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/419
https://github.com/su2code/SU2/pull/419:52,Modifiability,variab,variable,52,"Dear all,; This pull request is to add the gamma_BC variable (the intermittency function of B-C transition model) to the output file for visualization purposes, so that the user can see the laminar and turbulent regions of the flow.; This does not work as is now, and needs to be corrected. Tim is already helping me on this, and I am trying to figure everything out according to his comments. Any additional advice/help is appreciated. Hope this would be ready for the next release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/419
https://github.com/su2code/SU2/pull/420:0,Deployability,Update,Updates,0,"Updates to .travis.yml to get the tests working after the Travis CI move to Ubuntu Trusty. Script is a bit cleaner, but there were also a few important changes to fix problems related to compilers and Python packages.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/420
https://github.com/su2code/SU2/pull/420:34,Testability,test,tests,34,"Updates to .travis.yml to get the tests working after the Travis CI move to Ubuntu Trusty. Script is a bit cleaner, but there were also a few important changes to fix problems related to compilers and Python packages.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/420
https://github.com/su2code/SU2/pull/421:102,Modifiability,variab,variables,102,"The SLSQP Python implementation is a good one. However, it is quite rigid and I have added some extra variables in the config file to control the scaling of the main objective function as well as push factors to work with complex constraints.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/421
https://github.com/su2code/SU2/pull/421:119,Modifiability,config,config,119,"The SLSQP Python implementation is a good one. However, it is quite rigid and I have added some extra variables in the config file to control the scaling of the main objective function as well as push factors to work with complex constraints.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/421
https://github.com/su2code/SU2/pull/422:1330,Availability,down,down,1330,"I noticed there was a lot of duplicate code in the turbulent numerics files (`numerics_structure.hpp` and `numerics_direct_turbulent.cpp`). Since I'm working with new model equations for hybrid RANS/LES, I didn't want to add to the technical debt. So I decided to refactor the turbulence numerics using the [template design pattern](https://sourcemaking.com/design_patterns/template_method). Basically, I moved common behavior for the viscous and the upwinding residuals to respective base classes and then left the specifics of each model to derived classes. I did my best to not change any of the underlying behavior. The source residual calculations for SST and SA have little in common. I did not apply the template design pattern to them. I named the template classes `CUpwSca_Abstract` and `CAvgGrad_Abstract` because the `_Template` suffix was already taken. I also noticed that there were almost no difference between the old `CAvgGrad_` classes and the `CAvgGradCorrected_` classes. The gradient correction is such a small change that it's better to have a single class with a switch than two classes that are about 95% similar. So I added a boolean property and logical switching if correction is to be applied to the gradients. This boolean parameter is now a parameter for the constructor. Overall, these changes trim down a lot of duplicate code (40% of the lines in `numerics_direct_turbulent.cpp`). These changes could be extended to other areas (such as the transition model), but I left that to future pull requests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/422
https://github.com/su2code/SU2/pull/422:264,Modifiability,refactor,refactor,264,"I noticed there was a lot of duplicate code in the turbulent numerics files (`numerics_structure.hpp` and `numerics_direct_turbulent.cpp`). Since I'm working with new model equations for hybrid RANS/LES, I didn't want to add to the technical debt. So I decided to refactor the turbulence numerics using the [template design pattern](https://sourcemaking.com/design_patterns/template_method). Basically, I moved common behavior for the viscous and the upwinding residuals to respective base classes and then left the specifics of each model to derived classes. I did my best to not change any of the underlying behavior. The source residual calculations for SST and SA have little in common. I did not apply the template design pattern to them. I named the template classes `CUpwSca_Abstract` and `CAvgGrad_Abstract` because the `_Template` suffix was already taken. I also noticed that there were almost no difference between the old `CAvgGrad_` classes and the `CAvgGradCorrected_` classes. The gradient correction is such a small change that it's better to have a single class with a switch than two classes that are about 95% similar. So I added a boolean property and logical switching if correction is to be applied to the gradients. This boolean parameter is now a parameter for the constructor. Overall, these changes trim down a lot of duplicate code (40% of the lines in `numerics_direct_turbulent.cpp`). These changes could be extended to other areas (such as the transition model), but I left that to future pull requests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/422
https://github.com/su2code/SU2/pull/422:1437,Modifiability,extend,extended,1437,"I noticed there was a lot of duplicate code in the turbulent numerics files (`numerics_structure.hpp` and `numerics_direct_turbulent.cpp`). Since I'm working with new model equations for hybrid RANS/LES, I didn't want to add to the technical debt. So I decided to refactor the turbulence numerics using the [template design pattern](https://sourcemaking.com/design_patterns/template_method). Basically, I moved common behavior for the viscous and the upwinding residuals to respective base classes and then left the specifics of each model to derived classes. I did my best to not change any of the underlying behavior. The source residual calculations for SST and SA have little in common. I did not apply the template design pattern to them. I named the template classes `CUpwSca_Abstract` and `CAvgGrad_Abstract` because the `_Template` suffix was already taken. I also noticed that there were almost no difference between the old `CAvgGrad_` classes and the `CAvgGradCorrected_` classes. The gradient correction is such a small change that it's better to have a single class with a switch than two classes that are about 95% similar. So I added a boolean property and logical switching if correction is to be applied to the gradients. This boolean parameter is now a parameter for the constructor. Overall, these changes trim down a lot of duplicate code (40% of the lines in `numerics_direct_turbulent.cpp`). These changes could be extended to other areas (such as the transition model), but I left that to future pull requests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/422
https://github.com/su2code/SU2/pull/422:1172,Testability,log,logical,1172,"I noticed there was a lot of duplicate code in the turbulent numerics files (`numerics_structure.hpp` and `numerics_direct_turbulent.cpp`). Since I'm working with new model equations for hybrid RANS/LES, I didn't want to add to the technical debt. So I decided to refactor the turbulence numerics using the [template design pattern](https://sourcemaking.com/design_patterns/template_method). Basically, I moved common behavior for the viscous and the upwinding residuals to respective base classes and then left the specifics of each model to derived classes. I did my best to not change any of the underlying behavior. The source residual calculations for SST and SA have little in common. I did not apply the template design pattern to them. I named the template classes `CUpwSca_Abstract` and `CAvgGrad_Abstract` because the `_Template` suffix was already taken. I also noticed that there were almost no difference between the old `CAvgGrad_` classes and the `CAvgGradCorrected_` classes. The gradient correction is such a small change that it's better to have a single class with a switch than two classes that are about 95% similar. So I added a boolean property and logical switching if correction is to be applied to the gradients. This boolean parameter is now a parameter for the constructor. Overall, these changes trim down a lot of duplicate code (40% of the lines in `numerics_direct_turbulent.cpp`). These changes could be extended to other areas (such as the transition model), but I left that to future pull requests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/422
https://github.com/su2code/SU2/pull/424:91,Testability,Test,TestCase,91,Basically this is just #260 rebased onto the current `develop`. I suspect some changes to `TestCase.py` may have been lost while fixing merge conflicts.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/424
https://github.com/su2code/SU2/pull/426:17,Integrability,depend,depending,17,"I have seen that depending on the developer. SU2 includes (or not) a space between ""if"" and ""("" or ""for"" and ""("", etc. . From the coding style point of view I think it is better to have a common criteria:; ""if ("" ""for ("", "") {"" and ""else {"". I have implemented the previous convention in the software... it is the most popular one in order to differentiate ""if("" or ""for("" from function calls, it also improves the code readability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/426
https://github.com/su2code/SU2/pull/427:75,Testability,test,test,75,"for the incompressible discrete adjoint and python scripts, as well as new test cases for the incomp. primal and discrete adjoint.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/427
https://github.com/su2code/SU2/issues/429:138,Usability,SIMPL,SIMPLE,138,"Dear all,. I recently had a lot of discussions with people that are interested in developing a pressure-based incompressible solver (like SIMPLE etc.) in SU2. I just wanted to get the discussion started. Who is willing to contribute ? What applications do you have in mind ?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/429
https://github.com/su2code/SU2/pull/430:83,Availability,error,error,83,This change will solve some discrepancies in the deformation tests due to rounding error and the high level of convergence of the deformation regression tests.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/430
https://github.com/su2code/SU2/pull/430:61,Testability,test,tests,61,This change will solve some discrepancies in the deformation tests due to rounding error and the high level of convergence of the deformation regression tests.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/430
https://github.com/su2code/SU2/pull/430:153,Testability,test,tests,153,This change will solve some discrepancies in the deformation tests due to rounding error and the high level of convergence of the deformation regression tests.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/430
https://github.com/su2code/SU2/issues/431:386,Availability,error,error,386,"When I run a mixing-layer problem with periodic boundary conditions, I get a segfault while saving the file. I checked out the most recent develop branch, and I get the same problem. It may be that I messed up the periodic boundary conditions. I'm still learning how to use them in SU2, and I may have made a mistake. But even if my *.cfg files are set up wrong, I should get a runtime error message, not a segfault. I did a brief check and it looks like `SU2_MSH` is doing its job in generating the correct periodic BCs. Valgrind says that there's a lot of invalid reads in `COutput::SortOutputData`, which terminate in a segfault. I'm attaching the valgrind output, in case you want to look at it. #### Steps to reproduce; 1. Build SU2 with parallel support.; 1. Put the attached grid, `mixing_MSH.cfg` and `mixing_CFD.cfg` files into the same folder.; 2. Run `SU2_MSH mixing_MSH.cfg`.; 3. Run `SU2_MSH mixing_CFD.cfg`. I've also attached my config output, so you can see what my setup is like. Here's the files: ; [PeriodicSegfault.tar.gz](https://github.com/su2code/SU2/files/1257883/PeriodicSegfault.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/431
https://github.com/su2code/SU2/issues/431:392,Integrability,message,message,392,"When I run a mixing-layer problem with periodic boundary conditions, I get a segfault while saving the file. I checked out the most recent develop branch, and I get the same problem. It may be that I messed up the periodic boundary conditions. I'm still learning how to use them in SU2, and I may have made a mistake. But even if my *.cfg files are set up wrong, I should get a runtime error message, not a segfault. I did a brief check and it looks like `SU2_MSH` is doing its job in generating the correct periodic BCs. Valgrind says that there's a lot of invalid reads in `COutput::SortOutputData`, which terminate in a segfault. I'm attaching the valgrind output, in case you want to look at it. #### Steps to reproduce; 1. Build SU2 with parallel support.; 1. Put the attached grid, `mixing_MSH.cfg` and `mixing_CFD.cfg` files into the same folder.; 2. Run `SU2_MSH mixing_MSH.cfg`.; 3. Run `SU2_MSH mixing_CFD.cfg`. I've also attached my config output, so you can see what my setup is like. Here's the files: ; [PeriodicSegfault.tar.gz](https://github.com/su2code/SU2/files/1257883/PeriodicSegfault.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/431
https://github.com/su2code/SU2/issues/431:944,Modifiability,config,config,944,"When I run a mixing-layer problem with periodic boundary conditions, I get a segfault while saving the file. I checked out the most recent develop branch, and I get the same problem. It may be that I messed up the periodic boundary conditions. I'm still learning how to use them in SU2, and I may have made a mistake. But even if my *.cfg files are set up wrong, I should get a runtime error message, not a segfault. I did a brief check and it looks like `SU2_MSH` is doing its job in generating the correct periodic BCs. Valgrind says that there's a lot of invalid reads in `COutput::SortOutputData`, which terminate in a segfault. I'm attaching the valgrind output, in case you want to look at it. #### Steps to reproduce; 1. Build SU2 with parallel support.; 1. Put the attached grid, `mixing_MSH.cfg` and `mixing_CFD.cfg` files into the same folder.; 2. Run `SU2_MSH mixing_MSH.cfg`.; 3. Run `SU2_MSH mixing_CFD.cfg`. I've also attached my config output, so you can see what my setup is like. Here's the files: ; [PeriodicSegfault.tar.gz](https://github.com/su2code/SU2/files/1257883/PeriodicSegfault.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/431
https://github.com/su2code/SU2/issues/431:254,Usability,learn,learning,254,"When I run a mixing-layer problem with periodic boundary conditions, I get a segfault while saving the file. I checked out the most recent develop branch, and I get the same problem. It may be that I messed up the periodic boundary conditions. I'm still learning how to use them in SU2, and I may have made a mistake. But even if my *.cfg files are set up wrong, I should get a runtime error message, not a segfault. I did a brief check and it looks like `SU2_MSH` is doing its job in generating the correct periodic BCs. Valgrind says that there's a lot of invalid reads in `COutput::SortOutputData`, which terminate in a segfault. I'm attaching the valgrind output, in case you want to look at it. #### Steps to reproduce; 1. Build SU2 with parallel support.; 1. Put the attached grid, `mixing_MSH.cfg` and `mixing_CFD.cfg` files into the same folder.; 2. Run `SU2_MSH mixing_MSH.cfg`.; 3. Run `SU2_MSH mixing_CFD.cfg`. I've also attached my config output, so you can see what my setup is like. Here's the files: ; [PeriodicSegfault.tar.gz](https://github.com/su2code/SU2/files/1257883/PeriodicSegfault.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/431
https://github.com/su2code/SU2/pull/432:102,Usability,clear,clear,102,"In this pull request I have reorganized the existing non-standard output. . Before, it was not really clear how to create a new output and each developer had a different strategy. Now all the special outputs have the same structure and have been implemented in the same part of the software for the direct and adjoint problem: CDriver::Output() for direct analysis and CDiscAdjFluidDriver::SetObjFunction() for the AD. The current ""special"" outputs are . output->SpecialOutput_AnalyzeSurface; output->SpecialOutput_Distortion; output->SpecialOutput_SonicBoom; output->SpecialOutput_SpanLoad; output->SpecialOutput_HarmonicBalance; output->SpecialOutput_Turbo; output->SpecialOutput_ForcesBreakdown. I have also merged the existing ""1D output"" and ""surface analysis"" in a more functional subroutine called output->SpecialOutput_AnalyzeSurface. In short, this is a very important improvement that clarify a lot how to implement a new non-standard output, including its relation with the AD.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/432
https://github.com/su2code/SU2/pull/435:108,Deployability,configurat,configuration,108,"This PR implements the specification of a different wall function treatment per viscous wall marker. In the configuration file you do this as follows, where the default is NO_WALL_FUNCTION. % Viscous wall markers for which wall functions must be applied. (NONE = no marker); % Format: ( marker name, wall function type, ... ); MARKER_WALL_FUNCTIONS= ( airfoil, NO_WALL_FUNCTION ). You can determine the type of wall function treatment for a given marker by calling the function CConfig::GetWallFunction_Treatment. I put a dummy call in CNSSolver::BC_HeatFlux_Wall and CNSSolver::BC_Isothermal_Wall, as an example. It is the intention that the branches feature_Wall_Functions and feature_hom_wallModel merge with this version and work out the actual implementation for the FV solver and DG-FEM solver, respectively.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/435
https://github.com/su2code/SU2/pull/435:108,Modifiability,config,configuration,108,"This PR implements the specification of a different wall function treatment per viscous wall marker. In the configuration file you do this as follows, where the default is NO_WALL_FUNCTION. % Viscous wall markers for which wall functions must be applied. (NONE = no marker); % Format: ( marker name, wall function type, ... ); MARKER_WALL_FUNCTIONS= ( airfoil, NO_WALL_FUNCTION ). You can determine the type of wall function treatment for a given marker by calling the function CConfig::GetWallFunction_Treatment. I put a dummy call in CNSSolver::BC_HeatFlux_Wall and CNSSolver::BC_Isothermal_Wall, as an example. It is the intention that the branches feature_Wall_Functions and feature_hom_wallModel merge with this version and work out the actual implementation for the FV solver and DG-FEM solver, respectively.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/435
https://github.com/su2code/SU2/pull/436:1169,Availability,avail,available,1169,"In keeping with our open-source philosophy, the SU2 webpage should be open and modifiable by all members of the community, just like the rest of the code. This will make it much easier to manage and improve in the long run with distributed effort. As a first step to accomplish this, we are taking advantage of GitHub Pages (https://pages.github.com) in order to host our current SU2 page. A new repository has been created within the SU2 GitHub organization here:. https://github.com/su2code/su2code.github.io. and it contains a copy of the current webpage located at http://su2.stanford.edu with all necessary modifications to links, data, etc. so that it functions correctly and independently. The files on the master branch of that new repository are automatically hosted for us by GitHub here (for free):. https://su2code.github.io. All developers now have access to this repository, and in the future, we can all collaborate together to keep it updated and modernize it. An important note is that GitHub allows for custom domain names to be applied to this website, allowing us to use a "".org"" domain name instead of https://su2code.github.io in the future, once available (https://help.github.com/articles/using-a-custom-domain-with-github-pages/). As for next steps, I would like to use this PR to invite discussion about this. If we are in agreement to approve this PR, then we will add an automatic redirect from http://su2.stanford.edu to https://su2code.github.io and focus solely on the version of the website in the new repo going forward. Please do share any comments or thoughts.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/436
https://github.com/su2code/SU2/pull/436:951,Deployability,update,updated,951,"In keeping with our open-source philosophy, the SU2 webpage should be open and modifiable by all members of the community, just like the rest of the code. This will make it much easier to manage and improve in the long run with distributed effort. As a first step to accomplish this, we are taking advantage of GitHub Pages (https://pages.github.com) in order to host our current SU2 page. A new repository has been created within the SU2 GitHub organization here:. https://github.com/su2code/su2code.github.io. and it contains a copy of the current webpage located at http://su2.stanford.edu with all necessary modifications to links, data, etc. so that it functions correctly and independently. The files on the master branch of that new repository are automatically hosted for us by GitHub here (for free):. https://su2code.github.io. All developers now have access to this repository, and in the future, we can all collaborate together to keep it updated and modernize it. An important note is that GitHub allows for custom domain names to be applied to this website, allowing us to use a "".org"" domain name instead of https://su2code.github.io in the future, once available (https://help.github.com/articles/using-a-custom-domain-with-github-pages/). As for next steps, I would like to use this PR to invite discussion about this. If we are in agreement to approve this PR, then we will add an automatic redirect from http://su2.stanford.edu to https://su2code.github.io and focus solely on the version of the website in the new repo going forward. Please do share any comments or thoughts.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/436
https://github.com/su2code/SU2/pull/436:862,Security,access,access,862,"In keeping with our open-source philosophy, the SU2 webpage should be open and modifiable by all members of the community, just like the rest of the code. This will make it much easier to manage and improve in the long run with distributed effort. As a first step to accomplish this, we are taking advantage of GitHub Pages (https://pages.github.com) in order to host our current SU2 page. A new repository has been created within the SU2 GitHub organization here:. https://github.com/su2code/su2code.github.io. and it contains a copy of the current webpage located at http://su2.stanford.edu with all necessary modifications to links, data, etc. so that it functions correctly and independently. The files on the master branch of that new repository are automatically hosted for us by GitHub here (for free):. https://su2code.github.io. All developers now have access to this repository, and in the future, we can all collaborate together to keep it updated and modernize it. An important note is that GitHub allows for custom domain names to be applied to this website, allowing us to use a "".org"" domain name instead of https://su2code.github.io in the future, once available (https://help.github.com/articles/using-a-custom-domain-with-github-pages/). As for next steps, I would like to use this PR to invite discussion about this. If we are in agreement to approve this PR, then we will add an automatic redirect from http://su2.stanford.edu to https://su2code.github.io and focus solely on the version of the website in the new repo going forward. Please do share any comments or thoughts.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/436
https://github.com/su2code/SU2/issues/437:722,Availability,down,down,722,"There is an issue for time accurate simulations with multi-stage time integration schemes in combination with multiple (fluid) zones. The reason is that the loop over the multiple (usually Runge-Kutta) stages takes place in the function CMultiGridIntegration::MultiGrid_Cycle, while the loop over the zones is carried out in the drivers. Hence the loop over the (Runge-Kutta) stages takes place inside the loop over the multiple zones. This is fundamentally wrong and will lead to at most 1st order accuracy in time. Hence, the sequence of these loops should be reversed. In principle there are two ways to do this, namely moving the loop over the Runge-Kutta stages up in the hierarchy, or moving the loop over the zones down. I think the former option is undesirable, because this means that all the details of the different time integration schemes must be moved to the driver, which does not improve readability (to say the least). Furthermore, it leads to serious problems when more advanced time integration schemes (with time accurate local time stepping) are employed. So therefore, in my opinion, the only practical solution is to move the loop over the zones downwards in the hierarchy. This leads to significant changes in the implementation, but does this lead to a fundamental problem for any of the applications of SU2?. Thanks,. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/437
https://github.com/su2code/SU2/issues/437:1169,Availability,down,downwards,1169,"There is an issue for time accurate simulations with multi-stage time integration schemes in combination with multiple (fluid) zones. The reason is that the loop over the multiple (usually Runge-Kutta) stages takes place in the function CMultiGridIntegration::MultiGrid_Cycle, while the loop over the zones is carried out in the drivers. Hence the loop over the (Runge-Kutta) stages takes place inside the loop over the multiple zones. This is fundamentally wrong and will lead to at most 1st order accuracy in time. Hence, the sequence of these loops should be reversed. In principle there are two ways to do this, namely moving the loop over the Runge-Kutta stages up in the hierarchy, or moving the loop over the zones down. I think the former option is undesirable, because this means that all the details of the different time integration schemes must be moved to the driver, which does not improve readability (to say the least). Furthermore, it leads to serious problems when more advanced time integration schemes (with time accurate local time stepping) are employed. So therefore, in my opinion, the only practical solution is to move the loop over the zones downwards in the hierarchy. This leads to significant changes in the implementation, but does this lead to a fundamental problem for any of the applications of SU2?. Thanks,. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/437
https://github.com/su2code/SU2/issues/437:70,Deployability,integrat,integration,70,"There is an issue for time accurate simulations with multi-stage time integration schemes in combination with multiple (fluid) zones. The reason is that the loop over the multiple (usually Runge-Kutta) stages takes place in the function CMultiGridIntegration::MultiGrid_Cycle, while the loop over the zones is carried out in the drivers. Hence the loop over the (Runge-Kutta) stages takes place inside the loop over the multiple zones. This is fundamentally wrong and will lead to at most 1st order accuracy in time. Hence, the sequence of these loops should be reversed. In principle there are two ways to do this, namely moving the loop over the Runge-Kutta stages up in the hierarchy, or moving the loop over the zones down. I think the former option is undesirable, because this means that all the details of the different time integration schemes must be moved to the driver, which does not improve readability (to say the least). Furthermore, it leads to serious problems when more advanced time integration schemes (with time accurate local time stepping) are employed. So therefore, in my opinion, the only practical solution is to move the loop over the zones downwards in the hierarchy. This leads to significant changes in the implementation, but does this lead to a fundamental problem for any of the applications of SU2?. Thanks,. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/437
https://github.com/su2code/SU2/issues/437:832,Deployability,integrat,integration,832,"There is an issue for time accurate simulations with multi-stage time integration schemes in combination with multiple (fluid) zones. The reason is that the loop over the multiple (usually Runge-Kutta) stages takes place in the function CMultiGridIntegration::MultiGrid_Cycle, while the loop over the zones is carried out in the drivers. Hence the loop over the (Runge-Kutta) stages takes place inside the loop over the multiple zones. This is fundamentally wrong and will lead to at most 1st order accuracy in time. Hence, the sequence of these loops should be reversed. In principle there are two ways to do this, namely moving the loop over the Runge-Kutta stages up in the hierarchy, or moving the loop over the zones down. I think the former option is undesirable, because this means that all the details of the different time integration schemes must be moved to the driver, which does not improve readability (to say the least). Furthermore, it leads to serious problems when more advanced time integration schemes (with time accurate local time stepping) are employed. So therefore, in my opinion, the only practical solution is to move the loop over the zones downwards in the hierarchy. This leads to significant changes in the implementation, but does this lead to a fundamental problem for any of the applications of SU2?. Thanks,. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/437
https://github.com/su2code/SU2/issues/437:1002,Deployability,integrat,integration,1002,"There is an issue for time accurate simulations with multi-stage time integration schemes in combination with multiple (fluid) zones. The reason is that the loop over the multiple (usually Runge-Kutta) stages takes place in the function CMultiGridIntegration::MultiGrid_Cycle, while the loop over the zones is carried out in the drivers. Hence the loop over the (Runge-Kutta) stages takes place inside the loop over the multiple zones. This is fundamentally wrong and will lead to at most 1st order accuracy in time. Hence, the sequence of these loops should be reversed. In principle there are two ways to do this, namely moving the loop over the Runge-Kutta stages up in the hierarchy, or moving the loop over the zones down. I think the former option is undesirable, because this means that all the details of the different time integration schemes must be moved to the driver, which does not improve readability (to say the least). Furthermore, it leads to serious problems when more advanced time integration schemes (with time accurate local time stepping) are employed. So therefore, in my opinion, the only practical solution is to move the loop over the zones downwards in the hierarchy. This leads to significant changes in the implementation, but does this lead to a fundamental problem for any of the applications of SU2?. Thanks,. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/437
https://github.com/su2code/SU2/issues/437:70,Integrability,integrat,integration,70,"There is an issue for time accurate simulations with multi-stage time integration schemes in combination with multiple (fluid) zones. The reason is that the loop over the multiple (usually Runge-Kutta) stages takes place in the function CMultiGridIntegration::MultiGrid_Cycle, while the loop over the zones is carried out in the drivers. Hence the loop over the (Runge-Kutta) stages takes place inside the loop over the multiple zones. This is fundamentally wrong and will lead to at most 1st order accuracy in time. Hence, the sequence of these loops should be reversed. In principle there are two ways to do this, namely moving the loop over the Runge-Kutta stages up in the hierarchy, or moving the loop over the zones down. I think the former option is undesirable, because this means that all the details of the different time integration schemes must be moved to the driver, which does not improve readability (to say the least). Furthermore, it leads to serious problems when more advanced time integration schemes (with time accurate local time stepping) are employed. So therefore, in my opinion, the only practical solution is to move the loop over the zones downwards in the hierarchy. This leads to significant changes in the implementation, but does this lead to a fundamental problem for any of the applications of SU2?. Thanks,. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/437
https://github.com/su2code/SU2/issues/437:832,Integrability,integrat,integration,832,"There is an issue for time accurate simulations with multi-stage time integration schemes in combination with multiple (fluid) zones. The reason is that the loop over the multiple (usually Runge-Kutta) stages takes place in the function CMultiGridIntegration::MultiGrid_Cycle, while the loop over the zones is carried out in the drivers. Hence the loop over the (Runge-Kutta) stages takes place inside the loop over the multiple zones. This is fundamentally wrong and will lead to at most 1st order accuracy in time. Hence, the sequence of these loops should be reversed. In principle there are two ways to do this, namely moving the loop over the Runge-Kutta stages up in the hierarchy, or moving the loop over the zones down. I think the former option is undesirable, because this means that all the details of the different time integration schemes must be moved to the driver, which does not improve readability (to say the least). Furthermore, it leads to serious problems when more advanced time integration schemes (with time accurate local time stepping) are employed. So therefore, in my opinion, the only practical solution is to move the loop over the zones downwards in the hierarchy. This leads to significant changes in the implementation, but does this lead to a fundamental problem for any of the applications of SU2?. Thanks,. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/437
https://github.com/su2code/SU2/issues/437:1002,Integrability,integrat,integration,1002,"There is an issue for time accurate simulations with multi-stage time integration schemes in combination with multiple (fluid) zones. The reason is that the loop over the multiple (usually Runge-Kutta) stages takes place in the function CMultiGridIntegration::MultiGrid_Cycle, while the loop over the zones is carried out in the drivers. Hence the loop over the (Runge-Kutta) stages takes place inside the loop over the multiple zones. This is fundamentally wrong and will lead to at most 1st order accuracy in time. Hence, the sequence of these loops should be reversed. In principle there are two ways to do this, namely moving the loop over the Runge-Kutta stages up in the hierarchy, or moving the loop over the zones down. I think the former option is undesirable, because this means that all the details of the different time integration schemes must be moved to the driver, which does not improve readability (to say the least). Furthermore, it leads to serious problems when more advanced time integration schemes (with time accurate local time stepping) are employed. So therefore, in my opinion, the only practical solution is to move the loop over the zones downwards in the hierarchy. This leads to significant changes in the implementation, but does this lead to a fundamental problem for any of the applications of SU2?. Thanks,. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/437
https://github.com/su2code/SU2/pull/438:688,Deployability,Update,Updated,688,"Collection of improvements in the upwind with limiter methods. - Elimination of the option GetViscous_Limiter_Flow and GetViscous_Limiter_Turb and related subroutines. It is not useful, and it doesn’t make too much sense to me.; - Renaming VAN_ALBADA to VAN_ALBADA_EDGE to distinguish between multidimensional stencils and edge based stencils.; - Adding VENKATAKRISHNAN_WANG limiter in which the Epsilon is computed using flow solution. It is very difficulty to be successful with the original version of the Venkat’s limiter... the calibration is too case dependent.; - Adding NO_LIMITER as a new option.; - Adding AD stuff to the BARTH_JESPERSEN... same code that in VENKATAKRISHNAN; - Updated screen output. Best,; Vivaan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/438
https://github.com/su2code/SU2/pull/438:557,Integrability,depend,dependent,557,"Collection of improvements in the upwind with limiter methods. - Elimination of the option GetViscous_Limiter_Flow and GetViscous_Limiter_Turb and related subroutines. It is not useful, and it doesn’t make too much sense to me.; - Renaming VAN_ALBADA to VAN_ALBADA_EDGE to distinguish between multidimensional stencils and edge based stencils.; - Adding VENKATAKRISHNAN_WANG limiter in which the Epsilon is computed using flow solution. It is very difficulty to be successful with the original version of the Venkat’s limiter... the calibration is too case dependent.; - Adding NO_LIMITER as a new option.; - Adding AD stuff to the BARTH_JESPERSEN... same code that in VENKATAKRISHNAN; - Updated screen output. Best,; Vivaan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/438
https://github.com/su2code/SU2/pull/439:688,Deployability,Update,Updated,688,"Collection of improvements in the upwind with limiter methods. - Elimination of the option GetViscous_Limiter_Flow and GetViscous_Limiter_Turb and related subroutines. It is not useful, and it doesn’t make too much sense to me.; - Renaming VAN_ALBADA to VAN_ALBADA_EDGE to distinguish between multidimensional stencils and edge based stencils.; - Adding VENKATAKRISHNAN_WANG limiter in which the Epsilon is computed using flow solution. It is very difficulty to be successful with the original version of the Venkat’s limiter... the calibration is too case dependent.; - Adding NO_LIMITER as a new option.; - Adding AD stuff to the BARTH_JESPERSEN... same code that in VENKATAKRISHNAN; - Updated screen output. Best,; Vivaan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/439
https://github.com/su2code/SU2/pull/439:557,Integrability,depend,dependent,557,"Collection of improvements in the upwind with limiter methods. - Elimination of the option GetViscous_Limiter_Flow and GetViscous_Limiter_Turb and related subroutines. It is not useful, and it doesn’t make too much sense to me.; - Renaming VAN_ALBADA to VAN_ALBADA_EDGE to distinguish between multidimensional stencils and edge based stencils.; - Adding VENKATAKRISHNAN_WANG limiter in which the Epsilon is computed using flow solution. It is very difficulty to be successful with the original version of the Venkat’s limiter... the calibration is too case dependent.; - Adding NO_LIMITER as a new option.; - Adding AD stuff to the BARTH_JESPERSEN... same code that in VENKATAKRISHNAN; - Updated screen output. Best,; Vivaan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/439
https://github.com/su2code/SU2/pull/440:15,Safety,detect,detection,15,"My compiler is detection tens of warnings, I have fixed most of them. Best,; Vivaan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/440
https://github.com/su2code/SU2/pull/445:184,Testability,test,tested,184,"Harmonic balance source term is preconditioned using matrix presented in Thomas et al. AIAA 2009-4270. This allows stable CFL number to go from near 1.0 up to at least 6.0. I have not tested beyond that. Once merge is successful, I will create a regression test. Jason",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/445
https://github.com/su2code/SU2/pull/445:257,Testability,test,test,257,"Harmonic balance source term is preconditioned using matrix presented in Thomas et al. AIAA 2009-4270. This allows stable CFL number to go from near 1.0 up to at least 6.0. I have not tested beyond that. Once merge is successful, I will create a regression test. Jason",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/445
https://github.com/su2code/SU2/issues/446:1058,Availability,error,error,1058,"Hi. I'm not sure if this is the best place to post this but there appears to be a problem with the way arguments are handled in the preconfigure.py file within Raven. I am trying to install SU2 with AD support and following the install documentation online, I have the following bash command (I'm running Ubuntu 16.04):. `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib -with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. I tested the ordinary 'configure' version of the command first (without AD) and the install seems to work fine, but on trying the above preconfigure.py command, I get the error `configure: error: unrecognized option: '-w=--with-LAPACK-lib'`. Is there some mistake in the string handling of arguments? I've attached a text output an image of error. Please let me know what other information you may need. Regards, Tim. [preconfigure_erro.txt](https://github.com/su2code/SU2/files/1339638/preconfigure_erro.txt). ![preconfigure_error](https://user-images.githubusercontent.com/16842258/30951291-11d2af9a-a45d-11e7-9437-330d33ca2ef1.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/446
https://github.com/su2code/SU2/issues/446:1076,Availability,error,error,1076,"Hi. I'm not sure if this is the best place to post this but there appears to be a problem with the way arguments are handled in the preconfigure.py file within Raven. I am trying to install SU2 with AD support and following the install documentation online, I have the following bash command (I'm running Ubuntu 16.04):. `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib -with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. I tested the ordinary 'configure' version of the command first (without AD) and the install seems to work fine, but on trying the above preconfigure.py command, I get the error `configure: error: unrecognized option: '-w=--with-LAPACK-lib'`. Is there some mistake in the string handling of arguments? I've attached a text output an image of error. Please let me know what other information you may need. Regards, Tim. [preconfigure_erro.txt](https://github.com/su2code/SU2/files/1339638/preconfigure_erro.txt). ![preconfigure_error](https://user-images.githubusercontent.com/16842258/30951291-11d2af9a-a45d-11e7-9437-330d33ca2ef1.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/446
https://github.com/su2code/SU2/issues/446:1228,Availability,error,error,1228,"Hi. I'm not sure if this is the best place to post this but there appears to be a problem with the way arguments are handled in the preconfigure.py file within Raven. I am trying to install SU2 with AD support and following the install documentation online, I have the following bash command (I'm running Ubuntu 16.04):. `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib -with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. I tested the ordinary 'configure' version of the command first (without AD) and the install seems to work fine, but on trying the above preconfigure.py command, I get the error `configure: error: unrecognized option: '-w=--with-LAPACK-lib'`. Is there some mistake in the string handling of arguments? I've attached a text output an image of error. Please let me know what other information you may need. Regards, Tim. [preconfigure_erro.txt](https://github.com/su2code/SU2/files/1339638/preconfigure_erro.txt). ![preconfigure_error](https://user-images.githubusercontent.com/16842258/30951291-11d2af9a-a45d-11e7-9437-330d33ca2ef1.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/446
https://github.com/su2code/SU2/issues/446:182,Deployability,install,install,182,"Hi. I'm not sure if this is the best place to post this but there appears to be a problem with the way arguments are handled in the preconfigure.py file within Raven. I am trying to install SU2 with AD support and following the install documentation online, I have the following bash command (I'm running Ubuntu 16.04):. `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib -with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. I tested the ordinary 'configure' version of the command first (without AD) and the install seems to work fine, but on trying the above preconfigure.py command, I get the error `configure: error: unrecognized option: '-w=--with-LAPACK-lib'`. Is there some mistake in the string handling of arguments? I've attached a text output an image of error. Please let me know what other information you may need. Regards, Tim. [preconfigure_erro.txt](https://github.com/su2code/SU2/files/1339638/preconfigure_erro.txt). ![preconfigure_error](https://user-images.githubusercontent.com/16842258/30951291-11d2af9a-a45d-11e7-9437-330d33ca2ef1.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/446
https://github.com/su2code/SU2/issues/446:228,Deployability,install,install,228,"Hi. I'm not sure if this is the best place to post this but there appears to be a problem with the way arguments are handled in the preconfigure.py file within Raven. I am trying to install SU2 with AD support and following the install documentation online, I have the following bash command (I'm running Ubuntu 16.04):. `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib -with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. I tested the ordinary 'configure' version of the command first (without AD) and the install seems to work fine, but on trying the above preconfigure.py command, I get the error `configure: error: unrecognized option: '-w=--with-LAPACK-lib'`. Is there some mistake in the string handling of arguments? I've attached a text output an image of error. Please let me know what other information you may need. Regards, Tim. [preconfigure_erro.txt](https://github.com/su2code/SU2/files/1339638/preconfigure_erro.txt). ![preconfigure_error](https://user-images.githubusercontent.com/16842258/30951291-11d2af9a-a45d-11e7-9437-330d33ca2ef1.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/446
https://github.com/su2code/SU2/issues/446:971,Deployability,install,install,971,"Hi. I'm not sure if this is the best place to post this but there appears to be a problem with the way arguments are handled in the preconfigure.py file within Raven. I am trying to install SU2 with AD support and following the install documentation online, I have the following bash command (I'm running Ubuntu 16.04):. `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib -with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. I tested the ordinary 'configure' version of the command first (without AD) and the install seems to work fine, but on trying the above preconfigure.py command, I get the error `configure: error: unrecognized option: '-w=--with-LAPACK-lib'`. Is there some mistake in the string handling of arguments? I've attached a text output an image of error. Please let me know what other information you may need. Regards, Tim. [preconfigure_erro.txt](https://github.com/su2code/SU2/files/1339638/preconfigure_erro.txt). ![preconfigure_error](https://user-images.githubusercontent.com/16842258/30951291-11d2af9a-a45d-11e7-9437-330d33ca2ef1.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/446
https://github.com/su2code/SU2/issues/446:910,Modifiability,config,configure,910,"Hi. I'm not sure if this is the best place to post this but there appears to be a problem with the way arguments are handled in the preconfigure.py file within Raven. I am trying to install SU2 with AD support and following the install documentation online, I have the following bash command (I'm running Ubuntu 16.04):. `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib -with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. I tested the ordinary 'configure' version of the command first (without AD) and the install seems to work fine, but on trying the above preconfigure.py command, I get the error `configure: error: unrecognized option: '-w=--with-LAPACK-lib'`. Is there some mistake in the string handling of arguments? I've attached a text output an image of error. Please let me know what other information you may need. Regards, Tim. [preconfigure_erro.txt](https://github.com/su2code/SU2/files/1339638/preconfigure_erro.txt). ![preconfigure_error](https://user-images.githubusercontent.com/16842258/30951291-11d2af9a-a45d-11e7-9437-330d33ca2ef1.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/446
https://github.com/su2code/SU2/issues/446:1065,Modifiability,config,configure,1065,"Hi. I'm not sure if this is the best place to post this but there appears to be a problem with the way arguments are handled in the preconfigure.py file within Raven. I am trying to install SU2 with AD support and following the install documentation online, I have the following bash command (I'm running Ubuntu 16.04):. `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib -with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. I tested the ordinary 'configure' version of the command first (without AD) and the install seems to work fine, but on trying the above preconfigure.py command, I get the error `configure: error: unrecognized option: '-w=--with-LAPACK-lib'`. Is there some mistake in the string handling of arguments? I've attached a text output an image of error. Please let me know what other information you may need. Regards, Tim. [preconfigure_erro.txt](https://github.com/su2code/SU2/files/1339638/preconfigure_erro.txt). ![preconfigure_error](https://user-images.githubusercontent.com/16842258/30951291-11d2af9a-a45d-11e7-9437-330d33ca2ef1.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/446
https://github.com/su2code/SU2/issues/446:889,Testability,test,tested,889,"Hi. I'm not sure if this is the best place to post this but there appears to be a problem with the way arguments are handled in the preconfigure.py file within Raven. I am trying to install SU2 with AD support and following the install documentation online, I have the following bash command (I'm running Ubuntu 16.04):. `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib -with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. I tested the ordinary 'configure' version of the command first (without AD) and the install seems to work fine, but on trying the above preconfigure.py command, I get the error `configure: error: unrecognized option: '-w=--with-LAPACK-lib'`. Is there some mistake in the string handling of arguments? I've attached a text output an image of error. Please let me know what other information you may need. Regards, Tim. [preconfigure_erro.txt](https://github.com/su2code/SU2/files/1339638/preconfigure_erro.txt). ![preconfigure_error](https://user-images.githubusercontent.com/16842258/30951291-11d2af9a-a45d-11e7-9437-330d33ca2ef1.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/446
https://github.com/su2code/SU2/issues/447:18,Deployability,install,install,18,"Hi, I'm trying to install SU2 5.0.0 Raven on my Ubuntu with AD support. Following the documentation, I ran preconfigure.py with the following options:; `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib --with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. This appears to complete successfully. I then do a `make install` but the install fails when in the /SU2_AD/SU2_PY/pySU2 directory with `make[3]: *** No rule to make target '/opt/SU2/SU2v5.0.0_src/SU2_AD/SU2_CFD/obj/libSU2Core.a', needed by 'SU2_APIPYTHON_wrap.cxx'. Stop.`. I've attached the whole output in the following text file. Am I missing something in my setup?; [make_install_error.txt](https://github.com/su2code/SU2/files/1339819/make_install_error.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/447
https://github.com/su2code/SU2/issues/447:776,Deployability,install,install,776,"Hi, I'm trying to install SU2 5.0.0 Raven on my Ubuntu with AD support. Following the documentation, I ran preconfigure.py with the following options:; `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib --with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. This appears to complete successfully. I then do a `make install` but the install fails when in the /SU2_AD/SU2_PY/pySU2 directory with `make[3]: *** No rule to make target '/opt/SU2/SU2v5.0.0_src/SU2_AD/SU2_CFD/obj/libSU2Core.a', needed by 'SU2_APIPYTHON_wrap.cxx'. Stop.`. I've attached the whole output in the following text file. Am I missing something in my setup?; [make_install_error.txt](https://github.com/su2code/SU2/files/1339819/make_install_error.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/447
https://github.com/su2code/SU2/issues/447:793,Deployability,install,install,793,"Hi, I'm trying to install SU2 5.0.0 Raven on my Ubuntu with AD support. Following the documentation, I ran preconfigure.py with the following options:; `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib --with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. This appears to complete successfully. I then do a `make install` but the install fails when in the /SU2_AD/SU2_PY/pySU2 directory with `make[3]: *** No rule to make target '/opt/SU2/SU2v5.0.0_src/SU2_AD/SU2_CFD/obj/libSU2Core.a', needed by 'SU2_APIPYTHON_wrap.cxx'. Stop.`. I've attached the whole output in the following text file. Am I missing something in my setup?; [make_install_error.txt](https://github.com/su2code/SU2/files/1339819/make_install_error.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/447
https://github.com/su2code/SU2/issues/449:126,Availability,error,error,126,"Hello,. I detected a bug trying to launch the routine fsi_computation.py. As it is, the code doesn't work and crashes with an error saying that in FSIInterface.py the function call (setSolidInterfaceLoads):. **SolidSolver.applyload(iVertex, Fx, Fy, Fz, time)**. only requires 5 input arguments (not 6). A deeper investigation showed that in PitchPlungeAirfoilStructuralTester.py the function is so defined:. **def applyload(self, iPoint, fx, fy, fz):**. so, no _time_ variable allowed or requested. After applying this correction the code works. . Hope this can be of any help. Best,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/449
https://github.com/su2code/SU2/issues/449:46,Integrability,rout,routine,46,"Hello,. I detected a bug trying to launch the routine fsi_computation.py. As it is, the code doesn't work and crashes with an error saying that in FSIInterface.py the function call (setSolidInterfaceLoads):. **SolidSolver.applyload(iVertex, Fx, Fy, Fz, time)**. only requires 5 input arguments (not 6). A deeper investigation showed that in PitchPlungeAirfoilStructuralTester.py the function is so defined:. **def applyload(self, iPoint, fx, fy, fz):**. so, no _time_ variable allowed or requested. After applying this correction the code works. . Hope this can be of any help. Best,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/449
https://github.com/su2code/SU2/issues/449:468,Modifiability,variab,variable,468,"Hello,. I detected a bug trying to launch the routine fsi_computation.py. As it is, the code doesn't work and crashes with an error saying that in FSIInterface.py the function call (setSolidInterfaceLoads):. **SolidSolver.applyload(iVertex, Fx, Fy, Fz, time)**. only requires 5 input arguments (not 6). A deeper investigation showed that in PitchPlungeAirfoilStructuralTester.py the function is so defined:. **def applyload(self, iPoint, fx, fy, fz):**. so, no _time_ variable allowed or requested. After applying this correction the code works. . Hope this can be of any help. Best,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/449
https://github.com/su2code/SU2/issues/449:10,Safety,detect,detected,10,"Hello,. I detected a bug trying to launch the routine fsi_computation.py. As it is, the code doesn't work and crashes with an error saying that in FSIInterface.py the function call (setSolidInterfaceLoads):. **SolidSolver.applyload(iVertex, Fx, Fy, Fz, time)**. only requires 5 input arguments (not 6). A deeper investigation showed that in PitchPlungeAirfoilStructuralTester.py the function is so defined:. **def applyload(self, iPoint, fx, fy, fz):**. so, no _time_ variable allowed or requested. After applying this correction the code works. . Hope this can be of any help. Best,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/449
https://github.com/su2code/SU2/pull/451:799,Energy Efficiency,sensor,sensor,799,"The objective of this pull request is to clarify the name of some parameters. I found that:; 1. LIMITER_COEFF was confusing because: A) it is a parameters linked only to the Venkat's limiter B) Venkat's original and Wang's version use the same parameter but with different value! (0.5 vs. 0.05); 2. I found AD_COEFF_FLOW very confusing too: A) You can think that AD stands for Automatic Differentiation B) AD is too convoluted... it is just JST!; 3. REF_ELEM_LENGTH is mainly linked to Venkat's limiter... and a constant value is recommended (0.1 or 5.0 depending on the units). In the method REF_ELEM_LENGTH is multiplied by LIMITER_COEFF... so why two parameters to define a single constant (EPS)?... too many options for the user... The current config file to define the limiters or the pressure sensor is as follow:. % ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting, values approaching zero cause; % lower-order approximation to the solution (0.05 by default); VENKAT_LIMITER_COEFF= 0.05; %; % 1st, 2nd and 4th order artificial dissipation coefficients for; % the JST ( 0.15, 0.5, 0.02 by default ); JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ); %; % Coefficient for the adjoint sharp edges limiter (3.0 by default).; ADJ_SHARP_LIMITER_COEFF= 3.0; %; % 1st, 2nd, and 4th order artificial dissipation coefficients for; % the adjoint JST method ( 0.15, 0.5, 0.02 by default ); ADJ_JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ). This config file is much more clear for people that are not familiar with SU2. Best,; Jonathan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/451
https://github.com/su2code/SU2/pull/451:865,Energy Efficiency,SENSOR,SENSOR,865,"The objective of this pull request is to clarify the name of some parameters. I found that:; 1. LIMITER_COEFF was confusing because: A) it is a parameters linked only to the Venkat's limiter B) Venkat's original and Wang's version use the same parameter but with different value! (0.5 vs. 0.05); 2. I found AD_COEFF_FLOW very confusing too: A) You can think that AD stands for Automatic Differentiation B) AD is too convoluted... it is just JST!; 3. REF_ELEM_LENGTH is mainly linked to Venkat's limiter... and a constant value is recommended (0.1 or 5.0 depending on the units). In the method REF_ELEM_LENGTH is multiplied by LIMITER_COEFF... so why two parameters to define a single constant (EPS)?... too many options for the user... The current config file to define the limiters or the pressure sensor is as follow:. % ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting, values approaching zero cause; % lower-order approximation to the solution (0.05 by default); VENKAT_LIMITER_COEFF= 0.05; %; % 1st, 2nd and 4th order artificial dissipation coefficients for; % the JST ( 0.15, 0.5, 0.02 by default ); JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ); %; % Coefficient for the adjoint sharp edges limiter (3.0 by default).; ADJ_SHARP_LIMITER_COEFF= 3.0; %; % 1st, 2nd, and 4th order artificial dissipation coefficients for; % the adjoint JST method ( 0.15, 0.5, 0.02 by default ); ADJ_JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ). This config file is much more clear for people that are not familiar with SU2. Best,; Jonathan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/451
https://github.com/su2code/SU2/pull/451:554,Integrability,depend,depending,554,"The objective of this pull request is to clarify the name of some parameters. I found that:; 1. LIMITER_COEFF was confusing because: A) it is a parameters linked only to the Venkat's limiter B) Venkat's original and Wang's version use the same parameter but with different value! (0.5 vs. 0.05); 2. I found AD_COEFF_FLOW very confusing too: A) You can think that AD stands for Automatic Differentiation B) AD is too convoluted... it is just JST!; 3. REF_ELEM_LENGTH is mainly linked to Venkat's limiter... and a constant value is recommended (0.1 or 5.0 depending on the units). In the method REF_ELEM_LENGTH is multiplied by LIMITER_COEFF... so why two parameters to define a single constant (EPS)?... too many options for the user... The current config file to define the limiters or the pressure sensor is as follow:. % ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting, values approaching zero cause; % lower-order approximation to the solution (0.05 by default); VENKAT_LIMITER_COEFF= 0.05; %; % 1st, 2nd and 4th order artificial dissipation coefficients for; % the JST ( 0.15, 0.5, 0.02 by default ); JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ); %; % Coefficient for the adjoint sharp edges limiter (3.0 by default).; ADJ_SHARP_LIMITER_COEFF= 3.0; %; % 1st, 2nd, and 4th order artificial dissipation coefficients for; % the adjoint JST method ( 0.15, 0.5, 0.02 by default ); ADJ_JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ). This config file is much more clear for people that are not familiar with SU2. Best,; Jonathan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/451
https://github.com/su2code/SU2/pull/451:748,Modifiability,config,config,748,"The objective of this pull request is to clarify the name of some parameters. I found that:; 1. LIMITER_COEFF was confusing because: A) it is a parameters linked only to the Venkat's limiter B) Venkat's original and Wang's version use the same parameter but with different value! (0.5 vs. 0.05); 2. I found AD_COEFF_FLOW very confusing too: A) You can think that AD stands for Automatic Differentiation B) AD is too convoluted... it is just JST!; 3. REF_ELEM_LENGTH is mainly linked to Venkat's limiter... and a constant value is recommended (0.1 or 5.0 depending on the units). In the method REF_ELEM_LENGTH is multiplied by LIMITER_COEFF... so why two parameters to define a single constant (EPS)?... too many options for the user... The current config file to define the limiters or the pressure sensor is as follow:. % ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting, values approaching zero cause; % lower-order approximation to the solution (0.05 by default); VENKAT_LIMITER_COEFF= 0.05; %; % 1st, 2nd and 4th order artificial dissipation coefficients for; % the JST ( 0.15, 0.5, 0.02 by default ); JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ); %; % Coefficient for the adjoint sharp edges limiter (3.0 by default).; ADJ_SHARP_LIMITER_COEFF= 3.0; %; % 1st, 2nd, and 4th order artificial dissipation coefficients for; % the adjoint JST method ( 0.15, 0.5, 0.02 by default ); ADJ_JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ). This config file is much more clear for people that are not familiar with SU2. Best,; Jonathan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/451
https://github.com/su2code/SU2/pull/451:1563,Modifiability,config,config,1563,"The objective of this pull request is to clarify the name of some parameters. I found that:; 1. LIMITER_COEFF was confusing because: A) it is a parameters linked only to the Venkat's limiter B) Venkat's original and Wang's version use the same parameter but with different value! (0.5 vs. 0.05); 2. I found AD_COEFF_FLOW very confusing too: A) You can think that AD stands for Automatic Differentiation B) AD is too convoluted... it is just JST!; 3. REF_ELEM_LENGTH is mainly linked to Venkat's limiter... and a constant value is recommended (0.1 or 5.0 depending on the units). In the method REF_ELEM_LENGTH is multiplied by LIMITER_COEFF... so why two parameters to define a single constant (EPS)?... too many options for the user... The current config file to define the limiters or the pressure sensor is as follow:. % ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting, values approaching zero cause; % lower-order approximation to the solution (0.05 by default); VENKAT_LIMITER_COEFF= 0.05; %; % 1st, 2nd and 4th order artificial dissipation coefficients for; % the JST ( 0.15, 0.5, 0.02 by default ); JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ); %; % Coefficient for the adjoint sharp edges limiter (3.0 by default).; ADJ_SHARP_LIMITER_COEFF= 3.0; %; % 1st, 2nd, and 4th order artificial dissipation coefficients for; % the adjoint JST method ( 0.15, 0.5, 0.02 by default ); ADJ_JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ). This config file is much more clear for people that are not familiar with SU2. Best,; Jonathan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/451
https://github.com/su2code/SU2/pull/451:1588,Usability,clear,clear,1588,"The objective of this pull request is to clarify the name of some parameters. I found that:; 1. LIMITER_COEFF was confusing because: A) it is a parameters linked only to the Venkat's limiter B) Venkat's original and Wang's version use the same parameter but with different value! (0.5 vs. 0.05); 2. I found AD_COEFF_FLOW very confusing too: A) You can think that AD stands for Automatic Differentiation B) AD is too convoluted... it is just JST!; 3. REF_ELEM_LENGTH is mainly linked to Venkat's limiter... and a constant value is recommended (0.1 or 5.0 depending on the units). In the method REF_ELEM_LENGTH is multiplied by LIMITER_COEFF... so why two parameters to define a single constant (EPS)?... too many options for the user... The current config file to define the limiters or the pressure sensor is as follow:. % ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting, values approaching zero cause; % lower-order approximation to the solution (0.05 by default); VENKAT_LIMITER_COEFF= 0.05; %; % 1st, 2nd and 4th order artificial dissipation coefficients for; % the JST ( 0.15, 0.5, 0.02 by default ); JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ); %; % Coefficient for the adjoint sharp edges limiter (3.0 by default).; ADJ_SHARP_LIMITER_COEFF= 3.0; %; % 1st, 2nd, and 4th order artificial dissipation coefficients for; % the adjoint JST method ( 0.15, 0.5, 0.02 by default ); ADJ_JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ). This config file is much more clear for people that are not familiar with SU2. Best,; Jonathan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/451
https://github.com/su2code/SU2/pull/452:955,Testability,test,tests,955,"Dear all,. this pull request adds to SU2 the capabilities required to compute fully-coupled adjoint sensitivities in FSI problems, as described in the following paper: . Sanchez _et al._ (2017), Coupled Adjoint-Based Sensitivities in Large-Displacement Fluid-Structure Interaction using Algorithmic Differentiation, _Int. J. Numer. Meth. Engng._, https://doi.org/10.1002/nme.5700. Additionally, it incorporates new features such as an element-based description of structural properties, new material models, or electromechanical actuation. . Although this pull request involves a large number of commits, I have been working hard over the last weeks to minimize the impact on the contributions of others. Moreover, most of the changes only involve the structural of coupled FSI solvers, and new driver/iteration structures have been incorporated to maximize code flexibility. . Additional features, improvements to the input/output definition, regression tests, and documentation and tutorials will be coming soon, once the merge is successful. Kind regards,. Ruben Sanchez",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/452
https://github.com/su2code/SU2/issues/454:237,Modifiability,config,config,237,"I am trying to run an axi-symmetric case with a time stepping scheme (basically SOD's problem), which fails in CSourceAxisymmetric_Flow::ComputeResidual. The reason is that the boolean implicit is determined as follows. bool implicit = (config->GetKind_TimeIntScheme_Turb() == EULER_IMPLICIT). However, this must be config->GetKind_TimeIntScheme_Flow, right?. Furthermore, the small y-coordinate case will also fail, because there is no test whether an implicit computation takes place. I can correct this, if somebody can confirm this is indeed a bug. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/454
https://github.com/su2code/SU2/issues/454:316,Modifiability,config,config,316,"I am trying to run an axi-symmetric case with a time stepping scheme (basically SOD's problem), which fails in CSourceAxisymmetric_Flow::ComputeResidual. The reason is that the boolean implicit is determined as follows. bool implicit = (config->GetKind_TimeIntScheme_Turb() == EULER_IMPLICIT). However, this must be config->GetKind_TimeIntScheme_Flow, right?. Furthermore, the small y-coordinate case will also fail, because there is no test whether an implicit computation takes place. I can correct this, if somebody can confirm this is indeed a bug. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/454
https://github.com/su2code/SU2/issues/454:437,Testability,test,test,437,"I am trying to run an axi-symmetric case with a time stepping scheme (basically SOD's problem), which fails in CSourceAxisymmetric_Flow::ComputeResidual. The reason is that the boolean implicit is determined as follows. bool implicit = (config->GetKind_TimeIntScheme_Turb() == EULER_IMPLICIT). However, this must be config->GetKind_TimeIntScheme_Flow, right?. Furthermore, the small y-coordinate case will also fail, because there is no test whether an implicit computation takes place. I can correct this, if somebody can confirm this is indeed a bug. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/454
https://github.com/su2code/SU2/pull/455:30,Energy Efficiency,reduce,reduce,30,Collection of improvements to reduce the computational cost of the cte. CL mode.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/455
https://github.com/su2code/SU2/pull/456:100,Deployability,integrat,integration,100,This PR makes sure that the implicit decision in the axi-symmetric source term is based on the time integration of the flow and not of the turbulence.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/456
https://github.com/su2code/SU2/pull/456:100,Integrability,integrat,integration,100,This PR makes sure that the implicit decision in the axi-symmetric source term is based on the time integration of the flow and not of the turbulence.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/456
https://github.com/su2code/SU2/issues/457:128,Integrability,rout,routine,128,"Hello,. I'm pretty new to python and, in general, to the logic of parallel computation. ; I'm trying to run in **parallel** the routine fsi_computation.py. Even if (as much as I noticed) the parallel computation feature is already built in the structure of the code I'm not able to do it. Moreover, I find the structure of the routine sensitively different than the one of parallel_computation.py in which, for example, I can actually choose the number of processor I can use for the run. Dose anybody know if the feature is actually implemented in fsi_computation.py and, in case, how to set it?. Thanks!. NB: I'm currently using the version of the code provided in the branch **feature_pyWrapper** which, as it was already told me, is the up-to-date version for the the python tools.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/457
https://github.com/su2code/SU2/issues/457:327,Integrability,rout,routine,327,"Hello,. I'm pretty new to python and, in general, to the logic of parallel computation. ; I'm trying to run in **parallel** the routine fsi_computation.py. Even if (as much as I noticed) the parallel computation feature is already built in the structure of the code I'm not able to do it. Moreover, I find the structure of the routine sensitively different than the one of parallel_computation.py in which, for example, I can actually choose the number of processor I can use for the run. Dose anybody know if the feature is actually implemented in fsi_computation.py and, in case, how to set it?. Thanks!. NB: I'm currently using the version of the code provided in the branch **feature_pyWrapper** which, as it was already told me, is the up-to-date version for the the python tools.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/457
https://github.com/su2code/SU2/issues/457:57,Testability,log,logic,57,"Hello,. I'm pretty new to python and, in general, to the logic of parallel computation. ; I'm trying to run in **parallel** the routine fsi_computation.py. Even if (as much as I noticed) the parallel computation feature is already built in the structure of the code I'm not able to do it. Moreover, I find the structure of the routine sensitively different than the one of parallel_computation.py in which, for example, I can actually choose the number of processor I can use for the run. Dose anybody know if the feature is actually implemented in fsi_computation.py and, in case, how to set it?. Thanks!. NB: I'm currently using the version of the code provided in the branch **feature_pyWrapper** which, as it was already told me, is the up-to-date version for the the python tools.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/457
https://github.com/su2code/SU2/issues/459:560,Availability,down,downstream,560,"All: I have temporarily disabled the regressions for the TestCases repository (the main SU2 repository regressions are still active). The time limit for that repository is only 50 min., as opposed to the 70 min. that we received for the SU2 repo by special request, so it fails essentially every time due to exceeding the limit. Rather than maintain a separate repository in Travis CI for the TestCases repo, I propose that we implement a way to trigger the main repository regression tests with a change to the TestCases repo. This type of dependent build of downstream repos seems possible by using something like the following:. https://github.com/mernst/plume-lib/blob/master/bin/trigger-travis.sh. What do folks think? Anyone interested in helping with this?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/459
https://github.com/su2code/SU2/issues/459:541,Integrability,depend,dependent,541,"All: I have temporarily disabled the regressions for the TestCases repository (the main SU2 repository regressions are still active). The time limit for that repository is only 50 min., as opposed to the 70 min. that we received for the SU2 repo by special request, so it fails essentially every time due to exceeding the limit. Rather than maintain a separate repository in Travis CI for the TestCases repo, I propose that we implement a way to trigger the main repository regression tests with a change to the TestCases repo. This type of dependent build of downstream repos seems possible by using something like the following:. https://github.com/mernst/plume-lib/blob/master/bin/trigger-travis.sh. What do folks think? Anyone interested in helping with this?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/459
https://github.com/su2code/SU2/issues/459:57,Testability,Test,TestCases,57,"All: I have temporarily disabled the regressions for the TestCases repository (the main SU2 repository regressions are still active). The time limit for that repository is only 50 min., as opposed to the 70 min. that we received for the SU2 repo by special request, so it fails essentially every time due to exceeding the limit. Rather than maintain a separate repository in Travis CI for the TestCases repo, I propose that we implement a way to trigger the main repository regression tests with a change to the TestCases repo. This type of dependent build of downstream repos seems possible by using something like the following:. https://github.com/mernst/plume-lib/blob/master/bin/trigger-travis.sh. What do folks think? Anyone interested in helping with this?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/459
https://github.com/su2code/SU2/issues/459:393,Testability,Test,TestCases,393,"All: I have temporarily disabled the regressions for the TestCases repository (the main SU2 repository regressions are still active). The time limit for that repository is only 50 min., as opposed to the 70 min. that we received for the SU2 repo by special request, so it fails essentially every time due to exceeding the limit. Rather than maintain a separate repository in Travis CI for the TestCases repo, I propose that we implement a way to trigger the main repository regression tests with a change to the TestCases repo. This type of dependent build of downstream repos seems possible by using something like the following:. https://github.com/mernst/plume-lib/blob/master/bin/trigger-travis.sh. What do folks think? Anyone interested in helping with this?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/459
https://github.com/su2code/SU2/issues/459:485,Testability,test,tests,485,"All: I have temporarily disabled the regressions for the TestCases repository (the main SU2 repository regressions are still active). The time limit for that repository is only 50 min., as opposed to the 70 min. that we received for the SU2 repo by special request, so it fails essentially every time due to exceeding the limit. Rather than maintain a separate repository in Travis CI for the TestCases repo, I propose that we implement a way to trigger the main repository regression tests with a change to the TestCases repo. This type of dependent build of downstream repos seems possible by using something like the following:. https://github.com/mernst/plume-lib/blob/master/bin/trigger-travis.sh. What do folks think? Anyone interested in helping with this?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/459
https://github.com/su2code/SU2/issues/459:512,Testability,Test,TestCases,512,"All: I have temporarily disabled the regressions for the TestCases repository (the main SU2 repository regressions are still active). The time limit for that repository is only 50 min., as opposed to the 70 min. that we received for the SU2 repo by special request, so it fails essentially every time due to exceeding the limit. Rather than maintain a separate repository in Travis CI for the TestCases repo, I propose that we implement a way to trigger the main repository regression tests with a change to the TestCases repo. This type of dependent build of downstream repos seems possible by using something like the following:. https://github.com/mernst/plume-lib/blob/master/bin/trigger-travis.sh. What do folks think? Anyone interested in helping with this?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/459
https://github.com/su2code/SU2/issues/462:27,Energy Efficiency,power,power,27,"This will provide a lot of power and flexibility. For example, if doing local development, only the tests that failed last could be run with `pytest --lf`. To make the tests compatible, they can be wrapped into functions with a `test_` prefix, then called from the command line with, e.g.,. pytest TestCases/serial_regression_AD.py. To select and run only one test:. pytest TestCases/serial_regression_AD.py::test_discadj_multi_py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/462
https://github.com/su2code/SU2/issues/462:198,Integrability,wrap,wrapped,198,"This will provide a lot of power and flexibility. For example, if doing local development, only the tests that failed last could be run with `pytest --lf`. To make the tests compatible, they can be wrapped into functions with a `test_` prefix, then called from the command line with, e.g.,. pytest TestCases/serial_regression_AD.py. To select and run only one test:. pytest TestCases/serial_regression_AD.py::test_discadj_multi_py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/462
https://github.com/su2code/SU2/issues/462:100,Testability,test,tests,100,"This will provide a lot of power and flexibility. For example, if doing local development, only the tests that failed last could be run with `pytest --lf`. To make the tests compatible, they can be wrapped into functions with a `test_` prefix, then called from the command line with, e.g.,. pytest TestCases/serial_regression_AD.py. To select and run only one test:. pytest TestCases/serial_regression_AD.py::test_discadj_multi_py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/462
https://github.com/su2code/SU2/issues/462:168,Testability,test,tests,168,"This will provide a lot of power and flexibility. For example, if doing local development, only the tests that failed last could be run with `pytest --lf`. To make the tests compatible, they can be wrapped into functions with a `test_` prefix, then called from the command line with, e.g.,. pytest TestCases/serial_regression_AD.py. To select and run only one test:. pytest TestCases/serial_regression_AD.py::test_discadj_multi_py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/462
https://github.com/su2code/SU2/issues/462:298,Testability,Test,TestCases,298,"This will provide a lot of power and flexibility. For example, if doing local development, only the tests that failed last could be run with `pytest --lf`. To make the tests compatible, they can be wrapped into functions with a `test_` prefix, then called from the command line with, e.g.,. pytest TestCases/serial_regression_AD.py. To select and run only one test:. pytest TestCases/serial_regression_AD.py::test_discadj_multi_py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/462
https://github.com/su2code/SU2/issues/462:360,Testability,test,test,360,"This will provide a lot of power and flexibility. For example, if doing local development, only the tests that failed last could be run with `pytest --lf`. To make the tests compatible, they can be wrapped into functions with a `test_` prefix, then called from the command line with, e.g.,. pytest TestCases/serial_regression_AD.py. To select and run only one test:. pytest TestCases/serial_regression_AD.py::test_discadj_multi_py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/462
https://github.com/su2code/SU2/issues/462:374,Testability,Test,TestCases,374,"This will provide a lot of power and flexibility. For example, if doing local development, only the tests that failed last could be run with `pytest --lf`. To make the tests compatible, they can be wrapped into functions with a `test_` prefix, then called from the command line with, e.g.,. pytest TestCases/serial_regression_AD.py. To select and run only one test:. pytest TestCases/serial_regression_AD.py::test_discadj_multi_py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/462
https://github.com/su2code/SU2/issues/463:20,Deployability,install,install,20,"Having to run `make install` and put `SU2_PY` on the path manually is sort of a pain and misses out on some of the convenient features of `setuptools`, e.g., installing with `pip` in editable mode with the `-e` flag, to allow development work to be done without the install step.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/463
https://github.com/su2code/SU2/issues/463:158,Deployability,install,installing,158,"Having to run `make install` and put `SU2_PY` on the path manually is sort of a pain and misses out on some of the convenient features of `setuptools`, e.g., installing with `pip` in editable mode with the `-e` flag, to allow development work to be done without the install step.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/463
https://github.com/su2code/SU2/issues/463:266,Deployability,install,install,266,"Having to run `make install` and put `SU2_PY` on the path manually is sort of a pain and misses out on some of the convenient features of `setuptools`, e.g., installing with `pip` in editable mode with the `-e` flag, to allow development work to be done without the install step.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/463
https://github.com/su2code/SU2/issues/465:145,Deployability,configurat,configuration,145,"I'm a junior student and a new CFDer.; I'v been testing upwind scheme in QuickStart and found that CUSP scheme diverged. Below is some important configuration information; Firstly I just changed convective scheme of ""inv_NACA0012.cfg"" in QuickStart to CUSP and SU2 diverged directly. Configuration information lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:284,Deployability,Configurat,Configuration,284,"I'm a junior student and a new CFDer.; I'v been testing upwind scheme in QuickStart and found that CUSP scheme diverged. Below is some important configuration information; Firstly I just changed convective scheme of ""inv_NACA0012.cfg"" in QuickStart to CUSP and SU2 diverged directly. Configuration information lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:1295,Deployability,integrat,integration,1295,"ion lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(T",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:2310,Deployability,configurat,configuration,2310,"1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(The configuration file doesn't show it); (still CFL = 1.0; Same multigrid configuration); SU2 converged quickly.; ![cusp3levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32143902-c058ebdc-bceb-11e7-9b55-32ca093fd729.png); What's more, the result is also acceptable. Based on above results, I set no multigrid working.; SU2 still oscillating when CFL number is 4.0 (Both VENKATAKRISHNAN and BARTH_JESPERSEN limiter); BARTH_JESPERSEN ; ![cusp0levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:2380,Deployability,configurat,configuration,2380,"; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(The configuration file doesn't show it); (still CFL = 1.0; Same multigrid configuration); SU2 converged quickly.; ![cusp3levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32143902-c058ebdc-bceb-11e7-9b55-32ca093fd729.png); What's more, the result is also acceptable. Based on above results, I set no multigrid working.; SU2 still oscillating when CFL number is 4.0 (Both VENKATAKRISHNAN and BARTH_JESPERSEN limiter); BARTH_JESPERSEN ; ![cusp0levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_me",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:4689,Deployability,configurat,configuration,4689,"/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_mean.cpp , I've read compute_residual of CUSP and found something doubtly.; ; At line 643 . > for (iDim = 0; iDim < nDim; iDim++) {; Velocity_i[iDim] = V_i[iDim+1];; Velocity_j[iDim] = V_j[iDim+1];; sq_vel_i += 0.5*Velocity_i[iDim]*Velocity_i[iDim];; sq_vel_j += 0.5*Velocity_j[iDim]*Velocity_j[iDim];; }; ; SoundSpeed_i = sqrt(Gamma*Gamma_Minus_One*(Energy_i-0.5*sq_vel_i));; SoundSpeed_j = sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j));. Here I assume is computing Roe-Sound-Speed, but sq_vel_j's coefficient is not 1/4 but 1/2.; >sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j)). And I don't know whether it's suitable to mix original CUSP and simplified CUSP.; Here, in computing dissipation parameters, SU2 used a simplified Lamda. > LamdaNeg = ProjVelocity - MeanSoundSpeed;; LamdaPos = ProjVelocity + MeanSoundSpeed;. I've read paper and there are two kind of computing-dissipation-parameter method, SU2 seems mixed them. Whether it's legal?. At line 729 ; > if ((Beta > 0.0) && ((0.0 < Mach) && (Mach < 1.0))) Nu_c = - (1.0-Beta)*LamdaNeg;. In Computational Fluid Dynamics (Computational Fluid Dynamics: Principles and Applications (Third Edition)[J]. Computational Fluid Dynamics Principles & Applications, 2015:ix.); Nu_c seems to be - (1.0+Beta)*LamdaNeg. And I want to know which configuration is suit for this condition, thanks~. That's all my confusion. I don't know where I've done wrong and where I've misunderstood. ：）",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:1295,Integrability,integrat,integration,1295,"ion lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(T",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:145,Modifiability,config,configuration,145,"I'm a junior student and a new CFDer.; I'v been testing upwind scheme in QuickStart and found that CUSP scheme diverged. Below is some important configuration information; Firstly I just changed convective scheme of ""inv_NACA0012.cfg"" in QuickStart to CUSP and SU2 diverged directly. Configuration information lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:284,Modifiability,Config,Configuration,284,"I'm a junior student and a new CFDer.; I'v been testing upwind scheme in QuickStart and found that CUSP scheme diverged. Below is some important configuration information; Firstly I just changed convective scheme of ""inv_NACA0012.cfg"" in QuickStart to CUSP and SU2 diverged directly. Configuration information lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:2310,Modifiability,config,configuration,2310,"1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(The configuration file doesn't show it); (still CFL = 1.0; Same multigrid configuration); SU2 converged quickly.; ![cusp3levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32143902-c058ebdc-bceb-11e7-9b55-32ca093fd729.png); What's more, the result is also acceptable. Based on above results, I set no multigrid working.; SU2 still oscillating when CFL number is 4.0 (Both VENKATAKRISHNAN and BARTH_JESPERSEN limiter); BARTH_JESPERSEN ; ![cusp0levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:2380,Modifiability,config,configuration,2380,"; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(The configuration file doesn't show it); (still CFL = 1.0; Same multigrid configuration); SU2 converged quickly.; ![cusp3levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32143902-c058ebdc-bceb-11e7-9b55-32ca093fd729.png); What's more, the result is also acceptable. Based on above results, I set no multigrid working.; SU2 still oscillating when CFL number is 4.0 (Both VENKATAKRISHNAN and BARTH_JESPERSEN limiter); BARTH_JESPERSEN ; ![cusp0levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_me",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:4689,Modifiability,config,configuration,4689,"/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_mean.cpp , I've read compute_residual of CUSP and found something doubtly.; ; At line 643 . > for (iDim = 0; iDim < nDim; iDim++) {; Velocity_i[iDim] = V_i[iDim+1];; Velocity_j[iDim] = V_j[iDim+1];; sq_vel_i += 0.5*Velocity_i[iDim]*Velocity_i[iDim];; sq_vel_j += 0.5*Velocity_j[iDim]*Velocity_j[iDim];; }; ; SoundSpeed_i = sqrt(Gamma*Gamma_Minus_One*(Energy_i-0.5*sq_vel_i));; SoundSpeed_j = sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j));. Here I assume is computing Roe-Sound-Speed, but sq_vel_j's coefficient is not 1/4 but 1/2.; >sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j)). And I don't know whether it's suitable to mix original CUSP and simplified CUSP.; Here, in computing dissipation parameters, SU2 used a simplified Lamda. > LamdaNeg = ProjVelocity - MeanSoundSpeed;; LamdaPos = ProjVelocity + MeanSoundSpeed;. I've read paper and there are two kind of computing-dissipation-parameter method, SU2 seems mixed them. Whether it's legal?. At line 729 ; > if ((Beta > 0.0) && ((0.0 < Mach) && (Mach < 1.0))) Nu_c = - (1.0-Beta)*LamdaNeg;. In Computational Fluid Dynamics (Computational Fluid Dynamics: Principles and Applications (Third Edition)[J]. Computational Fluid Dynamics Principles & Applications, 2015:ix.); Nu_c seems to be - (1.0+Beta)*LamdaNeg. And I want to know which configuration is suit for this condition, thanks~. That's all my confusion. I don't know where I've done wrong and where I've misunderstood. ：）",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:433,Security,attack,attack,433,"I'm a junior student and a new CFDer.; I'v been testing upwind scheme in QuickStart and found that CUSP scheme diverged. Below is some important configuration information; Firstly I just changed convective scheme of ""inv_NACA0012.cfg"" in QuickStart to CUSP and SU2 diverged directly. Configuration information lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:48,Testability,test,testing,48,"I'm a junior student and a new CFDer.; I'v been testing upwind scheme in QuickStart and found that CUSP scheme diverged. Below is some important configuration information; Firstly I just changed convective scheme of ""inv_NACA0012.cfg"" in QuickStart to CUSP and SU2 diverged directly. Configuration information lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:3327,Usability,simpl,simple,3327,"); (still CFL = 1.0; Same multigrid configuration); SU2 converged quickly.; ![cusp3levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32143902-c058ebdc-bceb-11e7-9b55-32ca093fd729.png); What's more, the result is also acceptable. Based on above results, I set no multigrid working.; SU2 still oscillating when CFL number is 4.0 (Both VENKATAKRISHNAN and BARTH_JESPERSEN limiter); BARTH_JESPERSEN ; ![cusp0levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_mean.cpp , I've read compute_residual of CUSP and found something doubtly.; ; At line 643 . > for (iDim = 0; iDim < nDim; iDim++) {; Velocity_i[iDim] = V_i[iDim+1];; Velocity_j[iDim] = V_j[iDim+1];; sq_vel_i += 0.5*Velocity_i[iDim]*Velocity_i[iDim];; sq_vel_j += 0.5*Velocity_j[iDim]*Velocity_j[iDim];; }; ; SoundSpeed_i = sqrt(Gamma*Gamma_Minus_One*(Energy_i-0.5*sq_vel_i));; SoundSpeed_j = sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j));. Here I assume is computing Roe-Sound-Speed, but sq_vel_j's coefficient is not 1/4 but 1/2.; >sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j)). And I don't know whether it's suitable to mix original CUSP and simplified CUSP.; Here, in computing dissipation parameters, SU2 used a simplified Lamda. > LamdaNeg = ProjVelocity - MeanSoundSpeed;; LamdaPos = ProjVelocity + MeanSoundSpeed;. I've read paper and there are two kind of computing-dissipation-parameter method, SU2 seems mixed them. Whether it's legal",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:4044,Usability,simpl,simplified,4044,"/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_mean.cpp , I've read compute_residual of CUSP and found something doubtly.; ; At line 643 . > for (iDim = 0; iDim < nDim; iDim++) {; Velocity_i[iDim] = V_i[iDim+1];; Velocity_j[iDim] = V_j[iDim+1];; sq_vel_i += 0.5*Velocity_i[iDim]*Velocity_i[iDim];; sq_vel_j += 0.5*Velocity_j[iDim]*Velocity_j[iDim];; }; ; SoundSpeed_i = sqrt(Gamma*Gamma_Minus_One*(Energy_i-0.5*sq_vel_i));; SoundSpeed_j = sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j));. Here I assume is computing Roe-Sound-Speed, but sq_vel_j's coefficient is not 1/4 but 1/2.; >sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j)). And I don't know whether it's suitable to mix original CUSP and simplified CUSP.; Here, in computing dissipation parameters, SU2 used a simplified Lamda. > LamdaNeg = ProjVelocity - MeanSoundSpeed;; LamdaPos = ProjVelocity + MeanSoundSpeed;. I've read paper and there are two kind of computing-dissipation-parameter method, SU2 seems mixed them. Whether it's legal?. At line 729 ; > if ((Beta > 0.0) && ((0.0 < Mach) && (Mach < 1.0))) Nu_c = - (1.0-Beta)*LamdaNeg;. In Computational Fluid Dynamics (Computational Fluid Dynamics: Principles and Applications (Third Edition)[J]. Computational Fluid Dynamics Principles & Applications, 2015:ix.); Nu_c seems to be - (1.0+Beta)*LamdaNeg. And I want to know which configuration is suit for this condition, thanks~. That's all my confusion. I don't know where I've done wrong and where I've misunderstood. ：）",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/465:4116,Usability,simpl,simplified,4116,"/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_mean.cpp , I've read compute_residual of CUSP and found something doubtly.; ; At line 643 . > for (iDim = 0; iDim < nDim; iDim++) {; Velocity_i[iDim] = V_i[iDim+1];; Velocity_j[iDim] = V_j[iDim+1];; sq_vel_i += 0.5*Velocity_i[iDim]*Velocity_i[iDim];; sq_vel_j += 0.5*Velocity_j[iDim]*Velocity_j[iDim];; }; ; SoundSpeed_i = sqrt(Gamma*Gamma_Minus_One*(Energy_i-0.5*sq_vel_i));; SoundSpeed_j = sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j));. Here I assume is computing Roe-Sound-Speed, but sq_vel_j's coefficient is not 1/4 but 1/2.; >sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j)). And I don't know whether it's suitable to mix original CUSP and simplified CUSP.; Here, in computing dissipation parameters, SU2 used a simplified Lamda. > LamdaNeg = ProjVelocity - MeanSoundSpeed;; LamdaPos = ProjVelocity + MeanSoundSpeed;. I've read paper and there are two kind of computing-dissipation-parameter method, SU2 seems mixed them. Whether it's legal?. At line 729 ; > if ((Beta > 0.0) && ((0.0 < Mach) && (Mach < 1.0))) Nu_c = - (1.0-Beta)*LamdaNeg;. In Computational Fluid Dynamics (Computational Fluid Dynamics: Principles and Applications (Third Edition)[J]. Computational Fluid Dynamics Principles & Applications, 2015:ix.); Nu_c seems to be - (1.0+Beta)*LamdaNeg. And I want to know which configuration is suit for this condition, thanks~. That's all my confusion. I don't know where I've done wrong and where I've misunderstood. ：）",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465
https://github.com/su2code/SU2/issues/466:485,Availability,avail,available,485,"A new feature of monitoring pressure (or any parameter) values on some specified arbitrary points given by users in case of unsteady simulation. This feature is required for our requirement. I'd implemented this feature for a older one and using a 3rd party library called ANN (Approximate Nearest Neighbor). I wanna know whether implementation using such library can be merged with master version? AFAIK it's not practiced. As Harichand, my colleague said a data structure is already available for tree search which can be implemented. Please tell me how this can be implemented so it clears the eligibility of merge. ; Thanks; Soumen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/466
https://github.com/su2code/SU2/issues/466:17,Energy Efficiency,monitor,monitoring,17,"A new feature of monitoring pressure (or any parameter) values on some specified arbitrary points given by users in case of unsteady simulation. This feature is required for our requirement. I'd implemented this feature for a older one and using a 3rd party library called ANN (Approximate Nearest Neighbor). I wanna know whether implementation using such library can be merged with master version? AFAIK it's not practiced. As Harichand, my colleague said a data structure is already available for tree search which can be implemented. Please tell me how this can be implemented so it clears the eligibility of merge. ; Thanks; Soumen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/466
https://github.com/su2code/SU2/issues/466:586,Usability,clear,clears,586,"A new feature of monitoring pressure (or any parameter) values on some specified arbitrary points given by users in case of unsteady simulation. This feature is required for our requirement. I'd implemented this feature for a older one and using a 3rd party library called ANN (Approximate Nearest Neighbor). I wanna know whether implementation using such library can be merged with master version? AFAIK it's not practiced. As Harichand, my colleague said a data structure is already available for tree search which can be implemented. Please tell me how this can be implemented so it clears the eligibility of merge. ; Thanks; Soumen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/466
https://github.com/su2code/SU2/issues/467:1473,Testability,test,tests,1473,"This is a feature request based on [some previous discussion](https://github.com/su2code/SU2/commit/61e810d4459ba56879d90b997c25723819f8352b#comments) on the `feature_inletprofile` branch. I've got a working prototype on [a branch](https://github.com/pecos-hybrid/SU2/tree/feature_inletprofile_file) off of my group's fork. Here's a few key points:. + _Data structures to store the inlet conditions already existed_. On the develop branch, there's arrays in `CEulerSolver` such as `Inlet_Ttotal`.; + Previously, the `CEulerSolver::BC_Inlet` was doing a set of string compares every single iteration to find the inlet values. Pulling values from arrays should be faster.; + I am _not_ taking the same approach as in the `feature_inletprofile` branch. The existing inlet profile branch adds another inlet type to the existing two. Instead, I added a separate option. That way, you can both specify an inlet type (e.g. `TOTAL_CONDITIONS` or `MASS_FLUX`) and decide if you want the inlet to be uniform or specified by a file. The branch is a little rough for the following reasons:. + The user must manually specify the inlet conditions at each inlet node by listing the node number.; + Interpolation of nodes is not supported (yet).; + Multigrid is not supported. I tried to find a simple way to do this, but it's a more difficult problem than I thought. I could submit a pull request now, if the lead developers want me to. But I'd like to take some more time to run further tests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/467
https://github.com/su2code/SU2/issues/467:1279,Usability,simpl,simple,1279,"This is a feature request based on [some previous discussion](https://github.com/su2code/SU2/commit/61e810d4459ba56879d90b997c25723819f8352b#comments) on the `feature_inletprofile` branch. I've got a working prototype on [a branch](https://github.com/pecos-hybrid/SU2/tree/feature_inletprofile_file) off of my group's fork. Here's a few key points:. + _Data structures to store the inlet conditions already existed_. On the develop branch, there's arrays in `CEulerSolver` such as `Inlet_Ttotal`.; + Previously, the `CEulerSolver::BC_Inlet` was doing a set of string compares every single iteration to find the inlet values. Pulling values from arrays should be faster.; + I am _not_ taking the same approach as in the `feature_inletprofile` branch. The existing inlet profile branch adds another inlet type to the existing two. Instead, I added a separate option. That way, you can both specify an inlet type (e.g. `TOTAL_CONDITIONS` or `MASS_FLUX`) and decide if you want the inlet to be uniform or specified by a file. The branch is a little rough for the following reasons:. + The user must manually specify the inlet conditions at each inlet node by listing the node number.; + Interpolation of nodes is not supported (yet).; + Multigrid is not supported. I tried to find a simple way to do this, but it's a more difficult problem than I thought. I could submit a pull request now, if the lead developers want me to. But I'd like to take some more time to run further tests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/467
https://github.com/su2code/SU2/issues/468:467,Integrability,rout,routines,467,"Hello,; When using the rotating reference frame option with incompressible flow the code blows up immediately. There appears to be two issues - ; 1. Omega_ref is not initialized in the SetNondimensionalization subroutine in solver_direct_mean_inc.cpp. In the compressible version, it is defined as Velocity_ref/Length_ref whereas no definition exists in the incompressible one.; 2. Since all the definitions of gas constants have been removed from the incompressible routines, using Mach_motion to normalize forces and moments makes them all undefined. . While both the fixes are easy, it might still lead to issues when free stream velocity is zero as Omega_ref is used to normalize grid velocities in SetRotationalVelocity. ; Is it possible to implement a new config option to compute Omega_ref differently and also use it to normalize forces?. Cheers,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/468
https://github.com/su2code/SU2/issues/468:762,Modifiability,config,config,762,"Hello,; When using the rotating reference frame option with incompressible flow the code blows up immediately. There appears to be two issues - ; 1. Omega_ref is not initialized in the SetNondimensionalization subroutine in solver_direct_mean_inc.cpp. In the compressible version, it is defined as Velocity_ref/Length_ref whereas no definition exists in the incompressible one.; 2. Since all the definitions of gas constants have been removed from the incompressible routines, using Mach_motion to normalize forces and moments makes them all undefined. . While both the fixes are easy, it might still lead to issues when free stream velocity is zero as Omega_ref is used to normalize grid velocities in SetRotationalVelocity. ; Is it possible to implement a new config option to compute Omega_ref differently and also use it to normalize forces?. Cheers,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/468
https://github.com/su2code/SU2/issues/469:249,Integrability,interface,interface,249,"When using `srun` version 15.08.7 `parallel_computation.py` launches `-n` instances of my SU2 call rather than one instance of SU2 with `n` processes. This does not happen with `srun` version 2.6.5. I fixed this issue by commenting out the line in `interface.py` that calls `srun` if a SLURM jobID number is in the environment variables. This causes `parallel_computation.py` to call `mpirun`, which works as expected.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/469
https://github.com/su2code/SU2/issues/469:327,Modifiability,variab,variables,327,"When using `srun` version 15.08.7 `parallel_computation.py` launches `-n` instances of my SU2 call rather than one instance of SU2 with `n` processes. This does not happen with `srun` version 2.6.5. I fixed this issue by commenting out the line in `interface.py` that calls `srun` if a SLURM jobID number is in the environment variables. This causes `parallel_computation.py` to call `mpirun`, which works as expected.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/469
https://github.com/su2code/SU2/pull/471:484,Deployability,update,update,484,"This is the hybrid portion of the SU2. I haven't yet checked to make sure that my merge from `pecos-dev` into `pecos-aniso_viscosity` hasn't changed the CDP vs SU2 comparison. I can do that sometime on Thursday. The [documentation on the SVN repo](https://svn.ices.utexas.edu/repos/turbulence/docs/SU2_hybrid/) contains some information on the changes. It's a little out-of-date, but there haven't been any revolutionary changes on the implementation side of things. I mostly need to update what we've continued to implement (v2-f now supported, more outputs written to files, etc.). Side note: Valgrind shows some false positives in the MKL side of the eigenvector calculations. See [this thread on their forums](https://software.intel.com/en-us/forums/intel-math-kernel-library/topic/279131) for more information. It seems to be a nonissue.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/471
https://github.com/su2code/SU2/pull/472:155,Integrability,rout,routine,155,"We did some modifications to the incompressible solver. In particular:. - Leftovers from the compressible solver are removed in the non-dimensionalization routine, the time-step computation and the Jacobian computation in numerics.; - The surface analysis now works correctly for incompressible cases and the mass flux average finally works (only uses the modulus of the mass flux now). ; - There is now again a BC_Isothermal_Wall() routine. It just features as a wrapper for the BC_HeatFlux_Wall... until we found a better solution (maybe adding MARKER_WALL/MARKER_NO_SLIP or something).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/472
https://github.com/su2code/SU2/pull/472:433,Integrability,rout,routine,433,"We did some modifications to the incompressible solver. In particular:. - Leftovers from the compressible solver are removed in the non-dimensionalization routine, the time-step computation and the Jacobian computation in numerics.; - The surface analysis now works correctly for incompressible cases and the mass flux average finally works (only uses the modulus of the mass flux now). ; - There is now again a BC_Isothermal_Wall() routine. It just features as a wrapper for the BC_HeatFlux_Wall... until we found a better solution (maybe adding MARKER_WALL/MARKER_NO_SLIP or something).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/472
https://github.com/su2code/SU2/pull/472:464,Integrability,wrap,wrapper,464,"We did some modifications to the incompressible solver. In particular:. - Leftovers from the compressible solver are removed in the non-dimensionalization routine, the time-step computation and the Jacobian computation in numerics.; - The surface analysis now works correctly for incompressible cases and the mass flux average finally works (only uses the modulus of the mass flux now). ; - There is now again a BC_Isothermal_Wall() routine. It just features as a wrapper for the BC_HeatFlux_Wall... until we found a better solution (maybe adding MARKER_WALL/MARKER_NO_SLIP or something).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/472
https://github.com/su2code/SU2/pull/473:338,Deployability,update,updates,338,"This pull request replaces AdjointMPI with our own open-source library called Medipack (https://github.com/SciCompKL/MeDiPack). It covers most of the MPI standard (especially non-blocking communication, custom data types and operators), which makes it more flexible for future extensions of the MPI communication in SU2. Furthermore this updates Codi to the newest version and provides support for different taping strategies. Eventually we want to get rid of the #ifdef's for MPI, so I also started with replacing almost all MPI calls with calls to the SU2_MPI wrapper class. . I also removed the complex step datatype since I cannot make sure that it still works (and it makes no sense to maintain a forward mode and complex step ...)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/473
https://github.com/su2code/SU2/pull/473:562,Integrability,wrap,wrapper,562,"This pull request replaces AdjointMPI with our own open-source library called Medipack (https://github.com/SciCompKL/MeDiPack). It covers most of the MPI standard (especially non-blocking communication, custom data types and operators), which makes it more flexible for future extensions of the MPI communication in SU2. Furthermore this updates Codi to the newest version and provides support for different taping strategies. Eventually we want to get rid of the #ifdef's for MPI, so I also started with replacing almost all MPI calls with calls to the SU2_MPI wrapper class. . I also removed the complex step datatype since I cannot make sure that it still works (and it makes no sense to maintain a forward mode and complex step ...)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/473
https://github.com/su2code/SU2/pull/473:257,Modifiability,flexible,flexible,257,"This pull request replaces AdjointMPI with our own open-source library called Medipack (https://github.com/SciCompKL/MeDiPack). It covers most of the MPI standard (especially non-blocking communication, custom data types and operators), which makes it more flexible for future extensions of the MPI communication in SU2. Furthermore this updates Codi to the newest version and provides support for different taping strategies. Eventually we want to get rid of the #ifdef's for MPI, so I also started with replacing almost all MPI calls with calls to the SU2_MPI wrapper class. . I also removed the complex step datatype since I cannot make sure that it still works (and it makes no sense to maintain a forward mode and complex step ...)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/473
https://github.com/su2code/SU2/issues/474:21,Availability,down,downloaded,21,"Dear Team SU2,. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. Thank you very much. Sincerely,; Yu-Kai Weng. [restart_flow_nb_00000.zip](https://github.com/su2code/SU2/files/1493197/restart_flow_nb_00000.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/474
https://github.com/su2code/SU2/issues/474:606,Availability,error,error,606,"Dear Team SU2,. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. Thank you very much. Sincerely,; Yu-Kai Weng. [restart_flow_nb_00000.zip](https://github.com/su2code/SU2/files/1493197/restart_flow_nb_00000.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/474
https://github.com/su2code/SU2/issues/474:682,Availability,error,error,682,"Dear Team SU2,. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. Thank you very much. Sincerely,; Yu-Kai Weng. [restart_flow_nb_00000.zip](https://github.com/su2code/SU2/files/1493197/restart_flow_nb_00000.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/474
https://github.com/su2code/SU2/issues/474:741,Availability,error,error,741,"Dear Team SU2,. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. Thank you very much. Sincerely,; Yu-Kai Weng. [restart_flow_nb_00000.zip](https://github.com/su2code/SU2/files/1493197/restart_flow_nb_00000.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/474
https://github.com/su2code/SU2/issues/474:523,Integrability,message,message,523,"Dear Team SU2,. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. Thank you very much. Sincerely,; Yu-Kai Weng. [restart_flow_nb_00000.zip](https://github.com/su2code/SU2/files/1493197/restart_flow_nb_00000.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/474
https://github.com/su2code/SU2/issues/475:75,Deployability,continuous,continuous,75,"Hello, . all the residuals in the adjoint.dat file written after running a continuous adjoint simulation ( with the option WRT_RESIDUALS= YES) are zero. . Here are the config file and mesh for the QuickStart example which also has this problem; [files.zip](https://github.com/su2code/SU2/files/1495681/files.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/475
https://github.com/su2code/SU2/issues/475:168,Modifiability,config,config,168,"Hello, . all the residuals in the adjoint.dat file written after running a continuous adjoint simulation ( with the option WRT_RESIDUALS= YES) are zero. . Here are the config file and mesh for the QuickStart example which also has this problem; [files.zip](https://github.com/su2code/SU2/files/1495681/files.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/475
https://github.com/su2code/SU2/issues/476:27,Availability,down,download,27,"Hi, . I have just tried to download square.cpp from the page:. https://github.com/su2code/SU2/wiki/Mesh-File. however, get a ""Not Found"" 404 error. Is this file still available?. Kind Regards,. Chay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/476
https://github.com/su2code/SU2/issues/476:141,Availability,error,error,141,"Hi, . I have just tried to download square.cpp from the page:. https://github.com/su2code/SU2/wiki/Mesh-File. however, get a ""Not Found"" 404 error. Is this file still available?. Kind Regards,. Chay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/476
https://github.com/su2code/SU2/issues/476:167,Availability,avail,available,167,"Hi, . I have just tried to download square.cpp from the page:. https://github.com/su2code/SU2/wiki/Mesh-File. however, get a ""Not Found"" 404 error. Is this file still available?. Kind Regards,. Chay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/476
https://github.com/su2code/SU2/issues/477:100,Availability,down,downloaded,100,"Dear Team SU2:. Apologize for the re-post this issue since I accidentally closed the last one. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. I put some sample original non-binary file which has mislocated or missing data, and cannot be read as restart file in google drive [here](https://drive.google.com/drive/u/1/folders/1kmAqTV-HyHH6y2o1zxPVLEJ5pU2LRebl) and another bad written non-binary file is attached.; [badfile.zip](https://github.com/su2code/SU2/files/1504155/badfile.zip). Sincerely,; Yu-Kai Weng",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/477
https://github.com/su2code/SU2/issues/477:685,Availability,error,error,685,"Dear Team SU2:. Apologize for the re-post this issue since I accidentally closed the last one. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. I put some sample original non-binary file which has mislocated or missing data, and cannot be read as restart file in google drive [here](https://drive.google.com/drive/u/1/folders/1kmAqTV-HyHH6y2o1zxPVLEJ5pU2LRebl) and another bad written non-binary file is attached.; [badfile.zip](https://github.com/su2code/SU2/files/1504155/badfile.zip). Sincerely,; Yu-Kai Weng",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/477
https://github.com/su2code/SU2/issues/477:761,Availability,error,error,761,"Dear Team SU2:. Apologize for the re-post this issue since I accidentally closed the last one. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. I put some sample original non-binary file which has mislocated or missing data, and cannot be read as restart file in google drive [here](https://drive.google.com/drive/u/1/folders/1kmAqTV-HyHH6y2o1zxPVLEJ5pU2LRebl) and another bad written non-binary file is attached.; [badfile.zip](https://github.com/su2code/SU2/files/1504155/badfile.zip). Sincerely,; Yu-Kai Weng",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/477
https://github.com/su2code/SU2/issues/477:820,Availability,error,error,820,"Dear Team SU2:. Apologize for the re-post this issue since I accidentally closed the last one. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. I put some sample original non-binary file which has mislocated or missing data, and cannot be read as restart file in google drive [here](https://drive.google.com/drive/u/1/folders/1kmAqTV-HyHH6y2o1zxPVLEJ5pU2LRebl) and another bad written non-binary file is attached.; [badfile.zip](https://github.com/su2code/SU2/files/1504155/badfile.zip). Sincerely,; Yu-Kai Weng",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/477
https://github.com/su2code/SU2/issues/477:602,Integrability,message,message,602,"Dear Team SU2:. Apologize for the re-post this issue since I accidentally closed the last one. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. I put some sample original non-binary file which has mislocated or missing data, and cannot be read as restart file in google drive [here](https://drive.google.com/drive/u/1/folders/1kmAqTV-HyHH6y2o1zxPVLEJ5pU2LRebl) and another bad written non-binary file is attached.; [badfile.zip](https://github.com/su2code/SU2/files/1504155/badfile.zip). Sincerely,; Yu-Kai Weng",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/477
https://github.com/su2code/SU2/issues/478:506,Deployability,integrat,integration,506,"When compiling SU2, it appears the LAPACK can be used for some linear solver routines. There's a optional compile flag `--with-LAPACK-lib` and a `LAPACK support: no` readout. There's even a comment in the configure.ac file: `LAPACK connection added by Teus van der Stelt, 11/13/2014`. However, I can't find any code at all that uses LAPACK. At least, there aren't any sections that switch on with `HAVE_LAPACK`. Am I missing something? Was this removed at some point? Is there a branch that does have this integration?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/478
https://github.com/su2code/SU2/issues/478:77,Integrability,rout,routines,77,"When compiling SU2, it appears the LAPACK can be used for some linear solver routines. There's a optional compile flag `--with-LAPACK-lib` and a `LAPACK support: no` readout. There's even a comment in the configure.ac file: `LAPACK connection added by Teus van der Stelt, 11/13/2014`. However, I can't find any code at all that uses LAPACK. At least, there aren't any sections that switch on with `HAVE_LAPACK`. Am I missing something? Was this removed at some point? Is there a branch that does have this integration?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/478
https://github.com/su2code/SU2/issues/478:506,Integrability,integrat,integration,506,"When compiling SU2, it appears the LAPACK can be used for some linear solver routines. There's a optional compile flag `--with-LAPACK-lib` and a `LAPACK support: no` readout. There's even a comment in the configure.ac file: `LAPACK connection added by Teus van der Stelt, 11/13/2014`. However, I can't find any code at all that uses LAPACK. At least, there aren't any sections that switch on with `HAVE_LAPACK`. Am I missing something? Was this removed at some point? Is there a branch that does have this integration?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/478
https://github.com/su2code/SU2/issues/478:205,Modifiability,config,configure,205,"When compiling SU2, it appears the LAPACK can be used for some linear solver routines. There's a optional compile flag `--with-LAPACK-lib` and a `LAPACK support: no` readout. There's even a comment in the configure.ac file: `LAPACK connection added by Teus van der Stelt, 11/13/2014`. However, I can't find any code at all that uses LAPACK. At least, there aren't any sections that switch on with `HAVE_LAPACK`. Am I missing something? Was this removed at some point? Is there a branch that does have this integration?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/478
https://github.com/su2code/SU2/issues/479:233,Availability,error,errors,233,"I am having issues with grid partitioning for a large case I am trying to run in parallel. I have a 3D grid for a sharp cone with 86 million cells, and I suspect that I am running into a memory issue with ParMETIS. I get a series of errors of the form ""PARMETIS ERROR: Poor initial vertex distribution. Processor 384 has no vertices assigned to it!"" and then this message at the end of partitioning:. ""Finished partitioning using ParMETIS (0 edge cuts).; Communicating partition data and creating halo layers.; 0 interior elements including halo cells.; 0 vertices including ghost points."". Naturally, when the case tries to run, it then gives me a segfault. I have tried running the case with different numbers of processors (512, 864, 1024) and I have also tried leaving each node with 50% of its cores idle for more available memory in each node (maintaining the same overall number of active processors) but I still seem to get the same problem. Any suggestions?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/479
https://github.com/su2code/SU2/issues/479:262,Availability,ERROR,ERROR,262,"I am having issues with grid partitioning for a large case I am trying to run in parallel. I have a 3D grid for a sharp cone with 86 million cells, and I suspect that I am running into a memory issue with ParMETIS. I get a series of errors of the form ""PARMETIS ERROR: Poor initial vertex distribution. Processor 384 has no vertices assigned to it!"" and then this message at the end of partitioning:. ""Finished partitioning using ParMETIS (0 edge cuts).; Communicating partition data and creating halo layers.; 0 interior elements including halo cells.; 0 vertices including ghost points."". Naturally, when the case tries to run, it then gives me a segfault. I have tried running the case with different numbers of processors (512, 864, 1024) and I have also tried leaving each node with 50% of its cores idle for more available memory in each node (maintaining the same overall number of active processors) but I still seem to get the same problem. Any suggestions?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/479
https://github.com/su2code/SU2/issues/479:819,Availability,avail,available,819,"I am having issues with grid partitioning for a large case I am trying to run in parallel. I have a 3D grid for a sharp cone with 86 million cells, and I suspect that I am running into a memory issue with ParMETIS. I get a series of errors of the form ""PARMETIS ERROR: Poor initial vertex distribution. Processor 384 has no vertices assigned to it!"" and then this message at the end of partitioning:. ""Finished partitioning using ParMETIS (0 edge cuts).; Communicating partition data and creating halo layers.; 0 interior elements including halo cells.; 0 vertices including ghost points."". Naturally, when the case tries to run, it then gives me a segfault. I have tried running the case with different numbers of processors (512, 864, 1024) and I have also tried leaving each node with 50% of its cores idle for more available memory in each node (maintaining the same overall number of active processors) but I still seem to get the same problem. Any suggestions?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/479
https://github.com/su2code/SU2/issues/479:364,Integrability,message,message,364,"I am having issues with grid partitioning for a large case I am trying to run in parallel. I have a 3D grid for a sharp cone with 86 million cells, and I suspect that I am running into a memory issue with ParMETIS. I get a series of errors of the form ""PARMETIS ERROR: Poor initial vertex distribution. Processor 384 has no vertices assigned to it!"" and then this message at the end of partitioning:. ""Finished partitioning using ParMETIS (0 edge cuts).; Communicating partition data and creating halo layers.; 0 interior elements including halo cells.; 0 vertices including ghost points."". Naturally, when the case tries to run, it then gives me a segfault. I have tried running the case with different numbers of processors (512, 864, 1024) and I have also tried leaving each node with 50% of its cores idle for more available memory in each node (maintaining the same overall number of active processors) but I still seem to get the same problem. Any suggestions?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/479
https://github.com/su2code/SU2/issues/479:502,Modifiability,layers,layers,502,"I am having issues with grid partitioning for a large case I am trying to run in parallel. I have a 3D grid for a sharp cone with 86 million cells, and I suspect that I am running into a memory issue with ParMETIS. I get a series of errors of the form ""PARMETIS ERROR: Poor initial vertex distribution. Processor 384 has no vertices assigned to it!"" and then this message at the end of partitioning:. ""Finished partitioning using ParMETIS (0 edge cuts).; Communicating partition data and creating halo layers.; 0 interior elements including halo cells.; 0 vertices including ghost points."". Naturally, when the case tries to run, it then gives me a segfault. I have tried running the case with different numbers of processors (512, 864, 1024) and I have also tried leaving each node with 50% of its cores idle for more available memory in each node (maintaining the same overall number of active processors) but I still seem to get the same problem. Any suggestions?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/479
https://github.com/su2code/SU2/pull/480:2,Energy Efficiency,reduce,reduced,2,"I reduced the number of iterations for some of the regression tests. They need ~ 45 min now. This should at least temporarily help. Along with that I found one or two bugs ... Nevertheless, all of this shouldn't affect a lot of people, so I hope we can merge this in asap, to avoid any more travis runs to fail :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/480
https://github.com/su2code/SU2/pull/480:276,Safety,avoid,avoid,276,"I reduced the number of iterations for some of the regression tests. They need ~ 45 min now. This should at least temporarily help. Along with that I found one or two bugs ... Nevertheless, all of this shouldn't affect a lot of people, so I hope we can merge this in asap, to avoid any more travis runs to fail :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/480
https://github.com/su2code/SU2/pull/480:62,Testability,test,tests,62,"I reduced the number of iterations for some of the regression tests. They need ~ 45 min now. This should at least temporarily help. Along with that I found one or two bugs ... Nevertheless, all of this shouldn't affect a lot of people, so I hope we can merge this in asap, to avoid any more travis runs to fail :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/480
https://github.com/su2code/SU2/issues/481:30,Modifiability,config,configure,30,Could it be possible to alter configure system to allow different lapacke as your user wanted here:; https://github.com/xianyi/OpenBLAS/issues/1383; Also since we talk about linking statically tens of megabytes of blobs into final module - could the (user-specified) LAPACK library (optionally or by default) get imported dynamically?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/481
https://github.com/su2code/SU2/pull/482:48,Deployability,continuous,continuous,48,"This pull request fixes a segfault issue in the continuous adjoint solver initialization. Since iMarker is recycled in SetForceProj_Vector, it could be set as nMarker if no matching marker is found for a given Marker_Monitoring, which leads to an out-of-bounds access. A check on the value of iMarker has been moved from the first for loop (where it is unnecessary), to the second for loop where iMarker is recycled and the segfault occurs.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/482
https://github.com/su2code/SU2/pull/482:261,Security,access,access,261,"This pull request fixes a segfault issue in the continuous adjoint solver initialization. Since iMarker is recycled in SetForceProj_Vector, it could be set as nMarker if no matching marker is found for a given Marker_Monitoring, which leads to an out-of-bounds access. A check on the value of iMarker has been moved from the first for loop (where it is unnecessary), to the second for loop where iMarker is recycled and the segfault occurs.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/482
https://github.com/su2code/SU2/issues/483:189,Availability,down,download,189,"In reference to this problem on the cfd-online forums, [here](https://www.cfd-online.com/Forums/su2-installation/188365-ad-build-problem-su2-5-0-0-a.html), where `preconfigure.py` fails to download CoDi and AdjointMPI. I just downloaded the latest develop from Github and noticed that the problem is still there when you try to build AD. I think it's due to a simple problem - the exact error I see in preconf.err is:. ```; --2017-12-08 17:18:47-- https://github.com/scicompkl/CoDiPack/archive/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip; Resolving github.com... 192.30.255.112, 192.30.255.113; Connecting to github.com|192.30.255.112|:443... connected.; HTTP request sent, awaiting response... 302 Found; Location: https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13 [following]; --2017-12-08 17:18:48-- https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13; Resolving codeload.github.com... 192.30.255.120, 192.30.255.121; Connecting to codeload.github.com|192.30.255.120|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: unspecified [application/zip]; Saving to: `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13'. 0K .......... .......... .......... .......... .......... 223K; 50K .......... .......... .......... .......... .......... 442K; 100K .......... .......... .......... .......... .......... 441K; 150K .......... .......... .......... .......... .......... 443K; 200K .......... .......... .......... .......... ...... 9.79M=0.6s. Last-modified header missing -- time-stamps turned off.; 2017-12-08 17:18:49 (435 KB/s) - `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13' saved [252908]. unzip: cannot find or open 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip, 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.zip or 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.ZIP.; ```; It seems `unzip` searches for various endings, such as '.zip, '.zip.zip', and '.zip.ZIP' but I suspect these are failing becaus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/483
https://github.com/su2code/SU2/issues/483:226,Availability,down,downloaded,226,"In reference to this problem on the cfd-online forums, [here](https://www.cfd-online.com/Forums/su2-installation/188365-ad-build-problem-su2-5-0-0-a.html), where `preconfigure.py` fails to download CoDi and AdjointMPI. I just downloaded the latest develop from Github and noticed that the problem is still there when you try to build AD. I think it's due to a simple problem - the exact error I see in preconf.err is:. ```; --2017-12-08 17:18:47-- https://github.com/scicompkl/CoDiPack/archive/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip; Resolving github.com... 192.30.255.112, 192.30.255.113; Connecting to github.com|192.30.255.112|:443... connected.; HTTP request sent, awaiting response... 302 Found; Location: https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13 [following]; --2017-12-08 17:18:48-- https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13; Resolving codeload.github.com... 192.30.255.120, 192.30.255.121; Connecting to codeload.github.com|192.30.255.120|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: unspecified [application/zip]; Saving to: `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13'. 0K .......... .......... .......... .......... .......... 223K; 50K .......... .......... .......... .......... .......... 442K; 100K .......... .......... .......... .......... .......... 441K; 150K .......... .......... .......... .......... .......... 443K; 200K .......... .......... .......... .......... ...... 9.79M=0.6s. Last-modified header missing -- time-stamps turned off.; 2017-12-08 17:18:49 (435 KB/s) - `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13' saved [252908]. unzip: cannot find or open 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip, 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.zip or 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.ZIP.; ```; It seems `unzip` searches for various endings, such as '.zip, '.zip.zip', and '.zip.ZIP' but I suspect these are failing becaus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/483
https://github.com/su2code/SU2/issues/483:387,Availability,error,error,387,"In reference to this problem on the cfd-online forums, [here](https://www.cfd-online.com/Forums/su2-installation/188365-ad-build-problem-su2-5-0-0-a.html), where `preconfigure.py` fails to download CoDi and AdjointMPI. I just downloaded the latest develop from Github and noticed that the problem is still there when you try to build AD. I think it's due to a simple problem - the exact error I see in preconf.err is:. ```; --2017-12-08 17:18:47-- https://github.com/scicompkl/CoDiPack/archive/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip; Resolving github.com... 192.30.255.112, 192.30.255.113; Connecting to github.com|192.30.255.112|:443... connected.; HTTP request sent, awaiting response... 302 Found; Location: https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13 [following]; --2017-12-08 17:18:48-- https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13; Resolving codeload.github.com... 192.30.255.120, 192.30.255.121; Connecting to codeload.github.com|192.30.255.120|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: unspecified [application/zip]; Saving to: `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13'. 0K .......... .......... .......... .......... .......... 223K; 50K .......... .......... .......... .......... .......... 442K; 100K .......... .......... .......... .......... .......... 441K; 150K .......... .......... .......... .......... .......... 443K; 200K .......... .......... .......... .......... ...... 9.79M=0.6s. Last-modified header missing -- time-stamps turned off.; 2017-12-08 17:18:49 (435 KB/s) - `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13' saved [252908]. unzip: cannot find or open 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip, 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.zip or 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.ZIP.; ```; It seems `unzip` searches for various endings, such as '.zip, '.zip.zip', and '.zip.ZIP' but I suspect these are failing becaus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/483
https://github.com/su2code/SU2/issues/483:2007,Availability,down,downloaded,2007,"re when you try to build AD. I think it's due to a simple problem - the exact error I see in preconf.err is:. ```; --2017-12-08 17:18:47-- https://github.com/scicompkl/CoDiPack/archive/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip; Resolving github.com... 192.30.255.112, 192.30.255.113; Connecting to github.com|192.30.255.112|:443... connected.; HTTP request sent, awaiting response... 302 Found; Location: https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13 [following]; --2017-12-08 17:18:48-- https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13; Resolving codeload.github.com... 192.30.255.120, 192.30.255.121; Connecting to codeload.github.com|192.30.255.120|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: unspecified [application/zip]; Saving to: `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13'. 0K .......... .......... .......... .......... .......... 223K; 50K .......... .......... .......... .......... .......... 442K; 100K .......... .......... .......... .......... .......... 441K; 150K .......... .......... .......... .......... .......... 443K; 200K .......... .......... .......... .......... ...... 9.79M=0.6s. Last-modified header missing -- time-stamps turned off.; 2017-12-08 17:18:49 (435 KB/s) - `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13' saved [252908]. unzip: cannot find or open 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip, 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.zip or 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.ZIP.; ```; It seems `unzip` searches for various endings, such as '.zip, '.zip.zip', and '.zip.ZIP' but I suspect these are failing because the downloaded file (that I can see in externals) has no file ending. A workaround was to download the files manually (as suggested in the post) or, on failing, simply to add a `.zip` to the end of the files `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13` and `31b2267c3a55a391a37d830369f2e0dba09008d1` for now.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/483
https://github.com/su2code/SU2/issues/483:2093,Availability,down,download,2093,"re when you try to build AD. I think it's due to a simple problem - the exact error I see in preconf.err is:. ```; --2017-12-08 17:18:47-- https://github.com/scicompkl/CoDiPack/archive/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip; Resolving github.com... 192.30.255.112, 192.30.255.113; Connecting to github.com|192.30.255.112|:443... connected.; HTTP request sent, awaiting response... 302 Found; Location: https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13 [following]; --2017-12-08 17:18:48-- https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13; Resolving codeload.github.com... 192.30.255.120, 192.30.255.121; Connecting to codeload.github.com|192.30.255.120|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: unspecified [application/zip]; Saving to: `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13'. 0K .......... .......... .......... .......... .......... 223K; 50K .......... .......... .......... .......... .......... 442K; 100K .......... .......... .......... .......... .......... 441K; 150K .......... .......... .......... .......... .......... 443K; 200K .......... .......... .......... .......... ...... 9.79M=0.6s. Last-modified header missing -- time-stamps turned off.; 2017-12-08 17:18:49 (435 KB/s) - `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13' saved [252908]. unzip: cannot find or open 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip, 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.zip or 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.ZIP.; ```; It seems `unzip` searches for various endings, such as '.zip, '.zip.zip', and '.zip.ZIP' but I suspect these are failing because the downloaded file (that I can see in externals) has no file ending. A workaround was to download the files manually (as suggested in the post) or, on failing, simply to add a `.zip` to the end of the files `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13` and `31b2267c3a55a391a37d830369f2e0dba09008d1` for now.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/483
https://github.com/su2code/SU2/issues/483:100,Deployability,install,installation,100,"In reference to this problem on the cfd-online forums, [here](https://www.cfd-online.com/Forums/su2-installation/188365-ad-build-problem-su2-5-0-0-a.html), where `preconfigure.py` fails to download CoDi and AdjointMPI. I just downloaded the latest develop from Github and noticed that the problem is still there when you try to build AD. I think it's due to a simple problem - the exact error I see in preconf.err is:. ```; --2017-12-08 17:18:47-- https://github.com/scicompkl/CoDiPack/archive/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip; Resolving github.com... 192.30.255.112, 192.30.255.113; Connecting to github.com|192.30.255.112|:443... connected.; HTTP request sent, awaiting response... 302 Found; Location: https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13 [following]; --2017-12-08 17:18:48-- https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13; Resolving codeload.github.com... 192.30.255.120, 192.30.255.121; Connecting to codeload.github.com|192.30.255.120|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: unspecified [application/zip]; Saving to: `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13'. 0K .......... .......... .......... .......... .......... 223K; 50K .......... .......... .......... .......... .......... 442K; 100K .......... .......... .......... .......... .......... 441K; 150K .......... .......... .......... .......... .......... 443K; 200K .......... .......... .......... .......... ...... 9.79M=0.6s. Last-modified header missing -- time-stamps turned off.; 2017-12-08 17:18:49 (435 KB/s) - `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13' saved [252908]. unzip: cannot find or open 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip, 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.zip or 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.ZIP.; ```; It seems `unzip` searches for various endings, such as '.zip, '.zip.zip', and '.zip.ZIP' but I suspect these are failing becaus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/483
https://github.com/su2code/SU2/issues/483:360,Usability,simpl,simple,360,"In reference to this problem on the cfd-online forums, [here](https://www.cfd-online.com/Forums/su2-installation/188365-ad-build-problem-su2-5-0-0-a.html), where `preconfigure.py` fails to download CoDi and AdjointMPI. I just downloaded the latest develop from Github and noticed that the problem is still there when you try to build AD. I think it's due to a simple problem - the exact error I see in preconf.err is:. ```; --2017-12-08 17:18:47-- https://github.com/scicompkl/CoDiPack/archive/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip; Resolving github.com... 192.30.255.112, 192.30.255.113; Connecting to github.com|192.30.255.112|:443... connected.; HTTP request sent, awaiting response... 302 Found; Location: https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13 [following]; --2017-12-08 17:18:48-- https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13; Resolving codeload.github.com... 192.30.255.120, 192.30.255.121; Connecting to codeload.github.com|192.30.255.120|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: unspecified [application/zip]; Saving to: `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13'. 0K .......... .......... .......... .......... .......... 223K; 50K .......... .......... .......... .......... .......... 442K; 100K .......... .......... .......... .......... .......... 441K; 150K .......... .......... .......... .......... .......... 443K; 200K .......... .......... .......... .......... ...... 9.79M=0.6s. Last-modified header missing -- time-stamps turned off.; 2017-12-08 17:18:49 (435 KB/s) - `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13' saved [252908]. unzip: cannot find or open 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip, 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.zip or 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.ZIP.; ```; It seems `unzip` searches for various endings, such as '.zip, '.zip.zip', and '.zip.ZIP' but I suspect these are failing becaus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/483
https://github.com/su2code/SU2/issues/483:2164,Usability,simpl,simply,2164,"re when you try to build AD. I think it's due to a simple problem - the exact error I see in preconf.err is:. ```; --2017-12-08 17:18:47-- https://github.com/scicompkl/CoDiPack/archive/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip; Resolving github.com... 192.30.255.112, 192.30.255.113; Connecting to github.com|192.30.255.112|:443... connected.; HTTP request sent, awaiting response... 302 Found; Location: https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13 [following]; --2017-12-08 17:18:48-- https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13; Resolving codeload.github.com... 192.30.255.120, 192.30.255.121; Connecting to codeload.github.com|192.30.255.120|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: unspecified [application/zip]; Saving to: `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13'. 0K .......... .......... .......... .......... .......... 223K; 50K .......... .......... .......... .......... .......... 442K; 100K .......... .......... .......... .......... .......... 441K; 150K .......... .......... .......... .......... .......... 443K; 200K .......... .......... .......... .......... ...... 9.79M=0.6s. Last-modified header missing -- time-stamps turned off.; 2017-12-08 17:18:49 (435 KB/s) - `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13' saved [252908]. unzip: cannot find or open 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip, 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.zip or 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.ZIP.; ```; It seems `unzip` searches for various endings, such as '.zip, '.zip.zip', and '.zip.ZIP' but I suspect these are failing because the downloaded file (that I can see in externals) has no file ending. A workaround was to download the files manually (as suggested in the post) or, on failing, simply to add a `.zip` to the end of the files `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13` and `31b2267c3a55a391a37d830369f2e0dba09008d1` for now.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/483
https://github.com/su2code/SU2/pull/484:255,Availability,error,errors,255,"Multiple improvements in the existing SU2 wing cutter for data postprocesing. In particular, the previous implementation was depending on some distance computation and the new one uses the index of the points to identify the correct cut avoiding rounding errors. Best,; Raul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/484
https://github.com/su2code/SU2/pull/484:125,Integrability,depend,depending,125,"Multiple improvements in the existing SU2 wing cutter for data postprocesing. In particular, the previous implementation was depending on some distance computation and the new one uses the index of the points to identify the correct cut avoiding rounding errors. Best,; Raul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/484
https://github.com/su2code/SU2/pull/484:237,Safety,avoid,avoiding,237,"Multiple improvements in the existing SU2 wing cutter for data postprocesing. In particular, the previous implementation was depending on some distance computation and the new one uses the index of the points to identify the correct cut avoiding rounding errors. Best,; Raul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/484
https://github.com/su2code/SU2/pull/485:13,Modifiability,config,config,13,"I copied the config files necessary for running the tutorial cases into their own folder. This should make it easier to modify or add tutorials, without having to worry about the regression tests. Furthermore, it is easier for the user to differentiate between tutorials and regression tests (which do not necessarily have to converge or to give physical solutions). I suggest to create a new repository for the mesh files of the tutorial cases next.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/485
https://github.com/su2code/SU2/pull/485:190,Testability,test,tests,190,"I copied the config files necessary for running the tutorial cases into their own folder. This should make it easier to modify or add tutorials, without having to worry about the regression tests. Furthermore, it is easier for the user to differentiate between tutorials and regression tests (which do not necessarily have to converge or to give physical solutions). I suggest to create a new repository for the mesh files of the tutorial cases next.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/485
https://github.com/su2code/SU2/pull/485:286,Testability,test,tests,286,"I copied the config files necessary for running the tutorial cases into their own folder. This should make it easier to modify or add tutorials, without having to worry about the regression tests. Furthermore, it is easier for the user to differentiate between tutorials and regression tests (which do not necessarily have to converge or to give physical solutions). I suggest to create a new repository for the mesh files of the tutorial cases next.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/485
https://github.com/su2code/SU2/issues/486:1070,Integrability,rout,routine,1070,"Hello, . when using the option INV_DESIGN_CP = YES, COutput::SetCp_InverseDesign is called to set the pressure difference. There is no problem with the allocations of values when running in serial but some problems arise when running in parallel. I haven't debugged it completely but it seems that the storage of the values of iMarker and iVertex in Point2Vertex gets mixed up by the parallel run. This in turn affects the reading of the TargetCp file (and can be checked by running the simulation in serial and in parallel, they should give different results for the Cp_diff in the history file). Also, if the inverse_design_pressure is defined on a boundary (e.g. a wing) but there are other boundaries of the same kind in the domain (e.g. some walls) these are also considered when computing the pressure difference (with a target pressure equal to 0.0) thus affecting the final value of the objective function. I believe this last problem could be solved by placing something like if (config->GetMarker_All_Designing(iMarker) ) == 1) at appropriate locations in the routine. . However, I am having troubles troubleshooting the first problem.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/486
https://github.com/su2code/SU2/issues/486:989,Modifiability,config,config,989,"Hello, . when using the option INV_DESIGN_CP = YES, COutput::SetCp_InverseDesign is called to set the pressure difference. There is no problem with the allocations of values when running in serial but some problems arise when running in parallel. I haven't debugged it completely but it seems that the storage of the values of iMarker and iVertex in Point2Vertex gets mixed up by the parallel run. This in turn affects the reading of the TargetCp file (and can be checked by running the simulation in serial and in parallel, they should give different results for the Cp_diff in the history file). Also, if the inverse_design_pressure is defined on a boundary (e.g. a wing) but there are other boundaries of the same kind in the domain (e.g. some walls) these are also considered when computing the pressure difference (with a target pressure equal to 0.0) thus affecting the final value of the objective function. I believe this last problem could be solved by placing something like if (config->GetMarker_All_Designing(iMarker) ) == 1) at appropriate locations in the routine. . However, I am having troubles troubleshooting the first problem.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/486
https://github.com/su2code/SU2/issues/487:99,Energy Efficiency,adapt,adaptation,99,"I've encountered a bug where SU2 will get stuck in an infinite loop. I've been trying out the grid adaptation code recently. Tets, rectangles, and triangles all worked fine, but hexahedra threw the code into an infinite loop. Basically, the code is missing the proper code for hexahedra in the `CGridAdaptation::SetSensorElem` function. I've attached the [offending lines 3640-3653](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:601,Energy Efficiency,adapt,adapted,601,"I've encountered a bug where SU2 will get stuck in an infinite loop. I've been trying out the grid adaptation code recently. Tets, rectangles, and triangles all worked fine, but hexahedra threw the code into an infinite loop. Basically, the code is missing the proper code for hexahedra in the `CGridAdaptation::SetSensorElem` function. I've attached the [offending lines 3640-3653](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:757,Energy Efficiency,Sensor,Sensor,757,"I've encountered a bug where SU2 will get stuck in an infinite loop. I've been trying out the grid adaptation code recently. Tets, rectangles, and triangles all worked fine, but hexahedra threw the code into an infinite loop. Basically, the code is missing the proper code for hexahedra in the `CGridAdaptation::SetSensorElem` function. I've attached the [offending lines 3640-3653](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:1485,Energy Efficiency,adapt,adaptation,1485,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:1896,Energy Efficiency,adapt,adaptivity,1896,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:2025,Energy Efficiency,adapt,adaptation,2025,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:2193,Energy Efficiency,adapt,adaptation,2193,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:2262,Energy Efficiency,adapt,adaptive,2262,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:2321,Energy Efficiency,adapt,adaptivity,2321,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:2403,Energy Efficiency,adapt,adaptivity,2403,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:99,Modifiability,adapt,adaptation,99,"I've encountered a bug where SU2 will get stuck in an infinite loop. I've been trying out the grid adaptation code recently. Tets, rectangles, and triangles all worked fine, but hexahedra threw the code into an infinite loop. Basically, the code is missing the proper code for hexahedra in the `CGridAdaptation::SetSensorElem` function. I've attached the [offending lines 3640-3653](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:601,Modifiability,adapt,adapted,601,"I've encountered a bug where SU2 will get stuck in an infinite loop. I've been trying out the grid adaptation code recently. Tets, rectangles, and triangles all worked fine, but hexahedra threw the code into an infinite loop. Basically, the code is missing the proper code for hexahedra in the `CGridAdaptation::SetSensorElem` function. I've attached the [offending lines 3640-3653](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:1485,Modifiability,adapt,adaptation,1485,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:1896,Modifiability,adapt,adaptivity,1896,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:2025,Modifiability,adapt,adaptation,2025,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:2193,Modifiability,adapt,adaptation,2193,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:2262,Modifiability,adapt,adaptive,2262,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:2321,Modifiability,adapt,adaptivity,2321,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/issues/487:2403,Modifiability,adapt,adaptivity,2403,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/487
https://github.com/su2code/SU2/pull/488:44,Integrability,wrap,wrapper,44,"This PR improves the capabilities of the Py wrapper by exposing new members of the driver:. - Extracting information (tag, type, number of vertices, ...) on the different markers involved in the computation.; - Adding more Set/Get functions for vertices values.; - Adding the possibility to customize the computation with non-uniform and unsteady boundary conditions, currently implemented for solid boundary motion (FSI applications) and solid thermal quantities (temperatures or heat fluxes, CHT applications). This could be extended to other type of BC's (e.g. user-defined inlet velocity profile).; - Adding proper reg tests for the Python wrapper (see also PR#19 from TestCases repo that has to merged before.). EDIT: Reg tests still to be committed once PR in TestCases is merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/488
https://github.com/su2code/SU2/pull/488:644,Integrability,wrap,wrapper,644,"This PR improves the capabilities of the Py wrapper by exposing new members of the driver:. - Extracting information (tag, type, number of vertices, ...) on the different markers involved in the computation.; - Adding more Set/Get functions for vertices values.; - Adding the possibility to customize the computation with non-uniform and unsteady boundary conditions, currently implemented for solid boundary motion (FSI applications) and solid thermal quantities (temperatures or heat fluxes, CHT applications). This could be extended to other type of BC's (e.g. user-defined inlet velocity profile).; - Adding proper reg tests for the Python wrapper (see also PR#19 from TestCases repo that has to merged before.). EDIT: Reg tests still to be committed once PR in TestCases is merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/488
https://github.com/su2code/SU2/pull/488:527,Modifiability,extend,extended,527,"This PR improves the capabilities of the Py wrapper by exposing new members of the driver:. - Extracting information (tag, type, number of vertices, ...) on the different markers involved in the computation.; - Adding more Set/Get functions for vertices values.; - Adding the possibility to customize the computation with non-uniform and unsteady boundary conditions, currently implemented for solid boundary motion (FSI applications) and solid thermal quantities (temperatures or heat fluxes, CHT applications). This could be extended to other type of BC's (e.g. user-defined inlet velocity profile).; - Adding proper reg tests for the Python wrapper (see also PR#19 from TestCases repo that has to merged before.). EDIT: Reg tests still to be committed once PR in TestCases is merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/488
https://github.com/su2code/SU2/pull/488:623,Testability,test,tests,623,"This PR improves the capabilities of the Py wrapper by exposing new members of the driver:. - Extracting information (tag, type, number of vertices, ...) on the different markers involved in the computation.; - Adding more Set/Get functions for vertices values.; - Adding the possibility to customize the computation with non-uniform and unsteady boundary conditions, currently implemented for solid boundary motion (FSI applications) and solid thermal quantities (temperatures or heat fluxes, CHT applications). This could be extended to other type of BC's (e.g. user-defined inlet velocity profile).; - Adding proper reg tests for the Python wrapper (see also PR#19 from TestCases repo that has to merged before.). EDIT: Reg tests still to be committed once PR in TestCases is merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/488
https://github.com/su2code/SU2/pull/488:673,Testability,Test,TestCases,673,"This PR improves the capabilities of the Py wrapper by exposing new members of the driver:. - Extracting information (tag, type, number of vertices, ...) on the different markers involved in the computation.; - Adding more Set/Get functions for vertices values.; - Adding the possibility to customize the computation with non-uniform and unsteady boundary conditions, currently implemented for solid boundary motion (FSI applications) and solid thermal quantities (temperatures or heat fluxes, CHT applications). This could be extended to other type of BC's (e.g. user-defined inlet velocity profile).; - Adding proper reg tests for the Python wrapper (see also PR#19 from TestCases repo that has to merged before.). EDIT: Reg tests still to be committed once PR in TestCases is merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/488
https://github.com/su2code/SU2/pull/488:727,Testability,test,tests,727,"This PR improves the capabilities of the Py wrapper by exposing new members of the driver:. - Extracting information (tag, type, number of vertices, ...) on the different markers involved in the computation.; - Adding more Set/Get functions for vertices values.; - Adding the possibility to customize the computation with non-uniform and unsteady boundary conditions, currently implemented for solid boundary motion (FSI applications) and solid thermal quantities (temperatures or heat fluxes, CHT applications). This could be extended to other type of BC's (e.g. user-defined inlet velocity profile).; - Adding proper reg tests for the Python wrapper (see also PR#19 from TestCases repo that has to merged before.). EDIT: Reg tests still to be committed once PR in TestCases is merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/488
https://github.com/su2code/SU2/pull/488:766,Testability,Test,TestCases,766,"This PR improves the capabilities of the Py wrapper by exposing new members of the driver:. - Extracting information (tag, type, number of vertices, ...) on the different markers involved in the computation.; - Adding more Set/Get functions for vertices values.; - Adding the possibility to customize the computation with non-uniform and unsteady boundary conditions, currently implemented for solid boundary motion (FSI applications) and solid thermal quantities (temperatures or heat fluxes, CHT applications). This could be extended to other type of BC's (e.g. user-defined inlet velocity profile).; - Adding proper reg tests for the Python wrapper (see also PR#19 from TestCases repo that has to merged before.). EDIT: Reg tests still to be committed once PR in TestCases is merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/488
https://github.com/su2code/SU2/issues/489:169,Deployability,configurat,configurations,169,"Dear SU2 Team Members,. Greetings! We are very happy to inform you that we are exploring the aerodynamic shape optimization script of SU2 R 5.0.0 (Raven) with different configurations. And we would also like to seek your assistance in connection with the following two issues:. 1. We are not getting any clue on restarting procedure of the optimization process from previously finished cycles. 2. Is there any way for exporting the intermediate / final optimized geometry as 3D CAD model. Thanking you in advance. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/489
https://github.com/su2code/SU2/issues/489:169,Modifiability,config,configurations,169,"Dear SU2 Team Members,. Greetings! We are very happy to inform you that we are exploring the aerodynamic shape optimization script of SU2 R 5.0.0 (Raven) with different configurations. And we would also like to seek your assistance in connection with the following two issues:. 1. We are not getting any clue on restarting procedure of the optimization process from previously finished cycles. 2. Is there any way for exporting the intermediate / final optimized geometry as 3D CAD model. Thanking you in advance. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/489
https://github.com/su2code/SU2/issues/489:111,Performance,optimiz,optimization,111,"Dear SU2 Team Members,. Greetings! We are very happy to inform you that we are exploring the aerodynamic shape optimization script of SU2 R 5.0.0 (Raven) with different configurations. And we would also like to seek your assistance in connection with the following two issues:. 1. We are not getting any clue on restarting procedure of the optimization process from previously finished cycles. 2. Is there any way for exporting the intermediate / final optimized geometry as 3D CAD model. Thanking you in advance. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/489
https://github.com/su2code/SU2/issues/489:340,Performance,optimiz,optimization,340,"Dear SU2 Team Members,. Greetings! We are very happy to inform you that we are exploring the aerodynamic shape optimization script of SU2 R 5.0.0 (Raven) with different configurations. And we would also like to seek your assistance in connection with the following two issues:. 1. We are not getting any clue on restarting procedure of the optimization process from previously finished cycles. 2. Is there any way for exporting the intermediate / final optimized geometry as 3D CAD model. Thanking you in advance. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/489
https://github.com/su2code/SU2/issues/489:453,Performance,optimiz,optimized,453,"Dear SU2 Team Members,. Greetings! We are very happy to inform you that we are exploring the aerodynamic shape optimization script of SU2 R 5.0.0 (Raven) with different configurations. And we would also like to seek your assistance in connection with the following two issues:. 1. We are not getting any clue on restarting procedure of the optimization process from previously finished cycles. 2. Is there any way for exporting the intermediate / final optimized geometry as 3D CAD model. Thanking you in advance. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/489
https://github.com/su2code/SU2/pull/490:304,Energy Efficiency,Adapt,Adapted,304,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/490
https://github.com/su2code/SU2/pull/490:382,Energy Efficiency,sensor,sensor,382,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/490
https://github.com/su2code/SU2/pull/490:396,Energy Efficiency,adapt,adaptive,396,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/490
https://github.com/su2code/SU2/pull/490:304,Modifiability,Adapt,Adapted,304,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/490
https://github.com/su2code/SU2/pull/490:396,Modifiability,adapt,adaptive,396,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/490
https://github.com/su2code/SU2/pull/490:690,Testability,test,test,690,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/490
https://github.com/su2code/SU2/pull/490:751,Testability,test,test,751,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/490
https://github.com/su2code/SU2/pull/490:612,Usability,Simpl,Simple,612,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/490
https://github.com/su2code/SU2/pull/491:132,Availability,error,error,132,"This fixes #369. An extra term is added to the Jacobian for the source term, as suggested by @shaering. Repeating his comment:. The error is in the Jacobian of the destruction term in the k-equation for SST (Beta^* * rho * k * omega). The off-diagonal d/d(rho*omega) term is non-zero. It looks like it was just an omission.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/491
https://github.com/su2code/SU2/pull/492:33,Energy Efficiency,adapt,adaptation,33,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:115,Energy Efficiency,adapt,adapt,115,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:155,Energy Efficiency,adapt,adaptation,155,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:252,Energy Efficiency,adapt,adapt,252,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:311,Energy Efficiency,adapt,adaptivity,311,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:381,Energy Efficiency,adapt,adaptation,381,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:453,Energy Efficiency,adapt,adaptation,453,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:44,Integrability,rout,routine,44,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:33,Modifiability,adapt,adaptation,33,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:115,Modifiability,adapt,adapt,115,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:155,Modifiability,adapt,adaptation,155,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:252,Modifiability,adapt,adapt,252,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:311,Modifiability,adapt,adaptivity,311,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:381,Modifiability,adapt,adaptation,381,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/492:453,Modifiability,adapt,adaptation,453,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/492
https://github.com/su2code/SU2/pull/493:113,Availability,avail,available,113,"This PR fixes a bug in the ADT that was introduced to circumvent the Allgatherv functionality. Allgatherv is now available in SU2_MPI, hence the original code has been restored. Due to this correction the convergence values of the 2D axial stage regression test had to be altered.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/493
https://github.com/su2code/SU2/pull/493:257,Testability,test,test,257,"This PR fixes a bug in the ADT that was introduced to circumvent the Allgatherv functionality. Allgatherv is now available in SU2_MPI, hence the original code has been restored. Due to this correction the convergence values of the 2D axial stage regression test had to be altered.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/493
https://github.com/su2code/SU2/pull/494:24,Performance,optimiz,optimization,24,"Fix to multi-functional optimization, addition of regression test. ; This re-introduces functionality that was previously added in https://github.com/su2code/SU2/pull/385. . (it was accidentally effected by someone else's pull request that appears to have been based on an outdated version of develop - if work you merged ~Feb-July has mysteriously disappeared I can privately point you to the relevant pull request to aid in fixing that)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/494
https://github.com/su2code/SU2/pull/494:61,Testability,test,test,61,"Fix to multi-functional optimization, addition of regression test. ; This re-introduces functionality that was previously added in https://github.com/su2code/SU2/pull/385. . (it was accidentally effected by someone else's pull request that appears to have been based on an outdated version of develop - if work you merged ~Feb-July has mysteriously disappeared I can privately point you to the relevant pull request to aid in fixing that)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/494
https://github.com/su2code/SU2/pull/495:21,Deployability,update,update,21,This is just a small update of the codi/medi submodules to the newest versions.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/495
https://github.com/su2code/SU2/pull/497:88,Modifiability,config,config,88,"Collection of small improvements:; - Discrete Adjoint as default.; - New options in the config file: FROZEN_LIMITER_DISC, FROZEN_VISC_DISC, INCONSISTENT_DISC; - Fixing some issues with the multi objective design.; - Updating Xcode project",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/497
https://github.com/su2code/SU2/pull/500:246,Availability,robust,robust,246,"As described in Issue #431, using `SU2_MSH` for periodic mesh construction can be buggy due to its sorting of nodes. Under certain conditions, nodes can be duplicated and/or missing from the output *.su2 file. This pull request implements a more robust sorting process, where the sorting occurs in the following steps:. 1. Send/receive nodes are explicitly identified; 2. The sorted list is created without any send/receive nodes.; 3. The receive and then send nodes are added to the sorted list. Here's a few comments about the pull request:; + Since this routine is only run once, I felt the usability of std::vector outweighed the computational efficiency of raw arrays.; + I had to create two lists, NewSort and ReverseSort, instead of the original one list (NewSort). That's because two different mappings between node numbers need to occur. In the old code, where the list was sorted by switching elements, the two mappings _should_ have been identical. Since the improved method does not use switching, two lists are necessary.; + There's a lot of memory leaks/uninitialized values when checking this pull request with Valgrind. I checked them, and this pull request doesn't create any _new_ memory issues. Apparently both `SU2_CFD` and `SU2_MSH` have memory issues. #### Verification; Since none of the existing regression tests run `SU2_MSH`, I created a separate case to verify both the bug and the fix. It's a simple 3x3 cube that's periodic in the z-direction. I've attached the files below. Here's the steps:. 1. Run `SU2_MSH MSH.cfg`; 2. Run `SU2_CFD per_CFD_dev.cfg`. Using the existing develop branch, the verification case runs into a segfault when writing the output. This pull request allows the verification case to complete successfully. You can also check the original test case from Issue #431 to verify the bug fix. If any of you know of additional verification tests I could run, then please let me know. Test case: [cube.tar.gz](https://github.com/su2code/SU2/files/1639835/c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/500
https://github.com/su2code/SU2/pull/500:557,Integrability,rout,routine,557,"As described in Issue #431, using `SU2_MSH` for periodic mesh construction can be buggy due to its sorting of nodes. Under certain conditions, nodes can be duplicated and/or missing from the output *.su2 file. This pull request implements a more robust sorting process, where the sorting occurs in the following steps:. 1. Send/receive nodes are explicitly identified; 2. The sorted list is created without any send/receive nodes.; 3. The receive and then send nodes are added to the sorted list. Here's a few comments about the pull request:; + Since this routine is only run once, I felt the usability of std::vector outweighed the computational efficiency of raw arrays.; + I had to create two lists, NewSort and ReverseSort, instead of the original one list (NewSort). That's because two different mappings between node numbers need to occur. In the old code, where the list was sorted by switching elements, the two mappings _should_ have been identical. Since the improved method does not use switching, two lists are necessary.; + There's a lot of memory leaks/uninitialized values when checking this pull request with Valgrind. I checked them, and this pull request doesn't create any _new_ memory issues. Apparently both `SU2_CFD` and `SU2_MSH` have memory issues. #### Verification; Since none of the existing regression tests run `SU2_MSH`, I created a separate case to verify both the bug and the fix. It's a simple 3x3 cube that's periodic in the z-direction. I've attached the files below. Here's the steps:. 1. Run `SU2_MSH MSH.cfg`; 2. Run `SU2_CFD per_CFD_dev.cfg`. Using the existing develop branch, the verification case runs into a segfault when writing the output. This pull request allows the verification case to complete successfully. You can also check the original test case from Issue #431 to verify the bug fix. If any of you know of additional verification tests I could run, then please let me know. Test case: [cube.tar.gz](https://github.com/su2code/SU2/files/1639835/c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/500
https://github.com/su2code/SU2/pull/500:1331,Testability,test,tests,1331,"sing `SU2_MSH` for periodic mesh construction can be buggy due to its sorting of nodes. Under certain conditions, nodes can be duplicated and/or missing from the output *.su2 file. This pull request implements a more robust sorting process, where the sorting occurs in the following steps:. 1. Send/receive nodes are explicitly identified; 2. The sorted list is created without any send/receive nodes.; 3. The receive and then send nodes are added to the sorted list. Here's a few comments about the pull request:; + Since this routine is only run once, I felt the usability of std::vector outweighed the computational efficiency of raw arrays.; + I had to create two lists, NewSort and ReverseSort, instead of the original one list (NewSort). That's because two different mappings between node numbers need to occur. In the old code, where the list was sorted by switching elements, the two mappings _should_ have been identical. Since the improved method does not use switching, two lists are necessary.; + There's a lot of memory leaks/uninitialized values when checking this pull request with Valgrind. I checked them, and this pull request doesn't create any _new_ memory issues. Apparently both `SU2_CFD` and `SU2_MSH` have memory issues. #### Verification; Since none of the existing regression tests run `SU2_MSH`, I created a separate case to verify both the bug and the fix. It's a simple 3x3 cube that's periodic in the z-direction. I've attached the files below. Here's the steps:. 1. Run `SU2_MSH MSH.cfg`; 2. Run `SU2_CFD per_CFD_dev.cfg`. Using the existing develop branch, the verification case runs into a segfault when writing the output. This pull request allows the verification case to complete successfully. You can also check the original test case from Issue #431 to verify the bug fix. If any of you know of additional verification tests I could run, then please let me know. Test case: [cube.tar.gz](https://github.com/su2code/SU2/files/1639835/cube.tar.gz). This fixes #431",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/500
https://github.com/su2code/SU2/pull/500:1791,Testability,test,test,1791,"sing `SU2_MSH` for periodic mesh construction can be buggy due to its sorting of nodes. Under certain conditions, nodes can be duplicated and/or missing from the output *.su2 file. This pull request implements a more robust sorting process, where the sorting occurs in the following steps:. 1. Send/receive nodes are explicitly identified; 2. The sorted list is created without any send/receive nodes.; 3. The receive and then send nodes are added to the sorted list. Here's a few comments about the pull request:; + Since this routine is only run once, I felt the usability of std::vector outweighed the computational efficiency of raw arrays.; + I had to create two lists, NewSort and ReverseSort, instead of the original one list (NewSort). That's because two different mappings between node numbers need to occur. In the old code, where the list was sorted by switching elements, the two mappings _should_ have been identical. Since the improved method does not use switching, two lists are necessary.; + There's a lot of memory leaks/uninitialized values when checking this pull request with Valgrind. I checked them, and this pull request doesn't create any _new_ memory issues. Apparently both `SU2_CFD` and `SU2_MSH` have memory issues. #### Verification; Since none of the existing regression tests run `SU2_MSH`, I created a separate case to verify both the bug and the fix. It's a simple 3x3 cube that's periodic in the z-direction. I've attached the files below. Here's the steps:. 1. Run `SU2_MSH MSH.cfg`; 2. Run `SU2_CFD per_CFD_dev.cfg`. Using the existing develop branch, the verification case runs into a segfault when writing the output. This pull request allows the verification case to complete successfully. You can also check the original test case from Issue #431 to verify the bug fix. If any of you know of additional verification tests I could run, then please let me know. Test case: [cube.tar.gz](https://github.com/su2code/SU2/files/1639835/cube.tar.gz). This fixes #431",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/500
https://github.com/su2code/SU2/pull/500:1886,Testability,test,tests,1886,"sing `SU2_MSH` for periodic mesh construction can be buggy due to its sorting of nodes. Under certain conditions, nodes can be duplicated and/or missing from the output *.su2 file. This pull request implements a more robust sorting process, where the sorting occurs in the following steps:. 1. Send/receive nodes are explicitly identified; 2. The sorted list is created without any send/receive nodes.; 3. The receive and then send nodes are added to the sorted list. Here's a few comments about the pull request:; + Since this routine is only run once, I felt the usability of std::vector outweighed the computational efficiency of raw arrays.; + I had to create two lists, NewSort and ReverseSort, instead of the original one list (NewSort). That's because two different mappings between node numbers need to occur. In the old code, where the list was sorted by switching elements, the two mappings _should_ have been identical. Since the improved method does not use switching, two lists are necessary.; + There's a lot of memory leaks/uninitialized values when checking this pull request with Valgrind. I checked them, and this pull request doesn't create any _new_ memory issues. Apparently both `SU2_CFD` and `SU2_MSH` have memory issues. #### Verification; Since none of the existing regression tests run `SU2_MSH`, I created a separate case to verify both the bug and the fix. It's a simple 3x3 cube that's periodic in the z-direction. I've attached the files below. Here's the steps:. 1. Run `SU2_MSH MSH.cfg`; 2. Run `SU2_CFD per_CFD_dev.cfg`. Using the existing develop branch, the verification case runs into a segfault when writing the output. This pull request allows the verification case to complete successfully. You can also check the original test case from Issue #431 to verify the bug fix. If any of you know of additional verification tests I could run, then please let me know. Test case: [cube.tar.gz](https://github.com/su2code/SU2/files/1639835/cube.tar.gz). This fixes #431",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/500
https://github.com/su2code/SU2/pull/500:1930,Testability,Test,Test,1930,"sing `SU2_MSH` for periodic mesh construction can be buggy due to its sorting of nodes. Under certain conditions, nodes can be duplicated and/or missing from the output *.su2 file. This pull request implements a more robust sorting process, where the sorting occurs in the following steps:. 1. Send/receive nodes are explicitly identified; 2. The sorted list is created without any send/receive nodes.; 3. The receive and then send nodes are added to the sorted list. Here's a few comments about the pull request:; + Since this routine is only run once, I felt the usability of std::vector outweighed the computational efficiency of raw arrays.; + I had to create two lists, NewSort and ReverseSort, instead of the original one list (NewSort). That's because two different mappings between node numbers need to occur. In the old code, where the list was sorted by switching elements, the two mappings _should_ have been identical. Since the improved method does not use switching, two lists are necessary.; + There's a lot of memory leaks/uninitialized values when checking this pull request with Valgrind. I checked them, and this pull request doesn't create any _new_ memory issues. Apparently both `SU2_CFD` and `SU2_MSH` have memory issues. #### Verification; Since none of the existing regression tests run `SU2_MSH`, I created a separate case to verify both the bug and the fix. It's a simple 3x3 cube that's periodic in the z-direction. I've attached the files below. Here's the steps:. 1. Run `SU2_MSH MSH.cfg`; 2. Run `SU2_CFD per_CFD_dev.cfg`. Using the existing develop branch, the verification case runs into a segfault when writing the output. This pull request allows the verification case to complete successfully. You can also check the original test case from Issue #431 to verify the bug fix. If any of you know of additional verification tests I could run, then please let me know. Test case: [cube.tar.gz](https://github.com/su2code/SU2/files/1639835/cube.tar.gz). This fixes #431",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/500
https://github.com/su2code/SU2/pull/500:594,Usability,usab,usability,594,"As described in Issue #431, using `SU2_MSH` for periodic mesh construction can be buggy due to its sorting of nodes. Under certain conditions, nodes can be duplicated and/or missing from the output *.su2 file. This pull request implements a more robust sorting process, where the sorting occurs in the following steps:. 1. Send/receive nodes are explicitly identified; 2. The sorted list is created without any send/receive nodes.; 3. The receive and then send nodes are added to the sorted list. Here's a few comments about the pull request:; + Since this routine is only run once, I felt the usability of std::vector outweighed the computational efficiency of raw arrays.; + I had to create two lists, NewSort and ReverseSort, instead of the original one list (NewSort). That's because two different mappings between node numbers need to occur. In the old code, where the list was sorted by switching elements, the two mappings _should_ have been identical. Since the improved method does not use switching, two lists are necessary.; + There's a lot of memory leaks/uninitialized values when checking this pull request with Valgrind. I checked them, and this pull request doesn't create any _new_ memory issues. Apparently both `SU2_CFD` and `SU2_MSH` have memory issues. #### Verification; Since none of the existing regression tests run `SU2_MSH`, I created a separate case to verify both the bug and the fix. It's a simple 3x3 cube that's periodic in the z-direction. I've attached the files below. Here's the steps:. 1. Run `SU2_MSH MSH.cfg`; 2. Run `SU2_CFD per_CFD_dev.cfg`. Using the existing develop branch, the verification case runs into a segfault when writing the output. This pull request allows the verification case to complete successfully. You can also check the original test case from Issue #431 to verify the bug fix. If any of you know of additional verification tests I could run, then please let me know. Test case: [cube.tar.gz](https://github.com/su2code/SU2/files/1639835/c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/500
https://github.com/su2code/SU2/pull/500:1421,Usability,simpl,simple,1421,"sing `SU2_MSH` for periodic mesh construction can be buggy due to its sorting of nodes. Under certain conditions, nodes can be duplicated and/or missing from the output *.su2 file. This pull request implements a more robust sorting process, where the sorting occurs in the following steps:. 1. Send/receive nodes are explicitly identified; 2. The sorted list is created without any send/receive nodes.; 3. The receive and then send nodes are added to the sorted list. Here's a few comments about the pull request:; + Since this routine is only run once, I felt the usability of std::vector outweighed the computational efficiency of raw arrays.; + I had to create two lists, NewSort and ReverseSort, instead of the original one list (NewSort). That's because two different mappings between node numbers need to occur. In the old code, where the list was sorted by switching elements, the two mappings _should_ have been identical. Since the improved method does not use switching, two lists are necessary.; + There's a lot of memory leaks/uninitialized values when checking this pull request with Valgrind. I checked them, and this pull request doesn't create any _new_ memory issues. Apparently both `SU2_CFD` and `SU2_MSH` have memory issues. #### Verification; Since none of the existing regression tests run `SU2_MSH`, I created a separate case to verify both the bug and the fix. It's a simple 3x3 cube that's periodic in the z-direction. I've attached the files below. Here's the steps:. 1. Run `SU2_MSH MSH.cfg`; 2. Run `SU2_CFD per_CFD_dev.cfg`. Using the existing develop branch, the verification case runs into a segfault when writing the output. This pull request allows the verification case to complete successfully. You can also check the original test case from Issue #431 to verify the bug fix. If any of you know of additional verification tests I could run, then please let me know. Test case: [cube.tar.gz](https://github.com/su2code/SU2/files/1639835/cube.tar.gz). This fixes #431",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/500
https://github.com/su2code/SU2/pull/503:498,Integrability,rout,routines,498,"Piggybacking on pull request #488, this pull request adds the ability to specify the values of the inlet variables for inlet boundary conditions. This includes both the Euler/Navier-Stokes variables as well as the turbulence variables. No new inlet conditions are created; rather, the existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildeconto",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/503
https://github.com/su2code/SU2/pull/503:1047,Integrability,rout,routines,1047,"request adds the ability to specify the values of the inlet variables for inlet boundary conditions. This includes both the Euler/Navier-Stokes variables as well as the turbulence variables. No new inlet conditions are created; rather, the existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildecontour](https://user-images.githubusercontent.co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/503
https://github.com/su2code/SU2/pull/503:105,Modifiability,variab,variables,105,"Piggybacking on pull request #488, this pull request adds the ability to specify the values of the inlet variables for inlet boundary conditions. This includes both the Euler/Navier-Stokes variables as well as the turbulence variables. No new inlet conditions are created; rather, the existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildeconto",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/503
https://github.com/su2code/SU2/pull/503:189,Modifiability,variab,variables,189,"Piggybacking on pull request #488, this pull request adds the ability to specify the values of the inlet variables for inlet boundary conditions. This includes both the Euler/Navier-Stokes variables as well as the turbulence variables. No new inlet conditions are created; rather, the existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildeconto",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/503
https://github.com/su2code/SU2/pull/503:225,Modifiability,variab,variables,225,"Piggybacking on pull request #488, this pull request adds the ability to specify the values of the inlet variables for inlet boundary conditions. This includes both the Euler/Navier-Stokes variables as well as the turbulence variables. No new inlet conditions are created; rather, the existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildeconto",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/503
https://github.com/su2code/SU2/pull/503:941,Modifiability,flexible,flexible,941,"Piggybacking on pull request #488, this pull request adds the ability to specify the values of the inlet variables for inlet boundary conditions. This includes both the Euler/Navier-Stokes variables as well as the turbulence variables. No new inlet conditions are created; rather, the existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildeconto",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/503
https://github.com/su2code/SU2/pull/503:2148,Modifiability,variab,variable,2148,"alues. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildecontour](https://user-images.githubusercontent.com/13340225/35588241-9891e5a4-05c5-11e8-9861-50064b28689e.png); Figure 3: A comparison of the turbulent variable between truncated and full domains. ![nu_tilde_line](https://user-images.githubusercontent.com/13340225/35588249-9d94e3e4-05c5-11e8-9fc6-fbe9e89d144e.png); Figure 4: A comparison of the turbulent variable profiles at x~=1.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/503
https://github.com/su2code/SU2/pull/503:2353,Modifiability,variab,variable,2353,"alues. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildecontour](https://user-images.githubusercontent.com/13340225/35588241-9891e5a4-05c5-11e8-9861-50064b28689e.png); Figure 3: A comparison of the turbulent variable between truncated and full domains. ![nu_tilde_line](https://user-images.githubusercontent.com/13340225/35588249-9d94e3e4-05c5-11e8-9fc6-fbe9e89d144e.png); Figure 4: A comparison of the turbulent variable profiles at x~=1.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/503
https://github.com/su2code/SU2/pull/503:1238,Testability,test,test-case,1238,"he existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildecontour](https://user-images.githubusercontent.com/13340225/35588241-9891e5a4-05c5-11e8-9861-50064b28689e.png); Figure 3: A comparison of the turbulent variable between truncated and full domains. ![nu_tilde_line](https://user-images.githubusercontent.com/13340225/35588249-9d94e3e4-05c5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/503
https://github.com/su2code/SU2/pull/503:1311,Testability,Test,TestCases,1311,"he existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildecontour](https://user-images.githubusercontent.com/13340225/35588241-9891e5a4-05c5-11e8-9861-50064b28689e.png); Figure 3: A comparison of the turbulent variable between truncated and full domains. ![nu_tilde_line](https://user-images.githubusercontent.com/13340225/35588249-9d94e3e4-05c5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/503
https://github.com/su2code/SU2/pull/503:1562,Testability,test,test,1562,"alues. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildecontour](https://user-images.githubusercontent.com/13340225/35588241-9891e5a4-05c5-11e8-9861-50064b28689e.png); Figure 3: A comparison of the turbulent variable between truncated and full domains. ![nu_tilde_line](https://user-images.githubusercontent.com/13340225/35588249-9d94e3e4-05c5-11e8-9fc6-fbe9e89d144e.png); Figure 4: A comparison of the turbulent variable profiles at x~=1.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/503
https://github.com/su2code/SU2/pull/505:1017,Energy Efficiency,adapt,adaption,1017,"h adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/505
https://github.com/su2code/SU2/pull/505:1125,Energy Efficiency,adapt,adaption,1125,"calZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this wo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/505
https://github.com/su2code/SU2/pull/505:1987,Energy Efficiency,energy,energy,1987,"e fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this works fine. I will add it, too, if you like these additions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/505
https://github.com/su2code/SU2/pull/505:349,Integrability,interface,interfaces,349,"This branch adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correct",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/505
https://github.com/su2code/SU2/pull/505:669,Integrability,interface,interface,669,"This branch adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correct",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/505
https://github.com/su2code/SU2/pull/505:866,Integrability,interface,interfaces,866,"This branch adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correct",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/505
https://github.com/su2code/SU2/pull/505:2005,Integrability,rout,routines,2005,"e fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this works fine. I will add it, too, if you like these additions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/505
https://github.com/su2code/SU2/pull/505:790,Modifiability,config,config,790,"This branch adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correct",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/505
https://github.com/su2code/SU2/pull/505:1017,Modifiability,adapt,adaption,1017,"h adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/505
https://github.com/su2code/SU2/pull/505:1125,Modifiability,adapt,adaption,1125,"calZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this wo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/505
https://github.com/su2code/SU2/pull/505:1079,Testability,test,test,1079,"calZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this wo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/505
https://github.com/su2code/SU2/pull/505:1318,Testability,test,test,1318,"e fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this works fine. I will add it, too, if you like these additions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/505
https://github.com/su2code/SU2/pull/505:1386,Testability,test,test,1386,"e fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this works fine. I will add it, too, if you like these additions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/505
https://github.com/su2code/SU2/pull/506:321,Availability,fault,faulty,321,"This PR removes quite a few compiler warnings that you get when you compile with the following flags for the g++ compiler; -g -Wall -Wextra -Wno-unused-parameter -Wno-empty-body. I would advice people to use these flags before merging into develop to keep the code as clean as possible. Warnings are very useful to catch faulty behavior, but if there are already quite a few present in working code, it is easy to miss important ones. With these flags there is still one file that gives warnings in the develop version, namely Common/src/geometry_structure.cpp. The reason is that on line 745 of this file there is the following statement. if ((jPoint > iPoint) // && (CrossProduct >= 0.0). The commented part is new and leads to a few compiler warnings about unused variables. The question therefore is whether the comment should indeed be in there (and hence CrossProduct is not relevant) or this is just something for debugging. In the former case some more cleaning up can be done. In the latter case the comment should be removed again.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/506
https://github.com/su2code/SU2/pull/506:767,Modifiability,variab,variables,767,"This PR removes quite a few compiler warnings that you get when you compile with the following flags for the g++ compiler; -g -Wall -Wextra -Wno-unused-parameter -Wno-empty-body. I would advice people to use these flags before merging into develop to keep the code as clean as possible. Warnings are very useful to catch faulty behavior, but if there are already quite a few present in working code, it is easy to miss important ones. With these flags there is still one file that gives warnings in the develop version, namely Common/src/geometry_structure.cpp. The reason is that on line 745 of this file there is the following statement. if ((jPoint > iPoint) // && (CrossProduct >= 0.0). The commented part is new and leads to a few compiler warnings about unused variables. The question therefore is whether the comment should indeed be in there (and hence CrossProduct is not relevant) or this is just something for debugging. In the former case some more cleaning up can be done. In the latter case the comment should be removed again.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/506
https://github.com/su2code/SU2/pull/507:560,Energy Efficiency,monitor,monitoring,560,"I've noticed while using Valgrind that some of the recent pull requests have introduced a few memory issues. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. I also found a memory issue in a weird corner case with `RefOriginMoment_X`, `_Y`, and `_Z`. If the reference origin is defined exactly once, but no surfaces are marked for monitoring, then `RefOriginMoment_X` (and `_Y` and `_Z`) is set as an empty array. I think that's a bug. That bug creates problems in `CConfig::SetOutput`, (line 4284) where SU2 tries to print out the reference origin.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/507
https://github.com/su2code/SU2/pull/507:304,Modifiability,variab,variables,304,"I've noticed while using Valgrind that some of the recent pull requests have introduced a few memory issues. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. I also found a memory issue in a weird corner case with `RefOriginMoment_X`, `_Y`, and `_Z`. If the reference origin is defined exactly once, but no surfaces are marked for monitoring, then `RefOriginMoment_X` (and `_Y` and `_Z`) is set as an empty array. I think that's a bug. That bug creates problems in `CConfig::SetOutput`, (line 4284) where SU2 tries to print out the reference origin.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/507
https://github.com/su2code/SU2/pull/508:181,Deployability,release,release,181,"Reverts su2code/SU2#507. @clarkpede: while this is absolutely a good thing to fix, unfortunately, it has cause a couple of memory issues that need more time to investigate (we will release v6 tomorrow). We will revert this for now, but let's keep the PR open and clean this up right after the release. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/508
https://github.com/su2code/SU2/pull/508:293,Deployability,release,release,293,"Reverts su2code/SU2#507. @clarkpede: while this is absolutely a good thing to fix, unfortunately, it has cause a couple of memory issues that need more time to investigate (we will release v6 tomorrow). We will revert this for now, but let's keep the PR open and clean this up right after the release. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/508
https://github.com/su2code/SU2/pull/510:432,Modifiability,variab,variables,432,"Here's a follow-up pull request for fixing some lingering memory problems in SU2 v6.0.0. This is the same as PR #507, except I fixed the problem that was making the regression tests fail. For redundancy, I'll repeat a little of PR #507. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. There's also a few other memory issues in v6.0.0 I haven't fixed:. + `RefOriginMoment_X`, `_Y`, and `_Z` can be zero-length arrays in corner cases, and yet the program still tries to read from them.; + `Periodic_Center`, `Periodic_Rotation`, and `Periodic_Translate` are sometimes leaked at the end of the program.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/510
https://github.com/su2code/SU2/pull/510:192,Safety,redund,redundancy,192,"Here's a follow-up pull request for fixing some lingering memory problems in SU2 v6.0.0. This is the same as PR #507, except I fixed the problem that was making the regression tests fail. For redundancy, I'll repeat a little of PR #507. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. There's also a few other memory issues in v6.0.0 I haven't fixed:. + `RefOriginMoment_X`, `_Y`, and `_Z` can be zero-length arrays in corner cases, and yet the program still tries to read from them.; + `Periodic_Center`, `Periodic_Rotation`, and `Periodic_Translate` are sometimes leaked at the end of the program.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/510
https://github.com/su2code/SU2/pull/510:176,Testability,test,tests,176,"Here's a follow-up pull request for fixing some lingering memory problems in SU2 v6.0.0. This is the same as PR #507, except I fixed the problem that was making the regression tests fail. For redundancy, I'll repeat a little of PR #507. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. There's also a few other memory issues in v6.0.0 I haven't fixed:. + `RefOriginMoment_X`, `_Y`, and `_Z` can be zero-length arrays in corner cases, and yet the program still tries to read from them.; + `Periodic_Center`, `Periodic_Rotation`, and `Periodic_Translate` are sometimes leaked at the end of the program.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/510
https://github.com/su2code/SU2/pull/513:385,Availability,down,down,385,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/513
https://github.com/su2code/SU2/pull/513:559,Deployability,update,updated,559,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/513
https://github.com/su2code/SU2/pull/513:77,Integrability,rout,routines,77,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/513
https://github.com/su2code/SU2/pull/513:176,Integrability,rout,routines,176,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/513
https://github.com/su2code/SU2/pull/513:470,Integrability,rout,routines,470,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/513
https://github.com/su2code/SU2/pull/513:636,Integrability,rout,routines,636,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/513
https://github.com/su2code/SU2/pull/513:138,Modifiability,refactor,refactoring,138,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/513
https://github.com/su2code/SU2/pull/513:310,Modifiability,rewrite,rewrite,310,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/513
https://github.com/su2code/SU2/pull/513:203,Performance,bottleneck,bottlenecks,203,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/513
https://github.com/su2code/SU2/pull/513:273,Performance,perform,performance,273,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/513
https://github.com/su2code/SU2/pull/513:982,Testability,test,tested,982,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/513
https://github.com/su2code/SU2/pull/514:1202,Availability,avail,available,1202,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:19,Deployability,upgrade,upgrade,19,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:422,Deployability,integrat,integrated,422,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:609,Deployability,integrat,integration,609,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:917,Deployability,configurat,configuration,917,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:1133,Deployability,update,updated,1133,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:1232,Deployability,continuous,continuous,1232,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:245,Energy Efficiency,energy,energy,245,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:397,Energy Efficiency,Energy,Energy,397,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:422,Integrability,integrat,integrated,422,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:609,Integrability,integrat,integration,609,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:796,Integrability,depend,dependent,796,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:269,Modifiability,variab,variable,269,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:368,Modifiability,variab,variable-based,368,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:520,Modifiability,variab,variable,520,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:736,Modifiability,variab,variable,736,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/pull/514:917,Modifiability,config,configuration,917,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/514
https://github.com/su2code/SU2/issues/515:397,Deployability,continuous,continuous,397,"When running discrete_adjoint.py (or shape_optimization.py with a discrete adjoint method) for the test case steady_inverse_design, the value of the adjoint variables at the first iterations is already O(1e-10) and after a while the following message is printed on screen:. CSysSolve::FGMRES(): system solved by initial guess. This problem does not occur when using other objective functions or a continuous adjoint method. P.S. I am using SU2 v 6.0.0.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/515
https://github.com/su2code/SU2/issues/515:243,Integrability,message,message,243,"When running discrete_adjoint.py (or shape_optimization.py with a discrete adjoint method) for the test case steady_inverse_design, the value of the adjoint variables at the first iterations is already O(1e-10) and after a while the following message is printed on screen:. CSysSolve::FGMRES(): system solved by initial guess. This problem does not occur when using other objective functions or a continuous adjoint method. P.S. I am using SU2 v 6.0.0.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/515
https://github.com/su2code/SU2/issues/515:157,Modifiability,variab,variables,157,"When running discrete_adjoint.py (or shape_optimization.py with a discrete adjoint method) for the test case steady_inverse_design, the value of the adjoint variables at the first iterations is already O(1e-10) and after a while the following message is printed on screen:. CSysSolve::FGMRES(): system solved by initial guess. This problem does not occur when using other objective functions or a continuous adjoint method. P.S. I am using SU2 v 6.0.0.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/515
https://github.com/su2code/SU2/issues/515:99,Testability,test,test,99,"When running discrete_adjoint.py (or shape_optimization.py with a discrete adjoint method) for the test case steady_inverse_design, the value of the adjoint variables at the first iterations is already O(1e-10) and after a while the following message is printed on screen:. CSysSolve::FGMRES(): system solved by initial guess. This problem does not occur when using other objective functions or a continuous adjoint method. P.S. I am using SU2 v 6.0.0.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/515
https://github.com/su2code/SU2/pull/516:876,Performance,load,load,876,"*(Note: I am prototyping a new format for a PR template with this submission. We can set a default template in the repo to help guide new contributors and to make future code reviews easier. Please also comment on this general format/idea or share any suggestions to improve.)*. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR is a joint effort with @clarkpede for specifying inlet profiles from a file within the C++ code. For now, it is nearest neighbor, but interpolation can be added in the future. If no file is present, a template file will be generated for your modification (ASCII file, one row per DOF on each inlet marker). It works in parallel and for any number of inlet markers. It operates similarly to restarts: there is a single file reader in CSolver, a single file writer in COutput, and solver-specific load functions in the child solver classes. Therefore, this structure can be expanded in the future for data on any marker type in any solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #467 ; Interacts with work by @tobadavid @oleburghardt . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/516
https://github.com/su2code/SU2/pull/516:1783,Testability,test,test,1783,"*(Note: I am prototyping a new format for a PR template with this submission. We can set a default template in the repo to help guide new contributors and to make future code reviews easier. Please also comment on this general format/idea or share any suggestions to improve.)*. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR is a joint effort with @clarkpede for specifying inlet profiles from a file within the C++ code. For now, it is nearest neighbor, but interpolation can be added in the future. If no file is present, a template file will be generated for your modification (ASCII file, one row per DOF on each inlet marker). It works in parallel and for any number of inlet markers. It operates similarly to restarts: there is a single file reader in CSolver, a single file writer in COutput, and solver-specific load functions in the child solver classes. Therefore, this structure can be expanded in the future for data on any marker type in any solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #467 ; Interacts with work by @tobadavid @oleburghardt . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/516
https://github.com/su2code/SU2/pull/516:128,Usability,guid,guide,128,"*(Note: I am prototyping a new format for a PR template with this submission. We can set a default template in the repo to help guide new contributors and to make future code reviews easier. Please also comment on this general format/idea or share any suggestions to improve.)*. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR is a joint effort with @clarkpede for specifying inlet profiles from a file within the C++ code. For now, it is nearest neighbor, but interpolation can be added in the future. If no file is present, a template file will be generated for your modification (ASCII file, one row per DOF on each inlet marker). It works in parallel and for any number of inlet markers. It operates similarly to restarts: there is a single file reader in CSolver, a single file writer in COutput, and solver-specific load functions in the child solver classes. Therefore, this structure can be expanded in the future for data on any marker type in any solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #467 ; Interacts with work by @tobadavid @oleburghardt . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/516
https://github.com/su2code/SU2/pull/516:1405,Usability,guid,guide,1405,"*(Note: I am prototyping a new format for a PR template with this submission. We can set a default template in the repo to help guide new contributors and to make future code reviews easier. Please also comment on this general format/idea or share any suggestions to improve.)*. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR is a joint effort with @clarkpede for specifying inlet profiles from a file within the C++ code. For now, it is nearest neighbor, but interpolation can be added in the future. If no file is present, a template file will be generated for your modification (ASCII file, one row per DOF on each inlet marker). It works in parallel and for any number of inlet markers. It operates similarly to restarts: there is a single file reader in CSolver, a single file writer in COutput, and solver-specific load functions in the child solver classes. Therefore, this structure can be expanded in the future for data on any marker type in any solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #467 ; Interacts with work by @tobadavid @oleburghardt . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/516
https://github.com/su2code/SU2/pull/517:867,Testability,test,test,867,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; A couple of memory issues that should be fixed right away in develop. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/517
https://github.com/su2code/SU2/pull/517:489,Usability,guid,guide,489,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; A couple of memory issues that should be fixed right away in develop. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/517
https://github.com/su2code/SU2/pull/518:672,Deployability,deploy,deployment,672,This is a pull request to test the generation of the doxygen documentation. It is currently set up to upload the documentation (i.e. to push to the Doxygen repository) if there is a push to the master or develop branch. For any other branch or pull request it will still run the generation so that we can look for warnings etc. . The documentation will be visible here:. - develop: https://su2code.github.io/Doxygen/develop/html/index.html; - master: https://su2code.github.io/Doxygen/master/html/index.html. Eventually we will add these links (or at least the one to the master) to the website. It uses the new stages feature of travis. In the future we might also add a deployment stage for automating the release process.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/518
https://github.com/su2code/SU2/pull/518:708,Deployability,release,release,708,This is a pull request to test the generation of the doxygen documentation. It is currently set up to upload the documentation (i.e. to push to the Doxygen repository) if there is a push to the master or develop branch. For any other branch or pull request it will still run the generation so that we can look for warnings etc. . The documentation will be visible here:. - develop: https://su2code.github.io/Doxygen/develop/html/index.html; - master: https://su2code.github.io/Doxygen/master/html/index.html. Eventually we will add these links (or at least the one to the master) to the website. It uses the new stages feature of travis. In the future we might also add a deployment stage for automating the release process.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/518
https://github.com/su2code/SU2/pull/518:26,Testability,test,test,26,This is a pull request to test the generation of the doxygen documentation. It is currently set up to upload the documentation (i.e. to push to the Doxygen repository) if there is a push to the master or develop branch. For any other branch or pull request it will still run the generation so that we can look for warnings etc. . The documentation will be visible here:. - develop: https://su2code.github.io/Doxygen/develop/html/index.html; - master: https://su2code.github.io/Doxygen/master/html/index.html. Eventually we will add these links (or at least the one to the master) to the website. It uses the new stages feature of travis. In the future we might also add a deployment stage for automating the release process.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/518
https://github.com/su2code/SU2/pull/520:168,Safety,avoid,avoid,168,Proper restart at each sweep member from the previous member; EXT_ITER from the cfg file is used unless overwritten in script command; More careful folders renaming to avoid inconsistencies in parallel run; Listing case details on the polar-sweep concluding file; Semantic and cosmetic fixes to make pylint less verbal,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/520
https://github.com/su2code/SU2/pull/522:265,Modifiability,config,config,265,"Hi all,; this is a small pull request which includes:; - Updating the names of the structural classes to fit to general code standards.; - Removing functions no longer used.; - Some improvements in the output of FSI problems.; - Minor changes to structural-related config options. Thanks,; Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/522
https://github.com/su2code/SU2/issues/523:215,Modifiability,config,config,215,"Hey.; I have been performing simulations and validating results using SU2. I have successfully carried out 2D cases. However, I am having a hard time while doing 3D cases. ; Can anyone share an example of a 3D case config file dealing with Euler and Navier-Stokes equation?; Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/523
https://github.com/su2code/SU2/issues/523:18,Performance,perform,performing,18,"Hey.; I have been performing simulations and validating results using SU2. I have successfully carried out 2D cases. However, I am having a hard time while doing 3D cases. ; Can anyone share an example of a 3D case config file dealing with Euler and Navier-Stokes equation?; Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/523
https://github.com/su2code/SU2/issues/523:45,Security,validat,validating,45,"Hey.; I have been performing simulations and validating results using SU2. I have successfully carried out 2D cases. However, I am having a hard time while doing 3D cases. ; Can anyone share an example of a 3D case config file dealing with Euler and Navier-Stokes equation?; Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/523
https://github.com/su2code/SU2/issues/524:326,Deployability,configurat,configuration,326,"Hi all,; I'm experiencing some issues with travis lately, not only with time-outs (already discussed a few times), but also with this message:. _No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself._. _Check the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received; The build has been terminated_. It appears to happen randomly, and I noticed that this happened as well to the latest develop build. Anyone that could give any input on this matter?. Thanks,; Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/524
https://github.com/su2code/SU2/issues/524:134,Integrability,message,message,134,"Hi all,; I'm experiencing some issues with travis lately, not only with time-outs (already discussed a few times), but also with this message:. _No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself._. _Check the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received; The build has been terminated_. It appears to happen randomly, and I noticed that this happened as well to the latest develop build. Anyone that could give any input on this matter?. Thanks,; Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/524
https://github.com/su2code/SU2/issues/524:326,Modifiability,config,configuration,326,"Hi all,; I'm experiencing some issues with travis lately, not only with time-outs (already discussed a few times), but also with this message:. _No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself._. _Check the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received; The build has been terminated_. It appears to happen randomly, and I noticed that this happened as well to the latest develop build. Anyone that could give any input on this matter?. Thanks,; Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/524
https://github.com/su2code/SU2/pull/525:157,Availability,mainten,maintenance,157,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is v6.0.1, which contains bug fixes, memory clean up, and maintenance. This will be tagged as a release once the tests pass. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #499. Closes #459. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/525
https://github.com/su2code/SU2/pull/525:195,Deployability,release,release,195,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is v6.0.1, which contains bug fixes, memory clean up, and maintenance. This will be tagged as a release once the tests pass. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #499. Closes #459. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/525
https://github.com/su2code/SU2/pull/525:212,Testability,test,tests,212,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is v6.0.1, which contains bug fixes, memory clean up, and maintenance. This will be tagged as a release once the tests pass. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #499. Closes #459. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/525
https://github.com/su2code/SU2/pull/525:950,Testability,test,test,950,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is v6.0.1, which contains bug fixes, memory clean up, and maintenance. This will be tagged as a release once the tests pass. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #499. Closes #459. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/525
https://github.com/su2code/SU2/pull/525:572,Usability,guid,guide,572,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is v6.0.1, which contains bug fixes, memory clean up, and maintenance. This will be tagged as a release once the tests pass. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #499. Closes #459. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/525
https://github.com/su2code/SU2/issues/526:61,Availability,avail,available,61,"Hello,. I have a hyperthreaded 6-core machine (12 processors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/526
https://github.com/su2code/SU2/issues/526:959,Availability,error,error,959,"ssors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus -np 12 SU2_CFD turb_ONERAM6.cfg`; which seems to work ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/526
https://github.com/su2code/SU2/issues/526:1073,Availability,avail,available,1073,"ssors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus -np 12 SU2_CFD turb_ONERAM6.cfg`; which seems to work ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/526
https://github.com/su2code/SU2/issues/526:1263,Availability,avail,available,1263,"parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus -np 12 SU2_CFD turb_ONERAM6.cfg`; which seems to work ok. Is there any way to incorporate this into parallel_computation.py?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/526
https://github.com/su2code/SU2/issues/526:1426,Availability,avail,availalbe,1426,"parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus -np 12 SU2_CFD turb_ONERAM6.cfg`; which seems to work ok. Is there any way to incorporate this into parallel_computation.py?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/526
https://github.com/su2code/SU2/issues/526:634,Integrability,interface,interface,634,"Hello,. I have a hyperthreaded 6-core machine (12 processors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/526
https://github.com/su2code/SU2/issues/526:732,Integrability,interface,interface,732,"Hello,. I have a hyperthreaded 6-core machine (12 processors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/526
https://github.com/su2code/SU2/issues/526:789,Integrability,message,message,789,"Hello,. I have a hyperthreaded 6-core machine (12 processors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/526
https://github.com/su2code/SU2/issues/526:587,Modifiability,config,config,587,"Hello,. I have a hyperthreaded 6-core machine (12 processors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/526
https://github.com/su2code/SU2/issues/526:189,Testability,Test,TestCases,189,"Hello,. I have a hyperthreaded 6-core machine (12 processors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/526
https://github.com/su2code/SU2/issues/526:842,Testability,Test,TestCases,842,"Hello,. I have a hyperthreaded 6-core machine (12 processors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/526
https://github.com/su2code/SU2/issues/526:1951,Testability,Test,TestCases,1951,"parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus -np 12 SU2_CFD turb_ONERAM6.cfg`; which seems to work ok. Is there any way to incorporate this into parallel_computation.py?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/526
https://github.com/su2code/SU2/pull/527:983,Testability,test,test,983,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Added finite volume discretization for Poisson problem that I am merging into a new branch for the pressure-based system that I will be working on. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Edwin van der Weide at University of Twente. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; Most of the test cases I have are analytical problems and have not added them here.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/527
https://github.com/su2code/SU2/pull/527:1055,Testability,test,test,1055,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Added finite volume discretization for Poisson problem that I am merging into a new branch for the pressure-based system that I will be working on. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Edwin van der Weide at University of Twente. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; Most of the test cases I have are analytical problems and have not added them here.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/527
https://github.com/su2code/SU2/pull/527:605,Usability,guid,guide,605,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Added finite volume discretization for Poisson problem that I am merging into a new branch for the pressure-based system that I will be working on. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Edwin van der Weide at University of Twente. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; Most of the test cases I have are analytical problems and have not added them here.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/527
https://github.com/su2code/SU2/pull/528:1381,Energy Efficiency,adapt,adapted,1381,"il now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/528
https://github.com/su2code/SU2/pull/528:516,Integrability,interface,interface,516,"## Proposed Changes; This pull request is the first of a series of improvements I plan to do in the code, which aim to improve the code readibility and remove some bottlenecks in terms of abstraction, particularly regarding the input/output. At this time, I have removed some inconsistencies in the definition of the Zone structure, by incorporating the concept of “Instances” to the code. Until now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers wil",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/528
https://github.com/su2code/SU2/pull/528:1137,Modifiability,config,config,1137,"terms of abstraction, particularly regarding the input/output. At this time, I have removed some inconsistencies in the definition of the Zone structure, by incorporating the concept of “Instances” to the code. Until now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wal",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/528
https://github.com/su2code/SU2/pull/528:1381,Modifiability,adapt,adapted,1381,"il now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/528
https://github.com/su2code/SU2/pull/528:164,Performance,bottleneck,bottlenecks,164,"## Proposed Changes; This pull request is the first of a series of improvements I plan to do in the code, which aim to improve the code readibility and remove some bottlenecks in terms of abstraction, particularly regarding the input/output. At this time, I have removed some inconsistencies in the definition of the Zone structure, by incorporating the concept of “Instances” to the code. Until now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers wil",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/528
https://github.com/su2code/SU2/pull/528:1558,Testability,test,tests,1558,"il now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/528
https://github.com/su2code/SU2/pull/528:2335,Testability,test,test,2335,"il now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/528
https://github.com/su2code/SU2/pull/528:1172,Usability,clear,clear,1172,"terms of abstraction, particularly regarding the input/output. At this time, I have removed some inconsistencies in the definition of the Zone structure, by incorporating the concept of “Instances” to the code. Until now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wal",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/528
https://github.com/su2code/SU2/pull/528:1957,Usability,guid,guide,1957,"il now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/528
https://github.com/su2code/SU2/issues/529:287,Availability,error,errors,287,"This issue concerns the index `iVertex` that appears in the `CDriver` classes, defined in *SU2\_CFD/src/python_wrapper_structure.cpp* (rather, what was formerly *SU2\_CFD/src/driver_structure.cpp* in 5.0.0). Due to `iVertex` being declared as an `unsigned short`, one runs into overflow errors when more than 65535 surface nodes are ""owned"" by a single process (not uncommon for larger models). . Declarations of `iVertex` as `unsigned short` may perhaps be more appropriate as `unsigned long` ?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/529
https://github.com/su2code/SU2/pull/530:32,Deployability,update,update,32,"## Proposed Changes; This is an update of the feature_Wall_Functions. In fact, it is only a minor contribution to the original implementation by @economon based on the article ""Wall Function Boundary Conditions Including Heat Transfer and Compressibility""; ; ## Related Work; The original implementation was 99% done but, it was not working because of ; - two typos on the original article (eq. 11 and eq. 16). ; - not accounting for a negative nu_tilde (very small value... but, negative). ; - not setting tau_wall to -1 on all the BC but non-slip ones. Apart from those changes, a Newton method has been introduced to compute nu_tilde (it would be important to do the same with the tau_wall computation... it will be done -time depending-), some minor renaming of the functions has been introduced as well as the use of MARKER_WALL_FUNCTIONS (implemented after the original implementation). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/530
https://github.com/su2code/SU2/pull/530:730,Integrability,depend,depending,730,"## Proposed Changes; This is an update of the feature_Wall_Functions. In fact, it is only a minor contribution to the original implementation by @economon based on the article ""Wall Function Boundary Conditions Including Heat Transfer and Compressibility""; ; ## Related Work; The original implementation was 99% done but, it was not working because of ; - two typos on the original article (eq. 11 and eq. 16). ; - not accounting for a negative nu_tilde (very small value... but, negative). ; - not setting tau_wall to -1 on all the BC but non-slip ones. Apart from those changes, a Newton method has been introduced to compute nu_tilde (it would be important to do the same with the tau_wall computation... it will be done -time depending-), some minor renaming of the functions has been introduced as well as the use of MARKER_WALL_FUNCTIONS (implemented after the original implementation). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/530
https://github.com/su2code/SU2/pull/530:1203,Testability,test,test,1203,"## Proposed Changes; This is an update of the feature_Wall_Functions. In fact, it is only a minor contribution to the original implementation by @economon based on the article ""Wall Function Boundary Conditions Including Heat Transfer and Compressibility""; ; ## Related Work; The original implementation was 99% done but, it was not working because of ; - two typos on the original article (eq. 11 and eq. 16). ; - not accounting for a negative nu_tilde (very small value... but, negative). ; - not setting tau_wall to -1 on all the BC but non-slip ones. Apart from those changes, a Newton method has been introduced to compute nu_tilde (it would be important to do the same with the tau_wall computation... it will be done -time depending-), some minor renaming of the functions has been introduced as well as the use of MARKER_WALL_FUNCTIONS (implemented after the original implementation). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/530
https://github.com/su2code/SU2/issues/531:36,Availability,error,error,36,"Hello,. I'm experiencing an unclear error trying to launch the fsi_computation.py of the **SU2 develop branch**. From the command line, launching:. `mpirun -np XX fsi_computation.py -f FSICoupler_config.cfg --parallel`. with XX number of process (I tried both with 1 and more), I get the error:; > ERROR : You are trying to initialize MPI with a serial build of the wrapper. Please, remove the --parallel option that is incompatible with a serial build. I'm sure my wrapper has been built in parallel, as I used the configure options suggested in ; [https://su2code.github.io/docs/Python-Wrapper-Build/](url); Plus, I'm doing exactly the same as done using the old branch **feature_pyWrapper** which, according to my old issue:; [https://github.com/su2code/SU2/issues/449#issuecomment-333879558](url); should have been merged to the develop branch.; Is this a code problem or I'm doing something wrong? (Am I referring to the correct branch?). Thanks in advance for the suggestions. EDIT: more in details the exception raised is . > ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError('__init__() takes exactly 6 arguments (5 given)',))",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/531
https://github.com/su2code/SU2/issues/531:288,Availability,error,error,288,"Hello,. I'm experiencing an unclear error trying to launch the fsi_computation.py of the **SU2 develop branch**. From the command line, launching:. `mpirun -np XX fsi_computation.py -f FSICoupler_config.cfg --parallel`. with XX number of process (I tried both with 1 and more), I get the error:; > ERROR : You are trying to initialize MPI with a serial build of the wrapper. Please, remove the --parallel option that is incompatible with a serial build. I'm sure my wrapper has been built in parallel, as I used the configure options suggested in ; [https://su2code.github.io/docs/Python-Wrapper-Build/](url); Plus, I'm doing exactly the same as done using the old branch **feature_pyWrapper** which, according to my old issue:; [https://github.com/su2code/SU2/issues/449#issuecomment-333879558](url); should have been merged to the develop branch.; Is this a code problem or I'm doing something wrong? (Am I referring to the correct branch?). Thanks in advance for the suggestions. EDIT: more in details the exception raised is . > ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError('__init__() takes exactly 6 arguments (5 given)',))",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/531
https://github.com/su2code/SU2/issues/531:298,Availability,ERROR,ERROR,298,"Hello,. I'm experiencing an unclear error trying to launch the fsi_computation.py of the **SU2 develop branch**. From the command line, launching:. `mpirun -np XX fsi_computation.py -f FSICoupler_config.cfg --parallel`. with XX number of process (I tried both with 1 and more), I get the error:; > ERROR : You are trying to initialize MPI with a serial build of the wrapper. Please, remove the --parallel option that is incompatible with a serial build. I'm sure my wrapper has been built in parallel, as I used the configure options suggested in ; [https://su2code.github.io/docs/Python-Wrapper-Build/](url); Plus, I'm doing exactly the same as done using the old branch **feature_pyWrapper** which, according to my old issue:; [https://github.com/su2code/SU2/issues/449#issuecomment-333879558](url); should have been merged to the develop branch.; Is this a code problem or I'm doing something wrong? (Am I referring to the correct branch?). Thanks in advance for the suggestions. EDIT: more in details the exception raised is . > ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError('__init__() takes exactly 6 arguments (5 given)',))",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/531
https://github.com/su2code/SU2/issues/531:366,Integrability,wrap,wrapper,366,"Hello,. I'm experiencing an unclear error trying to launch the fsi_computation.py of the **SU2 develop branch**. From the command line, launching:. `mpirun -np XX fsi_computation.py -f FSICoupler_config.cfg --parallel`. with XX number of process (I tried both with 1 and more), I get the error:; > ERROR : You are trying to initialize MPI with a serial build of the wrapper. Please, remove the --parallel option that is incompatible with a serial build. I'm sure my wrapper has been built in parallel, as I used the configure options suggested in ; [https://su2code.github.io/docs/Python-Wrapper-Build/](url); Plus, I'm doing exactly the same as done using the old branch **feature_pyWrapper** which, according to my old issue:; [https://github.com/su2code/SU2/issues/449#issuecomment-333879558](url); should have been merged to the develop branch.; Is this a code problem or I'm doing something wrong? (Am I referring to the correct branch?). Thanks in advance for the suggestions. EDIT: more in details the exception raised is . > ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError('__init__() takes exactly 6 arguments (5 given)',))",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/531
https://github.com/su2code/SU2/issues/531:466,Integrability,wrap,wrapper,466,"Hello,. I'm experiencing an unclear error trying to launch the fsi_computation.py of the **SU2 develop branch**. From the command line, launching:. `mpirun -np XX fsi_computation.py -f FSICoupler_config.cfg --parallel`. with XX number of process (I tried both with 1 and more), I get the error:; > ERROR : You are trying to initialize MPI with a serial build of the wrapper. Please, remove the --parallel option that is incompatible with a serial build. I'm sure my wrapper has been built in parallel, as I used the configure options suggested in ; [https://su2code.github.io/docs/Python-Wrapper-Build/](url); Plus, I'm doing exactly the same as done using the old branch **feature_pyWrapper** which, according to my old issue:; [https://github.com/su2code/SU2/issues/449#issuecomment-333879558](url); should have been merged to the develop branch.; Is this a code problem or I'm doing something wrong? (Am I referring to the correct branch?). Thanks in advance for the suggestions. EDIT: more in details the exception raised is . > ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError('__init__() takes exactly 6 arguments (5 given)',))",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/531
https://github.com/su2code/SU2/issues/531:588,Integrability,Wrap,Wrapper-Build,588,"Hello,. I'm experiencing an unclear error trying to launch the fsi_computation.py of the **SU2 develop branch**. From the command line, launching:. `mpirun -np XX fsi_computation.py -f FSICoupler_config.cfg --parallel`. with XX number of process (I tried both with 1 and more), I get the error:; > ERROR : You are trying to initialize MPI with a serial build of the wrapper. Please, remove the --parallel option that is incompatible with a serial build. I'm sure my wrapper has been built in parallel, as I used the configure options suggested in ; [https://su2code.github.io/docs/Python-Wrapper-Build/](url); Plus, I'm doing exactly the same as done using the old branch **feature_pyWrapper** which, according to my old issue:; [https://github.com/su2code/SU2/issues/449#issuecomment-333879558](url); should have been merged to the develop branch.; Is this a code problem or I'm doing something wrong? (Am I referring to the correct branch?). Thanks in advance for the suggestions. EDIT: more in details the exception raised is . > ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError('__init__() takes exactly 6 arguments (5 given)',))",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/531
https://github.com/su2code/SU2/issues/531:516,Modifiability,config,configure,516,"Hello,. I'm experiencing an unclear error trying to launch the fsi_computation.py of the **SU2 develop branch**. From the command line, launching:. `mpirun -np XX fsi_computation.py -f FSICoupler_config.cfg --parallel`. with XX number of process (I tried both with 1 and more), I get the error:; > ERROR : You are trying to initialize MPI with a serial build of the wrapper. Please, remove the --parallel option that is incompatible with a serial build. I'm sure my wrapper has been built in parallel, as I used the configure options suggested in ; [https://su2code.github.io/docs/Python-Wrapper-Build/](url); Plus, I'm doing exactly the same as done using the old branch **feature_pyWrapper** which, according to my old issue:; [https://github.com/su2code/SU2/issues/449#issuecomment-333879558](url); should have been merged to the develop branch.; Is this a code problem or I'm doing something wrong? (Am I referring to the correct branch?). Thanks in advance for the suggestions. EDIT: more in details the exception raised is . > ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError('__init__() takes exactly 6 arguments (5 given)',))",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/531
https://github.com/su2code/SU2/pull/532:267,Energy Efficiency,adapt,adaptive,267,"The equations previously did not match the paper by Travin et al, and; are corrected in this commit. ## Proposed Changes; The hybrid upwind/central blending introduced for DES has the option to use the blending by Travin _et al._ (2002). It's referred to as the ""NTS adaptive"" blending or the ""NTS"" blending for short, and was labeled as a ""low dissipation function"". But the what's implemented in the code doesn't match the paper, and it doesn't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/pull/532:267,Modifiability,adapt,adaptive,267,"The equations previously did not match the paper by Travin et al, and; are corrected in this commit. ## Proposed Changes; The hybrid upwind/central blending introduced for DES has the option to use the blending by Travin _et al._ (2002). It's referred to as the ""NTS adaptive"" blending or the ""NTS"" blending for short, and was labeled as a ""low dissipation function"". But the what's implemented in the code doesn't match the paper, and it doesn't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/pull/532:1033,Modifiability,variab,variables,1033," in this commit. ## Proposed Changes; The hybrid upwind/central blending introduced for DES has the option to use the blending by Travin _et al._ (2002). It's referred to as the ""NTS adaptive"" blending or the ""NTS"" blending for short, and was labeled as a ""low dissipation function"". But the what's implemented in the code doesn't match the paper, and it doesn't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/pull/532:1088,Modifiability,variab,variable,1088," in this commit. ## Proposed Changes; The hybrid upwind/central blending introduced for DES has the option to use the blending by Travin _et al._ (2002). It's referred to as the ""NTS adaptive"" blending or the ""NTS"" blending for short, and was labeled as a ""low dissipation function"". But the what's implemented in the code doesn't match the paper, and it doesn't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/pull/532:1422,Modifiability,variab,variable,1422,"n't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop br",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/pull/532:1694,Modifiability,variab,variable,1694,":. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demons",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/pull/532:1904,Security,validat,validation,1904,"the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/pull/532:2040,Security,validat,validation,2040,"the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/pull/532:1889,Testability,test,tests,1889,"the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/pull/532:2189,Testability,test,tests,2189,"the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/pull/532:2260,Testability,test,test,2260,"the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/pull/532:2682,Testability,test,test,2682,"the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/pull/532:1172,Usability,simpl,simply,1172,"ES has the option to use the blending by Travin _et al._ (2002). It's referred to as the ""NTS adaptive"" blending or the ""NTS"" blending for short, and was labeled as a ""low dissipation function"". But the what's implemented in the code doesn't match the paper, and it doesn't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoM",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/pull/532:1800,Usability,feedback,feedback,1800,"the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/532
https://github.com/su2code/SU2/issues/533:1936,Availability,recover,recovered,1936,"several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converged results on CFD++. Any help or ideas would be appreciated.; Many thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/533
https://github.com/su2code/SU2/issues/533:2056,Availability,recover,recovered,2056,"several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converged results on CFD++. Any help or ideas would be appreciated.; Many thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/533
https://github.com/su2code/SU2/issues/533:1434,Energy Efficiency,Green,Green-Gauss,1434,"0.27 and the Cd is negative. Here follows a summary of what I have done. I have used several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converge",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/533
https://github.com/su2code/SU2/issues/533:1276,Performance,tune,tune,1276,"0.27 and the Cd is negative. Here follows a summary of what I have done. I have used several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converge",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/533
https://github.com/su2code/SU2/issues/533:1936,Safety,recover,recovered,1936,"several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converged results on CFD++. Any help or ideas would be appreciated.; Many thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/533
https://github.com/su2code/SU2/issues/533:2056,Safety,recover,recovered,2056,"several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converged results on CFD++. Any help or ideas would be appreciated.; Many thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/533
https://github.com/su2code/SU2/issues/533:1721,Testability,test,test,1721,"several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converged results on CFD++. Any help or ideas would be appreciated.; Many thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/533
https://github.com/su2code/SU2/issues/533:958,Usability,usab,usable,958,"Dear SU2 developers and users,. I am running RANS simulations around a typical aircraft wing (EBW in the following) and I am facing some issues. Here are the flight conditions:; - Mach number: 0.78; - Temperature = ~217 K; - Reynolds number: ~19 millions; - AoA = 0°. At these conditions, the EBW should produce a lift coefficient between [0.4;0.5].; However, when SU2 converges, the Cl is about 0.27 and the Cd is negative. Here follows a summary of what I have done. I have used several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/533
https://github.com/su2code/SU2/issues/534:67,Testability,test,test,67,"Problem description:. Recently I am trying to set up a very simple test case for the 2D mixing layer in a square block with structured mesh.; On the top half, air flows to right and bottom half is opposite, initially there is only velocity difference between upper and lower flow. (i expect Ux_top = -Ux_bot = 10 m/s, Uy_top = Uy_bot = 0) ; But I could not figure out how to set up my Boundary Conditions and Unsteady option in .cfg file properly.; Could anyone help me or give some suggestion on set up for Unsteady setting.; (BTW I also have trouble to control the unsteady output, there are a lot of output file for surface flow which in fact is not necessary for my case, anyone know how to set the output option so that it is not outputted at all?). In fact I build up two rectangle blocks with one inner boundary surface, as show below; ------------------top------------------; | | ; inlet_top outlet_top; | | ; ------------------inner----------------; | | ; outlet_bot inlet_bot; | | ; ------------------bot------------------. % -------------------- BOUNDARY CONDITION DEFINITION --------------------------%; %; % Euler wall boundary marker(s) (NONE = no marker); MARKER_EULER= ( top, bot ); %; % Internal boundary marker(s) e.g. no boundary condition (NONE = no marker); MARKER_INTERNAL= ( inner ); %; % Inlet boundary type (TOTAL_CONDITIONS, MASS_FLOW); INLET_TYPE= TOTAL_CONDITIONS; %; MARKER_INLET= ( inlet_top, 273.2, 101325, 1.0, 0.0, 0.0, inlet_bot, 273.2, 101325, -1.0, 0.0, 0.0 ); %; % Outlet boundary marker(s) (NONE = no marker); % Format: ( outlet marker, back pressure (static), ... ); MARKER_OUTLET= ( outlet_top, 101325, outlet_bot, 101325 )",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/534
https://github.com/su2code/SU2/issues/534:60,Usability,simpl,simple,60,"Problem description:. Recently I am trying to set up a very simple test case for the 2D mixing layer in a square block with structured mesh.; On the top half, air flows to right and bottom half is opposite, initially there is only velocity difference between upper and lower flow. (i expect Ux_top = -Ux_bot = 10 m/s, Uy_top = Uy_bot = 0) ; But I could not figure out how to set up my Boundary Conditions and Unsteady option in .cfg file properly.; Could anyone help me or give some suggestion on set up for Unsteady setting.; (BTW I also have trouble to control the unsteady output, there are a lot of output file for surface flow which in fact is not necessary for my case, anyone know how to set the output option so that it is not outputted at all?). In fact I build up two rectangle blocks with one inner boundary surface, as show below; ------------------top------------------; | | ; inlet_top outlet_top; | | ; ------------------inner----------------; | | ; outlet_bot inlet_bot; | | ; ------------------bot------------------. % -------------------- BOUNDARY CONDITION DEFINITION --------------------------%; %; % Euler wall boundary marker(s) (NONE = no marker); MARKER_EULER= ( top, bot ); %; % Internal boundary marker(s) e.g. no boundary condition (NONE = no marker); MARKER_INTERNAL= ( inner ); %; % Inlet boundary type (TOTAL_CONDITIONS, MASS_FLOW); INLET_TYPE= TOTAL_CONDITIONS; %; MARKER_INLET= ( inlet_top, 273.2, 101325, 1.0, 0.0, 0.0, inlet_bot, 273.2, 101325, -1.0, 0.0, 0.0 ); %; % Outlet boundary marker(s) (NONE = no marker); % Format: ( outlet marker, back pressure (static), ... ); MARKER_OUTLET= ( outlet_top, 101325, outlet_bot, 101325 )",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/534
https://github.com/su2code/SU2/pull/535:149,Availability,error,error,149,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; * More strict SU2_DEF error checking; * Improved SURFACE_FILE mode for SU2_DEF for external parameterizations (plus new regression); * New SCALE_GRID, TRANSLATE_GRID, and ROTATE_GRID options for SU2_DEF for quick volume mesh transformations (separated from the SCALE, TRANSLATION, ROTATION, design variables); * Bug fixes for the incompressible solver; * More consistent naming in the incompressible solver (ArtComp -> Inc, ROE -> FDS); * Removes warnings not already fixed by PR #528 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #134. Resolves #151. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/535
https://github.com/su2code/SU2/pull/535:219,Modifiability,parameteriz,parameterizations,219,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; * More strict SU2_DEF error checking; * Improved SURFACE_FILE mode for SU2_DEF for external parameterizations (plus new regression); * New SCALE_GRID, TRANSLATE_GRID, and ROTATE_GRID options for SU2_DEF for quick volume mesh transformations (separated from the SCALE, TRANSLATION, ROTATION, design variables); * Bug fixes for the incompressible solver; * More consistent naming in the incompressible solver (ArtComp -> Inc, ROE -> FDS); * Removes warnings not already fixed by PR #528 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #134. Resolves #151. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/535
https://github.com/su2code/SU2/pull/535:425,Modifiability,variab,variables,425,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; * More strict SU2_DEF error checking; * Improved SURFACE_FILE mode for SU2_DEF for external parameterizations (plus new regression); * New SCALE_GRID, TRANSLATE_GRID, and ROTATE_GRID options for SU2_DEF for quick volume mesh transformations (separated from the SCALE, TRANSLATION, ROTATION, design variables); * Bug fixes for the incompressible solver; * More consistent naming in the incompressible solver (ArtComp -> Inc, ROE -> FDS); * Removes warnings not already fixed by PR #528 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #134. Resolves #151. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/535
https://github.com/su2code/SU2/pull/535:1342,Testability,test,test,1342,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; * More strict SU2_DEF error checking; * Improved SURFACE_FILE mode for SU2_DEF for external parameterizations (plus new regression); * New SCALE_GRID, TRANSLATE_GRID, and ROTATE_GRID options for SU2_DEF for quick volume mesh transformations (separated from the SCALE, TRANSLATION, ROTATION, design variables); * Bug fixes for the incompressible solver; * More consistent naming in the incompressible solver (ArtComp -> Inc, ROE -> FDS); * Removes warnings not already fixed by PR #528 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #134. Resolves #151. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/535
https://github.com/su2code/SU2/pull/535:964,Usability,guid,guide,964,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; * More strict SU2_DEF error checking; * Improved SURFACE_FILE mode for SU2_DEF for external parameterizations (plus new regression); * New SCALE_GRID, TRANSLATE_GRID, and ROTATE_GRID options for SU2_DEF for quick volume mesh transformations (separated from the SCALE, TRANSLATION, ROTATION, design variables); * Bug fixes for the incompressible solver; * More consistent naming in the incompressible solver (ArtComp -> Inc, ROE -> FDS); * Removes warnings not already fixed by PR #528 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #134. Resolves #151. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/535
https://github.com/su2code/SU2/issues/537:7,Availability,down,downloaded,7,I have downloaded SU2v6.0 on website. How can I use the average option in config files ? SU2v6.0 only have one config file about DDES named ddes_flatplate.cfg without the average option,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/537
https://github.com/su2code/SU2/issues/537:74,Modifiability,config,config,74,I have downloaded SU2v6.0 on website. How can I use the average option in config files ? SU2v6.0 only have one config file about DDES named ddes_flatplate.cfg without the average option,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/537
https://github.com/su2code/SU2/issues/537:111,Modifiability,config,config,111,I have downloaded SU2v6.0 on website. How can I use the average option in config files ? SU2v6.0 only have one config file about DDES named ddes_flatplate.cfg without the average option,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/537
https://github.com/su2code/SU2/pull/538:1491,Testability,test,test,1491,"## Proposed Changes; This implementation allows the connection of an inlet surface with an outlet surface (e.g. to simulate internal channels inside a model). In order to do so, it has been necessary to create an option OUTLET_TYPE that will be used in the future (e.g. to add a mass flow driver for the outlet - currently only static pressure is implemented - ). To sum up, to connect an inlet with an outlet you should type the following:. % Inlet boundary type (TOTAL_CONDITIONS, MASS_FLOW, SURFACE_OUTLET); INLET_TYPE= SURFACE_OUTLET; % Outlet boundary type (PRESSURE_OUTLET, SURFACE_INLET); OUTLET_TYPE= SURFACE_INLET. In the future, we should be able to specify pressure losses inside the ""pipe"" that connect the surfaces.; ; ## Related Work; This is a new implementation that solves passive flow control problems where we are not interested in creating a complicated mesh inside the main volume to define the internal channels/pipes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/538
https://github.com/su2code/SU2/pull/538:1113,Usability,guid,guide,1113,"## Proposed Changes; This implementation allows the connection of an inlet surface with an outlet surface (e.g. to simulate internal channels inside a model). In order to do so, it has been necessary to create an option OUTLET_TYPE that will be used in the future (e.g. to add a mass flow driver for the outlet - currently only static pressure is implemented - ). To sum up, to connect an inlet with an outlet you should type the following:. % Inlet boundary type (TOTAL_CONDITIONS, MASS_FLOW, SURFACE_OUTLET); INLET_TYPE= SURFACE_OUTLET; % Outlet boundary type (PRESSURE_OUTLET, SURFACE_INLET); OUTLET_TYPE= SURFACE_INLET. In the future, we should be able to specify pressure losses inside the ""pipe"" that connect the surfaces.; ; ## Related Work; This is a new implementation that solves passive flow control problems where we are not interested in creating a complicated mesh inside the main volume to define the internal channels/pipes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/538
https://github.com/su2code/SU2/issues/539:41,Integrability,wrap,wrapper,41,"Dear all,. I am trying to use the python wrapper with AD tool support. For example I want to use CDiscAdjFluidDriver(options.filename, 1, 3, comm) but it fail and returns there is no AD support for python wrapper. . Do you know how I can solve it ?!. @talbring @tobadavid . Cheers,. reza",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/539
https://github.com/su2code/SU2/issues/539:205,Integrability,wrap,wrapper,205,"Dear all,. I am trying to use the python wrapper with AD tool support. For example I want to use CDiscAdjFluidDriver(options.filename, 1, 3, comm) but it fail and returns there is no AD support for python wrapper. . Do you know how I can solve it ?!. @talbring @tobadavid . Cheers,. reza",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/539
https://github.com/su2code/SU2/pull/540:117,Deployability,release,release,117,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR will close the release of SU2 v6.1.0. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #535 and #516 will be merged and included here before release. Feel free to comment below if there are any outstanding items that you would like to add to develop via PR before release. For significant changes, please wait for the next release (it won't be long). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/540
https://github.com/su2code/SU2/pull/540:342,Deployability,release,release,342,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR will close the release of SU2 v6.1.0. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #535 and #516 will be merged and included here before release. Feel free to comment below if there are any outstanding items that you would like to add to develop via PR before release. For significant changes, please wait for the next release (it won't be long). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/540
https://github.com/su2code/SU2/pull/540:465,Deployability,release,release,465,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR will close the release of SU2 v6.1.0. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #535 and #516 will be merged and included here before release. Feel free to comment below if there are any outstanding items that you would like to add to develop via PR before release. For significant changes, please wait for the next release (it won't be long). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/540
https://github.com/su2code/SU2/pull/540:524,Deployability,release,release,524,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR will close the release of SU2 v6.1.0. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #535 and #516 will be merged and included here before release. Feel free to comment below if there are any outstanding items that you would like to add to develop via PR before release. For significant changes, please wait for the next release (it won't be long). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/540
https://github.com/su2code/SU2/pull/540:1102,Testability,test,test,1102,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR will close the release of SU2 v6.1.0. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #535 and #516 will be merged and included here before release. Feel free to comment below if there are any outstanding items that you would like to add to develop via PR before release. For significant changes, please wait for the next release (it won't be long). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/540
https://github.com/su2code/SU2/pull/540:724,Usability,guid,guide,724,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR will close the release of SU2 v6.1.0. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #535 and #516 will be merged and included here before release. Feel free to comment below if there are any outstanding items that you would like to add to develop via PR before release. For significant changes, please wait for the next release (it won't be long). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/540
https://github.com/su2code/SU2/pull/541:699,Testability,test,test,699,"## Proposed Changes; Collection of minor improvements including, typos, warnings, better names, etc.; . ## Related Work; Not related with other PRs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/541
https://github.com/su2code/SU2/pull/541:321,Usability,guid,guide,321,"## Proposed Changes; Collection of minor improvements including, typos, warnings, better names, etc.; . ## Related Work; Not related with other PRs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/541
https://github.com/su2code/SU2/pull/542:35,Deployability,integrat,integrate,35,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/542
https://github.com/su2code/SU2/pull/542:35,Integrability,integrat,integrate,35,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/542
https://github.com/su2code/SU2/pull/542:227,Performance,optimiz,optimize,227,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/542
https://github.com/su2code/SU2/pull/542:273,Performance,perform,performance,273,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/542
https://github.com/su2code/SU2/pull/542:326,Performance,perform,performance,326,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/542
https://github.com/su2code/SU2/pull/542:527,Performance,perform,performance,527,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/542
https://github.com/su2code/SU2/pull/542:1090,Testability,test,test,1090,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/542
https://github.com/su2code/SU2/pull/542:1176,Testability,test,tests,1176,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/542
https://github.com/su2code/SU2/pull/542:712,Usability,guid,guide,712,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/542
https://github.com/su2code/SU2/pull/543:8,Deployability,integrat,integrates,8,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/543
https://github.com/su2code/SU2/pull/543:368,Deployability,Integrat,Integrate,368,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/543
https://github.com/su2code/SU2/pull/543:8,Integrability,integrat,integrates,8,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/543
https://github.com/su2code/SU2/pull/543:368,Integrability,Integrat,Integrate,368,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/543
https://github.com/su2code/SU2/pull/543:59,Performance,perform,performance,59,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/543
https://github.com/su2code/SU2/pull/543:179,Performance,perform,performance,179,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/543
https://github.com/su2code/SU2/pull/543:667,Performance,perform,performance,667,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/543
https://github.com/su2code/SU2/pull/543:704,Performance,perform,performance,704,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/543
https://github.com/su2code/SU2/pull/543:1348,Testability,test,test,1348,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/543
https://github.com/su2code/SU2/pull/543:970,Usability,guid,guide,970,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/543
https://github.com/su2code/SU2/issues/544:81,Modifiability,variab,variables,81,"Folks,. Just a general remark. Some of the doxygen comments of the functions and variables are not consistent, because these are simply copied. There are examples in the code where several functions have exactly the same comments and those comments do not make any sense whatsoever. So could everybody also pay attention to the comments before a pull request is made? You do not only write this code for yourself but also for other people and wrong comments can be extremely confusing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/544
https://github.com/su2code/SU2/issues/544:129,Usability,simpl,simply,129,"Folks,. Just a general remark. Some of the doxygen comments of the functions and variables are not consistent, because these are simply copied. There are examples in the code where several functions have exactly the same comments and those comments do not make any sense whatsoever. So could everybody also pay attention to the comments before a pull request is made? You do not only write this code for yourself but also for other people and wrong comments can be extremely confusing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/544
https://github.com/su2code/SU2/issues/545:191,Testability,log,logic,191,"If `OPT_OBJECTIVE` is not defined in the `.cfg` file `compute_polar.py` creates a dummy. However, the dummy lacks a surface marker so it fails on the post processing step. Updating the dummy logic to the following seems to work (line 379 in the current version) . ```(python); if 'OPT_OBJECTIVE' not in konfig:; obj = {}; obj['DRAG'] = {'SCALE':1.e-2, 'OBJTYPE':'DEFAULT', 'MARKER': 'None'}; konfig.OPT_OBJECTIVE = obj; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/545
https://github.com/su2code/SU2/pull/546:141,Modifiability,variab,variables,141,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Bug fixes and consistent naming of flow output variables so that both Tecplot and ParaView correctly render vector quantities. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/546
https://github.com/su2code/SU2/pull/546:924,Testability,test,test,924,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Bug fixes and consistent naming of flow output variables so that both Tecplot and ParaView correctly render vector quantities. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/546
https://github.com/su2code/SU2/pull/546:546,Usability,guid,guide,546,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Bug fixes and consistent naming of flow output variables so that both Tecplot and ParaView correctly render vector quantities. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/546
https://github.com/su2code/SU2/pull/547:114,Availability,error,error,114,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Correct default value error (identified in version 6.1.0) and typos. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve issue #545. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/547
https://github.com/su2code/SU2/pull/547:880,Testability,test,test,880,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Correct default value error (identified in version 6.1.0) and typos. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve issue #545. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/547
https://github.com/su2code/SU2/pull/547:501,Usability,guid,guide,501,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Correct default value error (identified in version 6.1.0) and typos. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve issue #545. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/547
https://github.com/su2code/SU2/pull/548:114,Availability,error,error,114,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Correct default value error (identified in version 6.1.0) and typos. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve issue #545. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/548
https://github.com/su2code/SU2/pull/548:879,Testability,test,test,879,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Correct default value error (identified in version 6.1.0) and typos. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve issue #545. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/548
https://github.com/su2code/SU2/pull/548:501,Usability,guid,guide,501,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Correct default value error (identified in version 6.1.0) and typos. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve issue #545. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/548
https://github.com/su2code/SU2/issues/549:7,Availability,down,downloaded,7,"Hi,. I downloaded su2-***.tgz file for ubuntu server. I uncompressed it. ; When I am using following command:-; ./configure --prefix=/root/downloads/su2-6.1.0; I get following error:-; -su: ./configure: No such file or directory. Need suggestion here. . Thanks,; Reena",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/549
https://github.com/su2code/SU2/issues/549:139,Availability,down,downloads,139,"Hi,. I downloaded su2-***.tgz file for ubuntu server. I uncompressed it. ; When I am using following command:-; ./configure --prefix=/root/downloads/su2-6.1.0; I get following error:-; -su: ./configure: No such file or directory. Need suggestion here. . Thanks,; Reena",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/549
https://github.com/su2code/SU2/issues/549:176,Availability,error,error,176,"Hi,. I downloaded su2-***.tgz file for ubuntu server. I uncompressed it. ; When I am using following command:-; ./configure --prefix=/root/downloads/su2-6.1.0; I get following error:-; -su: ./configure: No such file or directory. Need suggestion here. . Thanks,; Reena",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/549
https://github.com/su2code/SU2/issues/549:114,Modifiability,config,configure,114,"Hi,. I downloaded su2-***.tgz file for ubuntu server. I uncompressed it. ; When I am using following command:-; ./configure --prefix=/root/downloads/su2-6.1.0; I get following error:-; -su: ./configure: No such file or directory. Need suggestion here. . Thanks,; Reena",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/549
https://github.com/su2code/SU2/issues/549:192,Modifiability,config,configure,192,"Hi,. I downloaded su2-***.tgz file for ubuntu server. I uncompressed it. ; When I am using following command:-; ./configure --prefix=/root/downloads/su2-6.1.0; I get following error:-; -su: ./configure: No such file or directory. Need suggestion here. . Thanks,; Reena",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/549
https://github.com/su2code/SU2/issues/550:210,Availability,error,errors,210,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:257,Availability,error,error,257,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:288,Availability,error,error,288,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:315,Availability,error,error,315,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:357,Availability,error,error,357,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:661,Availability,error,error,661,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:916,Availability,error,errors,916,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:1056,Availability,error,error,1056,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:1546,Availability,error,error,1546,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:218,Integrability,depend,depending,218,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:294,Integrability,message,message,294,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:338,Integrability,Message,Message,338,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:544,Integrability,Message,Message,544,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:631,Safety,abort,aborting,631,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:1298,Testability,test,tested,1298,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/550:1684,Testability,test,test,1684,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/550
https://github.com/su2code/SU2/issues/551:669,Availability,Error,Error,669,"Branch: `master` or `develop` (in this exampe); `swig`: either 3.0.12 or 4.0.0 (more warnings, master branch, in this example); `mpicxx`, a wrapper to `g++` (Ubuntu 8.1.0-9ubuntu1) 8.1.0; `mpi4py`: either 2.0.0 or 3.0.1a0 (master branch). Steps to reproduce (compile SU2 in `$SU2_HOME` first):. `cd $SU2_HOME/SU2_PY/pySU2`. `swig -Wall -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python pySU2.i`. `../../Common/include/mpi_structure.hpp:417: Warning 202: Could not evaluate expression 'defined(__GNUC__) || (defined(__ICC) && (__ICC >= 600))'`; `../../Common/include/mpi_structure.hpp:417: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:423: Warning 202: Could not evaluate expression 'defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901)'`; `../../Common/include/mpi_structure.hpp:423: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:425: Warning 202: Could not evaluate expression 'defined(__cplusplus) && (__cplusplus >= 201103)'`; `../../Common/include/mpi_structure.hpp:425: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:317: Warning 325: Nested struct not currently supported (Status ignored)`. `mpicxx -DHAVE_HDF5 -I/usr/include/hdf5/openmpi -DHAVE_SZIP -I/usr/include -DHAVE_ZLIB -I/usr/include -DHAVE_MPI -DHAVE_MUTATIONPP -I/usr/include/mutation++ -DHAVE_JSONCPP -I/usr/include/jsoncpp -I/usr/include/python2.7 -D_FORTIFY_SOURCE=2 -fPIC -O3 -I../../externals/metis/include -I../../externals/parmetis/include -I../../externals/tecio/include -I../../externals/cgns -I../../externals/cgns/adf -I../../Common/include -I../../SU2_CFD/include -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -c SU2_APIPYTHON_wrap.cxx -o SU2_APIPYTHON_wrap.o # $CXX $pySU2_CC_FLAGS $PY_INCLUDE -c $SWIG_WRAP_REAL.cxx -o $SWIG_WRAP_REAL.o`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:933,Availability,Error,Error,933,"Branch: `master` or `develop` (in this exampe); `swig`: either 3.0.12 or 4.0.0 (more warnings, master branch, in this example); `mpicxx`, a wrapper to `g++` (Ubuntu 8.1.0-9ubuntu1) 8.1.0; `mpi4py`: either 2.0.0 or 3.0.1a0 (master branch). Steps to reproduce (compile SU2 in `$SU2_HOME` first):. `cd $SU2_HOME/SU2_PY/pySU2`. `swig -Wall -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python pySU2.i`. `../../Common/include/mpi_structure.hpp:417: Warning 202: Could not evaluate expression 'defined(__GNUC__) || (defined(__ICC) && (__ICC >= 600))'`; `../../Common/include/mpi_structure.hpp:417: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:423: Warning 202: Could not evaluate expression 'defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901)'`; `../../Common/include/mpi_structure.hpp:423: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:425: Warning 202: Could not evaluate expression 'defined(__cplusplus) && (__cplusplus >= 201103)'`; `../../Common/include/mpi_structure.hpp:425: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:317: Warning 325: Nested struct not currently supported (Status ignored)`. `mpicxx -DHAVE_HDF5 -I/usr/include/hdf5/openmpi -DHAVE_SZIP -I/usr/include -DHAVE_ZLIB -I/usr/include -DHAVE_MPI -DHAVE_MUTATIONPP -I/usr/include/mutation++ -DHAVE_JSONCPP -I/usr/include/jsoncpp -I/usr/include/python2.7 -D_FORTIFY_SOURCE=2 -fPIC -O3 -I../../externals/metis/include -I../../externals/parmetis/include -I../../externals/tecio/include -I../../externals/cgns -I../../externals/cgns/adf -I../../Common/include -I../../SU2_CFD/include -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -c SU2_APIPYTHON_wrap.cxx -o SU2_APIPYTHON_wrap.o # $CXX $pySU2_CC_FLAGS $PY_INCLUDE -c $SWIG_WRAP_REAL.cxx -o $SWIG_WRAP_REAL.o`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:1187,Availability,Error,Error,1187,"2.0.0 or 3.0.1a0 (master branch). Steps to reproduce (compile SU2 in `$SU2_HOME` first):. `cd $SU2_HOME/SU2_PY/pySU2`. `swig -Wall -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python pySU2.i`. `../../Common/include/mpi_structure.hpp:417: Warning 202: Could not evaluate expression 'defined(__GNUC__) || (defined(__ICC) && (__ICC >= 600))'`; `../../Common/include/mpi_structure.hpp:417: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:423: Warning 202: Could not evaluate expression 'defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901)'`; `../../Common/include/mpi_structure.hpp:423: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:425: Warning 202: Could not evaluate expression 'defined(__cplusplus) && (__cplusplus >= 201103)'`; `../../Common/include/mpi_structure.hpp:425: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:317: Warning 325: Nested struct not currently supported (Status ignored)`. `mpicxx -DHAVE_HDF5 -I/usr/include/hdf5/openmpi -DHAVE_SZIP -I/usr/include -DHAVE_ZLIB -I/usr/include -DHAVE_MPI -DHAVE_MUTATIONPP -I/usr/include/mutation++ -DHAVE_JSONCPP -I/usr/include/jsoncpp -I/usr/include/python2.7 -D_FORTIFY_SOURCE=2 -fPIC -O3 -I../../externals/metis/include -I../../externals/parmetis/include -I../../externals/tecio/include -I../../externals/cgns -I../../externals/cgns/adf -I../../Common/include -I../../SU2_CFD/include -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -c SU2_APIPYTHON_wrap.cxx -o SU2_APIPYTHON_wrap.o # $CXX $pySU2_CC_FLAGS $PY_INCLUDE -c $SWIG_WRAP_REAL.cxx -o $SWIG_WRAP_REAL.o`. `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:6704:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_commu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:2127,Availability,error,error,2127,":425: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:317: Warning 325: Nested struct not currently supported (Status ignored)`. `mpicxx -DHAVE_HDF5 -I/usr/include/hdf5/openmpi -DHAVE_SZIP -I/usr/include -DHAVE_ZLIB -I/usr/include -DHAVE_MPI -DHAVE_MUTATIONPP -I/usr/include/mutation++ -DHAVE_JSONCPP -I/usr/include/jsoncpp -I/usr/include/python2.7 -D_FORTIFY_SOURCE=2 -fPIC -O3 -I../../externals/metis/include -I../../externals/parmetis/include -I../../externals/tecio/include -I../../externals/cgns -I../../externals/cgns/adf -I../../Common/include -I../../SU2_CFD/include -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -c SU2_APIPYTHON_wrap.cxx -o SU2_APIPYTHON_wrap.o # $CXX $pySU2_CC_FLAGS $PY_INCLUDE -c $SWIG_WRAP_REAL.cxx -o $SWIG_WRAP_REAL.o`. `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:6704:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CGeneralDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:9766:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CFluidDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10047:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CTurbomachineryDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10597:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:2439,Availability,error,error,2439,"TATIONPP -I/usr/include/mutation++ -DHAVE_JSONCPP -I/usr/include/jsoncpp -I/usr/include/python2.7 -D_FORTIFY_SOURCE=2 -fPIC -O3 -I../../externals/metis/include -I../../externals/parmetis/include -I../../externals/tecio/include -I../../externals/cgns -I../../externals/cgns/adf -I../../Common/include -I../../SU2_CFD/include -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -c SU2_APIPYTHON_wrap.cxx -o SU2_APIPYTHON_wrap.o # $CXX $pySU2_CC_FLAGS $PY_INCLUDE -c $SWIG_WRAP_REAL.cxx -o $SWIG_WRAP_REAL.o`. `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:6704:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CGeneralDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:9766:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CFluidDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10047:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CTurbomachineryDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10597:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjFluidDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10822:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:2750,Availability,error,error,2750,"2_CFD/include -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -c SU2_APIPYTHON_wrap.cxx -o SU2_APIPYTHON_wrap.o # $CXX $pySU2_CC_FLAGS $PY_INCLUDE -c $SWIG_WRAP_REAL.cxx -o $SWIG_WRAP_REAL.o`. `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:6704:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CGeneralDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:9766:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CFluidDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10047:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CTurbomachineryDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10597:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjFluidDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10822:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjTurbomachineryDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11053:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_com",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:3070,Availability,error,error,3070,"rap.cxx:6704:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CGeneralDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:9766:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CFluidDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10047:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CTurbomachineryDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10597:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjFluidDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10822:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjTurbomachineryDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11053:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CHBDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11268:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:3388,Availability,error,error,3388,"x:9766:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CFluidDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10047:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CTurbomachineryDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10597:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjFluidDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10822:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjTurbomachineryDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11053:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CHBDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11268:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CFSIDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11524:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:3715,Availability,error,error,3715,": invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CTurbomachineryDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10597:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjFluidDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10822:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjTurbomachineryDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11053:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CHBDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11268:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CFSIDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11524:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjFSIDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:12095:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = stat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:4023,Availability,error,error,4023,"97:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjFluidDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:10822:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjTurbomachineryDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11053:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CHBDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11268:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CFSIDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11524:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjFSIDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:12095:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CMultiphysicsZonalDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:13250:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:4332,Availability,error,error,4332,"p.cxx:10822:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjTurbomachineryDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11053:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CHBDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11268:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CFSIDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11524:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjFSIDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:12095:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CMultiphysicsZonalDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:13250:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`. `mpicxx -fPIC -shared -Wl,--no-as-needed -o _pysu2.so SU2_APIPYTHON_wrap.o ../../SU2_CFD/obj/libSU2Core.a ../../Common/lib/libSU2.a ../../externals/tecio/libtecio.a ../../externals/parmetis/libparmetis.a ../../externals/me",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:4648,Availability,error,error,4648,"IPYTHON_wrap.cxx:11053:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CHBDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11268:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CFSIDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11524:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjFSIDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:12095:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CMultiphysicsZonalDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:13250:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`. `mpicxx -fPIC -shared -Wl,--no-as-needed -o _pysu2.so SU2_APIPYTHON_wrap.o ../../SU2_CFD/obj/libSU2Core.a ../../Common/lib/libSU2.a ../../externals/tecio/libtecio.a ../../externals/parmetis/libparmetis.a ../../externals/metis/libmetis.a ../../externals/cgns/libcgns.a -L/usr/lib -L/usr/lib -L/usr/lib/x86_64-linux-gnu # $CXX $SO_LINK_FLAGS -o $SWIG_SO_REAL $SWIG_WRAP_REAL.o $pySU2_LD_FLAGS`. **(the latter step could not be reached through with** `mpicxx` **in parallel due to the previous errors; if substituted with** `g++` **produces ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:4971,Availability,error,error,4971,".arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CHBDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11268:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CFSIDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11524:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjFSIDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:12095:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CMultiphysicsZonalDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:13250:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`. `mpicxx -fPIC -shared -Wl,--no-as-needed -o _pysu2.so SU2_APIPYTHON_wrap.o ../../SU2_CFD/obj/libSU2Core.a ../../Common/lib/libSU2.a ../../externals/tecio/libtecio.a ../../externals/parmetis/libparmetis.a ../../externals/metis/libmetis.a ../../externals/cgns/libcgns.a -L/usr/lib -L/usr/lib -L/usr/lib/x86_64-linux-gnu # $CXX $SO_LINK_FLAGS -o $SWIG_SO_REAL $SWIG_WRAP_REAL.o $pySU2_LD_FLAGS`. **(the latter step could not be reached through with** `mpicxx` **in parallel due to the previous errors; if substituted with** `g++` **produces undefined symbols** `nm -u _pysu2.so`, **which is why it could not be imported also with** `python -c 'import pysu2'`**)**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:5642,Availability,error,errors,5642,".arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CHBDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11268:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CFSIDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:11524:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CDiscAdjFSIDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:12095:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`; `SU2_APIPYTHON_wrap.cxx: In function ‘PyObject* _wrap_new_CMultiphysicsZonalDriver(PyObject*, PyObject*)’:`; `SU2_APIPYTHON_wrap.cxx:13250:38: error: invalid static_cast from type ‘int’ to type ‘SU2_Comm’ {aka ‘ompi_communicator_t*’}`; `...arg5 = static_cast< SU2_Comm >(val5);`; `......................................^`. `mpicxx -fPIC -shared -Wl,--no-as-needed -o _pysu2.so SU2_APIPYTHON_wrap.o ../../SU2_CFD/obj/libSU2Core.a ../../Common/lib/libSU2.a ../../externals/tecio/libtecio.a ../../externals/parmetis/libparmetis.a ../../externals/metis/libmetis.a ../../externals/cgns/libcgns.a -L/usr/lib -L/usr/lib -L/usr/lib/x86_64-linux-gnu # $CXX $SO_LINK_FLAGS -o $SWIG_SO_REAL $SWIG_WRAP_REAL.o $pySU2_LD_FLAGS`. **(the latter step could not be reached through with** `mpicxx` **in parallel due to the previous errors; if substituted with** `g++` **produces undefined symbols** `nm -u _pysu2.so`, **which is why it could not be imported also with** `python -c 'import pysu2'`**)**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/issues/551:140,Integrability,wrap,wrapper,140,"Branch: `master` or `develop` (in this exampe); `swig`: either 3.0.12 or 4.0.0 (more warnings, master branch, in this example); `mpicxx`, a wrapper to `g++` (Ubuntu 8.1.0-9ubuntu1) 8.1.0; `mpi4py`: either 2.0.0 or 3.0.1a0 (master branch). Steps to reproduce (compile SU2 in `$SU2_HOME` first):. `cd $SU2_HOME/SU2_PY/pySU2`. `swig -Wall -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python pySU2.i`. `../../Common/include/mpi_structure.hpp:417: Warning 202: Could not evaluate expression 'defined(__GNUC__) || (defined(__ICC) && (__ICC >= 600))'`; `../../Common/include/mpi_structure.hpp:417: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:423: Warning 202: Could not evaluate expression 'defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901)'`; `../../Common/include/mpi_structure.hpp:423: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:425: Warning 202: Could not evaluate expression 'defined(__cplusplus) && (__cplusplus >= 201103)'`; `../../Common/include/mpi_structure.hpp:425: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:317: Warning 325: Nested struct not currently supported (Status ignored)`. `mpicxx -DHAVE_HDF5 -I/usr/include/hdf5/openmpi -DHAVE_SZIP -I/usr/include -DHAVE_ZLIB -I/usr/include -DHAVE_MPI -DHAVE_MUTATIONPP -I/usr/include/mutation++ -DHAVE_JSONCPP -I/usr/include/jsoncpp -I/usr/include/python2.7 -D_FORTIFY_SOURCE=2 -fPIC -O3 -I../../externals/metis/include -I../../externals/parmetis/include -I../../externals/tecio/include -I../../externals/cgns -I../../externals/cgns/adf -I../../Common/include -I../../SU2_CFD/include -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -c SU2_APIPYTHON_wrap.cxx -o SU2_APIPYTHON_wrap.o # $CXX $pySU2_CC_FLAGS $PY_INCLUDE -c $SWIG_WRAP_REAL.cxx -o $SWIG_WRAP_REAL.o`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/551
https://github.com/su2code/SU2/pull/552:418,Integrability,depend,dependent,418,"## Proposed Changes. While ""fixing"" the NTS central/upwind blending function in PR #532, I accidentally introduced a bug. The main purpose of this pull request is to remedy the bug. There's also three other related efforts:. 1. I moved the calculation of the maximum cell width to the `CPhysicalGeometry` class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver.; 2. I also changed the FD blending function to be consistent with both published literature and the NTS blending. Before, `Roe_Dissipation = 0` meant an upwind scheme for the FD blending function but a central scheme for the NTS blending function, and vice versa for `Roe_Dissipation = 1`. By switching the FD blending function, the code is more consistent and cleaner.; 3. I proceeded with a basic verification of the implementation. I'll follow up later with another comment listing the verification details. ## Related Work. Previous PR: #532 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/552
https://github.com/su2code/SU2/pull/552:1368,Testability,test,test,1368,"## Proposed Changes. While ""fixing"" the NTS central/upwind blending function in PR #532, I accidentally introduced a bug. The main purpose of this pull request is to remedy the bug. There's also three other related efforts:. 1. I moved the calculation of the maximum cell width to the `CPhysicalGeometry` class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver.; 2. I also changed the FD blending function to be consistent with both published literature and the NTS blending. Before, `Roe_Dissipation = 0` meant an upwind scheme for the FD blending function but a central scheme for the NTS blending function, and vice versa for `Roe_Dissipation = 1`. By switching the FD blending function, the code is more consistent and cleaner.; 3. I proceeded with a basic verification of the implementation. I'll follow up later with another comment listing the verification details. ## Related Work. Previous PR: #532 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/552
https://github.com/su2code/SU2/pull/553:826,Testability,test,test,826,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Add a probe function in latest SU2. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/553
https://github.com/su2code/SU2/pull/553:448,Usability,guid,guide,448,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Add a probe function in latest SU2. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/553
https://github.com/su2code/SU2/pull/554:943,Deployability,update,updated,943,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/554
https://github.com/su2code/SU2/pull/554:59,Performance,load,loading,59,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/554
https://github.com/su2code/SU2/pull/554:198,Performance,load,loaded,198,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/554
https://github.com/su2code/SU2/pull/554:320,Performance,load,loaded,320,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/554
https://github.com/su2code/SU2/pull/554:544,Performance,load,loaded,544,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/554
https://github.com/su2code/SU2/pull/554:603,Testability,test,test,603,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/554
https://github.com/su2code/SU2/pull/554:698,Testability,Test,Testcase,698,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/554
https://github.com/su2code/SU2/pull/554:782,Testability,Test,Testcases,782,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/554
https://github.com/su2code/SU2/pull/554:904,Testability,Test,Testcase,904,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/554
https://github.com/su2code/SU2/pull/554:918,Testability,Test,TestCases,918,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/554
