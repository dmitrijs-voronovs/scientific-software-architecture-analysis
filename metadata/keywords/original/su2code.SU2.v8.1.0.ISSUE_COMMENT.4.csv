id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/su2code/SU2/issues/1000#issuecomment-633082435:40,Deployability,install,installed,40,@aditya12398 But you still have openmpi installed? Because it crashes somewhere in `/usr/lib/openmpi/libmpi.so` ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633082435
https://github.com/su2code/SU2/issues/1000#issuecomment-633083301:141,Integrability,depend,dependency,141,"When I used mpich meson was picking up openmpi, even though mpirun mpicc mpicxx were all picking up the mpich versions.; I had to change the dependency specifically for mpich.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633083301
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:929,Deployability,install,install-libiberty,929,"@talbring Yes, I do. I can't uninstall it since it breaks other packages. @pcarruscag Yeah same for me. You can see it here:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ mpicc -v; mpicc for MPICH version 3.3.2; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-pkgversion='Arch Linux 9.2.1+20200130-2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:1060,Deployability,release,release,1060,"@talbring Yes, I do. I can't uninstall it since it breaks other packages. @pcarruscag Yeah same for me. You can see it here:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ mpicc -v; mpicc for MPICH version 3.3.2; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-pkgversion='Arch Linux 9.2.1+20200130-2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:2057,Deployability,install,install,2057,"ble-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output for `./ninja`](https://github.com/su2code/SU2/files/4672490/ninja_build_mpich.log). Even though the build was successful, SU2 does not seem to run properly. It displays the same thing ""NP"" (`mpirun -n NP ...`) number of times. And the console prints the output in chunks, like 57 iterations suddenly ""NP"" times, then a pause, then 57-119 ""NP"" times and so on. You can see the [logfile here](https://github.com/su2code/SU2/files/4672491/mpirun_SU2_CFD_error.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:2493,Deployability,Install,Installing,2493,"ble-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output for `./ninja`](https://github.com/su2code/SU2/files/4672490/ninja_build_mpich.log). Even though the build was successful, SU2 does not seem to run properly. It displays the same thing ""NP"" (`mpirun -n NP ...`) number of times. And the console prints the output in chunks, like 57 iterations suddenly ""NP"" times, then a pause, then 57-119 ""NP"" times and so on. You can see the [logfile here](https://github.com/su2code/SU2/files/4672491/mpirun_SU2_CFD_error.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:318,Integrability,wrap,wrapper,318,"@talbring Yes, I do. I can't uninstall it since it breaks other packages. @pcarruscag Yeah same for me. You can see it here:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ mpicc -v; mpicc for MPICH version 3.3.2; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-pkgversion='Arch Linux 9.2.1+20200130-2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:1556,Integrability,depend,dependency,1556,"2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:1626,Integrability,depend,dependency,1626,"2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:1697,Integrability,depend,dependency,1697,"2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:356,Modifiability,Config,Configured,356,"@talbring Yes, I do. I can't uninstall it since it breaks other packages. @pcarruscag Yeah same for me. You can see it here:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ mpicc -v; mpicc for MPICH version 3.3.2; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-pkgversion='Arch Linux 9.2.1+20200130-2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:392,Modifiability,config,configure,392,"@talbring Yes, I do. I can't uninstall it since it breaks other packages. @pcarruscag Yeah same for me. You can see it here:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ mpicc -v; mpicc for MPICH version 3.3.2; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-pkgversion='Arch Linux 9.2.1+20200130-2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:913,Modifiability,plugin,plugin,913,"@talbring Yes, I do. I can't uninstall it since it breaks other packages. @pcarruscag Yeah same for me. You can see it here:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ mpicc -v; mpicc for MPICH version 3.3.2; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-pkgversion='Arch Linux 9.2.1+20200130-2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:1426,Modifiability,variab,variables,1426,"2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:961,Security,hash,hash-style,961,"@talbring Yes, I do. I can't uninstall it since it breaks other packages. @pcarruscag Yeah same for me. You can see it here:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ mpicc -v; mpicc for MPICH version 3.3.2; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-pkgversion='Arch Linux 9.2.1+20200130-2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:2628,Testability,log,log,2628,"ble-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output for `./ninja`](https://github.com/su2code/SU2/files/4672490/ninja_build_mpich.log). Even though the build was successful, SU2 does not seem to run properly. It displays the same thing ""NP"" (`mpirun -n NP ...`) number of times. And the console prints the output in chunks, like 57 iterations suddenly ""NP"" times, then a pause, then 57-119 ""NP"" times and so on. You can see the [logfile here](https://github.com/su2code/SU2/files/4672491/mpirun_SU2_CFD_error.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:2927,Testability,log,logfile,2927,"ble-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output for `./ninja`](https://github.com/su2code/SU2/files/4672490/ninja_build_mpich.log). Even though the build was successful, SU2 does not seem to run properly. It displays the same thing ""NP"" (`mpirun -n NP ...`) number of times. And the console prints the output in chunks, like 57 iterations suddenly ""NP"" times, then a pause, then 57-119 ""NP"" times and so on. You can see the [logfile here](https://github.com/su2code/SU2/files/4672491/mpirun_SU2_CFD_error.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:3007,Testability,log,log,3007,"ble-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output for `./ninja`](https://github.com/su2code/SU2/files/4672490/ninja_build_mpich.log). Even though the build was successful, SU2 does not seem to run properly. It displays the same thing ""NP"" (`mpirun -n NP ...`) number of times. And the console prints the output in chunks, like 57 iterations suddenly ""NP"" times, then a pause, then 57-119 ""NP"" times and so on. You can see the [logfile here](https://github.com/su2code/SU2/files/4672491/mpirun_SU2_CFD_error.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:2869,Usability,pause,pause,2869,"ble-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output for `./ninja`](https://github.com/su2code/SU2/files/4672490/ninja_build_mpich.log). Even though the build was successful, SU2 does not seem to run properly. It displays the same thing ""NP"" (`mpirun -n NP ...`) number of times. And the console prints the output in chunks, like 57 iterations suddenly ""NP"" times, then a pause, then 57-119 ""NP"" times and so on. You can see the [logfile here](https://github.com/su2code/SU2/files/4672491/mpirun_SU2_CFD_error.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:35,Availability,error,error,35,"I just tried it and it failed. The error message is extremely long, I am attaching a [text file](https://github.com/su2code/SU2/files/4685129/su2_custom-mpi.log) for that. This was my meson command earlier: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL`. Then I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1702,Deployability,install,install,1702,"_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1784,Deployability,install,install,1784,"ild; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1915,Deployability,Release,Release,1915,"r: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should me",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1988,Deployability,Configurat,Configuration,1988,"20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should mention, I cloned the `develop` branch and used [this commit](https://github.com/su2code/SU2/commit/ad6311322b9952f92584d3e141237e7156cdc07c):; `git checkout ad6311322b9952f92584d3e141237e7156cdc07c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:2345,Deployability,update,update,2345,"20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should mention, I cloned the `develop` branch and used [this commit](https://github.com/su2code/SU2/commit/ad6311322b9952f92584d3e141237e7156cdc07c):; `git checkout ad6311322b9952f92584d3e141237e7156cdc07c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:2437,Deployability,configurat,configuration,2437,"20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should mention, I cloned the `develop` branch and used [this commit](https://github.com/su2code/SU2/commit/ad6311322b9952f92584d3e141237e7156cdc07c):; `git checkout ad6311322b9952f92584d3e141237e7156cdc07c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:2697,Deployability,install,install,2697,"20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should mention, I cloned the `develop` branch and used [this commit](https://github.com/su2code/SU2/commit/ad6311322b9952f92584d3e141237e7156cdc07c):; `git checkout ad6311322b9952f92584d3e141237e7156cdc07c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:2721,Deployability,install,install,2721,"20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should mention, I cloned the `develop` branch and used [this commit](https://github.com/su2code/SU2/commit/ad6311322b9952f92584d3e141237e7156cdc07c):; `git checkout ad6311322b9952f92584d3e141237e7156cdc07c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:41,Integrability,message,message,41,"I just tried it and it failed. The error message is extremely long, I am attaching a [text file](https://github.com/su2code/SU2/files/4685129/su2_custom-mpi.log) for that. This was my meson command earlier: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL`. Then I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1392,Integrability,Message,Message,1392,"me/slimshady/UserPackages/SU2_INSTALL`. Then I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1479,Integrability,depend,dependency,1479,"ld -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1558,Integrability,Message,Message,1558,"true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1652,Integrability,Depend,Dependency,1652,"_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1797,Integrability,Message,Message,1797,"r: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should me",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:2204,Integrability,Wrap,Wrapper,2204,"20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should mention, I cloned the `develop` branch and used [this commit](https://github.com/su2code/SU2/commit/ad6311322b9952f92584d3e141237e7156cdc07c):; `git checkout ad6311322b9952f92584d3e141237e7156cdc07c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:476,Modifiability,config,configure,476,"I just tried it and it failed. The error message is extremely long, I am attaching a [text file](https://github.com/su2code/SU2/files/4685129/su2_custom-mpi.log) for that. This was my meson command earlier: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL`. Then I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1433,Modifiability,config,config,1433,"book-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this config",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1454,Modifiability,config,config,1454,"book-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this config",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1988,Modifiability,Config,Configuration,1988,"20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should mention, I cloned the `develop` branch and used [this commit](https://github.com/su2code/SU2/commit/ad6311322b9952f92584d3e141237e7156cdc07c):; `git checkout ad6311322b9952f92584d3e141237e7156cdc07c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:2329,Modifiability,variab,variables,2329,"20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should mention, I cloned the `develop` branch and used [this commit](https://github.com/su2code/SU2/commit/ad6311322b9952f92584d3e141237e7156cdc07c):; `git checkout ad6311322b9952f92584d3e141237e7156cdc07c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:2437,Modifiability,config,configuration,2437,"20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should mention, I cloned the `develop` branch and used [this commit](https://github.com/su2code/SU2/commit/ad6311322b9952f92584d3e141237e7156cdc07c):; `git checkout ad6311322b9952f92584d3e141237e7156cdc07c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:157,Testability,log,log,157,"I just tried it and it failed. The error message is extremely long, I am attaching a [text file](https://github.com/su2code/SU2/files/4685129/su2_custom-mpi.log) for that. This was my meson command earlier: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL`. Then I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776
https://github.com/su2code/SU2/issues/1000#issuecomment-634825410:408,Deployability,install,installed,408,"Hello @aditya12398 ,. The fifth line of the file you attached shows a call to `c++`, rather than `mpicxx`, which could cause those undefined references. Basically, the linker is not seeing your mpi libraries. I believe that, in order to use the `-Dcustom-mpi=true` flag, you may need to define your compiler environment variables (such as `$CC`, `$CXX`, `$LD`, `$MPICXX`, etc). Having both OpenMPI and MPICH installed on your system is complicating things, I think. Without some manual configuration of your system's environment, it may not be clear to meson/ninja which mpi implementation should be used. You may need to do some digging around on the internet to see how to properly resolve which MPI implementation gets used for different applications. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634825410
https://github.com/su2code/SU2/issues/1000#issuecomment-634825410:486,Deployability,configurat,configuration,486,"Hello @aditya12398 ,. The fifth line of the file you attached shows a call to `c++`, rather than `mpicxx`, which could cause those undefined references. Basically, the linker is not seeing your mpi libraries. I believe that, in order to use the `-Dcustom-mpi=true` flag, you may need to define your compiler environment variables (such as `$CC`, `$CXX`, `$LD`, `$MPICXX`, etc). Having both OpenMPI and MPICH installed on your system is complicating things, I think. Without some manual configuration of your system's environment, it may not be clear to meson/ninja which mpi implementation should be used. You may need to do some digging around on the internet to see how to properly resolve which MPI implementation gets used for different applications. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634825410
https://github.com/su2code/SU2/issues/1000#issuecomment-634825410:320,Modifiability,variab,variables,320,"Hello @aditya12398 ,. The fifth line of the file you attached shows a call to `c++`, rather than `mpicxx`, which could cause those undefined references. Basically, the linker is not seeing your mpi libraries. I believe that, in order to use the `-Dcustom-mpi=true` flag, you may need to define your compiler environment variables (such as `$CC`, `$CXX`, `$LD`, `$MPICXX`, etc). Having both OpenMPI and MPICH installed on your system is complicating things, I think. Without some manual configuration of your system's environment, it may not be clear to meson/ninja which mpi implementation should be used. You may need to do some digging around on the internet to see how to properly resolve which MPI implementation gets used for different applications. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634825410
https://github.com/su2code/SU2/issues/1000#issuecomment-634825410:486,Modifiability,config,configuration,486,"Hello @aditya12398 ,. The fifth line of the file you attached shows a call to `c++`, rather than `mpicxx`, which could cause those undefined references. Basically, the linker is not seeing your mpi libraries. I believe that, in order to use the `-Dcustom-mpi=true` flag, you may need to define your compiler environment variables (such as `$CC`, `$CXX`, `$LD`, `$MPICXX`, etc). Having both OpenMPI and MPICH installed on your system is complicating things, I think. Without some manual configuration of your system's environment, it may not be clear to meson/ninja which mpi implementation should be used. You may need to do some digging around on the internet to see how to properly resolve which MPI implementation gets used for different applications. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634825410
https://github.com/su2code/SU2/issues/1000#issuecomment-634825410:544,Usability,clear,clear,544,"Hello @aditya12398 ,. The fifth line of the file you attached shows a call to `c++`, rather than `mpicxx`, which could cause those undefined references. Basically, the linker is not seeing your mpi libraries. I believe that, in order to use the `-Dcustom-mpi=true` flag, you may need to define your compiler environment variables (such as `$CC`, `$CXX`, `$LD`, `$MPICXX`, etc). Having both OpenMPI and MPICH installed on your system is complicating things, I think. Without some manual configuration of your system's environment, it may not be clear to meson/ninja which mpi implementation should be used. You may need to do some digging around on the internet to see how to properly resolve which MPI implementation gets used for different applications. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634825410
https://github.com/su2code/SU2/issues/1000#issuecomment-634851094:207,Deployability,install,installed,207,"@aditya12398 It is exactly like @GomerOfDoom mentioned: if you use the `-Dcustom-mpi=true` flag, you must define the environment variables to point to the correct mpi implementation. For example if mpich is installed at `/mpich_x86-64-linux-gnu` the linker/cpp/c flags must be defined as follows (on ubuntu):; ```; export LD_FLAGS='-L/mpich-x86_64-linux-gnu/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/mpich-x86_64-linux-gnu/include'; export C_FLAGS='-I/mpich-x86_64-linux-gnu/include'; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634851094
https://github.com/su2code/SU2/issues/1000#issuecomment-634851094:129,Modifiability,variab,variables,129,"@aditya12398 It is exactly like @GomerOfDoom mentioned: if you use the `-Dcustom-mpi=true` flag, you must define the environment variables to point to the correct mpi implementation. For example if mpich is installed at `/mpich_x86-64-linux-gnu` the linker/cpp/c flags must be defined as follows (on ubuntu):; ```; export LD_FLAGS='-L/mpich-x86_64-linux-gnu/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/mpich-x86_64-linux-gnu/include'; export C_FLAGS='-I/mpich-x86_64-linux-gnu/include'; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634851094
https://github.com/su2code/SU2/issues/1000#issuecomment-635756982:71,Deployability,install,installing,71,"Sorry for the late reply.; I did not mention any `--prefix` flag while installing mpich so it is installed in `/usr/local/`; Just to confirm, do the flags become this:; ```; export LD_FLAGS='-L/usr/local/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/usr/local/include'; export C_FLAGS='-I/usr/local/include'; ```; Also do I even have to do these?; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/usr/local/bin/mpicc'; export MPICXX='/usr/local/bin/mpicxx'; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-635756982
https://github.com/su2code/SU2/issues/1000#issuecomment-635756982:97,Deployability,install,installed,97,"Sorry for the late reply.; I did not mention any `--prefix` flag while installing mpich so it is installed in `/usr/local/`; Just to confirm, do the flags become this:; ```; export LD_FLAGS='-L/usr/local/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/usr/local/include'; export C_FLAGS='-I/usr/local/include'; ```; Also do I even have to do these?; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/usr/local/bin/mpicc'; export MPICXX='/usr/local/bin/mpicxx'; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-635756982
https://github.com/su2code/SU2/issues/1000#issuecomment-640396480:151,Availability,error,error,151,"Hello; I tried a few things, even after setting the environment variables, like mentioned in the previous comment, SU2 build failed with the same long error. I installed MPICH in a custom path and set the variables like so:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/usr/local/mpich-3.3.2/bin/mpicc'; export MPICXX='/usr/local/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/usr/local/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/usr/local/mpich-3.3.2/include'; export C_FLAGS='-I/usr/local/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/usr/local/mpich-3.3.2/lib/pkgconfig'; ```; The following two lines are absent from my meson output:; ```; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480
https://github.com/su2code/SU2/issues/1000#issuecomment-640396480:160,Deployability,install,installed,160,"Hello; I tried a few things, even after setting the environment variables, like mentioned in the previous comment, SU2 build failed with the same long error. I installed MPICH in a custom path and set the variables like so:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/usr/local/mpich-3.3.2/bin/mpicc'; export MPICXX='/usr/local/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/usr/local/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/usr/local/mpich-3.3.2/include'; export C_FLAGS='-I/usr/local/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/usr/local/mpich-3.3.2/lib/pkgconfig'; ```; The following two lines are absent from my meson output:; ```; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480
https://github.com/su2code/SU2/issues/1000#issuecomment-640396480:719,Integrability,depend,dependency,719,"Hello; I tried a few things, even after setting the environment variables, like mentioned in the previous comment, SU2 build failed with the same long error. I installed MPICH in a custom path and set the variables like so:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/usr/local/mpich-3.3.2/bin/mpicc'; export MPICXX='/usr/local/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/usr/local/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/usr/local/mpich-3.3.2/include'; export C_FLAGS='-I/usr/local/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/usr/local/mpich-3.3.2/lib/pkgconfig'; ```; The following two lines are absent from my meson output:; ```; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480
https://github.com/su2code/SU2/issues/1000#issuecomment-640396480:767,Integrability,depend,dependency,767,"Hello; I tried a few things, even after setting the environment variables, like mentioned in the previous comment, SU2 build failed with the same long error. I installed MPICH in a custom path and set the variables like so:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/usr/local/mpich-3.3.2/bin/mpicc'; export MPICXX='/usr/local/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/usr/local/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/usr/local/mpich-3.3.2/include'; export C_FLAGS='-I/usr/local/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/usr/local/mpich-3.3.2/lib/pkgconfig'; ```; The following two lines are absent from my meson output:; ```; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480
https://github.com/su2code/SU2/issues/1000#issuecomment-640396480:64,Modifiability,variab,variables,64,"Hello; I tried a few things, even after setting the environment variables, like mentioned in the previous comment, SU2 build failed with the same long error. I installed MPICH in a custom path and set the variables like so:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/usr/local/mpich-3.3.2/bin/mpicc'; export MPICXX='/usr/local/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/usr/local/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/usr/local/mpich-3.3.2/include'; export C_FLAGS='-I/usr/local/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/usr/local/mpich-3.3.2/lib/pkgconfig'; ```; The following two lines are absent from my meson output:; ```; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480
https://github.com/su2code/SU2/issues/1000#issuecomment-640396480:205,Modifiability,variab,variables,205,"Hello; I tried a few things, even after setting the environment variables, like mentioned in the previous comment, SU2 build failed with the same long error. I installed MPICH in a custom path and set the variables like so:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/usr/local/mpich-3.3.2/bin/mpicc'; export MPICXX='/usr/local/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/usr/local/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/usr/local/mpich-3.3.2/include'; export C_FLAGS='-I/usr/local/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/usr/local/mpich-3.3.2/lib/pkgconfig'; ```; The following two lines are absent from my meson output:; ```; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480
https://github.com/su2code/SU2/issues/1000#issuecomment-721280907:50,Deployability,install,installed,50,I experience the same problem. . * mpich-3.3.2 is installed under /opt using:; ```; ./configure CC=$cc CXX=$cxx FC=$fc --enable-shared --prefix=/opt/mpich-3.3.2; make; make install; ```. * Then su2 build is initiated with:; ```; ./meson.py build \; -Denable-autodiff=true \; -Denable-openblas=true \; -Dwith-mpi=auto; ./ninja -C build install; ```. I tried exporting stuff like:; ```; export MPICC=/opt/mpich-3.3.2/bin/mpicc ; export MPICXX=/opt/mpich-3.3.2/bin/mpicxx; export PKG_CONFIG_PATH=$OPENBLAS_LIB/pkgconfig:$MPI_LIB/pkgconfig; ```. Even though the paths are correct and binaries do exist none of that works. I always get:; ```; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); ```. OpenBLAS is found for instance:; ```; Using 'PKG_CONFIG_PATH' from environment with value: '/opt/OpenBLAS/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.6; ```. FYI,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907
https://github.com/su2code/SU2/issues/1000#issuecomment-721280907:173,Deployability,install,install,173,I experience the same problem. . * mpich-3.3.2 is installed under /opt using:; ```; ./configure CC=$cc CXX=$cxx FC=$fc --enable-shared --prefix=/opt/mpich-3.3.2; make; make install; ```. * Then su2 build is initiated with:; ```; ./meson.py build \; -Denable-autodiff=true \; -Denable-openblas=true \; -Dwith-mpi=auto; ./ninja -C build install; ```. I tried exporting stuff like:; ```; export MPICC=/opt/mpich-3.3.2/bin/mpicc ; export MPICXX=/opt/mpich-3.3.2/bin/mpicxx; export PKG_CONFIG_PATH=$OPENBLAS_LIB/pkgconfig:$MPI_LIB/pkgconfig; ```. Even though the paths are correct and binaries do exist none of that works. I always get:; ```; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); ```. OpenBLAS is found for instance:; ```; Using 'PKG_CONFIG_PATH' from environment with value: '/opt/OpenBLAS/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.6; ```. FYI,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907
https://github.com/su2code/SU2/issues/1000#issuecomment-721280907:335,Deployability,install,install,335,I experience the same problem. . * mpich-3.3.2 is installed under /opt using:; ```; ./configure CC=$cc CXX=$cxx FC=$fc --enable-shared --prefix=/opt/mpich-3.3.2; make; make install; ```. * Then su2 build is initiated with:; ```; ./meson.py build \; -Denable-autodiff=true \; -Denable-openblas=true \; -Dwith-mpi=auto; ./ninja -C build install; ```. I tried exporting stuff like:; ```; export MPICC=/opt/mpich-3.3.2/bin/mpicc ; export MPICXX=/opt/mpich-3.3.2/bin/mpicxx; export PKG_CONFIG_PATH=$OPENBLAS_LIB/pkgconfig:$MPI_LIB/pkgconfig; ```. Even though the paths are correct and binaries do exist none of that works. I always get:; ```; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); ```. OpenBLAS is found for instance:; ```; Using 'PKG_CONFIG_PATH' from environment with value: '/opt/OpenBLAS/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.6; ```. FYI,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907
https://github.com/su2code/SU2/issues/1000#issuecomment-721280907:664,Integrability,depend,dependency,664,I experience the same problem. . * mpich-3.3.2 is installed under /opt using:; ```; ./configure CC=$cc CXX=$cxx FC=$fc --enable-shared --prefix=/opt/mpich-3.3.2; make; make install; ```. * Then su2 build is initiated with:; ```; ./meson.py build \; -Denable-autodiff=true \; -Denable-openblas=true \; -Dwith-mpi=auto; ./ninja -C build install; ```. I tried exporting stuff like:; ```; export MPICC=/opt/mpich-3.3.2/bin/mpicc ; export MPICXX=/opt/mpich-3.3.2/bin/mpicxx; export PKG_CONFIG_PATH=$OPENBLAS_LIB/pkgconfig:$MPI_LIB/pkgconfig; ```. Even though the paths are correct and binaries do exist none of that works. I always get:; ```; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); ```. OpenBLAS is found for instance:; ```; Using 'PKG_CONFIG_PATH' from environment with value: '/opt/OpenBLAS/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.6; ```. FYI,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907
https://github.com/su2code/SU2/issues/1000#issuecomment-721280907:757,Integrability,depend,dependency,757,I experience the same problem. . * mpich-3.3.2 is installed under /opt using:; ```; ./configure CC=$cc CXX=$cxx FC=$fc --enable-shared --prefix=/opt/mpich-3.3.2; make; make install; ```. * Then su2 build is initiated with:; ```; ./meson.py build \; -Denable-autodiff=true \; -Denable-openblas=true \; -Dwith-mpi=auto; ./ninja -C build install; ```. I tried exporting stuff like:; ```; export MPICC=/opt/mpich-3.3.2/bin/mpicc ; export MPICXX=/opt/mpich-3.3.2/bin/mpicxx; export PKG_CONFIG_PATH=$OPENBLAS_LIB/pkgconfig:$MPI_LIB/pkgconfig; ```. Even though the paths are correct and binaries do exist none of that works. I always get:; ```; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); ```. OpenBLAS is found for instance:; ```; Using 'PKG_CONFIG_PATH' from environment with value: '/opt/OpenBLAS/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.6; ```. FYI,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907
https://github.com/su2code/SU2/issues/1000#issuecomment-721280907:961,Integrability,depend,dependency,961,I experience the same problem. . * mpich-3.3.2 is installed under /opt using:; ```; ./configure CC=$cc CXX=$cxx FC=$fc --enable-shared --prefix=/opt/mpich-3.3.2; make; make install; ```. * Then su2 build is initiated with:; ```; ./meson.py build \; -Denable-autodiff=true \; -Denable-openblas=true \; -Dwith-mpi=auto; ./ninja -C build install; ```. I tried exporting stuff like:; ```; export MPICC=/opt/mpich-3.3.2/bin/mpicc ; export MPICXX=/opt/mpich-3.3.2/bin/mpicxx; export PKG_CONFIG_PATH=$OPENBLAS_LIB/pkgconfig:$MPI_LIB/pkgconfig; ```. Even though the paths are correct and binaries do exist none of that works. I always get:; ```; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); ```. OpenBLAS is found for instance:; ```; Using 'PKG_CONFIG_PATH' from environment with value: '/opt/OpenBLAS/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.6; ```. FYI,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907
https://github.com/su2code/SU2/issues/1000#issuecomment-721280907:86,Modifiability,config,configure,86,I experience the same problem. . * mpich-3.3.2 is installed under /opt using:; ```; ./configure CC=$cc CXX=$cxx FC=$fc --enable-shared --prefix=/opt/mpich-3.3.2; make; make install; ```. * Then su2 build is initiated with:; ```; ./meson.py build \; -Denable-autodiff=true \; -Denable-openblas=true \; -Dwith-mpi=auto; ./ninja -C build install; ```. I tried exporting stuff like:; ```; export MPICC=/opt/mpich-3.3.2/bin/mpicc ; export MPICXX=/opt/mpich-3.3.2/bin/mpicxx; export PKG_CONFIG_PATH=$OPENBLAS_LIB/pkgconfig:$MPI_LIB/pkgconfig; ```. Even though the paths are correct and binaries do exist none of that works. I always get:; ```; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); ```. OpenBLAS is found for instance:; ```; Using 'PKG_CONFIG_PATH' from environment with value: '/opt/OpenBLAS/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.6; ```. FYI,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907
https://github.com/su2code/SU2/issues/1000#issuecomment-721280907:716,Modifiability,config,config-tool,716,I experience the same problem. . * mpich-3.3.2 is installed under /opt using:; ```; ./configure CC=$cc CXX=$cxx FC=$fc --enable-shared --prefix=/opt/mpich-3.3.2; make; make install; ```. * Then su2 build is initiated with:; ```; ./meson.py build \; -Denable-autodiff=true \; -Denable-openblas=true \; -Dwith-mpi=auto; ./ninja -C build install; ```. I tried exporting stuff like:; ```; export MPICC=/opt/mpich-3.3.2/bin/mpicc ; export MPICXX=/opt/mpich-3.3.2/bin/mpicxx; export PKG_CONFIG_PATH=$OPENBLAS_LIB/pkgconfig:$MPI_LIB/pkgconfig; ```. Even though the paths are correct and binaries do exist none of that works. I always get:; ```; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); ```. OpenBLAS is found for instance:; ```; Using 'PKG_CONFIG_PATH' from environment with value: '/opt/OpenBLAS/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.6; ```. FYI,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907
https://github.com/su2code/SU2/issues/1000#issuecomment-721280907:811,Modifiability,config,config-tool,811,I experience the same problem. . * mpich-3.3.2 is installed under /opt using:; ```; ./configure CC=$cc CXX=$cxx FC=$fc --enable-shared --prefix=/opt/mpich-3.3.2; make; make install; ```. * Then su2 build is initiated with:; ```; ./meson.py build \; -Denable-autodiff=true \; -Denable-openblas=true \; -Dwith-mpi=auto; ./ninja -C build install; ```. I tried exporting stuff like:; ```; export MPICC=/opt/mpich-3.3.2/bin/mpicc ; export MPICXX=/opt/mpich-3.3.2/bin/mpicxx; export PKG_CONFIG_PATH=$OPENBLAS_LIB/pkgconfig:$MPI_LIB/pkgconfig; ```. Even though the paths are correct and binaries do exist none of that works. I always get:; ```; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); ```. OpenBLAS is found for instance:; ```; Using 'PKG_CONFIG_PATH' from environment with value: '/opt/OpenBLAS/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.6; ```. FYI,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907
https://github.com/su2code/SU2/issues/1000#issuecomment-721308181:245,Availability,error,error,245,"Yeah this issue is not unique to Arch Linux or to my machine specifically either!. I have tried this on at least 3 different ubuntu machines, with different versions, from 16.04 to 20.04. A few of my friends and juniors have tried as well, same error. I have built mpich several times, thinking I installed it improperly, to no avail. I would suggest, if you want to use mpich, use version 6.2 FALCON. I have it installed on one of my machines and it works just fine. I am not sure why there is such less support for this issue, you can see I sent multiple replies last time but did not get any response after some time so I just dropped it, thinking it will get resolved eventually. Please reopen this issue since this has not been resolved and is faced by multiple people. Thanks and regards,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721308181
https://github.com/su2code/SU2/issues/1000#issuecomment-721308181:328,Availability,avail,avail,328,"Yeah this issue is not unique to Arch Linux or to my machine specifically either!. I have tried this on at least 3 different ubuntu machines, with different versions, from 16.04 to 20.04. A few of my friends and juniors have tried as well, same error. I have built mpich several times, thinking I installed it improperly, to no avail. I would suggest, if you want to use mpich, use version 6.2 FALCON. I have it installed on one of my machines and it works just fine. I am not sure why there is such less support for this issue, you can see I sent multiple replies last time but did not get any response after some time so I just dropped it, thinking it will get resolved eventually. Please reopen this issue since this has not been resolved and is faced by multiple people. Thanks and regards,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721308181
https://github.com/su2code/SU2/issues/1000#issuecomment-721308181:297,Deployability,install,installed,297,"Yeah this issue is not unique to Arch Linux or to my machine specifically either!. I have tried this on at least 3 different ubuntu machines, with different versions, from 16.04 to 20.04. A few of my friends and juniors have tried as well, same error. I have built mpich several times, thinking I installed it improperly, to no avail. I would suggest, if you want to use mpich, use version 6.2 FALCON. I have it installed on one of my machines and it works just fine. I am not sure why there is such less support for this issue, you can see I sent multiple replies last time but did not get any response after some time so I just dropped it, thinking it will get resolved eventually. Please reopen this issue since this has not been resolved and is faced by multiple people. Thanks and regards,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721308181
https://github.com/su2code/SU2/issues/1000#issuecomment-721308181:412,Deployability,install,installed,412,"Yeah this issue is not unique to Arch Linux or to my machine specifically either!. I have tried this on at least 3 different ubuntu machines, with different versions, from 16.04 to 20.04. A few of my friends and juniors have tried as well, same error. I have built mpich several times, thinking I installed it improperly, to no avail. I would suggest, if you want to use mpich, use version 6.2 FALCON. I have it installed on one of my machines and it works just fine. I am not sure why there is such less support for this issue, you can see I sent multiple replies last time but did not get any response after some time so I just dropped it, thinking it will get resolved eventually. Please reopen this issue since this has not been resolved and is faced by multiple people. Thanks and regards,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721308181
https://github.com/su2code/SU2/issues/1000#issuecomment-721322008:96,Modifiability,config,configured,96,"@fertinaz the problem is that the pkg_config name for MPICH is not ""mpi"" which is what meson is configured to look for...; It is ""mpich"", please see my reply from 23 of May, it is very simple to edit the meson.build script to look for ""mpich"" instead of ""mpi"".; I have used this on numerous machines and the code works fine...; Whatever you do, please do not follow the advice to use 6.2.0, we have all worked extremely hard to make v7.x much faster, fix bugs, and add nice features... Unfortunately we cannot test every combination of compiler, operating system, and libraries.; I'm sure that somewhere, someone has fixed similar problems, sadly not all fixes make it back into the code. Other alternatives, some of which folks have suggested on this thread.; - Use ""custom-mpi"" mode, you will need to set some environment variables (CC=mpicc CXX=mpicxx etc. see above); - Use the legacy build system (i.e. follow the instructions for 6.2.0 but with the 7.0.7 code) be sure to add ""-DNDEBUG"" to the CXXFLAGS environment variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008
https://github.com/su2code/SU2/issues/1000#issuecomment-721322008:824,Modifiability,variab,variables,824,"@fertinaz the problem is that the pkg_config name for MPICH is not ""mpi"" which is what meson is configured to look for...; It is ""mpich"", please see my reply from 23 of May, it is very simple to edit the meson.build script to look for ""mpich"" instead of ""mpi"".; I have used this on numerous machines and the code works fine...; Whatever you do, please do not follow the advice to use 6.2.0, we have all worked extremely hard to make v7.x much faster, fix bugs, and add nice features... Unfortunately we cannot test every combination of compiler, operating system, and libraries.; I'm sure that somewhere, someone has fixed similar problems, sadly not all fixes make it back into the code. Other alternatives, some of which folks have suggested on this thread.; - Use ""custom-mpi"" mode, you will need to set some environment variables (CC=mpicc CXX=mpicxx etc. see above); - Use the legacy build system (i.e. follow the instructions for 6.2.0 but with the 7.0.7 code) be sure to add ""-DNDEBUG"" to the CXXFLAGS environment variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008
https://github.com/su2code/SU2/issues/1000#issuecomment-721322008:1021,Modifiability,variab,variable,1021,"@fertinaz the problem is that the pkg_config name for MPICH is not ""mpi"" which is what meson is configured to look for...; It is ""mpich"", please see my reply from 23 of May, it is very simple to edit the meson.build script to look for ""mpich"" instead of ""mpi"".; I have used this on numerous machines and the code works fine...; Whatever you do, please do not follow the advice to use 6.2.0, we have all worked extremely hard to make v7.x much faster, fix bugs, and add nice features... Unfortunately we cannot test every combination of compiler, operating system, and libraries.; I'm sure that somewhere, someone has fixed similar problems, sadly not all fixes make it back into the code. Other alternatives, some of which folks have suggested on this thread.; - Use ""custom-mpi"" mode, you will need to set some environment variables (CC=mpicc CXX=mpicxx etc. see above); - Use the legacy build system (i.e. follow the instructions for 6.2.0 but with the 7.0.7 code) be sure to add ""-DNDEBUG"" to the CXXFLAGS environment variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008
https://github.com/su2code/SU2/issues/1000#issuecomment-721322008:510,Testability,test,test,510,"@fertinaz the problem is that the pkg_config name for MPICH is not ""mpi"" which is what meson is configured to look for...; It is ""mpich"", please see my reply from 23 of May, it is very simple to edit the meson.build script to look for ""mpich"" instead of ""mpi"".; I have used this on numerous machines and the code works fine...; Whatever you do, please do not follow the advice to use 6.2.0, we have all worked extremely hard to make v7.x much faster, fix bugs, and add nice features... Unfortunately we cannot test every combination of compiler, operating system, and libraries.; I'm sure that somewhere, someone has fixed similar problems, sadly not all fixes make it back into the code. Other alternatives, some of which folks have suggested on this thread.; - Use ""custom-mpi"" mode, you will need to set some environment variables (CC=mpicc CXX=mpicxx etc. see above); - Use the legacy build system (i.e. follow the instructions for 6.2.0 but with the 7.0.7 code) be sure to add ""-DNDEBUG"" to the CXXFLAGS environment variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008
https://github.com/su2code/SU2/issues/1000#issuecomment-721322008:185,Usability,simpl,simple,185,"@fertinaz the problem is that the pkg_config name for MPICH is not ""mpi"" which is what meson is configured to look for...; It is ""mpich"", please see my reply from 23 of May, it is very simple to edit the meson.build script to look for ""mpich"" instead of ""mpi"".; I have used this on numerous machines and the code works fine...; Whatever you do, please do not follow the advice to use 6.2.0, we have all worked extremely hard to make v7.x much faster, fix bugs, and add nice features... Unfortunately we cannot test every combination of compiler, operating system, and libraries.; I'm sure that somewhere, someone has fixed similar problems, sadly not all fixes make it back into the code. Other alternatives, some of which folks have suggested on this thread.; - Use ""custom-mpi"" mode, you will need to set some environment variables (CC=mpicc CXX=mpicxx etc. see above); - Use the legacy build system (i.e. follow the instructions for 6.2.0 but with the 7.0.7 code) be sure to add ""-DNDEBUG"" to the CXXFLAGS environment variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:570,Availability,error,error,570,"Hi @pcarruscag,; I apologize for giving a poor suggestion (older version). The custom-mpi mode with all environment variables defined did not seem to work for me, as you can see from my comments on 29th of May and 8th of June.; Does the legacy build system mean using automake/make etc?. Also, I tried changing the dependency from mpi to mpich as you suggested. I changed the lines to: ; ```; mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; ```; and I got this error.; ```; meson.build:37:2: ERROR: mpich dependency does not accept ""language"" keyword argument; ```; So I removed the language part and reran the command to get the following, you can see it identifies mpich as a dependency:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=false -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu famil",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:601,Availability,ERROR,ERROR,601,"Hi @pcarruscag,; I apologize for giving a poor suggestion (older version). The custom-mpi mode with all environment variables defined did not seem to work for me, as you can see from my comments on 29th of May and 8th of June.; Does the legacy build system mean using automake/make etc?. Also, I tried changing the dependency from mpi to mpich as you suggested. I changed the lines to: ; ```; mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; ```; and I got this error.; ```; meson.build:37:2: ERROR: mpich dependency does not accept ""language"" keyword argument; ```; So I removed the language part and reran the command to get the following, you can see it identifies mpich as a dependency:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=false -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu famil",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:6913,Availability,error,error,6913,"_CFD/src -Wl,-rpath-link,/home/slimshady/UserPackages/SU2_HOME/build/externals/cgns -Wl,-rpath-link,/home/slimshady/UserPackages/SU2_HOME/build/externals/metis -Wl,-rpath-link,/home/slimshady/UserPackages/SU2_HOME/build/externals/parmetis -Wl,-rpath-link,/home/slimshady/UserPackages/SU2_HOME/build/externals/tecio/teciompisrc -Wl,-rpath-link,/home/slimshady/UserPackages/SU2_HOME/build/Common/src; /usr/bin/ld: Common/src/libSU2Common.a(toolboxes_CSymmetricMatrix.cpp.o): in function `CSymmetricMatrix::CalcInv_sytri()':; CSymmetricMatrix.cpp:(.text+0x15c): undefined reference to `dsytrf_'; /usr/bin/ld: CSymmetricMatrix.cpp:(.text+0x1dd): undefined reference to `dsytrf_'; /usr/bin/ld: CSymmetricMatrix.cpp:(.text+0x20d): undefined reference to `dsytri_'; /usr/bin/ld: Common/src/libSU2Common.a(toolboxes_CSymmetricMatrix.cpp.o): in function `CSymmetricMatrix::CalcInv_potri()':; CSymmetricMatrix.cpp:(.text+0x593): undefined reference to `dpotrf_'; /usr/bin/ld: CSymmetricMatrix.cpp:(.text+0x6c6): undefined reference to `dpotri_'; /usr/bin/ld: Common/src/libSU2Common.a(fem_fem_geometry_structure.cpp.o): in function `CMeshFEM_DG::MetricTermsVolumeElements(CConfig*)':; fem_geometry_structure.cpp:(.text+0x13f19): undefined reference to `dpotrf_'; /usr/bin/ld: fem_geometry_structure.cpp:(.text+0x14131): undefined reference to `dpotri_'; /usr/bin/ld: Common/src/libSU2Common.a(wall_model.cpp.o): in function `CWallModel1DEQ::WallShearStressAndHeatFlux(double, double, double, double, double, bool, double, bool, CFluidModel*, double&, double&, double&, double&)':; wall_model.cpp:(.text+0x1267): undefined reference to `dgtsv_'; /usr/bin/ld: wall_model.cpp:(.text+0x1a0c): undefined reference to `dgtsv_'; collect2: error: ld returned 1 exit status; [588/894] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/output_CAdjFlowIncOutput.cpp.o; ninja: build stopped: subcommand failed.; ```. Since you have made it work with mpich on multiple machines, can you help me out please, I am stuck here",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2670,Deployability,install,install,2670,"in/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYT",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2752,Deployability,install,install,2752,"; C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2883,Deployability,Release,Release,2883,"/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2956,Deployability,Configurat,Configuration,2956,"python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3333,Deployability,update,update,3333,"acting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3425,Deployability,configurat,configuration,3425,"fig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib /usr/local/mpich-3.3.2/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3685,Deployability,install,install,3685,"in/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib /usr/local/mpich-3.3.2/lib/libmpi.so -lm /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libudev.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libpciaccess.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libxml2.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3709,Deployability,install,install,3709,"in/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib /usr/local/mpich-3.3.2/lib/libmpi.so -lm /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libudev.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libpciaccess.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libxml2.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3934,Deployability,install,install,3934,"---------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib /usr/local/mpich-3.3.2/lib/libmpi.so -lm /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libudev.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libpciaccess.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libxml2.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libunwind.so -lpthread -lrt /usr/lib/libopenblas.so -Wl,--end-group -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib '-Wl,-rpath,$ORIGIN/:$ORIGIN/../../externals/cgns:$ORIGIN/../../exte",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:315,Integrability,depend,dependency,315,"Hi @pcarruscag,; I apologize for giving a poor suggestion (older version). The custom-mpi mode with all environment variables defined did not seem to work for me, as you can see from my comments on 29th of May and 8th of June.; Does the legacy build system mean using automake/make etc?. Also, I tried changing the dependency from mpi to mpich as you suggested. I changed the lines to: ; ```; mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; ```; and I got this error.; ```; meson.build:37:2: ERROR: mpich dependency does not accept ""language"" keyword argument; ```; So I removed the language part and reran the command to get the following, you can see it identifies mpich as a dependency:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=false -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu famil",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:404,Integrability,depend,dependency,404,"Hi @pcarruscag,; I apologize for giving a poor suggestion (older version). The custom-mpi mode with all environment variables defined did not seem to work for me, as you can see from my comments on 29th of May and 8th of June.; Does the legacy build system mean using automake/make etc?. Also, I tried changing the dependency from mpi to mpich as you suggested. I changed the lines to: ; ```; mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; ```; and I got this error.; ```; meson.build:37:2: ERROR: mpich dependency does not accept ""language"" keyword argument; ```; So I removed the language part and reran the command to get the following, you can see it identifies mpich as a dependency:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=false -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu famil",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:476,Integrability,depend,dependency,476,"Hi @pcarruscag,; I apologize for giving a poor suggestion (older version). The custom-mpi mode with all environment variables defined did not seem to work for me, as you can see from my comments on 29th of May and 8th of June.; Does the legacy build system mean using automake/make etc?. Also, I tried changing the dependency from mpi to mpich as you suggested. I changed the lines to: ; ```; mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; ```; and I got this error.; ```; meson.build:37:2: ERROR: mpich dependency does not accept ""language"" keyword argument; ```; So I removed the language part and reran the command to get the following, you can see it identifies mpich as a dependency:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=false -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu famil",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:614,Integrability,depend,dependency,614,"Hi @pcarruscag,; I apologize for giving a poor suggestion (older version). The custom-mpi mode with all environment variables defined did not seem to work for me, as you can see from my comments on 29th of May and 8th of June.; Does the legacy build system mean using automake/make etc?. Also, I tried changing the dependency from mpi to mpich as you suggested. I changed the lines to: ; ```; mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; ```; and I got this error.; ```; meson.build:37:2: ERROR: mpich dependency does not accept ""language"" keyword argument; ```; So I removed the language part and reran the command to get the following, you can see it identifies mpich as a dependency:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=false -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu famil",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:787,Integrability,depend,dependency,787,"Hi @pcarruscag,; I apologize for giving a poor suggestion (older version). The custom-mpi mode with all environment variables defined did not seem to work for me, as you can see from my comments on 29th of May and 8th of June.; Does the legacy build system mean using automake/make etc?. Also, I tried changing the dependency from mpi to mpich as you suggested. I changed the lines to: ; ```; mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; ```; and I got this error.; ```; meson.build:37:2: ERROR: mpich dependency does not accept ""language"" keyword argument; ```; So I removed the language part and reran the command to get the following, you can see it identifies mpich as a dependency:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=false -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu famil",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2234,Integrability,depend,dependency,2234,"ng 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2269,Integrability,Depend,Dependency,2269,"e: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2313,Integrability,Message,Message,2313,"ig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment vari",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2446,Integrability,depend,dependency,2446,"ion: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2526,Integrability,Message,Message,2526,"c'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2620,Integrability,Depend,Dependency,2620,"in/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYT",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2765,Integrability,Message,Message,2765,"/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3172,Integrability,Wrap,Wrapper,3172,"python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:116,Modifiability,variab,variables,116,"Hi @pcarruscag,; I apologize for giving a poor suggestion (older version). The custom-mpi mode with all environment variables defined did not seem to work for me, as you can see from my comments on 29th of May and 8th of June.; Does the legacy build system mean using automake/make etc?. Also, I tried changing the dependency from mpi to mpich as you suggested. I changed the lines to: ; ```; mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; ```; and I got this error.; ```; meson.build:37:2: ERROR: mpich dependency does not accept ""language"" keyword argument; ```; So I removed the language part and reran the command to get the following, you can see it identifies mpich as a dependency:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=false -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu famil",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2095,Modifiability,config,config,2095,"ALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -----------------------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2116,Modifiability,config,config,2116,"ALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -----------------------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2956,Modifiability,Config,Configuration,2956,"python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3317,Modifiability,variab,variables,3317,"acting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3425,Modifiability,config,configuration,3425,"fig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib /usr/local/mpich-3.3.2/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2304,Performance,cache,cached,2304,"ig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment vari",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137
https://github.com/su2code/SU2/issues/1000#issuecomment-721373702:224,Availability,error,error,224,"That does not look like an MPI problem (yup automake + preconfigure.py is the legacy system). The probable problem there is that your OpenBLAS was not build with support for LAPACK functions (the undefined references in the error messages from the linker). If you are building OpenBLAS from source there is an option to provide LAPACK support (if I recall correctly, this is the default so I'm guessing you are using what the operating system provides).; The best solution is to get OpenBLAS with LAPACK support, alternatively:; - Install LAPACK for your operating system and below line 155 of meson.build add ```su2_deps += dependency('lapack')``` (this will use pkg config).; - Delete line 153 of meson.build, i.e. keep BLAS but disable LAPACK, this can either make what you are doing much slower, or have no difference at all...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721373702
https://github.com/su2code/SU2/issues/1000#issuecomment-721373702:531,Deployability,Install,Install,531,"That does not look like an MPI problem (yup automake + preconfigure.py is the legacy system). The probable problem there is that your OpenBLAS was not build with support for LAPACK functions (the undefined references in the error messages from the linker). If you are building OpenBLAS from source there is an option to provide LAPACK support (if I recall correctly, this is the default so I'm guessing you are using what the operating system provides).; The best solution is to get OpenBLAS with LAPACK support, alternatively:; - Install LAPACK for your operating system and below line 155 of meson.build add ```su2_deps += dependency('lapack')``` (this will use pkg config).; - Delete line 153 of meson.build, i.e. keep BLAS but disable LAPACK, this can either make what you are doing much slower, or have no difference at all...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721373702
https://github.com/su2code/SU2/issues/1000#issuecomment-721373702:230,Integrability,message,messages,230,"That does not look like an MPI problem (yup automake + preconfigure.py is the legacy system). The probable problem there is that your OpenBLAS was not build with support for LAPACK functions (the undefined references in the error messages from the linker). If you are building OpenBLAS from source there is an option to provide LAPACK support (if I recall correctly, this is the default so I'm guessing you are using what the operating system provides).; The best solution is to get OpenBLAS with LAPACK support, alternatively:; - Install LAPACK for your operating system and below line 155 of meson.build add ```su2_deps += dependency('lapack')``` (this will use pkg config).; - Delete line 153 of meson.build, i.e. keep BLAS but disable LAPACK, this can either make what you are doing much slower, or have no difference at all...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721373702
https://github.com/su2code/SU2/issues/1000#issuecomment-721373702:625,Integrability,depend,dependency,625,"That does not look like an MPI problem (yup automake + preconfigure.py is the legacy system). The probable problem there is that your OpenBLAS was not build with support for LAPACK functions (the undefined references in the error messages from the linker). If you are building OpenBLAS from source there is an option to provide LAPACK support (if I recall correctly, this is the default so I'm guessing you are using what the operating system provides).; The best solution is to get OpenBLAS with LAPACK support, alternatively:; - Install LAPACK for your operating system and below line 155 of meson.build add ```su2_deps += dependency('lapack')``` (this will use pkg config).; - Delete line 153 of meson.build, i.e. keep BLAS but disable LAPACK, this can either make what you are doing much slower, or have no difference at all...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721373702
https://github.com/su2code/SU2/issues/1000#issuecomment-721373702:668,Modifiability,config,config,668,"That does not look like an MPI problem (yup automake + preconfigure.py is the legacy system). The probable problem there is that your OpenBLAS was not build with support for LAPACK functions (the undefined references in the error messages from the linker). If you are building OpenBLAS from source there is an option to provide LAPACK support (if I recall correctly, this is the default so I'm guessing you are using what the operating system provides).; The best solution is to get OpenBLAS with LAPACK support, alternatively:; - Install LAPACK for your operating system and below line 155 of meson.build add ```su2_deps += dependency('lapack')``` (this will use pkg config).; - Delete line 153 of meson.build, i.e. keep BLAS but disable LAPACK, this can either make what you are doing much slower, or have no difference at all...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721373702
https://github.com/su2code/SU2/issues/1000#issuecomment-721493822:539,Integrability,depend,dependency,539,"Oh yeah, @pcarruscag, I finally got it to work. I am wondering if we can add `-Dmpi-name` flag like we have a `-Dblas-name` flag because I think mpich is a very common MPI implementation and accommodating for it would be really beneficial, for people and the package both. The lapack thing was discussed in #991 earlier and I forgot I didn't have that change in my commit (it has been months). Thanks a lot!. @fertinaz, you might be able to get it to work with this change in `meson.build` file, like Pedro suggested:; > ```; > mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; > dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; > ```; I had kept the `-Dcustom-mpi` flag as `false`; Make sure you export all the environment variables:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/opt/mpich-3.3.2/bin/mpicc'; export MPICXX='/opt/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/opt/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/opt/mpich-3.3.2/include'; export C_FLAGS='-I/opt/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/opt/mpich-3.3.2/lib/pkgconfig'; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721493822
https://github.com/su2code/SU2/issues/1000#issuecomment-721493822:613,Integrability,depend,dependency,613,"Oh yeah, @pcarruscag, I finally got it to work. I am wondering if we can add `-Dmpi-name` flag like we have a `-Dblas-name` flag because I think mpich is a very common MPI implementation and accommodating for it would be really beneficial, for people and the package both. The lapack thing was discussed in #991 earlier and I forgot I didn't have that change in my commit (it has been months). Thanks a lot!. @fertinaz, you might be able to get it to work with this change in `meson.build` file, like Pedro suggested:; > ```; > mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; > dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; > ```; I had kept the `-Dcustom-mpi` flag as `false`; Make sure you export all the environment variables:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/opt/mpich-3.3.2/bin/mpicc'; export MPICXX='/opt/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/opt/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/opt/mpich-3.3.2/include'; export C_FLAGS='-I/opt/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/opt/mpich-3.3.2/lib/pkgconfig'; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721493822
https://github.com/su2code/SU2/issues/1000#issuecomment-721493822:782,Modifiability,variab,variables,782,"Oh yeah, @pcarruscag, I finally got it to work. I am wondering if we can add `-Dmpi-name` flag like we have a `-Dblas-name` flag because I think mpich is a very common MPI implementation and accommodating for it would be really beneficial, for people and the package both. The lapack thing was discussed in #991 earlier and I forgot I didn't have that change in my commit (it has been months). Thanks a lot!. @fertinaz, you might be able to get it to work with this change in `meson.build` file, like Pedro suggested:; > ```; > mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; > dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; > ```; I had kept the `-Dcustom-mpi` flag as `false`; Make sure you export all the environment variables:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/opt/mpich-3.3.2/bin/mpicc'; export MPICXX='/opt/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/opt/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/opt/mpich-3.3.2/include'; export C_FLAGS='-I/opt/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/opt/mpich-3.3.2/lib/pkgconfig'; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721493822
https://github.com/su2code/SU2/issues/1000#issuecomment-721516253:720,Availability,error,error,720,"Hey @aditya12398 thanks, @pcarruscag's suggestion resolved the build problem. . However, I still have issues with parallel execution. When I launch a job using 4 cores, I see each output 4 times as if I initiate 4 separate SU2 instances. This is how I start the job:; ```; parallel_computation.py -f turb_naca0012.cfg -n 4; ```. I also tried the following command which produces the same result:; ```; mpirun -n 4 SU2_CFD turb_naca0012.cfg; ```. This is no longer the same issue though. If you want me to open a new issue, I can do that later, but I'd appreciate if you have any quick suggestions for the moment. Note: I've installed `mpi4py`, unfortunately when `-Denable-pywrapper=true` is set I receive another build error.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721516253
https://github.com/su2code/SU2/issues/1000#issuecomment-721516253:624,Deployability,install,installed,624,"Hey @aditya12398 thanks, @pcarruscag's suggestion resolved the build problem. . However, I still have issues with parallel execution. When I launch a job using 4 cores, I see each output 4 times as if I initiate 4 separate SU2 instances. This is how I start the job:; ```; parallel_computation.py -f turb_naca0012.cfg -n 4; ```. I also tried the following command which produces the same result:; ```; mpirun -n 4 SU2_CFD turb_naca0012.cfg; ```. This is no longer the same issue though. If you want me to open a new issue, I can do that later, but I'd appreciate if you have any quick suggestions for the moment. Note: I've installed `mpi4py`, unfortunately when `-Denable-pywrapper=true` is set I receive another build error.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721516253
https://github.com/su2code/SU2/issues/1000#issuecomment-721555309:440,Availability,error,error,440,"Do you have openmpi installed? Also, did you rebuild using the `meson setup --wipe build` command or `meson configure build <flags>` followed by the wipe command? If you just reran the ninja command then perhaps that could be the reason. I faced this issue first when I installed SU2 with openmpi and then used the mpich executable. So you might want to look into that. About the pywrapper issue, is your python version >= 3.7? What is the error that you are facing?. Edit: I forgot to mention, I ran the parallel script using both the command that you mentioned, it works just fine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721555309
https://github.com/su2code/SU2/issues/1000#issuecomment-721555309:20,Deployability,install,installed,20,"Do you have openmpi installed? Also, did you rebuild using the `meson setup --wipe build` command or `meson configure build <flags>` followed by the wipe command? If you just reran the ninja command then perhaps that could be the reason. I faced this issue first when I installed SU2 with openmpi and then used the mpich executable. So you might want to look into that. About the pywrapper issue, is your python version >= 3.7? What is the error that you are facing?. Edit: I forgot to mention, I ran the parallel script using both the command that you mentioned, it works just fine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721555309
https://github.com/su2code/SU2/issues/1000#issuecomment-721555309:270,Deployability,install,installed,270,"Do you have openmpi installed? Also, did you rebuild using the `meson setup --wipe build` command or `meson configure build <flags>` followed by the wipe command? If you just reran the ninja command then perhaps that could be the reason. I faced this issue first when I installed SU2 with openmpi and then used the mpich executable. So you might want to look into that. About the pywrapper issue, is your python version >= 3.7? What is the error that you are facing?. Edit: I forgot to mention, I ran the parallel script using both the command that you mentioned, it works just fine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721555309
https://github.com/su2code/SU2/issues/1000#issuecomment-721555309:108,Modifiability,config,configure,108,"Do you have openmpi installed? Also, did you rebuild using the `meson setup --wipe build` command or `meson configure build <flags>` followed by the wipe command? If you just reran the ninja command then perhaps that could be the reason. I faced this issue first when I installed SU2 with openmpi and then used the mpich executable. So you might want to look into that. About the pywrapper issue, is your python version >= 3.7? What is the error that you are facing?. Edit: I forgot to mention, I ran the parallel script using both the command that you mentioned, it works just fine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721555309
https://github.com/su2code/SU2/issues/1003#issuecomment-634557333:174,Deployability,integrat,integrated,174,Hello @ng0177! The mass and stiffness matrices are calculated in the structural solver which could be extracted and used offline for modal analysis. At the moment this isn't integrated as an overall modal solver but I agree it would be a useful feature.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003#issuecomment-634557333
https://github.com/su2code/SU2/issues/1003#issuecomment-634557333:174,Integrability,integrat,integrated,174,Hello @ng0177! The mass and stiffness matrices are calculated in the structural solver which could be extracted and used offline for modal analysis. At the moment this isn't integrated as an overall modal solver but I agree it would be a useful feature.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003#issuecomment-634557333
https://github.com/su2code/SU2/issues/1003#issuecomment-635813021:143,Performance,tune,tune,143,"There are a couple of talks in the upcoming SU2 conference (https://su2foundation.org/su2conference2020/) which sound related to this, perhaps tune in to those.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003#issuecomment-635813021
https://github.com/su2code/SU2/issues/1003#issuecomment-637031316:121,Performance,optimiz,optimization,121,try matlab or python scripting in conjuction with ABAQUS or ANSYS for introducing genetic algorithms or other simulation optimization methods.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003#issuecomment-637031316
https://github.com/su2code/SU2/pull/1004#issuecomment-635341008:23,Deployability,Release,Release,23,Whats the status here? Release v7.0.5 will be out tmrw :),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1004#issuecomment-635341008
https://github.com/su2code/SU2/issues/1005#issuecomment-635495594:154,Energy Efficiency,efficient,efficient,154,"Actually, on closer look, this seems ok. I am only averaging the grid velocities on either side of the face, not the solution. That routine might be more efficient as an edge loop, but should be correct. If you're really bored, see pg. 83 for details about the Geometric Conservation Law as implemented there: https://economon.github.io/docs/economon_dissertation.pdf",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1005#issuecomment-635495594
https://github.com/su2code/SU2/issues/1005#issuecomment-635495594:132,Integrability,rout,routine,132,"Actually, on closer look, this seems ok. I am only averaging the grid velocities on either side of the face, not the solution. That routine might be more efficient as an edge loop, but should be correct. If you're really bored, see pg. 83 for details about the Geometric Conservation Law as implemented there: https://economon.github.io/docs/economon_dissertation.pdf",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1005#issuecomment-635495594
https://github.com/su2code/SU2/pull/1006#issuecomment-635921323:155,Testability,test,test,155,"Thanks for opening the PR! Is this a work-in-progress? If yes, either use WIP in the title or change it to a draft. . Two other things:. 1. Please add the test case meshes to the develop branch of the TestCase repository, otherwise the regression tests won't find them. I just removed them from the master branch.; 2. Something seems a little bit off here. I don't know why git thinks that a lot the commits are new (although they are already in develop). I guess the reason is that develop has not been merged for a very long time ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006#issuecomment-635921323
https://github.com/su2code/SU2/pull/1006#issuecomment-635921323:201,Testability,Test,TestCase,201,"Thanks for opening the PR! Is this a work-in-progress? If yes, either use WIP in the title or change it to a draft. . Two other things:. 1. Please add the test case meshes to the develop branch of the TestCase repository, otherwise the regression tests won't find them. I just removed them from the master branch.; 2. Something seems a little bit off here. I don't know why git thinks that a lot the commits are new (although they are already in develop). I guess the reason is that develop has not been merged for a very long time ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006#issuecomment-635921323
https://github.com/su2code/SU2/pull/1006#issuecomment-635921323:247,Testability,test,tests,247,"Thanks for opening the PR! Is this a work-in-progress? If yes, either use WIP in the title or change it to a draft. . Two other things:. 1. Please add the test case meshes to the develop branch of the TestCase repository, otherwise the regression tests won't find them. I just removed them from the master branch.; 2. Something seems a little bit off here. I don't know why git thinks that a lot the commits are new (although they are already in develop). I guess the reason is that develop has not been merged for a very long time ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006#issuecomment-635921323
https://github.com/su2code/SU2/pull/1006#issuecomment-635923686:135,Availability,fault,fault,135,"Another issue: it looks like you added a lot of temporary build files to git, like `ninja` ,the `build` folder etc. Which is partly my fault, as `ninja` should be probably added to .gitignore. Nevertheless, I can only recommend to always check what is staged before commit using `git status -uno`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006#issuecomment-635923686
https://github.com/su2code/SU2/pull/1009#issuecomment-636478203:364,Deployability,update,update,364,"This is the sort of scalability (in terms of time to solution, not per iteration) we get now:; ![image](https://user-images.githubusercontent.com/38071223/83768964-2fb60b00-a677-11ea-91fb-794cc2af4652.png); Which you can directly compare with #861. Edit: The results at 192c are actually better, it depends on the position of the cluster nodes in the network, the update is apples to apples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009#issuecomment-636478203
https://github.com/su2code/SU2/pull/1009#issuecomment-636478203:299,Integrability,depend,depends,299,"This is the sort of scalability (in terms of time to solution, not per iteration) we get now:; ![image](https://user-images.githubusercontent.com/38071223/83768964-2fb60b00-a677-11ea-91fb-794cc2af4652.png); Which you can directly compare with #861. Edit: The results at 192c are actually better, it depends on the position of the cluster nodes in the network, the update is apples to apples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009#issuecomment-636478203
https://github.com/su2code/SU2/pull/1009#issuecomment-636478203:20,Performance,scalab,scalability,20,"This is the sort of scalability (in terms of time to solution, not per iteration) we get now:; ![image](https://user-images.githubusercontent.com/38071223/83768964-2fb60b00-a677-11ea-91fb-794cc2af4652.png); Which you can directly compare with #861. Edit: The results at 192c are actually better, it depends on the position of the cluster nodes in the network, the update is apples to apples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009#issuecomment-636478203
https://github.com/su2code/SU2/pull/1010#issuecomment-636475242:118,Deployability,integrat,integration,118,I am fine with this request from a conceptual point of view. Once we complete the alignment with develop and the full integration with Mutation++ we might need to review the config structure according to the discussions we had sometime ago. I am attaching here a snapshot illustrating where we would like to head with it. We will need to review it especially considering the efficiency of the approach that uses Mutation++ but allow introducing a custom mechanism of reaction in CHEMKIN format.; ![config-01](https://user-images.githubusercontent.com/22177881/83354211-4561c280-a34f-11ea-9920-f6f066b72d14.png); ![config-02](https://user-images.githubusercontent.com/22177881/83354220-47c41c80-a34f-11ea-9022-b49f132abf88.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-636475242
https://github.com/su2code/SU2/pull/1010#issuecomment-636475242:118,Integrability,integrat,integration,118,I am fine with this request from a conceptual point of view. Once we complete the alignment with develop and the full integration with Mutation++ we might need to review the config structure according to the discussions we had sometime ago. I am attaching here a snapshot illustrating where we would like to head with it. We will need to review it especially considering the efficiency of the approach that uses Mutation++ but allow introducing a custom mechanism of reaction in CHEMKIN format.; ![config-01](https://user-images.githubusercontent.com/22177881/83354211-4561c280-a34f-11ea-9920-f6f066b72d14.png); ![config-02](https://user-images.githubusercontent.com/22177881/83354220-47c41c80-a34f-11ea-9022-b49f132abf88.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-636475242
https://github.com/su2code/SU2/pull/1010#issuecomment-636475242:174,Modifiability,config,config,174,I am fine with this request from a conceptual point of view. Once we complete the alignment with develop and the full integration with Mutation++ we might need to review the config structure according to the discussions we had sometime ago. I am attaching here a snapshot illustrating where we would like to head with it. We will need to review it especially considering the efficiency of the approach that uses Mutation++ but allow introducing a custom mechanism of reaction in CHEMKIN format.; ![config-01](https://user-images.githubusercontent.com/22177881/83354211-4561c280-a34f-11ea-9920-f6f066b72d14.png); ![config-02](https://user-images.githubusercontent.com/22177881/83354220-47c41c80-a34f-11ea-9022-b49f132abf88.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-636475242
https://github.com/su2code/SU2/pull/1010#issuecomment-636475242:498,Modifiability,config,config-,498,I am fine with this request from a conceptual point of view. Once we complete the alignment with develop and the full integration with Mutation++ we might need to review the config structure according to the discussions we had sometime ago. I am attaching here a snapshot illustrating where we would like to head with it. We will need to review it especially considering the efficiency of the approach that uses Mutation++ but allow introducing a custom mechanism of reaction in CHEMKIN format.; ![config-01](https://user-images.githubusercontent.com/22177881/83354211-4561c280-a34f-11ea-9920-f6f066b72d14.png); ![config-02](https://user-images.githubusercontent.com/22177881/83354220-47c41c80-a34f-11ea-9022-b49f132abf88.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-636475242
https://github.com/su2code/SU2/pull/1010#issuecomment-636475242:614,Modifiability,config,config-,614,I am fine with this request from a conceptual point of view. Once we complete the alignment with develop and the full integration with Mutation++ we might need to review the config structure according to the discussions we had sometime ago. I am attaching here a snapshot illustrating where we would like to head with it. We will need to review it especially considering the efficiency of the approach that uses Mutation++ but allow introducing a custom mechanism of reaction in CHEMKIN format.; ![config-01](https://user-images.githubusercontent.com/22177881/83354211-4561c280-a34f-11ea-9920-f6f066b72d14.png); ![config-02](https://user-images.githubusercontent.com/22177881/83354220-47c41c80-a34f-11ea-9022-b49f132abf88.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-636475242
https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:340,Availability,error,error,340,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715
https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:360,Energy Efficiency,adapt,adapt,360,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715
https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:360,Modifiability,adapt,adapt,360,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715
https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:425,Modifiability,config,configs,425,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715
https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:390,Safety,avoid,avoid,390,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715
https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:320,Testability,test,test,320,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715
https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:154,Usability,simpl,simple,154,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715
https://github.com/su2code/SU2/issues/1011#issuecomment-636534481:3,Availability,fault,fault,3,"My fault, I'll fix it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1011#issuecomment-636534481
https://github.com/su2code/SU2/pull/1014#issuecomment-654324437:38,Usability,feedback,feedback,38,"@pcarruscag thanks for the additional feedback. some of these comments were already in my plans, but can only do one thing at a time of course. In any case it's good to see we're thinking in the same way, confirms I'm heading in the right direction, so I definitely appreciate it. Others I had not thought about it at all, even more useful! Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014#issuecomment-654324437
https://github.com/su2code/SU2/pull/1014#issuecomment-663934671:18,Deployability,update,updates,18,Lots of different updates have been done to incorporate all feedback and make improvements to this PR. It seems to be in a solid place to be merged with develop. @pcarruscag @talbring,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014#issuecomment-663934671
https://github.com/su2code/SU2/pull/1014#issuecomment-663934671:60,Usability,feedback,feedback,60,Lots of different updates have been done to incorporate all feedback and make improvements to this PR. It seems to be in a solid place to be merged with develop. @pcarruscag @talbring,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014#issuecomment-663934671
https://github.com/su2code/SU2/pull/1016#issuecomment-639018734:78,Modifiability,variab,variable,78,"Folks,. Any idea why the CodeFactor fails here? I just replaced the name of a variable in 4 lines. Also restarting the check for CodeFactor does not seem to work. Thanks,; Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1016#issuecomment-639018734
https://github.com/su2code/SU2/issues/1017#issuecomment-639520678:526,Deployability,continuous,continuous,526,"For SU2_DOT_AD the mesh deformation is differentiated manually, this is easy to do because it is a linear operation and the stiffness matrix does not depend on the design variables. You can read more about this kind of manual differentiation (forward and reverse) here: https://people.maths.ox.ac.uk/gilesm/files/NA-08-01.pdf. 1. If there is a better way please get involved in the optimization overall discussion. 2. Your interpretation of the sensitivities is correct. For clarity the FD mode of SU2_DOT is for use with the continuous adjoint only, for which the sensitivities at the surface already include the projection. 3. Not entirely sure if I understood. I think the interpretation of the boundary displacement sensitivities depends on how you initialize the adjoints. Formally what you should get is the product of the Jacobian transpose with the vector of adjoints you initialize. Those surface sensitivities are different from the ones in the file because they include the volume projection, whereas the ones in the file do not (they are the sensitivity wrt the surface nodes, but not considering that moving surface nodes also moves interior nodes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678
https://github.com/su2code/SU2/issues/1017#issuecomment-639520678:150,Integrability,depend,depend,150,"For SU2_DOT_AD the mesh deformation is differentiated manually, this is easy to do because it is a linear operation and the stiffness matrix does not depend on the design variables. You can read more about this kind of manual differentiation (forward and reverse) here: https://people.maths.ox.ac.uk/gilesm/files/NA-08-01.pdf. 1. If there is a better way please get involved in the optimization overall discussion. 2. Your interpretation of the sensitivities is correct. For clarity the FD mode of SU2_DOT is for use with the continuous adjoint only, for which the sensitivities at the surface already include the projection. 3. Not entirely sure if I understood. I think the interpretation of the boundary displacement sensitivities depends on how you initialize the adjoints. Formally what you should get is the product of the Jacobian transpose with the vector of adjoints you initialize. Those surface sensitivities are different from the ones in the file because they include the volume projection, whereas the ones in the file do not (they are the sensitivity wrt the surface nodes, but not considering that moving surface nodes also moves interior nodes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678
https://github.com/su2code/SU2/issues/1017#issuecomment-639520678:734,Integrability,depend,depends,734,"For SU2_DOT_AD the mesh deformation is differentiated manually, this is easy to do because it is a linear operation and the stiffness matrix does not depend on the design variables. You can read more about this kind of manual differentiation (forward and reverse) here: https://people.maths.ox.ac.uk/gilesm/files/NA-08-01.pdf. 1. If there is a better way please get involved in the optimization overall discussion. 2. Your interpretation of the sensitivities is correct. For clarity the FD mode of SU2_DOT is for use with the continuous adjoint only, for which the sensitivities at the surface already include the projection. 3. Not entirely sure if I understood. I think the interpretation of the boundary displacement sensitivities depends on how you initialize the adjoints. Formally what you should get is the product of the Jacobian transpose with the vector of adjoints you initialize. Those surface sensitivities are different from the ones in the file because they include the volume projection, whereas the ones in the file do not (they are the sensitivity wrt the surface nodes, but not considering that moving surface nodes also moves interior nodes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678
https://github.com/su2code/SU2/issues/1017#issuecomment-639520678:171,Modifiability,variab,variables,171,"For SU2_DOT_AD the mesh deformation is differentiated manually, this is easy to do because it is a linear operation and the stiffness matrix does not depend on the design variables. You can read more about this kind of manual differentiation (forward and reverse) here: https://people.maths.ox.ac.uk/gilesm/files/NA-08-01.pdf. 1. If there is a better way please get involved in the optimization overall discussion. 2. Your interpretation of the sensitivities is correct. For clarity the FD mode of SU2_DOT is for use with the continuous adjoint only, for which the sensitivities at the surface already include the projection. 3. Not entirely sure if I understood. I think the interpretation of the boundary displacement sensitivities depends on how you initialize the adjoints. Formally what you should get is the product of the Jacobian transpose with the vector of adjoints you initialize. Those surface sensitivities are different from the ones in the file because they include the volume projection, whereas the ones in the file do not (they are the sensitivity wrt the surface nodes, but not considering that moving surface nodes also moves interior nodes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678
https://github.com/su2code/SU2/issues/1017#issuecomment-639520678:382,Performance,optimiz,optimization,382,"For SU2_DOT_AD the mesh deformation is differentiated manually, this is easy to do because it is a linear operation and the stiffness matrix does not depend on the design variables. You can read more about this kind of manual differentiation (forward and reverse) here: https://people.maths.ox.ac.uk/gilesm/files/NA-08-01.pdf. 1. If there is a better way please get involved in the optimization overall discussion. 2. Your interpretation of the sensitivities is correct. For clarity the FD mode of SU2_DOT is for use with the continuous adjoint only, for which the sensitivities at the surface already include the projection. 3. Not entirely sure if I understood. I think the interpretation of the boundary displacement sensitivities depends on how you initialize the adjoints. Formally what you should get is the product of the Jacobian transpose with the vector of adjoints you initialize. Those surface sensitivities are different from the ones in the file because they include the volume projection, whereas the ones in the file do not (they are the sensitivity wrt the surface nodes, but not considering that moving surface nodes also moves interior nodes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678
https://github.com/su2code/SU2/issues/1017#issuecomment-640071772:665,Modifiability,variab,variables,665,"Hello Pedro, thanks for your quick reply! ; More than the differentiation of the mesh deformation problem I was referring to what SU2_DOT does in the specific, at least in terms of workflow.; In fact, reading your answer I realise that maybe I'm misunderstanding the process done by SU2_DOT.; I thought that, in case of Disc. Adjoint, SU2 solver was already providing the _total_ sensitivity of the objective function with respect to the boundary grid nodes displacements. This already includes the contribution of the mesh deformation. given this, I thought that SU2_DOT was simply projecting such sensitivities on the FFD box point displacements chosen as design variables. But I cannot understand then why the need to include the mesh deformation problem within SU2_DOT.; Can you let me know about that please?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-640071772
https://github.com/su2code/SU2/issues/1017#issuecomment-640071772:576,Usability,simpl,simply,576,"Hello Pedro, thanks for your quick reply! ; More than the differentiation of the mesh deformation problem I was referring to what SU2_DOT does in the specific, at least in terms of workflow.; In fact, reading your answer I realise that maybe I'm misunderstanding the process done by SU2_DOT.; I thought that, in case of Disc. Adjoint, SU2 solver was already providing the _total_ sensitivity of the objective function with respect to the boundary grid nodes displacements. This already includes the contribution of the mesh deformation. given this, I thought that SU2_DOT was simply projecting such sensitivities on the FFD box point displacements chosen as design variables. But I cannot understand then why the need to include the mesh deformation problem within SU2_DOT.; Can you let me know about that please?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-640071772
https://github.com/su2code/SU2/issues/1017#issuecomment-640078507:705,Integrability,depend,depend,705,"The discrete adjoint solvers (all of them, with deforming or static grids) compute sensitivities with respect to displacing individual nodes, the only projection done on the surface sensitivities is onto the surface normal (my previous reply was incomplete).; But this is just for post processing, this manipulation still does not consider that moving a surface node (e.g. through an FFD variable) also moves internal nodes, due to the _design mesh deformation_ (as opposed to FSI deformation for example). The volume sensitivity projection of SU2_DOT_AD is the differentiation of SU2_DEF. For deforming grid cases this step is still required, the best way I can put it in words is that the results still depend on the initial / reference coordinates of the grid, if you move any point of the initial grid you change the results, as you change not only the deformed final position of the point, but also the way the mesh itself responds to the physical (e.g. FSI) surface displacements that it is subject to.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-640078507
https://github.com/su2code/SU2/issues/1017#issuecomment-640078507:388,Modifiability,variab,variable,388,"The discrete adjoint solvers (all of them, with deforming or static grids) compute sensitivities with respect to displacing individual nodes, the only projection done on the surface sensitivities is onto the surface normal (my previous reply was incomplete).; But this is just for post processing, this manipulation still does not consider that moving a surface node (e.g. through an FFD variable) also moves internal nodes, due to the _design mesh deformation_ (as opposed to FSI deformation for example). The volume sensitivity projection of SU2_DOT_AD is the differentiation of SU2_DEF. For deforming grid cases this step is still required, the best way I can put it in words is that the results still depend on the initial / reference coordinates of the grid, if you move any point of the initial grid you change the results, as you change not only the deformed final position of the point, but also the way the mesh itself responds to the physical (e.g. FSI) surface displacements that it is subject to.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-640078507
https://github.com/su2code/SU2/issues/1019#issuecomment-640538238:77,Testability,log,log,77,Can you post a little bit more information? And have a look also at the full log.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640538238
https://github.com/su2code/SU2/issues/1019#issuecomment-640548489:304,Availability,error,error,304,"Hello Tim. Thank you for the quick reply. ; Since I'm a new SU2 user, I firstly tried to build it from source in the quickest possible way so I didn't really do much. I've just run the command `./meson.py build` wihout modifying anything. Furthermore I tried on two different machines and I got the same error. ; Here the last part of the meson-log.txt but unfortunately it doesn't add more information about the problem. ```; Compiler stderr:; ; Run-time dependency MPI for cpp found: YES 1.10.2; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/check_dir.py boost; --- stdout ---. --- stderr ---. Message: Extracting boost ...; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio; --- stdout ---; /home/roby/SU2/SU2v7/externals/tecio. --- stderr ---; Traceback (most recent call last):; File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 38, in <module>; extract_tar(infile, P.outpath, True); File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 24, in extract_tar; with tarfile.open(fn) as z:; File ""/usr/lib/python3.5/tarfile.py"", line 1557, in open; return func(name, ""r"", fileobj, **kwargs); File ""/usr/lib/python3.5/tarfile.py"", line 1655, in bz2open; compresslevel=compresslevel); File ""/usr/lib/python3.5/bz2.py"", line 102, in __init__; raise TypeError(""filename must be a str or bytes object, or a file""); TypeError: filename must be a str or bytes object, or a file. externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1.; ```. Thank you for the assistance",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640548489
https://github.com/su2code/SU2/issues/1019#issuecomment-640548489:1538,Availability,ERROR,ERROR,1538,"Hello Tim. Thank you for the quick reply. ; Since I'm a new SU2 user, I firstly tried to build it from source in the quickest possible way so I didn't really do much. I've just run the command `./meson.py build` wihout modifying anything. Furthermore I tried on two different machines and I got the same error. ; Here the last part of the meson-log.txt but unfortunately it doesn't add more information about the problem. ```; Compiler stderr:; ; Run-time dependency MPI for cpp found: YES 1.10.2; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/check_dir.py boost; --- stdout ---. --- stderr ---. Message: Extracting boost ...; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio; --- stdout ---; /home/roby/SU2/SU2v7/externals/tecio. --- stderr ---; Traceback (most recent call last):; File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 38, in <module>; extract_tar(infile, P.outpath, True); File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 24, in extract_tar; with tarfile.open(fn) as z:; File ""/usr/lib/python3.5/tarfile.py"", line 1557, in open; return func(name, ""r"", fileobj, **kwargs); File ""/usr/lib/python3.5/tarfile.py"", line 1655, in bz2open; compresslevel=compresslevel); File ""/usr/lib/python3.5/bz2.py"", line 102, in __init__; raise TypeError(""filename must be a str or bytes object, or a file""); TypeError: filename must be a str or bytes object, or a file. externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1.; ```. Thank you for the assistance",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640548489
https://github.com/su2code/SU2/issues/1019#issuecomment-640548489:456,Integrability,depend,dependency,456,"Hello Tim. Thank you for the quick reply. ; Since I'm a new SU2 user, I firstly tried to build it from source in the quickest possible way so I didn't really do much. I've just run the command `./meson.py build` wihout modifying anything. Furthermore I tried on two different machines and I got the same error. ; Here the last part of the meson-log.txt but unfortunately it doesn't add more information about the problem. ```; Compiler stderr:; ; Run-time dependency MPI for cpp found: YES 1.10.2; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/check_dir.py boost; --- stdout ---. --- stderr ---. Message: Extracting boost ...; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio; --- stdout ---; /home/roby/SU2/SU2v7/externals/tecio. --- stderr ---; Traceback (most recent call last):; File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 38, in <module>; extract_tar(infile, P.outpath, True); File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 24, in extract_tar; with tarfile.open(fn) as z:; File ""/usr/lib/python3.5/tarfile.py"", line 1557, in open; return func(name, ""r"", fileobj, **kwargs); File ""/usr/lib/python3.5/tarfile.py"", line 1655, in bz2open; compresslevel=compresslevel); File ""/usr/lib/python3.5/bz2.py"", line 102, in __init__; raise TypeError(""filename must be a str or bytes object, or a file""); TypeError: filename must be a str or bytes object, or a file. externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1.; ```. Thank you for the assistance",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640548489
https://github.com/su2code/SU2/issues/1019#issuecomment-640548489:619,Integrability,Message,Message,619,"Hello Tim. Thank you for the quick reply. ; Since I'm a new SU2 user, I firstly tried to build it from source in the quickest possible way so I didn't really do much. I've just run the command `./meson.py build` wihout modifying anything. Furthermore I tried on two different machines and I got the same error. ; Here the last part of the meson-log.txt but unfortunately it doesn't add more information about the problem. ```; Compiler stderr:; ; Run-time dependency MPI for cpp found: YES 1.10.2; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/check_dir.py boost; --- stdout ---. --- stderr ---. Message: Extracting boost ...; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio; --- stdout ---; /home/roby/SU2/SU2v7/externals/tecio. --- stderr ---; Traceback (most recent call last):; File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 38, in <module>; extract_tar(infile, P.outpath, True); File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 24, in extract_tar; with tarfile.open(fn) as z:; File ""/usr/lib/python3.5/tarfile.py"", line 1557, in open; return func(name, ""r"", fileobj, **kwargs); File ""/usr/lib/python3.5/tarfile.py"", line 1655, in bz2open; compresslevel=compresslevel); File ""/usr/lib/python3.5/bz2.py"", line 102, in __init__; raise TypeError(""filename must be a str or bytes object, or a file""); TypeError: filename must be a str or bytes object, or a file. externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1.; ```. Thank you for the assistance",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640548489
https://github.com/su2code/SU2/issues/1019#issuecomment-640548489:345,Testability,log,log,345,"Hello Tim. Thank you for the quick reply. ; Since I'm a new SU2 user, I firstly tried to build it from source in the quickest possible way so I didn't really do much. I've just run the command `./meson.py build` wihout modifying anything. Furthermore I tried on two different machines and I got the same error. ; Here the last part of the meson-log.txt but unfortunately it doesn't add more information about the problem. ```; Compiler stderr:; ; Run-time dependency MPI for cpp found: YES 1.10.2; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/check_dir.py boost; --- stdout ---. --- stderr ---. Message: Extracting boost ...; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio; --- stdout ---; /home/roby/SU2/SU2v7/externals/tecio. --- stderr ---; Traceback (most recent call last):; File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 38, in <module>; extract_tar(infile, P.outpath, True); File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 24, in extract_tar; with tarfile.open(fn) as z:; File ""/usr/lib/python3.5/tarfile.py"", line 1557, in open; return func(name, ""r"", fileobj, **kwargs); File ""/usr/lib/python3.5/tarfile.py"", line 1655, in bz2open; compresslevel=compresslevel); File ""/usr/lib/python3.5/bz2.py"", line 102, in __init__; raise TypeError(""filename must be a str or bytes object, or a file""); TypeError: filename must be a str or bytes object, or a file. externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1.; ```. Thank you for the assistance",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640548489
https://github.com/su2code/SU2/issues/1019#issuecomment-640555096:58,Security,access,access,58,Hm that seems to be an issue with python 3.5. Do you have access to python3.7? Otherwise manually extract the archive file by going to folder externals/tecio/ and using the command; ```; tar xzf boost.tar.gz ; ```; Then try to rerun meson.py again.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640555096
https://github.com/su2code/SU2/pull/1020#issuecomment-648112710:49,Deployability,integrat,integrate,49,"Great stuff, thanks for taking the first step to integrate quasi-Newton techniques to the adjoint fixed point iterations. I'm reviewing this the next couple of days. Just one question right away so that I'm on the right track. It seems that this implementation is based on equation 130 from Degroote's paper. Right? Though you're not using any QR decomposition for solving it? What's the approach then (assumingly in `computeNormalEquations`)?. And you're not using `std::deque` like I did for storing a window of some past residuals (i.e. V^k), looking forward to see what kind of solution you came up with.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1020#issuecomment-648112710
https://github.com/su2code/SU2/pull/1020#issuecomment-648112710:49,Integrability,integrat,integrate,49,"Great stuff, thanks for taking the first step to integrate quasi-Newton techniques to the adjoint fixed point iterations. I'm reviewing this the next couple of days. Just one question right away so that I'm on the right track. It seems that this implementation is based on equation 130 from Degroote's paper. Right? Though you're not using any QR decomposition for solving it? What's the approach then (assumingly in `computeNormalEquations`)?. And you're not using `std::deque` like I did for storing a window of some past residuals (i.e. V^k), looking forward to see what kind of solution you came up with.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1020#issuecomment-648112710
https://github.com/su2code/SU2/issues/1021#issuecomment-643993918:62,Availability,error,error,62,On gcc 4.8.5 as well. If anyone has the same issue (sth like `error: array must be initialized with a brace-enclosed initializer`) -> to work on rn I cherry picked from the mentiond PR; `git cherry-pick 1f4232a06a3086821c88c2ba601c99b1387f78e3`. Thanks posting this info here pedro :+1:,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1021#issuecomment-643993918
https://github.com/su2code/SU2/pull/1022#issuecomment-651205859:175,Modifiability,variab,variable,175,"In terms of general look and feel this is ready for folks to have a look, there are a couple kinks to iron out:; - AD preaccumulation, @talbring is it ok to register the same variable for preaccumulation multiple times?; - Boundary numerics, it may not be possible to use these high efficiency classes for boundary terms, they are not as flexible in terms of what can be used as data sources, the current numerics take any old pointer, but these assume the data always comes from CVariable. They will probably need to complement each other.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-651205859
https://github.com/su2code/SU2/pull/1022#issuecomment-651205859:338,Modifiability,flexible,flexible,338,"In terms of general look and feel this is ready for folks to have a look, there are a couple kinks to iron out:; - AD preaccumulation, @talbring is it ok to register the same variable for preaccumulation multiple times?; - Boundary numerics, it may not be possible to use these high efficiency classes for boundary terms, they are not as flexible in terms of what can be used as data sources, the current numerics take any old pointer, but these assume the data always comes from CVariable. They will probably need to complement each other.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-651205859
https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:1694,Deployability,update,update,1694," viscousTerms(...) const {...}; };; ```; Here note that this class template is derived from CNumericsSIMD but it does not implement `ComputeFlux`, thus it cannot be instantiated by itself. The idea is that convective schemes can use these viscous fluxes as base class (thereby linking them to CNumericsSIMD) to access the `viscousTerms` method (when we don't want viscous terms we just use a dummy viscous class).; Note also the template parameter `nDim`, this is because we want to create specific versions of the numerical schemes for 2D and 3D (we ""want"" this because it allows static allocation and unrolling loops perfectly). Then convective classes also need to be class templates so that we can programatically change their base class:; ```c++; template<class Base>; class MyConvectiveScheme : public Base {; public:; void ComputeFlux(...) const {; // do my own thing; Base::viscousTerms(...);; // update the linear system with the result; }; };; ```; Now to create an instance of this class template we do for example:; ```c++; auto obj = new MyConvectiveScheme< CCompressibleViscousFlux<2> >(...);; ```; which would create an object for 2D problems with viscous terms. And so we need at least 4 instantiations of these class templates, 2D/3D with or without viscous terms, and this is done in the factory method implemented in CNumericsSIMD.cpp, which is the only cpp in this entire implementation. ### Static polymorphism; Another concept used in this implementation for efficiency is static polymorphism.; For example in the non vectorized numerics we have a family of Roe schemes since a lot of code is shared, and the only difference is how the dissipation terms are computed. There this is done with virtual functions, here we want none of that.; Virtual functions allow a parent class to dynamically call methods of its children, we want to do this statically and so we need to let the parent class know who is deriving from it.; ```c++; template<class Derived>; class Parent {; public",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721
https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:4001,Deployability,update,update,4001,"y is static polymorphism.; For example in the non vectorized numerics we have a family of Roe schemes since a lot of code is shared, and the only difference is how the dissipation terms are computed. There this is done with virtual functions, here we want none of that.; Virtual functions allow a parent class to dynamically call methods of its children, we want to do this statically and so we need to let the parent class know who is deriving from it.; ```c++; template<class Derived>; class Parent {; public:; void parentMethod() {; // ""I know I am also a Derived and so I can cast myself.""; auto derived = static_cast<Derived*>(this);; // ""now I can use a method of derived""; derived->childMethod();; }; };. // A derived class needs to inform the parent about itself; class Child : public Parent<Child> {; public:; void childMethod() {...}; };; ```. Why is this better? Note that 2 of these derived classes don't actually have the same parent, i.e. one inherits from `Parent<ChildA>` the other from `Parent<ChildB>` this means that 2 versions of Parent were instantiated specifically for each derived class, this allows code to be inlined and optimized for each, an ability lost with virtual functions. ### Putting it all together; For vectorized central schemes we have something like:; ```c++; // Intermediate class for centered schemes, note the 2 template parameters; template<class Derived, class Base>; class CCenteredBase : public Base {; public:; // Main public method implemented here making use of ""Derived"" and ""Base"".; void ComputeFlux(...) const final {; ... // gather data, do some computation; derived->DissipationTerms(...); // static polymorphism; Base::ViscousTerms(...); // static decorator; ... // update linear system; }; }. // A final centered scheme, which is what we instantiate, with some viscous decorator.; template<class Decorator>; class CJSTScheme : public CCenteredBase<CJSTScheme<Decorator>, Decorator> {; protected:; void DissipationTerms(...) const {...}; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721
https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:114,Integrability,interface,interface,114,"Thank you for the review Catarina, based on your comments I will try to explain the new structure better. ### The interface; These numerics classes are still abstract and so the outside world only needs to known about their interface:; ```c++; class CNumericsSIMD {; public:; virtual void ComputeFlux(...) const = 0;; };; ```; Any class that wants to be a simd numerics needs to inherit from this base and in so doing is forced to implement `ComputeFlux` (because it is pure virtual). ### Static decorator pattern; Now, in this structure we don't have convective and viscous classes separate. Instead, we have convective schemes that can be ""decorated"" with viscous fluxes. For example:; ```c++; template<int nDim>; class CCompressibleViscousFlux : public CNumericsSIMD {; protected:; void viscousTerms(...) const {...}; };; ```; Here note that this class template is derived from CNumericsSIMD but it does not implement `ComputeFlux`, thus it cannot be instantiated by itself. The idea is that convective schemes can use these viscous fluxes as base class (thereby linking them to CNumericsSIMD) to access the `viscousTerms` method (when we don't want viscous terms we just use a dummy viscous class).; Note also the template parameter `nDim`, this is because we want to create specific versions of the numerical schemes for 2D and 3D (we ""want"" this because it allows static allocation and unrolling loops perfectly). Then convective classes also need to be class templates so that we can programatically change their base class:; ```c++; template<class Base>; class MyConvectiveScheme : public Base {; public:; void ComputeFlux(...) const {; // do my own thing; Base::viscousTerms(...);; // update the linear system with the result; }; };; ```; Now to create an instance of this class template we do for example:; ```c++; auto obj = new MyConvectiveScheme< CCompressibleViscousFlux<2> >(...);; ```; which would create an object for 2D problems with viscous terms. And so we need at least 4 instanti",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721
https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:224,Integrability,interface,interface,224,"Thank you for the review Catarina, based on your comments I will try to explain the new structure better. ### The interface; These numerics classes are still abstract and so the outside world only needs to known about their interface:; ```c++; class CNumericsSIMD {; public:; virtual void ComputeFlux(...) const = 0;; };; ```; Any class that wants to be a simd numerics needs to inherit from this base and in so doing is forced to implement `ComputeFlux` (because it is pure virtual). ### Static decorator pattern; Now, in this structure we don't have convective and viscous classes separate. Instead, we have convective schemes that can be ""decorated"" with viscous fluxes. For example:; ```c++; template<int nDim>; class CCompressibleViscousFlux : public CNumericsSIMD {; protected:; void viscousTerms(...) const {...}; };; ```; Here note that this class template is derived from CNumericsSIMD but it does not implement `ComputeFlux`, thus it cannot be instantiated by itself. The idea is that convective schemes can use these viscous fluxes as base class (thereby linking them to CNumericsSIMD) to access the `viscousTerms` method (when we don't want viscous terms we just use a dummy viscous class).; Note also the template parameter `nDim`, this is because we want to create specific versions of the numerical schemes for 2D and 3D (we ""want"" this because it allows static allocation and unrolling loops perfectly). Then convective classes also need to be class templates so that we can programatically change their base class:; ```c++; template<class Base>; class MyConvectiveScheme : public Base {; public:; void ComputeFlux(...) const {; // do my own thing; Base::viscousTerms(...);; // update the linear system with the result; }; };; ```; Now to create an instance of this class template we do for example:; ```c++; auto obj = new MyConvectiveScheme< CCompressibleViscousFlux<2> >(...);; ```; which would create an object for 2D problems with viscous terms. And so we need at least 4 instanti",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721
https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:379,Modifiability,inherit,inherit,379,"Thank you for the review Catarina, based on your comments I will try to explain the new structure better. ### The interface; These numerics classes are still abstract and so the outside world only needs to known about their interface:; ```c++; class CNumericsSIMD {; public:; virtual void ComputeFlux(...) const = 0;; };; ```; Any class that wants to be a simd numerics needs to inherit from this base and in so doing is forced to implement `ComputeFlux` (because it is pure virtual). ### Static decorator pattern; Now, in this structure we don't have convective and viscous classes separate. Instead, we have convective schemes that can be ""decorated"" with viscous fluxes. For example:; ```c++; template<int nDim>; class CCompressibleViscousFlux : public CNumericsSIMD {; protected:; void viscousTerms(...) const {...}; };; ```; Here note that this class template is derived from CNumericsSIMD but it does not implement `ComputeFlux`, thus it cannot be instantiated by itself. The idea is that convective schemes can use these viscous fluxes as base class (thereby linking them to CNumericsSIMD) to access the `viscousTerms` method (when we don't want viscous terms we just use a dummy viscous class).; Note also the template parameter `nDim`, this is because we want to create specific versions of the numerical schemes for 2D and 3D (we ""want"" this because it allows static allocation and unrolling loops perfectly). Then convective classes also need to be class templates so that we can programatically change their base class:; ```c++; template<class Base>; class MyConvectiveScheme : public Base {; public:; void ComputeFlux(...) const {; // do my own thing; Base::viscousTerms(...);; // update the linear system with the result; }; };; ```; Now to create an instance of this class template we do for example:; ```c++; auto obj = new MyConvectiveScheme< CCompressibleViscousFlux<2> >(...);; ```; which would create an object for 2D problems with viscous terms. And so we need at least 4 instanti",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721
https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:2208,Modifiability,polymorphi,polymorphism,2208,"is because we want to create specific versions of the numerical schemes for 2D and 3D (we ""want"" this because it allows static allocation and unrolling loops perfectly). Then convective classes also need to be class templates so that we can programatically change their base class:; ```c++; template<class Base>; class MyConvectiveScheme : public Base {; public:; void ComputeFlux(...) const {; // do my own thing; Base::viscousTerms(...);; // update the linear system with the result; }; };; ```; Now to create an instance of this class template we do for example:; ```c++; auto obj = new MyConvectiveScheme< CCompressibleViscousFlux<2> >(...);; ```; which would create an object for 2D problems with viscous terms. And so we need at least 4 instantiations of these class templates, 2D/3D with or without viscous terms, and this is done in the factory method implemented in CNumericsSIMD.cpp, which is the only cpp in this entire implementation. ### Static polymorphism; Another concept used in this implementation for efficiency is static polymorphism.; For example in the non vectorized numerics we have a family of Roe schemes since a lot of code is shared, and the only difference is how the dissipation terms are computed. There this is done with virtual functions, here we want none of that.; Virtual functions allow a parent class to dynamically call methods of its children, we want to do this statically and so we need to let the parent class know who is deriving from it.; ```c++; template<class Derived>; class Parent {; public:; void parentMethod() {; // ""I know I am also a Derived and so I can cast myself.""; auto derived = static_cast<Derived*>(this);; // ""now I can use a method of derived""; derived->childMethod();; }; };. // A derived class needs to inform the parent about itself; class Child : public Parent<Child> {; public:; void childMethod() {...}; };; ```. Why is this better? Note that 2 of these derived classes don't actually have the same parent, i.e. one inherits from ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721
https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:2291,Modifiability,polymorphi,polymorphism,2291,"is because we want to create specific versions of the numerical schemes for 2D and 3D (we ""want"" this because it allows static allocation and unrolling loops perfectly). Then convective classes also need to be class templates so that we can programatically change their base class:; ```c++; template<class Base>; class MyConvectiveScheme : public Base {; public:; void ComputeFlux(...) const {; // do my own thing; Base::viscousTerms(...);; // update the linear system with the result; }; };; ```; Now to create an instance of this class template we do for example:; ```c++; auto obj = new MyConvectiveScheme< CCompressibleViscousFlux<2> >(...);; ```; which would create an object for 2D problems with viscous terms. And so we need at least 4 instantiations of these class templates, 2D/3D with or without viscous terms, and this is done in the factory method implemented in CNumericsSIMD.cpp, which is the only cpp in this entire implementation. ### Static polymorphism; Another concept used in this implementation for efficiency is static polymorphism.; For example in the non vectorized numerics we have a family of Roe schemes since a lot of code is shared, and the only difference is how the dissipation terms are computed. There this is done with virtual functions, here we want none of that.; Virtual functions allow a parent class to dynamically call methods of its children, we want to do this statically and so we need to let the parent class know who is deriving from it.; ```c++; template<class Derived>; class Parent {; public:; void parentMethod() {; // ""I know I am also a Derived and so I can cast myself.""; auto derived = static_cast<Derived*>(this);; // ""now I can use a method of derived""; derived->childMethod();; }; };. // A derived class needs to inform the parent about itself; class Child : public Parent<Child> {; public:; void childMethod() {...}; };; ```. Why is this better? Note that 2 of these derived classes don't actually have the same parent, i.e. one inherits from ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721
https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:3236,Modifiability,inherit,inherits,3236,"y is static polymorphism.; For example in the non vectorized numerics we have a family of Roe schemes since a lot of code is shared, and the only difference is how the dissipation terms are computed. There this is done with virtual functions, here we want none of that.; Virtual functions allow a parent class to dynamically call methods of its children, we want to do this statically and so we need to let the parent class know who is deriving from it.; ```c++; template<class Derived>; class Parent {; public:; void parentMethod() {; // ""I know I am also a Derived and so I can cast myself.""; auto derived = static_cast<Derived*>(this);; // ""now I can use a method of derived""; derived->childMethod();; }; };. // A derived class needs to inform the parent about itself; class Child : public Parent<Child> {; public:; void childMethod() {...}; };; ```. Why is this better? Note that 2 of these derived classes don't actually have the same parent, i.e. one inherits from `Parent<ChildA>` the other from `Parent<ChildB>` this means that 2 versions of Parent were instantiated specifically for each derived class, this allows code to be inlined and optimized for each, an ability lost with virtual functions. ### Putting it all together; For vectorized central schemes we have something like:; ```c++; // Intermediate class for centered schemes, note the 2 template parameters; template<class Derived, class Base>; class CCenteredBase : public Base {; public:; // Main public method implemented here making use of ""Derived"" and ""Base"".; void ComputeFlux(...) const final {; ... // gather data, do some computation; derived->DissipationTerms(...); // static polymorphism; Base::ViscousTerms(...); // static decorator; ... // update linear system; }; }. // A final centered scheme, which is what we instantiate, with some viscous decorator.; template<class Decorator>; class CJSTScheme : public CCenteredBase<CJSTScheme<Decorator>, Decorator> {; protected:; void DissipationTerms(...) const {...}; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721
https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:3934,Modifiability,polymorphi,polymorphism,3934,"y is static polymorphism.; For example in the non vectorized numerics we have a family of Roe schemes since a lot of code is shared, and the only difference is how the dissipation terms are computed. There this is done with virtual functions, here we want none of that.; Virtual functions allow a parent class to dynamically call methods of its children, we want to do this statically and so we need to let the parent class know who is deriving from it.; ```c++; template<class Derived>; class Parent {; public:; void parentMethod() {; // ""I know I am also a Derived and so I can cast myself.""; auto derived = static_cast<Derived*>(this);; // ""now I can use a method of derived""; derived->childMethod();; }; };. // A derived class needs to inform the parent about itself; class Child : public Parent<Child> {; public:; void childMethod() {...}; };; ```. Why is this better? Note that 2 of these derived classes don't actually have the same parent, i.e. one inherits from `Parent<ChildA>` the other from `Parent<ChildB>` this means that 2 versions of Parent were instantiated specifically for each derived class, this allows code to be inlined and optimized for each, an ability lost with virtual functions. ### Putting it all together; For vectorized central schemes we have something like:; ```c++; // Intermediate class for centered schemes, note the 2 template parameters; template<class Derived, class Base>; class CCenteredBase : public Base {; public:; // Main public method implemented here making use of ""Derived"" and ""Base"".; void ComputeFlux(...) const final {; ... // gather data, do some computation; derived->DissipationTerms(...); // static polymorphism; Base::ViscousTerms(...); // static decorator; ... // update linear system; }; }. // A final centered scheme, which is what we instantiate, with some viscous decorator.; template<class Decorator>; class CJSTScheme : public CCenteredBase<CJSTScheme<Decorator>, Decorator> {; protected:; void DissipationTerms(...) const {...}; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721
https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:3426,Performance,optimiz,optimized,3426,"y is static polymorphism.; For example in the non vectorized numerics we have a family of Roe schemes since a lot of code is shared, and the only difference is how the dissipation terms are computed. There this is done with virtual functions, here we want none of that.; Virtual functions allow a parent class to dynamically call methods of its children, we want to do this statically and so we need to let the parent class know who is deriving from it.; ```c++; template<class Derived>; class Parent {; public:; void parentMethod() {; // ""I know I am also a Derived and so I can cast myself.""; auto derived = static_cast<Derived*>(this);; // ""now I can use a method of derived""; derived->childMethod();; }; };. // A derived class needs to inform the parent about itself; class Child : public Parent<Child> {; public:; void childMethod() {...}; };; ```. Why is this better? Note that 2 of these derived classes don't actually have the same parent, i.e. one inherits from `Parent<ChildA>` the other from `Parent<ChildB>` this means that 2 versions of Parent were instantiated specifically for each derived class, this allows code to be inlined and optimized for each, an ability lost with virtual functions. ### Putting it all together; For vectorized central schemes we have something like:; ```c++; // Intermediate class for centered schemes, note the 2 template parameters; template<class Derived, class Base>; class CCenteredBase : public Base {; public:; // Main public method implemented here making use of ""Derived"" and ""Base"".; void ComputeFlux(...) const final {; ... // gather data, do some computation; derived->DissipationTerms(...); // static polymorphism; Base::ViscousTerms(...); // static decorator; ... // update linear system; }; }. // A final centered scheme, which is what we instantiate, with some viscous decorator.; template<class Decorator>; class CJSTScheme : public CCenteredBase<CJSTScheme<Decorator>, Decorator> {; protected:; void DissipationTerms(...) const {...}; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721
https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:1100,Security,access,access,1100,"tructure better. ### The interface; These numerics classes are still abstract and so the outside world only needs to known about their interface:; ```c++; class CNumericsSIMD {; public:; virtual void ComputeFlux(...) const = 0;; };; ```; Any class that wants to be a simd numerics needs to inherit from this base and in so doing is forced to implement `ComputeFlux` (because it is pure virtual). ### Static decorator pattern; Now, in this structure we don't have convective and viscous classes separate. Instead, we have convective schemes that can be ""decorated"" with viscous fluxes. For example:; ```c++; template<int nDim>; class CCompressibleViscousFlux : public CNumericsSIMD {; protected:; void viscousTerms(...) const {...}; };; ```; Here note that this class template is derived from CNumericsSIMD but it does not implement `ComputeFlux`, thus it cannot be instantiated by itself. The idea is that convective schemes can use these viscous fluxes as base class (thereby linking them to CNumericsSIMD) to access the `viscousTerms` method (when we don't want viscous terms we just use a dummy viscous class).; Note also the template parameter `nDim`, this is because we want to create specific versions of the numerical schemes for 2D and 3D (we ""want"" this because it allows static allocation and unrolling loops perfectly). Then convective classes also need to be class templates so that we can programatically change their base class:; ```c++; template<class Base>; class MyConvectiveScheme : public Base {; public:; void ComputeFlux(...) const {; // do my own thing; Base::viscousTerms(...);; // update the linear system with the result; }; };; ```; Now to create an instance of this class template we do for example:; ```c++; auto obj = new MyConvectiveScheme< CCompressibleViscousFlux<2> >(...);; ```; which would create an object for 2D problems with viscous terms. And so we need at least 4 instantiations of these class templates, 2D/3D with or without viscous terms, and this is done in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721
https://github.com/su2code/SU2/issues/1023#issuecomment-642421842:92,Availability,down,down,92,"What you can do for the time being is use the SU2_PER in the Meshtools to generate a scaled down grid. [MeshTools- SU2_PER]( https://github.com/su2code/MeshTools/tree/master/SU2_PER); You need to remove all the periodic stuff that it generates at the end of your mesh though, as this is not needed anymore. Edit: Also don't forget to lower the number of boundaries (NMARK) by the number of periodic boundaries in your mesh (SU2_PER adds two because of the periodicity).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023#issuecomment-642421842
https://github.com/su2code/SU2/issues/1023#issuecomment-643342226:94,Availability,down,down,94,"> What you can do for the time being is use the SU2_PER in the Meshtools to generate a scaled down grid. [MeshTools- SU2_PER](https://github.com/su2code/MeshTools/tree/master/SU2_PER); > You need to remove all the periodic stuff that it generates at the end of your mesh though, as this is not needed anymore. Edit: Also don't forget to lower the number of boundaries (NMARK) by the number of periodic boundaries in your mesh (SU2_PER adds two because of the periodicity). Thanks for the temporary suggestion, much appreciated",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023#issuecomment-643342226
https://github.com/su2code/SU2/issues/1023#issuecomment-645306463:60,Modifiability,config,config,60,"This is how the scale factor is computed `su2double Scale = config->GetDV_Value(0)*config->GetOpt_RelaxFactor();`; OPT_RELAX_FACTOR is 1000 in your config, and so it cancels the scale you want to apply. Please try this again and reopen the issue if the problem persists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023#issuecomment-645306463
https://github.com/su2code/SU2/issues/1023#issuecomment-645306463:83,Modifiability,config,config,83,"This is how the scale factor is computed `su2double Scale = config->GetDV_Value(0)*config->GetOpt_RelaxFactor();`; OPT_RELAX_FACTOR is 1000 in your config, and so it cancels the scale you want to apply. Please try this again and reopen the issue if the problem persists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023#issuecomment-645306463
https://github.com/su2code/SU2/issues/1023#issuecomment-645306463:148,Modifiability,config,config,148,"This is how the scale factor is computed `su2double Scale = config->GetDV_Value(0)*config->GetOpt_RelaxFactor();`; OPT_RELAX_FACTOR is 1000 in your config, and so it cancels the scale you want to apply. Please try this again and reopen the issue if the problem persists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023#issuecomment-645306463
https://github.com/su2code/SU2/issues/1023#issuecomment-645596675:70,Modifiability,config,config,70,"> ; > ; > This is how the scale factor is computed `su2double Scale = config->GetDV_Value(0)*config->GetOpt_RelaxFactor();`; > OPT_RELAX_FACTOR is 1000 in your config, and so it cancels the scale you want to apply. Please try this again and reopen the issue if the problem persists. Thanks a lot, your help has been much appreciated",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023#issuecomment-645596675
https://github.com/su2code/SU2/issues/1023#issuecomment-645596675:93,Modifiability,config,config,93,"> ; > ; > This is how the scale factor is computed `su2double Scale = config->GetDV_Value(0)*config->GetOpt_RelaxFactor();`; > OPT_RELAX_FACTOR is 1000 in your config, and so it cancels the scale you want to apply. Please try this again and reopen the issue if the problem persists. Thanks a lot, your help has been much appreciated",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023#issuecomment-645596675
https://github.com/su2code/SU2/issues/1023#issuecomment-645596675:160,Modifiability,config,config,160,"> ; > ; > This is how the scale factor is computed `su2double Scale = config->GetDV_Value(0)*config->GetOpt_RelaxFactor();`; > OPT_RELAX_FACTOR is 1000 in your config, and so it cancels the scale you want to apply. Please try this again and reopen the issue if the problem persists. Thanks a lot, your help has been much appreciated",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023#issuecomment-645596675
https://github.com/su2code/SU2/issues/1024#issuecomment-645075011:15,Availability,avail,available,15,The feature is available in v6. I am downgrading to it because of it and several other reasons. Closing the issue.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645075011
https://github.com/su2code/SU2/issues/1024#issuecomment-645075011:37,Availability,down,downgrading,37,The feature is available in v6. I am downgrading to it because of it and several other reasons. Closing the issue.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645075011
https://github.com/su2code/SU2/issues/1024#issuecomment-645255976:692,Availability,down,downgrading,692,"Part of the reason I never gave much attention to the current optimization scripts, and instead developed my own, is that I need different settings for primal and adjoint and the optimization scripts cannot handle that. I don't think we should have different config settings for primal and adjoint. I'm certain the adjoint solver considers the convergence criteria, you probably did something wrong in your setup (I'm guessing the fields you are monitoring do not exist for the adjoint, hence it has nothing to use as convergence field) but since you did not attach your config file, all I can tell you is to read the documentation https://su2code.github.io/docs_v7/Solver-Setup/. > ... I am downgrading ... Yes you are. Honestly I envy this kind of pragmatism, it is probably why SU2 has tens or hundreds of ""feature branches"" lagging behind master by several versions. I feel like ranting but I'll be pragmatic for once.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976
https://github.com/su2code/SU2/issues/1024#issuecomment-645255976:446,Energy Efficiency,monitor,monitoring,446,"Part of the reason I never gave much attention to the current optimization scripts, and instead developed my own, is that I need different settings for primal and adjoint and the optimization scripts cannot handle that. I don't think we should have different config settings for primal and adjoint. I'm certain the adjoint solver considers the convergence criteria, you probably did something wrong in your setup (I'm guessing the fields you are monitoring do not exist for the adjoint, hence it has nothing to use as convergence field) but since you did not attach your config file, all I can tell you is to read the documentation https://su2code.github.io/docs_v7/Solver-Setup/. > ... I am downgrading ... Yes you are. Honestly I envy this kind of pragmatism, it is probably why SU2 has tens or hundreds of ""feature branches"" lagging behind master by several versions. I feel like ranting but I'll be pragmatic for once.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976
https://github.com/su2code/SU2/issues/1024#issuecomment-645255976:259,Modifiability,config,config,259,"Part of the reason I never gave much attention to the current optimization scripts, and instead developed my own, is that I need different settings for primal and adjoint and the optimization scripts cannot handle that. I don't think we should have different config settings for primal and adjoint. I'm certain the adjoint solver considers the convergence criteria, you probably did something wrong in your setup (I'm guessing the fields you are monitoring do not exist for the adjoint, hence it has nothing to use as convergence field) but since you did not attach your config file, all I can tell you is to read the documentation https://su2code.github.io/docs_v7/Solver-Setup/. > ... I am downgrading ... Yes you are. Honestly I envy this kind of pragmatism, it is probably why SU2 has tens or hundreds of ""feature branches"" lagging behind master by several versions. I feel like ranting but I'll be pragmatic for once.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976
https://github.com/su2code/SU2/issues/1024#issuecomment-645255976:571,Modifiability,config,config,571,"Part of the reason I never gave much attention to the current optimization scripts, and instead developed my own, is that I need different settings for primal and adjoint and the optimization scripts cannot handle that. I don't think we should have different config settings for primal and adjoint. I'm certain the adjoint solver considers the convergence criteria, you probably did something wrong in your setup (I'm guessing the fields you are monitoring do not exist for the adjoint, hence it has nothing to use as convergence field) but since you did not attach your config file, all I can tell you is to read the documentation https://su2code.github.io/docs_v7/Solver-Setup/. > ... I am downgrading ... Yes you are. Honestly I envy this kind of pragmatism, it is probably why SU2 has tens or hundreds of ""feature branches"" lagging behind master by several versions. I feel like ranting but I'll be pragmatic for once.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976
https://github.com/su2code/SU2/issues/1024#issuecomment-645255976:62,Performance,optimiz,optimization,62,"Part of the reason I never gave much attention to the current optimization scripts, and instead developed my own, is that I need different settings for primal and adjoint and the optimization scripts cannot handle that. I don't think we should have different config settings for primal and adjoint. I'm certain the adjoint solver considers the convergence criteria, you probably did something wrong in your setup (I'm guessing the fields you are monitoring do not exist for the adjoint, hence it has nothing to use as convergence field) but since you did not attach your config file, all I can tell you is to read the documentation https://su2code.github.io/docs_v7/Solver-Setup/. > ... I am downgrading ... Yes you are. Honestly I envy this kind of pragmatism, it is probably why SU2 has tens or hundreds of ""feature branches"" lagging behind master by several versions. I feel like ranting but I'll be pragmatic for once.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976
https://github.com/su2code/SU2/issues/1024#issuecomment-645255976:179,Performance,optimiz,optimization,179,"Part of the reason I never gave much attention to the current optimization scripts, and instead developed my own, is that I need different settings for primal and adjoint and the optimization scripts cannot handle that. I don't think we should have different config settings for primal and adjoint. I'm certain the adjoint solver considers the convergence criteria, you probably did something wrong in your setup (I'm guessing the fields you are monitoring do not exist for the adjoint, hence it has nothing to use as convergence field) but since you did not attach your config file, all I can tell you is to read the documentation https://su2code.github.io/docs_v7/Solver-Setup/. > ... I am downgrading ... Yes you are. Honestly I envy this kind of pragmatism, it is probably why SU2 has tens or hundreds of ""feature branches"" lagging behind master by several versions. I feel like ranting but I'll be pragmatic for once.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976
https://github.com/su2code/SU2/issues/1024#issuecomment-645495083:292,Availability,down,downgrading,292,"Thanks @pcarruscag for responding! I really appreciate you taking time to answer this. Well, I was just looking at the density residuals for convergence. That should be valid for both primal and adjoint. I have attached my config file for future reference. The same works for v6 though. Yes, downgrading hurts. But I had good reasons to do so because of the shape optimization scripts for turbomachinery are way more developed for v6 than v7. I wish I could have done that earlier. Plus the MPI issue as well #990. Now I am able to use 30 instead of 3 cores and that makes one hell of a difference. The good part about git is that I can go back to v6.1.0 tag and get not only the code and Testcases but the website at that version as well. That certainly helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645495083
https://github.com/su2code/SU2/issues/1024#issuecomment-645495083:223,Modifiability,config,config,223,"Thanks @pcarruscag for responding! I really appreciate you taking time to answer this. Well, I was just looking at the density residuals for convergence. That should be valid for both primal and adjoint. I have attached my config file for future reference. The same works for v6 though. Yes, downgrading hurts. But I had good reasons to do so because of the shape optimization scripts for turbomachinery are way more developed for v6 than v7. I wish I could have done that earlier. Plus the MPI issue as well #990. Now I am able to use 30 instead of 3 cores and that makes one hell of a difference. The good part about git is that I can go back to v6.1.0 tag and get not only the code and Testcases but the website at that version as well. That certainly helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645495083
https://github.com/su2code/SU2/issues/1024#issuecomment-645495083:364,Performance,optimiz,optimization,364,"Thanks @pcarruscag for responding! I really appreciate you taking time to answer this. Well, I was just looking at the density residuals for convergence. That should be valid for both primal and adjoint. I have attached my config file for future reference. The same works for v6 though. Yes, downgrading hurts. But I had good reasons to do so because of the shape optimization scripts for turbomachinery are way more developed for v6 than v7. I wish I could have done that earlier. Plus the MPI issue as well #990. Now I am able to use 30 instead of 3 cores and that makes one hell of a difference. The good part about git is that I can go back to v6.1.0 tag and get not only the code and Testcases but the website at that version as well. That certainly helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645495083
https://github.com/su2code/SU2/issues/1024#issuecomment-645495083:689,Testability,Test,Testcases,689,"Thanks @pcarruscag for responding! I really appreciate you taking time to answer this. Well, I was just looking at the density residuals for convergence. That should be valid for both primal and adjoint. I have attached my config file for future reference. The same works for v6 though. Yes, downgrading hurts. But I had good reasons to do so because of the shape optimization scripts for turbomachinery are way more developed for v6 than v7. I wish I could have done that earlier. Plus the MPI issue as well #990. Now I am able to use 30 instead of 3 cores and that makes one hell of a difference. The good part about git is that I can go back to v6.1.0 tag and get not only the code and Testcases but the website at that version as well. That certainly helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645495083
https://github.com/su2code/SU2/issues/1026#issuecomment-645265175:984,Integrability,depend,depend,984,"There are certainly parameters in the config, and if you had posted yours I could give advice without having to write a bloody essay on all of them. DEFORM_STIFFNESS_TYPE= WALL_DISTANCE // always; DEFORM_COEFF= ""nu"" // the Poisson ratio, default 1E6, you can also try a small value 0.2-0.3; DEFORM_LIMIT= ""R"" // clamps domain points with wall distance greater than ""R"", this improves the condition of the stiffness matrix, which makes it easier for the linear solver to converge.; DEFORM_CONSOLE_OUTPUT= YES // so you can see if the linear solver converges; DEFORM_NONLINEAR_ITER= 1 // always; DEFORM_LINEAR_SOLVER = FGMRES // or CONJUGATE_GRADIENT if memory becomes a problem, i.e. if GMRES does not converge in 100-200 iterations.; DEFORM_LINEAR_SOLVER_PREC = ILU // always, always, never anything else.; DEFORM_LINEAR_SOLVER_ERROR= 1e-9 // at least, I usually set it to 1e-10; DEFORM_LINEAR_SOLVER_ITER= 200 // or a much larger number when using CG since its memory usage does not depend on number of iterations",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026#issuecomment-645265175
https://github.com/su2code/SU2/issues/1026#issuecomment-645265175:38,Modifiability,config,config,38,"There are certainly parameters in the config, and if you had posted yours I could give advice without having to write a bloody essay on all of them. DEFORM_STIFFNESS_TYPE= WALL_DISTANCE // always; DEFORM_COEFF= ""nu"" // the Poisson ratio, default 1E6, you can also try a small value 0.2-0.3; DEFORM_LIMIT= ""R"" // clamps domain points with wall distance greater than ""R"", this improves the condition of the stiffness matrix, which makes it easier for the linear solver to converge.; DEFORM_CONSOLE_OUTPUT= YES // so you can see if the linear solver converges; DEFORM_NONLINEAR_ITER= 1 // always; DEFORM_LINEAR_SOLVER = FGMRES // or CONJUGATE_GRADIENT if memory becomes a problem, i.e. if GMRES does not converge in 100-200 iterations.; DEFORM_LINEAR_SOLVER_PREC = ILU // always, always, never anything else.; DEFORM_LINEAR_SOLVER_ERROR= 1e-9 // at least, I usually set it to 1e-10; DEFORM_LINEAR_SOLVER_ITER= 200 // or a much larger number when using CG since its memory usage does not depend on number of iterations",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026#issuecomment-645265175
https://github.com/su2code/SU2/issues/1026#issuecomment-645489716:288,Modifiability,config,config,288,Thanks Pedro for the description of all these!. I was using the default value for most of them. I tried increasing the DEFORM_LINEAR_SOLVER_ITER but that did not have any effect. Probably will try using DEFORM_COEFF and DEFORM_LIMIT to see if that has an effect. I have also attached the config file for future reference.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026#issuecomment-645489716
https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:1477,Deployability,update,updated,1477,"Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch>; > https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff>; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454
https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:1754,Deployability,Update,Update,1754,"Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch>; > https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff>; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454
https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:1920,Deployability,Patch,Patch,1920,"Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch>; > https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff>; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454
https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:1981,Deployability,patch,patch,1981,"Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch>; > https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff>; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454
https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:2029,Deployability,patch,patch,2029,"Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch>; > https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff>; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454
https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:586,Modifiability,variab,variable,586,"Ettore,. Thanks for submitting this. I thought you gave an excellent presentation at the SU2 Conference and the much better actuator disk model you and your colleagues have put together will surely be useful to many people. Thanks for participating and being a member of the SU2 Community. Please stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://githu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454
https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:866,Modifiability,config,config,866,"Ettore,. Thanks for submitting this. I thought you gave an excellent presentation at the SU2 Conference and the much better actuator disk model you and your colleagues have put together will surely be useful to many people. Thanks for participating and being a member of the SU2 Community. Please stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://githu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454
https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:595,Performance,load,load,595,"Ettore,. Thanks for submitting this. I thought you gave an excellent presentation at the SU2 Conference and the much better actuator disk model you and your colleagues have put together will surely be useful to many people. Thanks for participating and being a member of the SU2 Community. Please stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://githu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454
https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:1408,Testability,test,test,1408,"Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch>; > https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff>; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454
https://github.com/su2code/SU2/pull/1027#issuecomment-646601487:1397,Deployability,update,updated,1397," stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes, Juan; > […](#); > On Jun 18, 2020, at 1:27 AM, SaettaE ***@***.***> wrote: Proposed Changes Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors: Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II. EttoreSaetta, lorenzorusso07, rtogna. Related Work Introduction of new options in the config. file. Introduction of an additional input file that contains the propeller data. Introduction of additional c++ functions. Addition of code lines to existing functions preserving the original actuator disk model. PR Checklist [X ] I am submitting my contribution to the develop branch. My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). [ X] My contribution is commented and consistent with SU2 style. I have added a test case that demonstrates my contribution, if necessary. I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. You can view, comment on, or merge this pull request online at: #1027 <#1027> Commit Summary Update config_template.cfg File Changes M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5) Patch Links: https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch> https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff> — You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub <#1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>. Thank you very much, I hope we can give an useful contribution.; I hope to see you in person too. Best regards,; Ettore",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487
https://github.com/su2code/SU2/pull/1027#issuecomment-646601487:1584,Deployability,Update,Update,1584," stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes, Juan; > […](#); > On Jun 18, 2020, at 1:27 AM, SaettaE ***@***.***> wrote: Proposed Changes Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors: Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II. EttoreSaetta, lorenzorusso07, rtogna. Related Work Introduction of new options in the config. file. Introduction of an additional input file that contains the propeller data. Introduction of additional c++ functions. Addition of code lines to existing functions preserving the original actuator disk model. PR Checklist [X ] I am submitting my contribution to the develop branch. My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). [ X] My contribution is commented and consistent with SU2 style. I have added a test case that demonstrates my contribution, if necessary. I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. You can view, comment on, or merge this pull request online at: #1027 <#1027> Commit Summary Update config_template.cfg File Changes M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5) Patch Links: https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch> https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff> — You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub <#1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>. Thank you very much, I hope we can give an useful contribution.; I hope to see you in person too. Best regards,; Ettore",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487
https://github.com/su2code/SU2/pull/1027#issuecomment-646601487:1737,Deployability,Patch,Patch,1737," stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes, Juan; > […](#); > On Jun 18, 2020, at 1:27 AM, SaettaE ***@***.***> wrote: Proposed Changes Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors: Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II. EttoreSaetta, lorenzorusso07, rtogna. Related Work Introduction of new options in the config. file. Introduction of an additional input file that contains the propeller data. Introduction of additional c++ functions. Addition of code lines to existing functions preserving the original actuator disk model. PR Checklist [X ] I am submitting my contribution to the develop branch. My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). [ X] My contribution is commented and consistent with SU2 style. I have added a test case that demonstrates my contribution, if necessary. I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. You can view, comment on, or merge this pull request online at: #1027 <#1027> Commit Summary Update config_template.cfg File Changes M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5) Patch Links: https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch> https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff> — You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub <#1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>. Thank you very much, I hope we can give an useful contribution.; I hope to see you in person too. Best regards,; Ettore",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487
https://github.com/su2code/SU2/pull/1027#issuecomment-646601487:1791,Deployability,patch,patch,1791," stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes, Juan; > […](#); > On Jun 18, 2020, at 1:27 AM, SaettaE ***@***.***> wrote: Proposed Changes Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors: Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II. EttoreSaetta, lorenzorusso07, rtogna. Related Work Introduction of new options in the config. file. Introduction of an additional input file that contains the propeller data. Introduction of additional c++ functions. Addition of code lines to existing functions preserving the original actuator disk model. PR Checklist [X ] I am submitting my contribution to the develop branch. My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). [ X] My contribution is commented and consistent with SU2 style. I have added a test case that demonstrates my contribution, if necessary. I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. You can view, comment on, or merge this pull request online at: #1027 <#1027> Commit Summary Update config_template.cfg File Changes M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5) Patch Links: https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch> https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff> — You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub <#1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>. Thank you very much, I hope we can give an useful contribution.; I hope to see you in person too. Best regards,; Ettore",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487
https://github.com/su2code/SU2/pull/1027#issuecomment-646601487:1839,Deployability,patch,patch,1839," stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes, Juan; > […](#); > On Jun 18, 2020, at 1:27 AM, SaettaE ***@***.***> wrote: Proposed Changes Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors: Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II. EttoreSaetta, lorenzorusso07, rtogna. Related Work Introduction of new options in the config. file. Introduction of an additional input file that contains the propeller data. Introduction of additional c++ functions. Addition of code lines to existing functions preserving the original actuator disk model. PR Checklist [X ] I am submitting my contribution to the develop branch. My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). [ X] My contribution is commented and consistent with SU2 style. I have added a test case that demonstrates my contribution, if necessary. I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. You can view, comment on, or merge this pull request online at: #1027 <#1027> Commit Summary Update config_template.cfg File Changes M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5) Patch Links: https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch> https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff> — You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub <#1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>. Thank you very much, I hope we can give an useful contribution.; I hope to see you in person too. Best regards,; Ettore",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487
https://github.com/su2code/SU2/pull/1027#issuecomment-646601487:568,Modifiability,variab,variable,568,"> Ettore, Thanks for submitting this. I thought you gave an excellent presentation at the SU2 Conference and the much better actuator disk model you and your colleagues have put together will surely be useful to many people. Thanks for participating and being a member of the SU2 Community. Please stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes, Juan; > […](#); > On Jun 18, 2020, at 1:27 AM, SaettaE ***@***.***> wrote: Proposed Changes Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors: Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II. EttoreSaetta, lorenzorusso07, rtogna. Related Work Introduction of new options in the config. file. Introduction of an additional input file that contains the propeller data. Introduction of additional c++ functions. Addition of code lines to existing functions preserving the original actuator disk model. PR Checklist [X ] I am submitting my contribution to the develop branch. My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). [ X] My contribution is commented and consistent with SU2 style. I have added a test case that demonstrates my contribution, if necessary. I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. You can view, comment on, or merge this pull request online at: #1027 <#1027> Commit Summary Update config_template.cfg File Changes M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5) Patch Links: https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch> https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff> — You are receiving this because you are subscribed to this t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487
https://github.com/su2code/SU2/pull/1027#issuecomment-646601487:821,Modifiability,config,config,821,"> Ettore, Thanks for submitting this. I thought you gave an excellent presentation at the SU2 Conference and the much better actuator disk model you and your colleagues have put together will surely be useful to many people. Thanks for participating and being a member of the SU2 Community. Please stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes, Juan; > […](#); > On Jun 18, 2020, at 1:27 AM, SaettaE ***@***.***> wrote: Proposed Changes Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors: Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II. EttoreSaetta, lorenzorusso07, rtogna. Related Work Introduction of new options in the config. file. Introduction of an additional input file that contains the propeller data. Introduction of additional c++ functions. Addition of code lines to existing functions preserving the original actuator disk model. PR Checklist [X ] I am submitting my contribution to the develop branch. My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). [ X] My contribution is commented and consistent with SU2 style. I have added a test case that demonstrates my contribution, if necessary. I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. You can view, comment on, or merge this pull request online at: #1027 <#1027> Commit Summary Update config_template.cfg File Changes M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5) Patch Links: https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch> https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff> — You are receiving this because you are subscribed to this t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487
https://github.com/su2code/SU2/pull/1027#issuecomment-646601487:577,Performance,load,load,577,"> Ettore, Thanks for submitting this. I thought you gave an excellent presentation at the SU2 Conference and the much better actuator disk model you and your colleagues have put together will surely be useful to many people. Thanks for participating and being a member of the SU2 Community. Please stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes, Juan; > […](#); > On Jun 18, 2020, at 1:27 AM, SaettaE ***@***.***> wrote: Proposed Changes Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors: Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II. EttoreSaetta, lorenzorusso07, rtogna. Related Work Introduction of new options in the config. file. Introduction of an additional input file that contains the propeller data. Introduction of additional c++ functions. Addition of code lines to existing functions preserving the original actuator disk model. PR Checklist [X ] I am submitting my contribution to the develop branch. My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). [ X] My contribution is commented and consistent with SU2 style. I have added a test case that demonstrates my contribution, if necessary. I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. You can view, comment on, or merge this pull request online at: #1027 <#1027> Commit Summary Update config_template.cfg File Changes M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5) Patch Links: https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch> https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff> — You are receiving this because you are subscribed to this t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487
https://github.com/su2code/SU2/pull/1027#issuecomment-646601487:1331,Testability,test,test,1331," stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes, Juan; > […](#); > On Jun 18, 2020, at 1:27 AM, SaettaE ***@***.***> wrote: Proposed Changes Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors: Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II. EttoreSaetta, lorenzorusso07, rtogna. Related Work Introduction of new options in the config. file. Introduction of an additional input file that contains the propeller data. Introduction of additional c++ functions. Addition of code lines to existing functions preserving the original actuator disk model. PR Checklist [X ] I am submitting my contribution to the develop branch. My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). [ X] My contribution is commented and consistent with SU2 style. I have added a test case that demonstrates my contribution, if necessary. I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. You can view, comment on, or merge this pull request online at: #1027 <#1027> Commit Summary Update config_template.cfg File Changes M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5) Patch Links: https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch> https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff> — You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub <#1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>. Thank you very much, I hope we can give an useful contribution.; I hope to see you in person too. Best regards,; Ettore",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487
https://github.com/su2code/SU2/pull/1027#issuecomment-656375715:171,Availability,avail,available,171,"> Thank you for the changes LGTM, it would be nice if that section of code that does the reading could go to a separate function, unless it needs a lot of the information available where you have it now.; > ; > Let's try and get another review so that this PR can be merged before #1044. Yes, we planned to put that piece of code into a separate function tomorrow. So I will try and push a commit for another review tomorrow.; Thank you again for all the advice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-656375715
https://github.com/su2code/SU2/issues/1028#issuecomment-647037294:106,Availability,ping,ping,106,"I also worked on refactoring (and checking) the stress tensors. So if there's any questions, feel free to ping me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1028#issuecomment-647037294
https://github.com/su2code/SU2/issues/1028#issuecomment-647037294:17,Modifiability,refactor,refactoring,17,"I also worked on refactoring (and checking) the stress tensors. So if there's any questions, feel free to ping me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1028#issuecomment-647037294
https://github.com/su2code/SU2/issues/1028#issuecomment-648845465:366,Availability,ping,ping,366,"> I think the person that most recently looked into those Jacobians was @bmunguia; > All I know is that an 100% accurate Jacobian is not necessary for correctness (only the flux matters) but it may make convergence better (sometimes it also makes it worse). > I also worked on refactoring (and checking) the stress tensors. So if there's any questions, feel free to ping me. Thank you for your reply, in fact there still exists some question.; Because in the code for calculating viscous Jacobians, I did not find any partial derivative of primitive variables.; In the stress tensor, partial derivatives such as ∂u/∂x_i, ∂ρ/∂x_i (GradPrimVar[iVar][iDim]) are part of the expression of tau[iDim][jDim], which affects the value of Proj_Flux_Tensor[iVar].; In the approximate process of the Jacobian matrix, it seems that the originally expected terms such as ∂(u/ρ)/∂x are replaced by values like val_Mean_PrimVar[jDim+1]/(Density*val_dist_ij), and then used as part of Jacobian_i and Jacobian_j's expression.; I thought there should be some differential terms, but I didn't find it.; So my question is to know more details about the approximation in calculating viscous Jacobians.; I mention this problem because I want to add some equations (such as concentration equations, moment distribution equations) based on SU2's NS solver, develop an implicit solver, and solve adjoint problems. So augmented Jacobian matrices are needed. I have gone through the SU2 code of TNE2Solver in version 4.0.1. But the solver seems to be imperfect, and have some differences from NSSolver in dealing with the viscous Jacobian matrix. Moreover, the TNE2Solver can be applied to only a few cases. It seems that its code requires further modification.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1028#issuecomment-648845465
https://github.com/su2code/SU2/issues/1028#issuecomment-648845465:277,Modifiability,refactor,refactoring,277,"> I think the person that most recently looked into those Jacobians was @bmunguia; > All I know is that an 100% accurate Jacobian is not necessary for correctness (only the flux matters) but it may make convergence better (sometimes it also makes it worse). > I also worked on refactoring (and checking) the stress tensors. So if there's any questions, feel free to ping me. Thank you for your reply, in fact there still exists some question.; Because in the code for calculating viscous Jacobians, I did not find any partial derivative of primitive variables.; In the stress tensor, partial derivatives such as ∂u/∂x_i, ∂ρ/∂x_i (GradPrimVar[iVar][iDim]) are part of the expression of tau[iDim][jDim], which affects the value of Proj_Flux_Tensor[iVar].; In the approximate process of the Jacobian matrix, it seems that the originally expected terms such as ∂(u/ρ)/∂x are replaced by values like val_Mean_PrimVar[jDim+1]/(Density*val_dist_ij), and then used as part of Jacobian_i and Jacobian_j's expression.; I thought there should be some differential terms, but I didn't find it.; So my question is to know more details about the approximation in calculating viscous Jacobians.; I mention this problem because I want to add some equations (such as concentration equations, moment distribution equations) based on SU2's NS solver, develop an implicit solver, and solve adjoint problems. So augmented Jacobian matrices are needed. I have gone through the SU2 code of TNE2Solver in version 4.0.1. But the solver seems to be imperfect, and have some differences from NSSolver in dealing with the viscous Jacobian matrix. Moreover, the TNE2Solver can be applied to only a few cases. It seems that its code requires further modification.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1028#issuecomment-648845465
https://github.com/su2code/SU2/issues/1028#issuecomment-648845465:550,Modifiability,variab,variables,550,"> I think the person that most recently looked into those Jacobians was @bmunguia; > All I know is that an 100% accurate Jacobian is not necessary for correctness (only the flux matters) but it may make convergence better (sometimes it also makes it worse). > I also worked on refactoring (and checking) the stress tensors. So if there's any questions, feel free to ping me. Thank you for your reply, in fact there still exists some question.; Because in the code for calculating viscous Jacobians, I did not find any partial derivative of primitive variables.; In the stress tensor, partial derivatives such as ∂u/∂x_i, ∂ρ/∂x_i (GradPrimVar[iVar][iDim]) are part of the expression of tau[iDim][jDim], which affects the value of Proj_Flux_Tensor[iVar].; In the approximate process of the Jacobian matrix, it seems that the originally expected terms such as ∂(u/ρ)/∂x are replaced by values like val_Mean_PrimVar[jDim+1]/(Density*val_dist_ij), and then used as part of Jacobian_i and Jacobian_j's expression.; I thought there should be some differential terms, but I didn't find it.; So my question is to know more details about the approximation in calculating viscous Jacobians.; I mention this problem because I want to add some equations (such as concentration equations, moment distribution equations) based on SU2's NS solver, develop an implicit solver, and solve adjoint problems. So augmented Jacobian matrices are needed. I have gone through the SU2 code of TNE2Solver in version 4.0.1. But the solver seems to be imperfect, and have some differences from NSSolver in dealing with the viscous Jacobian matrix. Moreover, the TNE2Solver can be applied to only a few cases. It seems that its code requires further modification.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1028#issuecomment-648845465
https://github.com/su2code/SU2/issues/1028#issuecomment-652232383:350,Deployability,update,updated,350,"> I have gone through the SU2 code of TNE2Solver in version 4.0.1. But the solver seems to be imperfect, and have some differences from NSSolver in dealing with the viscous Jacobian matrix. Moreover, the TNE2Solver can be applied to only a few cases. It seems that its code requires further modification. You may want to check out #1014, which is an updated version of the old TNE2 solver. Just fyi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1028#issuecomment-652232383
https://github.com/su2code/SU2/issues/1028#issuecomment-652455102:189,Integrability,depend,depends,189,"@qwebean The derivative terms you describe would appear in an analytical Jacobian. But SU2 needs the Jacobian of the discrete system. In other words, we don't need to know how the residual depends on the analytical gradient. We need to know how the values at some points ""i"" and ""j"" affects the residual. You want the Jacobian of the residual with respect to individual values at individual nodes, not interpolated functions. You can approximate the derivative (`da/dx`) of some quantity `a` as ""(a_j - a_i)/d_{ij}`, where `d_{ij}` is the distance between the point ""i"" and ""j"". So the Jacobian of (`da/dx`) with respect to `a_i` is (approximately) `-1/d_{ij}`. Does that answer your question? Do you have further questions?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1028#issuecomment-652455102
https://github.com/su2code/SU2/issues/1029#issuecomment-646344071:101,Deployability,release,release,101,"No prob, we can cherry pick all these fixes into a new PR if my one does not go through for the next release.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1029#issuecomment-646344071
https://github.com/su2code/SU2/issues/1034#issuecomment-651250250:793,Energy Efficiency,efficient,efficient,793,"> You've got two options:; > ; > 1. Use the cfg option `WRT_BINARY_RESTART= NO` to dump the restart file(s) in human-readable ASCII.; > 2. Use the cfg option `OUTPUT_FORMAT= TECPLOT` or `OUTPUT_FORMAT=PARAVIEW` with SU2_SOL to export the solution to an ASCII-formatted tecplot or paraview file. If you're not familiar with SU2_SOL, then check out [the documentation](https://su2code.github.io/docs/Post-processing/).; > ; > You can find those cfg options in `config_template.cfg` in the root SU2 source code directory.; > ; > In the end, using the tecplot or paraview option may be your best bet. Trying to manually parse the text files smells like an [XY Problem](https://en.wikipedia.org/wiki/XY_problem). Tecplot and Paraview both have scripting capabilities that make post-processing very efficient.; > ; > Does that answer your question? Do you have any follow-up concerns?; > ; > _Originally posted by @clarkpede in [#787 (comment)](https://github.com/su2code/SU2/issues/787#issuecomment-528435629)_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1034#issuecomment-651250250
https://github.com/su2code/SU2/pull/1036#issuecomment-653127604:14,Deployability,update,update,14,"Might want to update your ninja and meson submodules. Seems like those are changed, but they shouldn't be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653127604
https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:712,Availability,Robust,Robust,712,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720
https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:1052,Availability,down,down,1052,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720
https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:1067,Deployability,configurat,configuration,1067,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720
https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:163,Energy Efficiency,adapt,adaption,163,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720
https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:560,Energy Efficiency,adapt,adaption,560,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720
https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:719,Energy Efficiency,Adapt,Adaptive,719,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720
https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:84,Integrability,wrap,wrapping,84,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720
https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:172,Integrability,rout,routine,172,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720
https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:569,Integrability,rout,routine,569,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720
https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:163,Modifiability,adapt,adaption,163,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720
https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:560,Modifiability,adapt,adaption,560,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720
https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:719,Modifiability,Adapt,Adaptive,719,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720
https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:1067,Modifiability,config,configuration,1067,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720
https://github.com/su2code/SU2/pull/1036#issuecomment-673026393:161,Energy Efficiency,adapt,adaption,161,"We were discussing the failing discrete adjoint test case in this PR earlier today in the dev call (which seems a little odd). It may be worth disabling the CFL adaption features altogether in Config::SetPostprocesing() when running the discrete adjoint, since it does not make much sense given that we record just a single primal iteration. We should also then check that the CFL number used in that iteration makes sense (initial value vs final value in the primal.. prob makes sense to use initial to be conservative).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393
https://github.com/su2code/SU2/pull/1036#issuecomment-673026393:161,Modifiability,adapt,adaption,161,"We were discussing the failing discrete adjoint test case in this PR earlier today in the dev call (which seems a little odd). It may be worth disabling the CFL adaption features altogether in Config::SetPostprocesing() when running the discrete adjoint, since it does not make much sense given that we record just a single primal iteration. We should also then check that the CFL number used in that iteration makes sense (initial value vs final value in the primal.. prob makes sense to use initial to be conservative).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393
https://github.com/su2code/SU2/pull/1036#issuecomment-673026393:193,Modifiability,Config,Config,193,"We were discussing the failing discrete adjoint test case in this PR earlier today in the dev call (which seems a little odd). It may be worth disabling the CFL adaption features altogether in Config::SetPostprocesing() when running the discrete adjoint, since it does not make much sense given that we record just a single primal iteration. We should also then check that the CFL number used in that iteration makes sense (initial value vs final value in the primal.. prob makes sense to use initial to be conservative).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393
https://github.com/su2code/SU2/pull/1036#issuecomment-673026393:48,Testability,test,test,48,"We were discussing the failing discrete adjoint test case in this PR earlier today in the dev call (which seems a little odd). It may be worth disabling the CFL adaption features altogether in Config::SetPostprocesing() when running the discrete adjoint, since it does not make much sense given that we record just a single primal iteration. We should also then check that the CFL number used in that iteration makes sense (initial value vs final value in the primal.. prob makes sense to use initial to be conservative).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393
https://github.com/su2code/SU2/pull/1036#issuecomment-673044213:369,Energy Efficiency,reduce,reduced,369,"I've messed around with this a bit in some of my other branches. Since I've been using python scripts, I've used the minimum CFL in the volume at the end of the flow solution (obtained from the history file) as the CFL in my adjoint runs. I figured that would be the largest CFL that could be applied everywhere and give a contractive iteration. Doing so significantly reduced the cost of the adjoint (obviously proportional to CFL_Min/CFL_Init). We could probably do even better and output the local CFL in the restart then load that into adjoint runs, maybe with a reduction factor if we want to be conservative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673044213
https://github.com/su2code/SU2/pull/1036#issuecomment-673044213:323,Integrability,contract,contractive,323,"I've messed around with this a bit in some of my other branches. Since I've been using python scripts, I've used the minimum CFL in the volume at the end of the flow solution (obtained from the history file) as the CFL in my adjoint runs. I figured that would be the largest CFL that could be applied everywhere and give a contractive iteration. Doing so significantly reduced the cost of the adjoint (obviously proportional to CFL_Min/CFL_Init). We could probably do even better and output the local CFL in the restart then load that into adjoint runs, maybe with a reduction factor if we want to be conservative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673044213
https://github.com/su2code/SU2/pull/1036#issuecomment-673044213:525,Performance,load,load,525,"I've messed around with this a bit in some of my other branches. Since I've been using python scripts, I've used the minimum CFL in the volume at the end of the flow solution (obtained from the history file) as the CFL in my adjoint runs. I figured that would be the largest CFL that could be applied everywhere and give a contractive iteration. Doing so significantly reduced the cost of the adjoint (obviously proportional to CFL_Min/CFL_Init). We could probably do even better and output the local CFL in the restart then load that into adjoint runs, maybe with a reduction factor if we want to be conservative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673044213
https://github.com/su2code/SU2/pull/1036#issuecomment-739058644:139,Energy Efficiency,adapt,adaptation,139,"Classic stale bot. There are only 2 fixes since the UR fix was merged into develop in #1057, the Inner vs TimeIter fix and turning off CFL adaptation for the discrete adjoint (which I just added). If we're holding off on any algorithmic changes, I guess the only thing to discuss is which CFL should be used for the discrete adjoint. As is, it'll use whatever's specified in CFL_NUMBER in the config file, but I'm personally in favor of storing the local CFL to reduce the bottleneck of the adjoint. This could also be part of a separate PR if you need the bug fixes yesterday.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644
https://github.com/su2code/SU2/pull/1036#issuecomment-739058644:462,Energy Efficiency,reduce,reduce,462,"Classic stale bot. There are only 2 fixes since the UR fix was merged into develop in #1057, the Inner vs TimeIter fix and turning off CFL adaptation for the discrete adjoint (which I just added). If we're holding off on any algorithmic changes, I guess the only thing to discuss is which CFL should be used for the discrete adjoint. As is, it'll use whatever's specified in CFL_NUMBER in the config file, but I'm personally in favor of storing the local CFL to reduce the bottleneck of the adjoint. This could also be part of a separate PR if you need the bug fixes yesterday.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644
https://github.com/su2code/SU2/pull/1036#issuecomment-739058644:139,Modifiability,adapt,adaptation,139,"Classic stale bot. There are only 2 fixes since the UR fix was merged into develop in #1057, the Inner vs TimeIter fix and turning off CFL adaptation for the discrete adjoint (which I just added). If we're holding off on any algorithmic changes, I guess the only thing to discuss is which CFL should be used for the discrete adjoint. As is, it'll use whatever's specified in CFL_NUMBER in the config file, but I'm personally in favor of storing the local CFL to reduce the bottleneck of the adjoint. This could also be part of a separate PR if you need the bug fixes yesterday.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644
https://github.com/su2code/SU2/pull/1036#issuecomment-739058644:393,Modifiability,config,config,393,"Classic stale bot. There are only 2 fixes since the UR fix was merged into develop in #1057, the Inner vs TimeIter fix and turning off CFL adaptation for the discrete adjoint (which I just added). If we're holding off on any algorithmic changes, I guess the only thing to discuss is which CFL should be used for the discrete adjoint. As is, it'll use whatever's specified in CFL_NUMBER in the config file, but I'm personally in favor of storing the local CFL to reduce the bottleneck of the adjoint. This could also be part of a separate PR if you need the bug fixes yesterday.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644
https://github.com/su2code/SU2/pull/1036#issuecomment-739058644:473,Performance,bottleneck,bottleneck,473,"Classic stale bot. There are only 2 fixes since the UR fix was merged into develop in #1057, the Inner vs TimeIter fix and turning off CFL adaptation for the discrete adjoint (which I just added). If we're holding off on any algorithmic changes, I guess the only thing to discuss is which CFL should be used for the discrete adjoint. As is, it'll use whatever's specified in CFL_NUMBER in the config file, but I'm personally in favor of storing the local CFL to reduce the bottleneck of the adjoint. This could also be part of a separate PR if you need the bug fixes yesterday.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644
https://github.com/su2code/SU2/pull/1036#issuecomment-739061041:331,Safety,avoid,avoid,331,"I'm not in a hurry, but I would not want to upset the stalebot. Practical consideration regarding storing the CFL, do we have to? In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?; I don't mind outputting the CFL, but it would be nice if we could avoid complexifying the restart logic further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739061041
https://github.com/su2code/SU2/pull/1036#issuecomment-739061041:363,Testability,log,logic,363,"I'm not in a hurry, but I would not want to upset the stalebot. Practical consideration regarding storing the CFL, do we have to? In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?; I don't mind outputting the CFL, but it would be nice if we could avoid complexifying the restart logic further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739061041
https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:751,Availability,reliab,reliable,751,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301
https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:330,Energy Efficiency,adapt,adapting,330,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301
https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:515,Energy Efficiency,adapt,adaptation,515,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301
https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:568,Energy Efficiency,adapt,adapting,568,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301
https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:737,Energy Efficiency,adapt,adaptation,737,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301
https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:813,Integrability,wrap,wrapper,813,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301
https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:330,Modifiability,adapt,adapting,330,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301
https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:515,Modifiability,adapt,adaptation,515,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301
https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:568,Modifiability,adapt,adapting,568,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301
https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:737,Modifiability,adapt,adaptation,737,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301
https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:483,Performance,bottleneck,bottleneck,483,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301
https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:497,Performance,optimiz,optimization,497,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301
https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:97,Availability,toler,tolerance,97,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020
https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:279,Availability,toler,tolerance,279,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020
https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:519,Availability,toler,tolerance,519,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020
https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:584,Availability,toler,tolerance,584,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020
https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:442,Energy Efficiency,adapt,adapt,442,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020
https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:614,Energy Efficiency,adapt,adapted,614,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020
https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:442,Modifiability,adapt,adapt,442,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020
https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:614,Modifiability,adapt,adapted,614,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020
https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:17,Testability,test,testing,17,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020
https://github.com/su2code/SU2/issues/1037#issuecomment-661415665:178,Performance,optimiz,optimization,178,"Sorry for taking so long to reply to this.; The old automake build system is loosely maintained, so far as I know it is currently working fine. Note that you need to specify the optimization flags manually, on gcc these work well:; export CXXFLAGS=""-O2 -funroll-loops -DNDEBUG -march=native""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037#issuecomment-661415665
https://github.com/su2code/SU2/issues/1037#issuecomment-681033828:332,Availability,error,error,332,"Hi,. I have similar issues building SU2-7.0.6 with spack-compiled libraries and mason/ninja on CentOS7. I am using gcc-6.3.0, openmpi-3.1.4 and python-3.7.0. The configure/build commands I use are:; ```; ./meson.py build -Denable-pywrapper=true --prefix=$PREFIX ; ./ninja -j16 -C build install; ```. At the linking stage, I get the error:; ```; mpiCC -o SU2_MSH/src/SU2_MSH SU2_MSH/src/SU2_MSH.p/SU2_MSH.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags /apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib/libmpi.so -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags /apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib/libmpi_cxx.so -Wl,--end-group -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037#issuecomment-681033828
https://github.com/su2code/SU2/issues/1037#issuecomment-681033828:2758,Availability,error,error,2758,"sr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags '-Wl,-rpath,$ORIGIN/../../externals/cgns:$ORIGIN/../../externals/metis:$ORIGIN/../../externals/parmetis:$ORIGIN/../../externals/tecio/teciompisrc:$ORIGIN/../../Common/src' -Wl,-rpath-link,/scratch/brown/SU2/SU2-7.0.6/build/externals/cgns -Wl,-rpath-link,/scratch/brown/SU2/SU2-7.0.6/build/externals/metis -Wl,-rpath-link,/scratch/brown/SU2/SU2-7.0.6/build/externals/parmetis -Wl,-rpath-link,/scratch/brown/SU2/SU2-7.0.6/build/externals/tecio/teciompisrc -Wl,-rpath-link,/scratch/brown/SU2/SU2-7.0.6/build/Common/src; /usr/lib64: file not recognized: Is a directory; collect2: error: ld returned 1 exit status; ```. After manually playing with the mpiCC command, I found that the error is coming from ; ```; -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 ... ...; ```; If I replace the additional `-Wl,/path/to/lib` with `-Wl,-rpath -Wl,/path/to/lib` things work fine. For example this links fine:; ```; -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,-rpath -Wl,/usr/lib64 -Wl,-rpath -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,-rpath -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,-rpath -Wl,/usr/lib64 ... ...; ```; Is there something wrong in the mason.build script which is expanding wrong `-rpath` arguments, or is this a versi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037#issuecomment-681033828
https://github.com/su2code/SU2/issues/1037#issuecomment-681033828:2861,Availability,error,error,2861,"ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags '-Wl,-rpath,$ORIGIN/../../externals/cgns:$ORIGIN/../../externals/metis:$ORIGIN/../../externals/parmetis:$ORIGIN/../../externals/tecio/teciompisrc:$ORIGIN/../../Common/src' -Wl,-rpath-link,/scratch/brown/SU2/SU2-7.0.6/build/externals/cgns -Wl,-rpath-link,/scratch/brown/SU2/SU2-7.0.6/build/externals/metis -Wl,-rpath-link,/scratch/brown/SU2/SU2-7.0.6/build/externals/parmetis -Wl,-rpath-link,/scratch/brown/SU2/SU2-7.0.6/build/externals/tecio/teciompisrc -Wl,-rpath-link,/scratch/brown/SU2/SU2-7.0.6/build/Common/src; /usr/lib64: file not recognized: Is a directory; collect2: error: ld returned 1 exit status; ```. After manually playing with the mpiCC command, I found that the error is coming from ; ```; -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 ... ...; ```; If I replace the additional `-Wl,/path/to/lib` with `-Wl,-rpath -Wl,/path/to/lib` things work fine. For example this links fine:; ```; -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,-rpath -Wl,/usr/lib64 -Wl,-rpath -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,-rpath -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,-rpath -Wl,/usr/lib64 ... ...; ```; Is there something wrong in the mason.build script which is expanding wrong `-rpath` arguments, or is this a version incompatibility?. Please let me know how I can fix this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037#issuecomment-681033828
https://github.com/su2code/SU2/issues/1037#issuecomment-681033828:286,Deployability,install,install,286,"Hi,. I have similar issues building SU2-7.0.6 with spack-compiled libraries and mason/ninja on CentOS7. I am using gcc-6.3.0, openmpi-3.1.4 and python-3.7.0. The configure/build commands I use are:; ```; ./meson.py build -Denable-pywrapper=true --prefix=$PREFIX ; ./ninja -j16 -C build install; ```. At the linking stage, I get the error:; ```; mpiCC -o SU2_MSH/src/SU2_MSH SU2_MSH/src/SU2_MSH.p/SU2_MSH.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags /apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib/libmpi.so -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags /apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib/libmpi_cxx.so -Wl,--end-group -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037#issuecomment-681033828
https://github.com/su2code/SU2/issues/1037#issuecomment-681033828:162,Modifiability,config,configure,162,"Hi,. I have similar issues building SU2-7.0.6 with spack-compiled libraries and mason/ninja on CentOS7. I am using gcc-6.3.0, openmpi-3.1.4 and python-3.7.0. The configure/build commands I use are:; ```; ./meson.py build -Denable-pywrapper=true --prefix=$PREFIX ; ./ninja -j16 -C build install; ```. At the linking stage, I get the error:; ```; mpiCC -o SU2_MSH/src/SU2_MSH SU2_MSH/src/SU2_MSH.p/SU2_MSH.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags /apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib/libmpi.so -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags /apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib/libmpi_cxx.so -Wl,--end-group -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/apps/spack/brown/apps/hwloc/1.11.11-gcc-7.3.0-xoecbyv/lib -Wl,/usr/lib64 -Wl,/apps/spack/brown/apps/openmpi/3.1.4-gcc-7.3.0-ik4qowj/lib -Wl,--enable-new-",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037#issuecomment-681033828
https://github.com/su2code/SU2/issues/1040#issuecomment-654885331:19,Availability,error,error,19,"It looks like this error happens when the back() function is called for an empty string. According to the documentation, http://www.cplusplus.com/reference/string/string/back, this should not be done. So an additional check for an empty string would solve this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1040#issuecomment-654885331
https://github.com/su2code/SU2/issues/1042#issuecomment-657121387:119,Performance,optimiz,optimization,119,"Have you tried the suggested python 3.7 on CFD online?; As a side note, your compiler version does not do one specific optimization that the finite volume solvers rely on (icpc 19.0.1 onward does).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042#issuecomment-657121387
https://github.com/su2code/SU2/issues/1046#issuecomment-657104021:156,Testability,test,test,156,"Hi @usbrem : thanks for making us aware of the issue. If you have some time, would you consider submitting a pull request with these changes, since you can test locally very easily? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1046#issuecomment-657104021
https://github.com/su2code/SU2/pull/1049#issuecomment-662917570:15,Deployability,update,update,15,"@jblueh please update this with develop so we can merge it (it is in your fork so no one else can do it).; Also could you please update these lines:; ```; sha_version_codi = 'bd4a639c2fe625a80946c8365bd2976a2868cf46'; github_repo_codi = 'https://github.com/scicompkl/CoDiPack'; sha_version_medi = '46a97e1d6e8fdd3cb42b06534cff6acad2a49693'; github_repo_medi = 'https://github.com/SciCompKL/MeDiPack' preconfigure.py script; ```; of the `preconfigure.py` script? (the legacy build system still seems to be used by some folks).; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1049#issuecomment-662917570
https://github.com/su2code/SU2/pull/1049#issuecomment-662917570:129,Deployability,update,update,129,"@jblueh please update this with develop so we can merge it (it is in your fork so no one else can do it).; Also could you please update these lines:; ```; sha_version_codi = 'bd4a639c2fe625a80946c8365bd2976a2868cf46'; github_repo_codi = 'https://github.com/scicompkl/CoDiPack'; sha_version_medi = '46a97e1d6e8fdd3cb42b06534cff6acad2a49693'; github_repo_medi = 'https://github.com/SciCompKL/MeDiPack' preconfigure.py script; ```; of the `preconfigure.py` script? (the legacy build system still seems to be used by some folks).; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1049#issuecomment-662917570
https://github.com/su2code/SU2/pull/1050#issuecomment-663114188:896,Integrability,Depend,Depending,896,"> Accuracy or stability wise? . Stability-wise. On the DSMA cases I posted, the edge limiters both stall. > It bugs me that the limiter function starts at 0 (when r=0) while all others start at 1 and actually go above one until r becomes greater than 1. Yeah, maybe it needs to be reworked, but I thought that most limiter functions started at 0? E.g. from Venkatakrishnan. <img width=""448"" alt=""Screen Shot 2020-07-23 at 9 22 37 AM"" src=""https://user-images.githubusercontent.com/19416354/88311740-23891a00-ccc6-11ea-9439-73e07343b7f2.png"">; <img width=""455"" alt=""Screen Shot 2020-07-23 at 9 20 39 AM"" src=""https://user-images.githubusercontent.com/19416354/88311750-25eb7400-ccc6-11ea-87dd-e134d5b686be.png"">. > Maybe the definition of r for Piperno needs some adjustment for unstructured grids? In the paper R is the ratio of consecutive deltas. He discusses that in section 5.1 of his paper. Depending on whether your upwind gradient comes from the node or the triangle upwind of the edge, you have; <img width=""547"" alt=""Screen Shot 2020-07-23 at 9 34 49 AM"" src=""https://user-images.githubusercontent.com/19416354/88313073-d312bc00-ccc7-11ea-8b59-5635bc8d9b15.png"">; I modified the upwind difference to be consistent with this definition (which is why the regressions that use van Albada failed, the rest seem to be a segfault that I'll fix soon).; The choice of r is also discussed briefly [here](https://github.com/su2code/SU2/files/4967575/r_factor_Li.pdf). > doesn't phi(r) (the piece-wise part) need to be multiplied by another term to give the final psi(R)?. The other term (1/3 + 2/3*R) is baked into when I recompute the limited Project_Grads. Since we multiply psi(R) by the upwind difference deltaU_u, it becomes U_i + 1/2\*(1/3 deltaU_u + 2/3 deltaU_c)\*psi(R), which we get for kappa=1/3. > With kappa close to 1 my gut feeling says the limiters will be off everywhere (r~1 by definition) unless the gradient goes wild.; > Also the left and right states will be very similar, and sin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050#issuecomment-663114188
https://github.com/su2code/SU2/pull/1050#issuecomment-699080843:399,Availability,avail,available,399,"> I've also wondered about whether the Jacobians (even dF/dU) should be evaluate at the reconstructed state (as currently done) or at the un-reconstructed... This can be easily tested in #1022 (the reconstruction is inside the numerics). @pcarruscag coming back to this, is the plan with #1022 to exclusively use CNumericsSIMD, or keep the USE_VECTORIZATION option and have both Roe implementations available? I was thinking of merging feature_simd_numerics into this branch, and was wondering if I'd need to implement the reconstruction Jacobian for both Roe implementations or if I should just stick to CNumericsSIMD.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050#issuecomment-699080843
https://github.com/su2code/SU2/pull/1050#issuecomment-699080843:177,Testability,test,tested,177,"> I've also wondered about whether the Jacobians (even dF/dU) should be evaluate at the reconstructed state (as currently done) or at the un-reconstructed... This can be easily tested in #1022 (the reconstruction is inside the numerics). @pcarruscag coming back to this, is the plan with #1022 to exclusively use CNumericsSIMD, or keep the USE_VECTORIZATION option and have both Roe implementations available? I was thinking of merging feature_simd_numerics into this branch, and was wondering if I'd need to implement the reconstruction Jacobian for both Roe implementations or if I should just stick to CNumericsSIMD.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050#issuecomment-699080843
https://github.com/su2code/SU2/pull/1050#issuecomment-699192561:1231,Availability,avail,available,1231,"I think ideally we would have only the speedy stuff, but that is a very; long term goal (and ideally a community decision).; Medium term they will have to coexist due to:; 1) Features I have not re-implemented like, reconstruction checks,; uncertainty stuff.; 2) ""Boundary numerics"", I need to think of a clever way to use; CNumericsSIMD on boundaries (this should not matter for what you are; working on). With that said, I implemented JST with matrix dissipation and did not; bother making 2 versions of it... So, you choose, nothing would make me happier than seeing people starting; to use that framework. On Fri, 25 Sep 2020, 19:19 Brian Munguía, <notifications@github.com> wrote:. > I've also wondered about whether the Jacobians (even dF/dU) should be; > evaluate at the reconstructed state (as currently done) or at the; > un-reconstructed... This can be easily tested in #1022; > <https://github.com/su2code/SU2/pull/1022> (the reconstruction is inside; > the numerics).; >; > @pcarruscag <https://github.com/pcarruscag> coming back to this, is the; > plan with #1022 <https://github.com/su2code/SU2/pull/1022> to exclusively; > use CNumericsSIMD, or keep the USE_VECTORIZATION option and have both Roe; > implementations available? I was thinking of merging feature_simd_numerics; > into this branch, and was wondering if I'd need to implement the; > reconstruction Jacobian for both Roe implementations or if I should just; > stick to CNumericsSIMD.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1050#issuecomment-699080843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN2UIR3VMHBZO2D5X33SHTNMNANCNFSM4O6XOQQQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050#issuecomment-699192561
https://github.com/su2code/SU2/pull/1050#issuecomment-699192561:870,Testability,test,tested,870,"I think ideally we would have only the speedy stuff, but that is a very; long term goal (and ideally a community decision).; Medium term they will have to coexist due to:; 1) Features I have not re-implemented like, reconstruction checks,; uncertainty stuff.; 2) ""Boundary numerics"", I need to think of a clever way to use; CNumericsSIMD on boundaries (this should not matter for what you are; working on). With that said, I implemented JST with matrix dissipation and did not; bother making 2 versions of it... So, you choose, nothing would make me happier than seeing people starting; to use that framework. On Fri, 25 Sep 2020, 19:19 Brian Munguía, <notifications@github.com> wrote:. > I've also wondered about whether the Jacobians (even dF/dU) should be; > evaluate at the reconstructed state (as currently done) or at the; > un-reconstructed... This can be easily tested in #1022; > <https://github.com/su2code/SU2/pull/1022> (the reconstruction is inside; > the numerics).; >; > @pcarruscag <https://github.com/pcarruscag> coming back to this, is the; > plan with #1022 <https://github.com/su2code/SU2/pull/1022> to exclusively; > use CNumericsSIMD, or keep the USE_VECTORIZATION option and have both Roe; > implementations available? I was thinking of merging feature_simd_numerics; > into this branch, and was wondering if I'd need to implement the; > reconstruction Jacobian for both Roe implementations or if I should just; > stick to CNumericsSIMD.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1050#issuecomment-699080843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN2UIR3VMHBZO2D5X33SHTNMNANCNFSM4O6XOQQQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050#issuecomment-699192561
https://github.com/su2code/SU2/pull/1055#issuecomment-669275669:21,Deployability,install,install,21,I finally managed to install this branch on my windows PC and can confirm that I can now access the vtu files on Paraview version 5.8.0.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1055#issuecomment-669275669
https://github.com/su2code/SU2/pull/1055#issuecomment-669275669:89,Security,access,access,89,I finally managed to install this branch on my windows PC and can confirm that I can now access the vtu files on Paraview version 5.8.0.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1055#issuecomment-669275669
https://github.com/su2code/SU2/pull/1055#issuecomment-669277905:20,Testability,test,testing,20,"Awesome! Thanks for testing, I can only imagine the hassle of setting this up on Windows.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1055#issuecomment-669277905
https://github.com/su2code/SU2/pull/1056#issuecomment-664604064:70,Availability,robust,robust,70,"Hi @pcarruscag,; Is this matrix dissipation version is going to be as robust as original JST in use (which does well with multigrid, while other low dissipation schemes do not i. e. Roe, HLLC, AUSM etc.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1056#issuecomment-664604064
https://github.com/su2code/SU2/pull/1056#issuecomment-664654867:108,Availability,robust,robustness,108,"I have not tried it on anything very challenging yet, but I expect the usual trade-off between accuracy and robustness.; Do note that with enough entropy correction this version becomes nearly equivalent to normal JST (which will still be available).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1056#issuecomment-664654867
https://github.com/su2code/SU2/pull/1056#issuecomment-664654867:239,Availability,avail,available,239,"I have not tried it on anything very challenging yet, but I expect the usual trade-off between accuracy and robustness.; Do note that with enough entropy correction this version becomes nearly equivalent to normal JST (which will still be available).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1056#issuecomment-664654867
https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:744,Availability,robust,robustness,744,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867
https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:172,Modifiability,refactor,refactor,172,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867
https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:327,Modifiability,refactor,refactoring,327,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867
https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:827,Modifiability,extend,extend,827,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867
https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:1370,Modifiability,extend,extended,1370,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867
https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:1895,Modifiability,refactor,refactoring,1895,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867
https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:346,Performance,optimiz,optimization,346,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867
https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:731,Performance,perform,performance,731,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867
https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:1254,Performance,perform,performance,1254,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867
https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:426,Security,expose,exposed,426,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867
https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:96,Testability,log,logic,96,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:1616,Availability,Avail,Available,1616,"ns; - Upgrading to ""C++14"" allowing me to use make_unique; a personal preference.; - ""--whole-archive"" GCC compiler option is necessary in order to pull and force-initialize all symbols from statically-linked library. This is compiler-specific and may bloat the result binary with unnecessary symbols. But it's the quickest way.; 2. I tried to make changes so the interaction with the code is minimal so I went and took advantage of **CSolverFactory::CreateSubSolver()** to create a pointer to self-registered **CEulerSolver**.; 3. By the way, I thought the solver would be created only once. Little I knew!; 4. Anyway, The registration works as expected now. If you change ""EULER"" in [this line](https://github.com/FoamScience/SU2/blob/feature_self_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:2599,Availability,fault,fault,2599,"_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal code: Address not mapped (1); [Elwardi-PC:04092] Failing at address: (nil); [Elwardi-PC:04092] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x3efd0)[0x7f6f2de1dfd0]; [Elwardi-PC:04092] *** End of error message ***; Segmentation fault; ```; So there is probably something else I didn't pay attention to. ## Immediate improvements. Forcing the dev to create his own ""is_registered"" static variable and initializing it himself can be eliminated by by putting the variable in a templated class (notice that the variable initialization only depends on the type it belongs to and the factory class) which the solver can inherit from. ## My question. Any idea on what is causing the seg fault. I'm pretty sure it's because I'm returning a nullptr somewhere though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:2826,Availability,error,error,2826,"_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal code: Address not mapped (1); [Elwardi-PC:04092] Failing at address: (nil); [Elwardi-PC:04092] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x3efd0)[0x7f6f2de1dfd0]; [Elwardi-PC:04092] *** End of error message ***; Segmentation fault; ```; So there is probably something else I didn't pay attention to. ## Immediate improvements. Forcing the dev to create his own ""is_registered"" static variable and initializing it himself can be eliminated by by putting the variable in a templated class (notice that the variable initialization only depends on the type it belongs to and the factory class) which the solver can inherit from. ## My question. Any idea on what is causing the seg fault. I'm pretty sure it's because I'm returning a nullptr somewhere though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:2858,Availability,fault,fault,2858,"_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal code: Address not mapped (1); [Elwardi-PC:04092] Failing at address: (nil); [Elwardi-PC:04092] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x3efd0)[0x7f6f2de1dfd0]; [Elwardi-PC:04092] *** End of error message ***; Segmentation fault; ```; So there is probably something else I didn't pay attention to. ## Immediate improvements. Forcing the dev to create his own ""is_registered"" static variable and initializing it himself can be eliminated by by putting the variable in a templated class (notice that the variable initialization only depends on the type it belongs to and the factory class) which the solver can inherit from. ## My question. Any idea on what is causing the seg fault. I'm pretty sure it's because I'm returning a nullptr somewhere though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:3310,Availability,fault,fault,3310,"_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal code: Address not mapped (1); [Elwardi-PC:04092] Failing at address: (nil); [Elwardi-PC:04092] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x3efd0)[0x7f6f2de1dfd0]; [Elwardi-PC:04092] *** End of error message ***; Segmentation fault; ```; So there is probably something else I didn't pay attention to. ## Immediate improvements. Forcing the dev to create his own ""is_registered"" static variable and initializing it himself can be eliminated by by putting the variable in a templated class (notice that the variable initialization only depends on the type it belongs to and the factory class) which the solver can inherit from. ## My question. Any idea on what is causing the seg fault. I'm pretty sure it's because I'm returning a nullptr somewhere though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:2832,Integrability,message,message,2832,"_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal code: Address not mapped (1); [Elwardi-PC:04092] Failing at address: (nil); [Elwardi-PC:04092] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x3efd0)[0x7f6f2de1dfd0]; [Elwardi-PC:04092] *** End of error message ***; Segmentation fault; ```; So there is probably something else I didn't pay attention to. ## Immediate improvements. Forcing the dev to create his own ""is_registered"" static variable and initializing it himself can be eliminated by by putting the variable in a templated class (notice that the variable initialization only depends on the type it belongs to and the factory class) which the solver can inherit from. ## My question. Any idea on what is causing the seg fault. I'm pretty sure it's because I'm returning a nullptr somewhere though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:3166,Integrability,depend,depends,3166,"_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal code: Address not mapped (1); [Elwardi-PC:04092] Failing at address: (nil); [Elwardi-PC:04092] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x3efd0)[0x7f6f2de1dfd0]; [Elwardi-PC:04092] *** End of error message ***; Segmentation fault; ```; So there is probably something else I didn't pay attention to. ## Immediate improvements. Forcing the dev to create his own ""is_registered"" static variable and initializing it himself can be eliminated by by putting the variable in a templated class (notice that the variable initialization only depends on the type it belongs to and the factory class) which the solver can inherit from. ## My question. Any idea on what is causing the seg fault. I'm pretty sure it's because I'm returning a nullptr somewhere though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:363,Modifiability,variab,variables,363,"OK, I think I did some progress regarding this issue. After you read this, please [Compare](https://github.com/FoamScience/SU2/compare/master...FoamScience:feature_self_reg_classes) the master and the feature branches. ## Design Idea. - We need to register a child class to a map stored in a factory class; obviously, well before construction time.; - The static variables to the rescue: Associate a static variable to the class and call the registration function when initializing the static variable. done!. ## Work Status. > I'm using ""Inviscid Bump in the Channel"" case for testing. 1. I had to make some changes to the building options; - Upgrading to ""C++14"" allowing me to use make_unique; a personal preference.; - ""--whole-archive"" GCC compiler option is necessary in order to pull and force-initialize all symbols from statically-linked library. This is compiler-specific and may bloat the result binary with unnecessary symbols. But it's the quickest way.; 2. I tried to make changes so the interaction with the code is minimal so I went and took advantage of **CSolverFactory::CreateSubSolver()** to create a pointer to self-registered **CEulerSolver**.; 3. By the way, I thought the solver would be created only once. Little I knew!; 4. Anyway, The registration works as expected now. If you change ""EULER"" in [this line](https://github.com/FoamScience/SU2/blob/feature_self_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:407,Modifiability,variab,variable,407,"OK, I think I did some progress regarding this issue. After you read this, please [Compare](https://github.com/FoamScience/SU2/compare/master...FoamScience:feature_self_reg_classes) the master and the feature branches. ## Design Idea. - We need to register a child class to a map stored in a factory class; obviously, well before construction time.; - The static variables to the rescue: Associate a static variable to the class and call the registration function when initializing the static variable. done!. ## Work Status. > I'm using ""Inviscid Bump in the Channel"" case for testing. 1. I had to make some changes to the building options; - Upgrading to ""C++14"" allowing me to use make_unique; a personal preference.; - ""--whole-archive"" GCC compiler option is necessary in order to pull and force-initialize all symbols from statically-linked library. This is compiler-specific and may bloat the result binary with unnecessary symbols. But it's the quickest way.; 2. I tried to make changes so the interaction with the code is minimal so I went and took advantage of **CSolverFactory::CreateSubSolver()** to create a pointer to self-registered **CEulerSolver**.; 3. By the way, I thought the solver would be created only once. Little I knew!; 4. Anyway, The registration works as expected now. If you change ""EULER"" in [this line](https://github.com/FoamScience/SU2/blob/feature_self_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:493,Modifiability,variab,variable,493,"OK, I think I did some progress regarding this issue. After you read this, please [Compare](https://github.com/FoamScience/SU2/compare/master...FoamScience:feature_self_reg_classes) the master and the feature branches. ## Design Idea. - We need to register a child class to a map stored in a factory class; obviously, well before construction time.; - The static variables to the rescue: Associate a static variable to the class and call the registration function when initializing the static variable. done!. ## Work Status. > I'm using ""Inviscid Bump in the Channel"" case for testing. 1. I had to make some changes to the building options; - Upgrading to ""C++14"" allowing me to use make_unique; a personal preference.; - ""--whole-archive"" GCC compiler option is necessary in order to pull and force-initialize all symbols from statically-linked library. This is compiler-specific and may bloat the result binary with unnecessary symbols. But it's the quickest way.; 2. I tried to make changes so the interaction with the code is minimal so I went and took advantage of **CSolverFactory::CreateSubSolver()** to create a pointer to self-registered **CEulerSolver**.; 3. By the way, I thought the solver would be created only once. Little I knew!; 4. Anyway, The registration works as expected now. If you change ""EULER"" in [this line](https://github.com/FoamScience/SU2/blob/feature_self_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:3017,Modifiability,variab,variable,3017,"_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal code: Address not mapped (1); [Elwardi-PC:04092] Failing at address: (nil); [Elwardi-PC:04092] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x3efd0)[0x7f6f2de1dfd0]; [Elwardi-PC:04092] *** End of error message ***; Segmentation fault; ```; So there is probably something else I didn't pay attention to. ## Immediate improvements. Forcing the dev to create his own ""is_registered"" static variable and initializing it himself can be eliminated by by putting the variable in a templated class (notice that the variable initialization only depends on the type it belongs to and the factory class) which the solver can inherit from. ## My question. Any idea on what is causing the seg fault. I'm pretty sure it's because I'm returning a nullptr somewhere though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:3090,Modifiability,variab,variable,3090,"_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal code: Address not mapped (1); [Elwardi-PC:04092] Failing at address: (nil); [Elwardi-PC:04092] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x3efd0)[0x7f6f2de1dfd0]; [Elwardi-PC:04092] *** End of error message ***; Segmentation fault; ```; So there is probably something else I didn't pay attention to. ## Immediate improvements. Forcing the dev to create his own ""is_registered"" static variable and initializing it himself can be eliminated by by putting the variable in a templated class (notice that the variable initialization only depends on the type it belongs to and the factory class) which the solver can inherit from. ## My question. Any idea on what is causing the seg fault. I'm pretty sure it's because I'm returning a nullptr somewhere though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:3137,Modifiability,variab,variable,3137,"_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal code: Address not mapped (1); [Elwardi-PC:04092] Failing at address: (nil); [Elwardi-PC:04092] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x3efd0)[0x7f6f2de1dfd0]; [Elwardi-PC:04092] *** End of error message ***; Segmentation fault; ```; So there is probably something else I didn't pay attention to. ## Immediate improvements. Forcing the dev to create his own ""is_registered"" static variable and initializing it himself can be eliminated by by putting the variable in a templated class (notice that the variable initialization only depends on the type it belongs to and the factory class) which the solver can inherit from. ## My question. Any idea on what is causing the seg fault. I'm pretty sure it's because I'm returning a nullptr somewhere though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:3244,Modifiability,inherit,inherit,3244,"_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal code: Address not mapped (1); [Elwardi-PC:04092] Failing at address: (nil); [Elwardi-PC:04092] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x3efd0)[0x7f6f2de1dfd0]; [Elwardi-PC:04092] *** End of error message ***; Segmentation fault; ```; So there is probably something else I didn't pay attention to. ## Immediate improvements. Forcing the dev to create his own ""is_registered"" static variable and initializing it himself can be eliminated by by putting the variable in a templated class (notice that the variable initialization only depends on the type it belongs to and the factory class) which the solver can inherit from. ## My question. Any idea on what is causing the seg fault. I'm pretty sure it's because I'm returning a nullptr somewhere though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:578,Testability,test,testing,578,"OK, I think I did some progress regarding this issue. After you read this, please [Compare](https://github.com/FoamScience/SU2/compare/master...FoamScience:feature_self_reg_classes) the master and the feature branches. ## Design Idea. - We need to register a child class to a map stored in a factory class; obviously, well before construction time.; - The static variables to the rescue: Associate a static variable to the class and call the registration function when initializing the static variable. done!. ## Work Status. > I'm using ""Inviscid Bump in the Channel"" case for testing. 1. I had to make some changes to the building options; - Upgrading to ""C++14"" allowing me to use make_unique; a personal preference.; - ""--whole-archive"" GCC compiler option is necessary in order to pull and force-initialize all symbols from statically-linked library. This is compiler-specific and may bloat the result binary with unnecessary symbols. But it's the quickest way.; 2. I tried to make changes so the interaction with the code is minimal so I went and took advantage of **CSolverFactory::CreateSubSolver()** to create a pointer to self-registered **CEulerSolver**.; 3. By the way, I thought the solver would be created only once. Little I knew!; 4. Anyway, The registration works as expected now. If you change ""EULER"" in [this line](https://github.com/FoamScience/SU2/blob/feature_self_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957
https://github.com/su2code/SU2/issues/1058#issuecomment-669267383:197,Energy Efficiency,adapt,adapt,197,"Just another note, portability is one of the cornerstones of SU2, so please try to work within C++11 boundaries, a lot of C++14 features are syntax sugar on top of C++11 capabilities, you can just adapt the example implementations from the online c++ documentation (no boost :) ).; Also compiler specific flags will be a bit of a deal breaker if they don't have support from the major vendors (gcc, clang, intel, ms).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669267383
https://github.com/su2code/SU2/issues/1058#issuecomment-669267383:19,Modifiability,portab,portability,19,"Just another note, portability is one of the cornerstones of SU2, so please try to work within C++11 boundaries, a lot of C++14 features are syntax sugar on top of C++11 capabilities, you can just adapt the example implementations from the online c++ documentation (no boost :) ).; Also compiler specific flags will be a bit of a deal breaker if they don't have support from the major vendors (gcc, clang, intel, ms).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669267383
https://github.com/su2code/SU2/issues/1058#issuecomment-669267383:197,Modifiability,adapt,adapt,197,"Just another note, portability is one of the cornerstones of SU2, so please try to work within C++11 boundaries, a lot of C++14 features are syntax sugar on top of C++11 capabilities, you can just adapt the example implementations from the online c++ documentation (no boost :) ).; Also compiler specific flags will be a bit of a deal breaker if they don't have support from the major vendors (gcc, clang, intel, ms).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669267383
https://github.com/su2code/SU2/issues/1058#issuecomment-669804893:108,Integrability,depend,dependency,108,"I went ahead and opened a draft PR, Back to C++11 (although now I'm using raw pointers :( ) and removed the dependency on compiler-specific flags (even if --whole-archive is supported by most compilers).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669804893
https://github.com/su2code/SU2/issues/1058#issuecomment-670974089:159,Deployability,integrat,integrating,159,"Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier... https://abseil.io",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670974089
https://github.com/su2code/SU2/issues/1058#issuecomment-670974089:159,Integrability,integrat,integrating,159,"Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier... https://abseil.io",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670974089
https://github.com/su2code/SU2/issues/1058#issuecomment-670977781:161,Deployability,integrat,integrating,161,"> Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier...; > ; > https://abseil.io. Thanks for pointing me to this library :) There was a project that was in dire need for such libraries. Well I'm still a newbie discovering the code. From what I can see, the whole code base is C-oriented (maybe even originating from Fortran??). But I would advise against integrating it (Maybe it's a bit of an overkill for the current state of SU2) because most devs won't actually use the features from c++17 (myself included) and we should be able to deal with the lack of make_unique and variable templates in c++11 :smile:. With that said, if you're planning on using more c++ features while rebuilding/extending the code base, it might be a very good idea to integrate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781
https://github.com/su2code/SU2/issues/1058#issuecomment-670977781:504,Deployability,integrat,integrating,504,"> Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier...; > ; > https://abseil.io. Thanks for pointing me to this library :) There was a project that was in dire need for such libraries. Well I'm still a newbie discovering the code. From what I can see, the whole code base is C-oriented (maybe even originating from Fortran??). But I would advise against integrating it (Maybe it's a bit of an overkill for the current state of SU2) because most devs won't actually use the features from c++17 (myself included) and we should be able to deal with the lack of make_unique and variable templates in c++11 :smile:. With that said, if you're planning on using more c++ features while rebuilding/extending the code base, it might be a very good idea to integrate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781
https://github.com/su2code/SU2/issues/1058#issuecomment-670977781:897,Deployability,integrat,integrate,897,"> Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier...; > ; > https://abseil.io. Thanks for pointing me to this library :) There was a project that was in dire need for such libraries. Well I'm still a newbie discovering the code. From what I can see, the whole code base is C-oriented (maybe even originating from Fortran??). But I would advise against integrating it (Maybe it's a bit of an overkill for the current state of SU2) because most devs won't actually use the features from c++17 (myself included) and we should be able to deal with the lack of make_unique and variable templates in c++11 :smile:. With that said, if you're planning on using more c++ features while rebuilding/extending the code base, it might be a very good idea to integrate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781
https://github.com/su2code/SU2/issues/1058#issuecomment-670977781:161,Integrability,integrat,integrating,161,"> Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier...; > ; > https://abseil.io. Thanks for pointing me to this library :) There was a project that was in dire need for such libraries. Well I'm still a newbie discovering the code. From what I can see, the whole code base is C-oriented (maybe even originating from Fortran??). But I would advise against integrating it (Maybe it's a bit of an overkill for the current state of SU2) because most devs won't actually use the features from c++17 (myself included) and we should be able to deal with the lack of make_unique and variable templates in c++11 :smile:. With that said, if you're planning on using more c++ features while rebuilding/extending the code base, it might be a very good idea to integrate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781
https://github.com/su2code/SU2/issues/1058#issuecomment-670977781:504,Integrability,integrat,integrating,504,"> Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier...; > ; > https://abseil.io. Thanks for pointing me to this library :) There was a project that was in dire need for such libraries. Well I'm still a newbie discovering the code. From what I can see, the whole code base is C-oriented (maybe even originating from Fortran??). But I would advise against integrating it (Maybe it's a bit of an overkill for the current state of SU2) because most devs won't actually use the features from c++17 (myself included) and we should be able to deal with the lack of make_unique and variable templates in c++11 :smile:. With that said, if you're planning on using more c++ features while rebuilding/extending the code base, it might be a very good idea to integrate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781
https://github.com/su2code/SU2/issues/1058#issuecomment-670977781:897,Integrability,integrat,integrate,897,"> Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier...; > ; > https://abseil.io. Thanks for pointing me to this library :) There was a project that was in dire need for such libraries. Well I'm still a newbie discovering the code. From what I can see, the whole code base is C-oriented (maybe even originating from Fortran??). But I would advise against integrating it (Maybe it's a bit of an overkill for the current state of SU2) because most devs won't actually use the features from c++17 (myself included) and we should be able to deal with the lack of make_unique and variable templates in c++11 :smile:. With that said, if you're planning on using more c++ features while rebuilding/extending the code base, it might be a very good idea to integrate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781
https://github.com/su2code/SU2/issues/1058#issuecomment-670977781:724,Modifiability,variab,variable,724,"> Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier...; > ; > https://abseil.io. Thanks for pointing me to this library :) There was a project that was in dire need for such libraries. Well I'm still a newbie discovering the code. From what I can see, the whole code base is C-oriented (maybe even originating from Fortran??). But I would advise against integrating it (Maybe it's a bit of an overkill for the current state of SU2) because most devs won't actually use the features from c++17 (myself included) and we should be able to deal with the lack of make_unique and variable templates in c++11 :smile:. With that said, if you're planning on using more c++ features while rebuilding/extending the code base, it might be a very good idea to integrate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781
https://github.com/su2code/SU2/issues/1058#issuecomment-670977781:840,Modifiability,extend,extending,840,"> Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier...; > ; > https://abseil.io. Thanks for pointing me to this library :) There was a project that was in dire need for such libraries. Well I'm still a newbie discovering the code. From what I can see, the whole code base is C-oriented (maybe even originating from Fortran??). But I would advise against integrating it (Maybe it's a bit of an overkill for the current state of SU2) because most devs won't actually use the features from c++17 (myself included) and we should be able to deal with the lack of make_unique and variable templates in c++11 :smile:. With that said, if you're planning on using more c++ features while rebuilding/extending the code base, it might be a very good idea to integrate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781
https://github.com/su2code/SU2/issues/1058#issuecomment-679950110:357,Testability,test,testcases,357,"For what it's worth, it's very easy to dynamically link files to SU2, for instance if you want to add custom boundary conditions or source terms. Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. If this is all you want, you can do that without any additional libraries. This is more or less the same way as e.g. ANSYS Fluent does it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679950110
https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:397,Modifiability,inherit,inheriting,397,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421
https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:654,Modifiability,config,config,654,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421
https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:761,Modifiability,config,config,761,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421
https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:841,Modifiability,config,config,841,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421
https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:1182,Modifiability,config,config,1182,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421
https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:1235,Modifiability,config,config,1235,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421
https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:1397,Modifiability,inherit,inherit,1397,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421
https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:600,Performance,load,load,600,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421
https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:806,Performance,load,loading,806,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421
https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:213,Testability,test,testcases,213,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421
https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:1236,Deployability,install,installation,1236," to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce code duplication and improve readability and maintainability, so I'm curious to see the progress on this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665
https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:2030,Energy Efficiency,reduce,reduce,2030," to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce code duplication and improve readability and maintainability, so I'm curious to see the progress on this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665
https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:171,Modifiability,inherit,inheriting,171,"> Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665
https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:434,Modifiability,config,config,434,"> Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665
https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:547,Modifiability,config,config,547,"> Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665
https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:1604,Modifiability,config,config,1604," to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce code duplication and improve readability and maintainability, so I'm curious to see the progress on this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665
https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:2082,Modifiability,maintainab,maintainability,2082," to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce code duplication and improve readability and maintainability, so I'm curious to see the progress on this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665
https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:380,Performance,load,load,380,"> Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665
https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:848,Testability,test,testcases,848,"> Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665
https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:1022,Testability,test,testcase,1022,"Let me explain a typical scenario I would go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665
https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:1075,Testability,test,testcase,1075,"go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce code duplication and improve readability a",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665
https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:1190,Testability,test,testcase,1190," to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce code duplication and improve readability and maintainability, so I'm curious to see the progress on this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665
https://github.com/su2code/SU2/issues/1058#issuecomment-680962672:797,Deployability,update,updated,797,"@bigfooted @economon and @pcarruscag . I created separate repo to demonstrate what I'm after in the simplest way possible: [FoamScience/AutoRegistering-Cpp-Classes](https://github.com/FoamScience/AutoRegistering-Cpp-Classes/commits/master). > If you're going to check the code, check CSolver first, then CEulerSolver ... - Commit FoamScience/AutoRegistering-Cpp-Classes@20ca601 implements the concept for a single Factory.; - (Make-believe) Standard solver classes are compiled to a library; - A (Make-beleive) Custom solver class is compiled to its own shared library; - By default, the make program knows only about CEulerSolver (from standard solvers lib); - But if you pass in a library name (eg. libCCustomSolvers.so), it gets loaded, symbols pulled and the registration map for CSolver gets updated with the new Solver automatically. - But it would bloat the code if things went this way, so commit FoamScience/AutoRegistering-Cpp-Classes@380c052 isolates self-registration code into 3 macros to:; - Declare the registration map and associated members; - Define and initialize registration-related members on the base class; - Register a class. If you only care about the interface and not how the thing is implemented, commit 380c052 is your target.; I took care to document the important parts of the code, so, please, dig in and let me know what you think. At this point, integrating this with SU2 (and at what parts, and when) is your call but If you decide to do so, l will help.; > And yes, I wrote my own build script so I can have direct control over the compiler and the linker. **One last note: I used ""dlopen"", so you will have to compile the code on Linux I suppose.**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672
https://github.com/su2code/SU2/issues/1058#issuecomment-680962672:1381,Deployability,integrat,integrating,1381,"@bigfooted @economon and @pcarruscag . I created separate repo to demonstrate what I'm after in the simplest way possible: [FoamScience/AutoRegistering-Cpp-Classes](https://github.com/FoamScience/AutoRegistering-Cpp-Classes/commits/master). > If you're going to check the code, check CSolver first, then CEulerSolver ... - Commit FoamScience/AutoRegistering-Cpp-Classes@20ca601 implements the concept for a single Factory.; - (Make-believe) Standard solver classes are compiled to a library; - A (Make-beleive) Custom solver class is compiled to its own shared library; - By default, the make program knows only about CEulerSolver (from standard solvers lib); - But if you pass in a library name (eg. libCCustomSolvers.so), it gets loaded, symbols pulled and the registration map for CSolver gets updated with the new Solver automatically. - But it would bloat the code if things went this way, so commit FoamScience/AutoRegistering-Cpp-Classes@380c052 isolates self-registration code into 3 macros to:; - Declare the registration map and associated members; - Define and initialize registration-related members on the base class; - Register a class. If you only care about the interface and not how the thing is implemented, commit 380c052 is your target.; I took care to document the important parts of the code, so, please, dig in and let me know what you think. At this point, integrating this with SU2 (and at what parts, and when) is your call but If you decide to do so, l will help.; > And yes, I wrote my own build script so I can have direct control over the compiler and the linker. **One last note: I used ""dlopen"", so you will have to compile the code on Linux I suppose.**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672
https://github.com/su2code/SU2/issues/1058#issuecomment-680962672:1178,Integrability,interface,interface,1178,"@bigfooted @economon and @pcarruscag . I created separate repo to demonstrate what I'm after in the simplest way possible: [FoamScience/AutoRegistering-Cpp-Classes](https://github.com/FoamScience/AutoRegistering-Cpp-Classes/commits/master). > If you're going to check the code, check CSolver first, then CEulerSolver ... - Commit FoamScience/AutoRegistering-Cpp-Classes@20ca601 implements the concept for a single Factory.; - (Make-believe) Standard solver classes are compiled to a library; - A (Make-beleive) Custom solver class is compiled to its own shared library; - By default, the make program knows only about CEulerSolver (from standard solvers lib); - But if you pass in a library name (eg. libCCustomSolvers.so), it gets loaded, symbols pulled and the registration map for CSolver gets updated with the new Solver automatically. - But it would bloat the code if things went this way, so commit FoamScience/AutoRegistering-Cpp-Classes@380c052 isolates self-registration code into 3 macros to:; - Declare the registration map and associated members; - Define and initialize registration-related members on the base class; - Register a class. If you only care about the interface and not how the thing is implemented, commit 380c052 is your target.; I took care to document the important parts of the code, so, please, dig in and let me know what you think. At this point, integrating this with SU2 (and at what parts, and when) is your call but If you decide to do so, l will help.; > And yes, I wrote my own build script so I can have direct control over the compiler and the linker. **One last note: I used ""dlopen"", so you will have to compile the code on Linux I suppose.**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672
https://github.com/su2code/SU2/issues/1058#issuecomment-680962672:1381,Integrability,integrat,integrating,1381,"@bigfooted @economon and @pcarruscag . I created separate repo to demonstrate what I'm after in the simplest way possible: [FoamScience/AutoRegistering-Cpp-Classes](https://github.com/FoamScience/AutoRegistering-Cpp-Classes/commits/master). > If you're going to check the code, check CSolver first, then CEulerSolver ... - Commit FoamScience/AutoRegistering-Cpp-Classes@20ca601 implements the concept for a single Factory.; - (Make-believe) Standard solver classes are compiled to a library; - A (Make-beleive) Custom solver class is compiled to its own shared library; - By default, the make program knows only about CEulerSolver (from standard solvers lib); - But if you pass in a library name (eg. libCCustomSolvers.so), it gets loaded, symbols pulled and the registration map for CSolver gets updated with the new Solver automatically. - But it would bloat the code if things went this way, so commit FoamScience/AutoRegistering-Cpp-Classes@380c052 isolates self-registration code into 3 macros to:; - Declare the registration map and associated members; - Define and initialize registration-related members on the base class; - Register a class. If you only care about the interface and not how the thing is implemented, commit 380c052 is your target.; I took care to document the important parts of the code, so, please, dig in and let me know what you think. At this point, integrating this with SU2 (and at what parts, and when) is your call but If you decide to do so, l will help.; > And yes, I wrote my own build script so I can have direct control over the compiler and the linker. **One last note: I used ""dlopen"", so you will have to compile the code on Linux I suppose.**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672
https://github.com/su2code/SU2/issues/1058#issuecomment-680962672:732,Performance,load,loaded,732,"@bigfooted @economon and @pcarruscag . I created separate repo to demonstrate what I'm after in the simplest way possible: [FoamScience/AutoRegistering-Cpp-Classes](https://github.com/FoamScience/AutoRegistering-Cpp-Classes/commits/master). > If you're going to check the code, check CSolver first, then CEulerSolver ... - Commit FoamScience/AutoRegistering-Cpp-Classes@20ca601 implements the concept for a single Factory.; - (Make-believe) Standard solver classes are compiled to a library; - A (Make-beleive) Custom solver class is compiled to its own shared library; - By default, the make program knows only about CEulerSolver (from standard solvers lib); - But if you pass in a library name (eg. libCCustomSolvers.so), it gets loaded, symbols pulled and the registration map for CSolver gets updated with the new Solver automatically. - But it would bloat the code if things went this way, so commit FoamScience/AutoRegistering-Cpp-Classes@380c052 isolates self-registration code into 3 macros to:; - Declare the registration map and associated members; - Define and initialize registration-related members on the base class; - Register a class. If you only care about the interface and not how the thing is implemented, commit 380c052 is your target.; I took care to document the important parts of the code, so, please, dig in and let me know what you think. At this point, integrating this with SU2 (and at what parts, and when) is your call but If you decide to do so, l will help.; > And yes, I wrote my own build script so I can have direct control over the compiler and the linker. **One last note: I used ""dlopen"", so you will have to compile the code on Linux I suppose.**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672
https://github.com/su2code/SU2/issues/1058#issuecomment-680962672:100,Usability,simpl,simplest,100,"@bigfooted @economon and @pcarruscag . I created separate repo to demonstrate what I'm after in the simplest way possible: [FoamScience/AutoRegistering-Cpp-Classes](https://github.com/FoamScience/AutoRegistering-Cpp-Classes/commits/master). > If you're going to check the code, check CSolver first, then CEulerSolver ... - Commit FoamScience/AutoRegistering-Cpp-Classes@20ca601 implements the concept for a single Factory.; - (Make-believe) Standard solver classes are compiled to a library; - A (Make-beleive) Custom solver class is compiled to its own shared library; - By default, the make program knows only about CEulerSolver (from standard solvers lib); - But if you pass in a library name (eg. libCCustomSolvers.so), it gets loaded, symbols pulled and the registration map for CSolver gets updated with the new Solver automatically. - But it would bloat the code if things went this way, so commit FoamScience/AutoRegistering-Cpp-Classes@380c052 isolates self-registration code into 3 macros to:; - Declare the registration map and associated members; - Define and initialize registration-related members on the base class; - Register a class. If you only care about the interface and not how the thing is implemented, commit 380c052 is your target.; I took care to document the important parts of the code, so, please, dig in and let me know what you think. At this point, integrating this with SU2 (and at what parts, and when) is your call but If you decide to do so, l will help.; > And yes, I wrote my own build script so I can have direct control over the compiler and the linker. **One last note: I used ""dlopen"", so you will have to compile the code on Linux I suppose.**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672
https://github.com/su2code/SU2/pull/1059#issuecomment-671054807:547,Integrability,depend,dependent,547,"Thank you for the review @economon.; I just gave the multiple constraints a try on the hybrid onera m6 mesh we have in testcases, it works, both points and edges can be balanced, but the edge cuts go up by almost 50% I guess that makes sense, more constraints less minimization.; There's another reason why I like the combined function, balancing the ""num neighbors"" metric is not exactly the same as balancing the number of edges per partition, using a small negative point weight (-1, -2) yields better results (but the ideal value will be case dependent). I think the next big improvement we can make in this area is to use a partitioner that is aware of the network topology, ParMETIS assumes that the communication cost between any two ranks is the same, this simplification can be very costly on large parallel machines that have a tree-like network topology, and in older clusters with slow interconnects (relative to intra node communication).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807
https://github.com/su2code/SU2/pull/1059#issuecomment-671054807:119,Testability,test,testcases,119,"Thank you for the review @economon.; I just gave the multiple constraints a try on the hybrid onera m6 mesh we have in testcases, it works, both points and edges can be balanced, but the edge cuts go up by almost 50% I guess that makes sense, more constraints less minimization.; There's another reason why I like the combined function, balancing the ""num neighbors"" metric is not exactly the same as balancing the number of edges per partition, using a small negative point weight (-1, -2) yields better results (but the ideal value will be case dependent). I think the next big improvement we can make in this area is to use a partitioner that is aware of the network topology, ParMETIS assumes that the communication cost between any two ranks is the same, this simplification can be very costly on large parallel machines that have a tree-like network topology, and in older clusters with slow interconnects (relative to intra node communication).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807
https://github.com/su2code/SU2/pull/1059#issuecomment-671054807:765,Usability,simpl,simplification,765,"Thank you for the review @economon.; I just gave the multiple constraints a try on the hybrid onera m6 mesh we have in testcases, it works, both points and edges can be balanced, but the edge cuts go up by almost 50% I guess that makes sense, more constraints less minimization.; There's another reason why I like the combined function, balancing the ""num neighbors"" metric is not exactly the same as balancing the number of edges per partition, using a small negative point weight (-1, -2) yields better results (but the ideal value will be case dependent). I think the next big improvement we can make in this area is to use a partitioner that is aware of the network topology, ParMETIS assumes that the communication cost between any two ranks is the same, this simplification can be very costly on large parallel machines that have a tree-like network topology, and in older clusters with slow interconnects (relative to intra node communication).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807
https://github.com/su2code/SU2/pull/1062#issuecomment-669803327:3,Testability,test,test,3,"To test the solver, I'm forcing **CSolverFactory::GetSolverMeta** in commit a3911b7 to return a new SolverMetaData object specifically suitable for use with EULER solver in MULTIGRID settings. It's a temporary action of course, but it gives us a chance to evaluate the validity of the self-registered solver. **And it works**. At least, ""Diffing"" the history.csv of the Inviscid bump in a channel case (ran with both master and feature branches) results in no differences.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062#issuecomment-669803327
https://github.com/su2code/SU2/issues/1063#issuecomment-671899897:25,Testability,test,test,25,"I do not have a specific test case in mind unfortunately, most cases I have looked at have been Euler/multispecies. If you dont mind running turbulence, you can try looking into some flat plate simulations. Sorry, Im not more help here",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-671899897
https://github.com/su2code/SU2/issues/1063#issuecomment-698126330:88,Testability,test,testing,88,"Hi Amit, to further the discussion, I am running a sharp cone axisymmetric (or at least testing it). It makes me wonder if the issue only appears where the axis of rotation is perpendicular with a wall. Also, the axisymmetric boundaries havent been formulated for NS sims yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-698126330
https://github.com/su2code/SU2/issues/1063#issuecomment-699627809:127,Deployability,configurat,configuration,127,"Hi Wally, ; I have run some axisymmetric cases earlier for pressure distribution (Cp) computation over typical payload fairing configuration (with older versions of SU2). Pressure distribution seemed to be fine with earlier runs (and also it matched well with other codes). ; Issue popped up while trying to compute heat flux for axisymmetric problems. I have seen folks and students running their cases with axisymmetric formulation. Now the issue has surfaced clearly, it need to be fixed asap.; How is solution of the case, you have been trying? . Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-699627809
https://github.com/su2code/SU2/issues/1063#issuecomment-699627809:127,Modifiability,config,configuration,127,"Hi Wally, ; I have run some axisymmetric cases earlier for pressure distribution (Cp) computation over typical payload fairing configuration (with older versions of SU2). Pressure distribution seemed to be fine with earlier runs (and also it matched well with other codes). ; Issue popped up while trying to compute heat flux for axisymmetric problems. I have seen folks and students running their cases with axisymmetric formulation. Now the issue has surfaced clearly, it need to be fixed asap.; How is solution of the case, you have been trying? . Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-699627809
https://github.com/su2code/SU2/issues/1063#issuecomment-699627809:462,Usability,clear,clearly,462,"Hi Wally, ; I have run some axisymmetric cases earlier for pressure distribution (Cp) computation over typical payload fairing configuration (with older versions of SU2). Pressure distribution seemed to be fine with earlier runs (and also it matched well with other codes). ; Issue popped up while trying to compute heat flux for axisymmetric problems. I have seen folks and students running their cases with axisymmetric formulation. Now the issue has surfaced clearly, it need to be fixed asap.; How is solution of the case, you have been trying? . Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-699627809
https://github.com/su2code/SU2/issues/1063#issuecomment-736684085:67,Testability,test,test,67,"Axisymmetric fixes in progress by Wally / Florian. Will repeat the test (axisymmetric) once fixes are done, I am closing it for now....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-736684085
https://github.com/su2code/SU2/issues/1063#issuecomment-736696152:37,Performance,perform,performing,37,@aeroamit I think the code should be performing. I think running your tests on the axisymmetric branch would helpful to get the effort pushed in :),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-736696152
https://github.com/su2code/SU2/issues/1063#issuecomment-736696152:70,Testability,test,tests,70,@aeroamit I think the code should be performing. I think running your tests on the axisymmetric branch would helpful to get the effort pushed in :),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-736696152
https://github.com/su2code/SU2/issues/1063#issuecomment-744062256:791,Performance,tune,tune,791,"I rolled back and had a look at the case again, it turned out to be issue with input given in one of the reference (I followed). I have changed the inputs from original reference and repeated the run (find the attached pdf [SU2_hflux_issue.pdf] https://github.com/su2code/SU2/files/5685357/SU2_hflux_issue.pdf); ) with finer grid. I also ran the case with alternate code. Pressure distribution match is good b/w the two but some differences are still there in heat flux distribution. The important thing is that I could not obtain a low dissipation 2nd order solution (perhaps this is common issue with such cases). I iterated to higher E fix value and Venkat limiter coeff =0.01 to make it work (got some in between order of accuracy). Seems like there will be requirement of some knobs to tune the numerical dissipation for hypersonic cases to avoid carbuncle/instabilities.; I am closing it for now, as primary issue is sorted but perhaps new additions/improvements will be required. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-744062256
https://github.com/su2code/SU2/issues/1063#issuecomment-744062256:846,Safety,avoid,avoid,846,"I rolled back and had a look at the case again, it turned out to be issue with input given in one of the reference (I followed). I have changed the inputs from original reference and repeated the run (find the attached pdf [SU2_hflux_issue.pdf] https://github.com/su2code/SU2/files/5685357/SU2_hflux_issue.pdf); ) with finer grid. I also ran the case with alternate code. Pressure distribution match is good b/w the two but some differences are still there in heat flux distribution. The important thing is that I could not obtain a low dissipation 2nd order solution (perhaps this is common issue with such cases). I iterated to higher E fix value and Venkat limiter coeff =0.01 to make it work (got some in between order of accuracy). Seems like there will be requirement of some knobs to tune the numerical dissipation for hypersonic cases to avoid carbuncle/instabilities.; I am closing it for now, as primary issue is sorted but perhaps new additions/improvements will be required. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-744062256
https://github.com/su2code/SU2/issues/1065#issuecomment-670842197:169,Testability,Test,TestCases,169,"Hello, I am no expert on this but I guess it might not take any work. See https://www.cfd-online.com/Forums/su2/229392-high-temperature-flow.html and links therein, and TestCases/nicf/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065#issuecomment-670842197
https://github.com/su2code/SU2/issues/1065#issuecomment-670985247:72,Availability,avail,available,72,Just adding a couple more things that may be of interest w.r.t. what is available for non-ideal fluids: . article: https://su2code.github.io/documents/2017_J._Phys.3A_Conf._Ser._821_012013.pdf. tutorial: https://su2code.github.io/tutorials/NICFD_nozzle/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065#issuecomment-670985247
https://github.com/su2code/SU2/issues/1065#issuecomment-671405067:387,Deployability,update,update,387,"I should have said I was already using that ""polytropic Peng-Robinson"" eos and I have read the publications related to it. It just takes gamma as an argument from the config. Also for many boundary conditions Cp is calculated as gamma/(gamma-1)*R which is only true for ideal gases. And I am curious about how gamma is used in CNumerics. Nevermind, thank you. For my cases I will try to update Gamma whenever the Temperature is calculated with the eos.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065#issuecomment-671405067
https://github.com/su2code/SU2/issues/1065#issuecomment-671405067:167,Modifiability,config,config,167,"I should have said I was already using that ""polytropic Peng-Robinson"" eos and I have read the publications related to it. It just takes gamma as an argument from the config. Also for many boundary conditions Cp is calculated as gamma/(gamma-1)*R which is only true for ideal gases. And I am curious about how gamma is used in CNumerics. Nevermind, thank you. For my cases I will try to update Gamma whenever the Temperature is calculated with the eos.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065#issuecomment-671405067
https://github.com/su2code/SU2/pull/1066#issuecomment-906376697:207,Modifiability,config,config,207,"Currently each variation/correction model has its unique name identification in SU2. In order to simultaneously combine multiple correction models to a given turbulence model I suggest the following:; - The config file option KIND_TURB_MODEL should specify only which turbulence model to use, i.e. SA or SST.; - Introduce an additional config file field TURB_MODEL_CORRECTIONS to indicate all variations/corrections to be considered. . Here an example,; % Specify turbulent model (NONE, SA, SST); KIND_TURB_MODEL= SA; % Turbulence model corrections (NONE, SA-EDW, SA-NOFT2, SA-COMP, SA-NEG, SA-QCR2000, SST-SUST); TURB_MODEL_CORRECTIONS= SA-EDW, SA-NEG. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066#issuecomment-906376697
https://github.com/su2code/SU2/pull/1066#issuecomment-906376697:336,Modifiability,config,config,336,"Currently each variation/correction model has its unique name identification in SU2. In order to simultaneously combine multiple correction models to a given turbulence model I suggest the following:; - The config file option KIND_TURB_MODEL should specify only which turbulence model to use, i.e. SA or SST.; - Introduce an additional config file field TURB_MODEL_CORRECTIONS to indicate all variations/corrections to be considered. . Here an example,; % Specify turbulent model (NONE, SA, SST); KIND_TURB_MODEL= SA; % Turbulence model corrections (NONE, SA-EDW, SA-NOFT2, SA-COMP, SA-NEG, SA-QCR2000, SST-SUST); TURB_MODEL_CORRECTIONS= SA-EDW, SA-NEG. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066#issuecomment-906376697
https://github.com/su2code/SU2/pull/1067#issuecomment-736699758:41,Deployability,update,updated,41,One regression will likely have to be re-updated.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1067#issuecomment-736699758
https://github.com/su2code/SU2/pull/1067#issuecomment-736725023:51,Deployability,update,updated,51,"> ; > ; > One regression will likely have to be re-updated. Yep, I'll update the CHT unsteady case once the checks completed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1067#issuecomment-736725023
https://github.com/su2code/SU2/pull/1067#issuecomment-736725023:70,Deployability,update,update,70,"> ; > ; > One regression will likely have to be re-updated. Yep, I'll update the CHT unsteady case once the checks completed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1067#issuecomment-736725023
https://github.com/su2code/SU2/issues/1073#issuecomment-691701721:259,Energy Efficiency,schedul,schedule,259,"Hey, I’ve been developing the SU2 FWH solver with a couple of folks over the past few years. If you look me up on google scholar you’ll see our related publications. The idea is to merge it in V7 and make it open source soon. I’m on vacation right now. Let’s schedule a call in around two weeks time? (beckett.y.zhou@gmail.com). Best,; Beckett. On 13. Sep 2020, at 07:38, monika1387 <notifications@github.com> wrote:. ﻿. I am working on this FWH analysis for far field spectra on jet noise from LES by SU2 Code with ADER-DG FEM, results are in good agreement.; First, for FWH, I do not see any good implementation example or readme file to go through this analysis implementation, Can someone please share if it exist anywhere? I see branch only Edurado (still does not have any readme and also its in Python). Second SU2 FWH formulation is based on time domain based (by Farasssat), is anytime SU2 team implemented FWH analysis for frequency domain formulation by Lockard as well? I do not see anything in SU2, If it exists again can someone share details about it? I would like to work on this Freq domain based FWH analysis, so help me if SU2 team developed it anytime or in process?. Thank you in advance for help!. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/1073>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADXOSTYQYI6NDZIYAM3LXYLSFRLENANCNFSM4RKN7PNQ>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1073#issuecomment-691701721
https://github.com/su2code/SU2/issues/1073#issuecomment-691707725:118,Deployability,update,update,118,"Hi Beckett,. Thank you for the response! Sure we can connect back after 2 weeks,; probably I will work on it and also update you by that time what I got. I; have gone through research papers relevant to FWH in SU2 that helps but; implementation is still a question and few concerns on formulation. Anyway; we can connect after your vacation. Thank you for the support. On Sun, Sep 13, 2020 at 1:45 PM BeckettZhou <notifications@github.com>; wrote:. > Hey, I’ve been developing the SU2 FWH solver with a couple of folks over; > the past few years. If you look me up on google scholar you’ll see our; > related publications. The idea is to merge it in V7 and make it open source; > soon. I’m on vacation right now. Let’s schedule a call in around two weeks; > time? (beckett.y.zhou@gmail.com); >; > Best,; > Beckett; >; > On 13. Sep 2020, at 07:38, monika1387 <notifications@github.com> wrote:; >; > ﻿; >; > I am working on this FWH analysis for far field spectra on jet noise from; > LES by SU2 Code with ADER-DG FEM, results are in good agreement.; > First, for FWH, I do not see any good implementation example or readme; > file to go through this analysis implementation, Can someone please share; > if it exist anywhere? I see branch only Edurado (still does not have any; > readme and also its in Python); >; > Second SU2 FWH formulation is based on time domain based (by Farasssat),; > is anytime SU2 team implemented FWH analysis for frequency domain; > formulation by Lockard as well? I do not see anything in SU2, If it exists; > again can someone share details about it? I would like to work on this Freq; > domain based FWH analysis, so help me if SU2 team developed it anytime or; > in process?; >; > Thank you in advance for help!; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub<; > https://github.com/su2code/SU2/issues/1073>, or unsubscribe<; > https://github.com/notifications/unsubscribe-auth/ADXOSTYQYI6N",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1073#issuecomment-691707725
https://github.com/su2code/SU2/issues/1073#issuecomment-691707725:719,Energy Efficiency,schedul,schedule,719,"Hi Beckett,. Thank you for the response! Sure we can connect back after 2 weeks,; probably I will work on it and also update you by that time what I got. I; have gone through research papers relevant to FWH in SU2 that helps but; implementation is still a question and few concerns on formulation. Anyway; we can connect after your vacation. Thank you for the support. On Sun, Sep 13, 2020 at 1:45 PM BeckettZhou <notifications@github.com>; wrote:. > Hey, I’ve been developing the SU2 FWH solver with a couple of folks over; > the past few years. If you look me up on google scholar you’ll see our; > related publications. The idea is to merge it in V7 and make it open source; > soon. I’m on vacation right now. Let’s schedule a call in around two weeks; > time? (beckett.y.zhou@gmail.com); >; > Best,; > Beckett; >; > On 13. Sep 2020, at 07:38, monika1387 <notifications@github.com> wrote:; >; > ﻿; >; > I am working on this FWH analysis for far field spectra on jet noise from; > LES by SU2 Code with ADER-DG FEM, results are in good agreement.; > First, for FWH, I do not see any good implementation example or readme; > file to go through this analysis implementation, Can someone please share; > if it exist anywhere? I see branch only Edurado (still does not have any; > readme and also its in Python); >; > Second SU2 FWH formulation is based on time domain based (by Farasssat),; > is anytime SU2 team implemented FWH analysis for frequency domain; > formulation by Lockard as well? I do not see anything in SU2, If it exists; > again can someone share details about it? I would like to work on this Freq; > domain based FWH analysis, so help me if SU2 team developed it anytime or; > in process?; >; > Thank you in advance for help!; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub<; > https://github.com/su2code/SU2/issues/1073>, or unsubscribe<; > https://github.com/notifications/unsubscribe-auth/ADXOSTYQYI6N",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1073#issuecomment-691707725
https://github.com/su2code/SU2/issues/1073#issuecomment-713876807:21,Availability,avail,available,21,"H Beckett, ; You are available now to discuss this issue. I worked on frequency domain but not getting it right and have some issues. Also can you share if SU2 team worked on frequency domain FWH implementation or in progress? I got time domain FWH successfully for my LES data.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1073#issuecomment-713876807
https://github.com/su2code/SU2/issues/1073#issuecomment-714532468:535,Availability,avail,available,535,"Hi Monika,. How about a telco next Tuesday Oct 27? Please send me an email at beckett.y.zhou@gmail.com. Best,. Beckett. Dr. -Ing. Beckett Y. Zhou; Scientific Computing Group, TU Kaiserslautern; Bldg/Geb 34, Paul-Ehrlich-Strasse; 67663 Kaiserslautern, Germany; ________________________________; From: monika1387 <notifications@github.com>; Sent: Wednesday, October 21, 2020 11:05:09 PM; To: su2code/SU2; Cc: Yuxiang Zhou; Comment; Subject: Re: [su2code/SU2] SU2 FWH Solver implemented for frequency domain? (#1073). H Beckett,; You are available now to discuss this issue. I worked on frequency domain but not getting it right and have some issues. Also can you share if SU2 team worked on frequency domain FWH implementation or in progress? I got time domain FWH successfully for my LES data. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/1073#issuecomment-713876807>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADXOST7ZZIIDARBDMKF4HGDSL5EILANCNFSM4RKN7PNQ>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1073#issuecomment-714532468
https://github.com/su2code/SU2/issues/1073#issuecomment-714568132:729,Availability,avail,available,729,"Sounds good to me. I will send the invitation. On Thu, Oct 22, 2020 at 10:27 AM BeckettZhou <notifications@github.com>; wrote:. > Hi Monika,; >; >; > How about a telco next Tuesday Oct 27? Please send me an email at; > beckett.y.zhou@gmail.com.; >; >; > Best,; >; > Beckett; >; >; > Dr. -Ing. Beckett Y. Zhou; > Scientific Computing Group, TU Kaiserslautern; > Bldg/Geb 34, Paul-Ehrlich-Strasse; > 67663 Kaiserslautern, Germany; > ________________________________; > From: monika1387 <notifications@github.com>; > Sent: Wednesday, October 21, 2020 11:05:09 PM; > To: su2code/SU2; > Cc: Yuxiang Zhou; Comment; > Subject: Re: [su2code/SU2] SU2 FWH Solver implemented for frequency; > domain? (#1073); >; >; > H Beckett,; > You are available now to discuss this issue. I worked on frequency domain; > but not getting it right and have some issues. Also can you share if SU2; > team worked on frequency domain FWH implementation or in progress? I got; > time domain FWH successfully for my LES data.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub<; > https://github.com/su2code/SU2/issues/1073#issuecomment-713876807>, or; > unsubscribe<; > https://github.com/notifications/unsubscribe-auth/ADXOST7ZZIIDARBDMKF4HGDSL5EILANCNFSM4RKN7PNQ; > >.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/1073#issuecomment-714532468>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ALJ3OXH3RFWS4RGZQMTOZNDSMA6LRANCNFSM4RKN7PNQ>; > .; >. -- ; *Thank you,*. *Monika Chauhan *. *Graduate Research Assistant, Doctoral Program*. *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA 24061*; *Cell# 540-998-5012*",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1073#issuecomment-714568132
https://github.com/su2code/SU2/pull/1074#issuecomment-697544036:87,Integrability,rout,routine,87,"Not directly related to this PR, but I noticed an potential bug in the Friction Forces routine, line 2258. The if condition checks ; ; if (iDim == 3); instead of . if (nDim == 3); Could you fix this one too?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1074#issuecomment-697544036
https://github.com/su2code/SU2/pull/1074#issuecomment-697561032:51,Integrability,rout,routine,51,"Good catch, same bug exists in the Momentum forces routine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1074#issuecomment-697561032
https://github.com/su2code/SU2/issues/1075#issuecomment-771542614:53,Testability,test,test,53,"No worries, glad to hear it works (I admit I did not test).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1075#issuecomment-771542614
https://github.com/su2code/SU2/pull/1076#issuecomment-701523230:50,Testability,test,testcase,50,"Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-701523230
https://github.com/su2code/SU2/pull/1076#issuecomment-701523230:102,Testability,test,testcase,102,"Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-701523230
https://github.com/su2code/SU2/pull/1076#issuecomment-733607872:123,Deployability,update,update,123,"@tollennaert, can you comment on the points raised by @pcarruscag ? I think you tried to address all points in your latest update? That makes it clear to everybody that all points have been addressed. I hope you still have time for this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-733607872
https://github.com/su2code/SU2/pull/1076#issuecomment-733607872:145,Usability,clear,clear,145,"@tollennaert, can you comment on the points raised by @pcarruscag ? I think you tried to address all points in your latest update? That makes it clear to everybody that all points have been addressed. I hope you still have time for this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-733607872
https://github.com/su2code/SU2/pull/1076#issuecomment-741601433:133,Deployability,update,update,133,"> ; > ; > @tollennaert, can you comment on the points raised by @pcarruscag ? I think you tried to address all points in your latest update? That makes it clear to everybody that all points have been addressed. I hope you still have time for this. I indeed tried to solve all issues that were mentioned earlier. Could you take another look to see whether I have done this well enough?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741601433
https://github.com/su2code/SU2/pull/1076#issuecomment-741601433:155,Usability,clear,clear,155,"> ; > ; > @tollennaert, can you comment on the points raised by @pcarruscag ? I think you tried to address all points in your latest update? That makes it clear to everybody that all points have been addressed. I hope you still have time for this. I indeed tried to solve all issues that were mentioned earlier. Could you take another look to see whether I have done this well enough?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741601433
https://github.com/su2code/SU2/pull/1076#issuecomment-741601970:60,Testability,test,testcase,60,"> ; > ; > Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere. With respect to the test case and documentation: I have tried to find the best location to put this, but I could not find this. How can this be done best?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741601970
https://github.com/su2code/SU2/pull/1076#issuecomment-741601970:112,Testability,test,testcase,112,"> ; > ; > Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere. With respect to the test case and documentation: I have tried to find the best location to put this, but I could not find this. How can this be done best?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741601970
https://github.com/su2code/SU2/pull/1076#issuecomment-741601970:257,Testability,test,test,257,"> ; > ; > Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere. With respect to the test case and documentation: I have tried to find the best location to put this, but I could not find this. How can this be done best?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741601970
https://github.com/su2code/SU2/pull/1076#issuecomment-741713220:54,Testability,test,testcase,54,"> > Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere.; > ; > With respect to the test case and documentation: I have tried to find the best location to put this, but I could not find this. How can this be done best?. should we add a testcase to the SU2/TestCases/incomp_navierstokes repository?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741713220
https://github.com/su2code/SU2/pull/1076#issuecomment-741713220:106,Testability,test,testcase,106,"> > Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere.; > ; > With respect to the test case and documentation: I have tried to find the best location to put this, but I could not find this. How can this be done best?. should we add a testcase to the SU2/TestCases/incomp_navierstokes repository?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741713220
https://github.com/su2code/SU2/pull/1076#issuecomment-741713220:258,Testability,test,test,258,"> > Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere.; > ; > With respect to the test case and documentation: I have tried to find the best location to put this, but I could not find this. How can this be done best?. should we add a testcase to the SU2/TestCases/incomp_navierstokes repository?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741713220
https://github.com/su2code/SU2/pull/1076#issuecomment-741713220:410,Testability,test,testcase,410,"> > Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere.; > ; > With respect to the test case and documentation: I have tried to find the best location to put this, but I could not find this. How can this be done best?. should we add a testcase to the SU2/TestCases/incomp_navierstokes repository?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741713220
https://github.com/su2code/SU2/pull/1076#issuecomment-741713220:430,Testability,Test,TestCases,430,"> > Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere.; > ; > With respect to the test case and documentation: I have tried to find the best location to put this, but I could not find this. How can this be done best?. should we add a testcase to the SU2/TestCases/incomp_navierstokes repository?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741713220
https://github.com/su2code/SU2/pull/1076#issuecomment-741898701:176,Testability,test,testcase,176,"Thank you @tollennaert, I added a few notes but if you don't have time we can take care of it after this is merged (I understand that your project is finished).; Regarding the testcase, ideally add it to TestCases/deformation (making it a regression, preferably in parallel_regression.py) and if possible use one of the existing grids (this should be easier than having to add a mesh file to the TestCases repo).; Finally it would be great if you could add a little more info on the options and how to use them, either in config_template or in the new testcase you add.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741898701
https://github.com/su2code/SU2/pull/1076#issuecomment-741898701:204,Testability,Test,TestCases,204,"Thank you @tollennaert, I added a few notes but if you don't have time we can take care of it after this is merged (I understand that your project is finished).; Regarding the testcase, ideally add it to TestCases/deformation (making it a regression, preferably in parallel_regression.py) and if possible use one of the existing grids (this should be easier than having to add a mesh file to the TestCases repo).; Finally it would be great if you could add a little more info on the options and how to use them, either in config_template or in the new testcase you add.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741898701
https://github.com/su2code/SU2/pull/1076#issuecomment-741898701:396,Testability,Test,TestCases,396,"Thank you @tollennaert, I added a few notes but if you don't have time we can take care of it after this is merged (I understand that your project is finished).; Regarding the testcase, ideally add it to TestCases/deformation (making it a regression, preferably in parallel_regression.py) and if possible use one of the existing grids (this should be easier than having to add a mesh file to the TestCases repo).; Finally it would be great if you could add a little more info on the options and how to use them, either in config_template or in the new testcase you add.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741898701
https://github.com/su2code/SU2/pull/1076#issuecomment-741898701:552,Testability,test,testcase,552,"Thank you @tollennaert, I added a few notes but if you don't have time we can take care of it after this is merged (I understand that your project is finished).; Regarding the testcase, ideally add it to TestCases/deformation (making it a regression, preferably in parallel_regression.py) and if possible use one of the existing grids (this should be easier than having to add a mesh file to the TestCases repo).; Finally it would be great if you could add a little more info on the options and how to use them, either in config_template or in the new testcase you add.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741898701
https://github.com/su2code/SU2/pull/1076#issuecomment-749404976:468,Availability,avail,available,468,"Hello all,. My apologies for taking so much time to respond. As much as I would have liked to finish this part of the project nicely, I am afraid I must come to the conclusion that I have taken on too many responsibilities to finish the code andfinalize the pull request. I have attached a pptx to this comment that explains a little more about how the procedures work, the ""allow edits by maintainers"" box is checked. If you have any questions for me I will still be available to answer them, but I am not able to actively work on this anymore. The test cases should be available for @bigfooted, is it possible for you to place them where they are required?. As for the depth that was mentioned in an earlier comment of @TobiKattmann : the depth is an option that can be used as a stopping criterion. For every iteration without problems the recursion depth is increased. This way, it can be used as a measure for how close to the limit you are going to stop, as opposed to stopping after the maximum amount of iterations. [invalidGridPrevention.pptx](https://github.com/su2code/SU2/files/5728453/invalidGridPrevention.pptx)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-749404976
https://github.com/su2code/SU2/pull/1076#issuecomment-749404976:571,Availability,avail,available,571,"Hello all,. My apologies for taking so much time to respond. As much as I would have liked to finish this part of the project nicely, I am afraid I must come to the conclusion that I have taken on too many responsibilities to finish the code andfinalize the pull request. I have attached a pptx to this comment that explains a little more about how the procedures work, the ""allow edits by maintainers"" box is checked. If you have any questions for me I will still be available to answer them, but I am not able to actively work on this anymore. The test cases should be available for @bigfooted, is it possible for you to place them where they are required?. As for the depth that was mentioned in an earlier comment of @TobiKattmann : the depth is an option that can be used as a stopping criterion. For every iteration without problems the recursion depth is increased. This way, it can be used as a measure for how close to the limit you are going to stop, as opposed to stopping after the maximum amount of iterations. [invalidGridPrevention.pptx](https://github.com/su2code/SU2/files/5728453/invalidGridPrevention.pptx)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-749404976
https://github.com/su2code/SU2/pull/1076#issuecomment-749404976:550,Testability,test,test,550,"Hello all,. My apologies for taking so much time to respond. As much as I would have liked to finish this part of the project nicely, I am afraid I must come to the conclusion that I have taken on too many responsibilities to finish the code andfinalize the pull request. I have attached a pptx to this comment that explains a little more about how the procedures work, the ""allow edits by maintainers"" box is checked. If you have any questions for me I will still be available to answer them, but I am not able to actively work on this anymore. The test cases should be available for @bigfooted, is it possible for you to place them where they are required?. As for the depth that was mentioned in an earlier comment of @TobiKattmann : the depth is an option that can be used as a stopping criterion. For every iteration without problems the recursion depth is increased. This way, it can be used as a measure for how close to the limit you are going to stop, as opposed to stopping after the maximum amount of iterations. [invalidGridPrevention.pptx](https://github.com/su2code/SU2/files/5728453/invalidGridPrevention.pptx)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-749404976
https://github.com/su2code/SU2/pull/1076#issuecomment-750520217:39,Testability,test,testcases,39,@bigfooted please open a PR to add the testcases @tollennaert mentioned you have.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-750520217
https://github.com/su2code/SU2/issues/1079#issuecomment-701405812:34,Integrability,wrap,wrapper,34,"This is possible using the Python wrapper. There are no tutorials for this yet, but you can check out PR #488, PR #503. PR #516. There's currently a regression test using unsteady heat-transfer boundary conditions at: https://github.com/su2code/SU2/tree/master/TestCases/py_wrapper/flatPlate_unsteady_CHT . You can use that as an example. Velocity BCs will be very similar.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-701405812
https://github.com/su2code/SU2/issues/1079#issuecomment-701405812:160,Testability,test,test,160,"This is possible using the Python wrapper. There are no tutorials for this yet, but you can check out PR #488, PR #503. PR #516. There's currently a regression test using unsteady heat-transfer boundary conditions at: https://github.com/su2code/SU2/tree/master/TestCases/py_wrapper/flatPlate_unsteady_CHT . You can use that as an example. Velocity BCs will be very similar.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-701405812
https://github.com/su2code/SU2/issues/1079#issuecomment-701405812:261,Testability,Test,TestCases,261,"This is possible using the Python wrapper. There are no tutorials for this yet, but you can check out PR #488, PR #503. PR #516. There's currently a regression test using unsteady heat-transfer boundary conditions at: https://github.com/su2code/SU2/tree/master/TestCases/py_wrapper/flatPlate_unsteady_CHT . You can use that as an example. Velocity BCs will be very similar.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-701405812
https://github.com/su2code/SU2/issues/1079#issuecomment-702016718:80,Modifiability,extend,extend,80,"Thank you Clark,; I will come back as soon as I will be able to run the case to extend the script. Best regards",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-702016718
https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953:476,Availability,error,errors,476,"Hello SU2 developers,. I am reopening this topic because I am studying a case of jet impingement on a wall with a time-varying flow at the inlet. I have used compressible RANS and TOTAL_CONDITIONS as inlet BC. Specifically, I have set a time-varying stagnation pressure at inlet. To do this, I used the Python script mentioned in the previous messages, modifying some commands to suit my problem. I should mention that I do not use Python frequently, so there are likely some errors. Indeed, I checked the documentation and noticed that the command I used to vary the pressure at the inlet (SetMarkerCustomPtotal) is not listed. However, when I run the simulation, it seems to work quite well. Unfortunately, when examining the pressure field, it appears that the time-varying boundary conditions are applied on the walls with no-slip conditions (represented by the MARKER_ISOTHERMAL command) and not at the inlet as I want. Could you please tell me what changes I need to make in the Python script to correctly set up the problem? For completeness, I am attaching the script I modified, the configuration file, and a video of the pressure field.; [2D_jet_val_unsteady_5.zip](https://github.com/user-attachments/files/15524970/2D_jet_val_unsteady_5.zip). Thank you in advance for your help. Best Regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953
https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953:1092,Deployability,configurat,configuration,1092,"Hello SU2 developers,. I am reopening this topic because I am studying a case of jet impingement on a wall with a time-varying flow at the inlet. I have used compressible RANS and TOTAL_CONDITIONS as inlet BC. Specifically, I have set a time-varying stagnation pressure at inlet. To do this, I used the Python script mentioned in the previous messages, modifying some commands to suit my problem. I should mention that I do not use Python frequently, so there are likely some errors. Indeed, I checked the documentation and noticed that the command I used to vary the pressure at the inlet (SetMarkerCustomPtotal) is not listed. However, when I run the simulation, it seems to work quite well. Unfortunately, when examining the pressure field, it appears that the time-varying boundary conditions are applied on the walls with no-slip conditions (represented by the MARKER_ISOTHERMAL command) and not at the inlet as I want. Could you please tell me what changes I need to make in the Python script to correctly set up the problem? For completeness, I am attaching the script I modified, the configuration file, and a video of the pressure field.; [2D_jet_val_unsteady_5.zip](https://github.com/user-attachments/files/15524970/2D_jet_val_unsteady_5.zip). Thank you in advance for your help. Best Regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953
https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953:343,Integrability,message,messages,343,"Hello SU2 developers,. I am reopening this topic because I am studying a case of jet impingement on a wall with a time-varying flow at the inlet. I have used compressible RANS and TOTAL_CONDITIONS as inlet BC. Specifically, I have set a time-varying stagnation pressure at inlet. To do this, I used the Python script mentioned in the previous messages, modifying some commands to suit my problem. I should mention that I do not use Python frequently, so there are likely some errors. Indeed, I checked the documentation and noticed that the command I used to vary the pressure at the inlet (SetMarkerCustomPtotal) is not listed. However, when I run the simulation, it seems to work quite well. Unfortunately, when examining the pressure field, it appears that the time-varying boundary conditions are applied on the walls with no-slip conditions (represented by the MARKER_ISOTHERMAL command) and not at the inlet as I want. Could you please tell me what changes I need to make in the Python script to correctly set up the problem? For completeness, I am attaching the script I modified, the configuration file, and a video of the pressure field.; [2D_jet_val_unsteady_5.zip](https://github.com/user-attachments/files/15524970/2D_jet_val_unsteady_5.zip). Thank you in advance for your help. Best Regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953
https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953:1092,Modifiability,config,configuration,1092,"Hello SU2 developers,. I am reopening this topic because I am studying a case of jet impingement on a wall with a time-varying flow at the inlet. I have used compressible RANS and TOTAL_CONDITIONS as inlet BC. Specifically, I have set a time-varying stagnation pressure at inlet. To do this, I used the Python script mentioned in the previous messages, modifying some commands to suit my problem. I should mention that I do not use Python frequently, so there are likely some errors. Indeed, I checked the documentation and noticed that the command I used to vary the pressure at the inlet (SetMarkerCustomPtotal) is not listed. However, when I run the simulation, it seems to work quite well. Unfortunately, when examining the pressure field, it appears that the time-varying boundary conditions are applied on the walls with no-slip conditions (represented by the MARKER_ISOTHERMAL command) and not at the inlet as I want. Could you please tell me what changes I need to make in the Python script to correctly set up the problem? For completeness, I am attaching the script I modified, the configuration file, and a video of the pressure field.; [2D_jet_val_unsteady_5.zip](https://github.com/user-attachments/files/15524970/2D_jet_val_unsteady_5.zip). Thank you in advance for your help. Best Regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953
https://github.com/su2code/SU2/issues/1079#issuecomment-2143984024:111,Energy Efficiency,adapt,adapt,111,"Seems like we lost that function recently, I'll try to fix it and put together a working example, then you can adapt it to your problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2143984024
https://github.com/su2code/SU2/issues/1079#issuecomment-2143984024:111,Modifiability,adapt,adapt,111,"Seems like we lost that function recently, I'll try to fix it and put together a working example, then you can adapt it to your problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2143984024
https://github.com/su2code/SU2/issues/1079#issuecomment-2146930325:59,Deployability,update,updates,59,Thanks a lot for your reply. I look forward to your future updates.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2146930325
https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396:403,Deployability,update,update,403,"Hi, ; So I am assuming you are not so familiar with using git, so here is what you need to do.; If you follow the link [#2296](https://github.com/su2code/SU2/pull/2296/files) and go to the section 'files changed' you can see that it's quite a lot of changes. The changes are currently added (merged) to the 'develop' branch (when you follow the link you can see this message). So what you need to do is update your github repository. ; I assume that you already have a local copy of SU2 and that you obtained this from github using ; `git clone https://github.com/su2code/SU2.git`; You switch to the develop branch:; `git checkout develop`; you update your develop branch:; `git pull`; now you have all changes, and you need to recompile.; There is an example in TestCases/py_wrapper/custom_inlet that you could use.; For completeness, here is a link to the docs: https://su2code.github.io/docs_v7/home/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396
https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396:645,Deployability,update,update,645,"Hi, ; So I am assuming you are not so familiar with using git, so here is what you need to do.; If you follow the link [#2296](https://github.com/su2code/SU2/pull/2296/files) and go to the section 'files changed' you can see that it's quite a lot of changes. The changes are currently added (merged) to the 'develop' branch (when you follow the link you can see this message). So what you need to do is update your github repository. ; I assume that you already have a local copy of SU2 and that you obtained this from github using ; `git clone https://github.com/su2code/SU2.git`; You switch to the develop branch:; `git checkout develop`; you update your develop branch:; `git pull`; now you have all changes, and you need to recompile.; There is an example in TestCases/py_wrapper/custom_inlet that you could use.; For completeness, here is a link to the docs: https://su2code.github.io/docs_v7/home/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396
https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396:367,Integrability,message,message,367,"Hi, ; So I am assuming you are not so familiar with using git, so here is what you need to do.; If you follow the link [#2296](https://github.com/su2code/SU2/pull/2296/files) and go to the section 'files changed' you can see that it's quite a lot of changes. The changes are currently added (merged) to the 'develop' branch (when you follow the link you can see this message). So what you need to do is update your github repository. ; I assume that you already have a local copy of SU2 and that you obtained this from github using ; `git clone https://github.com/su2code/SU2.git`; You switch to the develop branch:; `git checkout develop`; you update your develop branch:; `git pull`; now you have all changes, and you need to recompile.; There is an example in TestCases/py_wrapper/custom_inlet that you could use.; For completeness, here is a link to the docs: https://su2code.github.io/docs_v7/home/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396
https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396:763,Testability,Test,TestCases,763,"Hi, ; So I am assuming you are not so familiar with using git, so here is what you need to do.; If you follow the link [#2296](https://github.com/su2code/SU2/pull/2296/files) and go to the section 'files changed' you can see that it's quite a lot of changes. The changes are currently added (merged) to the 'develop' branch (when you follow the link you can see this message). So what you need to do is update your github repository. ; I assume that you already have a local copy of SU2 and that you obtained this from github using ; `git clone https://github.com/su2code/SU2.git`; You switch to the develop branch:; `git checkout develop`; you update your develop branch:; `git pull`; now you have all changes, and you need to recompile.; There is an example in TestCases/py_wrapper/custom_inlet that you could use.; For completeness, here is a link to the docs: https://su2code.github.io/docs_v7/home/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396
https://github.com/su2code/SU2/pull/1082#issuecomment-703062023:205,Security,access,access,205,"My proposal the other day seems to have put you in quite the mood...; Do you also get a ton of ""-1 converted to unsigned short""? Or is that just me?; I'll see what I can do about the rest. > I do not have access to a Mac, so I didn't test if on OSX. I tried clang 6 and clang 10, and had to stupefy the code because of the former, should be ok on Mac",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1082#issuecomment-703062023
https://github.com/su2code/SU2/pull/1082#issuecomment-703062023:234,Testability,test,test,234,"My proposal the other day seems to have put you in quite the mood...; Do you also get a ton of ""-1 converted to unsigned short""? Or is that just me?; I'll see what I can do about the rest. > I do not have access to a Mac, so I didn't test if on OSX. I tried clang 6 and clang 10, and had to stupefy the code because of the former, should be ok on Mac",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1082#issuecomment-703062023
https://github.com/su2code/SU2/issues/1086#issuecomment-706417999:84,Deployability,update,updated,84,"Those two cases are not part of the regression suite, and so they were probably not updated as some of the options were renamed.; You can have a look at the other turbomachinery examples (at least two of them are part of the regressions) it should be simple to adapt those options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999
https://github.com/su2code/SU2/issues/1086#issuecomment-706417999:261,Energy Efficiency,adapt,adapt,261,"Those two cases are not part of the regression suite, and so they were probably not updated as some of the options were renamed.; You can have a look at the other turbomachinery examples (at least two of them are part of the regressions) it should be simple to adapt those options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999
https://github.com/su2code/SU2/issues/1086#issuecomment-706417999:261,Modifiability,adapt,adapt,261,"Those two cases are not part of the regression suite, and so they were probably not updated as some of the options were renamed.; You can have a look at the other turbomachinery examples (at least two of them are part of the regressions) it should be simple to adapt those options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999
https://github.com/su2code/SU2/issues/1086#issuecomment-706417999:251,Usability,simpl,simple,251,"Those two cases are not part of the regression suite, and so they were probably not updated as some of the options were renamed.; You can have a look at the other turbomachinery examples (at least two of them are part of the regressions) it should be simple to adapt those options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999
https://github.com/su2code/SU2/issues/1086#issuecomment-706948283:52,Availability,error,error,52,Thank you Pedro. I'm happy I can exlude compliation error.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086#issuecomment-706948283
https://github.com/su2code/SU2/issues/1086#issuecomment-1118936500:54,Availability,error,error,54,"> Thank you Pedro. I'm happy I can exlude compliation error. Wait so what did you do to get this working, I'm having the same issue",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086#issuecomment-1118936500
https://github.com/su2code/SU2/issues/1087#issuecomment-706082605:505,Performance,perform,performance,505,"We have submitted a bug report to Intel about this three years ago. I recently talked with a higher support guy from Intel and he told me that this ticket is on very low priority. . If you (or anybody else) has the possibility to submit a bug report to intel, we would appreciate it. Bug report number 02697346. The problem is, that we defined this method inside of the template class, which makes it automatically inlined. For specific methods I do not want them to be inlined, since it provides a small performance boost and also improves debugging and performance sampling. An example is:; ```; #include <iostream>. template<typename T>; struct S1 {; void func() { std::cout<< ""Creates no warning, is inlined"" << std::endl;}; };. template<typename T>; struct S2 {; __attribute__((noinline)) void func() { std::cout<< ""Creates warning, is not inlined"" << std::endl;}; };. template<typename T>; struct S3 {; __attribute__((noinline)) void func();; };. template<typename T>; void S3<T>::func() { std::cout<< ""Creates no warning, is not inlined"" << std::endl;}. int main(int nargs, char** args) {; S1<int> s1; ; s1.func();. S2<int> s2; ; s2.func();. S3<int> s3; ; s3.func();; }; ```. I do not want to change CoDiPack to the implementation of S3 since this is a code copy of the declaration. But there are other options. You can disable the 'no inlining' with the option -DCODI_UseAvoidedInlines=0. Another option is, that we add the pgrama `#pragma warning disable 2196` for intel compilers in CoDiPack. But this is also not a good option as general case. So I would add it as a new parameter e.g. `-DCODI_DisableIntelNoInlineWarning`. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1087#issuecomment-706082605
https://github.com/su2code/SU2/issues/1087#issuecomment-706082605:555,Performance,perform,performance,555,"We have submitted a bug report to Intel about this three years ago. I recently talked with a higher support guy from Intel and he told me that this ticket is on very low priority. . If you (or anybody else) has the possibility to submit a bug report to intel, we would appreciate it. Bug report number 02697346. The problem is, that we defined this method inside of the template class, which makes it automatically inlined. For specific methods I do not want them to be inlined, since it provides a small performance boost and also improves debugging and performance sampling. An example is:; ```; #include <iostream>. template<typename T>; struct S1 {; void func() { std::cout<< ""Creates no warning, is inlined"" << std::endl;}; };. template<typename T>; struct S2 {; __attribute__((noinline)) void func() { std::cout<< ""Creates warning, is not inlined"" << std::endl;}; };. template<typename T>; struct S3 {; __attribute__((noinline)) void func();; };. template<typename T>; void S3<T>::func() { std::cout<< ""Creates no warning, is not inlined"" << std::endl;}. int main(int nargs, char** args) {; S1<int> s1; ; s1.func();. S2<int> s2; ; s2.func();. S3<int> s3; ; s3.func();; }; ```. I do not want to change CoDiPack to the implementation of S3 since this is a code copy of the declaration. But there are other options. You can disable the 'no inlining' with the option -DCODI_UseAvoidedInlines=0. Another option is, that we add the pgrama `#pragma warning disable 2196` for intel compilers in CoDiPack. But this is also not a good option as general case. So I would add it as a new parameter e.g. `-DCODI_DisableIntelNoInlineWarning`. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1087#issuecomment-706082605
https://github.com/su2code/SU2/issues/1087#issuecomment-706554435:182,Testability,log,logical,182,"I don't have a specific preference for either #pragma warning disable 2196 or -DCODI_DisableIntelNoInlineWarning. However, if we do get this type of warning also for SU2, then it is logical to use the same solution for both. @MaxSagebaum, if you do not like the pragma solution, maybe we could have a general flag like -DDisableIntelNoInlineWarning?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1087#issuecomment-706554435
https://github.com/su2code/SU2/issues/1088#issuecomment-706397914:459,Deployability,install,install,459,"Please use meson and ninja to build the code as documented here: https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/. This is what I do:; ```; export BUILD=build; export CXXFLAGS=""-funroll-loops -march=native -mtune=native"". ./meson.py $BUILD -Dcustom-mpi=true -Dwith-omp=true -Denable-mixedprec=true -Denable-autodiff=true -Denable-tecio=false -Denable-mkl=true -Dmkl_root=$MKLROOT --prefix=$PWD/$BUILD --optimization=2 --warnlevel=2; ./ninja -C $BUILD install; ```; Depending on how your compilers are setup you may find convenient to modify this:; ```; if get_option('custom-mpi'); mpi_dep = []; ```; To:; ```; if get_option('custom-mpi'); mpi_dep = [declare_dependency(link_args: ['-lmpi'])]; ```; In the meson.py script, I'm sure there is a way to do it with environment variables but I never bothered trying. Regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088#issuecomment-706397914
https://github.com/su2code/SU2/issues/1088#issuecomment-706397914:473,Integrability,Depend,Depending,473,"Please use meson and ninja to build the code as documented here: https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/. This is what I do:; ```; export BUILD=build; export CXXFLAGS=""-funroll-loops -march=native -mtune=native"". ./meson.py $BUILD -Dcustom-mpi=true -Dwith-omp=true -Denable-mixedprec=true -Denable-autodiff=true -Denable-tecio=false -Denable-mkl=true -Dmkl_root=$MKLROOT --prefix=$PWD/$BUILD --optimization=2 --warnlevel=2; ./ninja -C $BUILD install; ```; Depending on how your compilers are setup you may find convenient to modify this:; ```; if get_option('custom-mpi'); mpi_dep = []; ```; To:; ```; if get_option('custom-mpi'); mpi_dep = [declare_dependency(link_args: ['-lmpi'])]; ```; In the meson.py script, I'm sure there is a way to do it with environment variables but I never bothered trying. Regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088#issuecomment-706397914
https://github.com/su2code/SU2/issues/1088#issuecomment-706397914:781,Modifiability,variab,variables,781,"Please use meson and ninja to build the code as documented here: https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/. This is what I do:; ```; export BUILD=build; export CXXFLAGS=""-funroll-loops -march=native -mtune=native"". ./meson.py $BUILD -Dcustom-mpi=true -Dwith-omp=true -Denable-mixedprec=true -Denable-autodiff=true -Denable-tecio=false -Denable-mkl=true -Dmkl_root=$MKLROOT --prefix=$PWD/$BUILD --optimization=2 --warnlevel=2; ./ninja -C $BUILD install; ```; Depending on how your compilers are setup you may find convenient to modify this:; ```; if get_option('custom-mpi'); mpi_dep = []; ```; To:; ```; if get_option('custom-mpi'); mpi_dep = [declare_dependency(link_args: ['-lmpi'])]; ```; In the meson.py script, I'm sure there is a way to do it with environment variables but I never bothered trying. Regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088#issuecomment-706397914
https://github.com/su2code/SU2/issues/1088#issuecomment-706397914:411,Performance,optimiz,optimization,411,"Please use meson and ninja to build the code as documented here: https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/. This is what I do:; ```; export BUILD=build; export CXXFLAGS=""-funroll-loops -march=native -mtune=native"". ./meson.py $BUILD -Dcustom-mpi=true -Dwith-omp=true -Denable-mixedprec=true -Denable-autodiff=true -Denable-tecio=false -Denable-mkl=true -Dmkl_root=$MKLROOT --prefix=$PWD/$BUILD --optimization=2 --warnlevel=2; ./ninja -C $BUILD install; ```; Depending on how your compilers are setup you may find convenient to modify this:; ```; if get_option('custom-mpi'); mpi_dep = []; ```; To:; ```; if get_option('custom-mpi'); mpi_dep = [declare_dependency(link_args: ['-lmpi'])]; ```; In the meson.py script, I'm sure there is a way to do it with environment variables but I never bothered trying. Regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088#issuecomment-706397914
https://github.com/su2code/SU2/issues/1089#issuecomment-706119208:3,Modifiability,config,configure,3,`./configure --enable-mpi --with-cc=/cluster/intel/2019/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --prefix=/cluster/software/su2/bin/; `; does not help,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1089#issuecomment-706119208
https://github.com/su2code/SU2/issues/1090#issuecomment-724873969:3,Deployability,update,update,3,"An update... I've run a few other cases and noticed something else. It turns out that option NUM_METHOD_GRAD_RECON has a significant impact on the channel flow with periodic boundaries. ![xz_roe_comp](https://user-images.githubusercontent.com/6933834/98713194-245cbf00-233c-11eb-9f9e-94f4b301a626.png). 1) In this picture, the streamwise and​ spanwise boundaries are periodic.; - The top two images in this picture are from a run without NUM_METHOD_GRAD_RECON. As you can see, there is a lot of garbage in the corners, and the simulation does not converge well.; - The bottom two images are from a run with NUM_METHOD_GRAD_RECON set to LEAST_SQUARES.; - Note that in both cases, NUM_METHOD_GRAD is set to GREEN_GAUSS. ![x_roe_comp](https://user-images.githubusercontent.com/6933834/98713350-5cfc9880-233c-11eb-83f2-89c3d9889739.png). 2) In this picture, only the streamwise boundaries are periodic, while the spanwise boundaries are symmetry.; - Again, the top to images in this picture are from a run without NUM_METHOD_GRAD_RECON. This time, there is no real issue in the corners, but there is some weirdness on the top and bottom boundaries (although, the perturbations are small).; - The bottom two images are from a run with NUM_METHOD_GRAD_RECON set to LEAST_SQUARES. It looks like an entry for NUM_METHOD_GRAD_RECON was *just* added to the config_template.cfg (there was not one there, previously), but I'm wondering if the behavior in the periodic boundary corners is expected if the gradient reconstruction option is not used, or does that indicate something wrong there? I'm not sure I understand why the periodic boundaries would pose an issue for the scheme without the gradient reconstruction. . As far as I can tell, this issue is separate from that mentioned by @clarkpede, but these meshes are small and I've only run on up to 16 MPI ranks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090#issuecomment-724873969
https://github.com/su2code/SU2/issues/1090#issuecomment-725309360:201,Safety,predict,predict,201,What about using weighted least squares for NUM_METHOD_GRAD? (if you don't specify something for NUM_METHOD_GRAD_RECON the method from NUM_METHOD_GRAD is used). Context: Plain least squares will under-predict gradients in stretched meshes whereas GG and WLS are not supposed to.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090#issuecomment-725309360
https://github.com/su2code/SU2/issues/1090#issuecomment-727639514:271,Deployability,integrat,integrating,271,"Here's my best guess at what is happening: we are not correctly identifying the complete set of neighbors along intersections of two or more periodic boundaries (maybe duplicates, or maybe missing some neighbors). Without the correct stencil, GG will be incorrect due to integrating over the wrong control volume (repeated faces or missing faces). It also needs the correct volume for division in the GG evaluation. LSQ gets away with it most likely because the stencil can be defined independently of the actual set of neighbors (doesn't need to be a closed control volume) - if you miss a neighbor or duplicate a neighbor, you should end up with a similar answer. WLSQ may also get away with it, but with the weighting by inverse distance of the neighbor, you could still see some artifacts in the solution with missing/duplicate neighbors. If you have some time, can you take a look at the periodic matching routines and periodic communication preprocessing? The routines are sort of nasty, since the identification is not so straightforward in a vertex-based code with the DoFs on the boundary, but I expect we are missing something there still with intersecting periodic boundaries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090#issuecomment-727639514
https://github.com/su2code/SU2/issues/1090#issuecomment-727639514:271,Integrability,integrat,integrating,271,"Here's my best guess at what is happening: we are not correctly identifying the complete set of neighbors along intersections of two or more periodic boundaries (maybe duplicates, or maybe missing some neighbors). Without the correct stencil, GG will be incorrect due to integrating over the wrong control volume (repeated faces or missing faces). It also needs the correct volume for division in the GG evaluation. LSQ gets away with it most likely because the stencil can be defined independently of the actual set of neighbors (doesn't need to be a closed control volume) - if you miss a neighbor or duplicate a neighbor, you should end up with a similar answer. WLSQ may also get away with it, but with the weighting by inverse distance of the neighbor, you could still see some artifacts in the solution with missing/duplicate neighbors. If you have some time, can you take a look at the periodic matching routines and periodic communication preprocessing? The routines are sort of nasty, since the identification is not so straightforward in a vertex-based code with the DoFs on the boundary, but I expect we are missing something there still with intersecting periodic boundaries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090#issuecomment-727639514
https://github.com/su2code/SU2/issues/1090#issuecomment-727639514:911,Integrability,rout,routines,911,"Here's my best guess at what is happening: we are not correctly identifying the complete set of neighbors along intersections of two or more periodic boundaries (maybe duplicates, or maybe missing some neighbors). Without the correct stencil, GG will be incorrect due to integrating over the wrong control volume (repeated faces or missing faces). It also needs the correct volume for division in the GG evaluation. LSQ gets away with it most likely because the stencil can be defined independently of the actual set of neighbors (doesn't need to be a closed control volume) - if you miss a neighbor or duplicate a neighbor, you should end up with a similar answer. WLSQ may also get away with it, but with the weighting by inverse distance of the neighbor, you could still see some artifacts in the solution with missing/duplicate neighbors. If you have some time, can you take a look at the periodic matching routines and periodic communication preprocessing? The routines are sort of nasty, since the identification is not so straightforward in a vertex-based code with the DoFs on the boundary, but I expect we are missing something there still with intersecting periodic boundaries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090#issuecomment-727639514
https://github.com/su2code/SU2/issues/1090#issuecomment-727639514:966,Integrability,rout,routines,966,"Here's my best guess at what is happening: we are not correctly identifying the complete set of neighbors along intersections of two or more periodic boundaries (maybe duplicates, or maybe missing some neighbors). Without the correct stencil, GG will be incorrect due to integrating over the wrong control volume (repeated faces or missing faces). It also needs the correct volume for division in the GG evaluation. LSQ gets away with it most likely because the stencil can be defined independently of the actual set of neighbors (doesn't need to be a closed control volume) - if you miss a neighbor or duplicate a neighbor, you should end up with a similar answer. WLSQ may also get away with it, but with the weighting by inverse distance of the neighbor, you could still see some artifacts in the solution with missing/duplicate neighbors. If you have some time, can you take a look at the periodic matching routines and periodic communication preprocessing? The routines are sort of nasty, since the identification is not so straightforward in a vertex-based code with the DoFs on the boundary, but I expect we are missing something there still with intersecting periodic boundaries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090#issuecomment-727639514
https://github.com/su2code/SU2/pull/1091#issuecomment-707627414:262,Safety,avoid,avoid,262,"@vdweide compilation with level 2 warnings (-Wall -Wextra) is no longer so verbose that it is not useful.; Most of the remaining warnings are of the ""not vectorized with simd"" variety and they come (I suppose) from CSysVector.hpp:302, I think I'll leave them to avoid having to create an exclusion for Intel only. If you want to fix the GCC 10 memcpy memset warnings feel free to use this PR, otherwise it is good to go on my side.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1091#issuecomment-707627414
https://github.com/su2code/SU2/issues/1093#issuecomment-715277100:312,Modifiability,variab,variable,312,It looks like that path ('C:\MINGW_W64\mingw_w64\posix\mingw64\bin\..\lib\gcc\x86_64-w64-mingw32\8.1.0\libC:\MICROSOFT_SDKs\MPI\Lib\x64\msmpi.a') should actually be 2; C:\MINGW_W64\mingw_w64\posix\mingw64\bin\..\lib\gcc\x86_64-w64-mingw32\8.1.0\lib; C:\MICROSOFT_SDKs\MPI\Lib\x64\msmpi.a. Maybe some environment variable is not setup correctly? I'm not at all familiar with building SU2 on Windows unfortunately.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1093#issuecomment-715277100
https://github.com/su2code/SU2/pull/1095#issuecomment-713166220:104,Testability,test,test,104,"Hi Florian, I was also working on the same thing (feature_axi). I was unable to find a suitable case to test, and it seems we went about it in different ways. Im happy you got something working! Could you pass along the literature you used to create these terms?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713166220
https://github.com/su2code/SU2/pull/1095#issuecomment-713412778:97,Availability,avail,available,97,"Hi Florian, great work, and important to have. The transonic bump case seems to have enough data available for proper validation. ; What are you unsure about? The actual derived source terms? If you have a document with your derivation of the source terms that would help in checking if it is correct.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713412778
https://github.com/su2code/SU2/pull/1095#issuecomment-713412778:118,Security,validat,validation,118,"Hi Florian, great work, and important to have. The transonic bump case seems to have enough data available for proper validation. ; What are you unsure about? The actual derived source terms? If you have a document with your derivation of the source terms that would help in checking if it is correct.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713412778
https://github.com/su2code/SU2/pull/1095#issuecomment-713564781:111,Safety,avoid,avoid,111,"Hi everyone, glad this subject is of interest. I will try to make that test case. I edit my earlier comment to avoid a mess. So I changed the terms. Still not sure but the derivation is simple. source term viscous = (0, tau_xy, tau_yy - tau_thetatheta, u* tau_yx + v* tau_yy - q)/y, right?. then from Bird:. ![IMG_20201027_115003](https://user-images.githubusercontent.com/55834287/97291927-d9767e00-184a-11eb-9418-a3ace3e3a077.jpg). bulk viscosity = 0, any derivative wrt theta = 0. For the generalised inviscid part I am pretty sure it is all correct including the jacobian. You can compare with very similar terms in any generalised flux jacobian like in Glaister's paper https://www.sciencedirect.com/science/article/pii/002199918890174X",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713564781
https://github.com/su2code/SU2/pull/1095#issuecomment-713564781:71,Testability,test,test,71,"Hi everyone, glad this subject is of interest. I will try to make that test case. I edit my earlier comment to avoid a mess. So I changed the terms. Still not sure but the derivation is simple. source term viscous = (0, tau_xy, tau_yy - tau_thetatheta, u* tau_yx + v* tau_yy - q)/y, right?. then from Bird:. ![IMG_20201027_115003](https://user-images.githubusercontent.com/55834287/97291927-d9767e00-184a-11eb-9418-a3ace3e3a077.jpg). bulk viscosity = 0, any derivative wrt theta = 0. For the generalised inviscid part I am pretty sure it is all correct including the jacobian. You can compare with very similar terms in any generalised flux jacobian like in Glaister's paper https://www.sciencedirect.com/science/article/pii/002199918890174X",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713564781
https://github.com/su2code/SU2/pull/1095#issuecomment-713564781:186,Usability,simpl,simple,186,"Hi everyone, glad this subject is of interest. I will try to make that test case. I edit my earlier comment to avoid a mess. So I changed the terms. Still not sure but the derivation is simple. source term viscous = (0, tau_xy, tau_yy - tau_thetatheta, u* tau_yx + v* tau_yy - q)/y, right?. then from Bird:. ![IMG_20201027_115003](https://user-images.githubusercontent.com/55834287/97291927-d9767e00-184a-11eb-9418-a3ace3e3a077.jpg). bulk viscosity = 0, any derivative wrt theta = 0. For the generalised inviscid part I am pretty sure it is all correct including the jacobian. You can compare with very similar terms in any generalised flux jacobian like in Glaister's paper https://www.sciencedirect.com/science/article/pii/002199918890174X",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713564781
https://github.com/su2code/SU2/pull/1095#issuecomment-721121285:961,Modifiability,variab,variable,961,"In this current form there is too much dissipation in most situations in my RANS simulations with k-omega-SST (in some situations it appears there is not enough, probably related to a low magnitude of du/dy). I don't have time to try any pure Navier-Stokes cases. The source terms (convection and diffusion) for k and omega should also be implemented I suppose which should be very much analogous so I think I could try to do that. . Otherwise I don't see what could be wrong with the flow source terms. Please let me know if you do. . I have a couple of questions and I would really appreciate if anybody could give any input. 1. What happens when a user specifies several sources? Will only the last one be retained since they are always assigned to the same numerics[iMGlevel][FLOW_SOL][source_first_term]? This matters most for the turbulent source since there is always already another source. 2. Why is the axisymmetric source term for the incompressible variable density version what it is (the publication related to this does not give any derivation)? If it is correct, something about my derivation must be wrong. My derivation : ; - take the equations in cylindrical coordinates (convection term as well as the tau definition, see ""Bird - Transport Processes"" Annex B if needed); - set any d/dtheta and velocity_theta (ignoring swirl) to zero ; - rearrange into two parts, one which resembles the cartesian 2D form (r=y, z=x) and the remaining part is the source term to be added. ; - Is the above derivation wrong?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-721121285
https://github.com/su2code/SU2/pull/1095#issuecomment-721138506:70,Testability,log,logic,70,"Hi Florian,; You can have a look in CDriver.cpp around line 1850, the logic is mutually exclusive, so if multiple sources are specified the order does not matter, the way things are coded determines which source is used. (I hope somewhere in CConfig we check for conflicting sources).; Note that the first term / second term is per solver, so there is actually a lot of room for different sources. Regarding 2 there are more knowledgeable people about those topics out there than me. Maybe you can join the developers meeting tomorrow at 3pm CET (https://meet.jit.si/SU2_DevMeeting) and you can ask those questions to e.g. @economon or @TobiKattmann",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-721138506
https://github.com/su2code/SU2/pull/1095#issuecomment-721182556:63,Modifiability,config,config,63,Okay thank you Pedro (I meant the order in the code not in the config file). So I would just assign any k-omega axi source to numerics[iMGlevel][TURB_SOL][source_second_term]. See you tomorrow for the meeting,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-721182556
https://github.com/su2code/SU2/pull/1095#issuecomment-721231212:490,Security,Validat,Validation,490,"@FlorianDm When I was working on the feature_axi to attempt what you have done, I unsed this reference, which should match the incompressible version exactly.; [AxiSymm_1.pdf](https://github.com/su2code/SU2/files/5482565/AxiSymm_1.pdf); [AxiSymm_2.pdf](https://github.com/su2code/SU2/files/5482567/AxiSymm_2.pdf). @jtneedels Has ran/is running a laminar viscous wedge with your formulation of axisymmetric and 3D to do some verification. We have also tried to run the NASA TMR axisymmetric Validation cases, but they are proving to be quite difficult. Hope this is useful to the discussion.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-721231212
https://github.com/su2code/SU2/pull/1095#issuecomment-721247348:87,Security,access,access,87,@WallyMaier oh great I think this book was cited in the publication but I couldn't get access to it,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-721247348
https://github.com/su2code/SU2/pull/1095#issuecomment-723641597:371,Modifiability,variab,variables,371,"Hi, thank you all a lot for your help. Here is my derivation : ; [SourceAxi.pdf](https://github.com/su2code/SU2/files/5506823/SourceAxi.pdf). Mistakes have been corrected and it should be the same as your book now apart from the fact that I am neglecting the gradient of viscosity. To take it into account it needs to be evaluated and I suppose that is what those AuxVar variables are for (something like u *mu or u *mu/y I guess). This is new to me and unfortunately I do not have time to look into it atm (unless someone points me in the right direction and it's quickly done). @WallyMaier I believe that you had taken that into account already and I just came along and cut out your work. So I should close this PR and once you open a new one I can add the generalisation for the convection terms. Were you planning on implementing the k and omega sources as well? . What book is that btw?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-723641597
https://github.com/su2code/SU2/pull/1095#issuecomment-727633198:296,Testability,test,test,296,"I'm late to the party here, but just a note to say that the original implementation for the incompressible source terms are indeed from the text that @WallyMaier / @vdweide shared. It was added as part of the work in this paper (https://economon.github.io/docs/AIAA-2018-3111.pdf), but I did not test it much beyond a simple laminar channel case or really attempt to treat turbulence at the time. Thanks for putting in more effort on these terms!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727633198
https://github.com/su2code/SU2/pull/1095#issuecomment-727633198:318,Usability,simpl,simple,318,"I'm late to the party here, but just a note to say that the original implementation for the incompressible source terms are indeed from the text that @WallyMaier / @vdweide shared. It was added as part of the work in this paper (https://economon.github.io/docs/AIAA-2018-3111.pdf), but I did not test it much beyond a simple laminar channel case or really attempt to treat turbulence at the time. Thanks for putting in more effort on these terms!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727633198
https://github.com/su2code/SU2/pull/1095#issuecomment-727636668:184,Testability,test,tests,184,@FlorianDm @economon and everyone else. I have merged Florian's derivation with my earlier derivation. I have added the gradients with respect to viscosity. @jtneedels is running some tests on it currently. I can push those changes to this branch so everyone can look over them...what do you all think?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727636668
https://github.com/su2code/SU2/pull/1095#issuecomment-727969107:120,Modifiability,variab,variables,120,Actually I had a look at your branch and the way it is right now is not correct I believe because I had taken the other variables v and 1/y out of the derivative using the chain rule and combined them with the other derivatives to end up with the terms as they are now so only d(mu)/dy was missing. The AxiAuxVarGrad you are using is apparently d(v*mu/y)/dy so the other terms have to be different. I will change them. Why not just simply compute the viscosity gradient? Is there any reason not to pull the other variables out?. Is there not already an AuxVar being just v*mu or something? . Anyway I guess it will work the same either way,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727969107
https://github.com/su2code/SU2/pull/1095#issuecomment-727969107:513,Modifiability,variab,variables,513,Actually I had a look at your branch and the way it is right now is not correct I believe because I had taken the other variables v and 1/y out of the derivative using the chain rule and combined them with the other derivatives to end up with the terms as they are now so only d(mu)/dy was missing. The AxiAuxVarGrad you are using is apparently d(v*mu/y)/dy so the other terms have to be different. I will change them. Why not just simply compute the viscosity gradient? Is there any reason not to pull the other variables out?. Is there not already an AuxVar being just v*mu or something? . Anyway I guess it will work the same either way,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727969107
https://github.com/su2code/SU2/pull/1095#issuecomment-727969107:432,Usability,simpl,simply,432,Actually I had a look at your branch and the way it is right now is not correct I believe because I had taken the other variables v and 1/y out of the derivative using the chain rule and combined them with the other derivatives to end up with the terms as they are now so only d(mu)/dy was missing. The AxiAuxVarGrad you are using is apparently d(v*mu/y)/dy so the other terms have to be different. I will change them. Why not just simply compute the viscosity gradient? Is there any reason not to pull the other variables out?. Is there not already an AuxVar being just v*mu or something? . Anyway I guess it will work the same either way,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727969107
https://github.com/su2code/SU2/pull/1095#issuecomment-728114454:910,Modifiability,variab,variables,910,"To do it with your AxiAuxVar i would suggest this: . ```; residual[0] -= 0.0;; residual[1] -= Volume*(yinv*total_viscosity_i*(PrimVar_Grad_i[1][1]+PrimVar_Grad_i[2][0]) ; - TWO3*AxiAuxVar_Grad_i[0][0]);; residual[2] -= Volume*(yinv*total_viscosity_i*2*(PrimVar_Grad_i[2][1]-v*yinv); - TWO3*AxiAuxVar_Grad_i[0][1]);; residual[3] -= Volume*(yinv*(total_viscosity_i*(u*(PrimVar_Grad_i[2][0]+PrimVar_Grad_i[1][1]); + v*(FOUR3*PrimVar_Grad_i[1][1]+TWO3*PrimVar_Grad_i[1][0]); - TWO3*v*v*yinv); - total_conductivity_i*PrimVar_Grad_i[0][1]); - TWO3*(AxiAuxVar_Grad_i[1][1]+AxiAuxVar_Grad_i[2][1]));; ```. Could you put that into your branch and then push to this branch? I double checked the signs.. should be fine. If I commited it here I now would break the compilation because these things are not defined in this branch. And for the setters maybe combine the `if` guards so it's cleaner; ```; /*--- Set primitive variables for viscous terms and/or generalised source ---*/; if (!ideal_gas || viscous) numerics->SetPrimitive(nodes->GetPrimitive(iPoint), nodes->GetPrimitive(iPoint));. /*--- Set secondary variables for generalised source ---*/; if (!ideal_gas) numerics->SetSecondary(nodes->GetSecondary(iPoint), nodes->GetSecondary(iPoint));. if (viscous) {; ; /*--- Set gradient of primitive variables ---*/; numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint), nodes->GetGradient_Primitive(iPoint));; ; /*--- Set gradient of auxillary variables ---*/; numerics->SetAxiAuxVarGrad(nodes->GetAxiAuxVarGradient(iPoint), nullptr);; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-728114454
https://github.com/su2code/SU2/pull/1095#issuecomment-728114454:1101,Modifiability,variab,variables,1101,"To do it with your AxiAuxVar i would suggest this: . ```; residual[0] -= 0.0;; residual[1] -= Volume*(yinv*total_viscosity_i*(PrimVar_Grad_i[1][1]+PrimVar_Grad_i[2][0]) ; - TWO3*AxiAuxVar_Grad_i[0][0]);; residual[2] -= Volume*(yinv*total_viscosity_i*2*(PrimVar_Grad_i[2][1]-v*yinv); - TWO3*AxiAuxVar_Grad_i[0][1]);; residual[3] -= Volume*(yinv*(total_viscosity_i*(u*(PrimVar_Grad_i[2][0]+PrimVar_Grad_i[1][1]); + v*(FOUR3*PrimVar_Grad_i[1][1]+TWO3*PrimVar_Grad_i[1][0]); - TWO3*v*v*yinv); - total_conductivity_i*PrimVar_Grad_i[0][1]); - TWO3*(AxiAuxVar_Grad_i[1][1]+AxiAuxVar_Grad_i[2][1]));; ```. Could you put that into your branch and then push to this branch? I double checked the signs.. should be fine. If I commited it here I now would break the compilation because these things are not defined in this branch. And for the setters maybe combine the `if` guards so it's cleaner; ```; /*--- Set primitive variables for viscous terms and/or generalised source ---*/; if (!ideal_gas || viscous) numerics->SetPrimitive(nodes->GetPrimitive(iPoint), nodes->GetPrimitive(iPoint));. /*--- Set secondary variables for generalised source ---*/; if (!ideal_gas) numerics->SetSecondary(nodes->GetSecondary(iPoint), nodes->GetSecondary(iPoint));. if (viscous) {; ; /*--- Set gradient of primitive variables ---*/; numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint), nodes->GetGradient_Primitive(iPoint));; ; /*--- Set gradient of auxillary variables ---*/; numerics->SetAxiAuxVarGrad(nodes->GetAxiAuxVarGradient(iPoint), nullptr);; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-728114454
https://github.com/su2code/SU2/pull/1095#issuecomment-728114454:1290,Modifiability,variab,variables,1290,"To do it with your AxiAuxVar i would suggest this: . ```; residual[0] -= 0.0;; residual[1] -= Volume*(yinv*total_viscosity_i*(PrimVar_Grad_i[1][1]+PrimVar_Grad_i[2][0]) ; - TWO3*AxiAuxVar_Grad_i[0][0]);; residual[2] -= Volume*(yinv*total_viscosity_i*2*(PrimVar_Grad_i[2][1]-v*yinv); - TWO3*AxiAuxVar_Grad_i[0][1]);; residual[3] -= Volume*(yinv*(total_viscosity_i*(u*(PrimVar_Grad_i[2][0]+PrimVar_Grad_i[1][1]); + v*(FOUR3*PrimVar_Grad_i[1][1]+TWO3*PrimVar_Grad_i[1][0]); - TWO3*v*v*yinv); - total_conductivity_i*PrimVar_Grad_i[0][1]); - TWO3*(AxiAuxVar_Grad_i[1][1]+AxiAuxVar_Grad_i[2][1]));; ```. Could you put that into your branch and then push to this branch? I double checked the signs.. should be fine. If I commited it here I now would break the compilation because these things are not defined in this branch. And for the setters maybe combine the `if` guards so it's cleaner; ```; /*--- Set primitive variables for viscous terms and/or generalised source ---*/; if (!ideal_gas || viscous) numerics->SetPrimitive(nodes->GetPrimitive(iPoint), nodes->GetPrimitive(iPoint));. /*--- Set secondary variables for generalised source ---*/; if (!ideal_gas) numerics->SetSecondary(nodes->GetSecondary(iPoint), nodes->GetSecondary(iPoint));. if (viscous) {; ; /*--- Set gradient of primitive variables ---*/; numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint), nodes->GetGradient_Primitive(iPoint));; ; /*--- Set gradient of auxillary variables ---*/; numerics->SetAxiAuxVarGrad(nodes->GetAxiAuxVarGradient(iPoint), nullptr);; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-728114454
https://github.com/su2code/SU2/pull/1095#issuecomment-728114454:1448,Modifiability,variab,variables,1448,"To do it with your AxiAuxVar i would suggest this: . ```; residual[0] -= 0.0;; residual[1] -= Volume*(yinv*total_viscosity_i*(PrimVar_Grad_i[1][1]+PrimVar_Grad_i[2][0]) ; - TWO3*AxiAuxVar_Grad_i[0][0]);; residual[2] -= Volume*(yinv*total_viscosity_i*2*(PrimVar_Grad_i[2][1]-v*yinv); - TWO3*AxiAuxVar_Grad_i[0][1]);; residual[3] -= Volume*(yinv*(total_viscosity_i*(u*(PrimVar_Grad_i[2][0]+PrimVar_Grad_i[1][1]); + v*(FOUR3*PrimVar_Grad_i[1][1]+TWO3*PrimVar_Grad_i[1][0]); - TWO3*v*v*yinv); - total_conductivity_i*PrimVar_Grad_i[0][1]); - TWO3*(AxiAuxVar_Grad_i[1][1]+AxiAuxVar_Grad_i[2][1]));; ```. Could you put that into your branch and then push to this branch? I double checked the signs.. should be fine. If I commited it here I now would break the compilation because these things are not defined in this branch. And for the setters maybe combine the `if` guards so it's cleaner; ```; /*--- Set primitive variables for viscous terms and/or generalised source ---*/; if (!ideal_gas || viscous) numerics->SetPrimitive(nodes->GetPrimitive(iPoint), nodes->GetPrimitive(iPoint));. /*--- Set secondary variables for generalised source ---*/; if (!ideal_gas) numerics->SetSecondary(nodes->GetSecondary(iPoint), nodes->GetSecondary(iPoint));. if (viscous) {; ; /*--- Set gradient of primitive variables ---*/; numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint), nodes->GetGradient_Primitive(iPoint));; ; /*--- Set gradient of auxillary variables ---*/; numerics->SetAxiAuxVarGrad(nodes->GetAxiAuxVarGradient(iPoint), nullptr);; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-728114454
https://github.com/su2code/SU2/pull/1096#issuecomment-716442866:20,Deployability,update,update,20,"Hi @jblueh , can we update medipack as well to the latest commit? . (As you know 😉) It solves a minor inconvenience where Macs with case-insensitive filesystems would mark the medipack submodule as unclean because two filenames just differ just in their case [see here](https://github.com/SciCompKL/MediPack/pull/3). Building on my machine was without problems and if the regression test would run here I see no issue. I can also add the commit but didnt want to sneak into your PR without asking ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096#issuecomment-716442866
https://github.com/su2code/SU2/pull/1096#issuecomment-716442866:383,Testability,test,test,383,"Hi @jblueh , can we update medipack as well to the latest commit? . (As you know 😉) It solves a minor inconvenience where Macs with case-insensitive filesystems would mark the medipack submodule as unclean because two filenames just differ just in their case [see here](https://github.com/SciCompKL/MediPack/pull/3). Building on my machine was without problems and if the regression test would run here I see no issue. I can also add the commit but didnt want to sneak into your PR without asking ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096#issuecomment-716442866
https://github.com/su2code/SU2/pull/1096#issuecomment-716473540:60,Deployability,update,update,60,"Hi @TobiKattmann, thanks for pointing this out! I added the update.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096#issuecomment-716473540
https://github.com/su2code/SU2/issues/1099#issuecomment-719056946:654,Energy Efficiency,allocate,allocated,654,"The function call with the invalid write seems to be before any of the periodic preprocessing, unless I missed something. Are you using an exchange location/donor nodes similar to what Eduardo talked about in his SU2 conference talk (like using info from the third off-wall node)? If not, ignore the following. I saw a similar issue when I used a similar exchange location implementation for SST wall functions. The problem I saw is that sometimes there's one-way communication between the processor with the exchange location and the processor where the wall function/model is being computed. This doesn't work well with how send-receive boundaries are allocated, because literally everywhere in the code assumes nMarkerSend==nMarkerRecv. . I fixed this on one of my branches for both flow and adjoint, so I can try to port it to develop if you think this might be the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099#issuecomment-719056946
https://github.com/su2code/SU2/issues/1099#issuecomment-719069221:199,Testability,test,test,199,@bmunguia yes. I am actually using Eduardo's work and I branched off from Eduardo's WMLES branch. So what you are suggesting is probably the root casue here. Do you know if there is any quick way to test this?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099#issuecomment-719069221
https://github.com/su2code/SU2/issues/1099#issuecomment-719839655:67,Availability,error,error,67,I re-ran the test case with develop and actually didnt receive any error during the pre-processing step. I believe this is indeed an artifact due to Eduardo's WMLES implementation that was adversely affecting the communication pattern in the pre-processing stage. I will close this issue then.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099#issuecomment-719839655
https://github.com/su2code/SU2/issues/1099#issuecomment-719839655:13,Testability,test,test,13,I re-ran the test case with develop and actually didnt receive any error during the pre-processing step. I believe this is indeed an artifact due to Eduardo's WMLES implementation that was adversely affecting the communication pattern in the pre-processing stage. I will close this issue then.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099#issuecomment-719839655
https://github.com/su2code/SU2/pull/1102#issuecomment-723022762:29,Deployability,update,update,29,"Thanks Edwin, the plan is to update the build instructions on the website before the release.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102#issuecomment-723022762
https://github.com/su2code/SU2/pull/1102#issuecomment-723022762:85,Deployability,release,release,85,"Thanks Edwin, the plan is to update the build instructions on the website before the release.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102#issuecomment-723022762
https://github.com/su2code/SU2/issues/1103#issuecomment-756212832:459,Performance,optimiz,optimization,459,"For the first question, yes, the framework assumes that drag should be minimized and lift maximized. You should be able to flip it by using a negative scale factor, or you can directly modify the python framework to change this (just a one-line change). See get_objectiveSign() in SU2/SU2_PY/SU2/io/tools.py. For the second questions, it is difficult to known what SLSQP is doing under the hood. However, we use the scale factors to try to better control the optimization process (step sizes in particular). See more discussion about this in #733",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103#issuecomment-756212832
https://github.com/su2code/SU2/pull/1105#issuecomment-729148658:88,Energy Efficiency,monitor,monitoring,88,"Thank you both.; @oleburghardt this will only stop the calculations for values used for monitoring, e.g. you would need a cauchy criteria on maxHF.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1105#issuecomment-729148658
https://github.com/su2code/SU2/pull/1106#issuecomment-731141665:910,Availability,error,error,910,"@WallyMaier thank you. Interesting... 1. This reference reminded me to add the contribution of the turbulence kinetic energy (+2/3 v rho k) in the energy equation source (see page 10 equation 2.30, pdf page 37), so that's done. 2. This reference will be helpful If I get to do the axysimmetry source terms for k and omega (by comparing equations 2.31 and 2.31 to equations B.2 and B.3) but that will be in a separate PR. In fact I am getting good results for RANS already (although no time for a thorough validation). 3. In that reference they have also done what I did before and pulled out the primitive derivatives and neglected the viscosity gradient and then came up with the same axisymmetry momentum source terms so that is comforting. However, their energy source terms are different and that made me think. What we have now is according to the first reference, so it should be fine unless there is an error in it. I find it suspicious that both aux derivatives are wrt y and none wrt x given the that we have one wrt x and one wrt y in the momentum equation... Could it be `AxiAuxVar_Grad_i[2][0]` instead of `AxiAuxVar_Grad_i[2][1]` ? The impact on results is almost unnoticeable for my case. Otherwise we are done here I think. @pcarruscag thanks for taking the time to review!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-731141665
https://github.com/su2code/SU2/pull/1106#issuecomment-731141665:118,Energy Efficiency,energy,energy,118,"@WallyMaier thank you. Interesting... 1. This reference reminded me to add the contribution of the turbulence kinetic energy (+2/3 v rho k) in the energy equation source (see page 10 equation 2.30, pdf page 37), so that's done. 2. This reference will be helpful If I get to do the axysimmetry source terms for k and omega (by comparing equations 2.31 and 2.31 to equations B.2 and B.3) but that will be in a separate PR. In fact I am getting good results for RANS already (although no time for a thorough validation). 3. In that reference they have also done what I did before and pulled out the primitive derivatives and neglected the viscosity gradient and then came up with the same axisymmetry momentum source terms so that is comforting. However, their energy source terms are different and that made me think. What we have now is according to the first reference, so it should be fine unless there is an error in it. I find it suspicious that both aux derivatives are wrt y and none wrt x given the that we have one wrt x and one wrt y in the momentum equation... Could it be `AxiAuxVar_Grad_i[2][0]` instead of `AxiAuxVar_Grad_i[2][1]` ? The impact on results is almost unnoticeable for my case. Otherwise we are done here I think. @pcarruscag thanks for taking the time to review!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-731141665
https://github.com/su2code/SU2/pull/1106#issuecomment-731141665:147,Energy Efficiency,energy,energy,147,"@WallyMaier thank you. Interesting... 1. This reference reminded me to add the contribution of the turbulence kinetic energy (+2/3 v rho k) in the energy equation source (see page 10 equation 2.30, pdf page 37), so that's done. 2. This reference will be helpful If I get to do the axysimmetry source terms for k and omega (by comparing equations 2.31 and 2.31 to equations B.2 and B.3) but that will be in a separate PR. In fact I am getting good results for RANS already (although no time for a thorough validation). 3. In that reference they have also done what I did before and pulled out the primitive derivatives and neglected the viscosity gradient and then came up with the same axisymmetry momentum source terms so that is comforting. However, their energy source terms are different and that made me think. What we have now is according to the first reference, so it should be fine unless there is an error in it. I find it suspicious that both aux derivatives are wrt y and none wrt x given the that we have one wrt x and one wrt y in the momentum equation... Could it be `AxiAuxVar_Grad_i[2][0]` instead of `AxiAuxVar_Grad_i[2][1]` ? The impact on results is almost unnoticeable for my case. Otherwise we are done here I think. @pcarruscag thanks for taking the time to review!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-731141665
https://github.com/su2code/SU2/pull/1106#issuecomment-731141665:758,Energy Efficiency,energy,energy,758,"@WallyMaier thank you. Interesting... 1. This reference reminded me to add the contribution of the turbulence kinetic energy (+2/3 v rho k) in the energy equation source (see page 10 equation 2.30, pdf page 37), so that's done. 2. This reference will be helpful If I get to do the axysimmetry source terms for k and omega (by comparing equations 2.31 and 2.31 to equations B.2 and B.3) but that will be in a separate PR. In fact I am getting good results for RANS already (although no time for a thorough validation). 3. In that reference they have also done what I did before and pulled out the primitive derivatives and neglected the viscosity gradient and then came up with the same axisymmetry momentum source terms so that is comforting. However, their energy source terms are different and that made me think. What we have now is according to the first reference, so it should be fine unless there is an error in it. I find it suspicious that both aux derivatives are wrt y and none wrt x given the that we have one wrt x and one wrt y in the momentum equation... Could it be `AxiAuxVar_Grad_i[2][0]` instead of `AxiAuxVar_Grad_i[2][1]` ? The impact on results is almost unnoticeable for my case. Otherwise we are done here I think. @pcarruscag thanks for taking the time to review!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-731141665
https://github.com/su2code/SU2/pull/1106#issuecomment-731141665:505,Security,validat,validation,505,"@WallyMaier thank you. Interesting... 1. This reference reminded me to add the contribution of the turbulence kinetic energy (+2/3 v rho k) in the energy equation source (see page 10 equation 2.30, pdf page 37), so that's done. 2. This reference will be helpful If I get to do the axysimmetry source terms for k and omega (by comparing equations 2.31 and 2.31 to equations B.2 and B.3) but that will be in a separate PR. In fact I am getting good results for RANS already (although no time for a thorough validation). 3. In that reference they have also done what I did before and pulled out the primitive derivatives and neglected the viscosity gradient and then came up with the same axisymmetry momentum source terms so that is comforting. However, their energy source terms are different and that made me think. What we have now is according to the first reference, so it should be fine unless there is an error in it. I find it suspicious that both aux derivatives are wrt y and none wrt x given the that we have one wrt x and one wrt y in the momentum equation... Could it be `AxiAuxVar_Grad_i[2][0]` instead of `AxiAuxVar_Grad_i[2][1]` ? The impact on results is almost unnoticeable for my case. Otherwise we are done here I think. @pcarruscag thanks for taking the time to review!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-731141665
https://github.com/su2code/SU2/pull/1106#issuecomment-740338383:33,Testability,test,testing,33,Thanks @jtneedels for doing some testing. I think we saw some issues with the aerodynamic coefficient computations...but the pressure distributions looked good. This looks good to me. Ill leave it to @FlorianDm or @pcarruscag to make any final changes or suggestions. Good work y'all!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-740338383
https://github.com/su2code/SU2/pull/1106#issuecomment-740795422:180,Deployability,configurat,configurations,180,"I have done some comparison cases for Cp distribution with axisymmetric formulation with older versions, they were matching well with commercial codes (I must say for the specific configurations I simulated, it somehow matched). This issue came into light while trying to obtain heat flux with axisymmetric formulation.; I will also try to run this axisymmetric case with some other code and compare....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-740795422
https://github.com/su2code/SU2/pull/1106#issuecomment-740795422:180,Modifiability,config,configurations,180,"I have done some comparison cases for Cp distribution with axisymmetric formulation with older versions, they were matching well with commercial codes (I must say for the specific configurations I simulated, it somehow matched). This issue came into light while trying to obtain heat flux with axisymmetric formulation.; I will also try to run this axisymmetric case with some other code and compare....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-740795422
https://github.com/su2code/SU2/pull/1106#issuecomment-740820926:148,Energy Efficiency,energy,energy,148,@aeroamit What does temperature do? Could you compute the heat flux from the temperature in e.g. paraview? Is the root cause the computation of the energy equation or the computation of heat flux?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-740820926
https://github.com/su2code/SU2/pull/1106#issuecomment-741947377:150,Energy Efficiency,energy,energy,150,"> @aeroamit What does temperature do? Could you compute the heat flux from the temperature in e.g. paraview? Is the root cause the computation of the energy equation or the computation of heat flux?. Hi @bigfooted, Temperature boundary condition for wall corresponds to Isothermal wall BC (cold wall condition). This condition is applied to obtain heat flux unlike adiabatic wall (no heat transfer). ; The snapshot, I posted from ParaView shows heat flux variation with x. This is obtained directly from surface_flow.vtu. You can simply go to Filters -> Data Analysis -> Plot data and select Points_X for X Array and heat flux in variable. Regarding computing heat flux from temperature field, I am not sure, but ParaView is having calculator utility as well as option to compute gradient of unstructured grid (from there you can obtain temperature gradients in 3 directions). ; Coming to last question, root cause of the problem - @WallyMaier has run the case yesterday, we will be posting some details soon.; Best ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377
https://github.com/su2code/SU2/pull/1106#issuecomment-741947377:630,Modifiability,variab,variable,630,"> @aeroamit What does temperature do? Could you compute the heat flux from the temperature in e.g. paraview? Is the root cause the computation of the energy equation or the computation of heat flux?. Hi @bigfooted, Temperature boundary condition for wall corresponds to Isothermal wall BC (cold wall condition). This condition is applied to obtain heat flux unlike adiabatic wall (no heat transfer). ; The snapshot, I posted from ParaView shows heat flux variation with x. This is obtained directly from surface_flow.vtu. You can simply go to Filters -> Data Analysis -> Plot data and select Points_X for X Array and heat flux in variable. Regarding computing heat flux from temperature field, I am not sure, but ParaView is having calculator utility as well as option to compute gradient of unstructured grid (from there you can obtain temperature gradients in 3 directions). ; Coming to last question, root cause of the problem - @WallyMaier has run the case yesterday, we will be posting some details soon.; Best ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377
https://github.com/su2code/SU2/pull/1106#issuecomment-741947377:530,Usability,simpl,simply,530,"> @aeroamit What does temperature do? Could you compute the heat flux from the temperature in e.g. paraview? Is the root cause the computation of the energy equation or the computation of heat flux?. Hi @bigfooted, Temperature boundary condition for wall corresponds to Isothermal wall BC (cold wall condition). This condition is applied to obtain heat flux unlike adiabatic wall (no heat transfer). ; The snapshot, I posted from ParaView shows heat flux variation with x. This is obtained directly from surface_flow.vtu. You can simply go to Filters -> Data Analysis -> Plot data and select Points_X for X Array and heat flux in variable. Regarding computing heat flux from temperature field, I am not sure, but ParaView is having calculator utility as well as option to compute gradient of unstructured grid (from there you can obtain temperature gradients in 3 directions). ; Coming to last question, root cause of the problem - @WallyMaier has run the case yesterday, we will be posting some details soon.; Best ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377
https://github.com/su2code/SU2/pull/1107#issuecomment-730418379:498,Usability,Learn,Learning,498,"@TobiKattmann since we were talking about it yesterday, the advantage of the ""weak"" formulation is that it is conservative, heat fluxin equal heat flux out (because the post processed fluxes are consistent with how the boundary condition is applied).; Obviously at the expense of the isothermal temperatures not being imposed exactly.; With the ""strong"" formulation, conservation can probably only be achieved if the mesh topology of the inlet/outlet boundary is the same, or at grid convergence.; Learning something new everyday, I put it back as it was.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107#issuecomment-730418379
https://github.com/su2code/SU2/pull/1107#issuecomment-736680160:58,Deployability,release,release,58,Merging this to allow all tests to run so we can create a release tomorrow (there is a fix in this branch for compilation with gcc 5.3.0 so this should be part of the release). Happy to make post mortem changes if needed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107#issuecomment-736680160
https://github.com/su2code/SU2/pull/1107#issuecomment-736680160:167,Deployability,release,release,167,Merging this to allow all tests to run so we can create a release tomorrow (there is a fix in this branch for compilation with gcc 5.3.0 so this should be part of the release). Happy to make post mortem changes if needed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107#issuecomment-736680160
https://github.com/su2code/SU2/pull/1107#issuecomment-736680160:26,Testability,test,tests,26,Merging this to allow all tests to run so we can create a release tomorrow (there is a fix in this branch for compilation with gcc 5.3.0 so this should be part of the release). Happy to make post mortem changes if needed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107#issuecomment-736680160
https://github.com/su2code/SU2/pull/1108#issuecomment-729858337:118,Safety,avoid,avoid,118,@pcarruscag @CatarinaGarbacz I am going to close this PR to focus on making small/manageable PRs to develop itself to avoid bloating. Ill try to stick with 10-20 files changed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1108#issuecomment-729858337
https://github.com/su2code/SU2/issues/1109#issuecomment-729759618:22,Deployability,rolling,rolling,22,"Hypothesis (this is a rolling release post :); - [x] It is only broken for quad and not for tri meshes in 2D :x: nope Testcases/incomp_navierstokes/cylinder is a 2D Tri mesh and fails as well; ![image](https://user-images.githubusercontent.com/31306376/99550414-00901d80-29bb-11eb-9cec-6370399e7270.png); Compare that to the Testcases/naviersstokes/cylinder which utilizes the same mesh but is uses the compressible solver. This works; ![image](https://user-images.githubusercontent.com/31306376/99550985-9b88f780-29bb-11eb-8a3d-fe596fa1d3b2.png); which directly brings us to the next hypothesis...; - [x] it is only broken for incompressible flow (so far /euler/wedge worked /navierstokes/cylinder/ /Quickstart worked and /incomp_navierstokes/cylinder /incomp_navierstokes/bend /incomp_euler/naca0012 didnt ) :heavy_check_mark: yep thats it, the implemetation was wrong for incompressible flow `LoadSurfaceData` was falsely used instead of `LoadVolumeData`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109#issuecomment-729759618
https://github.com/su2code/SU2/issues/1109#issuecomment-729759618:30,Deployability,release,release,30,"Hypothesis (this is a rolling release post :); - [x] It is only broken for quad and not for tri meshes in 2D :x: nope Testcases/incomp_navierstokes/cylinder is a 2D Tri mesh and fails as well; ![image](https://user-images.githubusercontent.com/31306376/99550414-00901d80-29bb-11eb-9cec-6370399e7270.png); Compare that to the Testcases/naviersstokes/cylinder which utilizes the same mesh but is uses the compressible solver. This works; ![image](https://user-images.githubusercontent.com/31306376/99550985-9b88f780-29bb-11eb-8a3d-fe596fa1d3b2.png); which directly brings us to the next hypothesis...; - [x] it is only broken for incompressible flow (so far /euler/wedge worked /navierstokes/cylinder/ /Quickstart worked and /incomp_navierstokes/cylinder /incomp_navierstokes/bend /incomp_euler/naca0012 didnt ) :heavy_check_mark: yep thats it, the implemetation was wrong for incompressible flow `LoadSurfaceData` was falsely used instead of `LoadVolumeData`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109#issuecomment-729759618
https://github.com/su2code/SU2/issues/1109#issuecomment-729759618:896,Performance,Load,LoadSurfaceData,896,"Hypothesis (this is a rolling release post :); - [x] It is only broken for quad and not for tri meshes in 2D :x: nope Testcases/incomp_navierstokes/cylinder is a 2D Tri mesh and fails as well; ![image](https://user-images.githubusercontent.com/31306376/99550414-00901d80-29bb-11eb-9cec-6370399e7270.png); Compare that to the Testcases/naviersstokes/cylinder which utilizes the same mesh but is uses the compressible solver. This works; ![image](https://user-images.githubusercontent.com/31306376/99550985-9b88f780-29bb-11eb-8a3d-fe596fa1d3b2.png); which directly brings us to the next hypothesis...; - [x] it is only broken for incompressible flow (so far /euler/wedge worked /navierstokes/cylinder/ /Quickstart worked and /incomp_navierstokes/cylinder /incomp_navierstokes/bend /incomp_euler/naca0012 didnt ) :heavy_check_mark: yep thats it, the implemetation was wrong for incompressible flow `LoadSurfaceData` was falsely used instead of `LoadVolumeData`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109#issuecomment-729759618
https://github.com/su2code/SU2/issues/1109#issuecomment-729759618:942,Performance,Load,LoadVolumeData,942,"Hypothesis (this is a rolling release post :); - [x] It is only broken for quad and not for tri meshes in 2D :x: nope Testcases/incomp_navierstokes/cylinder is a 2D Tri mesh and fails as well; ![image](https://user-images.githubusercontent.com/31306376/99550414-00901d80-29bb-11eb-9cec-6370399e7270.png); Compare that to the Testcases/naviersstokes/cylinder which utilizes the same mesh but is uses the compressible solver. This works; ![image](https://user-images.githubusercontent.com/31306376/99550985-9b88f780-29bb-11eb-8a3d-fe596fa1d3b2.png); which directly brings us to the next hypothesis...; - [x] it is only broken for incompressible flow (so far /euler/wedge worked /navierstokes/cylinder/ /Quickstart worked and /incomp_navierstokes/cylinder /incomp_navierstokes/bend /incomp_euler/naca0012 didnt ) :heavy_check_mark: yep thats it, the implemetation was wrong for incompressible flow `LoadSurfaceData` was falsely used instead of `LoadVolumeData`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109#issuecomment-729759618
https://github.com/su2code/SU2/issues/1109#issuecomment-729759618:118,Testability,Test,Testcases,118,"Hypothesis (this is a rolling release post :); - [x] It is only broken for quad and not for tri meshes in 2D :x: nope Testcases/incomp_navierstokes/cylinder is a 2D Tri mesh and fails as well; ![image](https://user-images.githubusercontent.com/31306376/99550414-00901d80-29bb-11eb-9cec-6370399e7270.png); Compare that to the Testcases/naviersstokes/cylinder which utilizes the same mesh but is uses the compressible solver. This works; ![image](https://user-images.githubusercontent.com/31306376/99550985-9b88f780-29bb-11eb-8a3d-fe596fa1d3b2.png); which directly brings us to the next hypothesis...; - [x] it is only broken for incompressible flow (so far /euler/wedge worked /navierstokes/cylinder/ /Quickstart worked and /incomp_navierstokes/cylinder /incomp_navierstokes/bend /incomp_euler/naca0012 didnt ) :heavy_check_mark: yep thats it, the implemetation was wrong for incompressible flow `LoadSurfaceData` was falsely used instead of `LoadVolumeData`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109#issuecomment-729759618
https://github.com/su2code/SU2/issues/1109#issuecomment-729759618:325,Testability,Test,Testcases,325,"Hypothesis (this is a rolling release post :); - [x] It is only broken for quad and not for tri meshes in 2D :x: nope Testcases/incomp_navierstokes/cylinder is a 2D Tri mesh and fails as well; ![image](https://user-images.githubusercontent.com/31306376/99550414-00901d80-29bb-11eb-9cec-6370399e7270.png); Compare that to the Testcases/naviersstokes/cylinder which utilizes the same mesh but is uses the compressible solver. This works; ![image](https://user-images.githubusercontent.com/31306376/99550985-9b88f780-29bb-11eb-8a3d-fe596fa1d3b2.png); which directly brings us to the next hypothesis...; - [x] it is only broken for incompressible flow (so far /euler/wedge worked /navierstokes/cylinder/ /Quickstart worked and /incomp_navierstokes/cylinder /incomp_navierstokes/bend /incomp_euler/naca0012 didnt ) :heavy_check_mark: yep thats it, the implemetation was wrong for incompressible flow `LoadSurfaceData` was falsely used instead of `LoadVolumeData`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109#issuecomment-729759618
https://github.com/su2code/SU2/issues/1110#issuecomment-762047231:234,Availability,avail,available,234,"While `unsigned short* CPhysicalGeometry::Local_to_Global_Marker` and `Global_to_Local_Marker` are currently not in use, I think that they should be filled with sensible content rather than being removed. The data seems to be already available in `CPhysicalGeometry::LoadSurfaceElements` with the local variables; - `vector<unsigned long> Marker_Local` and ; - `unordered_map<unsigned long, unsigned long> Marker_Global_to_Local`. I'd like to implement this change. Before that, let's discuss the following questions: Do you think that marker IDs (often called `iMarker`) should be `unsigned short` or `unsigned long` (this is inconsistent across the code)? Should the above data structures be arrays (with some special code for ""this global index does not correspond to a local index"") or maps/lists? I'd prefer the latter, respectively.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762047231
https://github.com/su2code/SU2/issues/1110#issuecomment-762047231:303,Modifiability,variab,variables,303,"While `unsigned short* CPhysicalGeometry::Local_to_Global_Marker` and `Global_to_Local_Marker` are currently not in use, I think that they should be filled with sensible content rather than being removed. The data seems to be already available in `CPhysicalGeometry::LoadSurfaceElements` with the local variables; - `vector<unsigned long> Marker_Local` and ; - `unordered_map<unsigned long, unsigned long> Marker_Global_to_Local`. I'd like to implement this change. Before that, let's discuss the following questions: Do you think that marker IDs (often called `iMarker`) should be `unsigned short` or `unsigned long` (this is inconsistent across the code)? Should the above data structures be arrays (with some special code for ""this global index does not correspond to a local index"") or maps/lists? I'd prefer the latter, respectively.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762047231
https://github.com/su2code/SU2/issues/1110#issuecomment-762047231:267,Performance,Load,LoadSurfaceElements,267,"While `unsigned short* CPhysicalGeometry::Local_to_Global_Marker` and `Global_to_Local_Marker` are currently not in use, I think that they should be filled with sensible content rather than being removed. The data seems to be already available in `CPhysicalGeometry::LoadSurfaceElements` with the local variables; - `vector<unsigned long> Marker_Local` and ; - `unordered_map<unsigned long, unsigned long> Marker_Global_to_Local`. I'd like to implement this change. Before that, let's discuss the following questions: Do you think that marker IDs (often called `iMarker`) should be `unsigned short` or `unsigned long` (this is inconsistent across the code)? Should the above data structures be arrays (with some special code for ""this global index does not correspond to a local index"") or maps/lists? I'd prefer the latter, respectively.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762047231
https://github.com/su2code/SU2/issues/1110#issuecomment-762153763:11,Performance,Load,LoadSurfaceElements,11,"I think in LoadSurfaceElements the SendRecv markers do not exist yet.; unsigned short is what we use most for marker. Local to global should be an array or vector, global to local should be an unordered map, exactly as done for the point and element maps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762153763
https://github.com/su2code/SU2/issues/1110#issuecomment-762154711:58,Safety,avoid,avoid,58,Access to the global to local should be via a function to avoid unintentional insertion.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762154711
https://github.com/su2code/SU2/issues/1110#issuecomment-762154711:0,Security,Access,Access,0,Access to the global to local should be via a function to avoid unintentional insertion.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762154711
https://github.com/su2code/SU2/issues/1110#issuecomment-762234155:973,Integrability,depend,depends,973,"Thanks for your hints. Now I understand that:; a) In `CPhysicalGeometry::LoadSurfaceElements`, the process finds those global markers that have at least one element adjacent to the subdomain of the process, and assigns local IDs. The function is called in the constructor of `CPhysicalGeometry`.; b) The transfer of quantities from one MPI process to another is done with additional markers of type `SEND_RECEIVE`. They are created e.g. in `CPhysicalGeometry::SetSendReceive` => after the constructor has been called. I also saw that the problem of mapping local (non-`SEND_RECEIVE`) markers to some global identifiers can be (and is) solved by the `string` `config->GetMarker_All_TagBound(val_marker)`. And probably there is no point in assigning a global ID to each pair of communicating `SEND_RECEIVE` markers.; ; So there is no need for the local<->global mapping that I intended to implement. Instead I will just remove the two members of `CPhysicalGeometry` and what depends on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762234155
https://github.com/su2code/SU2/issues/1110#issuecomment-762234155:659,Modifiability,config,config,659,"Thanks for your hints. Now I understand that:; a) In `CPhysicalGeometry::LoadSurfaceElements`, the process finds those global markers that have at least one element adjacent to the subdomain of the process, and assigns local IDs. The function is called in the constructor of `CPhysicalGeometry`.; b) The transfer of quantities from one MPI process to another is done with additional markers of type `SEND_RECEIVE`. They are created e.g. in `CPhysicalGeometry::SetSendReceive` => after the constructor has been called. I also saw that the problem of mapping local (non-`SEND_RECEIVE`) markers to some global identifiers can be (and is) solved by the `string` `config->GetMarker_All_TagBound(val_marker)`. And probably there is no point in assigning a global ID to each pair of communicating `SEND_RECEIVE` markers.; ; So there is no need for the local<->global mapping that I intended to implement. Instead I will just remove the two members of `CPhysicalGeometry` and what depends on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762234155
https://github.com/su2code/SU2/issues/1110#issuecomment-762234155:73,Performance,Load,LoadSurfaceElements,73,"Thanks for your hints. Now I understand that:; a) In `CPhysicalGeometry::LoadSurfaceElements`, the process finds those global markers that have at least one element adjacent to the subdomain of the process, and assigns local IDs. The function is called in the constructor of `CPhysicalGeometry`.; b) The transfer of quantities from one MPI process to another is done with additional markers of type `SEND_RECEIVE`. They are created e.g. in `CPhysicalGeometry::SetSendReceive` => after the constructor has been called. I also saw that the problem of mapping local (non-`SEND_RECEIVE`) markers to some global identifiers can be (and is) solved by the `string` `config->GetMarker_All_TagBound(val_marker)`. And probably there is no point in assigning a global ID to each pair of communicating `SEND_RECEIVE` markers.; ; So there is no need for the local<->global mapping that I intended to implement. Instead I will just remove the two members of `CPhysicalGeometry` and what depends on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762234155
https://github.com/su2code/SU2/pull/1111#issuecomment-730849653:58,Usability,clear,clear,58,"I've changed some 'get' functions to 'compute' to be more clear. After some conversations with @pcarruscag Ive also added some 'const' to some 'get' functions. More work can be done in this regard, and that process is ongoing. I can continue doing so in this PR, or in a future one.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1111#issuecomment-730849653
https://github.com/su2code/SU2/pull/1115#issuecomment-734392212:36,Integrability,rout,routines,36,"Thanks Tom, unfortunately there are routines that are inactive only because calls to them were commented out elsewhere in the code (e.g. all the inverse design stuff), I tried to keep all of those.; I ended up deleting everything dealing with volume and surface outputs, as those were 100% not used.; Only the history / convergence routines remain, I also fixed a bug affecting harmonic balance simulations where all outputs went to the same file. Assuming harmonic balance is not used together with turbomachinery (I guess not since there is a driver class for each) it would be easy to move it over to the new output without too much loss of functionality. The turbomachinery stuff looks a bit harder because I don't know if it needs any of the fluid fields, it would probably be very easy for the people who work with this stuff though... Anyway it was a big mess, now it is smaller.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1115#issuecomment-734392212
https://github.com/su2code/SU2/pull/1115#issuecomment-734392212:332,Integrability,rout,routines,332,"Thanks Tom, unfortunately there are routines that are inactive only because calls to them were commented out elsewhere in the code (e.g. all the inverse design stuff), I tried to keep all of those.; I ended up deleting everything dealing with volume and surface outputs, as those were 100% not used.; Only the history / convergence routines remain, I also fixed a bug affecting harmonic balance simulations where all outputs went to the same file. Assuming harmonic balance is not used together with turbomachinery (I guess not since there is a driver class for each) it would be easy to move it over to the new output without too much loss of functionality. The turbomachinery stuff looks a bit harder because I don't know if it needs any of the fluid fields, it would probably be very easy for the people who work with this stuff though... Anyway it was a big mess, now it is smaller.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1115#issuecomment-734392212
https://github.com/su2code/SU2/pull/1117#issuecomment-736747294:295,Testability,test,testing,295,"> question: the chat we had about including gamma in the numerics, so we don't need an overload function, will be included in this PR? I think it should. Yeah, that's in the works. I wanted to get the rest of this up in the mean time. It should be a matter of doing a couple of Get/Set and some testing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117#issuecomment-736747294
https://github.com/su2code/SU2/pull/1120#issuecomment-781530053:164,Deployability,update,update,164,"Hi @pcarruscag ,. Yes, I am still tweaking parameters while we are participating on the AIAA-HLPW. But I agree with you that we need to merge asap even if we do an update after the workshop. Let me fix the compilation and add a regression test case. I probably will need your help with the AD part. Thanks.; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1120#issuecomment-781530053
https://github.com/su2code/SU2/pull/1120#issuecomment-781530053:239,Testability,test,test,239,"Hi @pcarruscag ,. Yes, I am still tweaking parameters while we are participating on the AIAA-HLPW. But I agree with you that we need to merge asap even if we do an update after the workshop. Let me fix the compilation and add a regression test case. I probably will need your help with the AD part. Thanks.; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1120#issuecomment-781530053
https://github.com/su2code/SU2/pull/1120#issuecomment-782819100:184,Security,validat,validated,184,"Good to hear about the progress. In the mean time, I have had a look at the wall model implementation for RANS in your implementation and the current develop. I have a working version validated for SA and SST in the branch 'fix_wallfunctions', which was branched from develop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1120#issuecomment-782819100
https://github.com/su2code/SU2/issues/1123#issuecomment-739336161:473,Deployability,install,install,473,"The fact that the primal works, and the comment I left in that function; `/*--- Find k closest points (need to define the comparator inline or debug build give wrong results). ---*/`; should be pretty indicative of the level of crazy happening there. I think convectional sort works and min_element too, at least they did not have the ""inline problem"" above in direct mode.; I was never able to find confirmation if this is a glibc bug... and it does not seem very easy to install a different glibc version... ISOPARAMETRIC interpolation is equivalent to NEAREST_NEIGHBOR for matching grids.; I can also try to re-write the algorithm... Conclusion: Me is a dumdum, two classes with the same name in different files is a bad idea :) (unless they are in namespaces)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1123#issuecomment-739336161
https://github.com/su2code/SU2/pull/1124#issuecomment-740209039:85,Performance,perform,perform,85,"Thank you for the feedbacks, I am working on the modifications you suggested. I will perform a couple of tests to be sure I did not break anything. Hope to commit the new code soon!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-740209039
https://github.com/su2code/SU2/pull/1124#issuecomment-740209039:105,Testability,test,tests,105,"Thank you for the feedbacks, I am working on the modifications you suggested. I will perform a couple of tests to be sure I did not break anything. Hope to commit the new code soon!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-740209039
https://github.com/su2code/SU2/pull/1124#issuecomment-740209039:18,Usability,feedback,feedbacks,18,"Thank you for the feedbacks, I am working on the modifications you suggested. I will perform a couple of tests to be sure I did not break anything. Hope to commit the new code soon!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-740209039
https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:568,Integrability,wrap,wrapper,568,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972
https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:1654,Performance,perform,perform,1654,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972
https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:768,Safety,avoid,avoids,768,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972
https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:777,Security,access,accessing,777,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972
https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:1502,Testability,test,test,1502,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972
https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:401,Usability,learn,learning,401,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972
https://github.com/su2code/SU2/pull/1124#issuecomment-743110265:70,Availability,error,error,70,"I was trying to merge the develop to resolve conflicts and I found an error in the compilation. I thought I had broken something so I tried to start fresh new with the commands:; `git clone https://github.com/su2code/SU2.git`; `./meson.py build -Denable-pywrapper=true --prefix=/path/to/my/folder`; `./ninja -C build install`; Even from the master branch of your repo I still find the error attached below. Is it a problem with my compiler? I could always compile with no issues before. The last one I tried from you repo was 7.0.6.; <img width=""660"" alt=""error"" src=""https://user-images.githubusercontent.com/60700515/101891882-ee149880-3ba2-11eb-807e-54e6e6f193fc.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743110265
https://github.com/su2code/SU2/pull/1124#issuecomment-743110265:385,Availability,error,error,385,"I was trying to merge the develop to resolve conflicts and I found an error in the compilation. I thought I had broken something so I tried to start fresh new with the commands:; `git clone https://github.com/su2code/SU2.git`; `./meson.py build -Denable-pywrapper=true --prefix=/path/to/my/folder`; `./ninja -C build install`; Even from the master branch of your repo I still find the error attached below. Is it a problem with my compiler? I could always compile with no issues before. The last one I tried from you repo was 7.0.6.; <img width=""660"" alt=""error"" src=""https://user-images.githubusercontent.com/60700515/101891882-ee149880-3ba2-11eb-807e-54e6e6f193fc.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743110265
https://github.com/su2code/SU2/pull/1124#issuecomment-743110265:556,Availability,error,error,556,"I was trying to merge the develop to resolve conflicts and I found an error in the compilation. I thought I had broken something so I tried to start fresh new with the commands:; `git clone https://github.com/su2code/SU2.git`; `./meson.py build -Denable-pywrapper=true --prefix=/path/to/my/folder`; `./ninja -C build install`; Even from the master branch of your repo I still find the error attached below. Is it a problem with my compiler? I could always compile with no issues before. The last one I tried from you repo was 7.0.6.; <img width=""660"" alt=""error"" src=""https://user-images.githubusercontent.com/60700515/101891882-ee149880-3ba2-11eb-807e-54e6e6f193fc.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743110265
https://github.com/su2code/SU2/pull/1124#issuecomment-743110265:317,Deployability,install,install,317,"I was trying to merge the develop to resolve conflicts and I found an error in the compilation. I thought I had broken something so I tried to start fresh new with the commands:; `git clone https://github.com/su2code/SU2.git`; `./meson.py build -Denable-pywrapper=true --prefix=/path/to/my/folder`; `./ninja -C build install`; Even from the master branch of your repo I still find the error attached below. Is it a problem with my compiler? I could always compile with no issues before. The last one I tried from you repo was 7.0.6.; <img width=""660"" alt=""error"" src=""https://user-images.githubusercontent.com/60700515/101891882-ee149880-3ba2-11eb-807e-54e6e6f193fc.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743110265
https://github.com/su2code/SU2/pull/1124#issuecomment-743131278:161,Testability,test,tests,161,"I think that was the first gcc with official full c++11 support, and so it might not be full support...; Try pushing the merge anyway so that github can run the tests, I'll see if something can be done about 4.8.5.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743131278
https://github.com/su2code/SU2/pull/1124#issuecomment-743139863:24,Deployability,update,update,24,"Okok, I may also try to update gcc. The only issue is that it is on a server so I should do it locally and it may take a bit more time. I will test the merge and then, with more time, update gcc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743139863
https://github.com/su2code/SU2/pull/1124#issuecomment-743139863:184,Deployability,update,update,184,"Okok, I may also try to update gcc. The only issue is that it is on a server so I should do it locally and it may take a bit more time. I will test the merge and then, with more time, update gcc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743139863
https://github.com/su2code/SU2/pull/1124#issuecomment-743139863:143,Testability,test,test,143,"Okok, I may also try to update gcc. The only issue is that it is on a server so I should do it locally and it may take a bit more time. I will test the merge and then, with more time, update gcc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743139863
https://github.com/su2code/SU2/pull/1124#issuecomment-743391777:34,Testability,test,test,34,Ok I will now try to run two main test cases I have. But there were no conflicting files after the last commit so I do not think there should be any issue.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743391777
https://github.com/su2code/SU2/pull/1124#issuecomment-743747473:187,Deployability,integrat,integrate,187,"Everything seems to be fine. The test cases run smoothly. I have been following the conversation with Rocco, I will now contact him to understand how to avoid duplication and how to best integrate our works",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473
https://github.com/su2code/SU2/pull/1124#issuecomment-743747473:187,Integrability,integrat,integrate,187,"Everything seems to be fine. The test cases run smoothly. I have been following the conversation with Rocco, I will now contact him to understand how to avoid duplication and how to best integrate our works",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473
https://github.com/su2code/SU2/pull/1124#issuecomment-743747473:153,Safety,avoid,avoid,153,"Everything seems to be fine. The test cases run smoothly. I have been following the conversation with Rocco, I will now contact him to understand how to avoid duplication and how to best integrate our works",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473
https://github.com/su2code/SU2/pull/1124#issuecomment-743747473:33,Testability,test,test,33,"Everything seems to be fine. The test cases run smoothly. I have been following the conversation with Rocco, I will now contact him to understand how to avoid duplication and how to best integrate our works",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473
https://github.com/su2code/SU2/pull/1124#issuecomment-746305289:10,Energy Efficiency,charge,charged,10,Guilty as charged.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746305289
https://github.com/su2code/SU2/pull/1124#issuecomment-746398712:162,Testability,test,testcase,162,"The most critical part is the unsteady FSI, but that actually takes its time... You think it would be fine to compare the results after just few iterations for a testcase? We could use one of the simulations in the tutorial. Thanks for the interest in the youtube video!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746398712
https://github.com/su2code/SU2/pull/1124#issuecomment-746403241:99,Safety,detect,detect,99,"All testcases run for only a few steps, not entirely to convergence, the purpose is really just to detect change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746403241
https://github.com/su2code/SU2/pull/1124#issuecomment-746403241:4,Testability,test,testcases,4,"All testcases run for only a few steps, not entirely to convergence, the purpose is really just to detect change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746403241
https://github.com/su2code/SU2/pull/1124#issuecomment-746408443:112,Modifiability,coupling,coupling,112,"Ok, I will prepare a test case. I will take the Mach=0.1 case from the tutorial and change it slightly. Now the coupling between fluid and structure occurs after 100 steps, I will just couple them immediately. ; The only issue with #902 I see at the moment is with the file fsi_computation.py. The others are in separate folders so they should not create conflicts...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746408443
https://github.com/su2code/SU2/pull/1124#issuecomment-746408443:21,Testability,test,test,21,"Ok, I will prepare a test case. I will take the Mach=0.1 case from the tutorial and change it slightly. Now the coupling between fluid and structure occurs after 100 steps, I will just couple them immediately. ; The only issue with #902 I see at the moment is with the file fsi_computation.py. The others are in separate folders so they should not create conflicts...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746408443
https://github.com/su2code/SU2/issues/1125#issuecomment-742006798:216,Safety,avoid,avoid,216,"The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; That is my hypothesis anyway, anyone care to run some tests? :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742006798
https://github.com/su2code/SU2/issues/1125#issuecomment-742006798:4,Testability,log,logic,4,"The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; That is my hypothesis anyway, anyone care to run some tests? :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742006798
https://github.com/su2code/SU2/issues/1125#issuecomment-742006798:495,Testability,test,tests,495,"The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; That is my hypothesis anyway, anyone care to run some tests? :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742006798
https://github.com/su2code/SU2/issues/1125#issuecomment-742023920:14,Testability,test,test,14,"A good way to test this is to mirror the grid and run the full geometry. I guess the kink in the Cf will disappear for JST. That means that the symmetry boundary condition treatment can be improved, because you want to reproduce the solution for the full geometry exactly when using a symmetry plane.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742023920
https://github.com/su2code/SU2/issues/1125#issuecomment-742483637:889,Modifiability,variab,variables,889,"> The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; > I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; > That is my hypothesis anyway, anyone care to run some tests? :). Thanks you for the hint, I am running some tests using different values of the 4th order dissipation coefficient for the OneraM6 test case.; Lowering this value, as expected, increase the oscillations of the JST scheme. Anyway the problem is still there.; What looks strange to me is that this difference is present only for the skin friction coefficient and not for the other variables.; Is it possible that the problem is due to the computation of the Cf?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637
https://github.com/su2code/SU2/issues/1125#issuecomment-742483637:220,Safety,avoid,avoid,220,"> The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; > I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; > That is my hypothesis anyway, anyone care to run some tests? :). Thanks you for the hint, I am running some tests using different values of the 4th order dissipation coefficient for the OneraM6 test case.; Lowering this value, as expected, increase the oscillations of the JST scheme. Anyway the problem is still there.; What looks strange to me is that this difference is present only for the skin friction coefficient and not for the other variables.; Is it possible that the problem is due to the computation of the Cf?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637
https://github.com/su2code/SU2/issues/1125#issuecomment-742483637:6,Testability,log,logic,6,"> The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; > I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; > That is my hypothesis anyway, anyone care to run some tests? :). Thanks you for the hint, I am running some tests using different values of the 4th order dissipation coefficient for the OneraM6 test case.; Lowering this value, as expected, increase the oscillations of the JST scheme. Anyway the problem is still there.; What looks strange to me is that this difference is present only for the skin friction coefficient and not for the other variables.; Is it possible that the problem is due to the computation of the Cf?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637
https://github.com/su2code/SU2/issues/1125#issuecomment-742483637:501,Testability,test,tests,501,"> The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; > I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; > That is my hypothesis anyway, anyone care to run some tests? :). Thanks you for the hint, I am running some tests using different values of the 4th order dissipation coefficient for the OneraM6 test case.; Lowering this value, as expected, increase the oscillations of the JST scheme. Anyway the problem is still there.; What looks strange to me is that this difference is present only for the skin friction coefficient and not for the other variables.; Is it possible that the problem is due to the computation of the Cf?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637
https://github.com/su2code/SU2/issues/1125#issuecomment-742483637:555,Testability,test,tests,555,"> The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; > I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; > That is my hypothesis anyway, anyone care to run some tests? :). Thanks you for the hint, I am running some tests using different values of the 4th order dissipation coefficient for the OneraM6 test case.; Lowering this value, as expected, increase the oscillations of the JST scheme. Anyway the problem is still there.; What looks strange to me is that this difference is present only for the skin friction coefficient and not for the other variables.; Is it possible that the problem is due to the computation of the Cf?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637
https://github.com/su2code/SU2/issues/1125#issuecomment-742483637:641,Testability,test,test,641,"> The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; > I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; > That is my hypothesis anyway, anyone care to run some tests? :). Thanks you for the hint, I am running some tests using different values of the 4th order dissipation coefficient for the OneraM6 test case.; Lowering this value, as expected, increase the oscillations of the JST scheme. Anyway the problem is still there.; What looks strange to me is that this difference is present only for the skin friction coefficient and not for the other variables.; Is it possible that the problem is due to the computation of the Cf?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637
https://github.com/su2code/SU2/issues/1125#issuecomment-782058918:101,Deployability,configurat,configurations,101,I remember having the same problem when computing impinging jets flows on a hot surface in symmetric configurations. The maximum heat flux should be at the stagnation point of the jet (which is in the symmetry plane) but the simulation predicted the maximum at some distance from the symmetry. Mirroring the mesh and computing the full geometry led to the correct solution. ; I was using JST but didn't test with upwind schemes for comparison. I may do so if I have some time.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-782058918
https://github.com/su2code/SU2/issues/1125#issuecomment-782058918:101,Modifiability,config,configurations,101,I remember having the same problem when computing impinging jets flows on a hot surface in symmetric configurations. The maximum heat flux should be at the stagnation point of the jet (which is in the symmetry plane) but the simulation predicted the maximum at some distance from the symmetry. Mirroring the mesh and computing the full geometry led to the correct solution. ; I was using JST but didn't test with upwind schemes for comparison. I may do so if I have some time.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-782058918
https://github.com/su2code/SU2/issues/1125#issuecomment-782058918:236,Safety,predict,predicted,236,I remember having the same problem when computing impinging jets flows on a hot surface in symmetric configurations. The maximum heat flux should be at the stagnation point of the jet (which is in the symmetry plane) but the simulation predicted the maximum at some distance from the symmetry. Mirroring the mesh and computing the full geometry led to the correct solution. ; I was using JST but didn't test with upwind schemes for comparison. I may do so if I have some time.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-782058918
https://github.com/su2code/SU2/issues/1125#issuecomment-782058918:403,Testability,test,test,403,I remember having the same problem when computing impinging jets flows on a hot surface in symmetric configurations. The maximum heat flux should be at the stagnation point of the jet (which is in the symmetry plane) but the simulation predicted the maximum at some distance from the symmetry. Mirroring the mesh and computing the full geometry led to the correct solution. ; I was using JST but didn't test with upwind schemes for comparison. I may do so if I have some time.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-782058918
https://github.com/su2code/SU2/pull/1126#issuecomment-740089364:316,Availability,failure,failure,316,"Thanks for giving it a try but on both machines I get a segfault at roughly the same spot (following the screen output). Unfortunately the stack traces I get are somewhat useless (I literally get `??` on my private machine) and differ between machines so I cannot really say exactly where. At least the the point of failure on both machines is consistent ... that's really weird that the debugger ""bugs out"" here . Tested with your this branch on coupled_cht/incomp_2d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1126#issuecomment-740089364
https://github.com/su2code/SU2/pull/1126#issuecomment-740089364:415,Testability,Test,Tested,415,"Thanks for giving it a try but on both machines I get a segfault at roughly the same spot (following the screen output). Unfortunately the stack traces I get are somewhat useless (I literally get `??` on my private machine) and differ between machines so I cannot really say exactly where. At least the the point of failure on both machines is consistent ... that's really weird that the debugger ""bugs out"" here . Tested with your this branch on coupled_cht/incomp_2d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1126#issuecomment-740089364
https://github.com/su2code/SU2/pull/1126#issuecomment-740136083:205,Usability,Learn,Learn,205,"I guess I fixed it, somehow the two ""DonorInfo"" classes in different cpp files got mixed up. EDIT: Rightly so apparently: https://stackoverflow.com/questions/10671956/same-class-name-in-different-c-files; Learn something new every day.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1126#issuecomment-740136083
https://github.com/su2code/SU2/pull/1127#issuecomment-742531842:564,Integrability,depend,dependencies,564,"Thanks for the contribution! This is a much needed change. I wanted to perform a refactoring like this myself. The viscous (or turbulent) stress calculation is repeated many times in the code. Changing that calculation (e.g. adding QCR or UQ) currently requires changing many files. In my humble opinion, the stress tensor calculation should have its own class at the lowest level of the code, like the gas model (e.g. ideal gas) or the viscosity calculation (e.g. Sutherland's law). `CNumerics` classes need access to it, and `CNumerics` is meant to have minimal dependencies. But the stress isn't really ""numerics."" Its part of the underlying equations we're trying to solve. Changing the stress tensor isn't the same flavor as changing from JST to Roe. Because the stress is part of the underlying equations, it is sometimes needed in the `CSolver` classes. Previously, I've seen the stress tensor used in `CNSSolver` boundary conditions and axisymmetric source terms. That may still be true in the current version of the code. The best way to make sure that both `CSolver` and `CNumerics` have access to it is to make it an independent class. Unless, of course, we want to be manually setting the six tensor elements in `CNumerics`, like we do with primitive variables. I don't like that alternative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842
https://github.com/su2code/SU2/pull/1127#issuecomment-742531842:81,Modifiability,refactor,refactoring,81,"Thanks for the contribution! This is a much needed change. I wanted to perform a refactoring like this myself. The viscous (or turbulent) stress calculation is repeated many times in the code. Changing that calculation (e.g. adding QCR or UQ) currently requires changing many files. In my humble opinion, the stress tensor calculation should have its own class at the lowest level of the code, like the gas model (e.g. ideal gas) or the viscosity calculation (e.g. Sutherland's law). `CNumerics` classes need access to it, and `CNumerics` is meant to have minimal dependencies. But the stress isn't really ""numerics."" Its part of the underlying equations we're trying to solve. Changing the stress tensor isn't the same flavor as changing from JST to Roe. Because the stress is part of the underlying equations, it is sometimes needed in the `CSolver` classes. Previously, I've seen the stress tensor used in `CNSSolver` boundary conditions and axisymmetric source terms. That may still be true in the current version of the code. The best way to make sure that both `CSolver` and `CNumerics` have access to it is to make it an independent class. Unless, of course, we want to be manually setting the six tensor elements in `CNumerics`, like we do with primitive variables. I don't like that alternative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842
https://github.com/su2code/SU2/pull/1127#issuecomment-742531842:1263,Modifiability,variab,variables,1263,"Thanks for the contribution! This is a much needed change. I wanted to perform a refactoring like this myself. The viscous (or turbulent) stress calculation is repeated many times in the code. Changing that calculation (e.g. adding QCR or UQ) currently requires changing many files. In my humble opinion, the stress tensor calculation should have its own class at the lowest level of the code, like the gas model (e.g. ideal gas) or the viscosity calculation (e.g. Sutherland's law). `CNumerics` classes need access to it, and `CNumerics` is meant to have minimal dependencies. But the stress isn't really ""numerics."" Its part of the underlying equations we're trying to solve. Changing the stress tensor isn't the same flavor as changing from JST to Roe. Because the stress is part of the underlying equations, it is sometimes needed in the `CSolver` classes. Previously, I've seen the stress tensor used in `CNSSolver` boundary conditions and axisymmetric source terms. That may still be true in the current version of the code. The best way to make sure that both `CSolver` and `CNumerics` have access to it is to make it an independent class. Unless, of course, we want to be manually setting the six tensor elements in `CNumerics`, like we do with primitive variables. I don't like that alternative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842
https://github.com/su2code/SU2/pull/1127#issuecomment-742531842:71,Performance,perform,perform,71,"Thanks for the contribution! This is a much needed change. I wanted to perform a refactoring like this myself. The viscous (or turbulent) stress calculation is repeated many times in the code. Changing that calculation (e.g. adding QCR or UQ) currently requires changing many files. In my humble opinion, the stress tensor calculation should have its own class at the lowest level of the code, like the gas model (e.g. ideal gas) or the viscosity calculation (e.g. Sutherland's law). `CNumerics` classes need access to it, and `CNumerics` is meant to have minimal dependencies. But the stress isn't really ""numerics."" Its part of the underlying equations we're trying to solve. Changing the stress tensor isn't the same flavor as changing from JST to Roe. Because the stress is part of the underlying equations, it is sometimes needed in the `CSolver` classes. Previously, I've seen the stress tensor used in `CNSSolver` boundary conditions and axisymmetric source terms. That may still be true in the current version of the code. The best way to make sure that both `CSolver` and `CNumerics` have access to it is to make it an independent class. Unless, of course, we want to be manually setting the six tensor elements in `CNumerics`, like we do with primitive variables. I don't like that alternative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842
https://github.com/su2code/SU2/pull/1127#issuecomment-742531842:509,Security,access,access,509,"Thanks for the contribution! This is a much needed change. I wanted to perform a refactoring like this myself. The viscous (or turbulent) stress calculation is repeated many times in the code. Changing that calculation (e.g. adding QCR or UQ) currently requires changing many files. In my humble opinion, the stress tensor calculation should have its own class at the lowest level of the code, like the gas model (e.g. ideal gas) or the viscosity calculation (e.g. Sutherland's law). `CNumerics` classes need access to it, and `CNumerics` is meant to have minimal dependencies. But the stress isn't really ""numerics."" Its part of the underlying equations we're trying to solve. Changing the stress tensor isn't the same flavor as changing from JST to Roe. Because the stress is part of the underlying equations, it is sometimes needed in the `CSolver` classes. Previously, I've seen the stress tensor used in `CNSSolver` boundary conditions and axisymmetric source terms. That may still be true in the current version of the code. The best way to make sure that both `CSolver` and `CNumerics` have access to it is to make it an independent class. Unless, of course, we want to be manually setting the six tensor elements in `CNumerics`, like we do with primitive variables. I don't like that alternative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842
https://github.com/su2code/SU2/pull/1127#issuecomment-742531842:1098,Security,access,access,1098,"Thanks for the contribution! This is a much needed change. I wanted to perform a refactoring like this myself. The viscous (or turbulent) stress calculation is repeated many times in the code. Changing that calculation (e.g. adding QCR or UQ) currently requires changing many files. In my humble opinion, the stress tensor calculation should have its own class at the lowest level of the code, like the gas model (e.g. ideal gas) or the viscosity calculation (e.g. Sutherland's law). `CNumerics` classes need access to it, and `CNumerics` is meant to have minimal dependencies. But the stress isn't really ""numerics."" Its part of the underlying equations we're trying to solve. Changing the stress tensor isn't the same flavor as changing from JST to Roe. Because the stress is part of the underlying equations, it is sometimes needed in the `CSolver` classes. Previously, I've seen the stress tensor used in `CNSSolver` boundary conditions and axisymmetric source terms. That may still be true in the current version of the code. The best way to make sure that both `CSolver` and `CNumerics` have access to it is to make it an independent class. Unless, of course, we want to be manually setting the six tensor elements in `CNumerics`, like we do with primitive variables. I don't like that alternative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842
https://github.com/su2code/SU2/pull/1127#issuecomment-742629412:628,Modifiability,variab,variable,628,"Maybe CNumerics is not the perfect place, but it is good enough for government work (there are much more misplaced things in there). The ""everything is class"" OO approach applied to the lowest level of abstraction is... well I think it is terrible -- and it has taken me a mighty long time to get rid of it in CPoint and CVariable and to design alternative Numerics -- because:; - Boilerplate: Set this, get that, constructor, destructor;; - Thread safety: Those classes always end up having some mutable state that renders them thread-unsafe;; - Correctness: Many of the classes we have follow this paradigm of ""pass by member variable"" - I like to know what are the inputs and outputs of something just by looking at the signature;; - Slowww: Too much virtual;; - Unnecessary complexity: A case of using a canon to kill the mosquito, good code should be as simple as possible, if a function does the job then that is the level of abstraction we should use. My introduction to C++ was also the ""everything is class"", then one day I read ""From Mathematics to Generic Programming"" and well, I started liking C++ a whole lot more.; The standard template library is incredibly successful, and it ""just"" provides some containers and generic algorithms which are functions. That is what we need in SU2, some decent containers and generic algorithms to operate on them. OO and its patterns are very good high level tools to achieve encapsulation and to isolate code, which are very important for projects with millions of lines of code, but for low level things they are overkill. Sorry for the rant, I guess I have strong feelings about tiny classes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742629412
https://github.com/su2code/SU2/pull/1127#issuecomment-742629412:449,Safety,safe,safety,449,"Maybe CNumerics is not the perfect place, but it is good enough for government work (there are much more misplaced things in there). The ""everything is class"" OO approach applied to the lowest level of abstraction is... well I think it is terrible -- and it has taken me a mighty long time to get rid of it in CPoint and CVariable and to design alternative Numerics -- because:; - Boilerplate: Set this, get that, constructor, destructor;; - Thread safety: Those classes always end up having some mutable state that renders them thread-unsafe;; - Correctness: Many of the classes we have follow this paradigm of ""pass by member variable"" - I like to know what are the inputs and outputs of something just by looking at the signature;; - Slowww: Too much virtual;; - Unnecessary complexity: A case of using a canon to kill the mosquito, good code should be as simple as possible, if a function does the job then that is the level of abstraction we should use. My introduction to C++ was also the ""everything is class"", then one day I read ""From Mathematics to Generic Programming"" and well, I started liking C++ a whole lot more.; The standard template library is incredibly successful, and it ""just"" provides some containers and generic algorithms which are functions. That is what we need in SU2, some decent containers and generic algorithms to operate on them. OO and its patterns are very good high level tools to achieve encapsulation and to isolate code, which are very important for projects with millions of lines of code, but for low level things they are overkill. Sorry for the rant, I guess I have strong feelings about tiny classes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742629412
https://github.com/su2code/SU2/pull/1127#issuecomment-742629412:536,Safety,unsafe,unsafe,536,"Maybe CNumerics is not the perfect place, but it is good enough for government work (there are much more misplaced things in there). The ""everything is class"" OO approach applied to the lowest level of abstraction is... well I think it is terrible -- and it has taken me a mighty long time to get rid of it in CPoint and CVariable and to design alternative Numerics -- because:; - Boilerplate: Set this, get that, constructor, destructor;; - Thread safety: Those classes always end up having some mutable state that renders them thread-unsafe;; - Correctness: Many of the classes we have follow this paradigm of ""pass by member variable"" - I like to know what are the inputs and outputs of something just by looking at the signature;; - Slowww: Too much virtual;; - Unnecessary complexity: A case of using a canon to kill the mosquito, good code should be as simple as possible, if a function does the job then that is the level of abstraction we should use. My introduction to C++ was also the ""everything is class"", then one day I read ""From Mathematics to Generic Programming"" and well, I started liking C++ a whole lot more.; The standard template library is incredibly successful, and it ""just"" provides some containers and generic algorithms which are functions. That is what we need in SU2, some decent containers and generic algorithms to operate on them. OO and its patterns are very good high level tools to achieve encapsulation and to isolate code, which are very important for projects with millions of lines of code, but for low level things they are overkill. Sorry for the rant, I guess I have strong feelings about tiny classes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742629412
https://github.com/su2code/SU2/pull/1127#issuecomment-742629412:859,Usability,simpl,simple,859,"Maybe CNumerics is not the perfect place, but it is good enough for government work (there are much more misplaced things in there). The ""everything is class"" OO approach applied to the lowest level of abstraction is... well I think it is terrible -- and it has taken me a mighty long time to get rid of it in CPoint and CVariable and to design alternative Numerics -- because:; - Boilerplate: Set this, get that, constructor, destructor;; - Thread safety: Those classes always end up having some mutable state that renders them thread-unsafe;; - Correctness: Many of the classes we have follow this paradigm of ""pass by member variable"" - I like to know what are the inputs and outputs of something just by looking at the signature;; - Slowww: Too much virtual;; - Unnecessary complexity: A case of using a canon to kill the mosquito, good code should be as simple as possible, if a function does the job then that is the level of abstraction we should use. My introduction to C++ was also the ""everything is class"", then one day I read ""From Mathematics to Generic Programming"" and well, I started liking C++ a whole lot more.; The standard template library is incredibly successful, and it ""just"" provides some containers and generic algorithms which are functions. That is what we need in SU2, some decent containers and generic algorithms to operate on them. OO and its patterns are very good high level tools to achieve encapsulation and to isolate code, which are very important for projects with millions of lines of code, but for low level things they are overkill. Sorry for the rant, I guess I have strong feelings about tiny classes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742629412
https://github.com/su2code/SU2/pull/1127#issuecomment-742663910:361,Performance,perform,perform,361,"Ah! uff glad we agree (I do pay attention to what you think).; I think the first concern is more or less covered, it can always be cut and pasted somewhere else, we have sgs and wall models floating around, maybe we should have a physical_models directory.; Regarding your second point I would just have the stressTensor function deciding what modifications to perform, QCR and UQ, based on input parameters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742663910
https://github.com/su2code/SU2/pull/1127#issuecomment-742681000:152,Deployability,update,updated,152,"I just poked around in `flow_sources.cpp` and `CNSSolver`. All the places where I remember there being a hard-coded stress tensor calculation have been updated in this PR. I couldn't find any missing calculations. Great work. In `CNSSolver::AddDynamicGridResidualContribution`, there is still a hardcoded Jacobian calculation. That will break if the stress tensor calculation changes independently, without also changing the Jacobian calculation. I don't think that affects this PR. I just wanted to document that here, in case later changes are made.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742681000
https://github.com/su2code/SU2/pull/1127#issuecomment-743033388:78,Energy Efficiency,adapt,adapted,78,"I searched for `TWO3` in the project and this revealed two other locations. I adapted the one in `CSolver.cpp` in commit 64bd077. There is another one in `python_wrapper_structure.cpp`, lines 400-415. There I hesitate a bit because in the `incompressible` case, `div_vel` is manually set to zero. As long as the solver has not converged, this has an effect, right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743033388
https://github.com/su2code/SU2/pull/1127#issuecomment-743033388:78,Modifiability,adapt,adapted,78,"I searched for `TWO3` in the project and this revealed two other locations. I adapted the one in `CSolver.cpp` in commit 64bd077. There is another one in `python_wrapper_structure.cpp`, lines 400-415. There I hesitate a bit because in the `incompressible` case, `div_vel` is manually set to zero. As long as the solver has not converged, this has an effect, right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743033388
https://github.com/su2code/SU2/pull/1127#issuecomment-743037066:52,Deployability,update,update,52,"I'll wait for the regression tests to fail and then update `serial_regression.py` (and hybrid, parallel) for the `rans_uq` tests.; EDIT: Also `stat_fsi` in the hybrid and `poiseuille_profile` in the serial regression tests were affected.; EDIT: And `poiseuille_profile` in parallel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743037066
https://github.com/su2code/SU2/pull/1127#issuecomment-743037066:29,Testability,test,tests,29,"I'll wait for the regression tests to fail and then update `serial_regression.py` (and hybrid, parallel) for the `rans_uq` tests.; EDIT: Also `stat_fsi` in the hybrid and `poiseuille_profile` in the serial regression tests were affected.; EDIT: And `poiseuille_profile` in parallel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743037066
https://github.com/su2code/SU2/pull/1127#issuecomment-743037066:123,Testability,test,tests,123,"I'll wait for the regression tests to fail and then update `serial_regression.py` (and hybrid, parallel) for the `rans_uq` tests.; EDIT: Also `stat_fsi` in the hybrid and `poiseuille_profile` in the serial regression tests were affected.; EDIT: And `poiseuille_profile` in parallel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743037066
https://github.com/su2code/SU2/pull/1127#issuecomment-743037066:217,Testability,test,tests,217,"I'll wait for the regression tests to fail and then update `serial_regression.py` (and hybrid, parallel) for the `rans_uq` tests.; EDIT: Also `stat_fsi` in the hybrid and `poiseuille_profile` in the serial regression tests were affected.; EDIT: And `poiseuille_profile` in parallel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743037066
https://github.com/su2code/SU2/pull/1127#issuecomment-743107420:8,Testability,test,tests,8,Now the tests are fine. Can I merge?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743107420
https://github.com/su2code/SU2/pull/1127#issuecomment-743119468:333,Modifiability,variab,variable,333,"You can replace the computation in python_wrapper_structure.cpp, the benefit of having a central definition outweighs the velocity divergence thing.; Also the way that method is used expects a reasonably converged solution, so it should not make a big difference.; Moreover that assumption for incompressible flow is not correct for variable density flows, so yes please replace it if you can.; I guess the TWO3 had a purpose in the end xD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743119468
https://github.com/su2code/SU2/pull/1127#issuecomment-743131314:437,Performance,perform,performs,437,"I observed that sometimes only the product of the stress tensor with a vector is of interest, e.g.:. CNumerics::ComputeStressTensor(nDim, Tau, ...); for (iDim = 0; iDim < nDim; iDim++) {; for (jDim = 0 ; jDim < nDim; jDim++) {; someforce[iDim] += Tau[iDim][jDim]*Normal[jDim];; }; }; // never use Tau again. Do you think it is reasonable to have another function, which takes `someforce` and `Normal` instead of `Tau` as an argument and performs the addition? This would save from allocating `Tau` and going through two pairs of nested `for` loops.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743131314
https://github.com/su2code/SU2/pull/1129#issuecomment-743123950:42,Energy Efficiency,power,power,42,"Dark mode?; ""Is it possible to learn this power?""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743123950
https://github.com/su2code/SU2/pull/1129#issuecomment-743123950:31,Usability,learn,learn,31,"Dark mode?; ""Is it possible to learn this power?""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743123950
https://github.com/su2code/SU2/pull/1129#issuecomment-743130745:54,Energy Efficiency,power,power,54,"> ; > ; > Dark mode?; > ""Is it possible to learn this power?"". 🧙 Sure, if you just go to your front page (i.e. just github.com) there should be a big button directly on the right side. ; Or Settings->Appearance->Dark. Enjoy :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743130745
https://github.com/su2code/SU2/pull/1129#issuecomment-743130745:43,Usability,learn,learn,43,"> ; > ; > Dark mode?; > ""Is it possible to learn this power?"". 🧙 Sure, if you just go to your front page (i.e. just github.com) there should be a big button directly on the right side. ; Or Settings->Appearance->Dark. Enjoy :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743130745
https://github.com/su2code/SU2/pull/1129#issuecomment-743153471:152,Testability,test,testcases,152,What is the equivalent of DUAL_TIME in the TIME / OUTER / INNER versions we have now? TIME?; (so that we can auto-replace the stuff that is used in the testcases without breaking things too much). With all this deprecation the next version number should probably be 7.1.0 even if I would call these things bug fixes from v6.2 to v7.0.; Going 7.0.8 -> 7.1.0 also saves the awkward 7.0.9 -> 7.1.0 (which would make people wonder if we know how version numbers work).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743153471
https://github.com/su2code/SU2/pull/1129#issuecomment-743185037:120,Testability,test,testcase,120,Well thanks for fixing the typo. . It seems we use `OUTPUT_WRT_FREQ` for steady and unsteady simulations. Therefore the testcase cleanup was a bit more involved. For steady cases `WRT_SOL_FREQ` had to be replaced and for unsteady ones `WRT_SOL_FREQ_DUALTIME` to follow the author's intention... and I have the feeling that nearly every testcase had these options in it. . I have to admit I don't understand why 7.0.9 would be awkward 🤔,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743185037
https://github.com/su2code/SU2/pull/1129#issuecomment-743185037:336,Testability,test,testcase,336,Well thanks for fixing the typo. . It seems we use `OUTPUT_WRT_FREQ` for steady and unsteady simulations. Therefore the testcase cleanup was a bit more involved. For steady cases `WRT_SOL_FREQ` had to be replaced and for unsteady ones `WRT_SOL_FREQ_DUALTIME` to follow the author's intention... and I have the feeling that nearly every testcase had these options in it. . I have to admit I don't understand why 7.0.9 would be awkward 🤔,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743185037
https://github.com/su2code/SU2/pull/1129#issuecomment-743360152:84,Testability,test,testcase,84,yep :) maybe still today if I can figure out how and where I broke the disc_adj_fsi testcase ... ; Note to self: Read what people did before writing things,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743360152
https://github.com/su2code/SU2/pull/1129#issuecomment-743413892:38,Testability,Test,Testcases,38,As there were 256 WRT_CON_FREQ in the Testcases i removed that using:; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/WRT_CON_FREQ/d' {} \+`; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/Writing convergence history frequency/d' {} \+`,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743413892
https://github.com/su2code/SU2/pull/1129#issuecomment-743453197:939,Testability,test,testcases,939,"@TobiKattmann I tried to keep the option where the default value was not used.; ```python; import os. rootDir = ""."". old = ""WRT_CON_FREQ""; new = ""SCREEN_WRT_FREQ_INNER""; default = 1. for dirName, subdirList, fileList in os.walk(rootDir):; ; for fileName in fileList:; if not "".cfg"" in fileName:; continue. with open(os.path.join(rootDir,dirName,fileName),""r"") as f:; lines = f.readlines(). newLines = []; i = 0;; while i < len(lines)-1:; if lines[i+1].startswith(old):; if not lines[i].startswith(""%"") or len(lines[i]) < 5:; newLines.append(lines[i]). val = lines[i+1].split(""="")[1]; ; if int(val) != default:; newLines.append(new+""=""+val); i += 1; else:; newLines.append(lines[i]); #end; i += 1; #end. if not lines[-1].startswith(old):; newLines.append(lines[-1]). with open(os.path.join(rootDir,dirName,fileName),""w"") as f:; f.writelines(newLines); #end; #end; ```. That seems to have confused git, maybe because of line endings on some testcases or something.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743453197
https://github.com/su2code/SU2/pull/1129#issuecomment-743477032:850,Availability,down,down,850,"I was too lazy on that. Sorry, I should have done that that in the first place :disappointed: . As there were only a few non-defaults I would have gone with:; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/WRT_CON_FREQ= 1/d' {} \+`; and changing the rest manually (exercising the muscle memory a bit), but that handy script might get some additional use for other options ;). EDIT: This suggestion above is bad how I just noticed -> `sed` here deletes each line that contains `WRT_CON_FREQ= 1` which rightfully contains `WRT_CON_FREQ= 10` etc! One has to wrap the search expression in `\b` to only deletes lines that exactly match. The command becomes:; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/\bWRT_CON_FREQ= 1\b/d' {} \+`. If you have some more options to deprecate in mind I can take care of some. Maybe I try to hunt down a few more over the weekend :bow_and_arrow:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743477032
https://github.com/su2code/SU2/pull/1129#issuecomment-743477032:566,Integrability,wrap,wrap,566,"I was too lazy on that. Sorry, I should have done that that in the first place :disappointed: . As there were only a few non-defaults I would have gone with:; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/WRT_CON_FREQ= 1/d' {} \+`; and changing the rest manually (exercising the muscle memory a bit), but that handy script might get some additional use for other options ;). EDIT: This suggestion above is bad how I just noticed -> `sed` here deletes each line that contains `WRT_CON_FREQ= 1` which rightfully contains `WRT_CON_FREQ= 10` etc! One has to wrap the search expression in `\b` to only deletes lines that exactly match. The command becomes:; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/\bWRT_CON_FREQ= 1\b/d' {} \+`. If you have some more options to deprecate in mind I can take care of some. Maybe I try to hunt down a few more over the weekend :bow_and_arrow:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743477032
https://github.com/su2code/SU2/pull/1129#issuecomment-743480026:73,Testability,test,testcases,73,"> That seems to have confused git, maybe because of line endings on some testcases or something. you prob mean that some files a ""rewritten"" completely. Hm seems to happen whenever a file ends on WRT_CONV_FREQ and does not have the default value.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743480026
https://github.com/su2code/SU2/pull/1129#issuecomment-744782549:99,Performance,optimiz,optimize,99,"Cus yolo.; I have no idea how much that stuff matters to the repo size, so best not to prematurely optimize.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-744782549
https://github.com/su2code/SU2/issues/1130#issuecomment-751865288:624,Availability,error,error,624,"@vdweide : I think our goal was to look again after the general changes for scalar transport equations from #777 were added. That PR was eventually closed, as there are other efforts that will supersede it when they are submitted. In particular, the work on combustion modeling (flamelets) should include all of those changes and more. Maybe @bigfooted has more info about the latest status and if we can expect a PR soon (prob after the holidays either way, I am guessing)? . I think that if it essentially needs to be reimplemented, then it makes sense to wait for the structural changes. For now, we should just throw an error if someone tries to run with LM, since it is not working.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1130#issuecomment-751865288
https://github.com/su2code/SU2/issues/1130#issuecomment-755395168:359,Usability,simpl,simple,359,"@lorenzob95 we talked about this issue in our weekly developers meeting.; The current implementation of LM in the code is not stable enough and it has known bugs, so we will not re enable it for now.; A revised implementation by @vdweide exist in branch https://github.com/su2code/SU2/tree/feature_LM_model, but this is based on SU2 v6.2, it has been used on simple problems, convergence is not ideal on more complicated ones.; The decision is to wait for some developments that will make it easier to bring this revised implementation into version 7 (which is different in many ways from 6).; You can follow this issue to know when this gets implemented, it will probably take a few months.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1130#issuecomment-755395168
https://github.com/su2code/SU2/issues/1130#issuecomment-755440165:200,Availability,avail,available,200,"I suggest that you incorporate Wray-Agarwal (WA) one equation RANS model listed on NASA TMR in SU2. NASA is planning to list two equation WA-gamma transition model on NASA TMR next month. WA model is available on Github and WA model will also be posted on Github as source code. If you need any additional information or help, let me know.; Ramesh Agarwal; ________________________________; From: Pedro Gomes <notifications@github.com>; Sent: Wednesday, January 6, 2021 10:13 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Agarwal, Ramesh <rka@wustl.edu>; Comment <comment@noreply.github.com>; Subject: Re: [su2code/SU2] Info on current status of LM transition model in SU2 (#1130). @lorenzob95<https://github.com/lorenzob95> we talked about this issue in our weekly developers meeting.; The current implementation of LM in the code is not stable enough and it has known bugs, so we will not re enable it for now.; A revised implementation by @vdweide<https://github.com/vdweide> exist in branch https://github.com/su2code/SU2/tree/feature_LM_model, but this is based on SU2 v6.2, it has been used on simple problems, convergence is not ideal on more complicated ones.; The decision is to wait for some developments that will make it easier to bring this revised implementation into version 7 (which is different in many ways from 6).; You can follow this issue to know when this gets implemented, it will probably take a few months. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/1130#issuecomment-755395168>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ASK3WAEG3LW3AZJRUPORJPDSYSD2VANCNFSM4UVYXAAA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1130#issuecomment-755440165
https://github.com/su2code/SU2/issues/1130#issuecomment-755440165:1104,Usability,simpl,simple,1104,"I suggest that you incorporate Wray-Agarwal (WA) one equation RANS model listed on NASA TMR in SU2. NASA is planning to list two equation WA-gamma transition model on NASA TMR next month. WA model is available on Github and WA model will also be posted on Github as source code. If you need any additional information or help, let me know.; Ramesh Agarwal; ________________________________; From: Pedro Gomes <notifications@github.com>; Sent: Wednesday, January 6, 2021 10:13 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Agarwal, Ramesh <rka@wustl.edu>; Comment <comment@noreply.github.com>; Subject: Re: [su2code/SU2] Info on current status of LM transition model in SU2 (#1130). @lorenzob95<https://github.com/lorenzob95> we talked about this issue in our weekly developers meeting.; The current implementation of LM in the code is not stable enough and it has known bugs, so we will not re enable it for now.; A revised implementation by @vdweide<https://github.com/vdweide> exist in branch https://github.com/su2code/SU2/tree/feature_LM_model, but this is based on SU2 v6.2, it has been used on simple problems, convergence is not ideal on more complicated ones.; The decision is to wait for some developments that will make it easier to bring this revised implementation into version 7 (which is different in many ways from 6).; You can follow this issue to know when this gets implemented, it will probably take a few months. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/1130#issuecomment-755395168>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ASK3WAEG3LW3AZJRUPORJPDSYSD2VANCNFSM4UVYXAAA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1130#issuecomment-755440165
https://github.com/su2code/SU2/issues/1130#issuecomment-755507360:94,Availability,avail,available,94,"The WA RANS models (WA2017m and WA2018) source code for OpenFOAM and UDF for ANSYS Fluent are available on:; https://github.com/xuhanwustl/WrayAgarwalModels. We have not put the WA-gamma transition model on github right now. We can do it quickly within a week. Ramesh Agarwal. ________________________________; From: Pedro Gomes <notifications@github.com>; Sent: Wednesday, January 6, 2021 12:31 PM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Agarwal, Ramesh <rka@wustl.edu>; Mention <mention@noreply.github.com>; Subject: Re: [su2code/SU2] Info on current status of LM transition model in SU2 (#1130). Thank you for the recommendation @rkagarwal1000<https://github.com/rkagarwal1000>, traditionally the way that features are added to SU2 is through the contributions of volunteers that are interested in using those features, rather than via a centrally organized effort.; These new developments we are waiting for to re-implement LM should also facilitate the implementation of other models, if you would like to leave a link to the Github repository you mentioned, it might make it easier for someone interested in adding new transition models to SU2. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/1130#issuecomment-755484345>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ASK3WAHC6Q3BL7JYJUKIBZTSYSUADANCNFSM4UVYXAAA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1130#issuecomment-755507360
https://github.com/su2code/SU2/issues/1130#issuecomment-755533248:33,Availability,down,download,33,"I am working from home. I cannot download the paper. Could you send me the pdf? Thanks.; Ramesh Agarwal; ________________________________; From: lorenzob95 <notifications@github.com>; Sent: Wednesday, January 6, 2021 12:58 PM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Agarwal, Ramesh <rka@wustl.edu>; Mention <mention@noreply.github.com>; Subject: Re: [su2code/SU2] Info on current status of LM transition model in SU2 (#1130). @rkagarwal1000<https://github.com/rkagarwal1000> I'm studying a case like this https://aip.scitation.org/doi/full/10.1063/1.4896748. I don't want to change the subject of the discussion too much nor to use your time or your student's, so if you are interested I can provide the mesh file, but even just your hunch would be really appreciated. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/1130#issuecomment-755518856>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ASK3WACTDNUXABX2OU7VL33SYSXD5ANCNFSM4UVYXAAA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1130#issuecomment-755533248
https://github.com/su2code/SU2/pull/1131#issuecomment-744048522:656,Safety,avoid,avoid,656,"Hello @pcarruscag, thank you for your suggestions. > Nice to have this addition to the code, I don't know much about CGNS so these are maybe dumb questions:; > ; > * Will this also work to output meshes after deformation with SU2_DEF? I am guessing not because we had that issue with where to put the FFD information. We did not think to output CGNS meshes with SU2_DEF yet. Maybe it is a development that we can consider.; For the moment, it works just to output the flow-field in CGNS format running SU2_SOL or SU2_CFD. > * Is it possible to write the file by sections? i.e. instead of gathering all the data in a single node do a number of Send/Recv to avoid running out of memory for large problems. I was thinking about problems with the memory. Maybe one possibility is to make each process to write a CGNS file and then merge them into one file (but I have never tried it).; The CGNS library currently embedded with SU2 does not support the parallel writing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1131#issuecomment-744048522
https://github.com/su2code/SU2/pull/1131#issuecomment-745160184:11,Deployability,configurat,configuration,11,"- having a configuration switch to the class so that each process write its own file should work really well (already seen this stuff in other cfd packages) : it is very fast and not too memory consuming. - To cope with high memory usage, the only other solution is to enable parallel cgns in su2. But the problem may be that it requires hdf5 parallel library. @pcarruscag do you know if it is a licence issue or just technical difficulties (hdf5 use cmake and not meson) that prevent adding hdf5 to the external libraries ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1131#issuecomment-745160184
https://github.com/su2code/SU2/pull/1131#issuecomment-745160184:11,Modifiability,config,configuration,11,"- having a configuration switch to the class so that each process write its own file should work really well (already seen this stuff in other cfd packages) : it is very fast and not too memory consuming. - To cope with high memory usage, the only other solution is to enable parallel cgns in su2. But the problem may be that it requires hdf5 parallel library. @pcarruscag do you know if it is a licence issue or just technical difficulties (hdf5 use cmake and not meson) that prevent adding hdf5 to the external libraries ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1131#issuecomment-745160184
https://github.com/su2code/SU2/pull/1132#issuecomment-743749639:40,Deployability,update,update,40,"Thank you for letting us know about the update.; We will discuss whether to update or to provide both versions as BC and BCM, as described in the turbulence models page (to avoid any doubt).; If you would like to join us, the meetings take place Wednesdays at 4pm CET https://meet.jit.si/SU2_DevMeeting; By the way, are you aware of any other issues with the implementation, or have you compared the results with other references? (I suppose you are the best person to ask).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743749639
https://github.com/su2code/SU2/pull/1132#issuecomment-743749639:76,Deployability,update,update,76,"Thank you for letting us know about the update.; We will discuss whether to update or to provide both versions as BC and BCM, as described in the turbulence models page (to avoid any doubt).; If you would like to join us, the meetings take place Wednesdays at 4pm CET https://meet.jit.si/SU2_DevMeeting; By the way, are you aware of any other issues with the implementation, or have you compared the results with other references? (I suppose you are the best person to ask).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743749639
https://github.com/su2code/SU2/pull/1132#issuecomment-743749639:173,Safety,avoid,avoid,173,"Thank you for letting us know about the update.; We will discuss whether to update or to provide both versions as BC and BCM, as described in the turbulence models page (to avoid any doubt).; If you would like to join us, the meetings take place Wednesdays at 4pm CET https://meet.jit.si/SU2_DevMeeting; By the way, are you aware of any other issues with the implementation, or have you compared the results with other references? (I suppose you are the best person to ask).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743749639
https://github.com/su2code/SU2/pull/1132#issuecomment-743751685:131,Availability,avail,available,131,"Hello Pedro,; I am one of the developers of the BC model itself, and I have implemented it to the SU2 back in 2016 which was first available to the users on v5 ""Raven"" . We updated the model based on the suggestions of some experts in the field, and created the BCM version several months ago. I am using the updated version for months on my pc without any issues.; By the way, for the regression tests, I will need help as I do not have a linux machine to work with; can not compile the code properly...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743751685
https://github.com/su2code/SU2/pull/1132#issuecomment-743751685:173,Deployability,update,updated,173,"Hello Pedro,; I am one of the developers of the BC model itself, and I have implemented it to the SU2 back in 2016 which was first available to the users on v5 ""Raven"" . We updated the model based on the suggestions of some experts in the field, and created the BCM version several months ago. I am using the updated version for months on my pc without any issues.; By the way, for the regression tests, I will need help as I do not have a linux machine to work with; can not compile the code properly...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743751685
https://github.com/su2code/SU2/pull/1132#issuecomment-743751685:309,Deployability,update,updated,309,"Hello Pedro,; I am one of the developers of the BC model itself, and I have implemented it to the SU2 back in 2016 which was first available to the users on v5 ""Raven"" . We updated the model based on the suggestions of some experts in the field, and created the BCM version several months ago. I am using the updated version for months on my pc without any issues.; By the way, for the regression tests, I will need help as I do not have a linux machine to work with; can not compile the code properly...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743751685
https://github.com/su2code/SU2/pull/1132#issuecomment-743751685:397,Testability,test,tests,397,"Hello Pedro,; I am one of the developers of the BC model itself, and I have implemented it to the SU2 back in 2016 which was first available to the users on v5 ""Raven"" . We updated the model based on the suggestions of some experts in the field, and created the BCM version several months ago. I am using the updated version for months on my pc without any issues.; By the way, for the regression tests, I will need help as I do not have a linux machine to work with; can not compile the code properly...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743751685
https://github.com/su2code/SU2/pull/1132#issuecomment-743926162:754,Deployability,update,updated,754,"> as described in the turbulence models page. @pcarruscag I am unaware of this page (not the [website](https://su2code.github.io/docs_v7/Theory/#turbulence-modeling), not a [su2code team](https://github.com/orgs/su2code/teams) :shrug: ). Can you tell me where to find it. > By the way, for the regression tests, I will need help as I do not have a linux machine to work with; can not compile the code properly... @sametcaka just the `Schubauer Klebanoff` Testcase is failing for serial and parallel regression and [tutorials](https://su2code.github.io/tutorials/Transitional_Flat_Plate/) which you can lookup via the checks-tab above. It would be a matter of updating the regression test values for this very case (so no big deal) if the results for the updated code are what you expect.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743926162
https://github.com/su2code/SU2/pull/1132#issuecomment-743926162:305,Testability,test,tests,305,"> as described in the turbulence models page. @pcarruscag I am unaware of this page (not the [website](https://su2code.github.io/docs_v7/Theory/#turbulence-modeling), not a [su2code team](https://github.com/orgs/su2code/teams) :shrug: ). Can you tell me where to find it. > By the way, for the regression tests, I will need help as I do not have a linux machine to work with; can not compile the code properly... @sametcaka just the `Schubauer Klebanoff` Testcase is failing for serial and parallel regression and [tutorials](https://su2code.github.io/tutorials/Transitional_Flat_Plate/) which you can lookup via the checks-tab above. It would be a matter of updating the regression test values for this very case (so no big deal) if the results for the updated code are what you expect.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743926162
https://github.com/su2code/SU2/pull/1132#issuecomment-743926162:455,Testability,Test,Testcase,455,"> as described in the turbulence models page. @pcarruscag I am unaware of this page (not the [website](https://su2code.github.io/docs_v7/Theory/#turbulence-modeling), not a [su2code team](https://github.com/orgs/su2code/teams) :shrug: ). Can you tell me where to find it. > By the way, for the regression tests, I will need help as I do not have a linux machine to work with; can not compile the code properly... @sametcaka just the `Schubauer Klebanoff` Testcase is failing for serial and parallel regression and [tutorials](https://su2code.github.io/tutorials/Transitional_Flat_Plate/) which you can lookup via the checks-tab above. It would be a matter of updating the regression test values for this very case (so no big deal) if the results for the updated code are what you expect.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743926162
https://github.com/su2code/SU2/pull/1132#issuecomment-743926162:683,Testability,test,test,683,"> as described in the turbulence models page. @pcarruscag I am unaware of this page (not the [website](https://su2code.github.io/docs_v7/Theory/#turbulence-modeling), not a [su2code team](https://github.com/orgs/su2code/teams) :shrug: ). Can you tell me where to find it. > By the way, for the regression tests, I will need help as I do not have a linux machine to work with; can not compile the code properly... @sametcaka just the `Schubauer Klebanoff` Testcase is failing for serial and parallel regression and [tutorials](https://su2code.github.io/tutorials/Transitional_Flat_Plate/) which you can lookup via the checks-tab above. It would be a matter of updating the regression test values for this very case (so no big deal) if the results for the updated code are what you expect.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743926162
https://github.com/su2code/SU2/pull/1132#issuecomment-755500463:104,Deployability,update,update,104,To keep the authorship and traceability of the changes I will merge this with the failing testcases and update them in a separate PR (since we have to do other transition-related fixes).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-755500463
https://github.com/su2code/SU2/pull/1132#issuecomment-755500463:90,Testability,test,testcases,90,To keep the authorship and traceability of the changes I will merge this with the failing testcases and update them in a separate PR (since we have to do other transition-related fixes).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-755500463
https://github.com/su2code/SU2/pull/1133#issuecomment-744084675:97,Deployability,release,released,97,It works with gnu/5.3.0 and openMPI/3.1.6 (@bigfooted) ... but I just saw that openMPI/3.1.6 was released early 2020 so it is not that ancient anyway👴,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1133#issuecomment-744084675
https://github.com/su2code/SU2/pull/1133#issuecomment-745289502:29,Deployability,update,update,29,Is it ok if I add a MeDiPack update for const correctness of the scatter routines to this PR?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1133#issuecomment-745289502
https://github.com/su2code/SU2/pull/1133#issuecomment-745289502:73,Integrability,rout,routines,73,Is it ok if I add a MeDiPack update for const correctness of the scatter routines to this PR?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1133#issuecomment-745289502
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:168,Deployability,install,installed,168,"Hi, I'm still bumping into the same issue on running `ninja` it seems (though I might be missing something, as I'm not so familiar with meson compared to autotools). I installed GCC 8.22 to my conda environment using:. Then I prefixed the meson command with the new compiler location using:; ```; CC=/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 --reconfigure --wipe; ``` . In case it helps, here was the resulting summary:; ```; The Meson build system; Version: 0.54.999; Source dir: /home/user/programs/su2/SU2_src; Build dir: /home/user/programs/su2/SU2_src/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/work/A/intel/2018_update2/compilers_and_libraries_2018.2.199/linux/mkl/bin/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/work/A/intel/2018_update2/compilers_and_libraries_2018.2.199/linux/mkl/bin/pkgconfig'; Project name: SU2; Project version: 7.0.8 ""Blackbird""; Using 'CC' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc'; Using 'CFLAGS' from environment with value: '-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/user/anaconda3/include'; Using 'LDFLAGS' from environment with value: '-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; Using 'AR' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-ar'; Using 'LDFLAGS' from environment with value: '-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4509,Deployability,install,install,4509,"/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$P",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4585,Deployability,install,install,4585,"NDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4716,Deployability,Release,Release,4716,": c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'S",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4789,Deployability,Configurat,Configuration,4789,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:5171,Deployability,update,update,5171,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:5265,Deployability,configurat,configuration,5265,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:5516,Deployability,install,install,5516,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:5540,Deployability,install,install,5540,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4080,Integrability,depend,dependency,4080,"nda3/bin/x86_64-conda_cos6-linux-gnu-gcc ld.bfd 2.33.1; Using 'AR' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-ar'; Using 'LDFLAGS' from environment with value: '-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4238,Integrability,depend,dependency,4238,"g 'LDFLAGS' from environment with value: '-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4279,Integrability,Message,Message,4279,"-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these li",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4367,Integrability,Message,Message,4367,"able-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4459,Integrability,Depend,Dependency,4459,"/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$P",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4598,Integrability,Message,Message,4598,": c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'S",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:5007,Integrability,Wrap,Wrapper,5007,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:3909,Modifiability,config,config,3909,"ude'; C compiler for the host machine: /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc (gcc 7.3.0 ""x86_64-conda_cos6-linux-gnu-gcc (crosstool-NG 1.23.0.449-a04d0) 7.3.0""); C linker for the host machine: /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc ld.bfd 2.33.1; Using 'AR' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-ar'; Using 'LDFLAGS' from environment with value: '-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; --------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:3946,Modifiability,config,config,3946,"ude'; C compiler for the host machine: /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc (gcc 7.3.0 ""x86_64-conda_cos6-linux-gnu-gcc (crosstool-NG 1.23.0.449-a04d0) 7.3.0""); C linker for the host machine: /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc ld.bfd 2.33.1; Using 'AR' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-ar'; Using 'LDFLAGS' from environment with value: '-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; --------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4789,Modifiability,Config,Configuration,4789,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:5155,Modifiability,variab,variables,5155,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:5265,Modifiability,config,configuration,5265,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311
https://github.com/su2code/SU2/issues/1134#issuecomment-744503849:3,Availability,fault,fault,3,"My fault - I realised that I only specified the CC variable, and not the CXX variable too. For anyone who faces this issue in the future (or myself, if I forget), you'll need to also install both gcc and g++. i.e.:; ```; conda install gcc_linux-64 gxx_linux-64; ```; Then you can run meson with the following:; ```; CC=/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc CXX=/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-g++ ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ```; That solves the first issue above and the compilation which stalled before now completes. Now, I'm hitting another issue, @vdweide - can you take a look again? I'm getting a lot of undefined references; is it conflicting with the supercomputer's openmpi? Thank you for the help.; ```; ninja: Entering directory `build'; [437/448] Linking target SU2_SOL/src/SU2_SOL; FAILED: SU2_SOL/src/SU2_SOL ; /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-g++ -o SU2_SOL/src/SU2_SOL SU2_SOL/src/SU2_SOL.p/SU2_SOL.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CSolver.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CBaselineSolver.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CBaselineSolver_FEM.cpp.o SU2_CFD/src/libSU2core.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core.a.p/output_COutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_output_structure_legacy.cpp.o SU2_CFD/src/libSU2core.a.p/output_tools_CWindowingTools.cpp.o SU2_CFD/src/libSU2core.a.p/output_CBaselineOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CParallelDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CParallelFileWriter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CFEMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CSurfaceFEMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CFVMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CSurfaceFVMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CCSVFileWriter.cpp.o SU2_CFD/src/libSU2core",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744503849
https://github.com/su2code/SU2/issues/1134#issuecomment-744503849:57033,Availability,error,error,57033,./../../x86_64-conda_cos6-linux-gnu/bin/ld: /work/A/openmpi/3.0.0_intel2018u2/lib/libmpi.so: undefined reference to `opal_object_t_class'; /home/user/anaconda3/bin/../lib/gcc/x86_64-conda_cos6-linux-gnu/7.3.0/../../../../x86_64-conda_cos6-linux-gnu/bin/ld: /work/A/openmpi/3.0.0_intel2018u2/lib/libmpi.so: undefined reference to `opal_list_t_class'; /home/user/anaconda3/bin/../lib/gcc/x86_64-conda_cos6-linux-gnu/7.3.0/../../../../x86_64-conda_cos6-linux-gnu/bin/ld: /work/A/openmpi/3.0.0_intel2018u2/lib/libmpi.so: undefined reference to `orte_standalone_operation'; /home/user/anaconda3/bin/../lib/gcc/x86_64-conda_cos6-linux-gnu/7.3.0/../../../../x86_64-conda_cos6-linux-gnu/bin/ld: /work/A/openmpi/3.0.0_intel2018u2/lib/libmpi.so: undefined reference to `opal_uses_threads'; /home/user/anaconda3/bin/../lib/gcc/x86_64-conda_cos6-linux-gnu/7.3.0/../../../../x86_64-conda_cos6-linux-gnu/bin/ld: /work/A/openmpi/3.0.0_intel2018u2/lib/libmpi.so: undefined reference to `opal_pmix_app_t_class'; /home/user/anaconda3/bin/../lib/gcc/x86_64-conda_cos6-linux-gnu/7.3.0/../../../../x86_64-conda_cos6-linux-gnu/bin/ld: /work/A/openmpi/3.0.0_intel2018u2/lib/libmpi.so: undefined reference to `orte_ess'; /home/user/anaconda3/bin/../lib/gcc/x86_64-conda_cos6-linux-gnu/7.3.0/../../../../x86_64-conda_cos6-linux-gnu/bin/ld: /work/A/openmpi/3.0.0_intel2018u2/lib/libmpi.so: undefined reference to `opal_hwloc_base_cset2str'; /home/user/anaconda3/bin/../lib/gcc/x86_64-conda_cos6-linux-gnu/7.3.0/../../../../x86_64-conda_cos6-linux-gnu/bin/ld: /work/A/openmpi/3.0.0_intel2018u2/lib/libmpi.so: undefined reference to `orte_data_server_uri'; /home/user/anaconda3/bin/../lib/gcc/x86_64-conda_cos6-linux-gnu/7.3.0/../../../../x86_64-conda_cos6-linux-gnu/bin/ld: /work/A/openmpi/3.0.0_intel2018u2/lib/libmpi.so: undefined reference to `opal_convertor_unpack'; collect2: error: ld returned 1 exit status; [438/448] Compiling C++ object SU2_DEF/src/SU2_DEF.p/SU2_DEF.cpp.o; ninja: build stopped: subcommand failed. ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744503849
https://github.com/su2code/SU2/issues/1134#issuecomment-744503849:183,Deployability,install,install,183,"My fault - I realised that I only specified the CC variable, and not the CXX variable too. For anyone who faces this issue in the future (or myself, if I forget), you'll need to also install both gcc and g++. i.e.:; ```; conda install gcc_linux-64 gxx_linux-64; ```; Then you can run meson with the following:; ```; CC=/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc CXX=/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-g++ ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ```; That solves the first issue above and the compilation which stalled before now completes. Now, I'm hitting another issue, @vdweide - can you take a look again? I'm getting a lot of undefined references; is it conflicting with the supercomputer's openmpi? Thank you for the help.; ```; ninja: Entering directory `build'; [437/448] Linking target SU2_SOL/src/SU2_SOL; FAILED: SU2_SOL/src/SU2_SOL ; /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-g++ -o SU2_SOL/src/SU2_SOL SU2_SOL/src/SU2_SOL.p/SU2_SOL.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CSolver.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CBaselineSolver.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CBaselineSolver_FEM.cpp.o SU2_CFD/src/libSU2core.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core.a.p/output_COutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_output_structure_legacy.cpp.o SU2_CFD/src/libSU2core.a.p/output_tools_CWindowingTools.cpp.o SU2_CFD/src/libSU2core.a.p/output_CBaselineOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CParallelDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CParallelFileWriter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CFEMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CSurfaceFEMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CFVMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CSurfaceFVMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CCSVFileWriter.cpp.o SU2_CFD/src/libSU2core",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744503849
https://github.com/su2code/SU2/issues/1134#issuecomment-744503849:227,Deployability,install,install,227,"My fault - I realised that I only specified the CC variable, and not the CXX variable too. For anyone who faces this issue in the future (or myself, if I forget), you'll need to also install both gcc and g++. i.e.:; ```; conda install gcc_linux-64 gxx_linux-64; ```; Then you can run meson with the following:; ```; CC=/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc CXX=/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-g++ ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ```; That solves the first issue above and the compilation which stalled before now completes. Now, I'm hitting another issue, @vdweide - can you take a look again? I'm getting a lot of undefined references; is it conflicting with the supercomputer's openmpi? Thank you for the help.; ```; ninja: Entering directory `build'; [437/448] Linking target SU2_SOL/src/SU2_SOL; FAILED: SU2_SOL/src/SU2_SOL ; /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-g++ -o SU2_SOL/src/SU2_SOL SU2_SOL/src/SU2_SOL.p/SU2_SOL.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CSolver.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CBaselineSolver.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CBaselineSolver_FEM.cpp.o SU2_CFD/src/libSU2core.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core.a.p/output_COutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_output_structure_legacy.cpp.o SU2_CFD/src/libSU2core.a.p/output_tools_CWindowingTools.cpp.o SU2_CFD/src/libSU2core.a.p/output_CBaselineOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CParallelDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CParallelFileWriter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CFEMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CSurfaceFEMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CFVMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CSurfaceFVMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CCSVFileWriter.cpp.o SU2_CFD/src/libSU2core",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744503849
https://github.com/su2code/SU2/issues/1134#issuecomment-744503849:51,Modifiability,variab,variable,51,"My fault - I realised that I only specified the CC variable, and not the CXX variable too. For anyone who faces this issue in the future (or myself, if I forget), you'll need to also install both gcc and g++. i.e.:; ```; conda install gcc_linux-64 gxx_linux-64; ```; Then you can run meson with the following:; ```; CC=/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc CXX=/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-g++ ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ```; That solves the first issue above and the compilation which stalled before now completes. Now, I'm hitting another issue, @vdweide - can you take a look again? I'm getting a lot of undefined references; is it conflicting with the supercomputer's openmpi? Thank you for the help.; ```; ninja: Entering directory `build'; [437/448] Linking target SU2_SOL/src/SU2_SOL; FAILED: SU2_SOL/src/SU2_SOL ; /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-g++ -o SU2_SOL/src/SU2_SOL SU2_SOL/src/SU2_SOL.p/SU2_SOL.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CSolver.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CBaselineSolver.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CBaselineSolver_FEM.cpp.o SU2_CFD/src/libSU2core.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core.a.p/output_COutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_output_structure_legacy.cpp.o SU2_CFD/src/libSU2core.a.p/output_tools_CWindowingTools.cpp.o SU2_CFD/src/libSU2core.a.p/output_CBaselineOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CParallelDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CParallelFileWriter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CFEMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CSurfaceFEMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CFVMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CSurfaceFVMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CCSVFileWriter.cpp.o SU2_CFD/src/libSU2core",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744503849
https://github.com/su2code/SU2/issues/1134#issuecomment-744503849:77,Modifiability,variab,variable,77,"My fault - I realised that I only specified the CC variable, and not the CXX variable too. For anyone who faces this issue in the future (or myself, if I forget), you'll need to also install both gcc and g++. i.e.:; ```; conda install gcc_linux-64 gxx_linux-64; ```; Then you can run meson with the following:; ```; CC=/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc CXX=/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-g++ ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ```; That solves the first issue above and the compilation which stalled before now completes. Now, I'm hitting another issue, @vdweide - can you take a look again? I'm getting a lot of undefined references; is it conflicting with the supercomputer's openmpi? Thank you for the help.; ```; ninja: Entering directory `build'; [437/448] Linking target SU2_SOL/src/SU2_SOL; FAILED: SU2_SOL/src/SU2_SOL ; /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-g++ -o SU2_SOL/src/SU2_SOL SU2_SOL/src/SU2_SOL.p/SU2_SOL.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CSolver.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CBaselineSolver.cpp.o SU2_CFD/src/libSU2core.a.p/solvers_CBaselineSolver_FEM.cpp.o SU2_CFD/src/libSU2core.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core.a.p/output_COutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_output_structure_legacy.cpp.o SU2_CFD/src/libSU2core.a.p/output_tools_CWindowingTools.cpp.o SU2_CFD/src/libSU2core.a.p/output_CBaselineOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CParallelDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CParallelFileWriter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CFEMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CSurfaceFEMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CFVMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CSurfaceFVMDataSorter.cpp.o SU2_CFD/src/libSU2core.a.p/output_filewriter_CCSVFileWriter.cpp.o SU2_CFD/src/libSU2core",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744503849
https://github.com/su2code/SU2/issues/1134#issuecomment-744534832:326,Deployability,configurat,configuration,326,"Look at the warnings in the first couple of lines, e.g.; warning: libopen-rte.so.40, needed by /work/A/openmpi/3.0.0_intel2018u2/lib/libmpi.so, not found; Apparently your MPI implementation relies on these libraries, but it cannot find them. You'd better ask your system administrator, because I don't know the details of the configuration of your machine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744534832
https://github.com/su2code/SU2/issues/1134#issuecomment-744534832:326,Modifiability,config,configuration,326,"Look at the warnings in the first couple of lines, e.g.; warning: libopen-rte.so.40, needed by /work/A/openmpi/3.0.0_intel2018u2/lib/libmpi.so, not found; Apparently your MPI implementation relies on these libraries, but it cannot find them. You'd better ask your system administrator, because I don't know the details of the configuration of your machine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744534832
https://github.com/su2code/SU2/issues/1134#issuecomment-744582401:48,Integrability,wrap,wrapper,48,"If it works, why not? mpicxx is normally just a wrapper and uses the currently active g++ compiler.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744582401
https://github.com/su2code/SU2/issues/1134#issuecomment-744586926:1485,Availability,error,error,1485,"Ok, w.r.t. 'if it works, why not', unfortunately, it doesn't work! I guess that as you mentioned, if it is used as a wrapper for the underlying 'new' gcc that isn't aware of the system MPI, then it actually doesn't find the MPI linked with the MPI-aware `MPICC` and `MPICXX` then?. ```; ninja: Entering directory `build'; [5/967] Compiling C object externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o; FAILED: externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o ; /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc -Iexternals/parmetis/libparmetis.a.p -Iexternals/parmetis -I../externals/parmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -O3 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -isystem /home/user/anaconda3/include -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include -fPIC -DUSE_GKREGEX -MD -MQ externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o -MF 'externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o.d' -o externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o -c ../externals/parmetis/libparmetis/weird.c; In file included from ../externals/parmetis/libparmetis/parmetislib.h:21:0,; from ../externals/parmetis/libparmetis/weird.c:15:; ../externals/parmetis/include/parmetis.h:17:10: fatal error: mpi.h: No such file or directory; #include <mpi.h>; ^~~~~~~; compilation terminated.; [24/967] Compiling C object externals/metis/libmetis.a.p/GKlib_gkregex.c.o; ninja: build stopped: subcommand failed.; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744586926
https://github.com/su2code/SU2/issues/1134#issuecomment-744586926:117,Integrability,wrap,wrapper,117,"Ok, w.r.t. 'if it works, why not', unfortunately, it doesn't work! I guess that as you mentioned, if it is used as a wrapper for the underlying 'new' gcc that isn't aware of the system MPI, then it actually doesn't find the MPI linked with the MPI-aware `MPICC` and `MPICXX` then?. ```; ninja: Entering directory `build'; [5/967] Compiling C object externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o; FAILED: externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o ; /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc -Iexternals/parmetis/libparmetis.a.p -Iexternals/parmetis -I../externals/parmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -O3 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -isystem /home/user/anaconda3/include -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include -fPIC -DUSE_GKREGEX -MD -MQ externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o -MF 'externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o.d' -o externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o -c ../externals/parmetis/libparmetis/weird.c; In file included from ../externals/parmetis/libparmetis/parmetislib.h:21:0,; from ../externals/parmetis/libparmetis/weird.c:15:; ../externals/parmetis/include/parmetis.h:17:10: fatal error: mpi.h: No such file or directory; #include <mpi.h>; ^~~~~~~; compilation terminated.; [24/967] Compiling C object externals/metis/libmetis.a.p/GKlib_gkregex.c.o; ninja: build stopped: subcommand failed.; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744586926
https://github.com/su2code/SU2/issues/1134#issuecomment-744658431:799,Availability,fault,fault,799,"Hi, please post the commands you are running followed by the output of meson, with all the iterations I don't understand what is going on. Meson does not care about the variables MPICC and MPICXX, it cares about CC and CXX.; It then gets the include directories and linker arguments from the pkgconfig file for MPI. If you want to bypass pkgconfig you set CC=some/path/mpicc and CXX=some/path/mpicxx, and use -Dcustom-mpi=true when calling meson.; Depending on how they are configured it may work or it may give you undefined references, in which case you can try LIBS=""-lmpi"" LDFLAGS=""-lmpi"" before running meson (or something like that, I don't know much about environment variables). If the wrappers don't find mpi.h I would ask the administrator for instructions, then after they say it is your fault and don't solve the problem (my experience with that kind of people anyway) you can try the INCLUDE or INCLUDES variable (not sure) or directly use CXXFLAGS=""-I\some\path\mpi\include"". I've used 3 hpc systems and the recipe was never the same so... see if there is system-specific advice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744658431
https://github.com/su2code/SU2/issues/1134#issuecomment-744658431:448,Integrability,Depend,Depending,448,"Hi, please post the commands you are running followed by the output of meson, with all the iterations I don't understand what is going on. Meson does not care about the variables MPICC and MPICXX, it cares about CC and CXX.; It then gets the include directories and linker arguments from the pkgconfig file for MPI. If you want to bypass pkgconfig you set CC=some/path/mpicc and CXX=some/path/mpicxx, and use -Dcustom-mpi=true when calling meson.; Depending on how they are configured it may work or it may give you undefined references, in which case you can try LIBS=""-lmpi"" LDFLAGS=""-lmpi"" before running meson (or something like that, I don't know much about environment variables). If the wrappers don't find mpi.h I would ask the administrator for instructions, then after they say it is your fault and don't solve the problem (my experience with that kind of people anyway) you can try the INCLUDE or INCLUDES variable (not sure) or directly use CXXFLAGS=""-I\some\path\mpi\include"". I've used 3 hpc systems and the recipe was never the same so... see if there is system-specific advice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744658431
https://github.com/su2code/SU2/issues/1134#issuecomment-744658431:694,Integrability,wrap,wrappers,694,"Hi, please post the commands you are running followed by the output of meson, with all the iterations I don't understand what is going on. Meson does not care about the variables MPICC and MPICXX, it cares about CC and CXX.; It then gets the include directories and linker arguments from the pkgconfig file for MPI. If you want to bypass pkgconfig you set CC=some/path/mpicc and CXX=some/path/mpicxx, and use -Dcustom-mpi=true when calling meson.; Depending on how they are configured it may work or it may give you undefined references, in which case you can try LIBS=""-lmpi"" LDFLAGS=""-lmpi"" before running meson (or something like that, I don't know much about environment variables). If the wrappers don't find mpi.h I would ask the administrator for instructions, then after they say it is your fault and don't solve the problem (my experience with that kind of people anyway) you can try the INCLUDE or INCLUDES variable (not sure) or directly use CXXFLAGS=""-I\some\path\mpi\include"". I've used 3 hpc systems and the recipe was never the same so... see if there is system-specific advice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744658431
https://github.com/su2code/SU2/issues/1134#issuecomment-744658431:169,Modifiability,variab,variables,169,"Hi, please post the commands you are running followed by the output of meson, with all the iterations I don't understand what is going on. Meson does not care about the variables MPICC and MPICXX, it cares about CC and CXX.; It then gets the include directories and linker arguments from the pkgconfig file for MPI. If you want to bypass pkgconfig you set CC=some/path/mpicc and CXX=some/path/mpicxx, and use -Dcustom-mpi=true when calling meson.; Depending on how they are configured it may work or it may give you undefined references, in which case you can try LIBS=""-lmpi"" LDFLAGS=""-lmpi"" before running meson (or something like that, I don't know much about environment variables). If the wrappers don't find mpi.h I would ask the administrator for instructions, then after they say it is your fault and don't solve the problem (my experience with that kind of people anyway) you can try the INCLUDE or INCLUDES variable (not sure) or directly use CXXFLAGS=""-I\some\path\mpi\include"". I've used 3 hpc systems and the recipe was never the same so... see if there is system-specific advice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744658431
https://github.com/su2code/SU2/issues/1134#issuecomment-744658431:474,Modifiability,config,configured,474,"Hi, please post the commands you are running followed by the output of meson, with all the iterations I don't understand what is going on. Meson does not care about the variables MPICC and MPICXX, it cares about CC and CXX.; It then gets the include directories and linker arguments from the pkgconfig file for MPI. If you want to bypass pkgconfig you set CC=some/path/mpicc and CXX=some/path/mpicxx, and use -Dcustom-mpi=true when calling meson.; Depending on how they are configured it may work or it may give you undefined references, in which case you can try LIBS=""-lmpi"" LDFLAGS=""-lmpi"" before running meson (or something like that, I don't know much about environment variables). If the wrappers don't find mpi.h I would ask the administrator for instructions, then after they say it is your fault and don't solve the problem (my experience with that kind of people anyway) you can try the INCLUDE or INCLUDES variable (not sure) or directly use CXXFLAGS=""-I\some\path\mpi\include"". I've used 3 hpc systems and the recipe was never the same so... see if there is system-specific advice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744658431
https://github.com/su2code/SU2/issues/1134#issuecomment-744658431:675,Modifiability,variab,variables,675,"Hi, please post the commands you are running followed by the output of meson, with all the iterations I don't understand what is going on. Meson does not care about the variables MPICC and MPICXX, it cares about CC and CXX.; It then gets the include directories and linker arguments from the pkgconfig file for MPI. If you want to bypass pkgconfig you set CC=some/path/mpicc and CXX=some/path/mpicxx, and use -Dcustom-mpi=true when calling meson.; Depending on how they are configured it may work or it may give you undefined references, in which case you can try LIBS=""-lmpi"" LDFLAGS=""-lmpi"" before running meson (or something like that, I don't know much about environment variables). If the wrappers don't find mpi.h I would ask the administrator for instructions, then after they say it is your fault and don't solve the problem (my experience with that kind of people anyway) you can try the INCLUDE or INCLUDES variable (not sure) or directly use CXXFLAGS=""-I\some\path\mpi\include"". I've used 3 hpc systems and the recipe was never the same so... see if there is system-specific advice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744658431
https://github.com/su2code/SU2/issues/1134#issuecomment-744658431:917,Modifiability,variab,variable,917,"Hi, please post the commands you are running followed by the output of meson, with all the iterations I don't understand what is going on. Meson does not care about the variables MPICC and MPICXX, it cares about CC and CXX.; It then gets the include directories and linker arguments from the pkgconfig file for MPI. If you want to bypass pkgconfig you set CC=some/path/mpicc and CXX=some/path/mpicxx, and use -Dcustom-mpi=true when calling meson.; Depending on how they are configured it may work or it may give you undefined references, in which case you can try LIBS=""-lmpi"" LDFLAGS=""-lmpi"" before running meson (or something like that, I don't know much about environment variables). If the wrappers don't find mpi.h I would ask the administrator for instructions, then after they say it is your fault and don't solve the problem (my experience with that kind of people anyway) you can try the INCLUDE or INCLUDES variable (not sure) or directly use CXXFLAGS=""-I\some\path\mpi\include"". I've used 3 hpc systems and the recipe was never the same so... see if there is system-specific advice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744658431
https://github.com/su2code/SU2/issues/1134#issuecomment-745142779:524,Deployability,install,installing,524,"Hi @pcarruscag and @vdweide thank you very much for your troubleshooting tips and explanation! I think I was confusing 3 different settings - the base compilers (CC and CXX), the wrapped mpi compilers (MPICC and MPICXX), and the MKL pkgconfigpath. I did not realise that after updating my base compilers in my environment that the openmpi `mpicc` and `mpicxx` would automatically pick up the new `gcc` (I thought I'd have to compile new mpi wrappers). . I was able to get SU2 on our HPC compiled and running by doing (after installing the newer `gcc` and `g++` compilers):; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true; ```. What is strange is that previously, the HPC MKL appeared to be automatically picked up from the `PKG_CONFIG_PATH`. I wanted to use my own newer local copy but updating this path didn't seem to work, bet setting the `-Dmkl_root` flag fixed that.; i.e.; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true -Dmkl_root=/home/user/programs/intel/2020_update4/compilers_and_libraries_2020.4.304/linux/mkl; ```; Thanks again for both your help! Take care.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-745142779
https://github.com/su2code/SU2/issues/1134#issuecomment-745142779:179,Integrability,wrap,wrapped,179,"Hi @pcarruscag and @vdweide thank you very much for your troubleshooting tips and explanation! I think I was confusing 3 different settings - the base compilers (CC and CXX), the wrapped mpi compilers (MPICC and MPICXX), and the MKL pkgconfigpath. I did not realise that after updating my base compilers in my environment that the openmpi `mpicc` and `mpicxx` would automatically pick up the new `gcc` (I thought I'd have to compile new mpi wrappers). . I was able to get SU2 on our HPC compiled and running by doing (after installing the newer `gcc` and `g++` compilers):; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true; ```. What is strange is that previously, the HPC MKL appeared to be automatically picked up from the `PKG_CONFIG_PATH`. I wanted to use my own newer local copy but updating this path didn't seem to work, bet setting the `-Dmkl_root` flag fixed that.; i.e.; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true -Dmkl_root=/home/user/programs/intel/2020_update4/compilers_and_libraries_2020.4.304/linux/mkl; ```; Thanks again for both your help! Take care.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-745142779
https://github.com/su2code/SU2/issues/1134#issuecomment-745142779:441,Integrability,wrap,wrappers,441,"Hi @pcarruscag and @vdweide thank you very much for your troubleshooting tips and explanation! I think I was confusing 3 different settings - the base compilers (CC and CXX), the wrapped mpi compilers (MPICC and MPICXX), and the MKL pkgconfigpath. I did not realise that after updating my base compilers in my environment that the openmpi `mpicc` and `mpicxx` would automatically pick up the new `gcc` (I thought I'd have to compile new mpi wrappers). . I was able to get SU2 on our HPC compiled and running by doing (after installing the newer `gcc` and `g++` compilers):; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true; ```. What is strange is that previously, the HPC MKL appeared to be automatically picked up from the `PKG_CONFIG_PATH`. I wanted to use my own newer local copy but updating this path didn't seem to work, bet setting the `-Dmkl_root` flag fixed that.; i.e.; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true -Dmkl_root=/home/user/programs/intel/2020_update4/compilers_and_libraries_2020.4.304/linux/mkl; ```; Thanks again for both your help! Take care.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-745142779
https://github.com/su2code/SU2/issues/1134#issuecomment-745142779:586,Performance,load,load,586,"Hi @pcarruscag and @vdweide thank you very much for your troubleshooting tips and explanation! I think I was confusing 3 different settings - the base compilers (CC and CXX), the wrapped mpi compilers (MPICC and MPICXX), and the MKL pkgconfigpath. I did not realise that after updating my base compilers in my environment that the openmpi `mpicc` and `mpicxx` would automatically pick up the new `gcc` (I thought I'd have to compile new mpi wrappers). . I was able to get SU2 on our HPC compiled and running by doing (after installing the newer `gcc` and `g++` compilers):; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true; ```. What is strange is that previously, the HPC MKL appeared to be automatically picked up from the `PKG_CONFIG_PATH`. I wanted to use my own newer local copy but updating this path didn't seem to work, bet setting the `-Dmkl_root` flag fixed that.; i.e.; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true -Dmkl_root=/home/user/programs/intel/2020_update4/compilers_and_libraries_2020.4.304/linux/mkl; ```; Thanks again for both your help! Take care.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-745142779
https://github.com/su2code/SU2/issues/1134#issuecomment-745142779:1118,Performance,load,load,1118,"Hi @pcarruscag and @vdweide thank you very much for your troubleshooting tips and explanation! I think I was confusing 3 different settings - the base compilers (CC and CXX), the wrapped mpi compilers (MPICC and MPICXX), and the MKL pkgconfigpath. I did not realise that after updating my base compilers in my environment that the openmpi `mpicc` and `mpicxx` would automatically pick up the new `gcc` (I thought I'd have to compile new mpi wrappers). . I was able to get SU2 on our HPC compiled and running by doing (after installing the newer `gcc` and `g++` compilers):; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true; ```. What is strange is that previously, the HPC MKL appeared to be automatically picked up from the `PKG_CONFIG_PATH`. I wanted to use my own newer local copy but updating this path didn't seem to work, bet setting the `-Dmkl_root` flag fixed that.; i.e.; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true -Dmkl_root=/home/user/programs/intel/2020_update4/compilers_and_libraries_2020.4.304/linux/mkl; ```; Thanks again for both your help! Take care.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-745142779
https://github.com/su2code/SU2/pull/1139#issuecomment-751794519:52,Modifiability,variab,variables,52,"Hi @WallyMaier ! Could you please remove the unused variables in NEMO's ausm.hpp, ausmplusup2.hpp, lax.hpp and NEMO_diffusion.hpp files ? They were introduced in a previous PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139#issuecomment-751794519
https://github.com/su2code/SU2/pull/1139#issuecomment-752122739:27,Modifiability,variab,variables,27,@EduardoMolina most of the variables have either been deleted or removed. I expect most will make a return in a future PR for implicit functionality within the NEMO framework,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139#issuecomment-752122739
https://github.com/su2code/SU2/issues/1140#issuecomment-748799921:42,Availability,error,error,42,"I can think of 3 reasons why you get this error. 1) You have hanging nodes in the grid. Theoretically, the DG discretization is perfectly capable of handling this situation. However, the logical to do so has not been implemented yet. 2) These faces are boundary faces, but you forgot to specify boundary conditions for them. 3) In case you are using periodic boundaries, it might be possible that the periodic equivalent is not found. The algorithm to find the periodic donors is tolerance driven and something may go wrong if the periodic faces are not perfectly matching. . If you use periodic boundaries, my guess would be the third reason.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1140#issuecomment-748799921
https://github.com/su2code/SU2/issues/1140#issuecomment-748799921:480,Availability,toler,tolerance,480,"I can think of 3 reasons why you get this error. 1) You have hanging nodes in the grid. Theoretically, the DG discretization is perfectly capable of handling this situation. However, the logical to do so has not been implemented yet. 2) These faces are boundary faces, but you forgot to specify boundary conditions for them. 3) In case you are using periodic boundaries, it might be possible that the periodic equivalent is not found. The algorithm to find the periodic donors is tolerance driven and something may go wrong if the periodic faces are not perfectly matching. . If you use periodic boundaries, my guess would be the third reason.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1140#issuecomment-748799921
https://github.com/su2code/SU2/issues/1140#issuecomment-748799921:187,Testability,log,logical,187,"I can think of 3 reasons why you get this error. 1) You have hanging nodes in the grid. Theoretically, the DG discretization is perfectly capable of handling this situation. However, the logical to do so has not been implemented yet. 2) These faces are boundary faces, but you forgot to specify boundary conditions for them. 3) In case you are using periodic boundaries, it might be possible that the periodic equivalent is not found. The algorithm to find the periodic donors is tolerance driven and something may go wrong if the periodic faces are not perfectly matching. . If you use periodic boundaries, my guess would be the third reason.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1140#issuecomment-748799921
https://github.com/su2code/SU2/issues/1141#issuecomment-751761402:17,Performance,perform,perform,17,We are trying to perform resolvent analysis and need to linear NS equations in matrix form. But I guess I got your answer. Thank you for help!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-751761402
https://github.com/su2code/SU2/issues/1141#issuecomment-754091837:199,Availability,avail,available,199,"Hi @pcarruscag Let me give me some background, we are trying to perform resolvent analysis and for that we need to have linearized NS equations. I ran my LES simulations in SU2 and mean flow data is available in SU2 so I would like to stick to SU2 to understand if SU2 can solve the “direct"" linearized Navier-Stokes equations? ; Also, we are looking for PETSc library to use for LU decomposition. I understand SU2 uses eigen numerical library so possibly we can integrate PETSc in SU2 or perhaps we can perform outside SU2 after above step is completed to get the solved linearized matrices in SU2. I tried to explain please let me know if this make sense, else I will provide more details. ; I am referencing this paper for my work page 4-6 (https://arxiv.org/abs/2005.10964); [Optimal eddy viscosity for resolvent-based.pdf](https://github.com/su2code/SU2/files/5765838/Optimal.eddy.viscosity.for.resolvent-based.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754091837
https://github.com/su2code/SU2/issues/1141#issuecomment-754091837:463,Deployability,integrat,integrate,463,"Hi @pcarruscag Let me give me some background, we are trying to perform resolvent analysis and for that we need to have linearized NS equations. I ran my LES simulations in SU2 and mean flow data is available in SU2 so I would like to stick to SU2 to understand if SU2 can solve the “direct"" linearized Navier-Stokes equations? ; Also, we are looking for PETSc library to use for LU decomposition. I understand SU2 uses eigen numerical library so possibly we can integrate PETSc in SU2 or perhaps we can perform outside SU2 after above step is completed to get the solved linearized matrices in SU2. I tried to explain please let me know if this make sense, else I will provide more details. ; I am referencing this paper for my work page 4-6 (https://arxiv.org/abs/2005.10964); [Optimal eddy viscosity for resolvent-based.pdf](https://github.com/su2code/SU2/files/5765838/Optimal.eddy.viscosity.for.resolvent-based.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754091837
https://github.com/su2code/SU2/issues/1141#issuecomment-754091837:463,Integrability,integrat,integrate,463,"Hi @pcarruscag Let me give me some background, we are trying to perform resolvent analysis and for that we need to have linearized NS equations. I ran my LES simulations in SU2 and mean flow data is available in SU2 so I would like to stick to SU2 to understand if SU2 can solve the “direct"" linearized Navier-Stokes equations? ; Also, we are looking for PETSc library to use for LU decomposition. I understand SU2 uses eigen numerical library so possibly we can integrate PETSc in SU2 or perhaps we can perform outside SU2 after above step is completed to get the solved linearized matrices in SU2. I tried to explain please let me know if this make sense, else I will provide more details. ; I am referencing this paper for my work page 4-6 (https://arxiv.org/abs/2005.10964); [Optimal eddy viscosity for resolvent-based.pdf](https://github.com/su2code/SU2/files/5765838/Optimal.eddy.viscosity.for.resolvent-based.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754091837
https://github.com/su2code/SU2/issues/1141#issuecomment-754091837:64,Performance,perform,perform,64,"Hi @pcarruscag Let me give me some background, we are trying to perform resolvent analysis and for that we need to have linearized NS equations. I ran my LES simulations in SU2 and mean flow data is available in SU2 so I would like to stick to SU2 to understand if SU2 can solve the “direct"" linearized Navier-Stokes equations? ; Also, we are looking for PETSc library to use for LU decomposition. I understand SU2 uses eigen numerical library so possibly we can integrate PETSc in SU2 or perhaps we can perform outside SU2 after above step is completed to get the solved linearized matrices in SU2. I tried to explain please let me know if this make sense, else I will provide more details. ; I am referencing this paper for my work page 4-6 (https://arxiv.org/abs/2005.10964); [Optimal eddy viscosity for resolvent-based.pdf](https://github.com/su2code/SU2/files/5765838/Optimal.eddy.viscosity.for.resolvent-based.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754091837
https://github.com/su2code/SU2/issues/1141#issuecomment-754091837:504,Performance,perform,perform,504,"Hi @pcarruscag Let me give me some background, we are trying to perform resolvent analysis and for that we need to have linearized NS equations. I ran my LES simulations in SU2 and mean flow data is available in SU2 so I would like to stick to SU2 to understand if SU2 can solve the “direct"" linearized Navier-Stokes equations? ; Also, we are looking for PETSc library to use for LU decomposition. I understand SU2 uses eigen numerical library so possibly we can integrate PETSc in SU2 or perhaps we can perform outside SU2 after above step is completed to get the solved linearized matrices in SU2. I tried to explain please let me know if this make sense, else I will provide more details. ; I am referencing this paper for my work page 4-6 (https://arxiv.org/abs/2005.10964); [Optimal eddy viscosity for resolvent-based.pdf](https://github.com/su2code/SU2/files/5765838/Optimal.eddy.viscosity.for.resolvent-based.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754091837
https://github.com/su2code/SU2/issues/1141#issuecomment-754109686:26,Integrability,interface,interface,26,"On the LU part we have an interface with PaStiX.; In SU2 Eigen is not used to solve distributed(mpi)-sparse systems, just small dense problems. Also to my knowledge Eigen does not support MPI at least a couple years ago its interface with PaStiX was threads only.; I opted to develop the interface with PaStiX rather than PETSc because it seemed the support for the block-sparse format we use was limited, i.e. compatible with only a few linear solvers.; There are instructions on how to build SU2 with PaStiX in the TestCases folder. I had a quick look at your paper, in SU2 the linearization of F (the A matrix you need, I believe) is not exact, for an exact linearization you would need to use forward AD but then any system would need to be solved iteratively using matrix-free products.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754109686
https://github.com/su2code/SU2/issues/1141#issuecomment-754109686:224,Integrability,interface,interface,224,"On the LU part we have an interface with PaStiX.; In SU2 Eigen is not used to solve distributed(mpi)-sparse systems, just small dense problems. Also to my knowledge Eigen does not support MPI at least a couple years ago its interface with PaStiX was threads only.; I opted to develop the interface with PaStiX rather than PETSc because it seemed the support for the block-sparse format we use was limited, i.e. compatible with only a few linear solvers.; There are instructions on how to build SU2 with PaStiX in the TestCases folder. I had a quick look at your paper, in SU2 the linearization of F (the A matrix you need, I believe) is not exact, for an exact linearization you would need to use forward AD but then any system would need to be solved iteratively using matrix-free products.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754109686
https://github.com/su2code/SU2/issues/1141#issuecomment-754109686:288,Integrability,interface,interface,288,"On the LU part we have an interface with PaStiX.; In SU2 Eigen is not used to solve distributed(mpi)-sparse systems, just small dense problems. Also to my knowledge Eigen does not support MPI at least a couple years ago its interface with PaStiX was threads only.; I opted to develop the interface with PaStiX rather than PETSc because it seemed the support for the block-sparse format we use was limited, i.e. compatible with only a few linear solvers.; There are instructions on how to build SU2 with PaStiX in the TestCases folder. I had a quick look at your paper, in SU2 the linearization of F (the A matrix you need, I believe) is not exact, for an exact linearization you would need to use forward AD but then any system would need to be solved iteratively using matrix-free products.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754109686
https://github.com/su2code/SU2/issues/1141#issuecomment-754109686:517,Testability,Test,TestCases,517,"On the LU part we have an interface with PaStiX.; In SU2 Eigen is not used to solve distributed(mpi)-sparse systems, just small dense problems. Also to my knowledge Eigen does not support MPI at least a couple years ago its interface with PaStiX was threads only.; I opted to develop the interface with PaStiX rather than PETSc because it seemed the support for the block-sparse format we use was limited, i.e. compatible with only a few linear solvers.; There are instructions on how to build SU2 with PaStiX in the TestCases folder. I had a quick look at your paper, in SU2 the linearization of F (the A matrix you need, I believe) is not exact, for an exact linearization you would need to use forward AD but then any system would need to be solved iteratively using matrix-free products.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754109686
https://github.com/su2code/SU2/issues/1143#issuecomment-751685783:16,Energy Efficiency,adapt,adaption,16,"The native mesh adaption was deprecated. The amg interface is in development, you can re-open some of the issues where it is mentioned to ask new questions (that way all ""documentation"" stays in one place).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143#issuecomment-751685783
https://github.com/su2code/SU2/issues/1143#issuecomment-751685783:49,Integrability,interface,interface,49,"The native mesh adaption was deprecated. The amg interface is in development, you can re-open some of the issues where it is mentioned to ask new questions (that way all ""documentation"" stays in one place).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143#issuecomment-751685783
https://github.com/su2code/SU2/issues/1143#issuecomment-751685783:16,Modifiability,adapt,adaption,16,"The native mesh adaption was deprecated. The amg interface is in development, you can re-open some of the issues where it is mentioned to ask new questions (that way all ""documentation"" stays in one place).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143#issuecomment-751685783
https://github.com/su2code/SU2/pull/1148#issuecomment-766893504:37,Testability,test,test,37,"Dear all,. I temporarily removed the test case because there were a couple of fix to do before. If you still think the test case for this feature may be important, I think a separate PR is more appropriate, as there will be the need to discuss about the best way to incorporate it. In the meantime, I included a fix on the outputs that allow to print grid velocities in the output files using the new mesh deformation solver and a small fix on the restart from the python side. Looking forward for your comments!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148#issuecomment-766893504
https://github.com/su2code/SU2/pull/1148#issuecomment-766893504:119,Testability,test,test,119,"Dear all,. I temporarily removed the test case because there were a couple of fix to do before. If you still think the test case for this feature may be important, I think a separate PR is more appropriate, as there will be the need to discuss about the best way to incorporate it. In the meantime, I included a fix on the outputs that allow to print grid velocities in the output files using the new mesh deformation solver and a small fix on the restart from the python side. Looking forward for your comments!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148#issuecomment-766893504
https://github.com/su2code/SU2/issues/1151#issuecomment-753915786:58,Availability,error,error,58,"I built the code with your command and it worked.; In the error message you have undefined references to e.g. ompi_mpi_long_long_int; I ""grepped"" my SU2 directories for that kind of symbol, it only appears on binaries built with OpenMPI, not on those built with MPICH.; The change you made to the meson file is equivalent to what -Dextra-deps does.; So, I do not think this is an issue of the build system.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151#issuecomment-753915786
https://github.com/su2code/SU2/issues/1151#issuecomment-753915786:64,Integrability,message,message,64,"I built the code with your command and it worked.; In the error message you have undefined references to e.g. ompi_mpi_long_long_int; I ""grepped"" my SU2 directories for that kind of symbol, it only appears on binaries built with OpenMPI, not on those built with MPICH.; The change you made to the meson file is equivalent to what -Dextra-deps does.; So, I do not think this is an issue of the build system.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151#issuecomment-753915786
https://github.com/su2code/SU2/issues/1151#issuecomment-754172497:292,Availability,fault,faulty,292,"In that case it sounds like the system still builds with openmpi if it is installed, can that be the issue?; Because it seems like it builds with the openmpi libraries even after providing said flags. I will try it on another system. Do you suggest trying something? Could it be because of a faulty mpich installation or something of that sort?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151#issuecomment-754172497
https://github.com/su2code/SU2/issues/1151#issuecomment-754172497:74,Deployability,install,installed,74,"In that case it sounds like the system still builds with openmpi if it is installed, can that be the issue?; Because it seems like it builds with the openmpi libraries even after providing said flags. I will try it on another system. Do you suggest trying something? Could it be because of a faulty mpich installation or something of that sort?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151#issuecomment-754172497
https://github.com/su2code/SU2/issues/1151#issuecomment-754172497:305,Deployability,install,installation,305,"In that case it sounds like the system still builds with openmpi if it is installed, can that be the issue?; Because it seems like it builds with the openmpi libraries even after providing said flags. I will try it on another system. Do you suggest trying something? Could it be because of a faulty mpich installation or something of that sort?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151#issuecomment-754172497
https://github.com/su2code/SU2/pull/1153#issuecomment-757463538:25,Safety,avoid,avoids,25,"I'll merge this since it avoids confusion for people trying to use a feature that does not exist, it is all in one commit so it should be easy enough to revert if it becomes needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153#issuecomment-757463538
https://github.com/su2code/SU2/issues/1154#issuecomment-766695831:6,Testability,test,testcase,6,added testcase and regression test.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1154#issuecomment-766695831
https://github.com/su2code/SU2/issues/1154#issuecomment-766695831:30,Testability,test,test,30,added testcase and regression test.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1154#issuecomment-766695831
https://github.com/su2code/SU2/issues/1156#issuecomment-755211566:74,Availability,error,errors,74,"I think that can only mean the mesh is corrupted, which is causing memory errors within parmetis.; Memory errors can take some time to manifest, especially in small cases.; If the case is small you can try running the serial version to see if the problem only occurs in parallel, as for what might be the rootcause of the bad mesh I have no idea.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755211566
https://github.com/su2code/SU2/issues/1156#issuecomment-755211566:106,Availability,error,errors,106,"I think that can only mean the mesh is corrupted, which is causing memory errors within parmetis.; Memory errors can take some time to manifest, especially in small cases.; If the case is small you can try running the serial version to see if the problem only occurs in parallel, as for what might be the rootcause of the bad mesh I have no idea.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755211566
https://github.com/su2code/SU2/issues/1156#issuecomment-755280266:121,Energy Efficiency,reduce,reduce,121,"Can you run it with valgrind to check if there is a memory issue? Compile with -g. Also, does the problem persist if you reduce the number of MPI ranks?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755280266
https://github.com/su2code/SU2/issues/1156#issuecomment-755310139:261,Energy Efficiency,reduce,reduce,261,"Compile with -g or when using meson just add --buildtype=debug to the arguments to build the executable. Then run it as follows. mpirun -np 40 valgrind SU2_CFD case.cfg. The probably get quite a few false warnings from MPI, but you can filter those out. Try to reduce the number of ranks, if possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755310139
https://github.com/su2code/SU2/issues/1156#issuecomment-755318540:99,Energy Efficiency,reduce,reduced,99,"Ok, I've recompiled using --buildtype=debug and I'm running valgrind now. I'll try and run it at a reduced rank and get back to you. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755318540
https://github.com/su2code/SU2/issues/1156#issuecomment-755334566:432,Availability,error,errors,432,"@vdweide I've attached the SU2 output and the valgrind output running on 2 processes, i.e.: `mpirun -n 2 --use-hwthread-cpus valgrind /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`; [su2_out_2.txt](https://github.com/su2code/SU2/files/5776324/su2_out_2.txt); [valgrind_out_2.txt](https://github.com/su2code/SU2/files/5776325/valgrind_out_2.txt). I also tried with 30 processes but valgrind gave up after stating that there were too many errors. Sorry, I'm not so familiar with what to look out for. I'm guessing that something showing in the leak summary is a bad thing? Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755334566
https://github.com/su2code/SU2/issues/1156#issuecomment-755334566:166,Testability,test,test,166,"@vdweide I've attached the SU2 output and the valgrind output running on 2 processes, i.e.: `mpirun -n 2 --use-hwthread-cpus valgrind /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`; [su2_out_2.txt](https://github.com/su2code/SU2/files/5776324/su2_out_2.txt); [valgrind_out_2.txt](https://github.com/su2code/SU2/files/5776325/valgrind_out_2.txt). I also tried with 30 processes but valgrind gave up after stating that there were too many errors. Sorry, I'm not so familiar with what to look out for. I'm guessing that something showing in the leak summary is a bad thing? Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755334566
https://github.com/su2code/SU2/issues/1156#issuecomment-755368953:84,Energy Efficiency,allocate,allocated,84,"No, the invalid reads and writes are problematic. There you cross the boundaries of allocated memory and anything can happen.; What version/branch are you using? The line numbers valgrind gives do not correspond to the current develop version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755368953
https://github.com/su2code/SU2/issues/1156#issuecomment-755887085:1235,Modifiability,variab,variables,1235,I had a quick look at the merging process and it seems like quite a few files conflict. I'm not sure which files I can merge from develop and not accidentally break the feature_adap functionality. Can I more or less pull across most of these changes? I can give it a go if you can give me some pointers but I'm not well-versed in cpp! Thanks.; ```; Common/include/CConfig.hpp; Common/include/adt/CADTElemClass.hpp; Common/include/geometry/dual_grid/CEdge.hpp; Common/include/geometry/dual_grid/CPoint.hpp; Common/include/geometry/dual_grid/CVertex.hpp; Common/include/option_structure.hpp; Common/src/adt/CADTElemClass.cpp; Common/src/geometry/CPhysicalGeometry.cpp; Common/src/geometry/dual_grid/CPoint.cpp; SU2_CFD/include/output/COutputLegacy.hpp; SU2_CFD/include/solvers/CEulerSolver.hpp; SU2_CFD/include/solvers/CSolver.hpp; SU2_CFD/src/iteration_structure.cpp; SU2_CFD/src/numerics/flow/flow_diffusion.cpp; SU2_CFD/src/output/CFlowCompOutput.cpp; SU2_CFD/src/output/output_structure_legacy.cpp; SU2_CFD/src/solvers/CEulerSolver.cpp; SU2_CFD/src/solvers/CNSSolver.cpp; SU2_CFD/src/solvers/CSolver.cpp; SU2_CFD/src/solvers/CTurbSASolver.cpp; SU2_CFD/src/solvers/CTurbSSTSolver.cpp; SU2_CFD/src/solvers/CTurbSolver.cpp; SU2_CFD/src/variables/CEulerVariable.cpp; SU2_DOT/src/meson.build; SU2_IDE/Xcode/SU2_CFD.xcodeproj/project.pbxproj; SU2_PY/pySU2/pySU2.i; SU2_PY/pySU2/pySU2ad.i; meson_scripts/init.py; preconfigure.py; ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755887085
https://github.com/su2code/SU2/issues/1156#issuecomment-756056762:216,Modifiability,variab,variables,216,"I see, I hope that @bmunguia will have a chance to take a look! I tried to have a look through the past commits but I didn't manage to successfully merge all the functions. From what I can tell, these are the edited variables/functions:; ; CConfig Class; - WRT_SLICE; - GetBool_Compute_Metric; - GetWrt_Aniso_Sensor; - GetKind_Aniso_Sensor; - GetKind_Hessian_Method; - GetAdap_Norm; - GetAdap_Hmax; - GetAdap_Hmin; - GetAdap_ARmax; - GetAdap_Complexity. Cvertex (not sure if values should be initialised); - ~CVertex; - GetnDonorPoints; - SetDonorCoeff; - GetDonorCoeff; - SetInterpDonorPoint; - GetInterpDonorPoint; - SetInterpDonorProcessor; - GetInterpDonorProcessor; - Allocate_DonorInfo; - GetVarRot; - SetVarRot. Option_structure; - ENUM_ANISO_SENSOR; - MapType; - ENUM_OUTPUT; - MakePair(""INRIA"", INRIA); - MPI_QUANTIFIES enums. CPhysicalGeometry - probably AMG stuff?; - CPhysicalGeometry::LoadAdaptedMeshParallel_FVM; - CPhysicalGeometry::Check_IntElem_Orientation; - CPhysicalGeometry::Check_BoundElem_Orientation; 	; 	; Common/src/geometry/dual_grid/CPoint.cpp'; - Check this one!. COutputLegacy.hpp; - Import inria amg. output_structure_legacy.cpp'; - SpecialOutput - Inria methods?. Csolver; - CSolver::SetPositiveDefiniteHessian. meson.build; - Add 'output/filewriter/CInriaFileWriter.cpp',. Init.py - add amgio stuff; - Add sha_version_amg; - Add github_repo_amg. Preconfigure.py; - Add init_inria; - Add other inria flags",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-756056762
https://github.com/su2code/SU2/issues/1156#issuecomment-757123547:354,Energy Efficiency,adapt,adaptation,354,"I could but I do not think updating that branch will fix your problem. We have not found any mesh handling bugs recently.; Creating / modifying meshes manually can get tricky (at least in my experience).; Have you tried simpler problems? Try starting with a problem that is known to work (there is a long issue with success stories, do a search for mesh adaptation here on github). Then build up from it, e.g. take the same problem and use a finer grid, change the physics to what you need, use a grid for your problem (ideally change one thing at a time).; Also keep in mind that if that branch was finished work it would probably have been merged into develop by now...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-757123547
https://github.com/su2code/SU2/issues/1156#issuecomment-757123547:354,Modifiability,adapt,adaptation,354,"I could but I do not think updating that branch will fix your problem. We have not found any mesh handling bugs recently.; Creating / modifying meshes manually can get tricky (at least in my experience).; Have you tried simpler problems? Try starting with a problem that is known to work (there is a long issue with success stories, do a search for mesh adaptation here on github). Then build up from it, e.g. take the same problem and use a finer grid, change the physics to what you need, use a grid for your problem (ideally change one thing at a time).; Also keep in mind that if that branch was finished work it would probably have been merged into develop by now...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-757123547
https://github.com/su2code/SU2/issues/1156#issuecomment-757123547:220,Usability,simpl,simpler,220,"I could but I do not think updating that branch will fix your problem. We have not found any mesh handling bugs recently.; Creating / modifying meshes manually can get tricky (at least in my experience).; Have you tried simpler problems? Try starting with a problem that is known to work (there is a long issue with success stories, do a search for mesh adaptation here on github). Then build up from it, e.g. take the same problem and use a finer grid, change the physics to what you need, use a grid for your problem (ideally change one thing at a time).; Also keep in mind that if that branch was finished work it would probably have been merged into develop by now...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-757123547
https://github.com/su2code/SU2/issues/1156#issuecomment-757196402:123,Availability,error,error,123,"@pcarruscag I see, sorry I didn't realise that it still might be a mesh problem - I thought it was a memory issue from the error messages! Ok, I'll give it another try from scratch. If I understand correctly, amg only works with triangles and tetrahedrons, not pyramids or quads, is that right? Thanks again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-757196402
https://github.com/su2code/SU2/issues/1156#issuecomment-757196402:129,Integrability,message,messages,129,"@pcarruscag I see, sorry I didn't realise that it still might be a mesh problem - I thought it was a memory issue from the error messages! Ok, I'll give it another try from scratch. If I understand correctly, amg only works with triangles and tetrahedrons, not pyramids or quads, is that right? Thanks again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-757196402
https://github.com/su2code/SU2/issues/1156#issuecomment-759607361:263,Availability,error,error,263,"Hi @pcarruscag I just tried a simpler mesh and using MPI I get the UCX crash.; [err_log_SU2v7.0.3.txt](https://github.com/su2code/SU2/files/5810207/err_log_SU2v7.0.3.txt). To double check, I also used the master v7.0.8 SU2_CFD. When I run with MPI, I get the UCX error but when I run in serial, the solution appears to converge fine. I suspect that this means it's probably not the mesh that is causing the issues - what are your thoughts?; [su2_out_serial.txt](https://github.com/su2code/SU2/files/5810208/su2_out_serial.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-759607361
https://github.com/su2code/SU2/issues/1156#issuecomment-759607361:30,Usability,simpl,simpler,30,"Hi @pcarruscag I just tried a simpler mesh and using MPI I get the UCX crash.; [err_log_SU2v7.0.3.txt](https://github.com/su2code/SU2/files/5810207/err_log_SU2v7.0.3.txt). To double check, I also used the master v7.0.8 SU2_CFD. When I run with MPI, I get the UCX error but when I run in serial, the solution appears to converge fine. I suspect that this means it's probably not the mesh that is causing the issues - what are your thoughts?; [su2_out_serial.txt](https://github.com/su2code/SU2/files/5810208/su2_out_serial.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-759607361
https://github.com/su2code/SU2/issues/1156#issuecomment-759610569:18,Availability,error,error,18,"I looked for ""UCX error"" and got e.g. this https://github.com/openucx/ucx/issues/4742; IDK but it looks like an MPI configuration problem...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-759610569
https://github.com/su2code/SU2/issues/1156#issuecomment-759610569:116,Deployability,configurat,configuration,116,"I looked for ""UCX error"" and got e.g. this https://github.com/openucx/ucx/issues/4742; IDK but it looks like an MPI configuration problem...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-759610569
https://github.com/su2code/SU2/issues/1156#issuecomment-759610569:116,Modifiability,config,configuration,116,"I looked for ""UCX error"" and got e.g. this https://github.com/openucx/ucx/issues/4742; IDK but it looks like an MPI configuration problem...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-759610569
https://github.com/su2code/SU2/issues/1156#issuecomment-761749299:95,Availability,error,error,95,"After pulling in the latest OpenMPI v3 (3.1.6) and recompiling the mpi4py and SU2 branch, this error seems to have gone away! Thank you for your help @pcarruscag @vdweide",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-761749299
https://github.com/su2code/SU2/pull/1160#issuecomment-760110555:543,Modifiability,config,config,543,"> ; > ; > @CatarinaGarbacz thanks for pushing your changes! I have left some comments and questions.; > ; > A bigger question I have is if there is a more general way to deal with SU2_INTERP, making it usable for all of develop. Just answering @WallyMaier comment, this should be possible by changing the file **fem_interpolation_structure.cpp** and change the function call:. output = COutputFactory::CreateOutput(**NEMO_NAVIER_STOKES**, input_config_container[ZONE_0],nDim);. So we have to replace **NEMO_NAVIER_STOKES** to something like **config[val_iZone]->GetKind_Solver()**.; ; I have not tested this change, but I tested changing it for NAVIER_STOKES, and it was able to interpolate the baseline SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555
https://github.com/su2code/SU2/pull/1160#issuecomment-760110555:596,Testability,test,tested,596,"> ; > ; > @CatarinaGarbacz thanks for pushing your changes! I have left some comments and questions.; > ; > A bigger question I have is if there is a more general way to deal with SU2_INTERP, making it usable for all of develop. Just answering @WallyMaier comment, this should be possible by changing the file **fem_interpolation_structure.cpp** and change the function call:. output = COutputFactory::CreateOutput(**NEMO_NAVIER_STOKES**, input_config_container[ZONE_0],nDim);. So we have to replace **NEMO_NAVIER_STOKES** to something like **config[val_iZone]->GetKind_Solver()**.; ; I have not tested this change, but I tested changing it for NAVIER_STOKES, and it was able to interpolate the baseline SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555
https://github.com/su2code/SU2/pull/1160#issuecomment-760110555:622,Testability,test,tested,622,"> ; > ; > @CatarinaGarbacz thanks for pushing your changes! I have left some comments and questions.; > ; > A bigger question I have is if there is a more general way to deal with SU2_INTERP, making it usable for all of develop. Just answering @WallyMaier comment, this should be possible by changing the file **fem_interpolation_structure.cpp** and change the function call:. output = COutputFactory::CreateOutput(**NEMO_NAVIER_STOKES**, input_config_container[ZONE_0],nDim);. So we have to replace **NEMO_NAVIER_STOKES** to something like **config[val_iZone]->GetKind_Solver()**.; ; I have not tested this change, but I tested changing it for NAVIER_STOKES, and it was able to interpolate the baseline SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555
https://github.com/su2code/SU2/pull/1160#issuecomment-760110555:202,Usability,usab,usable,202,"> ; > ; > @CatarinaGarbacz thanks for pushing your changes! I have left some comments and questions.; > ; > A bigger question I have is if there is a more general way to deal with SU2_INTERP, making it usable for all of develop. Just answering @WallyMaier comment, this should be possible by changing the file **fem_interpolation_structure.cpp** and change the function call:. output = COutputFactory::CreateOutput(**NEMO_NAVIER_STOKES**, input_config_container[ZONE_0],nDim);. So we have to replace **NEMO_NAVIER_STOKES** to something like **config[val_iZone]->GetKind_Solver()**.; ; I have not tested this change, but I tested changing it for NAVIER_STOKES, and it was able to interpolate the baseline SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555
https://github.com/su2code/SU2/pull/1162#issuecomment-759607026:50,Availability,fault,fault,50,"@jtneedels the testcases currently failing are my fault, they will be fixed in a minute.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1162#issuecomment-759607026
https://github.com/su2code/SU2/pull/1162#issuecomment-759607026:15,Testability,test,testcases,15,"@jtneedels the testcases currently failing are my fault, they will be fixed in a minute.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1162#issuecomment-759607026
https://github.com/su2code/SU2/pull/1167#issuecomment-764568662:147,Availability,robust,robust,147,"It could be a thing to run it on installation, but at the same time it is also not a big deal to run it ourselves.; The script is not particularly robust IMO because it does not check for conflicting options coming from different solvers, e.g. same name output but a slightly different header on the history file, or a different history group, etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1167#issuecomment-764568662
https://github.com/su2code/SU2/pull/1167#issuecomment-764568662:33,Deployability,install,installation,33,"It could be a thing to run it on installation, but at the same time it is also not a big deal to run it ourselves.; The script is not particularly robust IMO because it does not check for conflicting options coming from different solvers, e.g. same name output but a slightly different header on the history file, or a different history group, etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1167#issuecomment-764568662
https://github.com/su2code/SU2/pull/1168#issuecomment-763603592:150,Testability,test,tests,150,"@WallyMaier @jtneedels @pcarruscag Following @CatarinaGarbacz suggestion, I have decided to do a PR directly to develop. It's missing some regression tests which have SYM_MARKER. I was expecting the thermalbath to be different, but it's strange for the flatplate not to pass since I only intended to modify the symmetry BC related to NEMO. Will check on that this afternoon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168#issuecomment-763603592
https://github.com/su2code/SU2/pull/1168#issuecomment-764975018:265,Performance,perform,performing,265,"After a meeting with @TobiKattmann, I have decided to change NEMO BC_EULER_WALL to match the one in CEulerSolver.cpp, where the velocity vector and gradients are corrected. Euler boundary condition is now called inside the symmetry plane boundary condition, before performing the residual correction; This way, I believe I am assuring for all the vector quantities to be parallel to the symmetry plane and guaranteeing the condition of symmetry according to _Jiri Blazek's - ""Computational fluid dynamics: principles and applications""_ . However, calling Euler function does not appear to substantially change the the solution substantially in the test I have made so far.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168#issuecomment-764975018
https://github.com/su2code/SU2/pull/1168#issuecomment-764975018:648,Testability,test,test,648,"After a meeting with @TobiKattmann, I have decided to change NEMO BC_EULER_WALL to match the one in CEulerSolver.cpp, where the velocity vector and gradients are corrected. Euler boundary condition is now called inside the symmetry plane boundary condition, before performing the residual correction; This way, I believe I am assuring for all the vector quantities to be parallel to the symmetry plane and guaranteeing the condition of symmetry according to _Jiri Blazek's - ""Computational fluid dynamics: principles and applications""_ . However, calling Euler function does not appear to substantially change the the solution substantially in the test I have made so far.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168#issuecomment-764975018
https://github.com/su2code/SU2/pull/1168#issuecomment-765027438:181,Testability,test,tests,181,"> Putting changes to the non-NEMO solvers in this PR is s.th. we could do as the normal-vector and gradient changes should be equal but it would delay the whole PR and a lot of Reg-tests would have changes. They are exactly the same type of solver, we should not have two types of symmetry.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168#issuecomment-765027438
https://github.com/su2code/SU2/issues/1171#issuecomment-765641337:15,Integrability,depend,dependent,15,"It is compiler dependent, I got the warning with clang with warnlevel 2, now it will probably not show the warning because I put an ""if false"" around that part of the code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1171#issuecomment-765641337
https://github.com/su2code/SU2/pull/1174#issuecomment-774712415:118,Deployability,Update,Update,118,"I was looking a bit more into this because of the issue with having to treat the structural solver differently in the Update function.; (I gotta say I feel lucky I never had to look into time domain stuff, because 3 nested iterations... not easy). Anyway, I think there is a problem here, the ""predicted displacement"" that is transferred to the fluid during outer iterations (the coupling iterations within each time iteration) is the one set in CFEASolver::SetAitken_Relaxation, which is part of the Corrector step at the end of the structural inner iterations (the ones within each outer iteration). The ""predicted velocity"" is not set in SetAitken_Relaxation thus the grid velocities are lagged by one time step, since they are only set to the current velocity of the structure at the end of the time step (in the Update methods). I have little trust in the predictor step, looking at it I thing only zero order has a chance of working and anything else will cause the fluid and structural sides to separate / overlap, I'll test the theory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415
https://github.com/su2code/SU2/pull/1174#issuecomment-774712415:817,Deployability,Update,Update,817,"I was looking a bit more into this because of the issue with having to treat the structural solver differently in the Update function.; (I gotta say I feel lucky I never had to look into time domain stuff, because 3 nested iterations... not easy). Anyway, I think there is a problem here, the ""predicted displacement"" that is transferred to the fluid during outer iterations (the coupling iterations within each time iteration) is the one set in CFEASolver::SetAitken_Relaxation, which is part of the Corrector step at the end of the structural inner iterations (the ones within each outer iteration). The ""predicted velocity"" is not set in SetAitken_Relaxation thus the grid velocities are lagged by one time step, since they are only set to the current velocity of the structure at the end of the time step (in the Update methods). I have little trust in the predictor step, looking at it I thing only zero order has a chance of working and anything else will cause the fluid and structural sides to separate / overlap, I'll test the theory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415
https://github.com/su2code/SU2/pull/1174#issuecomment-774712415:380,Modifiability,coupling,coupling,380,"I was looking a bit more into this because of the issue with having to treat the structural solver differently in the Update function.; (I gotta say I feel lucky I never had to look into time domain stuff, because 3 nested iterations... not easy). Anyway, I think there is a problem here, the ""predicted displacement"" that is transferred to the fluid during outer iterations (the coupling iterations within each time iteration) is the one set in CFEASolver::SetAitken_Relaxation, which is part of the Corrector step at the end of the structural inner iterations (the ones within each outer iteration). The ""predicted velocity"" is not set in SetAitken_Relaxation thus the grid velocities are lagged by one time step, since they are only set to the current velocity of the structure at the end of the time step (in the Update methods). I have little trust in the predictor step, looking at it I thing only zero order has a chance of working and anything else will cause the fluid and structural sides to separate / overlap, I'll test the theory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415
https://github.com/su2code/SU2/pull/1174#issuecomment-774712415:294,Safety,predict,predicted,294,"I was looking a bit more into this because of the issue with having to treat the structural solver differently in the Update function.; (I gotta say I feel lucky I never had to look into time domain stuff, because 3 nested iterations... not easy). Anyway, I think there is a problem here, the ""predicted displacement"" that is transferred to the fluid during outer iterations (the coupling iterations within each time iteration) is the one set in CFEASolver::SetAitken_Relaxation, which is part of the Corrector step at the end of the structural inner iterations (the ones within each outer iteration). The ""predicted velocity"" is not set in SetAitken_Relaxation thus the grid velocities are lagged by one time step, since they are only set to the current velocity of the structure at the end of the time step (in the Update methods). I have little trust in the predictor step, looking at it I thing only zero order has a chance of working and anything else will cause the fluid and structural sides to separate / overlap, I'll test the theory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415
https://github.com/su2code/SU2/pull/1174#issuecomment-774712415:607,Safety,predict,predicted,607,"I was looking a bit more into this because of the issue with having to treat the structural solver differently in the Update function.; (I gotta say I feel lucky I never had to look into time domain stuff, because 3 nested iterations... not easy). Anyway, I think there is a problem here, the ""predicted displacement"" that is transferred to the fluid during outer iterations (the coupling iterations within each time iteration) is the one set in CFEASolver::SetAitken_Relaxation, which is part of the Corrector step at the end of the structural inner iterations (the ones within each outer iteration). The ""predicted velocity"" is not set in SetAitken_Relaxation thus the grid velocities are lagged by one time step, since they are only set to the current velocity of the structure at the end of the time step (in the Update methods). I have little trust in the predictor step, looking at it I thing only zero order has a chance of working and anything else will cause the fluid and structural sides to separate / overlap, I'll test the theory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415
https://github.com/su2code/SU2/pull/1174#issuecomment-774712415:861,Safety,predict,predictor,861,"I was looking a bit more into this because of the issue with having to treat the structural solver differently in the Update function.; (I gotta say I feel lucky I never had to look into time domain stuff, because 3 nested iterations... not easy). Anyway, I think there is a problem here, the ""predicted displacement"" that is transferred to the fluid during outer iterations (the coupling iterations within each time iteration) is the one set in CFEASolver::SetAitken_Relaxation, which is part of the Corrector step at the end of the structural inner iterations (the ones within each outer iteration). The ""predicted velocity"" is not set in SetAitken_Relaxation thus the grid velocities are lagged by one time step, since they are only set to the current velocity of the structure at the end of the time step (in the Update methods). I have little trust in the predictor step, looking at it I thing only zero order has a chance of working and anything else will cause the fluid and structural sides to separate / overlap, I'll test the theory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415
https://github.com/su2code/SU2/pull/1174#issuecomment-774712415:1027,Testability,test,test,1027,"I was looking a bit more into this because of the issue with having to treat the structural solver differently in the Update function.; (I gotta say I feel lucky I never had to look into time domain stuff, because 3 nested iterations... not easy). Anyway, I think there is a problem here, the ""predicted displacement"" that is transferred to the fluid during outer iterations (the coupling iterations within each time iteration) is the one set in CFEASolver::SetAitken_Relaxation, which is part of the Corrector step at the end of the structural inner iterations (the ones within each outer iteration). The ""predicted velocity"" is not set in SetAitken_Relaxation thus the grid velocities are lagged by one time step, since they are only set to the current velocity of the structure at the end of the time step (in the Update methods). I have little trust in the predictor step, looking at it I thing only zero order has a chance of working and anything else will cause the fluid and structural sides to separate / overlap, I'll test the theory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415
https://github.com/su2code/SU2/pull/1174#issuecomment-774769502:4,Safety,predict,predictor,4,"The predictor thing is fine, the fluid displacement may start different from the structural but this is corrected in the outer iterations. I think the best solution for the velocity issue (if there is one, but it really looks like there is) would be to include ImplicitNewmark_Relaxation in the corrector step (this sets the solution to the relaxed solution and recomputes velocity and acceleration) and to transfer velocity directly, i.e. without any prediction.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774769502
https://github.com/su2code/SU2/pull/1174#issuecomment-774769502:452,Safety,predict,prediction,452,"The predictor thing is fine, the fluid displacement may start different from the structural but this is corrected in the outer iterations. I think the best solution for the velocity issue (if there is one, but it really looks like there is) would be to include ImplicitNewmark_Relaxation in the corrector step (this sets the solution to the relaxed solution and recomputes velocity and acceleration) and to transfer velocity directly, i.e. without any prediction.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774769502
https://github.com/su2code/SU2/pull/1174#issuecomment-774993325:193,Deployability,Update,Update,193,"Hi Pedro, thanks for looking into this more. I had run into inconsistencies for FSI problems with relaxation which was the reason for the domain specific calls coming into the multizone driver Update function. With the changes I introduced, the velocity at the interface was being transferred correctly with and without relaxation, so I left it there but it is a bit messy. I'll test with the modified calls for the Relaxation as you suggest. I completely agree that if we can simplify the velocity transfer by just using the velocity directly, then we should. Especially since the predicted velocity is only zero order anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325
https://github.com/su2code/SU2/pull/1174#issuecomment-774993325:261,Integrability,interface,interface,261,"Hi Pedro, thanks for looking into this more. I had run into inconsistencies for FSI problems with relaxation which was the reason for the domain specific calls coming into the multizone driver Update function. With the changes I introduced, the velocity at the interface was being transferred correctly with and without relaxation, so I left it there but it is a bit messy. I'll test with the modified calls for the Relaxation as you suggest. I completely agree that if we can simplify the velocity transfer by just using the velocity directly, then we should. Especially since the predicted velocity is only zero order anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325
https://github.com/su2code/SU2/pull/1174#issuecomment-774993325:582,Safety,predict,predicted,582,"Hi Pedro, thanks for looking into this more. I had run into inconsistencies for FSI problems with relaxation which was the reason for the domain specific calls coming into the multizone driver Update function. With the changes I introduced, the velocity at the interface was being transferred correctly with and without relaxation, so I left it there but it is a bit messy. I'll test with the modified calls for the Relaxation as you suggest. I completely agree that if we can simplify the velocity transfer by just using the velocity directly, then we should. Especially since the predicted velocity is only zero order anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325
https://github.com/su2code/SU2/pull/1174#issuecomment-774993325:379,Testability,test,test,379,"Hi Pedro, thanks for looking into this more. I had run into inconsistencies for FSI problems with relaxation which was the reason for the domain specific calls coming into the multizone driver Update function. With the changes I introduced, the velocity at the interface was being transferred correctly with and without relaxation, so I left it there but it is a bit messy. I'll test with the modified calls for the Relaxation as you suggest. I completely agree that if we can simplify the velocity transfer by just using the velocity directly, then we should. Especially since the predicted velocity is only zero order anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325
https://github.com/su2code/SU2/pull/1174#issuecomment-774993325:477,Usability,simpl,simplify,477,"Hi Pedro, thanks for looking into this more. I had run into inconsistencies for FSI problems with relaxation which was the reason for the domain specific calls coming into the multizone driver Update function. With the changes I introduced, the velocity at the interface was being transferred correctly with and without relaxation, so I left it there but it is a bit messy. I'll test with the modified calls for the Relaxation as you suggest. I completely agree that if we can simplify the velocity transfer by just using the velocity directly, then we should. Especially since the predicted velocity is only zero order anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325
https://github.com/su2code/SU2/pull/1174#issuecomment-778303887:22,Deployability,upgrade,upgrade,22,"Dear @cvencro,; Great upgrade of the interface treatment! ; I was wondering what happens in case the structural solver is not the internal one, but rather an external solver coupled via Python. I think, in that case, the BC_velocity cannot be applied as there is information missing (we usually only transfer the displacement via python).; The solution to this, with minimum modifications, would be to slightly change the result of GetFSI_simulation. Indeed, at the moment, it checks if there is a marker_fluid_load or if there are both the structural solver and the fluid solver.; I was thinking that we may leave only the second check (i.e. if there are both the structural solver and the fluid solver), so that we avoid any problem. Do you think this is possible? Why did we actually need to check also the marker_fluid_load?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778303887
https://github.com/su2code/SU2/pull/1174#issuecomment-778303887:37,Integrability,interface,interface,37,"Dear @cvencro,; Great upgrade of the interface treatment! ; I was wondering what happens in case the structural solver is not the internal one, but rather an external solver coupled via Python. I think, in that case, the BC_velocity cannot be applied as there is information missing (we usually only transfer the displacement via python).; The solution to this, with minimum modifications, would be to slightly change the result of GetFSI_simulation. Indeed, at the moment, it checks if there is a marker_fluid_load or if there are both the structural solver and the fluid solver.; I was thinking that we may leave only the second check (i.e. if there are both the structural solver and the fluid solver), so that we avoid any problem. Do you think this is possible? Why did we actually need to check also the marker_fluid_load?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778303887
https://github.com/su2code/SU2/pull/1174#issuecomment-778303887:717,Safety,avoid,avoid,717,"Dear @cvencro,; Great upgrade of the interface treatment! ; I was wondering what happens in case the structural solver is not the internal one, but rather an external solver coupled via Python. I think, in that case, the BC_velocity cannot be applied as there is information missing (we usually only transfer the displacement via python).; The solution to this, with minimum modifications, would be to slightly change the result of GetFSI_simulation. Indeed, at the moment, it checks if there is a marker_fluid_load or if there are both the structural solver and the fluid solver.; I was thinking that we may leave only the second check (i.e. if there are both the structural solver and the fluid solver), so that we avoid any problem. Do you think this is possible? Why did we actually need to check also the marker_fluid_load?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778303887
https://github.com/su2code/SU2/pull/1174#issuecomment-778326558:163,Availability,avail,available,163,"@Nicola-Fonzi, you may as well want to consider importing as well the structural velocities in the interface from your external solver. That information is always available and gives a consistent definition of the displacement and velocity on both the grid motions and the interface for dynamic FSI problems -- not to mention simplifying the evaluation of the mesh adjoints.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778326558
https://github.com/su2code/SU2/pull/1174#issuecomment-778326558:99,Integrability,interface,interface,99,"@Nicola-Fonzi, you may as well want to consider importing as well the structural velocities in the interface from your external solver. That information is always available and gives a consistent definition of the displacement and velocity on both the grid motions and the interface for dynamic FSI problems -- not to mention simplifying the evaluation of the mesh adjoints.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778326558
https://github.com/su2code/SU2/pull/1174#issuecomment-778326558:273,Integrability,interface,interface,273,"@Nicola-Fonzi, you may as well want to consider importing as well the structural velocities in the interface from your external solver. That information is always available and gives a consistent definition of the displacement and velocity on both the grid motions and the interface for dynamic FSI problems -- not to mention simplifying the evaluation of the mesh adjoints.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778326558
https://github.com/su2code/SU2/pull/1174#issuecomment-778326558:326,Usability,simpl,simplifying,326,"@Nicola-Fonzi, you may as well want to consider importing as well the structural velocities in the interface from your external solver. That information is always available and gives a consistent definition of the displacement and velocity on both the grid motions and the interface for dynamic FSI problems -- not to mention simplifying the evaluation of the mesh adjoints.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778326558
https://github.com/su2code/SU2/pull/1174#issuecomment-778368854:331,Modifiability,config,config,331,"Hi @Nicola-Fonzi,. I'm not 100% sure of the reasons behind the GetFSI_Simulation criteria. I'd imagine that the nMarker_Fluid_Load might have been included there to make sure that a problem is treated as FSI only if there is transfer of load from the fluid to the structural domain, even if both zones existed independently in the config. But since the GetFSI_Simulation check is set up as an ""or"" rather than ""and"", as long as one of them is satisfied, the logic will be true for an FSI simulation, which might be sufficient for your application?. For the velocity transfer, I agree with Rafa that it would be better if you could also transfer the velocity from the external structural solver. If an external structural solver is used for dynamic analysis, it probably can output the structural velocities as well as the structural displacements? I left the methods for the recalculation of the grid velocity using finite differences in the code to support fluid-only problems with dynamic grid motion, I wouldn't suggest this as the method for FSI problems. For primal analysis, results from both methods agree with FSI benchmark cases but if you are interested in adjoint analysis at any point, transferring the velocity information from the structural domain directly to the fluid domain gives a significant simplification and improvement to the gradients.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854
https://github.com/su2code/SU2/pull/1174#issuecomment-778368854:237,Performance,load,load,237,"Hi @Nicola-Fonzi,. I'm not 100% sure of the reasons behind the GetFSI_Simulation criteria. I'd imagine that the nMarker_Fluid_Load might have been included there to make sure that a problem is treated as FSI only if there is transfer of load from the fluid to the structural domain, even if both zones existed independently in the config. But since the GetFSI_Simulation check is set up as an ""or"" rather than ""and"", as long as one of them is satisfied, the logic will be true for an FSI simulation, which might be sufficient for your application?. For the velocity transfer, I agree with Rafa that it would be better if you could also transfer the velocity from the external structural solver. If an external structural solver is used for dynamic analysis, it probably can output the structural velocities as well as the structural displacements? I left the methods for the recalculation of the grid velocity using finite differences in the code to support fluid-only problems with dynamic grid motion, I wouldn't suggest this as the method for FSI problems. For primal analysis, results from both methods agree with FSI benchmark cases but if you are interested in adjoint analysis at any point, transferring the velocity information from the structural domain directly to the fluid domain gives a significant simplification and improvement to the gradients.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854
https://github.com/su2code/SU2/pull/1174#issuecomment-778368854:458,Testability,log,logic,458,"Hi @Nicola-Fonzi,. I'm not 100% sure of the reasons behind the GetFSI_Simulation criteria. I'd imagine that the nMarker_Fluid_Load might have been included there to make sure that a problem is treated as FSI only if there is transfer of load from the fluid to the structural domain, even if both zones existed independently in the config. But since the GetFSI_Simulation check is set up as an ""or"" rather than ""and"", as long as one of them is satisfied, the logic will be true for an FSI simulation, which might be sufficient for your application?. For the velocity transfer, I agree with Rafa that it would be better if you could also transfer the velocity from the external structural solver. If an external structural solver is used for dynamic analysis, it probably can output the structural velocities as well as the structural displacements? I left the methods for the recalculation of the grid velocity using finite differences in the code to support fluid-only problems with dynamic grid motion, I wouldn't suggest this as the method for FSI problems. For primal analysis, results from both methods agree with FSI benchmark cases but if you are interested in adjoint analysis at any point, transferring the velocity information from the structural domain directly to the fluid domain gives a significant simplification and improvement to the gradients.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854
https://github.com/su2code/SU2/pull/1174#issuecomment-778368854:1122,Testability,benchmark,benchmark,1122,"Hi @Nicola-Fonzi,. I'm not 100% sure of the reasons behind the GetFSI_Simulation criteria. I'd imagine that the nMarker_Fluid_Load might have been included there to make sure that a problem is treated as FSI only if there is transfer of load from the fluid to the structural domain, even if both zones existed independently in the config. But since the GetFSI_Simulation check is set up as an ""or"" rather than ""and"", as long as one of them is satisfied, the logic will be true for an FSI simulation, which might be sufficient for your application?. For the velocity transfer, I agree with Rafa that it would be better if you could also transfer the velocity from the external structural solver. If an external structural solver is used for dynamic analysis, it probably can output the structural velocities as well as the structural displacements? I left the methods for the recalculation of the grid velocity using finite differences in the code to support fluid-only problems with dynamic grid motion, I wouldn't suggest this as the method for FSI problems. For primal analysis, results from both methods agree with FSI benchmark cases but if you are interested in adjoint analysis at any point, transferring the velocity information from the structural domain directly to the fluid domain gives a significant simplification and improvement to the gradients.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854
https://github.com/su2code/SU2/pull/1174#issuecomment-778368854:1312,Usability,simpl,simplification,1312,"Hi @Nicola-Fonzi,. I'm not 100% sure of the reasons behind the GetFSI_Simulation criteria. I'd imagine that the nMarker_Fluid_Load might have been included there to make sure that a problem is treated as FSI only if there is transfer of load from the fluid to the structural domain, even if both zones existed independently in the config. But since the GetFSI_Simulation check is set up as an ""or"" rather than ""and"", as long as one of them is satisfied, the logic will be true for an FSI simulation, which might be sufficient for your application?. For the velocity transfer, I agree with Rafa that it would be better if you could also transfer the velocity from the external structural solver. If an external structural solver is used for dynamic analysis, it probably can output the structural velocities as well as the structural displacements? I left the methods for the recalculation of the grid velocity using finite differences in the code to support fluid-only problems with dynamic grid motion, I wouldn't suggest this as the method for FSI problems. For primal analysis, results from both methods agree with FSI benchmark cases but if you are interested in adjoint analysis at any point, transferring the velocity information from the structural domain directly to the fluid domain gives a significant simplification and improvement to the gradients.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854
https://github.com/su2code/SU2/pull/1174#issuecomment-778381964:13,Performance,load,load,13,"Marker fluid load is to allow the native structural solver to receive fluid loads from python, and to extract adjoints again from python. Similarly, it allows extracting fluid loads from the flow solver via python, and its adjoints to be set, again from python.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778381964
https://github.com/su2code/SU2/pull/1174#issuecomment-778381964:76,Performance,load,loads,76,"Marker fluid load is to allow the native structural solver to receive fluid loads from python, and to extract adjoints again from python. Similarly, it allows extracting fluid loads from the flow solver via python, and its adjoints to be set, again from python.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778381964
https://github.com/su2code/SU2/pull/1174#issuecomment-778381964:176,Performance,load,loads,176,"Marker fluid load is to allow the native structural solver to receive fluid loads from python, and to extract adjoints again from python. Similarly, it allows extracting fluid loads from the flow solver via python, and its adjoints to be set, again from python.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778381964
https://github.com/su2code/SU2/pull/1174#issuecomment-778391020:774,Integrability,interface,interface,774,"While I believe the velocity transfer is the way to go for adjoints and accuracy especially in incompressible flow, it should be possible to cater to both needs by basing the flow solver flow traction malarkey on Marker deform mesh, instead of marker fluid load.; Which would possibly make the setup easier as well.; If we want the flexibility to have fluid load markers independent of mesh deformation deformation, we may need a ""yet another config knob"".; One aspect to consider is that the displacement coming from python might be a forced motion, and so the consistency argument no longer matters.; Perhaps what we need, is a way to tell for which boundaries the velocity is known or not.; If the velocity is not known, it could be computed by finite differences at the interface and made part of the velocity-elasticity problem.; This would allow the forced motions to work together with FSI.; If the velocity is not known for any boundary, it is orders of magnitude quicker to compute it by finite differences. Sorry for the soliloquy, but I think all y'all get what I'm sayin'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778391020
https://github.com/su2code/SU2/pull/1174#issuecomment-778391020:443,Modifiability,config,config,443,"While I believe the velocity transfer is the way to go for adjoints and accuracy especially in incompressible flow, it should be possible to cater to both needs by basing the flow solver flow traction malarkey on Marker deform mesh, instead of marker fluid load.; Which would possibly make the setup easier as well.; If we want the flexibility to have fluid load markers independent of mesh deformation deformation, we may need a ""yet another config knob"".; One aspect to consider is that the displacement coming from python might be a forced motion, and so the consistency argument no longer matters.; Perhaps what we need, is a way to tell for which boundaries the velocity is known or not.; If the velocity is not known, it could be computed by finite differences at the interface and made part of the velocity-elasticity problem.; This would allow the forced motions to work together with FSI.; If the velocity is not known for any boundary, it is orders of magnitude quicker to compute it by finite differences. Sorry for the soliloquy, but I think all y'all get what I'm sayin'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778391020
https://github.com/su2code/SU2/pull/1174#issuecomment-778391020:257,Performance,load,load,257,"While I believe the velocity transfer is the way to go for adjoints and accuracy especially in incompressible flow, it should be possible to cater to both needs by basing the flow solver flow traction malarkey on Marker deform mesh, instead of marker fluid load.; Which would possibly make the setup easier as well.; If we want the flexibility to have fluid load markers independent of mesh deformation deformation, we may need a ""yet another config knob"".; One aspect to consider is that the displacement coming from python might be a forced motion, and so the consistency argument no longer matters.; Perhaps what we need, is a way to tell for which boundaries the velocity is known or not.; If the velocity is not known, it could be computed by finite differences at the interface and made part of the velocity-elasticity problem.; This would allow the forced motions to work together with FSI.; If the velocity is not known for any boundary, it is orders of magnitude quicker to compute it by finite differences. Sorry for the soliloquy, but I think all y'all get what I'm sayin'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778391020
https://github.com/su2code/SU2/pull/1174#issuecomment-778391020:358,Performance,load,load,358,"While I believe the velocity transfer is the way to go for adjoints and accuracy especially in incompressible flow, it should be possible to cater to both needs by basing the flow solver flow traction malarkey on Marker deform mesh, instead of marker fluid load.; Which would possibly make the setup easier as well.; If we want the flexibility to have fluid load markers independent of mesh deformation deformation, we may need a ""yet another config knob"".; One aspect to consider is that the displacement coming from python might be a forced motion, and so the consistency argument no longer matters.; Perhaps what we need, is a way to tell for which boundaries the velocity is known or not.; If the velocity is not known, it could be computed by finite differences at the interface and made part of the velocity-elasticity problem.; This would allow the forced motions to work together with FSI.; If the velocity is not known for any boundary, it is orders of magnitude quicker to compute it by finite differences. Sorry for the soliloquy, but I think all y'all get what I'm sayin'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778391020
https://github.com/su2code/SU2/pull/1174#issuecomment-778585840:336,Deployability,configurat,configuration,336,"Dear all,; Thank you very much for your comments!; I agree with you, transferring the velocity is definitely the best solution in the long run. However, as Pedro mentioned, there is also the case when a certain imposed deformation is set, without solving any structural system. This is the case of a forced motion. In the python script configuration files it is required to set the marker_fluid_load as this is the only way to make SU2 compute the tractions at that marker. Maybe, a solution to both needs, can be to make SU2 compute the tractions anyway for the wall boundary. . In this way, if you have the velocity at the interface, you can define this interface as also marker_fluid_load, the FSI bool will be true and the new BC_velocity will be used. If you do not have the velocity at the interface, you will avoid marker_fluid_load and SU2 will not fail trying to use bc_velocity. This will also give me more time to develop, from the python side, the required modifications to use the new interface. Please let me know your comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840
https://github.com/su2code/SU2/pull/1174#issuecomment-778585840:625,Integrability,interface,interface,625,"Dear all,; Thank you very much for your comments!; I agree with you, transferring the velocity is definitely the best solution in the long run. However, as Pedro mentioned, there is also the case when a certain imposed deformation is set, without solving any structural system. This is the case of a forced motion. In the python script configuration files it is required to set the marker_fluid_load as this is the only way to make SU2 compute the tractions at that marker. Maybe, a solution to both needs, can be to make SU2 compute the tractions anyway for the wall boundary. . In this way, if you have the velocity at the interface, you can define this interface as also marker_fluid_load, the FSI bool will be true and the new BC_velocity will be used. If you do not have the velocity at the interface, you will avoid marker_fluid_load and SU2 will not fail trying to use bc_velocity. This will also give me more time to develop, from the python side, the required modifications to use the new interface. Please let me know your comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840
https://github.com/su2code/SU2/pull/1174#issuecomment-778585840:656,Integrability,interface,interface,656,"Dear all,; Thank you very much for your comments!; I agree with you, transferring the velocity is definitely the best solution in the long run. However, as Pedro mentioned, there is also the case when a certain imposed deformation is set, without solving any structural system. This is the case of a forced motion. In the python script configuration files it is required to set the marker_fluid_load as this is the only way to make SU2 compute the tractions at that marker. Maybe, a solution to both needs, can be to make SU2 compute the tractions anyway for the wall boundary. . In this way, if you have the velocity at the interface, you can define this interface as also marker_fluid_load, the FSI bool will be true and the new BC_velocity will be used. If you do not have the velocity at the interface, you will avoid marker_fluid_load and SU2 will not fail trying to use bc_velocity. This will also give me more time to develop, from the python side, the required modifications to use the new interface. Please let me know your comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840
https://github.com/su2code/SU2/pull/1174#issuecomment-778585840:796,Integrability,interface,interface,796,"Dear all,; Thank you very much for your comments!; I agree with you, transferring the velocity is definitely the best solution in the long run. However, as Pedro mentioned, there is also the case when a certain imposed deformation is set, without solving any structural system. This is the case of a forced motion. In the python script configuration files it is required to set the marker_fluid_load as this is the only way to make SU2 compute the tractions at that marker. Maybe, a solution to both needs, can be to make SU2 compute the tractions anyway for the wall boundary. . In this way, if you have the velocity at the interface, you can define this interface as also marker_fluid_load, the FSI bool will be true and the new BC_velocity will be used. If you do not have the velocity at the interface, you will avoid marker_fluid_load and SU2 will not fail trying to use bc_velocity. This will also give me more time to develop, from the python side, the required modifications to use the new interface. Please let me know your comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840
https://github.com/su2code/SU2/pull/1174#issuecomment-778585840:998,Integrability,interface,interface,998,"Dear all,; Thank you very much for your comments!; I agree with you, transferring the velocity is definitely the best solution in the long run. However, as Pedro mentioned, there is also the case when a certain imposed deformation is set, without solving any structural system. This is the case of a forced motion. In the python script configuration files it is required to set the marker_fluid_load as this is the only way to make SU2 compute the tractions at that marker. Maybe, a solution to both needs, can be to make SU2 compute the tractions anyway for the wall boundary. . In this way, if you have the velocity at the interface, you can define this interface as also marker_fluid_load, the FSI bool will be true and the new BC_velocity will be used. If you do not have the velocity at the interface, you will avoid marker_fluid_load and SU2 will not fail trying to use bc_velocity. This will also give me more time to develop, from the python side, the required modifications to use the new interface. Please let me know your comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840
https://github.com/su2code/SU2/pull/1174#issuecomment-778585840:336,Modifiability,config,configuration,336,"Dear all,; Thank you very much for your comments!; I agree with you, transferring the velocity is definitely the best solution in the long run. However, as Pedro mentioned, there is also the case when a certain imposed deformation is set, without solving any structural system. This is the case of a forced motion. In the python script configuration files it is required to set the marker_fluid_load as this is the only way to make SU2 compute the tractions at that marker. Maybe, a solution to both needs, can be to make SU2 compute the tractions anyway for the wall boundary. . In this way, if you have the velocity at the interface, you can define this interface as also marker_fluid_load, the FSI bool will be true and the new BC_velocity will be used. If you do not have the velocity at the interface, you will avoid marker_fluid_load and SU2 will not fail trying to use bc_velocity. This will also give me more time to develop, from the python side, the required modifications to use the new interface. Please let me know your comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840
https://github.com/su2code/SU2/pull/1174#issuecomment-778585840:816,Safety,avoid,avoid,816,"Dear all,; Thank you very much for your comments!; I agree with you, transferring the velocity is definitely the best solution in the long run. However, as Pedro mentioned, there is also the case when a certain imposed deformation is set, without solving any structural system. This is the case of a forced motion. In the python script configuration files it is required to set the marker_fluid_load as this is the only way to make SU2 compute the tractions at that marker. Maybe, a solution to both needs, can be to make SU2 compute the tractions anyway for the wall boundary. . In this way, if you have the velocity at the interface, you can define this interface as also marker_fluid_load, the FSI bool will be true and the new BC_velocity will be used. If you do not have the velocity at the interface, you will avoid marker_fluid_load and SU2 will not fail trying to use bc_velocity. This will also give me more time to develop, from the python side, the required modifications to use the new interface. Please let me know your comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840
https://github.com/su2code/SU2/pull/1174#issuecomment-778601816:150,Testability,test,testing,150,"See #1197, it should be straightforward regarding the tractions, but the FSI boolean has implications in other areas of the fluid solver. I need help testing as I don't feel like deep diving into the python guts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778601816
https://github.com/su2code/SU2/pull/1174#issuecomment-822054258:107,Deployability,update,updated,107,"Thanks for the review Pedro. Most of the regression tests pass now as well. The dynamic FSI reg tests were updated for the serial and parallel tests since the new velocity bc brings about a change for them inherently. The hybrid regression tests haven't been changed yet, but they are diverging in the tests to begin with. It is very likely that some specific calls for the hybrid implementation might be missing. I tried to follow the existing implementation style but I'm not sure what might be missing/wrong. Can you suggest anything for me to try or look for?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822054258
https://github.com/su2code/SU2/pull/1174#issuecomment-822054258:52,Testability,test,tests,52,"Thanks for the review Pedro. Most of the regression tests pass now as well. The dynamic FSI reg tests were updated for the serial and parallel tests since the new velocity bc brings about a change for them inherently. The hybrid regression tests haven't been changed yet, but they are diverging in the tests to begin with. It is very likely that some specific calls for the hybrid implementation might be missing. I tried to follow the existing implementation style but I'm not sure what might be missing/wrong. Can you suggest anything for me to try or look for?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822054258
https://github.com/su2code/SU2/pull/1174#issuecomment-822054258:96,Testability,test,tests,96,"Thanks for the review Pedro. Most of the regression tests pass now as well. The dynamic FSI reg tests were updated for the serial and parallel tests since the new velocity bc brings about a change for them inherently. The hybrid regression tests haven't been changed yet, but they are diverging in the tests to begin with. It is very likely that some specific calls for the hybrid implementation might be missing. I tried to follow the existing implementation style but I'm not sure what might be missing/wrong. Can you suggest anything for me to try or look for?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822054258
https://github.com/su2code/SU2/pull/1174#issuecomment-822054258:143,Testability,test,tests,143,"Thanks for the review Pedro. Most of the regression tests pass now as well. The dynamic FSI reg tests were updated for the serial and parallel tests since the new velocity bc brings about a change for them inherently. The hybrid regression tests haven't been changed yet, but they are diverging in the tests to begin with. It is very likely that some specific calls for the hybrid implementation might be missing. I tried to follow the existing implementation style but I'm not sure what might be missing/wrong. Can you suggest anything for me to try or look for?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822054258
https://github.com/su2code/SU2/pull/1174#issuecomment-822054258:240,Testability,test,tests,240,"Thanks for the review Pedro. Most of the regression tests pass now as well. The dynamic FSI reg tests were updated for the serial and parallel tests since the new velocity bc brings about a change for them inherently. The hybrid regression tests haven't been changed yet, but they are diverging in the tests to begin with. It is very likely that some specific calls for the hybrid implementation might be missing. I tried to follow the existing implementation style but I'm not sure what might be missing/wrong. Can you suggest anything for me to try or look for?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822054258
https://github.com/su2code/SU2/pull/1174#issuecomment-822054258:302,Testability,test,tests,302,"Thanks for the review Pedro. Most of the regression tests pass now as well. The dynamic FSI reg tests were updated for the serial and parallel tests since the new velocity bc brings about a change for them inherently. The hybrid regression tests haven't been changed yet, but they are diverging in the tests to begin with. It is very likely that some specific calls for the hybrid implementation might be missing. I tried to follow the existing implementation style but I'm not sure what might be missing/wrong. Can you suggest anything for me to try or look for?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822054258
https://github.com/su2code/SU2/pull/1174#issuecomment-822065645:217,Deployability,update,updated,217,"No problem :) the hybrid parallel should be fixed (it was a parallel section inside another).; Have you had a chance to look into the other issue I think I saw? Namely the structural velocity being transferred is not updated once per outer iteration, but rather once per time step which makes it lag (that is what it looks but I might be wrong, I explained it better on my Feb 7 comment).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822065645
https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:677,Availability,redundant,redundant,677,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705
https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:193,Deployability,update,update,193,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705
https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:339,Deployability,Update,Update,339,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705
https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:949,Deployability,integrat,integration,949,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705
https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:949,Integrability,integrat,integration,949,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705
https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:128,Safety,predict,predicted,128,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705
https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:677,Safety,redund,redundant,677,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705
https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:83,Testability,log,logic,83,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705
https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:368,Testability,log,logic,368,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705
https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:763,Testability,test,tests,763,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705
https://github.com/su2code/SU2/pull/1174#issuecomment-822107852:221,Deployability,update,updated,221,"> No problem :) the hybrid parallel should be fixed (it was a parallel section inside another).; > Have you had a chance to look into the other issue I think I saw? Namely the structural velocity being transferred is not updated once per outer iteration, but rather once per time step which makes it lag (that is what it looks but I might be wrong, I explained it better on my Feb 7 comment). Thanks for the fix for the hybrid parallel reg test! The dynamic fsi test cases were the only remaining ones which was expected, this has been updated now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822107852
https://github.com/su2code/SU2/pull/1174#issuecomment-822107852:536,Deployability,update,updated,536,"> No problem :) the hybrid parallel should be fixed (it was a parallel section inside another).; > Have you had a chance to look into the other issue I think I saw? Namely the structural velocity being transferred is not updated once per outer iteration, but rather once per time step which makes it lag (that is what it looks but I might be wrong, I explained it better on my Feb 7 comment). Thanks for the fix for the hybrid parallel reg test! The dynamic fsi test cases were the only remaining ones which was expected, this has been updated now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822107852
https://github.com/su2code/SU2/pull/1174#issuecomment-822107852:440,Testability,test,test,440,"> No problem :) the hybrid parallel should be fixed (it was a parallel section inside another).; > Have you had a chance to look into the other issue I think I saw? Namely the structural velocity being transferred is not updated once per outer iteration, but rather once per time step which makes it lag (that is what it looks but I might be wrong, I explained it better on my Feb 7 comment). Thanks for the fix for the hybrid parallel reg test! The dynamic fsi test cases were the only remaining ones which was expected, this has been updated now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822107852
https://github.com/su2code/SU2/pull/1174#issuecomment-822107852:462,Testability,test,test,462,"> No problem :) the hybrid parallel should be fixed (it was a parallel section inside another).; > Have you had a chance to look into the other issue I think I saw? Namely the structural velocity being transferred is not updated once per outer iteration, but rather once per time step which makes it lag (that is what it looks but I might be wrong, I explained it better on my Feb 7 comment). Thanks for the fix for the hybrid parallel reg test! The dynamic fsi test cases were the only remaining ones which was expected, this has been updated now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822107852
https://github.com/su2code/SU2/pull/1174#issuecomment-822335132:119,Safety,predict,prediction,119,Oh right... It was there all along and I missed it. Hope you don't mind I made that consistent and merged the velocity prediction with the displacement prediction.; And so everything LGTM.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822335132
https://github.com/su2code/SU2/pull/1174#issuecomment-822335132:152,Safety,predict,prediction,152,Oh right... It was there all along and I missed it. Hope you don't mind I made that consistent and merged the velocity prediction with the displacement prediction.; And so everything LGTM.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822335132
https://github.com/su2code/SU2/pull/1174#issuecomment-827981242:120,Deployability,update,updated,120,"Yes, nothing more from me on this. Once this is merged, the comparison in PR #1260 should become simpler too. I've just updated this branch with develop, we can merge once the regression tests pass again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242
https://github.com/su2code/SU2/pull/1174#issuecomment-827981242:187,Testability,test,tests,187,"Yes, nothing more from me on this. Once this is merged, the comparison in PR #1260 should become simpler too. I've just updated this branch with develop, we can merge once the regression tests pass again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242
https://github.com/su2code/SU2/pull/1174#issuecomment-827981242:97,Usability,simpl,simpler,97,"Yes, nothing more from me on this. Once this is merged, the comparison in PR #1260 should become simpler too. I've just updated this branch with develop, we can merge once the regression tests pass again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242
https://github.com/su2code/SU2/issues/1175#issuecomment-765906054:1115,Deployability,update,update,1115,"Thank you for replying!. Yeah, apologies as I forgot to add that part in my CFD online post. I agree with the fact that there would be a certain difference in the values between the two solvers. But as not as large as what I am getting, as you said. After my initial post on CFD online, I meshed with finer settings and ran different meshes only to find the drop in y+ near that sharp region of the blade root-spinner junction. It went from 450 to 200 (latest). This could affect the solution significantly. I will run the simulation with NUM_METHOD_GRAD= WEIGHTED_LEAST_SQUARES as mentioned by you, as I had been running it with GREEN_GAUSS up until now because it turns out to be faster. . In Fluent, the thrust and torque values are in dimensional form and it reports the forces on propeller and spinner in the x-direction as my flow is in that direction. I am not sure why -CFz and -CMz for SU2? I know that the factor to get the dimensional force is calculated using surface normals in the z-direction, and the reference area is based on that. I'll run the simulation with the settings as suggested by you and update it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-765906054
https://github.com/su2code/SU2/issues/1175#issuecomment-765907601:63,Deployability,configurat,configuration,63,"Yes, I have activated the option for the force breakdown in my configuration file and currently running it. I'll update you with the findings I get.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-765907601
https://github.com/su2code/SU2/issues/1175#issuecomment-765907601:113,Deployability,update,update,113,"Yes, I have activated the option for the force breakdown in my configuration file and currently running it. I'll update you with the findings I get.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-765907601
https://github.com/su2code/SU2/issues/1175#issuecomment-765907601:63,Modifiability,config,configuration,63,"Yes, I have activated the option for the force breakdown in my configuration file and currently running it. I'll update you with the findings I get.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-765907601
https://github.com/su2code/SU2/issues/1175#issuecomment-767560906:139,Energy Efficiency,reduce,reduced,139,"Hi, thank you for the suggestions. I simulated with the suggested settings, and the values of y+ in the spinner-blade junction region have reduced to 140. I am specifically interested in knowing thrust and moment, and those turned out to be similar to the previous runs, which are two orders of magnitude lower than experimental ones. . > You need to look at CFx and CMx from SU2 then. Use WRT_FORCES_BREAKDOWN = YES, I think the breakdown file has dimensional forces, or at least the reference density, velocity, pressure, etc. The force breakdown file generates non-dimensional coefficients using the reference area on the z-plane. If I want to find the dimensional forces in the x-direction (flow direction), should the non-dimensional factor be based on the reference area on the z-plane or the x-plane?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-767560906
https://github.com/su2code/SU2/issues/1175#issuecomment-767597032:309,Safety,avoid,avoidable,309,"Thrust should be -11.12N and torque 0.8329Nm, not accounting for number of blades. Is that closer to what you expect?. The coefficients are computed with a reference velocity based on Mach motion, but the dimensional factor shown in the breakdown file considers the free stream velocity instead... (silly and avoidable bug).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-767597032
https://github.com/su2code/SU2/issues/1175#issuecomment-1946975666:317,Safety,avoid,avoidable,317,"> Thrust should be -11.12N and torque 0.8329Nm, not accounting for number of blades. Is that closer to what you expect?; > ; > The coefficients are computed with a reference velocity based on Mach motion, but the dimensional factor shown in the breakdown file considers the free stream velocity instead... (silly and avoidable bug). How did you get the values of -11.12N and 0.8329Nm from the breakdown file, and output file? I'm not sure where/how to calculate it. I'm new at SU2. and want to use it for VAWT torque calcs, so stumbled upon this discussion in my searches. Many thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-1946975666
https://github.com/su2code/SU2/pull/1176#issuecomment-769213365:556,Modifiability,config,config,556,"Got my first glasses half a year into Fortran… and never looked back. From: Pedro Gomes <notifications@github.com>; Sent: 28 January 2021 11:13; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Structural stress penalty function for optimization, fix some CConfig problems (#1176). @pcarruscag commented on this pull request. ________________________________. In Common/src/grid_movement/CSurfaceMovement.cpp<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>:. > - Omega = (config->GetRotation_Rate(3)/config->GetOmega_Ref());. + Omega = config->GetRotation_Rate(2)/config->GetOmega_Ref();. As blind an any programmer, we should have XYZ enums. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AATH4JKAAEAXKNHHCUGOQT3S4FBB7ANCNFSM4WOZ6DBA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176#issuecomment-769213365
https://github.com/su2code/SU2/pull/1176#issuecomment-769213365:584,Modifiability,config,config,584,"Got my first glasses half a year into Fortran… and never looked back. From: Pedro Gomes <notifications@github.com>; Sent: 28 January 2021 11:13; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Structural stress penalty function for optimization, fix some CConfig problems (#1176). @pcarruscag commented on this pull request. ________________________________. In Common/src/grid_movement/CSurfaceMovement.cpp<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>:. > - Omega = (config->GetRotation_Rate(3)/config->GetOmega_Ref());. + Omega = config->GetRotation_Rate(2)/config->GetOmega_Ref();. As blind an any programmer, we should have XYZ enums. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AATH4JKAAEAXKNHHCUGOQT3S4FBB7ANCNFSM4WOZ6DBA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176#issuecomment-769213365
https://github.com/su2code/SU2/pull/1176#issuecomment-769213365:620,Modifiability,config,config,620,"Got my first glasses half a year into Fortran… and never looked back. From: Pedro Gomes <notifications@github.com>; Sent: 28 January 2021 11:13; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Structural stress penalty function for optimization, fix some CConfig problems (#1176). @pcarruscag commented on this pull request. ________________________________. In Common/src/grid_movement/CSurfaceMovement.cpp<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>:. > - Omega = (config->GetRotation_Rate(3)/config->GetOmega_Ref());. + Omega = config->GetRotation_Rate(2)/config->GetOmega_Ref();. As blind an any programmer, we should have XYZ enums. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AATH4JKAAEAXKNHHCUGOQT3S4FBB7ANCNFSM4WOZ6DBA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176#issuecomment-769213365
https://github.com/su2code/SU2/pull/1176#issuecomment-769213365:648,Modifiability,config,config,648,"Got my first glasses half a year into Fortran… and never looked back. From: Pedro Gomes <notifications@github.com>; Sent: 28 January 2021 11:13; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Structural stress penalty function for optimization, fix some CConfig problems (#1176). @pcarruscag commented on this pull request. ________________________________. In Common/src/grid_movement/CSurfaceMovement.cpp<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>:. > - Omega = (config->GetRotation_Rate(3)/config->GetOmega_Ref());. + Omega = config->GetRotation_Rate(2)/config->GetOmega_Ref();. As blind an any programmer, we should have XYZ enums. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AATH4JKAAEAXKNHHCUGOQT3S4FBB7ANCNFSM4WOZ6DBA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176#issuecomment-769213365
https://github.com/su2code/SU2/pull/1176#issuecomment-769213365:301,Performance,optimiz,optimization,301,"Got my first glasses half a year into Fortran… and never looked back. From: Pedro Gomes <notifications@github.com>; Sent: 28 January 2021 11:13; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Structural stress penalty function for optimization, fix some CConfig problems (#1176). @pcarruscag commented on this pull request. ________________________________. In Common/src/grid_movement/CSurfaceMovement.cpp<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>:. > - Omega = (config->GetRotation_Rate(3)/config->GetOmega_Ref());. + Omega = config->GetRotation_Rate(2)/config->GetOmega_Ref();. As blind an any programmer, we should have XYZ enums. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AATH4JKAAEAXKNHHCUGOQT3S4FBB7ANCNFSM4WOZ6DBA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176#issuecomment-769213365
https://github.com/su2code/SU2/issues/1179#issuecomment-768335693:123,Availability,fault,fault,123,All external libraries seem to take a communicator as argument. And it would be important for this to work for example for fault tolerant communication.; It would be very important to undefine the dummy MPI_COMM_WORLD used for serial compilation to ensure that it does not get silently re-introduced in the code. Can you create a PR for this?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179#issuecomment-768335693
https://github.com/su2code/SU2/issues/1179#issuecomment-768335693:129,Availability,toler,tolerant,129,All external libraries seem to take a communicator as argument. And it would be important for this to work for example for fault tolerant communication.; It would be very important to undefine the dummy MPI_COMM_WORLD used for serial compilation to ensure that it does not get silently re-introduced in the code. Can you create a PR for this?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179#issuecomment-768335693
https://github.com/su2code/SU2/pull/1180#issuecomment-769962392:24,Integrability,wrap,wrappers,24,"Add a method to the MPI wrappers to get the global communicator or something equivalent, the only way to make this kind of change future-compatible is to break compilation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1180#issuecomment-769962392
https://github.com/su2code/SU2/issues/1182#issuecomment-770719442:39,Testability,Test,Test,39,It can be checked with SU2 Quick Start Test case NACA 0012 airfoil. ; Paraview (.vtu) output for flow and surface is perfectly fine but Tecplot (.szplt) create erroneous data in 3rd dimension for this 2D case.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-770719442
https://github.com/su2code/SU2/issues/1182#issuecomment-771407798:172,Modifiability,variab,variable,172,"The answer to that is very simple. Look in the data set that is present in the szplt file. The z-coordinate is not in there anymore and consequently Tecplot takes the next variable, the density in this case, as the z-coordinate. Consequently you git a picture like you showed. The same is true for the field solution. Also there the z-coordinate is not present in the szplt file and hence you get a rather funny picture when you attempt to visualize this in 3D. But 2D visualization works just fine. In contrast the z-coordinate is stored in the vtu files, because the standard requires that. Hence you can still visualize this in 3D. Could you try a truly 3D test case to see if that visualizes fine? If so, please let us know such that we can close this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-771407798
https://github.com/su2code/SU2/issues/1182#issuecomment-771407798:660,Testability,test,test,660,"The answer to that is very simple. Look in the data set that is present in the szplt file. The z-coordinate is not in there anymore and consequently Tecplot takes the next variable, the density in this case, as the z-coordinate. Consequently you git a picture like you showed. The same is true for the field solution. Also there the z-coordinate is not present in the szplt file and hence you get a rather funny picture when you attempt to visualize this in 3D. But 2D visualization works just fine. In contrast the z-coordinate is stored in the vtu files, because the standard requires that. Hence you can still visualize this in 3D. Could you try a truly 3D test case to see if that visualizes fine? If so, please let us know such that we can close this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-771407798
https://github.com/su2code/SU2/issues/1182#issuecomment-771407798:27,Usability,simpl,simple,27,"The answer to that is very simple. Look in the data set that is present in the szplt file. The z-coordinate is not in there anymore and consequently Tecplot takes the next variable, the density in this case, as the z-coordinate. Consequently you git a picture like you showed. The same is true for the field solution. Also there the z-coordinate is not present in the szplt file and hence you get a rather funny picture when you attempt to visualize this in 3D. But 2D visualization works just fine. In contrast the z-coordinate is stored in the vtu files, because the standard requires that. Hence you can still visualize this in 3D. Could you try a truly 3D test case to see if that visualizes fine? If so, please let us know such that we can close this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-771407798
https://github.com/su2code/SU2/issues/1182#issuecomment-771503256:107,Availability,error,error,107,Thanks for your comments. I checked for a 3D test case (OneraM6) and it works fine.; It seems to be giving error only for one of my particular case where v7.0.6 work but not later version for SURFACE_TECPLOT.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-771503256
https://github.com/su2code/SU2/issues/1182#issuecomment-771503256:45,Testability,test,test,45,Thanks for your comments. I checked for a 3D test case (OneraM6) and it works fine.; It seems to be giving error only for one of my particular case where v7.0.6 work but not later version for SURFACE_TECPLOT.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-771503256
https://github.com/su2code/SU2/pull/1183#issuecomment-773349903:150,Deployability,integrat,integration,150,"Hi Pedro, seems like nice stuff is coming into being here.. :+1:. just had a look at both papers, especially the second. From reading through the new integration class (and assuming you are working towards Newton-like iterations for FSI), could you point me to the coupled part? I'm expecting one has to assemble a ""bigger"" residual across the disciplines (or a routine that has the same functionality as a multiplication with it, like Algorithm 4 on page 943 in the paper from Kenway, Kennedy and Martins or what you are doing in `CNewtonIntegration::MatrixFreeProduct`, I guess) :-)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-773349903
https://github.com/su2code/SU2/pull/1183#issuecomment-773349903:150,Integrability,integrat,integration,150,"Hi Pedro, seems like nice stuff is coming into being here.. :+1:. just had a look at both papers, especially the second. From reading through the new integration class (and assuming you are working towards Newton-like iterations for FSI), could you point me to the coupled part? I'm expecting one has to assemble a ""bigger"" residual across the disciplines (or a routine that has the same functionality as a multiplication with it, like Algorithm 4 on page 943 in the paper from Kenway, Kennedy and Martins or what you are doing in `CNewtonIntegration::MatrixFreeProduct`, I guess) :-)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-773349903
https://github.com/su2code/SU2/pull/1183#issuecomment-773349903:362,Integrability,rout,routine,362,"Hi Pedro, seems like nice stuff is coming into being here.. :+1:. just had a look at both papers, especially the second. From reading through the new integration class (and assuming you are working towards Newton-like iterations for FSI), could you point me to the coupled part? I'm expecting one has to assemble a ""bigger"" residual across the disciplines (or a routine that has the same functionality as a multiplication with it, like Algorithm 4 on page 943 in the paper from Kenway, Kennedy and Martins or what you are doing in `CNewtonIntegration::MatrixFreeProduct`, I guess) :-)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-773349903
https://github.com/su2code/SU2/pull/1183#issuecomment-773408362:363,Integrability,rout,routines,363,"Hi Ole, the first paper is actually closer to what I am aiming for with this implementation.; Mostly I am looking for an alternative to multigrid to get good convergence of the fluid side, that remains effective when many MPI ranks are used.; To apply something like this to multiphysics would require implementing it at the driver level, to include the transfer routines. However, I think for FSI this would not be competitive due to elasticity-based mesh deformation being so expensive compared to one fluid iteration. Martins et. al. use an explicit deformation method that I presume to be very quick as it operates on block structured grids.; The ""coupled"" part in this title refers to flow, turbulence, and other scalars, and even that I am not sure if it is a good idea :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-773408362
https://github.com/su2code/SU2/pull/1183#issuecomment-773925376:236,Testability,test,testcases,236,"This is a great new development! We would definitely need this for stiffer equations. At the moment most of our combustion models have 'OK' convergence, but this could really improve things! Is it functional for the incompressible flow testcases?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-773925376
https://github.com/su2code/SU2/pull/1183#issuecomment-774498456:420,Availability,error,error,420,"In principle yes, but there are a few complications for coupling everything which made me take a step back:; - The way the different solvers treat the linear system solution is not consistent, e.g. SST does not use it directly, which means the Jacobian-vector product would not be consistent.; - Scaling, this uses finite differences to compute a directed derivative, if the variables have very different magnitudes the error will be large.; - Conditioning, the residual Jacobian is very ill-conditioned it is difficult to solve systems with it at high CFL, and if CFL is low there is not much point in having the true Jacobian...; - Speed, each matrix-free product means one evaluation of the convective and viscous residuals, for schemes that are not vectorized yet this costs a lot which means the quasi-Newton approach will be faster even if it takes more iterations. The current implementation seems capable of pushing through some limit cycles that would otherwise just last forever.; But coupling everything is a bigger bite than I can take right now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-774498456
https://github.com/su2code/SU2/pull/1183#issuecomment-774498456:56,Modifiability,coupling,coupling,56,"In principle yes, but there are a few complications for coupling everything which made me take a step back:; - The way the different solvers treat the linear system solution is not consistent, e.g. SST does not use it directly, which means the Jacobian-vector product would not be consistent.; - Scaling, this uses finite differences to compute a directed derivative, if the variables have very different magnitudes the error will be large.; - Conditioning, the residual Jacobian is very ill-conditioned it is difficult to solve systems with it at high CFL, and if CFL is low there is not much point in having the true Jacobian...; - Speed, each matrix-free product means one evaluation of the convective and viscous residuals, for schemes that are not vectorized yet this costs a lot which means the quasi-Newton approach will be faster even if it takes more iterations. The current implementation seems capable of pushing through some limit cycles that would otherwise just last forever.; But coupling everything is a bigger bite than I can take right now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-774498456
https://github.com/su2code/SU2/pull/1183#issuecomment-774498456:375,Modifiability,variab,variables,375,"In principle yes, but there are a few complications for coupling everything which made me take a step back:; - The way the different solvers treat the linear system solution is not consistent, e.g. SST does not use it directly, which means the Jacobian-vector product would not be consistent.; - Scaling, this uses finite differences to compute a directed derivative, if the variables have very different magnitudes the error will be large.; - Conditioning, the residual Jacobian is very ill-conditioned it is difficult to solve systems with it at high CFL, and if CFL is low there is not much point in having the true Jacobian...; - Speed, each matrix-free product means one evaluation of the convective and viscous residuals, for schemes that are not vectorized yet this costs a lot which means the quasi-Newton approach will be faster even if it takes more iterations. The current implementation seems capable of pushing through some limit cycles that would otherwise just last forever.; But coupling everything is a bigger bite than I can take right now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-774498456
https://github.com/su2code/SU2/pull/1183#issuecomment-774498456:995,Modifiability,coupling,coupling,995,"In principle yes, but there are a few complications for coupling everything which made me take a step back:; - The way the different solvers treat the linear system solution is not consistent, e.g. SST does not use it directly, which means the Jacobian-vector product would not be consistent.; - Scaling, this uses finite differences to compute a directed derivative, if the variables have very different magnitudes the error will be large.; - Conditioning, the residual Jacobian is very ill-conditioned it is difficult to solve systems with it at high CFL, and if CFL is low there is not much point in having the true Jacobian...; - Speed, each matrix-free product means one evaluation of the convective and viscous residuals, for schemes that are not vectorized yet this costs a lot which means the quasi-Newton approach will be faster even if it takes more iterations. The current implementation seems capable of pushing through some limit cycles that would otherwise just last forever.; But coupling everything is a bigger bite than I can take right now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-774498456
https://github.com/su2code/SU2/pull/1183#issuecomment-783228807:82,Deployability,release,release,82,If there are no major comments I would add a testcase and merge this for the next release (and address any post mortem comments as they appear).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-783228807
https://github.com/su2code/SU2/pull/1183#issuecomment-783228807:45,Testability,test,testcase,45,If there are no major comments I would add a testcase and merge this for the next release (and address any post mortem comments as they appear).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-783228807
https://github.com/su2code/SU2/issues/1185#issuecomment-774486850:296,Integrability,depend,depends,296,"I tried it for the NACA0012 897x257 mesh with compressible RANS (in `CAvgGrad_Flow::ComputeResidual`). . The scalar product is negative at the far-field boundary. `Coord_i` is on the boundary, `Coord_j` is in the domain. `Normal` points outwards in the viscous numerics (but I don't know if this depends on the orientation of the boundary in the mesh file). The scalar product is positive for the viscous fluxes between cells.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1185#issuecomment-774486850
https://github.com/su2code/SU2/issues/1185#issuecomment-774643103:126,Testability,log,logic,126,I would be fine with either swapping (if it is commented) or reflecting. I would prefer not to have extra checks for boundary logic in a class that operates 99% of the time on internal edges.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1185#issuecomment-774643103
https://github.com/su2code/SU2/pull/1189#issuecomment-774668565:251,Deployability,update,update,251,I edited your title not to scare someone reading the change log too much.; I would check (i.e. run to convergence) a few of the failed testcases especially those where CD and CL are not the same.; Small changes to only the residuals should be safe to update.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-774668565
https://github.com/su2code/SU2/pull/1189#issuecomment-774668565:243,Safety,safe,safe,243,I edited your title not to scare someone reading the change log too much.; I would check (i.e. run to convergence) a few of the failed testcases especially those where CD and CL are not the same.; Small changes to only the residuals should be safe to update.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-774668565
https://github.com/su2code/SU2/pull/1189#issuecomment-774668565:60,Testability,log,log,60,I edited your title not to scare someone reading the change log too much.; I would check (i.e. run to convergence) a few of the failed testcases especially those where CD and CL are not the same.; Small changes to only the residuals should be safe to update.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-774668565
https://github.com/su2code/SU2/pull/1189#issuecomment-774668565:135,Testability,test,testcases,135,I edited your title not to scare someone reading the change log too much.; I would check (i.e. run to convergence) a few of the failed testcases especially those where CD and CL are not the same.; Small changes to only the residuals should be safe to update.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-774668565
https://github.com/su2code/SU2/pull/1189#issuecomment-775779432:845,Deployability,update,update,845,"I checked some of the failed testcases by letting the solution converge:. - The testcase `inc_poly_cylinder` in serial and parallel mode, and `slinc_steady` in serial mode, converge to the same solution.; - For the serial AD testcase `discadj_incomp_cylinder`, the relative difference of the sensitivities is around 1e-3. I don't know if this is a bit high?. Regarding the other testcases:. - With the turbomachinery testcases and the hybrid regression tests I'm not too familiar.; - Note that `slinc_steady` in `parallel_regression.py` is started by a pure call to `SU2_CFD`, without `mpirun` or `parallel_computation.py`. This applies to few other testcases in this script as well. So this just repeats the serial regression.; - In parallel, the failed AD testcase `discadj_incomp_cylinder` does not converge (in both versions). I think I can update the residuals these days.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-775779432
https://github.com/su2code/SU2/pull/1189#issuecomment-775779432:29,Testability,test,testcases,29,"I checked some of the failed testcases by letting the solution converge:. - The testcase `inc_poly_cylinder` in serial and parallel mode, and `slinc_steady` in serial mode, converge to the same solution.; - For the serial AD testcase `discadj_incomp_cylinder`, the relative difference of the sensitivities is around 1e-3. I don't know if this is a bit high?. Regarding the other testcases:. - With the turbomachinery testcases and the hybrid regression tests I'm not too familiar.; - Note that `slinc_steady` in `parallel_regression.py` is started by a pure call to `SU2_CFD`, without `mpirun` or `parallel_computation.py`. This applies to few other testcases in this script as well. So this just repeats the serial regression.; - In parallel, the failed AD testcase `discadj_incomp_cylinder` does not converge (in both versions). I think I can update the residuals these days.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-775779432
https://github.com/su2code/SU2/pull/1189#issuecomment-775779432:80,Testability,test,testcase,80,"I checked some of the failed testcases by letting the solution converge:. - The testcase `inc_poly_cylinder` in serial and parallel mode, and `slinc_steady` in serial mode, converge to the same solution.; - For the serial AD testcase `discadj_incomp_cylinder`, the relative difference of the sensitivities is around 1e-3. I don't know if this is a bit high?. Regarding the other testcases:. - With the turbomachinery testcases and the hybrid regression tests I'm not too familiar.; - Note that `slinc_steady` in `parallel_regression.py` is started by a pure call to `SU2_CFD`, without `mpirun` or `parallel_computation.py`. This applies to few other testcases in this script as well. So this just repeats the serial regression.; - In parallel, the failed AD testcase `discadj_incomp_cylinder` does not converge (in both versions). I think I can update the residuals these days.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-775779432
https://github.com/su2code/SU2/pull/1189#issuecomment-775779432:225,Testability,test,testcase,225,"I checked some of the failed testcases by letting the solution converge:. - The testcase `inc_poly_cylinder` in serial and parallel mode, and `slinc_steady` in serial mode, converge to the same solution.; - For the serial AD testcase `discadj_incomp_cylinder`, the relative difference of the sensitivities is around 1e-3. I don't know if this is a bit high?. Regarding the other testcases:. - With the turbomachinery testcases and the hybrid regression tests I'm not too familiar.; - Note that `slinc_steady` in `parallel_regression.py` is started by a pure call to `SU2_CFD`, without `mpirun` or `parallel_computation.py`. This applies to few other testcases in this script as well. So this just repeats the serial regression.; - In parallel, the failed AD testcase `discadj_incomp_cylinder` does not converge (in both versions). I think I can update the residuals these days.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-775779432
https://github.com/su2code/SU2/pull/1189#issuecomment-775779432:379,Testability,test,testcases,379,"I checked some of the failed testcases by letting the solution converge:. - The testcase `inc_poly_cylinder` in serial and parallel mode, and `slinc_steady` in serial mode, converge to the same solution.; - For the serial AD testcase `discadj_incomp_cylinder`, the relative difference of the sensitivities is around 1e-3. I don't know if this is a bit high?. Regarding the other testcases:. - With the turbomachinery testcases and the hybrid regression tests I'm not too familiar.; - Note that `slinc_steady` in `parallel_regression.py` is started by a pure call to `SU2_CFD`, without `mpirun` or `parallel_computation.py`. This applies to few other testcases in this script as well. So this just repeats the serial regression.; - In parallel, the failed AD testcase `discadj_incomp_cylinder` does not converge (in both versions). I think I can update the residuals these days.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-775779432
https://github.com/su2code/SU2/pull/1189#issuecomment-775779432:417,Testability,test,testcases,417,"I checked some of the failed testcases by letting the solution converge:. - The testcase `inc_poly_cylinder` in serial and parallel mode, and `slinc_steady` in serial mode, converge to the same solution.; - For the serial AD testcase `discadj_incomp_cylinder`, the relative difference of the sensitivities is around 1e-3. I don't know if this is a bit high?. Regarding the other testcases:. - With the turbomachinery testcases and the hybrid regression tests I'm not too familiar.; - Note that `slinc_steady` in `parallel_regression.py` is started by a pure call to `SU2_CFD`, without `mpirun` or `parallel_computation.py`. This applies to few other testcases in this script as well. So this just repeats the serial regression.; - In parallel, the failed AD testcase `discadj_incomp_cylinder` does not converge (in both versions). I think I can update the residuals these days.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-775779432
https://github.com/su2code/SU2/pull/1189#issuecomment-775779432:453,Testability,test,tests,453,"I checked some of the failed testcases by letting the solution converge:. - The testcase `inc_poly_cylinder` in serial and parallel mode, and `slinc_steady` in serial mode, converge to the same solution.; - For the serial AD testcase `discadj_incomp_cylinder`, the relative difference of the sensitivities is around 1e-3. I don't know if this is a bit high?. Regarding the other testcases:. - With the turbomachinery testcases and the hybrid regression tests I'm not too familiar.; - Note that `slinc_steady` in `parallel_regression.py` is started by a pure call to `SU2_CFD`, without `mpirun` or `parallel_computation.py`. This applies to few other testcases in this script as well. So this just repeats the serial regression.; - In parallel, the failed AD testcase `discadj_incomp_cylinder` does not converge (in both versions). I think I can update the residuals these days.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-775779432
https://github.com/su2code/SU2/pull/1189#issuecomment-775779432:650,Testability,test,testcases,650,"I checked some of the failed testcases by letting the solution converge:. - The testcase `inc_poly_cylinder` in serial and parallel mode, and `slinc_steady` in serial mode, converge to the same solution.; - For the serial AD testcase `discadj_incomp_cylinder`, the relative difference of the sensitivities is around 1e-3. I don't know if this is a bit high?. Regarding the other testcases:. - With the turbomachinery testcases and the hybrid regression tests I'm not too familiar.; - Note that `slinc_steady` in `parallel_regression.py` is started by a pure call to `SU2_CFD`, without `mpirun` or `parallel_computation.py`. This applies to few other testcases in this script as well. So this just repeats the serial regression.; - In parallel, the failed AD testcase `discadj_incomp_cylinder` does not converge (in both versions). I think I can update the residuals these days.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-775779432
https://github.com/su2code/SU2/pull/1189#issuecomment-775779432:758,Testability,test,testcase,758,"I checked some of the failed testcases by letting the solution converge:. - The testcase `inc_poly_cylinder` in serial and parallel mode, and `slinc_steady` in serial mode, converge to the same solution.; - For the serial AD testcase `discadj_incomp_cylinder`, the relative difference of the sensitivities is around 1e-3. I don't know if this is a bit high?. Regarding the other testcases:. - With the turbomachinery testcases and the hybrid regression tests I'm not too familiar.; - Note that `slinc_steady` in `parallel_regression.py` is started by a pure call to `SU2_CFD`, without `mpirun` or `parallel_computation.py`. This applies to few other testcases in this script as well. So this just repeats the serial regression.; - In parallel, the failed AD testcase `discadj_incomp_cylinder` does not converge (in both versions). I think I can update the residuals these days.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-775779432
https://github.com/su2code/SU2/issues/1191#issuecomment-775223807:133,Deployability,release,release,133,"Thank you for reporting, this is fixed in the develop branch, and is related with #1184 ; I will keep this issue open until the next release as I imagine it will trip other folks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191#issuecomment-775223807
https://github.com/su2code/SU2/pull/1194#issuecomment-777383469:11,Security,intrusion,intrusion,11,"Pardon the intrusion good sir, I noticed the truncated residual and co. could also be an issue for the NEMO folks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1194#issuecomment-777383469
https://github.com/su2code/SU2/pull/1195#issuecomment-779895711:165,Testability,test,test,165,About the jacobian I could not find a situation where it made a difference (I tried a lot) so I commented it out. The residual itself does matter however. I added a test case which uses the same mesh as the NICFD nozzle tutorial. It is an axisymmetric transonic air nozzle without a shock. Pretty much any change to the axisymmetric flow or turbulence residuals would break it. i created a pull request on the test cases repo develop branch https://github.com/su2code/TestCases/pull/59 but then I just went ahead and merged it into develop since there is no review policy,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195#issuecomment-779895711
https://github.com/su2code/SU2/pull/1195#issuecomment-779895711:410,Testability,test,test,410,About the jacobian I could not find a situation where it made a difference (I tried a lot) so I commented it out. The residual itself does matter however. I added a test case which uses the same mesh as the NICFD nozzle tutorial. It is an axisymmetric transonic air nozzle without a shock. Pretty much any change to the axisymmetric flow or turbulence residuals would break it. i created a pull request on the test cases repo develop branch https://github.com/su2code/TestCases/pull/59 but then I just went ahead and merged it into develop since there is no review policy,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195#issuecomment-779895711
https://github.com/su2code/SU2/pull/1195#issuecomment-779895711:468,Testability,Test,TestCases,468,About the jacobian I could not find a situation where it made a difference (I tried a lot) so I commented it out. The residual itself does matter however. I added a test case which uses the same mesh as the NICFD nozzle tutorial. It is an axisymmetric transonic air nozzle without a shock. Pretty much any change to the axisymmetric flow or turbulence residuals would break it. i created a pull request on the test cases repo develop branch https://github.com/su2code/TestCases/pull/59 but then I just went ahead and merged it into develop since there is no review policy,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195#issuecomment-779895711
https://github.com/su2code/SU2/pull/1195#issuecomment-779912487:108,Testability,Test,Testcases,108,Thank you for adding a regression.; Why do you need both a restart_flow.dat and a solution_flow.dat file in Testcases? We should try to keep that repo small.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195#issuecomment-779912487
https://github.com/su2code/SU2/issues/1196#issuecomment-778486055:92,Deployability,release,release,92,"Thank you for reporting Andrea, the output bug is probably on me, will be fixed in the next release.; Regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1196#issuecomment-778486055
https://github.com/su2code/SU2/pull/1199#issuecomment-779313505:166,Availability,error,error,166,"<img width=""431"" alt=""Screenshot 2021-02-15 165247"" src=""https://user-images.githubusercontent.com/60700515/107968189-553d3780-6fae-11eb-88a1-e3fee844f05b.png"">. The error was spotted while updating the old python routines to the new drivers/mesh solver. In particular, the test case in py_wrapper folder, related to a flat plate plunging up and down, showed a different coefficient of lift as computed using the old and new mesh solver. I attach here the comparison of the coefficient of lift history for three cases:. * The legacy mesh solver, after the modification in this PR; * The new mesh solver; * The legacy mesh solver, before the modification. The first two are completely coincident",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199#issuecomment-779313505
https://github.com/su2code/SU2/pull/1199#issuecomment-779313505:346,Availability,down,down,346,"<img width=""431"" alt=""Screenshot 2021-02-15 165247"" src=""https://user-images.githubusercontent.com/60700515/107968189-553d3780-6fae-11eb-88a1-e3fee844f05b.png"">. The error was spotted while updating the old python routines to the new drivers/mesh solver. In particular, the test case in py_wrapper folder, related to a flat plate plunging up and down, showed a different coefficient of lift as computed using the old and new mesh solver. I attach here the comparison of the coefficient of lift history for three cases:. * The legacy mesh solver, after the modification in this PR; * The new mesh solver; * The legacy mesh solver, before the modification. The first two are completely coincident",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199#issuecomment-779313505
https://github.com/su2code/SU2/pull/1199#issuecomment-779313505:214,Integrability,rout,routines,214,"<img width=""431"" alt=""Screenshot 2021-02-15 165247"" src=""https://user-images.githubusercontent.com/60700515/107968189-553d3780-6fae-11eb-88a1-e3fee844f05b.png"">. The error was spotted while updating the old python routines to the new drivers/mesh solver. In particular, the test case in py_wrapper folder, related to a flat plate plunging up and down, showed a different coefficient of lift as computed using the old and new mesh solver. I attach here the comparison of the coefficient of lift history for three cases:. * The legacy mesh solver, after the modification in this PR; * The new mesh solver; * The legacy mesh solver, before the modification. The first two are completely coincident",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199#issuecomment-779313505
https://github.com/su2code/SU2/pull/1199#issuecomment-779313505:274,Testability,test,test,274,"<img width=""431"" alt=""Screenshot 2021-02-15 165247"" src=""https://user-images.githubusercontent.com/60700515/107968189-553d3780-6fae-11eb-88a1-e3fee844f05b.png"">. The error was spotted while updating the old python routines to the new drivers/mesh solver. In particular, the test case in py_wrapper folder, related to a flat plate plunging up and down, showed a different coefficient of lift as computed using the old and new mesh solver. I attach here the comparison of the coefficient of lift history for three cases:. * The legacy mesh solver, after the modification in this PR; * The new mesh solver; * The legacy mesh solver, before the modification. The first two are completely coincident",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199#issuecomment-779313505
https://github.com/su2code/SU2/pull/1204#issuecomment-789202354:2,Deployability,update,updated,2,I updated the code based on your comments. I have to rerun the validation test case that I have to see if it still matches with the experimental data. I also have to check the compressible vs incompressible implementation.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-789202354
https://github.com/su2code/SU2/pull/1204#issuecomment-789202354:63,Security,validat,validation,63,I updated the code based on your comments. I have to rerun the validation test case that I have to see if it still matches with the experimental data. I also have to check the compressible vs incompressible implementation.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-789202354
https://github.com/su2code/SU2/pull/1204#issuecomment-789202354:74,Testability,test,test,74,I updated the code based on your comments. I have to rerun the validation test case that I have to see if it still matches with the experimental data. I also have to check the compressible vs incompressible implementation.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-789202354
https://github.com/su2code/SU2/pull/1204#issuecomment-789223219:213,Safety,avoid,avoiding,213,"Thanks @bigfooted, I fixed the conflicts (albeit not very well judging from the broken compilation) and left some more comments some more important than others.; For me the most important ones are those regarding avoiding any and all repetition, reference factors and so on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-789223219
https://github.com/su2code/SU2/pull/1204#issuecomment-801691188:38,Modifiability,config,config,38,"I also made the von Karman constant a config option, together with the ""B"" constant. The von Karman constant is used in other places as well, but maybe its best to keep lets say all SA or SST coefficients as a complete set of coefficients and not have only one coefficient change value.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-801691188
https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:215,Availability,avail,available,215,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115
https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:0,Deployability,update,update,0,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115
https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:8,Security,validat,validated,8,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115
https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:85,Security,validat,validation,85,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115
https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:117,Security,validat,validation,117,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115
https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:173,Security,validat,validation,173,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115
https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:229,Security,validat,validation,229,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115
https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:148,Testability,test,test,148,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115
https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:272,Testability,test,test,272,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115
https://github.com/su2code/SU2/pull/1204#issuecomment-865654846:54,Testability,test,testcase,54,Thanks @pcarruscag and @TobiKattmann ! I will add the testcase and some small things in a new PR!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-865654846
https://github.com/su2code/SU2/pull/1208#issuecomment-785312168:28,Deployability,release,released,28,Looks like this bug was not released :) (Fortune favours the bold),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1208#issuecomment-785312168
https://github.com/su2code/SU2/pull/1208#issuecomment-785905666:166,Performance,tune,tune,166,"Yeah, but listening to Mr Turner is surely well invested time if one is able to follow at least some of his thoughts. But imo he does a good job in that, I sometimes tune in for cppcast and that is okayish to follow most of the time (but that is not really in depth tbh)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1208#issuecomment-785905666
https://github.com/su2code/SU2/issues/1209#issuecomment-785328791:129,Availability,down,downgrade,129,"@jblueh @MaxSagebaum is there a mpi4 compliant version of Medi?. @bakakouhai if the answer to the above is ""no"" you will need to downgrade to mpi 3.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785328791
https://github.com/su2code/SU2/issues/1209#issuecomment-785638299:63,Availability,down,downgrade,63,"@pcarruscag Thank you for the fast response. In case I need to downgrade to OpenMpi 3, do you know where could I find the brew package [tap for su2 perhaps]? I checked the Homebrew formulae and there is no openmpi@3 on the core repo. Otherwise I need to install from source, which I am not familiar with yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785638299
https://github.com/su2code/SU2/issues/1209#issuecomment-785638299:254,Deployability,install,install,254,"@pcarruscag Thank you for the fast response. In case I need to downgrade to OpenMpi 3, do you know where could I find the brew package [tap for su2 perhaps]? I checked the Homebrew formulae and there is no openmpi@3 on the core repo. Otherwise I need to install from source, which I am not familiar with yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785638299
https://github.com/su2code/SU2/issues/1209#issuecomment-785697793:14,Testability,test,tested,14,@bakakouhai I tested this on my machine and in my OpenMPI version (4.0.4) they still exist. Therefore I can currently can not reproduce this myself and I would like to use you as a guinea pig. I made the fixes to MeDiPack in the branch bugfix/mpi4_0. Could you please checkout this branch and try if it works now? ; ```; cd <SU2 dir>/externals/medi; git fetch; git checkout bugfix/mpi4_0; ```. Thanks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785697793
https://github.com/su2code/SU2/issues/1209#issuecomment-785721015:65,Availability,error,error,65,@MaxSagebaum Building with -Denable-autodiff=true now. So far no error.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785721015
https://github.com/su2code/SU2/issues/1209#issuecomment-785738303:63,Availability,error,error,63,@MaxSagebaum Finished building with both option = true without error. Thank you for the fix. I can now try to connect SU2 with paraBlade.; Do I have to run git commands again to be back on default branch?. Attached are the new meson and ninja log.; They are from the last cycle:; python meson.py --reconfigure build -Denable-directdiff=true | tee meson.log; ./ninja -C build install | tee ninja.log; I forgot to rename them so the -Denable-autodiff parts were overwritten. Thank you.; [ninja.log](https://github.com/su2code/SU2/files/6041732/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6041731/meson.log),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785738303
https://github.com/su2code/SU2/issues/1209#issuecomment-785738303:375,Deployability,install,install,375,@MaxSagebaum Finished building with both option = true without error. Thank you for the fix. I can now try to connect SU2 with paraBlade.; Do I have to run git commands again to be back on default branch?. Attached are the new meson and ninja log.; They are from the last cycle:; python meson.py --reconfigure build -Denable-directdiff=true | tee meson.log; ./ninja -C build install | tee ninja.log; I forgot to rename them so the -Denable-autodiff parts were overwritten. Thank you.; [ninja.log](https://github.com/su2code/SU2/files/6041732/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6041731/meson.log),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785738303
https://github.com/su2code/SU2/issues/1209#issuecomment-785738303:243,Testability,log,log,243,@MaxSagebaum Finished building with both option = true without error. Thank you for the fix. I can now try to connect SU2 with paraBlade.; Do I have to run git commands again to be back on default branch?. Attached are the new meson and ninja log.; They are from the last cycle:; python meson.py --reconfigure build -Denable-directdiff=true | tee meson.log; ./ninja -C build install | tee ninja.log; I forgot to rename them so the -Denable-autodiff parts were overwritten. Thank you.; [ninja.log](https://github.com/su2code/SU2/files/6041732/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6041731/meson.log),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785738303
https://github.com/su2code/SU2/issues/1209#issuecomment-785738303:353,Testability,log,log,353,@MaxSagebaum Finished building with both option = true without error. Thank you for the fix. I can now try to connect SU2 with paraBlade.; Do I have to run git commands again to be back on default branch?. Attached are the new meson and ninja log.; They are from the last cycle:; python meson.py --reconfigure build -Denable-directdiff=true | tee meson.log; ./ninja -C build install | tee ninja.log; I forgot to rename them so the -Denable-autodiff parts were overwritten. Thank you.; [ninja.log](https://github.com/su2code/SU2/files/6041732/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6041731/meson.log),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785738303
https://github.com/su2code/SU2/issues/1209#issuecomment-785738303:395,Testability,log,log,395,@MaxSagebaum Finished building with both option = true without error. Thank you for the fix. I can now try to connect SU2 with paraBlade.; Do I have to run git commands again to be back on default branch?. Attached are the new meson and ninja log.; They are from the last cycle:; python meson.py --reconfigure build -Denable-directdiff=true | tee meson.log; ./ninja -C build install | tee ninja.log; I forgot to rename them so the -Denable-autodiff parts were overwritten. Thank you.; [ninja.log](https://github.com/su2code/SU2/files/6041732/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6041731/meson.log),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785738303
https://github.com/su2code/SU2/issues/1209#issuecomment-785738303:492,Testability,log,log,492,@MaxSagebaum Finished building with both option = true without error. Thank you for the fix. I can now try to connect SU2 with paraBlade.; Do I have to run git commands again to be back on default branch?. Attached are the new meson and ninja log.; They are from the last cycle:; python meson.py --reconfigure build -Denable-directdiff=true | tee meson.log; ./ninja -C build install | tee ninja.log; I forgot to rename them so the -Denable-autodiff parts were overwritten. Thank you.; [ninja.log](https://github.com/su2code/SU2/files/6041732/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6041731/meson.log),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785738303
https://github.com/su2code/SU2/issues/1209#issuecomment-785738303:548,Testability,log,log,548,@MaxSagebaum Finished building with both option = true without error. Thank you for the fix. I can now try to connect SU2 with paraBlade.; Do I have to run git commands again to be back on default branch?. Attached are the new meson and ninja log.; They are from the last cycle:; python meson.py --reconfigure build -Denable-directdiff=true | tee meson.log; ./ninja -C build install | tee ninja.log; I forgot to rename them so the -Denable-autodiff parts were overwritten. Thank you.; [ninja.log](https://github.com/su2code/SU2/files/6041732/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6041731/meson.log),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785738303
https://github.com/su2code/SU2/issues/1209#issuecomment-785738303:561,Testability,log,log,561,@MaxSagebaum Finished building with both option = true without error. Thank you for the fix. I can now try to connect SU2 with paraBlade.; Do I have to run git commands again to be back on default branch?. Attached are the new meson and ninja log.; They are from the last cycle:; python meson.py --reconfigure build -Denable-directdiff=true | tee meson.log; ./ninja -C build install | tee ninja.log; I forgot to rename them so the -Denable-autodiff parts were overwritten. Thank you.; [ninja.log](https://github.com/su2code/SU2/files/6041732/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6041731/meson.log),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785738303
https://github.com/su2code/SU2/issues/1209#issuecomment-785738303:617,Testability,log,log,617,@MaxSagebaum Finished building with both option = true without error. Thank you for the fix. I can now try to connect SU2 with paraBlade.; Do I have to run git commands again to be back on default branch?. Attached are the new meson and ninja log.; They are from the last cycle:; python meson.py --reconfigure build -Denable-directdiff=true | tee meson.log; ./ninja -C build install | tee ninja.log; I forgot to rename them so the -Denable-autodiff parts were overwritten. Thank you.; [ninja.log](https://github.com/su2code/SU2/files/6041732/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6041731/meson.log),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785738303
https://github.com/su2code/SU2/issues/1209#issuecomment-785746062:26,Testability,test,testing,26,"@bakakouhai Thank you for testing this, I will merge the branch into the master now. > Do I have to run git commands again to be back on default branch?; You just changed the branch of MeDiPack. SU2 is still on the default.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785746062
https://github.com/su2code/SU2/issues/1209#issuecomment-785797319:32,Deployability,install,installation,32,Thank you all.; I will test the installation with the test suite now.; Feel free to close the thread. Cheers,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785797319
https://github.com/su2code/SU2/issues/1209#issuecomment-785797319:23,Testability,test,test,23,Thank you all.; I will test the installation with the test suite now.; Feel free to close the thread. Cheers,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785797319
https://github.com/su2code/SU2/issues/1209#issuecomment-785797319:54,Testability,test,test,54,Thank you all.; I will test the installation with the test suite now.; Feel free to close the thread. Cheers,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785797319
https://github.com/su2code/SU2/pull/1210#issuecomment-785777231:42,Security,hash,hash,42,"Thank you Max, can you also add the right hash to meson_scripts/init.py and to preconfigure.py around line 290.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1210#issuecomment-785777231
https://github.com/su2code/SU2/pull/1210#issuecomment-785813580:44,Security,hash,hash,44,"> Thank you Max, can you also add the right hash to meson_scripts/init.py and to preconfigure.py around line 290. Done.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1210#issuecomment-785813580
https://github.com/su2code/SU2/issues/1211#issuecomment-797573104:295,Availability,Error,Error,295,"I think what Christian thinks, just make the solver go for another spin, making sure that:; - This was not the last iteration already.; - The solver will stop afterwards even if the criteria stops being fulfilled. The logic will be a little bit gnarly... The developer in me would just SU2_MPI::Error if the output frequency is not one :); But that would not be very nice for the users.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1211#issuecomment-797573104
https://github.com/su2code/SU2/issues/1211#issuecomment-797573104:218,Testability,log,logic,218,"I think what Christian thinks, just make the solver go for another spin, making sure that:; - This was not the last iteration already.; - The solver will stop afterwards even if the criteria stops being fulfilled. The logic will be a little bit gnarly... The developer in me would just SU2_MPI::Error if the output frequency is not one :); But that would not be very nice for the users.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1211#issuecomment-797573104
https://github.com/su2code/SU2/pull/1214#issuecomment-788161170:166,Testability,test,testcase,166,"The commits so far address parts of OpDiLib's incorporation into the AD workflow and sort out some additional issues along the lines of the `disc_adj_fsi/Airfoild2d` testcase. They provide a testing environment that is stable with respect to OpDiLib and can already be used for figuring out some of the more SU2 specific issues. However, they require that SU2 is built with a compiler with OMPT support, for example an up-to-date version of `clang++`, hence the failing CI builds.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-788161170
https://github.com/su2code/SU2/pull/1214#issuecomment-788161170:191,Testability,test,testing,191,"The commits so far address parts of OpDiLib's incorporation into the AD workflow and sort out some additional issues along the lines of the `disc_adj_fsi/Airfoild2d` testcase. They provide a testing environment that is stable with respect to OpDiLib and can already be used for figuring out some of the more SU2 specific issues. However, they require that SU2 is built with a compiler with OMPT support, for example an up-to-date version of `clang++`, hence the failing CI builds.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-788161170
https://github.com/su2code/SU2/pull/1214#issuecomment-788213078:61,Integrability,wrap,wrapper,61,It looks like the builds are failing because of swig (python wrapper) and a missing definition of size_t.; What does OMPT stand for? OpenMP threads? (Google was not helpful),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-788213078
https://github.com/su2code/SU2/pull/1214#issuecomment-788237663:41,Integrability,wrap,wrapper,41,"True that, I built it without the python wrapper locally. This build command worked for me. ; ```; ./meson.py omptestenv --buildtype=debug --warnlevel=2 -Denable-autodiff=true -Denable-directdiff=true -Dwith-omp=true; ```. The ""T"" in OMPT stands for ""tools"", see Chapter 4 of the [OpenMP 5.1 specification](https://www.openmp.org/spec-html/5.1/openmp.html). We also explain it with a focus on AD in our [preprint](https://arxiv.org/abs/2102.11572).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-788237663
https://github.com/su2code/SU2/pull/1214#issuecomment-788243448:37,Safety,detect,detect,37,"I see, then it should be possible to detect the version of the standard supported by the compiler and only enable the feature in that case. We do that for simd directives for compatibility (hopefully) with the MS compilers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-788243448
https://github.com/su2code/SU2/pull/1214#issuecomment-814069987:356,Deployability,release,released,356,This pull request **fixes 8 alerts** when merging 45cc9a5e269a50e8804cfe1f1873625c1254be38 into e823be7365a34b48022eba70fa82771362015519 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-3e873733e66770ba9b49f2952dc451d5c2c4a5e0). **fixed alerts:**. * 5 for Comparison of narrow type with wide type in loop condition; * 3 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-814069987
https://github.com/su2code/SU2/pull/1216#issuecomment-789073723:318,Modifiability,Variab,Variable,318,This pull request **introduces 8 alerts** and **fixes 58** when merging aec088cd7ff510f67327d17e3b6fb657616870f1 into 3cb709cfd29d6d75dfe53972b5aaa7a08294b9b5 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-33e58c38b81a8d4c274e2d9b050128676a0937cb). **new alerts:**. * 5 for Unused import; * 1 for Variable defined multiple times; * 1 for Result of integer division may be truncated; * 1 for Unnecessary delete statement in function. **fixed alerts:**. * 47 for Comparison of narrow type with wide type in loop condition; * 6 for Unused local variable; * 4 for Multiplication result converted to larger type; * 1 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1216#issuecomment-789073723
https://github.com/su2code/SU2/pull/1216#issuecomment-789073723:563,Modifiability,variab,variable,563,This pull request **introduces 8 alerts** and **fixes 58** when merging aec088cd7ff510f67327d17e3b6fb657616870f1 into 3cb709cfd29d6d75dfe53972b5aaa7a08294b9b5 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-33e58c38b81a8d4c274e2d9b050128676a0937cb). **new alerts:**. * 5 for Unused import; * 1 for Variable defined multiple times; * 1 for Result of integer division may be truncated; * 1 for Unnecessary delete statement in function. **fixed alerts:**. * 47 for Comparison of narrow type with wide type in loop condition; * 6 for Unused local variable; * 4 for Multiplication result converted to larger type; * 1 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1216#issuecomment-789073723
https://github.com/su2code/SU2/pull/1217#issuecomment-863186117:93,Testability,test,testcases,93,"@pcarruscag Coming back to our discussion a while ago, it should do MPI now (at least for my testcases it does). I'll clean it up and probably remove Eigen completely.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217#issuecomment-863186117
https://github.com/su2code/SU2/issues/1218#issuecomment-789893628:108,Modifiability,Variab,Variables,108,"Passing arrays by pointer -> don't https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-use-ptr; Variables declared at the top of the function -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-introduce; Using member variables to ""pass data"" to other methods -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Ri-explicit. ""What are important implementation aspects?"" You ask -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#per7-design-to-enable-optimization",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1218#issuecomment-789893628
https://github.com/su2code/SU2/issues/1218#issuecomment-789893628:246,Modifiability,variab,variables,246,"Passing arrays by pointer -> don't https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-use-ptr; Variables declared at the top of the function -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-introduce; Using member variables to ""pass data"" to other methods -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Ri-explicit. ""What are important implementation aspects?"" You ask -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#per7-design-to-enable-optimization",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1218#issuecomment-789893628
https://github.com/su2code/SU2/issues/1218#issuecomment-789893628:504,Performance,optimiz,optimization,504,"Passing arrays by pointer -> don't https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-use-ptr; Variables declared at the top of the function -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-introduce; Using member variables to ""pass data"" to other methods -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Ri-explicit. ""What are important implementation aspects?"" You ask -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#per7-design-to-enable-optimization",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1218#issuecomment-789893628
https://github.com/su2code/SU2/issues/1218#issuecomment-1013365053:179,Modifiability,variab,variable,179,"[WIP]; SU2-specific best practices (carried over from #1487). - Get rid of magic numbers in the code: enums (ongoing work) #1457 (and many others); - Get rid of magic numbers for variable indices: nDim+1, nDim+2, etc. #1392",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1218#issuecomment-1013365053
https://github.com/su2code/SU2/issues/1219#issuecomment-790064117:334,Modifiability,config,config,334,"Checkout the small_fixes branch please, I hope the problem is ""that"" simple as I will not debug that function any further because it has the world record for nested loops. If it does not work you will have to hope for help from the turbo folks.; ```c++; for (iMarker = 0; iMarker < nMarker; iMarker++){; for (iMarkerTP=1; iMarkerTP < config->GetnMarker_Turbomachinery()+1; iMarkerTP++){; if (config->GetMarker_All_Turbomachinery(iMarker) == iMarkerTP){; if (config->GetMarker_All_TurbomachineryFlag(iMarker) == marker_flag){; for (iVertex = 0; iVertex < nVertex[iMarker]; iVertex++) {; iPoint = vertex[iMarker][iVertex]->GetNode();; for (jMarker = 0; jMarker < nMarker; jMarker++){; if (config->GetMarker_All_KindBC(jMarker) == PERIODIC_BOUNDARY) {; PeriodicBoundary = config->GetMarker_All_PerBound(jMarker);; jVertex = nodes->GetVertex(iPoint, jMarker);; if ((jVertex != -1) && (PeriodicBoundary == (val_iZone + 1))){; coord = nodes->GetCoord(iPoint);; switch (config->GetKind_TurboMachinery(val_iZone)){; case CENTRIFUGAL; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117
https://github.com/su2code/SU2/issues/1219#issuecomment-790064117:392,Modifiability,config,config,392,"Checkout the small_fixes branch please, I hope the problem is ""that"" simple as I will not debug that function any further because it has the world record for nested loops. If it does not work you will have to hope for help from the turbo folks.; ```c++; for (iMarker = 0; iMarker < nMarker; iMarker++){; for (iMarkerTP=1; iMarkerTP < config->GetnMarker_Turbomachinery()+1; iMarkerTP++){; if (config->GetMarker_All_Turbomachinery(iMarker) == iMarkerTP){; if (config->GetMarker_All_TurbomachineryFlag(iMarker) == marker_flag){; for (iVertex = 0; iVertex < nVertex[iMarker]; iVertex++) {; iPoint = vertex[iMarker][iVertex]->GetNode();; for (jMarker = 0; jMarker < nMarker; jMarker++){; if (config->GetMarker_All_KindBC(jMarker) == PERIODIC_BOUNDARY) {; PeriodicBoundary = config->GetMarker_All_PerBound(jMarker);; jVertex = nodes->GetVertex(iPoint, jMarker);; if ((jVertex != -1) && (PeriodicBoundary == (val_iZone + 1))){; coord = nodes->GetCoord(iPoint);; switch (config->GetKind_TurboMachinery(val_iZone)){; case CENTRIFUGAL; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117
https://github.com/su2code/SU2/issues/1219#issuecomment-790064117:458,Modifiability,config,config,458,"Checkout the small_fixes branch please, I hope the problem is ""that"" simple as I will not debug that function any further because it has the world record for nested loops. If it does not work you will have to hope for help from the turbo folks.; ```c++; for (iMarker = 0; iMarker < nMarker; iMarker++){; for (iMarkerTP=1; iMarkerTP < config->GetnMarker_Turbomachinery()+1; iMarkerTP++){; if (config->GetMarker_All_Turbomachinery(iMarker) == iMarkerTP){; if (config->GetMarker_All_TurbomachineryFlag(iMarker) == marker_flag){; for (iVertex = 0; iVertex < nVertex[iMarker]; iVertex++) {; iPoint = vertex[iMarker][iVertex]->GetNode();; for (jMarker = 0; jMarker < nMarker; jMarker++){; if (config->GetMarker_All_KindBC(jMarker) == PERIODIC_BOUNDARY) {; PeriodicBoundary = config->GetMarker_All_PerBound(jMarker);; jVertex = nodes->GetVertex(iPoint, jMarker);; if ((jVertex != -1) && (PeriodicBoundary == (val_iZone + 1))){; coord = nodes->GetCoord(iPoint);; switch (config->GetKind_TurboMachinery(val_iZone)){; case CENTRIFUGAL; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117
https://github.com/su2code/SU2/issues/1219#issuecomment-790064117:687,Modifiability,config,config,687,"Checkout the small_fixes branch please, I hope the problem is ""that"" simple as I will not debug that function any further because it has the world record for nested loops. If it does not work you will have to hope for help from the turbo folks.; ```c++; for (iMarker = 0; iMarker < nMarker; iMarker++){; for (iMarkerTP=1; iMarkerTP < config->GetnMarker_Turbomachinery()+1; iMarkerTP++){; if (config->GetMarker_All_Turbomachinery(iMarker) == iMarkerTP){; if (config->GetMarker_All_TurbomachineryFlag(iMarker) == marker_flag){; for (iVertex = 0; iVertex < nVertex[iMarker]; iVertex++) {; iPoint = vertex[iMarker][iVertex]->GetNode();; for (jMarker = 0; jMarker < nMarker; jMarker++){; if (config->GetMarker_All_KindBC(jMarker) == PERIODIC_BOUNDARY) {; PeriodicBoundary = config->GetMarker_All_PerBound(jMarker);; jVertex = nodes->GetVertex(iPoint, jMarker);; if ((jVertex != -1) && (PeriodicBoundary == (val_iZone + 1))){; coord = nodes->GetCoord(iPoint);; switch (config->GetKind_TurboMachinery(val_iZone)){; case CENTRIFUGAL; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117
https://github.com/su2code/SU2/issues/1219#issuecomment-790064117:769,Modifiability,config,config,769,"Checkout the small_fixes branch please, I hope the problem is ""that"" simple as I will not debug that function any further because it has the world record for nested loops. If it does not work you will have to hope for help from the turbo folks.; ```c++; for (iMarker = 0; iMarker < nMarker; iMarker++){; for (iMarkerTP=1; iMarkerTP < config->GetnMarker_Turbomachinery()+1; iMarkerTP++){; if (config->GetMarker_All_Turbomachinery(iMarker) == iMarkerTP){; if (config->GetMarker_All_TurbomachineryFlag(iMarker) == marker_flag){; for (iVertex = 0; iVertex < nVertex[iMarker]; iVertex++) {; iPoint = vertex[iMarker][iVertex]->GetNode();; for (jMarker = 0; jMarker < nMarker; jMarker++){; if (config->GetMarker_All_KindBC(jMarker) == PERIODIC_BOUNDARY) {; PeriodicBoundary = config->GetMarker_All_PerBound(jMarker);; jVertex = nodes->GetVertex(iPoint, jMarker);; if ((jVertex != -1) && (PeriodicBoundary == (val_iZone + 1))){; coord = nodes->GetCoord(iPoint);; switch (config->GetKind_TurboMachinery(val_iZone)){; case CENTRIFUGAL; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117
https://github.com/su2code/SU2/issues/1219#issuecomment-790064117:963,Modifiability,config,config,963,"Checkout the small_fixes branch please, I hope the problem is ""that"" simple as I will not debug that function any further because it has the world record for nested loops. If it does not work you will have to hope for help from the turbo folks.; ```c++; for (iMarker = 0; iMarker < nMarker; iMarker++){; for (iMarkerTP=1; iMarkerTP < config->GetnMarker_Turbomachinery()+1; iMarkerTP++){; if (config->GetMarker_All_Turbomachinery(iMarker) == iMarkerTP){; if (config->GetMarker_All_TurbomachineryFlag(iMarker) == marker_flag){; for (iVertex = 0; iVertex < nVertex[iMarker]; iVertex++) {; iPoint = vertex[iMarker][iVertex]->GetNode();; for (jMarker = 0; jMarker < nMarker; jMarker++){; if (config->GetMarker_All_KindBC(jMarker) == PERIODIC_BOUNDARY) {; PeriodicBoundary = config->GetMarker_All_PerBound(jMarker);; jVertex = nodes->GetVertex(iPoint, jMarker);; if ((jVertex != -1) && (PeriodicBoundary == (val_iZone + 1))){; coord = nodes->GetCoord(iPoint);; switch (config->GetKind_TurboMachinery(val_iZone)){; case CENTRIFUGAL; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117
https://github.com/su2code/SU2/issues/1219#issuecomment-790064117:69,Usability,simpl,simple,69,"Checkout the small_fixes branch please, I hope the problem is ""that"" simple as I will not debug that function any further because it has the world record for nested loops. If it does not work you will have to hope for help from the turbo folks.; ```c++; for (iMarker = 0; iMarker < nMarker; iMarker++){; for (iMarkerTP=1; iMarkerTP < config->GetnMarker_Turbomachinery()+1; iMarkerTP++){; if (config->GetMarker_All_Turbomachinery(iMarker) == iMarkerTP){; if (config->GetMarker_All_TurbomachineryFlag(iMarker) == marker_flag){; for (iVertex = 0; iVertex < nVertex[iMarker]; iVertex++) {; iPoint = vertex[iMarker][iVertex]->GetNode();; for (jMarker = 0; jMarker < nMarker; jMarker++){; if (config->GetMarker_All_KindBC(jMarker) == PERIODIC_BOUNDARY) {; PeriodicBoundary = config->GetMarker_All_PerBound(jMarker);; jVertex = nodes->GetVertex(iPoint, jMarker);; if ((jVertex != -1) && (PeriodicBoundary == (val_iZone + 1))){; coord = nodes->GetCoord(iPoint);; switch (config->GetKind_TurboMachinery(val_iZone)){; case CENTRIFUGAL; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117
https://github.com/su2code/SU2/issues/1219#issuecomment-790645353:2,Deployability,install,installed,2,"I installed the small_fixes build and ran the case, but the problem still persists with respect to the number of cores. I can only run the turbomachinery case with maximum 6 cores. I will wait for the turbomachinery folks to look at it. I hope they find the problem. ; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790645353
https://github.com/su2code/SU2/issues/1219#issuecomment-790984246:118,Testability,test,tests,118,"I lied and tried to fix it better, I tried it with one of the examples and it does not crash anymore...; Wait for the tests to pass, do git pull to get the changes and try it again please, maybe it will work, maybe it will blow up somewhere else.; You can use more cores without using ""more MPI"" if you enable OpenMP:; https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/; There is a talk explaining how to use it here https://su2foundation.org/su2conference2020/ (hybrid parallel)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790984246
https://github.com/su2code/SU2/issues/1219#issuecomment-791034298:622,Availability,Error,Error,622,"I hard coded the number of span-wise sections for my case as suggested in #990. By hard coding the number of span-wise sections I am able to get it to work on cores more than 6. For now this works for me. . I added the change in the file CPhysicalGeometry.cpp of version V711. if(marker_flag == OUTFLOW){; // Added by Ashvin MArch 4th 2021	; 	nSpanWiseSections[INFLOW - 1] = 137;; 	nSpanWiseSections[OUTFLOW - 1] = 137;; if(nSpanWiseSections[INFLOW -1] != nSpanWiseSections[OUTFLOW - 1]){; char buf[100];; SPRINTF(buf, ""nSpan inflow %u, nSpan outflow %u"", nSpanWiseSections[INFLOW], nSpanWiseSections[OUTFLOW]);; SU2_MPI::Error(string("" At the moment only turbomachinery with the same amount of span-wise section can be simulated\n"") + buf, CURRENT_FUNCTION);; }; else{; config->SetnSpanWiseSections(nSpanWiseSections[OUTFLOW -1]);; }; }. }. }",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-791034298
https://github.com/su2code/SU2/issues/1219#issuecomment-791034298:771,Modifiability,config,config,771,"I hard coded the number of span-wise sections for my case as suggested in #990. By hard coding the number of span-wise sections I am able to get it to work on cores more than 6. For now this works for me. . I added the change in the file CPhysicalGeometry.cpp of version V711. if(marker_flag == OUTFLOW){; // Added by Ashvin MArch 4th 2021	; 	nSpanWiseSections[INFLOW - 1] = 137;; 	nSpanWiseSections[OUTFLOW - 1] = 137;; if(nSpanWiseSections[INFLOW -1] != nSpanWiseSections[OUTFLOW - 1]){; char buf[100];; SPRINTF(buf, ""nSpan inflow %u, nSpan outflow %u"", nSpanWiseSections[INFLOW], nSpanWiseSections[OUTFLOW]);; SU2_MPI::Error(string("" At the moment only turbomachinery with the same amount of span-wise section can be simulated\n"") + buf, CURRENT_FUNCTION);; }; else{; config->SetnSpanWiseSections(nSpanWiseSections[OUTFLOW -1]);; }; }. }. }",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-791034298
https://github.com/su2code/SU2/pull/1222#issuecomment-792576044:9,Testability,test,tests,9,"When the tests have run, I'll ignore this annoying CodeFactor test and merge, right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222#issuecomment-792576044
https://github.com/su2code/SU2/pull/1222#issuecomment-792576044:62,Testability,test,test,62,"When the tests have run, I'll ignore this annoying CodeFactor test and merge, right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222#issuecomment-792576044
https://github.com/su2code/SU2/pull/1222#issuecomment-792577785:19,Testability,test,tests,19,"> ; > ; > When the tests have run, I'll ignore this annoying CodeFactor test and merge, right?. 👍 Yep, I guess this `Complex code` without any further detail of codeFactor is a bug or sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222#issuecomment-792577785
https://github.com/su2code/SU2/pull/1222#issuecomment-792577785:72,Testability,test,test,72,"> ; > ; > When the tests have run, I'll ignore this annoying CodeFactor test and merge, right?. 👍 Yep, I guess this `Complex code` without any further detail of codeFactor is a bug or sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222#issuecomment-792577785
https://github.com/su2code/SU2/pull/1223#issuecomment-889854856:64,Integrability,depend,depend,64,"Hm, good question why the builds are not running. It should not depend on the LGTM things or CodeFactor at all, they are independent.; My suggestion would be to quickly resolve the conflicts with origin/develop and push again. I could imagine that this hinders the regression tests to run. I briefly went over the conflicts and they seemed to easy to fix (on the first glance). You also have a merge request into develop and didn't touch the regression.yml so I see no problems on that side. The Regression tests also worked in the past so lets hope the merge origin/develop helps 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-889854856
https://github.com/su2code/SU2/pull/1223#issuecomment-889854856:276,Testability,test,tests,276,"Hm, good question why the builds are not running. It should not depend on the LGTM things or CodeFactor at all, they are independent.; My suggestion would be to quickly resolve the conflicts with origin/develop and push again. I could imagine that this hinders the regression tests to run. I briefly went over the conflicts and they seemed to easy to fix (on the first glance). You also have a merge request into develop and didn't touch the regression.yml so I see no problems on that side. The Regression tests also worked in the past so lets hope the merge origin/develop helps 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-889854856
https://github.com/su2code/SU2/pull/1223#issuecomment-889854856:507,Testability,test,tests,507,"Hm, good question why the builds are not running. It should not depend on the LGTM things or CodeFactor at all, they are independent.; My suggestion would be to quickly resolve the conflicts with origin/develop and push again. I could imagine that this hinders the regression tests to run. I briefly went over the conflicts and they seemed to easy to fix (on the first glance). You also have a merge request into develop and didn't touch the regression.yml so I see no problems on that side. The Regression tests also worked in the past so lets hope the merge origin/develop helps 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-889854856
https://github.com/su2code/SU2/pull/1223#issuecomment-898536009:154,Availability,error,error,154,I have no clue by now why `fd_sp_pinArray_cht_2d_dp_hf` fails for surface_static_temperature only ... the discrepancy is in the realm of 1e-6 of relative error but it otherwise works fine (and it passes for me locally). It happened often enough enough to be more than a floating point hiccup . I just click re-run until it works ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898536009
https://github.com/su2code/SU2/pull/1223#issuecomment-898617272:242,Modifiability,config,config,242,"OK the failing regression test were due to:; 1. One simple wrong function call in Csolver; 2. Creating new output in existing groups (AERO_COEFF, FLOW_COEFF) which invalidates some regression tests; 3. pyhton code which does not test if some config variable is present or altering the python code such that it invalidates other regression tests; 4. and finally the AVG_TEMP thing above. Now all these alone were somewhat minor things. Feature_flamelet is now up-to-date with develop with all regression test working",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272
https://github.com/su2code/SU2/pull/1223#issuecomment-898617272:249,Modifiability,variab,variable,249,"OK the failing regression test were due to:; 1. One simple wrong function call in Csolver; 2. Creating new output in existing groups (AERO_COEFF, FLOW_COEFF) which invalidates some regression tests; 3. pyhton code which does not test if some config variable is present or altering the python code such that it invalidates other regression tests; 4. and finally the AVG_TEMP thing above. Now all these alone were somewhat minor things. Feature_flamelet is now up-to-date with develop with all regression test working",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272
https://github.com/su2code/SU2/pull/1223#issuecomment-898617272:26,Testability,test,test,26,"OK the failing regression test were due to:; 1. One simple wrong function call in Csolver; 2. Creating new output in existing groups (AERO_COEFF, FLOW_COEFF) which invalidates some regression tests; 3. pyhton code which does not test if some config variable is present or altering the python code such that it invalidates other regression tests; 4. and finally the AVG_TEMP thing above. Now all these alone were somewhat minor things. Feature_flamelet is now up-to-date with develop with all regression test working",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272
https://github.com/su2code/SU2/pull/1223#issuecomment-898617272:192,Testability,test,tests,192,"OK the failing regression test were due to:; 1. One simple wrong function call in Csolver; 2. Creating new output in existing groups (AERO_COEFF, FLOW_COEFF) which invalidates some regression tests; 3. pyhton code which does not test if some config variable is present or altering the python code such that it invalidates other regression tests; 4. and finally the AVG_TEMP thing above. Now all these alone were somewhat minor things. Feature_flamelet is now up-to-date with develop with all regression test working",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272
https://github.com/su2code/SU2/pull/1223#issuecomment-898617272:229,Testability,test,test,229,"OK the failing regression test were due to:; 1. One simple wrong function call in Csolver; 2. Creating new output in existing groups (AERO_COEFF, FLOW_COEFF) which invalidates some regression tests; 3. pyhton code which does not test if some config variable is present or altering the python code such that it invalidates other regression tests; 4. and finally the AVG_TEMP thing above. Now all these alone were somewhat minor things. Feature_flamelet is now up-to-date with develop with all regression test working",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272
https://github.com/su2code/SU2/pull/1223#issuecomment-898617272:339,Testability,test,tests,339,"OK the failing regression test were due to:; 1. One simple wrong function call in Csolver; 2. Creating new output in existing groups (AERO_COEFF, FLOW_COEFF) which invalidates some regression tests; 3. pyhton code which does not test if some config variable is present or altering the python code such that it invalidates other regression tests; 4. and finally the AVG_TEMP thing above. Now all these alone were somewhat minor things. Feature_flamelet is now up-to-date with develop with all regression test working",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272
https://github.com/su2code/SU2/pull/1223#issuecomment-898617272:503,Testability,test,test,503,"OK the failing regression test were due to:; 1. One simple wrong function call in Csolver; 2. Creating new output in existing groups (AERO_COEFF, FLOW_COEFF) which invalidates some regression tests; 3. pyhton code which does not test if some config variable is present or altering the python code such that it invalidates other regression tests; 4. and finally the AVG_TEMP thing above. Now all these alone were somewhat minor things. Feature_flamelet is now up-to-date with develop with all regression test working",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272
https://github.com/su2code/SU2/pull/1223#issuecomment-898617272:52,Usability,simpl,simple,52,"OK the failing regression test were due to:; 1. One simple wrong function call in Csolver; 2. Creating new output in existing groups (AERO_COEFF, FLOW_COEFF) which invalidates some regression tests; 3. pyhton code which does not test if some config variable is present or altering the python code such that it invalidates other regression tests; 4. and finally the AVG_TEMP thing above. Now all these alone were somewhat minor things. Feature_flamelet is now up-to-date with develop with all regression test working",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272
https://github.com/su2code/SU2/pull/1223#issuecomment-915433095:365,Integrability,rout,routines,365,"Good news,; @bigfooted @danielmayer @lkusch @EvertBunschoten : Commit ecb1154 fixed the restarts for feature_multicomp which is based on feature_flamelet and from a first thought it might work for table lookup as well. Please let me know if it does so. Otherwise The interaction of the table lookup with the Turb and Flow requires some additional calls to Pre/Post routines. @mheimgartner as discussed please merge feature_flamelet into multicomp, such that you have that fix as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-915433095
https://github.com/su2code/SU2/pull/1223#issuecomment-925781391:181,Modifiability,extend,extended,181,"@danielmayer @mheimgartner @bigfooted @EvertBunschoten please note that `CScalarSolver`, `CScalarVariable` and `scalar_sources/convection/diffusion` were renamed to (basically just extended by *Legacy) `CScalarLegacySolver`, `CScalarLegacyVariable` and `scalarLegacy_sources/convection/diffusion`. So all files that you are used to do now have the `Legacy` addition in their names as I introduced the same/similar files in #1330. The 'new' ones are really new in the sense that they form the general base for scalar transport and I will create a `CSpecies*` family of files to incorporate the species transport. So right now both concepts are present in the same branch but the Legacy will be subsequently removed/replaced by the new stuff. . In any case: merge with the upstream feature_flamelet on github regularly. Add Testcases so that these subsequent merges do not introduce any problems I am unable to see otherwise. And if you want to push a commit here please get in touch shortly with me first.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-925781391
https://github.com/su2code/SU2/pull/1223#issuecomment-925781391:822,Testability,Test,Testcases,822,"@danielmayer @mheimgartner @bigfooted @EvertBunschoten please note that `CScalarSolver`, `CScalarVariable` and `scalar_sources/convection/diffusion` were renamed to (basically just extended by *Legacy) `CScalarLegacySolver`, `CScalarLegacyVariable` and `scalarLegacy_sources/convection/diffusion`. So all files that you are used to do now have the `Legacy` addition in their names as I introduced the same/similar files in #1330. The 'new' ones are really new in the sense that they form the general base for scalar transport and I will create a `CSpecies*` family of files to incorporate the species transport. So right now both concepts are present in the same branch but the Legacy will be subsequently removed/replaced by the new stuff. . In any case: merge with the upstream feature_flamelet on github regularly. Add Testcases so that these subsequent merges do not introduce any problems I am unable to see otherwise. And if you want to push a commit here please get in touch shortly with me first.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-925781391
https://github.com/su2code/SU2/pull/1223#issuecomment-949665499:36,Deployability,update,updated,36,@danielmayer the X-code project was updated in #1405 so I just took the whole file from there in case that is not updated automatically in X-code,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-949665499
https://github.com/su2code/SU2/pull/1223#issuecomment-949665499:114,Deployability,update,updated,114,@danielmayer the X-code project was updated in #1405 so I just took the whole file from there in case that is not updated automatically in X-code,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-949665499
https://github.com/su2code/SU2/pull/1223#issuecomment-951356684:35,Testability,test,test,35,"@bigfooted thanks for adding a reg test :+1: I guess you forgot to push the .cfg here to the code and the mesh (+table?) to the Testcases repo :) You would do me a great favor by adding every residual, linear solver output and all relevant Objective Functions which are special this combustion simulation, to the screen output and therefore to the reg test to make any changes more obvious",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-951356684
https://github.com/su2code/SU2/pull/1223#issuecomment-951356684:128,Testability,Test,Testcases,128,"@bigfooted thanks for adding a reg test :+1: I guess you forgot to push the .cfg here to the code and the mesh (+table?) to the Testcases repo :) You would do me a great favor by adding every residual, linear solver output and all relevant Objective Functions which are special this combustion simulation, to the screen output and therefore to the reg test to make any changes more obvious",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-951356684
https://github.com/su2code/SU2/pull/1223#issuecomment-951356684:352,Testability,test,test,352,"@bigfooted thanks for adding a reg test :+1: I guess you forgot to push the .cfg here to the code and the mesh (+table?) to the Testcases repo :) You would do me a great favor by adding every residual, linear solver output and all relevant Objective Functions which are special this combustion simulation, to the screen output and therefore to the reg test to make any changes more obvious",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-951356684
https://github.com/su2code/SU2/pull/1225#issuecomment-793832435:1082,Integrability,interface,interface,1082,"Why is it good C++ to use containers (instead of raw arrays):; - Book keeping: No need for verbose allocations / de-allocations.; - Information: The size is carried with the container, the type of data, the allocation strategy (e.g. alignment), etc.; - Correctness: A const method can change the elements of a raw array, because in such cases const does not qualify the data, only the address (pointer) of that data. On the other hand, a const method will imply const containers, on which only const methods can be called, and so on.; - Performance 1: A nested array (**), or nested container (vector<vector>) is NOT a matrix, it is a list of arrays, consequently there is more construction / destruction overhead (more allocations) uncertain performance at runtime, because inner arrays can end up arbitrarily far from each other, you end up needing copies to talk with e.g. blas or mpi...; - Versatility: Above all a container encapsulates data structure details (e.g. if something is a vector or list or map or row-major matrix or column-major matrix or sparse matrix) behind an interface. Which then lets you change the details separately from the code that uses the data. Whenever you pass an array by pointer you are locking yourself to ONE very particular organization of data in memory.; - Performance 2: This encapsulation is not insulation, it is completely transparent to the compiler because any half decent container type will be defined inline. Furthermore... If the compiler sees two pointers it has absolutely no idea if they are pointing to the same thing, or worse if they partially overlap. To legally optimize such code compilers need to introduce a ton of checks and fallback code, on the other hand, defining operations on containers which you know never to overlap provides a clean way to avoid compiler-paranoia.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435
https://github.com/su2code/SU2/pull/1225#issuecomment-793832435:537,Performance,Perform,Performance,537,"Why is it good C++ to use containers (instead of raw arrays):; - Book keeping: No need for verbose allocations / de-allocations.; - Information: The size is carried with the container, the type of data, the allocation strategy (e.g. alignment), etc.; - Correctness: A const method can change the elements of a raw array, because in such cases const does not qualify the data, only the address (pointer) of that data. On the other hand, a const method will imply const containers, on which only const methods can be called, and so on.; - Performance 1: A nested array (**), or nested container (vector<vector>) is NOT a matrix, it is a list of arrays, consequently there is more construction / destruction overhead (more allocations) uncertain performance at runtime, because inner arrays can end up arbitrarily far from each other, you end up needing copies to talk with e.g. blas or mpi...; - Versatility: Above all a container encapsulates data structure details (e.g. if something is a vector or list or map or row-major matrix or column-major matrix or sparse matrix) behind an interface. Which then lets you change the details separately from the code that uses the data. Whenever you pass an array by pointer you are locking yourself to ONE very particular organization of data in memory.; - Performance 2: This encapsulation is not insulation, it is completely transparent to the compiler because any half decent container type will be defined inline. Furthermore... If the compiler sees two pointers it has absolutely no idea if they are pointing to the same thing, or worse if they partially overlap. To legally optimize such code compilers need to introduce a ton of checks and fallback code, on the other hand, defining operations on containers which you know never to overlap provides a clean way to avoid compiler-paranoia.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435
https://github.com/su2code/SU2/pull/1225#issuecomment-793832435:743,Performance,perform,performance,743,"Why is it good C++ to use containers (instead of raw arrays):; - Book keeping: No need for verbose allocations / de-allocations.; - Information: The size is carried with the container, the type of data, the allocation strategy (e.g. alignment), etc.; - Correctness: A const method can change the elements of a raw array, because in such cases const does not qualify the data, only the address (pointer) of that data. On the other hand, a const method will imply const containers, on which only const methods can be called, and so on.; - Performance 1: A nested array (**), or nested container (vector<vector>) is NOT a matrix, it is a list of arrays, consequently there is more construction / destruction overhead (more allocations) uncertain performance at runtime, because inner arrays can end up arbitrarily far from each other, you end up needing copies to talk with e.g. blas or mpi...; - Versatility: Above all a container encapsulates data structure details (e.g. if something is a vector or list or map or row-major matrix or column-major matrix or sparse matrix) behind an interface. Which then lets you change the details separately from the code that uses the data. Whenever you pass an array by pointer you are locking yourself to ONE very particular organization of data in memory.; - Performance 2: This encapsulation is not insulation, it is completely transparent to the compiler because any half decent container type will be defined inline. Furthermore... If the compiler sees two pointers it has absolutely no idea if they are pointing to the same thing, or worse if they partially overlap. To legally optimize such code compilers need to introduce a ton of checks and fallback code, on the other hand, defining operations on containers which you know never to overlap provides a clean way to avoid compiler-paranoia.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435
https://github.com/su2code/SU2/pull/1225#issuecomment-793832435:1298,Performance,Perform,Performance,1298,"Why is it good C++ to use containers (instead of raw arrays):; - Book keeping: No need for verbose allocations / de-allocations.; - Information: The size is carried with the container, the type of data, the allocation strategy (e.g. alignment), etc.; - Correctness: A const method can change the elements of a raw array, because in such cases const does not qualify the data, only the address (pointer) of that data. On the other hand, a const method will imply const containers, on which only const methods can be called, and so on.; - Performance 1: A nested array (**), or nested container (vector<vector>) is NOT a matrix, it is a list of arrays, consequently there is more construction / destruction overhead (more allocations) uncertain performance at runtime, because inner arrays can end up arbitrarily far from each other, you end up needing copies to talk with e.g. blas or mpi...; - Versatility: Above all a container encapsulates data structure details (e.g. if something is a vector or list or map or row-major matrix or column-major matrix or sparse matrix) behind an interface. Which then lets you change the details separately from the code that uses the data. Whenever you pass an array by pointer you are locking yourself to ONE very particular organization of data in memory.; - Performance 2: This encapsulation is not insulation, it is completely transparent to the compiler because any half decent container type will be defined inline. Furthermore... If the compiler sees two pointers it has absolutely no idea if they are pointing to the same thing, or worse if they partially overlap. To legally optimize such code compilers need to introduce a ton of checks and fallback code, on the other hand, defining operations on containers which you know never to overlap provides a clean way to avoid compiler-paranoia.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435
https://github.com/su2code/SU2/pull/1225#issuecomment-793832435:1621,Performance,optimiz,optimize,1621,"Why is it good C++ to use containers (instead of raw arrays):; - Book keeping: No need for verbose allocations / de-allocations.; - Information: The size is carried with the container, the type of data, the allocation strategy (e.g. alignment), etc.; - Correctness: A const method can change the elements of a raw array, because in such cases const does not qualify the data, only the address (pointer) of that data. On the other hand, a const method will imply const containers, on which only const methods can be called, and so on.; - Performance 1: A nested array (**), or nested container (vector<vector>) is NOT a matrix, it is a list of arrays, consequently there is more construction / destruction overhead (more allocations) uncertain performance at runtime, because inner arrays can end up arbitrarily far from each other, you end up needing copies to talk with e.g. blas or mpi...; - Versatility: Above all a container encapsulates data structure details (e.g. if something is a vector or list or map or row-major matrix or column-major matrix or sparse matrix) behind an interface. Which then lets you change the details separately from the code that uses the data. Whenever you pass an array by pointer you are locking yourself to ONE very particular organization of data in memory.; - Performance 2: This encapsulation is not insulation, it is completely transparent to the compiler because any half decent container type will be defined inline. Furthermore... If the compiler sees two pointers it has absolutely no idea if they are pointing to the same thing, or worse if they partially overlap. To legally optimize such code compilers need to introduce a ton of checks and fallback code, on the other hand, defining operations on containers which you know never to overlap provides a clean way to avoid compiler-paranoia.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435
https://github.com/su2code/SU2/pull/1225#issuecomment-793832435:1812,Safety,avoid,avoid,1812,"Why is it good C++ to use containers (instead of raw arrays):; - Book keeping: No need for verbose allocations / de-allocations.; - Information: The size is carried with the container, the type of data, the allocation strategy (e.g. alignment), etc.; - Correctness: A const method can change the elements of a raw array, because in such cases const does not qualify the data, only the address (pointer) of that data. On the other hand, a const method will imply const containers, on which only const methods can be called, and so on.; - Performance 1: A nested array (**), or nested container (vector<vector>) is NOT a matrix, it is a list of arrays, consequently there is more construction / destruction overhead (more allocations) uncertain performance at runtime, because inner arrays can end up arbitrarily far from each other, you end up needing copies to talk with e.g. blas or mpi...; - Versatility: Above all a container encapsulates data structure details (e.g. if something is a vector or list or map or row-major matrix or column-major matrix or sparse matrix) behind an interface. Which then lets you change the details separately from the code that uses the data. Whenever you pass an array by pointer you are locking yourself to ONE very particular organization of data in memory.; - Performance 2: This encapsulation is not insulation, it is completely transparent to the compiler because any half decent container type will be defined inline. Furthermore... If the compiler sees two pointers it has absolutely no idea if they are pointing to the same thing, or worse if they partially overlap. To legally optimize such code compilers need to introduce a ton of checks and fallback code, on the other hand, defining operations on containers which you know never to overlap provides a clean way to avoid compiler-paranoia.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435
https://github.com/su2code/SU2/pull/1225#issuecomment-793847909:62,Security,access,access,62,"""But wait there's more""; - Debugging, profiling, logging: The access methods of containers can do bound-checking for debugging, they can be instrumented to measure how much data is used, or to log every imaginable type of information. Raw arrays will have you run to valgrind or address sanitizers and then good luck if the only example where you are able to reproduce a bug is too large and you need to wait one hour per test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793847909
https://github.com/su2code/SU2/pull/1225#issuecomment-793847909:287,Security,sanitiz,sanitizers,287,"""But wait there's more""; - Debugging, profiling, logging: The access methods of containers can do bound-checking for debugging, they can be instrumented to measure how much data is used, or to log every imaginable type of information. Raw arrays will have you run to valgrind or address sanitizers and then good luck if the only example where you are able to reproduce a bug is too large and you need to wait one hour per test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793847909
https://github.com/su2code/SU2/pull/1225#issuecomment-793847909:49,Testability,log,logging,49,"""But wait there's more""; - Debugging, profiling, logging: The access methods of containers can do bound-checking for debugging, they can be instrumented to measure how much data is used, or to log every imaginable type of information. Raw arrays will have you run to valgrind or address sanitizers and then good luck if the only example where you are able to reproduce a bug is too large and you need to wait one hour per test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793847909
https://github.com/su2code/SU2/pull/1225#issuecomment-793847909:193,Testability,log,log,193,"""But wait there's more""; - Debugging, profiling, logging: The access methods of containers can do bound-checking for debugging, they can be instrumented to measure how much data is used, or to log every imaginable type of information. Raw arrays will have you run to valgrind or address sanitizers and then good luck if the only example where you are able to reproduce a bug is too large and you need to wait one hour per test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793847909
https://github.com/su2code/SU2/pull/1225#issuecomment-793847909:422,Testability,test,test,422,"""But wait there's more""; - Debugging, profiling, logging: The access methods of containers can do bound-checking for debugging, they can be instrumented to measure how much data is used, or to log every imaginable type of information. Raw arrays will have you run to valgrind or address sanitizers and then good luck if the only example where you are able to reproduce a bug is too large and you need to wait one hour per test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793847909
https://github.com/su2code/SU2/pull/1226#issuecomment-793953677:122,Energy Efficiency,power,power,122,"If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?. The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; - Turbulence solvers;; - Heat solver;; - Radiation solver;; - General passive/active scalar solvers;; - Eventual transition solvers;. The starting point would be the current base turbulence solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-793953677
https://github.com/su2code/SU2/pull/1226#issuecomment-793978226:624,Deployability,integrat,integrate,624,"> If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > ; > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > ; > * Turbulence solvers;; > ; > * Heat solver;; > ; > * Radiation solver;; > ; > * General passive/active scalar solvers;; > ; > * Eventual transition solvers;; > ; > ; > The starting point would be the current base turbulence solver. I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-793978226
https://github.com/su2code/SU2/pull/1226#issuecomment-793978226:124,Energy Efficiency,power,power,124,"> If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > ; > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > ; > * Turbulence solvers;; > ; > * Heat solver;; > ; > * Radiation solver;; > ; > * General passive/active scalar solvers;; > ; > * Eventual transition solvers;; > ; > ; > The starting point would be the current base turbulence solver. I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-793978226
https://github.com/su2code/SU2/pull/1226#issuecomment-793978226:624,Integrability,integrat,integrate,624,"> If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > ; > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > ; > * Turbulence solvers;; > ; > * Heat solver;; > ; > * Radiation solver;; > ; > * General passive/active scalar solvers;; > ; > * Eventual transition solvers;; > ; > ; > The starting point would be the current base turbulence solver. I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-793978226
https://github.com/su2code/SU2/pull/1226#issuecomment-794344854:669,Deployability,integrat,integrate,669,"> > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > ```; > > * Turbulence solvers;; > > ; > > * Heat solver;; > > ; > > * Radiation solver;; > > ; > > * General passive/active scalar solvers;; > > ; > > * Eventual transition solvers;; > > ```; > > ; > > ; > > The starting point would be the current base turbulence solver.; > ; > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :). Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794344854
https://github.com/su2code/SU2/pull/1226#issuecomment-794344854:126,Energy Efficiency,power,power,126,"> > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > ```; > > * Turbulence solvers;; > > ; > > * Heat solver;; > > ; > > * Radiation solver;; > > ; > > * General passive/active scalar solvers;; > > ; > > * Eventual transition solvers;; > > ```; > > ; > > ; > > The starting point would be the current base turbulence solver.; > ; > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :). Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794344854
https://github.com/su2code/SU2/pull/1226#issuecomment-794344854:669,Integrability,integrat,integrate,669,"> > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > ```; > > * Turbulence solvers;; > > ; > > * Heat solver;; > > ; > > * Radiation solver;; > > ; > > * General passive/active scalar solvers;; > > ; > > * Eventual transition solvers;; > > ```; > > ; > > ; > > The starting point would be the current base turbulence solver.; > ; > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :). Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794344854
https://github.com/su2code/SU2/pull/1226#issuecomment-794646465:711,Deployability,integrat,integrate,711,"> > > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > > ```; > > > * Turbulence solvers;; > > > ; > > > * Heat solver;; > > > ; > > > * Radiation solver;; > > > ; > > > * General passive/active scalar solvers;; > > > ; > > > * Eventual transition solvers;; > > > ```; > > > ; > > > ; > > > The starting point would be the current base turbulence solver.; > > ; > > ; > > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :); > ; > Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities. Sure! Let's do this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794646465
https://github.com/su2code/SU2/pull/1226#issuecomment-794646465:128,Energy Efficiency,power,power,128,"> > > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > > ```; > > > * Turbulence solvers;; > > > ; > > > * Heat solver;; > > > ; > > > * Radiation solver;; > > > ; > > > * General passive/active scalar solvers;; > > > ; > > > * Eventual transition solvers;; > > > ```; > > > ; > > > ; > > > The starting point would be the current base turbulence solver.; > > ; > > ; > > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :); > ; > Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities. Sure! Let's do this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794646465
https://github.com/su2code/SU2/pull/1226#issuecomment-794646465:711,Integrability,integrat,integrate,711,"> > > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > > ```; > > > * Turbulence solvers;; > > > ; > > > * Heat solver;; > > > ; > > > * Radiation solver;; > > > ; > > > * General passive/active scalar solvers;; > > > ; > > > * Eventual transition solvers;; > > > ```; > > > ; > > > ; > > > The starting point would be the current base turbulence solver.; > > ; > > ; > > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :); > ; > Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities. Sure! Let's do this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794646465
https://github.com/su2code/SU2/pull/1226#issuecomment-882848944:281,Safety,sanity check,sanity check,281,"Reopening after chatting with @oleburghardt . I merged develop (which I hopefully made no mistakes in as there were quite some conflicts).; Left todo is imo (beyond possible further comments, possible failing tests etc): ; - adding a testcase that at best serves as a verification/sanity check (the expected results of course have to be documented for a possible future redo). I'll see what i'll find; - take a second look at the cfg option consolidation for good measure. I would prefer if this PR would not tackle the CFVMScalarSolver thing, but a first WIP-PR into that direction will come to a github repository near you soon ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-882848944
https://github.com/su2code/SU2/pull/1226#issuecomment-882848944:209,Testability,test,tests,209,"Reopening after chatting with @oleburghardt . I merged develop (which I hopefully made no mistakes in as there were quite some conflicts).; Left todo is imo (beyond possible further comments, possible failing tests etc): ; - adding a testcase that at best serves as a verification/sanity check (the expected results of course have to be documented for a possible future redo). I'll see what i'll find; - take a second look at the cfg option consolidation for good measure. I would prefer if this PR would not tackle the CFVMScalarSolver thing, but a first WIP-PR into that direction will come to a github repository near you soon ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-882848944
https://github.com/su2code/SU2/pull/1226#issuecomment-882848944:234,Testability,test,testcase,234,"Reopening after chatting with @oleburghardt . I merged develop (which I hopefully made no mistakes in as there were quite some conflicts).; Left todo is imo (beyond possible further comments, possible failing tests etc): ; - adding a testcase that at best serves as a verification/sanity check (the expected results of course have to be documented for a possible future redo). I'll see what i'll find; - take a second look at the cfg option consolidation for good measure. I would prefer if this PR would not tackle the CFVMScalarSolver thing, but a first WIP-PR into that direction will come to a github repository near you soon ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-882848944
https://github.com/su2code/SU2/pull/1226#issuecomment-888307312:238,Availability,recover,recover,238,"In order to plausibilize the results in a first step I took the fluid-domain of the streamwise periodic 2D-cht testcase .; 1. h=0 <=> adiabatic wall, i.e. heatflux=0; 2. h>>0 <=~> isothermal wall with Twall = Tinfinity. which the results recover (I also checked that nondimensionalization works correct) :+1: See the archive below for mesh and cfg files. See also below for some images. Note though that the definition of the heat-transfer/convection bc above in the PR-header is not correct. the heatflux computes to:. `q=h (T_infinity - T_wall)` with. `h` the the heat transfer coefficient (to be set in config by the user). `T_infinity` the reference temperature at infinity (to be set in config by the user). `T_wall` the the current local temperature of the specific FV-cell (of course done by the code). [htc-cases.tar.gz](https://github.com/su2code/SU2/files/6893231/htc-cases.tar.gz). The first two are for the isothermal case 2. (nondimensionalized). There is still a ~2.5K gap but I cannot go higher with h then 1e5 as I got bad convergence then. . *EDIT 29.07.2021: * In a comment below @pedro pointed out that one should/could add the Jacobian contribution from that bc. Doing so resolves the previously seen (and here documented) convergence issues with high `h`. Running the case again with h=1e8 converges nicely and results in an averaged surface temperature of exactly 400K 👍 . ![image](https://user-images.githubusercontent.com/31306376/127329398-65c4fdb2-2c1c-4657-bf1f-451624de87e0.png); ![image](https://user-images.githubusercontent.com/31306376/127329428-39ec0ef5-2c7b-4df6-8fb5-8ca7778b818d.png). For heatflux=0 and h=0 the results are (as expected) completely identical, the diff between the screen outputs is only that one uses a different bc in that `config file boundary information` tab; ![image](https://user-images.githubusercontent.com/31306376/127329459-ca9c0f26-a69e-498b-ae5a-31dbedf778cf.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312
https://github.com/su2code/SU2/pull/1226#issuecomment-888307312:606,Modifiability,config,config,606,"In order to plausibilize the results in a first step I took the fluid-domain of the streamwise periodic 2D-cht testcase .; 1. h=0 <=> adiabatic wall, i.e. heatflux=0; 2. h>>0 <=~> isothermal wall with Twall = Tinfinity. which the results recover (I also checked that nondimensionalization works correct) :+1: See the archive below for mesh and cfg files. See also below for some images. Note though that the definition of the heat-transfer/convection bc above in the PR-header is not correct. the heatflux computes to:. `q=h (T_infinity - T_wall)` with. `h` the the heat transfer coefficient (to be set in config by the user). `T_infinity` the reference temperature at infinity (to be set in config by the user). `T_wall` the the current local temperature of the specific FV-cell (of course done by the code). [htc-cases.tar.gz](https://github.com/su2code/SU2/files/6893231/htc-cases.tar.gz). The first two are for the isothermal case 2. (nondimensionalized). There is still a ~2.5K gap but I cannot go higher with h then 1e5 as I got bad convergence then. . *EDIT 29.07.2021: * In a comment below @pedro pointed out that one should/could add the Jacobian contribution from that bc. Doing so resolves the previously seen (and here documented) convergence issues with high `h`. Running the case again with h=1e8 converges nicely and results in an averaged surface temperature of exactly 400K 👍 . ![image](https://user-images.githubusercontent.com/31306376/127329398-65c4fdb2-2c1c-4657-bf1f-451624de87e0.png); ![image](https://user-images.githubusercontent.com/31306376/127329428-39ec0ef5-2c7b-4df6-8fb5-8ca7778b818d.png). For heatflux=0 and h=0 the results are (as expected) completely identical, the diff between the screen outputs is only that one uses a different bc in that `config file boundary information` tab; ![image](https://user-images.githubusercontent.com/31306376/127329459-ca9c0f26-a69e-498b-ae5a-31dbedf778cf.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312
https://github.com/su2code/SU2/pull/1226#issuecomment-888307312:692,Modifiability,config,config,692,"In order to plausibilize the results in a first step I took the fluid-domain of the streamwise periodic 2D-cht testcase .; 1. h=0 <=> adiabatic wall, i.e. heatflux=0; 2. h>>0 <=~> isothermal wall with Twall = Tinfinity. which the results recover (I also checked that nondimensionalization works correct) :+1: See the archive below for mesh and cfg files. See also below for some images. Note though that the definition of the heat-transfer/convection bc above in the PR-header is not correct. the heatflux computes to:. `q=h (T_infinity - T_wall)` with. `h` the the heat transfer coefficient (to be set in config by the user). `T_infinity` the reference temperature at infinity (to be set in config by the user). `T_wall` the the current local temperature of the specific FV-cell (of course done by the code). [htc-cases.tar.gz](https://github.com/su2code/SU2/files/6893231/htc-cases.tar.gz). The first two are for the isothermal case 2. (nondimensionalized). There is still a ~2.5K gap but I cannot go higher with h then 1e5 as I got bad convergence then. . *EDIT 29.07.2021: * In a comment below @pedro pointed out that one should/could add the Jacobian contribution from that bc. Doing so resolves the previously seen (and here documented) convergence issues with high `h`. Running the case again with h=1e8 converges nicely and results in an averaged surface temperature of exactly 400K 👍 . ![image](https://user-images.githubusercontent.com/31306376/127329398-65c4fdb2-2c1c-4657-bf1f-451624de87e0.png); ![image](https://user-images.githubusercontent.com/31306376/127329428-39ec0ef5-2c7b-4df6-8fb5-8ca7778b818d.png). For heatflux=0 and h=0 the results are (as expected) completely identical, the diff between the screen outputs is only that one uses a different bc in that `config file boundary information` tab; ![image](https://user-images.githubusercontent.com/31306376/127329459-ca9c0f26-a69e-498b-ae5a-31dbedf778cf.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312
https://github.com/su2code/SU2/pull/1226#issuecomment-888307312:1778,Modifiability,config,config,1778,"In order to plausibilize the results in a first step I took the fluid-domain of the streamwise periodic 2D-cht testcase .; 1. h=0 <=> adiabatic wall, i.e. heatflux=0; 2. h>>0 <=~> isothermal wall with Twall = Tinfinity. which the results recover (I also checked that nondimensionalization works correct) :+1: See the archive below for mesh and cfg files. See also below for some images. Note though that the definition of the heat-transfer/convection bc above in the PR-header is not correct. the heatflux computes to:. `q=h (T_infinity - T_wall)` with. `h` the the heat transfer coefficient (to be set in config by the user). `T_infinity` the reference temperature at infinity (to be set in config by the user). `T_wall` the the current local temperature of the specific FV-cell (of course done by the code). [htc-cases.tar.gz](https://github.com/su2code/SU2/files/6893231/htc-cases.tar.gz). The first two are for the isothermal case 2. (nondimensionalized). There is still a ~2.5K gap but I cannot go higher with h then 1e5 as I got bad convergence then. . *EDIT 29.07.2021: * In a comment below @pedro pointed out that one should/could add the Jacobian contribution from that bc. Doing so resolves the previously seen (and here documented) convergence issues with high `h`. Running the case again with h=1e8 converges nicely and results in an averaged surface temperature of exactly 400K 👍 . ![image](https://user-images.githubusercontent.com/31306376/127329398-65c4fdb2-2c1c-4657-bf1f-451624de87e0.png); ![image](https://user-images.githubusercontent.com/31306376/127329428-39ec0ef5-2c7b-4df6-8fb5-8ca7778b818d.png). For heatflux=0 and h=0 the results are (as expected) completely identical, the diff between the screen outputs is only that one uses a different bc in that `config file boundary information` tab; ![image](https://user-images.githubusercontent.com/31306376/127329459-ca9c0f26-a69e-498b-ae5a-31dbedf778cf.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312
https://github.com/su2code/SU2/pull/1226#issuecomment-888307312:238,Safety,recover,recover,238,"In order to plausibilize the results in a first step I took the fluid-domain of the streamwise periodic 2D-cht testcase .; 1. h=0 <=> adiabatic wall, i.e. heatflux=0; 2. h>>0 <=~> isothermal wall with Twall = Tinfinity. which the results recover (I also checked that nondimensionalization works correct) :+1: See the archive below for mesh and cfg files. See also below for some images. Note though that the definition of the heat-transfer/convection bc above in the PR-header is not correct. the heatflux computes to:. `q=h (T_infinity - T_wall)` with. `h` the the heat transfer coefficient (to be set in config by the user). `T_infinity` the reference temperature at infinity (to be set in config by the user). `T_wall` the the current local temperature of the specific FV-cell (of course done by the code). [htc-cases.tar.gz](https://github.com/su2code/SU2/files/6893231/htc-cases.tar.gz). The first two are for the isothermal case 2. (nondimensionalized). There is still a ~2.5K gap but I cannot go higher with h then 1e5 as I got bad convergence then. . *EDIT 29.07.2021: * In a comment below @pedro pointed out that one should/could add the Jacobian contribution from that bc. Doing so resolves the previously seen (and here documented) convergence issues with high `h`. Running the case again with h=1e8 converges nicely and results in an averaged surface temperature of exactly 400K 👍 . ![image](https://user-images.githubusercontent.com/31306376/127329398-65c4fdb2-2c1c-4657-bf1f-451624de87e0.png); ![image](https://user-images.githubusercontent.com/31306376/127329428-39ec0ef5-2c7b-4df6-8fb5-8ca7778b818d.png). For heatflux=0 and h=0 the results are (as expected) completely identical, the diff between the screen outputs is only that one uses a different bc in that `config file boundary information` tab; ![image](https://user-images.githubusercontent.com/31306376/127329459-ca9c0f26-a69e-498b-ae5a-31dbedf778cf.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312
https://github.com/su2code/SU2/pull/1226#issuecomment-888307312:111,Testability,test,testcase,111,"In order to plausibilize the results in a first step I took the fluid-domain of the streamwise periodic 2D-cht testcase .; 1. h=0 <=> adiabatic wall, i.e. heatflux=0; 2. h>>0 <=~> isothermal wall with Twall = Tinfinity. which the results recover (I also checked that nondimensionalization works correct) :+1: See the archive below for mesh and cfg files. See also below for some images. Note though that the definition of the heat-transfer/convection bc above in the PR-header is not correct. the heatflux computes to:. `q=h (T_infinity - T_wall)` with. `h` the the heat transfer coefficient (to be set in config by the user). `T_infinity` the reference temperature at infinity (to be set in config by the user). `T_wall` the the current local temperature of the specific FV-cell (of course done by the code). [htc-cases.tar.gz](https://github.com/su2code/SU2/files/6893231/htc-cases.tar.gz). The first two are for the isothermal case 2. (nondimensionalized). There is still a ~2.5K gap but I cannot go higher with h then 1e5 as I got bad convergence then. . *EDIT 29.07.2021: * In a comment below @pedro pointed out that one should/could add the Jacobian contribution from that bc. Doing so resolves the previously seen (and here documented) convergence issues with high `h`. Running the case again with h=1e8 converges nicely and results in an averaged surface temperature of exactly 400K 👍 . ![image](https://user-images.githubusercontent.com/31306376/127329398-65c4fdb2-2c1c-4657-bf1f-451624de87e0.png); ![image](https://user-images.githubusercontent.com/31306376/127329428-39ec0ef5-2c7b-4df6-8fb5-8ca7778b818d.png). For heatflux=0 and h=0 the results are (as expected) completely identical, the diff between the screen outputs is only that one uses a different bc in that `config file boundary information` tab; ![image](https://user-images.githubusercontent.com/31306376/127329459-ca9c0f26-a69e-498b-ae5a-31dbedf778cf.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312
https://github.com/su2code/SU2/pull/1226#issuecomment-890359244:399,Deployability,update,update,399,"Alright, Heat-Transfer BC is good to go. Code factor does its usual thing with Complex code but the rest is green. ; Was a bit more than I anticipated but now there is a compressible version as well alongside the incompressible. . An incompressible Testcase was added which briefly explains expected results in the extreme ends of heat transfer coefficient values. What's is left to do for me is to update and merge su2code/su2code.github.io/pull/26 ,In there i will drop a comment or two that advertises the HeatTransfer bc. Thanks @oleburghardt for kicking this off, @pedro for the review and advise and @bigfooted for some chats behind the scenes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-890359244
https://github.com/su2code/SU2/pull/1226#issuecomment-890359244:108,Energy Efficiency,green,green,108,"Alright, Heat-Transfer BC is good to go. Code factor does its usual thing with Complex code but the rest is green. ; Was a bit more than I anticipated but now there is a compressible version as well alongside the incompressible. . An incompressible Testcase was added which briefly explains expected results in the extreme ends of heat transfer coefficient values. What's is left to do for me is to update and merge su2code/su2code.github.io/pull/26 ,In there i will drop a comment or two that advertises the HeatTransfer bc. Thanks @oleburghardt for kicking this off, @pedro for the review and advise and @bigfooted for some chats behind the scenes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-890359244
https://github.com/su2code/SU2/pull/1226#issuecomment-890359244:249,Testability,Test,Testcase,249,"Alright, Heat-Transfer BC is good to go. Code factor does its usual thing with Complex code but the rest is green. ; Was a bit more than I anticipated but now there is a compressible version as well alongside the incompressible. . An incompressible Testcase was added which briefly explains expected results in the extreme ends of heat transfer coefficient values. What's is left to do for me is to update and merge su2code/su2code.github.io/pull/26 ,In there i will drop a comment or two that advertises the HeatTransfer bc. Thanks @oleburghardt for kicking this off, @pedro for the review and advise and @bigfooted for some chats behind the scenes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-890359244
https://github.com/su2code/SU2/issues/1231#issuecomment-798951811:281,Deployability,release,release,281,"Hi @pcarruscag thanks for responding. I had not run dry run, since I didn't realize anything had changed. Which brings up a topic that has probably been thrown around a lot... I think we need to work on our documentation of those output terms (relying on dry run is clumsy) and/or release notes and/or how the code is documented overall. I'll close this particular issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1231#issuecomment-798951811
https://github.com/su2code/SU2/issues/1231#issuecomment-798960408:60,Deployability,release,releases,60,I agree... We do what we can https://github.com/su2code/SU2/releases/tag/v7.1.0 :shrug:,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1231#issuecomment-798960408
https://github.com/su2code/SU2/issues/1233#issuecomment-804498319:114,Availability,avail,available,114,"Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-804498319
https://github.com/su2code/SU2/issues/1233#issuecomment-804498319:134,Deployability,release,release,134,"Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-804498319
https://github.com/su2code/SU2/issues/1233#issuecomment-804498319:465,Deployability,install,installed,465,"Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-804498319
https://github.com/su2code/SU2/issues/1233#issuecomment-804498319:288,Modifiability,config,config,288,"Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-804498319
https://github.com/su2code/SU2/issues/1233#issuecomment-804498319:384,Modifiability,variab,variable,384,"Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-804498319
https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:1011,Availability,avail,available,1011,"or my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202
https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:94,Deployability,install,install,94,"Hi Pedro,. Thank you for your reply. Apologies for my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202
https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:447,Deployability,install,installed,447,"Hi Pedro,. Thank you for your reply. Apologies for my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202
https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:1031,Deployability,release,release,1031,"or my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202
https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:1362,Deployability,install,installed,1362,"or the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FATHYUQAJN6RB6GCI7QDTE7LTE7POTANCNFSM4ZHARKPQ&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150593131",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202
https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:387,Modifiability,config,configure,387,"Hi Pedro,. Thank you for your reply. Apologies for my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202
https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:1185,Modifiability,config,config,1185,"ic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2F",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202
https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:1281,Modifiability,variab,variable,1281,"ic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2F",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202
https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:1655,Safety,safe,safelinks,1655,"ers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FATHYUQAJN6RB6GCI7QDTE7LTE7POTANCNFSM4ZHARKPQ&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150593131%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=KJACa6bUpNomvHIrZDe0%2FoMQ3DeJTksfdC5nwoHPTWk%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202
https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:2114,Safety,safe,safelinks,2114,"ers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FATHYUQAJN6RB6GCI7QDTE7LTE7POTANCNFSM4ZHARKPQ&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150593131%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=KJACa6bUpNomvHIrZDe0%2FoMQ3DeJTksfdC5nwoHPTWk%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202
https://github.com/su2code/SU2/issues/1233#issuecomment-827721160:1419,Availability,avail,available,1419,"or my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160
https://github.com/su2code/SU2/issues/1233#issuecomment-827721160:502,Deployability,install,install,502,"Okay so I'm new at all this and I'm just kinda figureing it out as I go on my own...  I've been at it for about 6 months and I've taught myself with the help of just reading how to do it now I'm in school but whenever I do any of those commands it doesn't work like the Dcustom and all those it's just not working . Sent from Yahoo Mail on Android ; ; On Tue, Apr 27, 2021 at 10:13 AM, ***@***.***> wrote: . Hi Pedro,. Thank you for your reply. Apologies for my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160
https://github.com/su2code/SU2/issues/1233#issuecomment-827721160:855,Deployability,install,installed,855,"Okay so I'm new at all this and I'm just kinda figureing it out as I go on my own...  I've been at it for about 6 months and I've taught myself with the help of just reading how to do it now I'm in school but whenever I do any of those commands it doesn't work like the Dcustom and all those it's just not working . Sent from Yahoo Mail on Android ; ; On Tue, Apr 27, 2021 at 10:13 AM, ***@***.***> wrote: . Hi Pedro,. Thank you for your reply. Apologies for my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160
https://github.com/su2code/SU2/issues/1233#issuecomment-827721160:1439,Deployability,release,release,1439,"or my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160
https://github.com/su2code/SU2/issues/1233#issuecomment-827721160:1770,Deployability,install,installed,1770,"or the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FATHYUQAJN6RB6GCI7QDTE7LTE7POTANCNFSM4ZHARKPQ&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150593131",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160
https://github.com/su2code/SU2/issues/1233#issuecomment-827721160:795,Modifiability,config,configure,795,"Okay so I'm new at all this and I'm just kinda figureing it out as I go on my own...  I've been at it for about 6 months and I've taught myself with the help of just reading how to do it now I'm in school but whenever I do any of those commands it doesn't work like the Dcustom and all those it's just not working . Sent from Yahoo Mail on Android ; ; On Tue, Apr 27, 2021 at 10:13 AM, ***@***.***> wrote: . Hi Pedro,. Thank you for your reply. Apologies for my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160
https://github.com/su2code/SU2/issues/1233#issuecomment-827721160:1593,Modifiability,config,config,1593,"ic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2F",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160
https://github.com/su2code/SU2/issues/1233#issuecomment-827721160:1689,Modifiability,variab,variable,1689,"ic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2F",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160
https://github.com/su2code/SU2/issues/1233#issuecomment-827721160:2063,Safety,safe,safelinks,2063,"Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FATHYUQAJN6RB6GCI7QDTE7LTE7POTANCNFSM4ZHARKPQ&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150593131%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=KJACa6bUpNomvHIrZDe0%2FoMQ3DeJTksfdC5nwoHPTWk%3D&reserved=0>. —; You are receiving this because you are subscribed to this thread.; Reply to this email direc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160
https://github.com/su2code/SU2/issues/1233#issuecomment-827721160:2522,Safety,safe,safelinks,2522,", March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FATHYUQAJN6RB6GCI7QDTE7LTE7POTANCNFSM4ZHARKPQ&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150593131%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=KJACa6bUpNomvHIrZDe0%2FoMQ3DeJTksfdC5nwoHPTWk%3D&reserved=0>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160
https://github.com/su2code/SU2/pull/1236#issuecomment-800279488:15,Testability,test,test,15,Do you think a test case for this is necessary?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-800279488
https://github.com/su2code/SU2/pull/1236#issuecomment-800292781:42,Testability,test,test,42,"Thank you for the changes.; I would say a test case is always welcome. You can simply modify an existing one, this feature is orthogonal to everything else, and then please add the new options to the config_template (with maybe the nice explanation you have in CConfig).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-800292781
https://github.com/su2code/SU2/pull/1236#issuecomment-800292781:79,Usability,simpl,simply,79,"Thank you for the changes.; I would say a test case is always welcome. You can simply modify an existing one, this feature is orthogonal to everything else, and then please add the new options to the config_template (with maybe the nice explanation you have in CConfig).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-800292781
https://github.com/su2code/SU2/pull/1236#issuecomment-801285967:18,Testability,test,testcases,18,"After looking for testcases to modify, I think it is better to have the modified testcase in addition to, and not besides, the original one. Other users might want to build their cfg file on top of the original testcase cfg file, and could be surprised by the additional feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-801285967
https://github.com/su2code/SU2/pull/1236#issuecomment-801285967:81,Testability,test,testcase,81,"After looking for testcases to modify, I think it is better to have the modified testcase in addition to, and not besides, the original one. Other users might want to build their cfg file on top of the original testcase cfg file, and could be surprised by the additional feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-801285967
https://github.com/su2code/SU2/pull/1236#issuecomment-801285967:211,Testability,test,testcase,211,"After looking for testcases to modify, I think it is better to have the modified testcase in addition to, and not besides, the original one. Other users might want to build their cfg file on top of the original testcase cfg file, and could be surprised by the additional feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-801285967
https://github.com/su2code/SU2/pull/1236#issuecomment-802803608:296,Testability,test,tests,296,"@TobiKattmann @pcarruscag: I tried to follow all of your proposals in the new branch `fix_turb_fixed_values`. I removed the multigrid stuff from the NACA 0012 SST_SUST and fixed_values cfg, but not of the pure SST one. And I added verification of LINSOL_RESIDUAL and RMS_DENSITY to all the three tests. We can open a new PR or merge this in an existing one. Would you like to also remove the adjoint stuff from the cfgs? And right now the fixed_values test does not start from a restart solution, could that be a problem?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-802803608
https://github.com/su2code/SU2/pull/1236#issuecomment-802803608:452,Testability,test,test,452,"@TobiKattmann @pcarruscag: I tried to follow all of your proposals in the new branch `fix_turb_fixed_values`. I removed the multigrid stuff from the NACA 0012 SST_SUST and fixed_values cfg, but not of the pure SST one. And I added verification of LINSOL_RESIDUAL and RMS_DENSITY to all the three tests. We can open a new PR or merge this in an existing one. Would you like to also remove the adjoint stuff from the cfgs? And right now the fixed_values test does not start from a restart solution, could that be a problem?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-802803608
https://github.com/su2code/SU2/pull/1236#issuecomment-802804906:34,Safety,detect,detects,34,We could also write a script that detects cfg options whose removal does not break the regression ;-),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-802804906
https://github.com/su2code/SU2/pull/1236#issuecomment-804035589:138,Testability,test,tests,138,"Ah! Cool, sure open a new PR @maxaehle.; What adjoint stuff? file names and so on?; I think removing irrelevant options would be make the tests clearer, there are lots with Roe and JST options specified and vice versa which probably confuses new users.; I'm not so sure about removing all defaults thought... On one hand it would serve as regression for the default values set by CConfig, on the other it hides the tuning parameters of some methods... but then again those are more or less documented now.; :shrug:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-804035589
https://github.com/su2code/SU2/pull/1236#issuecomment-804035589:144,Usability,clear,clearer,144,"Ah! Cool, sure open a new PR @maxaehle.; What adjoint stuff? file names and so on?; I think removing irrelevant options would be make the tests clearer, there are lots with Roe and JST options specified and vice versa which probably confuses new users.; I'm not so sure about removing all defaults thought... On one hand it would serve as regression for the default values set by CConfig, on the other it hides the tuning parameters of some methods... but then again those are more or less documented now.; :shrug:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-804035589
https://github.com/su2code/SU2/pull/1239#issuecomment-802823863:342,Deployability,release,release,342,Well happy new year to you as well 🎉 🥳 🍾 ; I guess you did a find and replace over the repo for 2012-2020 -> 2012-2021. I briefly scrolled over the diff in case we are really unlucky and somewhere for some reason used that somewhere else. Maybe you had a more elaborate method :). When I saw the `+-2`'s at a merge I first thought I missed a release :D,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1239#issuecomment-802823863
https://github.com/su2code/SU2/pull/1240#issuecomment-804683415:247,Deployability,pipeline,pipeline,247,"Commit 1bc9649 reverts my changes to those residuals in `hybrid_regression.py` which were covered by the regression tests already before. (Oddly enough, on my system the residuals of `SU2_CFD -t 2` were different from those computed by the Github pipeline. Maybe this is due to floating-point discrepancies when arithmetic operations are rearranged?)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-804683415
https://github.com/su2code/SU2/pull/1240#issuecomment-804683415:116,Testability,test,tests,116,"Commit 1bc9649 reverts my changes to those residuals in `hybrid_regression.py` which were covered by the regression tests already before. (Oddly enough, on my system the residuals of `SU2_CFD -t 2` were different from those computed by the Github pipeline. Maybe this is due to floating-point discrepancies when arithmetic operations are rearranged?)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-804683415
https://github.com/su2code/SU2/pull/1240#issuecomment-804890763:263,Availability,down,down,263,"👍 for doing this @maxaehle . ; - I am in favor of removing the `_ADJ_` options with the `GRAD_OBJFUNC_FILENAME`.; - As Roe is used the `JST_SENSOR_COEFF` can go. Limiter are turned off so either the slope limiter section with 2 options can be removed or be moved down below the `FLOW NUMERICAL METHOD DEFNITION`.; - `CONV_CRITERIA` will be gone once you merge develop and you can add `CONV_FIELD=RMS_DENSITY` as that is also the default. Removign the `_CAUCHY_` options is prob debatable, but in this very cfg they are unused. ; - The `CFL_ADAPT*` stuff can go (unless the values are chosen in such a way by you that they do work well, otherwise it might even do negative advertisement for an option). I guess I am also a bit aggressive on stripping options from files, so take it with a grain of salt 🧂 . Another aspect ,which is of course nothing to be changed in this PR and is also a bit off-topic, is that lists like `SOLVER` change over time but the list in the comment over the option in the Testcase cfg does not get updated (there might of course be good examples of people doing so ;) ). `WAVE_EQUATION` and `POISSON_EQUATION` e.g. are not available anymore, yet they are in the cfg description of `SOLVER` here... and 200 other Testcases. So a way might be to strip those and sth like ; ```; % See the config_template.cfg in the code root for more information on the options; ```; ... although the info there are not always perfect either, but one place to maintain is easier than a couple hundred",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-804890763
https://github.com/su2code/SU2/pull/1240#issuecomment-804890763:1150,Availability,avail,available,1150,"👍 for doing this @maxaehle . ; - I am in favor of removing the `_ADJ_` options with the `GRAD_OBJFUNC_FILENAME`.; - As Roe is used the `JST_SENSOR_COEFF` can go. Limiter are turned off so either the slope limiter section with 2 options can be removed or be moved down below the `FLOW NUMERICAL METHOD DEFNITION`.; - `CONV_CRITERIA` will be gone once you merge develop and you can add `CONV_FIELD=RMS_DENSITY` as that is also the default. Removign the `_CAUCHY_` options is prob debatable, but in this very cfg they are unused. ; - The `CFL_ADAPT*` stuff can go (unless the values are chosen in such a way by you that they do work well, otherwise it might even do negative advertisement for an option). I guess I am also a bit aggressive on stripping options from files, so take it with a grain of salt 🧂 . Another aspect ,which is of course nothing to be changed in this PR and is also a bit off-topic, is that lists like `SOLVER` change over time but the list in the comment over the option in the Testcase cfg does not get updated (there might of course be good examples of people doing so ;) ). `WAVE_EQUATION` and `POISSON_EQUATION` e.g. are not available anymore, yet they are in the cfg description of `SOLVER` here... and 200 other Testcases. So a way might be to strip those and sth like ; ```; % See the config_template.cfg in the code root for more information on the options; ```; ... although the info there are not always perfect either, but one place to maintain is easier than a couple hundred",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-804890763
https://github.com/su2code/SU2/pull/1240#issuecomment-804890763:1025,Deployability,update,updated,1025,"👍 for doing this @maxaehle . ; - I am in favor of removing the `_ADJ_` options with the `GRAD_OBJFUNC_FILENAME`.; - As Roe is used the `JST_SENSOR_COEFF` can go. Limiter are turned off so either the slope limiter section with 2 options can be removed or be moved down below the `FLOW NUMERICAL METHOD DEFNITION`.; - `CONV_CRITERIA` will be gone once you merge develop and you can add `CONV_FIELD=RMS_DENSITY` as that is also the default. Removign the `_CAUCHY_` options is prob debatable, but in this very cfg they are unused. ; - The `CFL_ADAPT*` stuff can go (unless the values are chosen in such a way by you that they do work well, otherwise it might even do negative advertisement for an option). I guess I am also a bit aggressive on stripping options from files, so take it with a grain of salt 🧂 . Another aspect ,which is of course nothing to be changed in this PR and is also a bit off-topic, is that lists like `SOLVER` change over time but the list in the comment over the option in the Testcase cfg does not get updated (there might of course be good examples of people doing so ;) ). `WAVE_EQUATION` and `POISSON_EQUATION` e.g. are not available anymore, yet they are in the cfg description of `SOLVER` here... and 200 other Testcases. So a way might be to strip those and sth like ; ```; % See the config_template.cfg in the code root for more information on the options; ```; ... although the info there are not always perfect either, but one place to maintain is easier than a couple hundred",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-804890763
https://github.com/su2code/SU2/pull/1240#issuecomment-804890763:999,Testability,Test,Testcase,999,"👍 for doing this @maxaehle . ; - I am in favor of removing the `_ADJ_` options with the `GRAD_OBJFUNC_FILENAME`.; - As Roe is used the `JST_SENSOR_COEFF` can go. Limiter are turned off so either the slope limiter section with 2 options can be removed or be moved down below the `FLOW NUMERICAL METHOD DEFNITION`.; - `CONV_CRITERIA` will be gone once you merge develop and you can add `CONV_FIELD=RMS_DENSITY` as that is also the default. Removign the `_CAUCHY_` options is prob debatable, but in this very cfg they are unused. ; - The `CFL_ADAPT*` stuff can go (unless the values are chosen in such a way by you that they do work well, otherwise it might even do negative advertisement for an option). I guess I am also a bit aggressive on stripping options from files, so take it with a grain of salt 🧂 . Another aspect ,which is of course nothing to be changed in this PR and is also a bit off-topic, is that lists like `SOLVER` change over time but the list in the comment over the option in the Testcase cfg does not get updated (there might of course be good examples of people doing so ;) ). `WAVE_EQUATION` and `POISSON_EQUATION` e.g. are not available anymore, yet they are in the cfg description of `SOLVER` here... and 200 other Testcases. So a way might be to strip those and sth like ; ```; % See the config_template.cfg in the code root for more information on the options; ```; ... although the info there are not always perfect either, but one place to maintain is easier than a couple hundred",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-804890763
https://github.com/su2code/SU2/pull/1240#issuecomment-804890763:1239,Testability,Test,Testcases,1239,"👍 for doing this @maxaehle . ; - I am in favor of removing the `_ADJ_` options with the `GRAD_OBJFUNC_FILENAME`.; - As Roe is used the `JST_SENSOR_COEFF` can go. Limiter are turned off so either the slope limiter section with 2 options can be removed or be moved down below the `FLOW NUMERICAL METHOD DEFNITION`.; - `CONV_CRITERIA` will be gone once you merge develop and you can add `CONV_FIELD=RMS_DENSITY` as that is also the default. Removign the `_CAUCHY_` options is prob debatable, but in this very cfg they are unused. ; - The `CFL_ADAPT*` stuff can go (unless the values are chosen in such a way by you that they do work well, otherwise it might even do negative advertisement for an option). I guess I am also a bit aggressive on stripping options from files, so take it with a grain of salt 🧂 . Another aspect ,which is of course nothing to be changed in this PR and is also a bit off-topic, is that lists like `SOLVER` change over time but the list in the comment over the option in the Testcase cfg does not get updated (there might of course be good examples of people doing so ;) ). `WAVE_EQUATION` and `POISSON_EQUATION` e.g. are not available anymore, yet they are in the cfg description of `SOLVER` here... and 200 other Testcases. So a way might be to strip those and sth like ; ```; % See the config_template.cfg in the code root for more information on the options; ```; ... although the info there are not always perfect either, but one place to maintain is easier than a couple hundred",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-804890763
https://github.com/su2code/SU2/pull/1240#issuecomment-810867952:102,Testability,test,tests,102,"Hey @maxaehle , if you don't want to make further changes you can hit the merge if you like, once the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-810867952
https://github.com/su2code/SU2/issues/1241#issuecomment-804258186:144,Energy Efficiency,efficient,efficient,144,"The intention was to allow CSysVector to be used like in a local way without mpi, because now it provides nice math syntax, (a+b-2*(c-a)) in an efficient way... But of course hell is full of good intentions and I guess if you have a disjoint domain, for example two things that do not touch, it is possible for that condition to evaluate differently on different ranks.; I'll remove it, thanks for the PI work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241#issuecomment-804258186
https://github.com/su2code/SU2/issues/1241#issuecomment-804757081:137,Performance,load,load,137,Resolved by #1228 thanks @pcarruscag and thanks for the explanation. . Just one more thing. do you have an idea why I still see 100% cpu load in that case? I picture a hyperactive process running around a stoplight sign at a zebra walk 🚥 🏃 🦓 waiting for his teammates to catch up whilst not getting cold. My private machine gets hot and loud so I guess there is real computation going on there. It could relax and sit on that park bench 🪑 for a minute.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241#issuecomment-804757081
https://github.com/su2code/SU2/issues/1241#issuecomment-804783119:120,Availability,down,down,120,"That is what imagine as well, i.e. very anxious waiting, some cpu might see that as a ""power virus"" and eventually slow down.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241#issuecomment-804783119
https://github.com/su2code/SU2/issues/1241#issuecomment-804783119:87,Energy Efficiency,power,power,87,"That is what imagine as well, i.e. very anxious waiting, some cpu might see that as a ""power virus"" and eventually slow down.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241#issuecomment-804783119
https://github.com/su2code/SU2/pull/1242#issuecomment-805010330:237,Safety,safe,safe,237,"Provocative thought of the day: Removing the numbers from the enums is a bit of spring cleaning, the ""modern C++"" way is to use `enum class` and to never rely on implicit conversions from enum to integer type.; In any case, it should be safe to remove the numbers when they already start at zero.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242#issuecomment-805010330
https://github.com/su2code/SU2/pull/1242#issuecomment-805108781:546,Usability,guid,guidelines,546,"> the ""modern C++"" way is to use enum class and to never rely on implicit conversions from enum to integer type. I am in. It is a little (actually quite a bit) more involved as the enum namespace has to be given now everywhere an entry is used.; I was not familiar with `enum` vs `enum class` if someone else needs an entry point [stack overflow](https://stackoverflow.com/questions/18335861/why-is-enum-class-preferred-over-plain-enum), [playin around in compiler explorer](https://gcc.godbolt.org/z/5YTd4dPoE)... oh and of course the [c++ core guidelines entry endorses the use of enum class as well](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Renum-class)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242#issuecomment-805108781
https://github.com/su2code/SU2/pull/1242#issuecomment-805832833:291,Deployability,release,released,291,This pull request **introduces 2 alerts** when merging bd952260a082dcec837a842ac69c7d0575255fe0 into 949f4e5efd532e5977b461bdb2eba6351723051e - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-10c0da9c01c2000bb722a346c6bace6bd9dc1453). **new alerts:**. * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242#issuecomment-805832833
https://github.com/su2code/SU2/pull/1242#issuecomment-808418855:291,Deployability,release,released,291,This pull request **introduces 2 alerts** when merging 5492805e6975b6a5f27a4919d0b7e03bb2e3e99b into 14d77240ed01fb13d0bb75eb7a95257127f021ff - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-5ce66880e1b6dd90c964950bca31ad4ba618da94). **new alerts:**. * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242#issuecomment-808418855
https://github.com/su2code/SU2/pull/1242#issuecomment-814996077:291,Deployability,release,released,291,This pull request **introduces 2 alerts** when merging e27da1daf4b9ea0756b831379c47b2604be046b2 into 3b209829b75fcc96307a7a7e48e1e33bc50bdab4 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-ff05f834663f5500b78b89094816cae1f9b7d9f2). **new alerts:**. * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242#issuecomment-814996077
https://github.com/su2code/SU2/pull/1242#issuecomment-815011215:262,Modifiability,variab,variable,262,"Merging this now to keep the PR and the number of problems, that will arise in other code, in bounds. This work will be continued in a future PR. If your code breaks after merging this PR you most likely just have to add an `<ENUM_NAME>::` in front of your enum variable. Thanks @pcarruscag for the idea and the setup in `option_structure.inl`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242#issuecomment-815011215
https://github.com/su2code/SU2/pull/1249#issuecomment-811434977:86,Testability,test,tests,86,"@pcarruscag Wait, why did you merge this when the last commit made so many regression tests fail? I guess you did you not wait until they were finished? Not cool though and I hope this was not intentional; From what I've seen it is not super obvious how the tests are linked (especially the parallel_AD ones) but the commit is not that big so I only really suspect the removed enum entries of all ....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1249#issuecomment-811434977
https://github.com/su2code/SU2/pull/1249#issuecomment-811434977:258,Testability,test,tests,258,"@pcarruscag Wait, why did you merge this when the last commit made so many regression tests fail? I guess you did you not wait until they were finished? Not cool though and I hope this was not intentional; From what I've seen it is not super obvious how the tests are linked (especially the parallel_AD ones) but the commit is not that big so I only really suspect the removed enum entries of all ....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1249#issuecomment-811434977
https://github.com/su2code/SU2/pull/1249#issuecomment-811449617:80,Availability,error,error,80,"The merged branch is deleted and then the test action is not able to checkout; ""error: pathspec 'refs/pull/1249/merge' did not match any file(s) known to git.""; Because the regressions work by cloning su2 master and then doing ""git checkout""; There was zero chance of breaking any testcases with those changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1249#issuecomment-811449617
https://github.com/su2code/SU2/pull/1249#issuecomment-811449617:42,Testability,test,test,42,"The merged branch is deleted and then the test action is not able to checkout; ""error: pathspec 'refs/pull/1249/merge' did not match any file(s) known to git.""; Because the regressions work by cloning su2 master and then doing ""git checkout""; There was zero chance of breaking any testcases with those changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1249#issuecomment-811449617
https://github.com/su2code/SU2/pull/1249#issuecomment-811449617:281,Testability,test,testcases,281,"The merged branch is deleted and then the test action is not able to checkout; ""error: pathspec 'refs/pull/1249/merge' did not match any file(s) known to git.""; Because the regressions work by cloning su2 master and then doing ""git checkout""; There was zero chance of breaking any testcases with those changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1249#issuecomment-811449617
https://github.com/su2code/SU2/pull/1249#issuecomment-811453771:216,Deployability,release,release,216,"... well ... let me quickly stop the air strike on your position :D; somehow it managed to exactly fail the streamwise periodic stuff (as they were added more recently then it makes sense); I did not check check the release management 👍 so thanks for the info. > There was zero chance of breaking any testcases with those changes. I thought that as well, but I wouldn't be the first time I thought that and was proven otherwise ... :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1249#issuecomment-811453771
https://github.com/su2code/SU2/pull/1249#issuecomment-811453771:301,Testability,test,testcases,301,"... well ... let me quickly stop the air strike on your position :D; somehow it managed to exactly fail the streamwise periodic stuff (as they were added more recently then it makes sense); I did not check check the release management 👍 so thanks for the info. > There was zero chance of breaking any testcases with those changes. I thought that as well, but I wouldn't be the first time I thought that and was proven otherwise ... :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1249#issuecomment-811453771
https://github.com/su2code/SU2/pull/1256#issuecomment-814833682:288,Deployability,release,released,288,This pull request **fixes 6 alerts** when merging 84e05851ad98d6de83f5ad2112bf08683f0d4b6a into e823be7365a34b48022eba70fa82771362015519 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-57e6058b4fa4b5b867c6e48c0843bc6f00a5721a). **fixed alerts:**. * 6 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256#issuecomment-814833682
https://github.com/su2code/SU2/pull/1256#issuecomment-815065558:288,Deployability,release,released,288,This pull request **fixes 6 alerts** when merging dad20d77efb5ce2d273305238dcf238acdc7ae55 into 1f7f6bb281c72cd21c755084e2b8cc84a0ccb692 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-beb1164baabb2d52e51f5321e3d954ab598dffec). **fixed alerts:**. * 6 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256#issuecomment-815065558
https://github.com/su2code/SU2/pull/1256#issuecomment-815616191:288,Deployability,release,released,288,This pull request **fixes 6 alerts** when merging e1896e6a34d9b452c1feef207739adebf097b38c into 1f7f6bb281c72cd21c755084e2b8cc84a0ccb692 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-ca7b81b1c7cd4200b20a8276bda355cb5e6d228c). **fixed alerts:**. * 6 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256#issuecomment-815616191
https://github.com/su2code/SU2/pull/1256#issuecomment-815710940:288,Deployability,release,released,288,This pull request **fixes 6 alerts** when merging 026fbff1db98322500c6e642e3ad31a866e6ce14 into 1f7f6bb281c72cd21c755084e2b8cc84a0ccb692 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b8f19e61a2f29597daac381611e3cbe618c86b84). **fixed alerts:**. * 6 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256#issuecomment-815710940
https://github.com/su2code/SU2/pull/1256#issuecomment-819592457:288,Deployability,release,released,288,This pull request **fixes 6 alerts** when merging 0e250e1f2a7321c94340c7502703aa30a58302fc into 7fa0763e9115f088fb02fdf2f58610431a434db7 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-327d42b5d0be5ab75114f11a5c7bb23a921e3fdd). **fixed alerts:**. * 6 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256#issuecomment-819592457
https://github.com/su2code/SU2/pull/1258#issuecomment-824099355:73,Testability,test,test,73,"Codefactor is just complainig about the usual CIncEulerSolver. All other test pass, so I'll merge this and continue in Part III. ; Coming to a repository near you soon. 🎦",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258#issuecomment-824099355
https://github.com/su2code/SU2/pull/1259#issuecomment-817952886:84,Safety,detect,detects,84,"You could modify `CWindowedAverage::addValue` to only ""push back"" more values if it detects a change in current time iteration, otherwise it simple overwrites the last value in the history.; Then you could get rid of the entire logic in `SetUpdate_Averages` simply making it true or false (less logic is the way for less bugs).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886
https://github.com/su2code/SU2/pull/1259#issuecomment-817952886:228,Testability,log,logic,228,"You could modify `CWindowedAverage::addValue` to only ""push back"" more values if it detects a change in current time iteration, otherwise it simple overwrites the last value in the history.; Then you could get rid of the entire logic in `SetUpdate_Averages` simply making it true or false (less logic is the way for less bugs).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886
https://github.com/su2code/SU2/pull/1259#issuecomment-817952886:295,Testability,log,logic,295,"You could modify `CWindowedAverage::addValue` to only ""push back"" more values if it detects a change in current time iteration, otherwise it simple overwrites the last value in the history.; Then you could get rid of the entire logic in `SetUpdate_Averages` simply making it true or false (less logic is the way for less bugs).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886
https://github.com/su2code/SU2/pull/1259#issuecomment-817952886:141,Usability,simpl,simple,141,"You could modify `CWindowedAverage::addValue` to only ""push back"" more values if it detects a change in current time iteration, otherwise it simple overwrites the last value in the history.; Then you could get rid of the entire logic in `SetUpdate_Averages` simply making it true or false (less logic is the way for less bugs).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886
https://github.com/su2code/SU2/pull/1259#issuecomment-817952886:258,Usability,simpl,simply,258,"You could modify `CWindowedAverage::addValue` to only ""push back"" more values if it detects a change in current time iteration, otherwise it simple overwrites the last value in the history.; Then you could get rid of the entire logic in `SetUpdate_Averages` simply making it true or false (less logic is the way for less bugs).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886
https://github.com/su2code/SU2/pull/1259#issuecomment-819111992:33,Deployability,update,update,33,"Hi Pedro, thanks for the idea to update the windowing directly! I've updated addValue such that the values are added for new time only (replaces existing values if it is still the same time iteration). This is a lot simpler and very happy to remove the convoluted logic. The SetUpdate_Averages was still necessary though to pass the regression test for unsteady_cylinder_windowed_average.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-819111992
https://github.com/su2code/SU2/pull/1259#issuecomment-819111992:69,Deployability,update,updated,69,"Hi Pedro, thanks for the idea to update the windowing directly! I've updated addValue such that the values are added for new time only (replaces existing values if it is still the same time iteration). This is a lot simpler and very happy to remove the convoluted logic. The SetUpdate_Averages was still necessary though to pass the regression test for unsteady_cylinder_windowed_average.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-819111992
https://github.com/su2code/SU2/pull/1259#issuecomment-819111992:264,Testability,log,logic,264,"Hi Pedro, thanks for the idea to update the windowing directly! I've updated addValue such that the values are added for new time only (replaces existing values if it is still the same time iteration). This is a lot simpler and very happy to remove the convoluted logic. The SetUpdate_Averages was still necessary though to pass the regression test for unsteady_cylinder_windowed_average.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-819111992
https://github.com/su2code/SU2/pull/1259#issuecomment-819111992:344,Testability,test,test,344,"Hi Pedro, thanks for the idea to update the windowing directly! I've updated addValue such that the values are added for new time only (replaces existing values if it is still the same time iteration). This is a lot simpler and very happy to remove the convoluted logic. The SetUpdate_Averages was still necessary though to pass the regression test for unsteady_cylinder_windowed_average.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-819111992
https://github.com/su2code/SU2/pull/1259#issuecomment-819111992:216,Usability,simpl,simpler,216,"Hi Pedro, thanks for the idea to update the windowing directly! I've updated addValue such that the values are added for new time only (replaces existing values if it is still the same time iteration). This is a lot simpler and very happy to remove the convoluted logic. The SetUpdate_Averages was still necessary though to pass the regression test for unsteady_cylinder_windowed_average.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-819111992
https://github.com/su2code/SU2/pull/1259#issuecomment-821894824:45,Testability,test,test,45,"Hi Pedro, thanks for updating the regression test and all the tidy up as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-821894824
https://github.com/su2code/SU2/pull/1260#issuecomment-839237997:13,Testability,test,test,13,A regression test is now added in the TestCases repo. Can we please merge the TestCase PR [#62](https://github.com/su2code/TestCases/pull/62) first? Then we can uncomment the new test in parallel_regression_AD.py to include it in the checks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260#issuecomment-839237997
https://github.com/su2code/SU2/pull/1260#issuecomment-839237997:38,Testability,Test,TestCases,38,A regression test is now added in the TestCases repo. Can we please merge the TestCase PR [#62](https://github.com/su2code/TestCases/pull/62) first? Then we can uncomment the new test in parallel_regression_AD.py to include it in the checks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260#issuecomment-839237997
https://github.com/su2code/SU2/pull/1260#issuecomment-839237997:78,Testability,Test,TestCase,78,A regression test is now added in the TestCases repo. Can we please merge the TestCase PR [#62](https://github.com/su2code/TestCases/pull/62) first? Then we can uncomment the new test in parallel_regression_AD.py to include it in the checks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260#issuecomment-839237997
https://github.com/su2code/SU2/pull/1260#issuecomment-839237997:123,Testability,Test,TestCases,123,A regression test is now added in the TestCases repo. Can we please merge the TestCase PR [#62](https://github.com/su2code/TestCases/pull/62) first? Then we can uncomment the new test in parallel_regression_AD.py to include it in the checks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260#issuecomment-839237997
https://github.com/su2code/SU2/pull/1260#issuecomment-839237997:179,Testability,test,test,179,A regression test is now added in the TestCases repo. Can we please merge the TestCase PR [#62](https://github.com/su2code/TestCases/pull/62) first? Then we can uncomment the new test in parallel_regression_AD.py to include it in the checks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260#issuecomment-839237997
https://github.com/su2code/SU2/issues/1261#issuecomment-818806174:250,Energy Efficiency,allocate,allocated,250,"Valgrind does not detect any leaks.; What is probably happening is heap fragmentation, some large temporary arrays are used during parallel output, they are free'd correctly but the OS is not obligated to re-use that space the next time something is allocated. If you want to experiment with modifying some code (to make those arrays persistent) we can show you what to do.; (developers meetings every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting). Cheers",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261#issuecomment-818806174
https://github.com/su2code/SU2/issues/1261#issuecomment-818806174:18,Safety,detect,detect,18,"Valgrind does not detect any leaks.; What is probably happening is heap fragmentation, some large temporary arrays are used during parallel output, they are free'd correctly but the OS is not obligated to re-use that space the next time something is allocated. If you want to experiment with modifying some code (to make those arrays persistent) we can show you what to do.; (developers meetings every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting). Cheers",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261#issuecomment-818806174
https://github.com/su2code/SU2/issues/1261#issuecomment-818827116:179,Energy Efficiency,allocate,allocated,179,"Hi Pedro,. Thanks for the hint!. If I understood it correctly, it's possible that after the large temporary array for parallel output is freed, some smaller blocks are eventually allocated in that free space, which means a new block of memory needs to be allocated when the large temporary array is created again. And if this keeps happening over a long enough period of time, the memory usage increases?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261#issuecomment-818827116
https://github.com/su2code/SU2/issues/1261#issuecomment-818827116:255,Energy Efficiency,allocate,allocated,255,"Hi Pedro,. Thanks for the hint!. If I understood it correctly, it's possible that after the large temporary array for parallel output is freed, some smaller blocks are eventually allocated in that free space, which means a new block of memory needs to be allocated when the large temporary array is created again. And if this keeps happening over a long enough period of time, the memory usage increases?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261#issuecomment-818827116
https://github.com/su2code/SU2/issues/1261#issuecomment-818837883:333,Safety,predict,predictable,333,"That is how I understand it, but memory allocation is a complex beast.; For example I expect the policy for small and large sizes to be different, maybe the interaction between similar sizes (e.g. from different MPI processes) is more important, because memory is a global resource and the different processes do not request it in a predictable order.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261#issuecomment-818837883
https://github.com/su2code/SU2/issues/1262#issuecomment-818786416:390,Availability,avail,available,390,"There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; (talking does not go very far). If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818786416
https://github.com/su2code/SU2/issues/1262#issuecomment-818786416:30,Modifiability,refactor,refactoring,30,"There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; (talking does not go very far). If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818786416
https://github.com/su2code/SU2/issues/1262#issuecomment-818786416:362,Modifiability,variab,variables,362,"There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; (talking does not go very far). If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818786416
https://github.com/su2code/SU2/issues/1262#issuecomment-818786416:52,Performance,optimiz,optimization,52,"There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; (talking does not go very far). If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818786416
https://github.com/su2code/SU2/issues/1262#issuecomment-818786416:167,Usability,simpl,simply,167,"There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; (talking does not go very far). If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818786416
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:396,Availability,avail,available,396,"> There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; > I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each oper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:1279,Deployability,update,updates,1279,"e more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each operating point) have in common. There would be no need to initialise the entire `SU2_CFD` machinery for this step, or to apply the design update separately for each of the SU2 instances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:1468,Deployability,update,updates,1468,"e more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each operating point) have in common. There would be no need to initialise the entire `SU2_CFD` machinery for this step, or to apply the design update separately for each of the SU2 instances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:1674,Deployability,configurat,configuration,1674,"e more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each operating point) have in common. There would be no need to initialise the entire `SU2_CFD` machinery for this step, or to apply the design update separately for each of the SU2 instances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:1796,Deployability,update,updated,1796,"e more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each operating point) have in common. There would be no need to initialise the entire `SU2_CFD` machinery for this step, or to apply the design update separately for each of the SU2 instances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:1908,Deployability,update,updated,1908,"e more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each operating point) have in common. There would be no need to initialise the entire `SU2_CFD` machinery for this step, or to apply the design update separately for each of the SU2 instances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:2136,Deployability,update,update,2136,"e more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each operating point) have in common. There would be no need to initialise the entire `SU2_CFD` machinery for this step, or to apply the design update separately for each of the SU2 instances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:32,Modifiability,refactor,refactoring,32,"> There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; > I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each oper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:368,Modifiability,variab,variables,368,"> There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; > I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each oper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:1575,Modifiability,variab,variables,1575,"e more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each operating point) have in common. There would be no need to initialise the entire `SU2_CFD` machinery for this step, or to apply the design update separately for each of the SU2 instances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:1674,Modifiability,config,configuration,1674,"e more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each operating point) have in common. There would be no need to initialise the entire `SU2_CFD` machinery for this step, or to apply the design update separately for each of the SU2 instances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:1811,Modifiability,variab,variables,1811,"e more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each operating point) have in common. There would be no need to initialise the entire `SU2_CFD` machinery for this step, or to apply the design update separately for each of the SU2 instances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:54,Performance,optimiz,optimization,54,"> There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; > I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each oper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:171,Usability,simpl,simply,171,"> There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; > I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each oper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:949,Usability,learn,learn,949,"> There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; > I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each oper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696
https://github.com/su2code/SU2/pull/1267#issuecomment-822064131:308,Deployability,release,released,308,This pull request **introduces 3 alerts** and **fixes 46** when merging 3d87e0078f5ee9206dae5f2c993828f4518f34c9 into ce07d5c086c846252d200132d21e719819ba2296 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-84d18fae4949789bbb3578e25c2ac705e1ac0762). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Multiplication result converted to larger type. **fixed alerts:**. * 14 for Multiplication result converted to larger type; * 13 for Comparison of narrow type with wide type in loop condition; * 9 for Resource not released in destructor; * 8 for &#39;input&#39; function used in Python 2; * 1 for Unused import; * 1 for Result of integer division may be truncated,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-822064131
https://github.com/su2code/SU2/pull/1267#issuecomment-822064131:554,Deployability,release,released,554,This pull request **introduces 3 alerts** and **fixes 46** when merging 3d87e0078f5ee9206dae5f2c993828f4518f34c9 into ce07d5c086c846252d200132d21e719819ba2296 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-84d18fae4949789bbb3578e25c2ac705e1ac0762). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Multiplication result converted to larger type. **fixed alerts:**. * 14 for Multiplication result converted to larger type; * 13 for Comparison of narrow type with wide type in loop condition; * 9 for Resource not released in destructor; * 8 for &#39;input&#39; function used in Python 2; * 1 for Unused import; * 1 for Result of integer division may be truncated,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-822064131
https://github.com/su2code/SU2/pull/1267#issuecomment-971340179:662,Deployability,update,updated,662,"Hello,; Sorry for a very very late comment, but if I did not get it wrong, it seems like the turbulence intensity value specified in the config file is now multiplied by 100 in the turb_sources.cpp at line 143 after this commit. . Generally, the users tend to use the percent value (because nearly every paper on the subject talk in percentages) for turbulence intensitirs, so for example, if the experimental conditions say 3% for the turbulence intensity, the option in the config file should be 3.0. But now with this 100* modification, the users must enter 0.03, is that correct? . If it is correct, then transition test case/tutorial config files should be updated as well. Because the transition onset correlations (Menter or Abu-Ghannam) uses the percent value. . All in all, however, I suggest that we should remove the factor of 100, so the value in the config file is in percentages directly, as it was before. . Regards,; Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179
https://github.com/su2code/SU2/pull/1267#issuecomment-971340179:137,Modifiability,config,config,137,"Hello,; Sorry for a very very late comment, but if I did not get it wrong, it seems like the turbulence intensity value specified in the config file is now multiplied by 100 in the turb_sources.cpp at line 143 after this commit. . Generally, the users tend to use the percent value (because nearly every paper on the subject talk in percentages) for turbulence intensitirs, so for example, if the experimental conditions say 3% for the turbulence intensity, the option in the config file should be 3.0. But now with this 100* modification, the users must enter 0.03, is that correct? . If it is correct, then transition test case/tutorial config files should be updated as well. Because the transition onset correlations (Menter or Abu-Ghannam) uses the percent value. . All in all, however, I suggest that we should remove the factor of 100, so the value in the config file is in percentages directly, as it was before. . Regards,; Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179
https://github.com/su2code/SU2/pull/1267#issuecomment-971340179:476,Modifiability,config,config,476,"Hello,; Sorry for a very very late comment, but if I did not get it wrong, it seems like the turbulence intensity value specified in the config file is now multiplied by 100 in the turb_sources.cpp at line 143 after this commit. . Generally, the users tend to use the percent value (because nearly every paper on the subject talk in percentages) for turbulence intensitirs, so for example, if the experimental conditions say 3% for the turbulence intensity, the option in the config file should be 3.0. But now with this 100* modification, the users must enter 0.03, is that correct? . If it is correct, then transition test case/tutorial config files should be updated as well. Because the transition onset correlations (Menter or Abu-Ghannam) uses the percent value. . All in all, however, I suggest that we should remove the factor of 100, so the value in the config file is in percentages directly, as it was before. . Regards,; Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179
https://github.com/su2code/SU2/pull/1267#issuecomment-971340179:639,Modifiability,config,config,639,"Hello,; Sorry for a very very late comment, but if I did not get it wrong, it seems like the turbulence intensity value specified in the config file is now multiplied by 100 in the turb_sources.cpp at line 143 after this commit. . Generally, the users tend to use the percent value (because nearly every paper on the subject talk in percentages) for turbulence intensitirs, so for example, if the experimental conditions say 3% for the turbulence intensity, the option in the config file should be 3.0. But now with this 100* modification, the users must enter 0.03, is that correct? . If it is correct, then transition test case/tutorial config files should be updated as well. Because the transition onset correlations (Menter or Abu-Ghannam) uses the percent value. . All in all, however, I suggest that we should remove the factor of 100, so the value in the config file is in percentages directly, as it was before. . Regards,; Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179
https://github.com/su2code/SU2/pull/1267#issuecomment-971340179:863,Modifiability,config,config,863,"Hello,; Sorry for a very very late comment, but if I did not get it wrong, it seems like the turbulence intensity value specified in the config file is now multiplied by 100 in the turb_sources.cpp at line 143 after this commit. . Generally, the users tend to use the percent value (because nearly every paper on the subject talk in percentages) for turbulence intensitirs, so for example, if the experimental conditions say 3% for the turbulence intensity, the option in the config file should be 3.0. But now with this 100* modification, the users must enter 0.03, is that correct? . If it is correct, then transition test case/tutorial config files should be updated as well. Because the transition onset correlations (Menter or Abu-Ghannam) uses the percent value. . All in all, however, I suggest that we should remove the factor of 100, so the value in the config file is in percentages directly, as it was before. . Regards,; Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179
https://github.com/su2code/SU2/pull/1267#issuecomment-971340179:620,Testability,test,test,620,"Hello,; Sorry for a very very late comment, but if I did not get it wrong, it seems like the turbulence intensity value specified in the config file is now multiplied by 100 in the turb_sources.cpp at line 143 after this commit. . Generally, the users tend to use the percent value (because nearly every paper on the subject talk in percentages) for turbulence intensitirs, so for example, if the experimental conditions say 3% for the turbulence intensity, the option in the config file should be 3.0. But now with this 100* modification, the users must enter 0.03, is that correct? . If it is correct, then transition test case/tutorial config files should be updated as well. Because the transition onset correlations (Menter or Abu-Ghannam) uses the percent value. . All in all, however, I suggest that we should remove the factor of 100, so the value in the config file is in percentages directly, as it was before. . Regards,; Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179
https://github.com/su2code/SU2/pull/1267#issuecomment-971682682:142,Testability,test,testcases,142,"Thank you for the careful scrutiny. The input in su2 is turbulence intensity, which is defined as u'/U. Instead of changing the 40 turbulence testcases that use turbulence intensity, I suggest we change the one testcase that uses the turbulence intensity percentage 100*u'/U (the T3A flat plate). For what it's worth: openfoam uses turbulence intensity u'/U and ANSYS Fluent uses 100*u'/U, so both notations are used.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971682682
https://github.com/su2code/SU2/pull/1267#issuecomment-971682682:211,Testability,test,testcase,211,"Thank you for the careful scrutiny. The input in su2 is turbulence intensity, which is defined as u'/U. Instead of changing the 40 turbulence testcases that use turbulence intensity, I suggest we change the one testcase that uses the turbulence intensity percentage 100*u'/U (the T3A flat plate). For what it's worth: openfoam uses turbulence intensity u'/U and ANSYS Fluent uses 100*u'/U, so both notations are used.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971682682
https://github.com/su2code/SU2/pull/1268#issuecomment-823643419:169,Testability,log,log,169,By the way please give the PR a more descriptive title that reflects the transition fix and the column names feature.; So that folks know what to expect from the change log.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268#issuecomment-823643419
https://github.com/su2code/SU2/pull/1271#issuecomment-827800839:58,Availability,failure,failure,58,"It looks likes my attempts to align the test cases were a failure...tabs :( . I can go through and update those to make it look nice, if everything else looks good.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271#issuecomment-827800839
https://github.com/su2code/SU2/pull/1271#issuecomment-827800839:99,Deployability,update,update,99,"It looks likes my attempts to align the test cases were a failure...tabs :( . I can go through and update those to make it look nice, if everything else looks good.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271#issuecomment-827800839
https://github.com/su2code/SU2/pull/1271#issuecomment-827800839:40,Testability,test,test,40,"It looks likes my attempts to align the test cases were a failure...tabs :( . I can go through and update those to make it look nice, if everything else looks good.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271#issuecomment-827800839
https://github.com/su2code/SU2/pull/1271#issuecomment-827821262:134,Testability,test,test,134,"Sounds good, if the cases are run using the regression I will keep as 7.1.1. I guess this begs the questions of should we be carrying test cases that dont run with the most recent version of the code?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271#issuecomment-827821262
https://github.com/su2code/SU2/issues/1273#issuecomment-832191063:37,Testability,test,test,37,Alright let's close this one. We can test it again when OpDiLib supports the Intel compiler.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273#issuecomment-832191063
https://github.com/su2code/SU2/pull/1277#issuecomment-830808518:32,Modifiability,config,config,32,"> Method described below.; > No config options needed.; > Takes about a minute to interpolate an 8M node mesh to a 70M mesh on 1000 cores.; > May or may not add OpenMP to this which would improve scalability.; > Restarts are read twice for RANS problems, which is not great for this type of feature... This is a great addition, I am now doing this outside of SU2 with some python code, but having this native in SU2 is really great! I haven't looked at the details yet, but I guess the assumption is that the geometry stay the same, we only have a finer mesh? Also, the 'restarts are read twice for RANS' is that a general issue when having additional solvers (like heat, scalar, nemo)?; Last thing (for now): Does it work when using an inlet.dat boundary file?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277#issuecomment-830808518
https://github.com/su2code/SU2/pull/1277#issuecomment-830808518:196,Performance,scalab,scalability,196,"> Method described below.; > No config options needed.; > Takes about a minute to interpolate an 8M node mesh to a 70M mesh on 1000 cores.; > May or may not add OpenMP to this which would improve scalability.; > Restarts are read twice for RANS problems, which is not great for this type of feature... This is a great addition, I am now doing this outside of SU2 with some python code, but having this native in SU2 is really great! I haven't looked at the details yet, but I guess the assumption is that the geometry stay the same, we only have a finer mesh? Also, the 'restarts are read twice for RANS' is that a general issue when having additional solvers (like heat, scalar, nemo)?; Last thing (for now): Does it work when using an inlet.dat boundary file?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277#issuecomment-830808518
https://github.com/su2code/SU2/pull/1277#issuecomment-830812815:392,Deployability,update,update,392,"There is no assumption, but if the geometry is very different you'll end up with free-stream values in the boundary layer and vice versa.; The restarts are read once per solver, so, if you have Incomp RANS, with weakly coupled heat, a scalar, and mesh deformation... 5 times :); I expect it to work with everything (to the extent that a matching restart does). Except maybe for problems that update the grid coordinates based on the contents of the restart.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277#issuecomment-830812815
https://github.com/su2code/SU2/pull/1277#issuecomment-831214603:319,Modifiability,variab,variables,319,"> The restarts are read once per solver, so, if you have Incomp RANS, with weakly coupled heat, a scalar, and mesh deformation... 5 times :); Well, it seems fast enough, so it does not pose an immediate problem. I guess the solution to this is to move the reading of the data 'higher up', first get all the solvers and variables, then read the file and populate the solver variables, something like that? ; Anyway, I think the way it is done now looks good.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277#issuecomment-831214603
https://github.com/su2code/SU2/pull/1277#issuecomment-831214603:373,Modifiability,variab,variables,373,"> The restarts are read once per solver, so, if you have Incomp RANS, with weakly coupled heat, a scalar, and mesh deformation... 5 times :); Well, it seems fast enough, so it does not pose an immediate problem. I guess the solution to this is to move the reading of the data 'higher up', first get all the solvers and variables, then read the file and populate the solver variables, something like that? ; Anyway, I think the way it is done now looks good.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277#issuecomment-831214603
https://github.com/su2code/SU2/issues/1278#issuecomment-831976182:292,Integrability,wrap,wrappers,292,"Contact the team that supports the cluster, they are usually much more knowledgeable about that type of problem.; 90% of the times I had similar problems was because I was not using the programming environment properly.; One common issue is that clusters that are properly setup use compiler wrappers, which you should use instead of trying to use gcc directly. We have absolutely no way no replicate this issue, hence I'm closing it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1278#issuecomment-831976182
https://github.com/su2code/SU2/issues/1279#issuecomment-833754354:173,Modifiability,variab,variables,173,"I am a little partial because I wrote it, but this https://github.com/su2code/FADO should do any kind of optimization you want.; Multiple operating points, manipulations of variables, running everything simultaneously... But I guess for something simple it is a little more work to setup.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-833754354
https://github.com/su2code/SU2/issues/1279#issuecomment-833754354:105,Performance,optimiz,optimization,105,"I am a little partial because I wrote it, but this https://github.com/su2code/FADO should do any kind of optimization you want.; Multiple operating points, manipulations of variables, running everything simultaneously... But I guess for something simple it is a little more work to setup.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-833754354
https://github.com/su2code/SU2/issues/1279#issuecomment-833754354:247,Usability,simpl,simple,247,"I am a little partial because I wrote it, but this https://github.com/su2code/FADO should do any kind of optimization you want.; Multiple operating points, manipulations of variables, running everything simultaneously... But I guess for something simple it is a little more work to setup.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-833754354
https://github.com/su2code/SU2/issues/1279#issuecomment-835825080:120,Performance,optimiz,optimization,120,"I thought about tackling this but I will most likely also switch to FADO for these kinds of things for multizone (shape optimization, finite differences). ; Afaik there is a `pull` array which keeps track of all files that need to be copied, it might also be enough to add that to the `state` in `shaep_optimization.py`. Not to discourage you but I doubt that it will work with just that addition tbh. But you are more then welcome to give it a shot and see how it goes :+1:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-835825080
https://github.com/su2code/SU2/issues/1279#issuecomment-835832913:68,Performance,optimiz,optimization,68,"Thanks for the replies and suggestions. I am trying to use built-in optimization abilities of SU2 for turbomachinery cases. So far the multi zone issue seems like one of the many problems. I realized this when using a single zone case while trying to avoid previous multi zone problem I encountered, when using v7.0.6, turbomachinery cases create a different kind of solution history file and it seems to interfere with the optimization process. Also, it seems like the optimization side of SU2 is created without considering turbomachinery simulations since the current objective functions are not really useful for turbomachinery optimization, and there are some objective functions that are in config_template.cfg but does not work such as SURFACE_MASSFLOW, SURFACE_TOTAL_PRESSURE and TORQUE. Therefore, it seems like the solution history and objective function problems need to be solved together in order to do optimization on turbomachinery cases with v7.0.6. Even though v7.0.6 turned out very satisfactory just for solving both single and multi zone turbomachinery cases I am trying to see if using an older version like v6.2.0 would change the situation on turbomachinery optimization. It may seem like I am avoiding going in and changing the code but I want to see first if a base version of SU2 can do the job.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-835832913
https://github.com/su2code/SU2/issues/1279#issuecomment-835832913:424,Performance,optimiz,optimization,424,"Thanks for the replies and suggestions. I am trying to use built-in optimization abilities of SU2 for turbomachinery cases. So far the multi zone issue seems like one of the many problems. I realized this when using a single zone case while trying to avoid previous multi zone problem I encountered, when using v7.0.6, turbomachinery cases create a different kind of solution history file and it seems to interfere with the optimization process. Also, it seems like the optimization side of SU2 is created without considering turbomachinery simulations since the current objective functions are not really useful for turbomachinery optimization, and there are some objective functions that are in config_template.cfg but does not work such as SURFACE_MASSFLOW, SURFACE_TOTAL_PRESSURE and TORQUE. Therefore, it seems like the solution history and objective function problems need to be solved together in order to do optimization on turbomachinery cases with v7.0.6. Even though v7.0.6 turned out very satisfactory just for solving both single and multi zone turbomachinery cases I am trying to see if using an older version like v6.2.0 would change the situation on turbomachinery optimization. It may seem like I am avoiding going in and changing the code but I want to see first if a base version of SU2 can do the job.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-835832913
https://github.com/su2code/SU2/issues/1279#issuecomment-835832913:470,Performance,optimiz,optimization,470,"Thanks for the replies and suggestions. I am trying to use built-in optimization abilities of SU2 for turbomachinery cases. So far the multi zone issue seems like one of the many problems. I realized this when using a single zone case while trying to avoid previous multi zone problem I encountered, when using v7.0.6, turbomachinery cases create a different kind of solution history file and it seems to interfere with the optimization process. Also, it seems like the optimization side of SU2 is created without considering turbomachinery simulations since the current objective functions are not really useful for turbomachinery optimization, and there are some objective functions that are in config_template.cfg but does not work such as SURFACE_MASSFLOW, SURFACE_TOTAL_PRESSURE and TORQUE. Therefore, it seems like the solution history and objective function problems need to be solved together in order to do optimization on turbomachinery cases with v7.0.6. Even though v7.0.6 turned out very satisfactory just for solving both single and multi zone turbomachinery cases I am trying to see if using an older version like v6.2.0 would change the situation on turbomachinery optimization. It may seem like I am avoiding going in and changing the code but I want to see first if a base version of SU2 can do the job.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-835832913
https://github.com/su2code/SU2/issues/1279#issuecomment-835832913:632,Performance,optimiz,optimization,632,"Thanks for the replies and suggestions. I am trying to use built-in optimization abilities of SU2 for turbomachinery cases. So far the multi zone issue seems like one of the many problems. I realized this when using a single zone case while trying to avoid previous multi zone problem I encountered, when using v7.0.6, turbomachinery cases create a different kind of solution history file and it seems to interfere with the optimization process. Also, it seems like the optimization side of SU2 is created without considering turbomachinery simulations since the current objective functions are not really useful for turbomachinery optimization, and there are some objective functions that are in config_template.cfg but does not work such as SURFACE_MASSFLOW, SURFACE_TOTAL_PRESSURE and TORQUE. Therefore, it seems like the solution history and objective function problems need to be solved together in order to do optimization on turbomachinery cases with v7.0.6. Even though v7.0.6 turned out very satisfactory just for solving both single and multi zone turbomachinery cases I am trying to see if using an older version like v6.2.0 would change the situation on turbomachinery optimization. It may seem like I am avoiding going in and changing the code but I want to see first if a base version of SU2 can do the job.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-835832913
https://github.com/su2code/SU2/issues/1279#issuecomment-835832913:916,Performance,optimiz,optimization,916,"Thanks for the replies and suggestions. I am trying to use built-in optimization abilities of SU2 for turbomachinery cases. So far the multi zone issue seems like one of the many problems. I realized this when using a single zone case while trying to avoid previous multi zone problem I encountered, when using v7.0.6, turbomachinery cases create a different kind of solution history file and it seems to interfere with the optimization process. Also, it seems like the optimization side of SU2 is created without considering turbomachinery simulations since the current objective functions are not really useful for turbomachinery optimization, and there are some objective functions that are in config_template.cfg but does not work such as SURFACE_MASSFLOW, SURFACE_TOTAL_PRESSURE and TORQUE. Therefore, it seems like the solution history and objective function problems need to be solved together in order to do optimization on turbomachinery cases with v7.0.6. Even though v7.0.6 turned out very satisfactory just for solving both single and multi zone turbomachinery cases I am trying to see if using an older version like v6.2.0 would change the situation on turbomachinery optimization. It may seem like I am avoiding going in and changing the code but I want to see first if a base version of SU2 can do the job.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-835832913
https://github.com/su2code/SU2/issues/1279#issuecomment-835832913:1181,Performance,optimiz,optimization,1181,"Thanks for the replies and suggestions. I am trying to use built-in optimization abilities of SU2 for turbomachinery cases. So far the multi zone issue seems like one of the many problems. I realized this when using a single zone case while trying to avoid previous multi zone problem I encountered, when using v7.0.6, turbomachinery cases create a different kind of solution history file and it seems to interfere with the optimization process. Also, it seems like the optimization side of SU2 is created without considering turbomachinery simulations since the current objective functions are not really useful for turbomachinery optimization, and there are some objective functions that are in config_template.cfg but does not work such as SURFACE_MASSFLOW, SURFACE_TOTAL_PRESSURE and TORQUE. Therefore, it seems like the solution history and objective function problems need to be solved together in order to do optimization on turbomachinery cases with v7.0.6. Even though v7.0.6 turned out very satisfactory just for solving both single and multi zone turbomachinery cases I am trying to see if using an older version like v6.2.0 would change the situation on turbomachinery optimization. It may seem like I am avoiding going in and changing the code but I want to see first if a base version of SU2 can do the job.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-835832913
https://github.com/su2code/SU2/issues/1279#issuecomment-835832913:251,Safety,avoid,avoid,251,"Thanks for the replies and suggestions. I am trying to use built-in optimization abilities of SU2 for turbomachinery cases. So far the multi zone issue seems like one of the many problems. I realized this when using a single zone case while trying to avoid previous multi zone problem I encountered, when using v7.0.6, turbomachinery cases create a different kind of solution history file and it seems to interfere with the optimization process. Also, it seems like the optimization side of SU2 is created without considering turbomachinery simulations since the current objective functions are not really useful for turbomachinery optimization, and there are some objective functions that are in config_template.cfg but does not work such as SURFACE_MASSFLOW, SURFACE_TOTAL_PRESSURE and TORQUE. Therefore, it seems like the solution history and objective function problems need to be solved together in order to do optimization on turbomachinery cases with v7.0.6. Even though v7.0.6 turned out very satisfactory just for solving both single and multi zone turbomachinery cases I am trying to see if using an older version like v6.2.0 would change the situation on turbomachinery optimization. It may seem like I am avoiding going in and changing the code but I want to see first if a base version of SU2 can do the job.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-835832913
https://github.com/su2code/SU2/issues/1279#issuecomment-835832913:1217,Safety,avoid,avoiding,1217,"Thanks for the replies and suggestions. I am trying to use built-in optimization abilities of SU2 for turbomachinery cases. So far the multi zone issue seems like one of the many problems. I realized this when using a single zone case while trying to avoid previous multi zone problem I encountered, when using v7.0.6, turbomachinery cases create a different kind of solution history file and it seems to interfere with the optimization process. Also, it seems like the optimization side of SU2 is created without considering turbomachinery simulations since the current objective functions are not really useful for turbomachinery optimization, and there are some objective functions that are in config_template.cfg but does not work such as SURFACE_MASSFLOW, SURFACE_TOTAL_PRESSURE and TORQUE. Therefore, it seems like the solution history and objective function problems need to be solved together in order to do optimization on turbomachinery cases with v7.0.6. Even though v7.0.6 turned out very satisfactory just for solving both single and multi zone turbomachinery cases I am trying to see if using an older version like v6.2.0 would change the situation on turbomachinery optimization. It may seem like I am avoiding going in and changing the code but I want to see first if a base version of SU2 can do the job.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-835832913
https://github.com/su2code/SU2/issues/1280#issuecomment-834411909:577,Energy Efficiency,sensor,sensors,577,"The symmetry implementation uses a numerics class to evaluate fluxes.; For upwind schemes this class is the same as the one used for internal points (but first order).; For central schemes this class is Roe, and so there is a mismatch, which maybe causes these issues.; Have you tried running the 3D slice with periodic conditions rather than symmetry?. IDK why JST was not used for boundaries, I do remember @economon mentioning it had been like that for a very long time.; Using JST for boundaries would require more than just replacing the class, because it requires terms (sensors and laplacians) that are not used by upwind schemes.; Recently there were also talks, between @TobiKattmann and @fmpmorgado of an implementation of symmetry that is independent of numerical schemes (in PR #1168).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-834411909
https://github.com/su2code/SU2/issues/1280#issuecomment-838761364:431,Deployability,configurat,configuration,431,"@pcarruscag thank you for your answer.; We have tried running the 3D case using periodic boundary conditions.; The results are here reported:. ![roe_jst_addenda](https://user-images.githubusercontent.com/53580993/117795264-4df49580-b24e-11eb-9aa0-d0f525bc9075.png). Using the ROE scheme there is no problem.; Using the JST scheme the result is better now, but there is still a difference of ~2 counts for the drag coefficient. The configuration files and the grids are attached here:; [Addenda_ROEvsJST.zip](https://github.com/su2code/SU2/files/6458287/Addenda_ROEvsJST.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-838761364
https://github.com/su2code/SU2/issues/1280#issuecomment-838761364:431,Modifiability,config,configuration,431,"@pcarruscag thank you for your answer.; We have tried running the 3D case using periodic boundary conditions.; The results are here reported:. ![roe_jst_addenda](https://user-images.githubusercontent.com/53580993/117795264-4df49580-b24e-11eb-9aa0-d0f525bc9075.png). Using the ROE scheme there is no problem.; Using the JST scheme the result is better now, but there is still a difference of ~2 counts for the drag coefficient. The configuration files and the grids are attached here:; [Addenda_ROEvsJST.zip](https://github.com/su2code/SU2/files/6458287/Addenda_ROEvsJST.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-838761364
https://github.com/su2code/SU2/issues/1280#issuecomment-862086207:102,Integrability,depend,depend,102,"Hi @EttoreSaetta sorry for the late reply. There are some scaling terms in the JST scheme in SU2 that depend on the number of neighbors of each point (which will be different for 2-D and 3-D).; However, they don't explain the complete difference, I tried making them constant but 2-D and 3-D still gave different results, in fact the difference was much larger than in your problem.; I looked in the usual references but could not find an explanation for those terms, but in any case it seems that the main problem is the symmetry boundary condition.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-862086207
https://github.com/su2code/SU2/issues/1280#issuecomment-922902668:52,Energy Efficiency,sensor,sensor,52,"Just a comment here, that may or may not help:. The sensor in SU2 is based on an unstructured, 3D generalization of Jameson, Schmidt, and Turkel's original sensor. If _s_ is the sensor and _p_ is the pressure at some cell _i_, then the sensor is calculated as. ![latex_sensor](https://user-images.githubusercontent.com/13340225/134005407-e3cfec18-9bc1-45d6-89e8-7d58d72753dd.png). If you imagine a problem with constant spanwise properties, you can ask the question, will 2D and 3D simulations give the same value for the shock sensor? The answer is no. The numerator of the sensor will not change, since the pressure is constant across the spanwise direction. But the denominator will change. As you add more neighbors, the value of the denominator will increase, the value of the sensor will decrease, and the dissipation will decrease. As @pcarruscag mentioned, the stretching terms also have different values in 2D and 3D problems, so that further muddies the waters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-922902668
https://github.com/su2code/SU2/issues/1280#issuecomment-922902668:156,Energy Efficiency,sensor,sensor,156,"Just a comment here, that may or may not help:. The sensor in SU2 is based on an unstructured, 3D generalization of Jameson, Schmidt, and Turkel's original sensor. If _s_ is the sensor and _p_ is the pressure at some cell _i_, then the sensor is calculated as. ![latex_sensor](https://user-images.githubusercontent.com/13340225/134005407-e3cfec18-9bc1-45d6-89e8-7d58d72753dd.png). If you imagine a problem with constant spanwise properties, you can ask the question, will 2D and 3D simulations give the same value for the shock sensor? The answer is no. The numerator of the sensor will not change, since the pressure is constant across the spanwise direction. But the denominator will change. As you add more neighbors, the value of the denominator will increase, the value of the sensor will decrease, and the dissipation will decrease. As @pcarruscag mentioned, the stretching terms also have different values in 2D and 3D problems, so that further muddies the waters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-922902668
https://github.com/su2code/SU2/issues/1280#issuecomment-922902668:178,Energy Efficiency,sensor,sensor,178,"Just a comment here, that may or may not help:. The sensor in SU2 is based on an unstructured, 3D generalization of Jameson, Schmidt, and Turkel's original sensor. If _s_ is the sensor and _p_ is the pressure at some cell _i_, then the sensor is calculated as. ![latex_sensor](https://user-images.githubusercontent.com/13340225/134005407-e3cfec18-9bc1-45d6-89e8-7d58d72753dd.png). If you imagine a problem with constant spanwise properties, you can ask the question, will 2D and 3D simulations give the same value for the shock sensor? The answer is no. The numerator of the sensor will not change, since the pressure is constant across the spanwise direction. But the denominator will change. As you add more neighbors, the value of the denominator will increase, the value of the sensor will decrease, and the dissipation will decrease. As @pcarruscag mentioned, the stretching terms also have different values in 2D and 3D problems, so that further muddies the waters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-922902668
https://github.com/su2code/SU2/issues/1280#issuecomment-922902668:236,Energy Efficiency,sensor,sensor,236,"Just a comment here, that may or may not help:. The sensor in SU2 is based on an unstructured, 3D generalization of Jameson, Schmidt, and Turkel's original sensor. If _s_ is the sensor and _p_ is the pressure at some cell _i_, then the sensor is calculated as. ![latex_sensor](https://user-images.githubusercontent.com/13340225/134005407-e3cfec18-9bc1-45d6-89e8-7d58d72753dd.png). If you imagine a problem with constant spanwise properties, you can ask the question, will 2D and 3D simulations give the same value for the shock sensor? The answer is no. The numerator of the sensor will not change, since the pressure is constant across the spanwise direction. But the denominator will change. As you add more neighbors, the value of the denominator will increase, the value of the sensor will decrease, and the dissipation will decrease. As @pcarruscag mentioned, the stretching terms also have different values in 2D and 3D problems, so that further muddies the waters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-922902668
https://github.com/su2code/SU2/issues/1280#issuecomment-922902668:528,Energy Efficiency,sensor,sensor,528,"Just a comment here, that may or may not help:. The sensor in SU2 is based on an unstructured, 3D generalization of Jameson, Schmidt, and Turkel's original sensor. If _s_ is the sensor and _p_ is the pressure at some cell _i_, then the sensor is calculated as. ![latex_sensor](https://user-images.githubusercontent.com/13340225/134005407-e3cfec18-9bc1-45d6-89e8-7d58d72753dd.png). If you imagine a problem with constant spanwise properties, you can ask the question, will 2D and 3D simulations give the same value for the shock sensor? The answer is no. The numerator of the sensor will not change, since the pressure is constant across the spanwise direction. But the denominator will change. As you add more neighbors, the value of the denominator will increase, the value of the sensor will decrease, and the dissipation will decrease. As @pcarruscag mentioned, the stretching terms also have different values in 2D and 3D problems, so that further muddies the waters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-922902668
https://github.com/su2code/SU2/issues/1280#issuecomment-922902668:575,Energy Efficiency,sensor,sensor,575,"Just a comment here, that may or may not help:. The sensor in SU2 is based on an unstructured, 3D generalization of Jameson, Schmidt, and Turkel's original sensor. If _s_ is the sensor and _p_ is the pressure at some cell _i_, then the sensor is calculated as. ![latex_sensor](https://user-images.githubusercontent.com/13340225/134005407-e3cfec18-9bc1-45d6-89e8-7d58d72753dd.png). If you imagine a problem with constant spanwise properties, you can ask the question, will 2D and 3D simulations give the same value for the shock sensor? The answer is no. The numerator of the sensor will not change, since the pressure is constant across the spanwise direction. But the denominator will change. As you add more neighbors, the value of the denominator will increase, the value of the sensor will decrease, and the dissipation will decrease. As @pcarruscag mentioned, the stretching terms also have different values in 2D and 3D problems, so that further muddies the waters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-922902668
https://github.com/su2code/SU2/issues/1280#issuecomment-922902668:782,Energy Efficiency,sensor,sensor,782,"Just a comment here, that may or may not help:. The sensor in SU2 is based on an unstructured, 3D generalization of Jameson, Schmidt, and Turkel's original sensor. If _s_ is the sensor and _p_ is the pressure at some cell _i_, then the sensor is calculated as. ![latex_sensor](https://user-images.githubusercontent.com/13340225/134005407-e3cfec18-9bc1-45d6-89e8-7d58d72753dd.png). If you imagine a problem with constant spanwise properties, you can ask the question, will 2D and 3D simulations give the same value for the shock sensor? The answer is no. The numerator of the sensor will not change, since the pressure is constant across the spanwise direction. But the denominator will change. As you add more neighbors, the value of the denominator will increase, the value of the sensor will decrease, and the dissipation will decrease. As @pcarruscag mentioned, the stretching terms also have different values in 2D and 3D problems, so that further muddies the waters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-922902668
https://github.com/su2code/SU2/pull/1284#issuecomment-839792797:260,Testability,test,test,260,"To some extent this is a fix for hybrid parallel AD, because the single zone driver used the version of RegisterInput that pushed indices into that global ""inputValues"" vector, and that would not work with OpenMP.; This PR will not be very big anyway. You can test your testcase here, or in #1260, or in a different PR, and then we test the cross term thing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284#issuecomment-839792797
https://github.com/su2code/SU2/pull/1284#issuecomment-839792797:270,Testability,test,testcase,270,"To some extent this is a fix for hybrid parallel AD, because the single zone driver used the version of RegisterInput that pushed indices into that global ""inputValues"" vector, and that would not work with OpenMP.; This PR will not be very big anyway. You can test your testcase here, or in #1260, or in a different PR, and then we test the cross term thing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284#issuecomment-839792797
https://github.com/su2code/SU2/pull/1284#issuecomment-839792797:332,Testability,test,test,332,"To some extent this is a fix for hybrid parallel AD, because the single zone driver used the version of RegisterInput that pushed indices into that global ""inputValues"" vector, and that would not work with OpenMP.; This PR will not be very big anyway. You can test your testcase here, or in #1260, or in a different PR, and then we test the cross term thing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284#issuecomment-839792797
https://github.com/su2code/SU2/pull/1284#issuecomment-845188906:64,Testability,test,test,64,"Did you expect that your introduced changes fail the regression test for fsi related cases? If so, could you point out what bits are responsible; Edit: ; Well so one part is d949cbe i.e. relaxation applied to velocities as well. but that did not change the dyn fsi adjoint case. That prob are the changes from b7f5b05 in CMeshSolver where LinSysSol is not set to zero anymore (WIthout knowing more of that solver: was that a bug before?)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284#issuecomment-845188906
https://github.com/su2code/SU2/pull/1284#issuecomment-850848108:88,Deployability,update,update,88,Well thanks for reverting the latest two commits with RealReverseIndex and the CoDiPack update and merging this. I guess that work will go on in another PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284#issuecomment-850848108
https://github.com/su2code/SU2/pull/1286#issuecomment-841123844:475,Integrability,interface,interface,475,"Ok, now `CPoint` stores information on the closest wall element location in vectors `ClosestWall_{Rank,Zone,Marker,Elem}`. `CPoint::SetWallRoughness` performs the lookup, inserting the location into the map (rank,zone,marker)->(roughness) that is provided to `CPoint::SetWallRoughness` as an argument of a new templated type `NdFlattener`. I wrote the new file `Common/include/ndflattener.hpp` some time ago and I think it is a nice generalization of the. > custom type with interface (rank, [zone,] marker). you're referring to. In short, it allows to. - serialize pointer-to-pointer-to... arrays into 1D arrays, as many as there are indices. The array corresponding to the last index stores the data and the others store indices.; - And to `MPI_Allgatherv` them, adding a new index for the rank. Using it detaches a bit from the original goal of this PR (which was to fix some illegal reads reported by valgrind, because the wrong array of roughnesses was accessed) but I think it's a useful structure. Probably I should also add some tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844
https://github.com/su2code/SU2/pull/1286#issuecomment-841123844:150,Performance,perform,performs,150,"Ok, now `CPoint` stores information on the closest wall element location in vectors `ClosestWall_{Rank,Zone,Marker,Elem}`. `CPoint::SetWallRoughness` performs the lookup, inserting the location into the map (rank,zone,marker)->(roughness) that is provided to `CPoint::SetWallRoughness` as an argument of a new templated type `NdFlattener`. I wrote the new file `Common/include/ndflattener.hpp` some time ago and I think it is a nice generalization of the. > custom type with interface (rank, [zone,] marker). you're referring to. In short, it allows to. - serialize pointer-to-pointer-to... arrays into 1D arrays, as many as there are indices. The array corresponding to the last index stores the data and the others store indices.; - And to `MPI_Allgatherv` them, adding a new index for the rank. Using it detaches a bit from the original goal of this PR (which was to fix some illegal reads reported by valgrind, because the wrong array of roughnesses was accessed) but I think it's a useful structure. Probably I should also add some tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844
https://github.com/su2code/SU2/pull/1286#issuecomment-841123844:958,Security,access,accessed,958,"Ok, now `CPoint` stores information on the closest wall element location in vectors `ClosestWall_{Rank,Zone,Marker,Elem}`. `CPoint::SetWallRoughness` performs the lookup, inserting the location into the map (rank,zone,marker)->(roughness) that is provided to `CPoint::SetWallRoughness` as an argument of a new templated type `NdFlattener`. I wrote the new file `Common/include/ndflattener.hpp` some time ago and I think it is a nice generalization of the. > custom type with interface (rank, [zone,] marker). you're referring to. In short, it allows to. - serialize pointer-to-pointer-to... arrays into 1D arrays, as many as there are indices. The array corresponding to the last index stores the data and the others store indices.; - And to `MPI_Allgatherv` them, adding a new index for the rank. Using it detaches a bit from the original goal of this PR (which was to fix some illegal reads reported by valgrind, because the wrong array of roughnesses was accessed) but I think it's a useful structure. Probably I should also add some tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844
https://github.com/su2code/SU2/pull/1286#issuecomment-841123844:1037,Testability,test,tests,1037,"Ok, now `CPoint` stores information on the closest wall element location in vectors `ClosestWall_{Rank,Zone,Marker,Elem}`. `CPoint::SetWallRoughness` performs the lookup, inserting the location into the map (rank,zone,marker)->(roughness) that is provided to `CPoint::SetWallRoughness` as an argument of a new templated type `NdFlattener`. I wrote the new file `Common/include/ndflattener.hpp` some time ago and I think it is a nice generalization of the. > custom type with interface (rank, [zone,] marker). you're referring to. In short, it allows to. - serialize pointer-to-pointer-to... arrays into 1D arrays, as many as there are indices. The array corresponding to the last index stores the data and the others store indices.; - And to `MPI_Allgatherv` them, adding a new index for the rank. Using it detaches a bit from the original goal of this PR (which was to fix some illegal reads reported by valgrind, because the wrong array of roughnesses was accessed) but I think it's a useful structure. Probably I should also add some tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844
https://github.com/su2code/SU2/pull/1286#issuecomment-841130361:17,Testability,test,testcase,17,"I found only one testcase for rough walls, in `TestCases/incomp_rans/rough_flatplate/rough_flatplate_incomp.cfg`. It's not contained in the regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841130361
https://github.com/su2code/SU2/pull/1286#issuecomment-841130361:47,Testability,Test,TestCases,47,"I found only one testcase for rough walls, in `TestCases/incomp_rans/rough_flatplate/rough_flatplate_incomp.cfg`. It's not contained in the regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841130361
https://github.com/su2code/SU2/pull/1286#issuecomment-841130361:151,Testability,test,tests,151,"I found only one testcase for rough walls, in `TestCases/incomp_rans/rough_flatplate/rough_flatplate_incomp.cfg`. It's not contained in the regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841130361
https://github.com/su2code/SU2/pull/1286#issuecomment-847253075:271,Integrability,interface,interface,271,"Thanks @pcarruscag for your comments! I have now incorporated most of them. What is missing from the first batch is a good way of initialization instead of the recursive lambda expressions, because I'm lacking completely convincing ideas for this. . The most comfortable interface I can think of is a function; - whose parameters are all indices at once, and; - which returns a pair/structure of one `size_t` and one `Data_t`.; - If the index tuple is valid (in range), the `size_t` component is arbitrary and the `Data_t` component is the data element.; - If the index tuple is invalid, the `size_t` component specifies the first out-of-range index and the `Data_t` component is arbitrary. So the lambda expression would look like this:. [captures](unsigned long i1, ..., unsigned long iK){; if( i1 >= ... ) return Nd_Range(1);; if( i2 >= ... ) return Nd_Range(2);; ...; return Nd_Value( ... );; }. Do you consider this interface sufficiently comfortable? Anyway I'll have to think about how to implement this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847253075
https://github.com/su2code/SU2/pull/1286#issuecomment-847253075:921,Integrability,interface,interface,921,"Thanks @pcarruscag for your comments! I have now incorporated most of them. What is missing from the first batch is a good way of initialization instead of the recursive lambda expressions, because I'm lacking completely convincing ideas for this. . The most comfortable interface I can think of is a function; - whose parameters are all indices at once, and; - which returns a pair/structure of one `size_t` and one `Data_t`.; - If the index tuple is valid (in range), the `size_t` component is arbitrary and the `Data_t` component is the data element.; - If the index tuple is invalid, the `size_t` component specifies the first out-of-range index and the `Data_t` component is arbitrary. So the lambda expression would look like this:. [captures](unsigned long i1, ..., unsigned long iK){; if( i1 >= ... ) return Nd_Range(1);; if( i2 >= ... ) return Nd_Range(2);; ...; return Nd_Value( ... );; }. Do you consider this interface sufficiently comfortable? Anyway I'll have to think about how to implement this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847253075
https://github.com/su2code/SU2/pull/1286#issuecomment-847257884:40,Availability,fault,fault,40,I'm happy that the strange segmentation fault in the discadj_heat testcase in `serial_regression_AD.py` seems to be gone ;),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847257884
https://github.com/su2code/SU2/pull/1286#issuecomment-847257884:66,Testability,test,testcase,66,I'm happy that the strange segmentation fault in the discadj_heat testcase in `serial_regression_AD.py` seems to be gone ;),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847257884
https://github.com/su2code/SU2/pull/1286#issuecomment-847329246:134,Availability,down,down,134,"I don't mind the ""pairs"" by themselves, it fits nicely with how the NdFlattener works, i.e. its efficient to split them and pass them down to lower layers.; The only slight problem is that ""first"" and ""second"" are not a super expressive interface, but I think that is ok for now.; If it ever becomes needed you can create some adapter to convert something with operator (i,j,....) into pairs of pairs behind the scenes, but for the current use that would not be an option anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246
https://github.com/su2code/SU2/pull/1286#issuecomment-847329246:96,Energy Efficiency,efficient,efficient,96,"I don't mind the ""pairs"" by themselves, it fits nicely with how the NdFlattener works, i.e. its efficient to split them and pass them down to lower layers.; The only slight problem is that ""first"" and ""second"" are not a super expressive interface, but I think that is ok for now.; If it ever becomes needed you can create some adapter to convert something with operator (i,j,....) into pairs of pairs behind the scenes, but for the current use that would not be an option anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246
https://github.com/su2code/SU2/pull/1286#issuecomment-847329246:327,Energy Efficiency,adapt,adapter,327,"I don't mind the ""pairs"" by themselves, it fits nicely with how the NdFlattener works, i.e. its efficient to split them and pass them down to lower layers.; The only slight problem is that ""first"" and ""second"" are not a super expressive interface, but I think that is ok for now.; If it ever becomes needed you can create some adapter to convert something with operator (i,j,....) into pairs of pairs behind the scenes, but for the current use that would not be an option anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246
https://github.com/su2code/SU2/pull/1286#issuecomment-847329246:237,Integrability,interface,interface,237,"I don't mind the ""pairs"" by themselves, it fits nicely with how the NdFlattener works, i.e. its efficient to split them and pass them down to lower layers.; The only slight problem is that ""first"" and ""second"" are not a super expressive interface, but I think that is ok for now.; If it ever becomes needed you can create some adapter to convert something with operator (i,j,....) into pairs of pairs behind the scenes, but for the current use that would not be an option anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246
https://github.com/su2code/SU2/pull/1286#issuecomment-847329246:327,Integrability,adapter,adapter,327,"I don't mind the ""pairs"" by themselves, it fits nicely with how the NdFlattener works, i.e. its efficient to split them and pass them down to lower layers.; The only slight problem is that ""first"" and ""second"" are not a super expressive interface, but I think that is ok for now.; If it ever becomes needed you can create some adapter to convert something with operator (i,j,....) into pairs of pairs behind the scenes, but for the current use that would not be an option anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246
https://github.com/su2code/SU2/pull/1286#issuecomment-847329246:148,Modifiability,layers,layers,148,"I don't mind the ""pairs"" by themselves, it fits nicely with how the NdFlattener works, i.e. its efficient to split them and pass them down to lower layers.; The only slight problem is that ""first"" and ""second"" are not a super expressive interface, but I think that is ok for now.; If it ever becomes needed you can create some adapter to convert something with operator (i,j,....) into pairs of pairs behind the scenes, but for the current use that would not be an option anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246
https://github.com/su2code/SU2/pull/1286#issuecomment-847329246:327,Modifiability,adapt,adapter,327,"I don't mind the ""pairs"" by themselves, it fits nicely with how the NdFlattener works, i.e. its efficient to split them and pass them down to lower layers.; The only slight problem is that ""first"" and ""second"" are not a super expressive interface, but I think that is ok for now.; If it ever becomes needed you can create some adapter to convert something with operator (i,j,....) into pairs of pairs behind the scenes, but for the current use that would not be an option anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246
https://github.com/su2code/SU2/pull/1286#issuecomment-850382531:185,Deployability,pipeline,pipeline,185,"8372309 fixed the `MPI_Allgatherv` function used in a non-MPI build. Before, it ignored the displacement (which is 1 for the index arrays). This was revealed by experiments with the CI pipeline in #1292. Now the tests succeed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-850382531
https://github.com/su2code/SU2/pull/1286#issuecomment-850382531:212,Testability,test,tests,212,"8372309 fixed the `MPI_Allgatherv` function used in a non-MPI build. Before, it ignored the displacement (which is 1 for the index arrays). This was revealed by experiments with the CI pipeline in #1292. Now the tests succeed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-850382531
https://github.com/su2code/SU2/issues/1287#issuecomment-840632215:546,Energy Efficiency,monitor,monitored,546,"As I mentioned in my initial post, first-order works fine while restarting from the steady flow solution but when I want to restart FSI from a later time iteration, SU2 diverges. By subcycling, I meant that I would like to use different time step sizes for structure and fluid. For example, if I specify an FSI timestep of 1e-02s then I would like to use smaller timesteps on the fluid side (like 1e-05s) and maybe keep the structure time step to 1e-03s, and when both fluid and solid reach the same time, the deformation and load convergence be monitored and if they have not converged then another outer iteration would begin. Does that make sense?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-840632215
https://github.com/su2code/SU2/issues/1287#issuecomment-840632215:526,Performance,load,load,526,"As I mentioned in my initial post, first-order works fine while restarting from the steady flow solution but when I want to restart FSI from a later time iteration, SU2 diverges. By subcycling, I meant that I would like to use different time step sizes for structure and fluid. For example, if I specify an FSI timestep of 1e-02s then I would like to use smaller timesteps on the fluid side (like 1e-05s) and maybe keep the structure time step to 1e-03s, and when both fluid and solid reach the same time, the deformation and load convergence be monitored and if they have not converged then another outer iteration would begin. Does that make sense?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-840632215
https://github.com/su2code/SU2/issues/1287#issuecomment-840652006:332,Testability,Test,TestCases,332,"Ah got it, I have no explanation for that. But the fact that you need CFL of 1 for the fluid tells me the flow conditions are challenging.; Also Poisson ratio of 0.37 on the structural side makes it harder to converge, you can try compiling SU2 with PaStiX which guarantees you can solve the structural problem (instructions are in TestCases/pastix_support/). It is not possible to do that in SU2, however, to some extent, dual-time methods are already a form of subcycling, in each inner iteration you are advancing in pseudo-time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-840652006
https://github.com/su2code/SU2/issues/1287#issuecomment-843195621:169,Availability,recover,recover,169,"If you add GRID_VELOCITY to VOLUME_OUTPUT the 2nd order restart will work properly in 7.1.1, this will not be needed in future versions.; Restarting the solver does not recover precisely the same values as letting it continue the simulation, I do not have an explanation for this (or time to look for it unfortunately) but it may be why you have crashes with some iterations but not others (combined with the case being sensitive).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-843195621
https://github.com/su2code/SU2/issues/1287#issuecomment-843195621:169,Safety,recover,recover,169,"If you add GRID_VELOCITY to VOLUME_OUTPUT the 2nd order restart will work properly in 7.1.1, this will not be needed in future versions.; Restarting the solver does not recover precisely the same values as letting it continue the simulation, I do not have an explanation for this (or time to look for it unfortunately) but it may be why you have crashes with some iterations but not others (combined with the case being sensitive).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-843195621
https://github.com/su2code/SU2/issues/1287#issuecomment-843267186:43,Modifiability,config,config,43,"Do you mean I need to add this in the flow config file? I tried that, it didn't work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-843267186
https://github.com/su2code/SU2/issues/1287#issuecomment-843271165:37,Modifiability,config,config,37,Yes you need to have it in the fluid config file that produces the files you will use to restart. The files you have without grid velocities will not work... but the new ones will.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-843271165
https://github.com/su2code/SU2/issues/1287#issuecomment-843276449:41,Modifiability,config,config,41,"I added it to the steady rigid case flow config file by; ```; VOLUME_OUTPUT= (GRID_VELOCITY, COORDINATES, SOLUTION, PRIMITIVE,VORTEX_IDENTIFICATION); ```; I get the following output; ```; Info: Ignoring the following volume output fields/groups:; GRID_VELOCITY; Volume output fields: COORDINATES, SOLUTION, PRIMITIVE, VORTEX_IDENTIFICATION; ```; I ignored this and copied the restart files to my FSI case and the case still diverged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-843276449
https://github.com/su2code/SU2/issues/1287#issuecomment-843801037:204,Modifiability,config,config,204,"I tried your suggestion. I ran the FSI case in 1st order for one time-step and then made two copies of the restart file. I then tried 2nd order restart from this and the case still diverged. The FSI flow config file had the following VOLUME_OUTPUT; ```; VOLUME_OUTPUT= (GRID_VELOCITY, COORDINATES, SOLUTION, PRIMITIVE,VORTEX_IDENTIFICATION); ```; I also tried to manually add columns ""Grid_Velocity_x"" and ""Grid_Velocity_y"" to the ASCII restart file of the rigid case. The case still diverged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-843801037
https://github.com/su2code/SU2/issues/1287#issuecomment-847398500:513,Availability,robust,robust,513,"You can try this branch ""hybrid_parallel_ad3""; It should start from steady state without extra steps, I also got the restart to be smoother, i.e. the first restarted iteration converges to pretty much the same values that would be obtained by not stopping the simulation (even with large displacements).; However it is still not perfect, during the first outer iteration the residuals go up a bit, which at Mach 3 may cause issues... I don't think I can get it better though, so try to setup the case in the most robust way possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-847398500
https://github.com/su2code/SU2/issues/1287#issuecomment-848037127:2,Testability,test,tested,2,I tested the branch and second-order dual time stepping restart works without any problems. I will post if the restarts after a few thousand time steps also work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-848037127
https://github.com/su2code/SU2/issues/1287#issuecomment-849763505:28,Testability,test,testing,28,"Good to know, thank you for testing it.; I'll close this issue once the PR is merged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-849763505
https://github.com/su2code/SU2/issues/1289#issuecomment-841797597:93,Modifiability,config,configs,93,"Just to save others the trouble, the python scripts work by automatically creating temporary configs for the different steps, e.g. running SU2_CFD, SU2_CFD_AD, etc. It seems that if there are multiple control points (DV_PARAM) in the user config, the scripts break because they only write one DV_VALUE (and DV_KIND I think).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289#issuecomment-841797597
https://github.com/su2code/SU2/issues/1289#issuecomment-841797597:239,Modifiability,config,config,239,"Just to save others the trouble, the python scripts work by automatically creating temporary configs for the different steps, e.g. running SU2_CFD, SU2_CFD_AD, etc. It seems that if there are multiple control points (DV_PARAM) in the user config, the scripts break because they only write one DV_VALUE (and DV_KIND I think).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289#issuecomment-841797597
https://github.com/su2code/SU2/pull/1292#issuecomment-850379675:39,Testability,test,tests,39,"Yes, after this kind of correction the tests succeed, here and in #1286! (Shifts are handed to `CopyData` and added there, because `recvbuf` is a void pointer). Closing this PR now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292#issuecomment-850379675
https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:445,Availability,fault,fault,445,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733
https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:609,Availability,avail,available,609,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733
https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:479,Integrability,DEPEND,DEPENDENCIES,479,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733
https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:1067,Integrability,DEPEND,DEPENDENCIES,1067,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733
https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:1280,Integrability,depend,dependencies,1280,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733
https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:1212,Modifiability,variab,variable,1212,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733
https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:990,Performance,perform,performed,990,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733
https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:115,Testability,test,tests,115,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733
https://github.com/su2code/SU2/pull/1294#issuecomment-871002042:471,Integrability,depend,depends,471,"Parallel preaccumulations must not share any variables. In particular, they must not have any common inputs and outputs. I suspect (judging from the code) that the preaccumulations treated in 781092a3533caf36589426e99293c2b20d332726 violate this pattern, and that this is the reason why excluding them makes several hybrid parallel AD tests pass. Other preaccumulations might be affected as well. The correctness of preaccumulations inside numerics objects, for example, depends on the values of pointers like `V_i`, `V_j`. Other preaccumulations might look wrong but are ok because common variables are prevented by color loops.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042
https://github.com/su2code/SU2/pull/1294#issuecomment-871002042:45,Modifiability,variab,variables,45,"Parallel preaccumulations must not share any variables. In particular, they must not have any common inputs and outputs. I suspect (judging from the code) that the preaccumulations treated in 781092a3533caf36589426e99293c2b20d332726 violate this pattern, and that this is the reason why excluding them makes several hybrid parallel AD tests pass. Other preaccumulations might be affected as well. The correctness of preaccumulations inside numerics objects, for example, depends on the values of pointers like `V_i`, `V_j`. Other preaccumulations might look wrong but are ok because common variables are prevented by color loops.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042
https://github.com/su2code/SU2/pull/1294#issuecomment-871002042:590,Modifiability,variab,variables,590,"Parallel preaccumulations must not share any variables. In particular, they must not have any common inputs and outputs. I suspect (judging from the code) that the preaccumulations treated in 781092a3533caf36589426e99293c2b20d332726 violate this pattern, and that this is the reason why excluding them makes several hybrid parallel AD tests pass. Other preaccumulations might be affected as well. The correctness of preaccumulations inside numerics objects, for example, depends on the values of pointers like `V_i`, `V_j`. Other preaccumulations might look wrong but are ok because common variables are prevented by color loops.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042
https://github.com/su2code/SU2/pull/1294#issuecomment-871002042:335,Testability,test,tests,335,"Parallel preaccumulations must not share any variables. In particular, they must not have any common inputs and outputs. I suspect (judging from the code) that the preaccumulations treated in 781092a3533caf36589426e99293c2b20d332726 violate this pattern, and that this is the reason why excluding them makes several hybrid parallel AD tests pass. Other preaccumulations might be affected as well. The correctness of preaccumulations inside numerics objects, for example, depends on the values of pointers like `V_i`, `V_j`. Other preaccumulations might look wrong but are ok because common variables are prevented by color loops.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042
https://github.com/su2code/SU2/pull/1294#issuecomment-874400653:184,Testability,test,test,184,"The computed values of `discadj_arina2k` in `hybrid_regression_AD` are suspiciously close to the expected values in `parallel_regression_AD`. Could the reference values be wrong? If I test with `-Denable-mixedprec=false` locally, the same holds true for `discadj_fea`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-874400653
https://github.com/su2code/SU2/pull/1294#issuecomment-874694144:186,Testability,test,test,186,"> The computed values of `discadj_arina2k` in `hybrid_regression_AD` are suspiciously close to the expected values in `parallel_regression_AD`. Could the reference values be wrong? If I test with `-Denable-mixedprec=false` locally, the same holds true for `discadj_fea`. I just saw that `discadj_arina2k` was addressed in #1311, so I suppose that its reference values are indeed outdated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-874694144
https://github.com/su2code/SU2/pull/1294#issuecomment-891257890:722,Availability,error,error,722,"Have a look at a9466bb158ca8675352bf3b4b887cbf82b7f28ff for a suggestion on how to disable OpDiLib within the scope of the existing build options (casually tested). To clarify the AD implications: If you use OpDiLib, you will have atomic adjoints where no shared reading optimizations are applied, even with `-t 1`. Disabling OpDiLib - if we add that option - will amend this. The presence of `_OPENMP`, however, makes SU2 use the thread-safe CoDiPack type and enables thread-safety augmentations in CoDiPack. Therefore, a reverse AD + OpenMP - OpDiLib build is not the same as a classical serial reverse AD build that is vectorized one way or the other. If we add this, reverse AD + OpenMP - OpDiLib should also print an error for `-t 2` or higher. Since I am not 100% sure about it yet, could you clarify again what it is that you want to achieve in the end, and why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-891257890
https://github.com/su2code/SU2/pull/1294#issuecomment-891257890:271,Performance,optimiz,optimizations,271,"Have a look at a9466bb158ca8675352bf3b4b887cbf82b7f28ff for a suggestion on how to disable OpDiLib within the scope of the existing build options (casually tested). To clarify the AD implications: If you use OpDiLib, you will have atomic adjoints where no shared reading optimizations are applied, even with `-t 1`. Disabling OpDiLib - if we add that option - will amend this. The presence of `_OPENMP`, however, makes SU2 use the thread-safe CoDiPack type and enables thread-safety augmentations in CoDiPack. Therefore, a reverse AD + OpenMP - OpDiLib build is not the same as a classical serial reverse AD build that is vectorized one way or the other. If we add this, reverse AD + OpenMP - OpDiLib should also print an error for `-t 2` or higher. Since I am not 100% sure about it yet, could you clarify again what it is that you want to achieve in the end, and why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-891257890
https://github.com/su2code/SU2/pull/1294#issuecomment-891257890:438,Safety,safe,safe,438,"Have a look at a9466bb158ca8675352bf3b4b887cbf82b7f28ff for a suggestion on how to disable OpDiLib within the scope of the existing build options (casually tested). To clarify the AD implications: If you use OpDiLib, you will have atomic adjoints where no shared reading optimizations are applied, even with `-t 1`. Disabling OpDiLib - if we add that option - will amend this. The presence of `_OPENMP`, however, makes SU2 use the thread-safe CoDiPack type and enables thread-safety augmentations in CoDiPack. Therefore, a reverse AD + OpenMP - OpDiLib build is not the same as a classical serial reverse AD build that is vectorized one way or the other. If we add this, reverse AD + OpenMP - OpDiLib should also print an error for `-t 2` or higher. Since I am not 100% sure about it yet, could you clarify again what it is that you want to achieve in the end, and why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-891257890
https://github.com/su2code/SU2/pull/1294#issuecomment-891257890:476,Safety,safe,safety,476,"Have a look at a9466bb158ca8675352bf3b4b887cbf82b7f28ff for a suggestion on how to disable OpDiLib within the scope of the existing build options (casually tested). To clarify the AD implications: If you use OpDiLib, you will have atomic adjoints where no shared reading optimizations are applied, even with `-t 1`. Disabling OpDiLib - if we add that option - will amend this. The presence of `_OPENMP`, however, makes SU2 use the thread-safe CoDiPack type and enables thread-safety augmentations in CoDiPack. Therefore, a reverse AD + OpenMP - OpDiLib build is not the same as a classical serial reverse AD build that is vectorized one way or the other. If we add this, reverse AD + OpenMP - OpDiLib should also print an error for `-t 2` or higher. Since I am not 100% sure about it yet, could you clarify again what it is that you want to achieve in the end, and why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-891257890
https://github.com/su2code/SU2/pull/1294#issuecomment-891257890:156,Testability,test,tested,156,"Have a look at a9466bb158ca8675352bf3b4b887cbf82b7f28ff for a suggestion on how to disable OpDiLib within the scope of the existing build options (casually tested). To clarify the AD implications: If you use OpDiLib, you will have atomic adjoints where no shared reading optimizations are applied, even with `-t 1`. Disabling OpDiLib - if we add that option - will amend this. The presence of `_OPENMP`, however, makes SU2 use the thread-safe CoDiPack type and enables thread-safety augmentations in CoDiPack. Therefore, a reverse AD + OpenMP - OpDiLib build is not the same as a classical serial reverse AD build that is vectorized one way or the other. If we add this, reverse AD + OpenMP - OpDiLib should also print an error for `-t 2` or higher. Since I am not 100% sure about it yet, could you clarify again what it is that you want to achieve in the end, and why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-891257890
https://github.com/su2code/SU2/pull/1295#issuecomment-858716723:144,Testability,test,test,144,"The unsteady CHT regression is failing, but I cannot understand why. I should not have touched parts of the code that influence that regression test. May I ask you if you have any idea of the reason for this fail?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-858716723
https://github.com/su2code/SU2/pull/1295#issuecomment-859532720:595,Testability,test,testcase,595,"> ; > ; > @TobiKattmann any idea about what may be happening with the unsteady cht tutorial?. Oh man I am so sorry, It was already failing in #1290 that was merged 3 days ago by me. So it is not your problem @Nicola-Fonzi . . Let me explain how that happened (not to justify that or anything): I wanted to move the unsteady CHT case to the tutorial.py file because it is, in fact, a tutorial. As I didn't have a PR open that time I put that into #1226 because it fit into the PR-scope. The PR was not worked on ever since so I now thought I just squeeze it into #1290 to have that covered.; The testcase was not failing in #1226 so I cherry-picked that into #1290 and obviously didn't check if it still works. Code Factor was always giving me red-crosses for all the commits so I didn't pay much attention to that :( 👎 . I apologize again and will fix that asap and see what is going on",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859532720
https://github.com/su2code/SU2/pull/1295#issuecomment-859559899:117,Energy Efficiency,green,green,117,"Hmmm looks like we have an issue with the setup of tutorials.py then, because the merge button should not show up as green with failing regressions.; The code quality tests are not hard requirements but everything else should be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859559899
https://github.com/su2code/SU2/pull/1295#issuecomment-859559899:167,Testability,test,tests,167,"Hmmm looks like we have an issue with the setup of tutorials.py then, because the merge button should not show up as green with failing regressions.; The code quality tests are not hard requirements but everything else should be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859559899
https://github.com/su2code/SU2/pull/1295#issuecomment-859564174:41,Testability,test,test,41,"Indeed the tutorial.py is not a required test.; Anyway, I am happy I did not break anything. Do you think we can merge this?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859564174
https://github.com/su2code/SU2/pull/1295#issuecomment-859644788:132,Testability,test,test,132,"Ok, I think I understood and fixed what happened (and did 2 more stupid mistakes). In #1226 2 things happened: ; 1. I moved the reg-test to tutorials and therefore I had to add files to /su2code/Tutorials/12 of course. There I changed some values (Linear Solver Iter, Outer_Iter, Time_Iter, to name the most important) because the case until then did not get unsteady. Because the original case worked in #1226 before my commit and I only changed cfg-options over at Tutorials and touched no more than tutorials.py -> there was no unwanted introduced code changed that is overlooked!; 2. in #1229 three cfg option names for heat were changed ... so I changed them over at /su2code/Tutorials as well cause I thought that the test have to pass in #1229 and /su2code/Tutorials contains the cfg's as well (other than for the usual Testcases). I also thought that #1229 would be merged in quick succession so that premature change wouldn't hurt much ... well that merge didnt happen until today. Point 2. above bit me when I cherry picked in #1290 which introduced the failing test visible here. Because with that I changed from the Testcases-test to the Tutorial-test which already had the new cfg-names in it ... which are not in the code yet! Changing that back gave the correct values on my machine and I get the correct values with current develop wrt to the old test (which can be seen in the diff of #1226). Like so I am confident that no code changed the regression test values but rather incautious Tobi. The 2 mistakes I made were:; 1. I pushed the changes (different cfg-option-names) directly to develop without a PR. That is prob not too bad tbh but I would have preferred a PR; 2. I re-ran the tests for the last commit of this PR to check but I guess it is better to leave that alone and just do that somewhere else in a new PR just to test that ... not sure if that works out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788
https://github.com/su2code/SU2/pull/1295#issuecomment-859644788:724,Testability,test,test,724,"Ok, I think I understood and fixed what happened (and did 2 more stupid mistakes). In #1226 2 things happened: ; 1. I moved the reg-test to tutorials and therefore I had to add files to /su2code/Tutorials/12 of course. There I changed some values (Linear Solver Iter, Outer_Iter, Time_Iter, to name the most important) because the case until then did not get unsteady. Because the original case worked in #1226 before my commit and I only changed cfg-options over at Tutorials and touched no more than tutorials.py -> there was no unwanted introduced code changed that is overlooked!; 2. in #1229 three cfg option names for heat were changed ... so I changed them over at /su2code/Tutorials as well cause I thought that the test have to pass in #1229 and /su2code/Tutorials contains the cfg's as well (other than for the usual Testcases). I also thought that #1229 would be merged in quick succession so that premature change wouldn't hurt much ... well that merge didnt happen until today. Point 2. above bit me when I cherry picked in #1290 which introduced the failing test visible here. Because with that I changed from the Testcases-test to the Tutorial-test which already had the new cfg-names in it ... which are not in the code yet! Changing that back gave the correct values on my machine and I get the correct values with current develop wrt to the old test (which can be seen in the diff of #1226). Like so I am confident that no code changed the regression test values but rather incautious Tobi. The 2 mistakes I made were:; 1. I pushed the changes (different cfg-option-names) directly to develop without a PR. That is prob not too bad tbh but I would have preferred a PR; 2. I re-ran the tests for the last commit of this PR to check but I guess it is better to leave that alone and just do that somewhere else in a new PR just to test that ... not sure if that works out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788
https://github.com/su2code/SU2/pull/1295#issuecomment-859644788:827,Testability,Test,Testcases,827,"Ok, I think I understood and fixed what happened (and did 2 more stupid mistakes). In #1226 2 things happened: ; 1. I moved the reg-test to tutorials and therefore I had to add files to /su2code/Tutorials/12 of course. There I changed some values (Linear Solver Iter, Outer_Iter, Time_Iter, to name the most important) because the case until then did not get unsteady. Because the original case worked in #1226 before my commit and I only changed cfg-options over at Tutorials and touched no more than tutorials.py -> there was no unwanted introduced code changed that is overlooked!; 2. in #1229 three cfg option names for heat were changed ... so I changed them over at /su2code/Tutorials as well cause I thought that the test have to pass in #1229 and /su2code/Tutorials contains the cfg's as well (other than for the usual Testcases). I also thought that #1229 would be merged in quick succession so that premature change wouldn't hurt much ... well that merge didnt happen until today. Point 2. above bit me when I cherry picked in #1290 which introduced the failing test visible here. Because with that I changed from the Testcases-test to the Tutorial-test which already had the new cfg-names in it ... which are not in the code yet! Changing that back gave the correct values on my machine and I get the correct values with current develop wrt to the old test (which can be seen in the diff of #1226). Like so I am confident that no code changed the regression test values but rather incautious Tobi. The 2 mistakes I made were:; 1. I pushed the changes (different cfg-option-names) directly to develop without a PR. That is prob not too bad tbh but I would have preferred a PR; 2. I re-ran the tests for the last commit of this PR to check but I guess it is better to leave that alone and just do that somewhere else in a new PR just to test that ... not sure if that works out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788
https://github.com/su2code/SU2/pull/1295#issuecomment-859644788:1072,Testability,test,test,1072,"Ok, I think I understood and fixed what happened (and did 2 more stupid mistakes). In #1226 2 things happened: ; 1. I moved the reg-test to tutorials and therefore I had to add files to /su2code/Tutorials/12 of course. There I changed some values (Linear Solver Iter, Outer_Iter, Time_Iter, to name the most important) because the case until then did not get unsteady. Because the original case worked in #1226 before my commit and I only changed cfg-options over at Tutorials and touched no more than tutorials.py -> there was no unwanted introduced code changed that is overlooked!; 2. in #1229 three cfg option names for heat were changed ... so I changed them over at /su2code/Tutorials as well cause I thought that the test have to pass in #1229 and /su2code/Tutorials contains the cfg's as well (other than for the usual Testcases). I also thought that #1229 would be merged in quick succession so that premature change wouldn't hurt much ... well that merge didnt happen until today. Point 2. above bit me when I cherry picked in #1290 which introduced the failing test visible here. Because with that I changed from the Testcases-test to the Tutorial-test which already had the new cfg-names in it ... which are not in the code yet! Changing that back gave the correct values on my machine and I get the correct values with current develop wrt to the old test (which can be seen in the diff of #1226). Like so I am confident that no code changed the regression test values but rather incautious Tobi. The 2 mistakes I made were:; 1. I pushed the changes (different cfg-option-names) directly to develop without a PR. That is prob not too bad tbh but I would have preferred a PR; 2. I re-ran the tests for the last commit of this PR to check but I guess it is better to leave that alone and just do that somewhere else in a new PR just to test that ... not sure if that works out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788
https://github.com/su2code/SU2/pull/1295#issuecomment-859644788:1128,Testability,Test,Testcases-test,1128,"Ok, I think I understood and fixed what happened (and did 2 more stupid mistakes). In #1226 2 things happened: ; 1. I moved the reg-test to tutorials and therefore I had to add files to /su2code/Tutorials/12 of course. There I changed some values (Linear Solver Iter, Outer_Iter, Time_Iter, to name the most important) because the case until then did not get unsteady. Because the original case worked in #1226 before my commit and I only changed cfg-options over at Tutorials and touched no more than tutorials.py -> there was no unwanted introduced code changed that is overlooked!; 2. in #1229 three cfg option names for heat were changed ... so I changed them over at /su2code/Tutorials as well cause I thought that the test have to pass in #1229 and /su2code/Tutorials contains the cfg's as well (other than for the usual Testcases). I also thought that #1229 would be merged in quick succession so that premature change wouldn't hurt much ... well that merge didnt happen until today. Point 2. above bit me when I cherry picked in #1290 which introduced the failing test visible here. Because with that I changed from the Testcases-test to the Tutorial-test which already had the new cfg-names in it ... which are not in the code yet! Changing that back gave the correct values on my machine and I get the correct values with current develop wrt to the old test (which can be seen in the diff of #1226). Like so I am confident that no code changed the regression test values but rather incautious Tobi. The 2 mistakes I made were:; 1. I pushed the changes (different cfg-option-names) directly to develop without a PR. That is prob not too bad tbh but I would have preferred a PR; 2. I re-ran the tests for the last commit of this PR to check but I guess it is better to leave that alone and just do that somewhere else in a new PR just to test that ... not sure if that works out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788
https://github.com/su2code/SU2/pull/1295#issuecomment-859644788:1159,Testability,test,test,1159,"Ok, I think I understood and fixed what happened (and did 2 more stupid mistakes). In #1226 2 things happened: ; 1. I moved the reg-test to tutorials and therefore I had to add files to /su2code/Tutorials/12 of course. There I changed some values (Linear Solver Iter, Outer_Iter, Time_Iter, to name the most important) because the case until then did not get unsteady. Because the original case worked in #1226 before my commit and I only changed cfg-options over at Tutorials and touched no more than tutorials.py -> there was no unwanted introduced code changed that is overlooked!; 2. in #1229 three cfg option names for heat were changed ... so I changed them over at /su2code/Tutorials as well cause I thought that the test have to pass in #1229 and /su2code/Tutorials contains the cfg's as well (other than for the usual Testcases). I also thought that #1229 would be merged in quick succession so that premature change wouldn't hurt much ... well that merge didnt happen until today. Point 2. above bit me when I cherry picked in #1290 which introduced the failing test visible here. Because with that I changed from the Testcases-test to the Tutorial-test which already had the new cfg-names in it ... which are not in the code yet! Changing that back gave the correct values on my machine and I get the correct values with current develop wrt to the old test (which can be seen in the diff of #1226). Like so I am confident that no code changed the regression test values but rather incautious Tobi. The 2 mistakes I made were:; 1. I pushed the changes (different cfg-option-names) directly to develop without a PR. That is prob not too bad tbh but I would have preferred a PR; 2. I re-ran the tests for the last commit of this PR to check but I guess it is better to leave that alone and just do that somewhere else in a new PR just to test that ... not sure if that works out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788
https://github.com/su2code/SU2/pull/1295#issuecomment-859644788:1363,Testability,test,test,1363,"Ok, I think I understood and fixed what happened (and did 2 more stupid mistakes). In #1226 2 things happened: ; 1. I moved the reg-test to tutorials and therefore I had to add files to /su2code/Tutorials/12 of course. There I changed some values (Linear Solver Iter, Outer_Iter, Time_Iter, to name the most important) because the case until then did not get unsteady. Because the original case worked in #1226 before my commit and I only changed cfg-options over at Tutorials and touched no more than tutorials.py -> there was no unwanted introduced code changed that is overlooked!; 2. in #1229 three cfg option names for heat were changed ... so I changed them over at /su2code/Tutorials as well cause I thought that the test have to pass in #1229 and /su2code/Tutorials contains the cfg's as well (other than for the usual Testcases). I also thought that #1229 would be merged in quick succession so that premature change wouldn't hurt much ... well that merge didnt happen until today. Point 2. above bit me when I cherry picked in #1290 which introduced the failing test visible here. Because with that I changed from the Testcases-test to the Tutorial-test which already had the new cfg-names in it ... which are not in the code yet! Changing that back gave the correct values on my machine and I get the correct values with current develop wrt to the old test (which can be seen in the diff of #1226). Like so I am confident that no code changed the regression test values but rather incautious Tobi. The 2 mistakes I made were:; 1. I pushed the changes (different cfg-option-names) directly to develop without a PR. That is prob not too bad tbh but I would have preferred a PR; 2. I re-ran the tests for the last commit of this PR to check but I guess it is better to leave that alone and just do that somewhere else in a new PR just to test that ... not sure if that works out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788
https://github.com/su2code/SU2/pull/1295#issuecomment-859644788:1469,Testability,test,test,1469,"Ok, I think I understood and fixed what happened (and did 2 more stupid mistakes). In #1226 2 things happened: ; 1. I moved the reg-test to tutorials and therefore I had to add files to /su2code/Tutorials/12 of course. There I changed some values (Linear Solver Iter, Outer_Iter, Time_Iter, to name the most important) because the case until then did not get unsteady. Because the original case worked in #1226 before my commit and I only changed cfg-options over at Tutorials and touched no more than tutorials.py -> there was no unwanted introduced code changed that is overlooked!; 2. in #1229 three cfg option names for heat were changed ... so I changed them over at /su2code/Tutorials as well cause I thought that the test have to pass in #1229 and /su2code/Tutorials contains the cfg's as well (other than for the usual Testcases). I also thought that #1229 would be merged in quick succession so that premature change wouldn't hurt much ... well that merge didnt happen until today. Point 2. above bit me when I cherry picked in #1290 which introduced the failing test visible here. Because with that I changed from the Testcases-test to the Tutorial-test which already had the new cfg-names in it ... which are not in the code yet! Changing that back gave the correct values on my machine and I get the correct values with current develop wrt to the old test (which can be seen in the diff of #1226). Like so I am confident that no code changed the regression test values but rather incautious Tobi. The 2 mistakes I made were:; 1. I pushed the changes (different cfg-option-names) directly to develop without a PR. That is prob not too bad tbh but I would have preferred a PR; 2. I re-ran the tests for the last commit of this PR to check but I guess it is better to leave that alone and just do that somewhere else in a new PR just to test that ... not sure if that works out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788
https://github.com/su2code/SU2/pull/1295#issuecomment-859644788:1703,Testability,test,tests,1703,"Ok, I think I understood and fixed what happened (and did 2 more stupid mistakes). In #1226 2 things happened: ; 1. I moved the reg-test to tutorials and therefore I had to add files to /su2code/Tutorials/12 of course. There I changed some values (Linear Solver Iter, Outer_Iter, Time_Iter, to name the most important) because the case until then did not get unsteady. Because the original case worked in #1226 before my commit and I only changed cfg-options over at Tutorials and touched no more than tutorials.py -> there was no unwanted introduced code changed that is overlooked!; 2. in #1229 three cfg option names for heat were changed ... so I changed them over at /su2code/Tutorials as well cause I thought that the test have to pass in #1229 and /su2code/Tutorials contains the cfg's as well (other than for the usual Testcases). I also thought that #1229 would be merged in quick succession so that premature change wouldn't hurt much ... well that merge didnt happen until today. Point 2. above bit me when I cherry picked in #1290 which introduced the failing test visible here. Because with that I changed from the Testcases-test to the Tutorial-test which already had the new cfg-names in it ... which are not in the code yet! Changing that back gave the correct values on my machine and I get the correct values with current develop wrt to the old test (which can be seen in the diff of #1226). Like so I am confident that no code changed the regression test values but rather incautious Tobi. The 2 mistakes I made were:; 1. I pushed the changes (different cfg-option-names) directly to develop without a PR. That is prob not too bad tbh but I would have preferred a PR; 2. I re-ran the tests for the last commit of this PR to check but I guess it is better to leave that alone and just do that somewhere else in a new PR just to test that ... not sure if that works out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788
https://github.com/su2code/SU2/pull/1295#issuecomment-859644788:1846,Testability,test,test,1846,"Ok, I think I understood and fixed what happened (and did 2 more stupid mistakes). In #1226 2 things happened: ; 1. I moved the reg-test to tutorials and therefore I had to add files to /su2code/Tutorials/12 of course. There I changed some values (Linear Solver Iter, Outer_Iter, Time_Iter, to name the most important) because the case until then did not get unsteady. Because the original case worked in #1226 before my commit and I only changed cfg-options over at Tutorials and touched no more than tutorials.py -> there was no unwanted introduced code changed that is overlooked!; 2. in #1229 three cfg option names for heat were changed ... so I changed them over at /su2code/Tutorials as well cause I thought that the test have to pass in #1229 and /su2code/Tutorials contains the cfg's as well (other than for the usual Testcases). I also thought that #1229 would be merged in quick succession so that premature change wouldn't hurt much ... well that merge didnt happen until today. Point 2. above bit me when I cherry picked in #1290 which introduced the failing test visible here. Because with that I changed from the Testcases-test to the Tutorial-test which already had the new cfg-names in it ... which are not in the code yet! Changing that back gave the correct values on my machine and I get the correct values with current develop wrt to the old test (which can be seen in the diff of #1226). Like so I am confident that no code changed the regression test values but rather incautious Tobi. The 2 mistakes I made were:; 1. I pushed the changes (different cfg-option-names) directly to develop without a PR. That is prob not too bad tbh but I would have preferred a PR; 2. I re-ran the tests for the last commit of this PR to check but I guess it is better to leave that alone and just do that somewhere else in a new PR just to test that ... not sure if that works out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788
https://github.com/su2code/SU2/pull/1300#issuecomment-858827405:293,Deployability,release,released,293,This pull request **introduces 10 alerts** when merging 6facf5b1fe5b49b9f97430ee1f46f3ed978d4cd4 into 919900ac683f96c6ff36e470b533d81802147c1d - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-bb6686adeddfa21f7fcf27c16eba7714d5c4eacc). **new alerts:**. * 10 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-858827405
https://github.com/su2code/SU2/pull/1300#issuecomment-860118605:142,Availability,error,error,142,fyi; 1. The failing tutorials.py regression test are solved elsewhere so that will disappear upon the next pushed commit; 2. The Complex Code error of CodeFactor can be (most likely) disregarded as a false positive. It does so for eg CSolver.cpp already so i guess we have ourselves a new hypochondriac-file,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-860118605
https://github.com/su2code/SU2/pull/1300#issuecomment-860118605:44,Testability,test,test,44,fyi; 1. The failing tutorials.py regression test are solved elsewhere so that will disappear upon the next pushed commit; 2. The Complex Code error of CodeFactor can be (most likely) disregarded as a false positive. It does so for eg CSolver.cpp already so i guess we have ourselves a new hypochondriac-file,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-860118605
https://github.com/su2code/SU2/pull/1300#issuecomment-866197577:293,Deployability,release,released,293,This pull request **introduces 12 alerts** when merging c44014888000d625489c28fd0e04dec85b518a86 into 350fee94a837495ba2a0d821a2025020e444acb5 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b518cf4c575d7021e74da0d58e9a73b0afaed921). **new alerts:**. * 12 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-866197577
https://github.com/su2code/SU2/pull/1300#issuecomment-866352437:293,Deployability,release,released,293,This pull request **introduces 12 alerts** when merging 169be9a4067cebc7495485069a72e21ce1930087 into 350fee94a837495ba2a0d821a2025020e444acb5 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-7d6523ee3b0add4376da574ee8202cc23b350ad9). **new alerts:**. * 12 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-866352437
https://github.com/su2code/SU2/pull/1300#issuecomment-1021416009:293,Deployability,release,released,293,This pull request **introduces 35 alerts** when merging 90dbc0da26f37b22be01723b9cc4e96e5ad10da4 into f8da2932d68cff663ef7446840df077a13470bcd - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-45d02c9b2c325c1693a7ca10c73884b20763047a). **new alerts:**. * 35 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1021416009
https://github.com/su2code/SU2/pull/1300#issuecomment-1039503606:293,Deployability,release,released,293,This pull request **introduces 27 alerts** when merging de94b6dc8057b1f67efe393b13149d6ad53c7f2f into 5b12ac77a38a96dbe86e6a46c2497148a0a2e4a8 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-59a0e19d690ed9a24459688d2c23db89916e59f5). **new alerts:**. * 26 for Resource not released in destructor; * 1 for Non\-virtual destructor in base class,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1039503606
https://github.com/su2code/SU2/pull/1300#issuecomment-1039623493:293,Deployability,release,released,293,This pull request **introduces 26 alerts** when merging 1c57ad34350a4c8bba680fd56b8ef51c29e965d9 into 5b12ac77a38a96dbe86e6a46c2497148a0a2e4a8 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-d1cc550ac8bc5509fb8607b49fd6c4823b1973a3). **new alerts:**. * 25 for Resource not released in destructor; * 1 for Non\-virtual destructor in base class,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1039623493
https://github.com/su2code/SU2/pull/1300#issuecomment-1040965587:293,Deployability,release,released,293,This pull request **introduces 26 alerts** when merging 342d3a204c36f1affc49d8e4b443e6684c7d097b into 5b12ac77a38a96dbe86e6a46c2497148a0a2e4a8 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-a0f361baefe39d46dd2f75b193765300287f00a7). **new alerts:**. * 25 for Resource not released in destructor; * 1 for Non\-virtual destructor in base class,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1040965587
https://github.com/su2code/SU2/pull/1300#issuecomment-1042104661:293,Deployability,release,released,293,This pull request **introduces 26 alerts** when merging bfb175c15a5086847a69507869b2071a90a87232 into 5b12ac77a38a96dbe86e6a46c2497148a0a2e4a8 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-a7dc350f01e617561b8e039767ac50f293216fce). **new alerts:**. * 25 for Resource not released in destructor; * 1 for Non\-virtual destructor in base class,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1042104661
https://github.com/su2code/SU2/pull/1300#issuecomment-1045114421:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging 1fdb8374e38a89972b4e81c81c786661083f79dc into 5b12ac77a38a96dbe86e6a46c2497148a0a2e4a8 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-15177bbbc902aa88c01946b49bb6bb751d99e3c0). **new alerts:**. * 22 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1045114421
https://github.com/su2code/SU2/pull/1300#issuecomment-1047005518:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging 976408cfbc3a97e4a43a0954f5add106028a4157 into 5b12ac77a38a96dbe86e6a46c2497148a0a2e4a8 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-ae6d41221e81ae2131a64f5b9ab32cdcee1a8157). **new alerts:**. * 22 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1047005518
https://github.com/su2code/SU2/pull/1300#issuecomment-1061211591:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging 4873aa2f46c76e744c482c3c0e655addc6fc608f into 56cb5267440880b6fa22368ed0e1d5fd8275491b - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-7b6d5e21ad86274c7ce768e889304058a5bf07a8). **new alerts:**. * 22 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1061211591
https://github.com/su2code/SU2/pull/1300#issuecomment-1061224541:91,Deployability,update,updates,91,"Hello @pcarruscag @TobiKattmann and SU2 developers,. We have been busy making several code updates, performing cleanup, etc. for this PR. Can you please review and provide feedback when you get the chance? Thank you in advance!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1061224541
https://github.com/su2code/SU2/pull/1300#issuecomment-1061224541:100,Performance,perform,performing,100,"Hello @pcarruscag @TobiKattmann and SU2 developers,. We have been busy making several code updates, performing cleanup, etc. for this PR. Can you please review and provide feedback when you get the chance? Thank you in advance!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1061224541
https://github.com/su2code/SU2/pull/1300#issuecomment-1061224541:172,Usability,feedback,feedback,172,"Hello @pcarruscag @TobiKattmann and SU2 developers,. We have been busy making several code updates, performing cleanup, etc. for this PR. Can you please review and provide feedback when you get the chance? Thank you in advance!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1061224541
https://github.com/su2code/SU2/pull/1300#issuecomment-1095335429:293,Deployability,release,released,293,This pull request **introduces 45 alerts** when merging 3f0247625a9510232edf439297d7295888c6a3ed into 328a1b747a4785d13b749e7fb6cc4589fd1b9529 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b7247622daf2ab4c1473f91e3781594485b33b10). **new alerts:**. * 45 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1095335429
https://github.com/su2code/SU2/pull/1300#issuecomment-1350568387:124,Integrability,wrap,wrapper,124,"Hi and thank you for this PR, I think it will be really useful.; I noticed that you removed several functions in the python wrapper, and also renamed others. This will break the compatibility with the fsi module. May I ask you why you had to remove it? We can maybe find a solution that keeps the possibility to use the fsi module as well",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1350568387
https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925:524,Availability,avail,available,524,"> Hi and thank you for this PR, I think it will be really useful. I noticed that you removed several functions in the python wrapper, and also renamed others. This will break the compatibility with the fsi module. May I ask you why you had to remove it? We can maybe find a solution that keeps the possibility to use the fsi module as well. Hi Nicola! Are you asking about methods relating to number of vertices, global indices, coordinates, deformable marker tags, etc.? If so, we have not removed those and they are still available through the Python wrapper. These functions were relocated to [CDriverBase](https://github.com/su2code/SU2/blob/feature_pysu2_DEF/Common/include/drivers/CDriverBase.hpp) so they can be inherited by all other drivers. These changes should not break compatibility with the FSI module (aside from some function renaming).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925
https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925:125,Integrability,wrap,wrapper,125,"> Hi and thank you for this PR, I think it will be really useful. I noticed that you removed several functions in the python wrapper, and also renamed others. This will break the compatibility with the fsi module. May I ask you why you had to remove it? We can maybe find a solution that keeps the possibility to use the fsi module as well. Hi Nicola! Are you asking about methods relating to number of vertices, global indices, coordinates, deformable marker tags, etc.? If so, we have not removed those and they are still available through the Python wrapper. These functions were relocated to [CDriverBase](https://github.com/su2code/SU2/blob/feature_pysu2_DEF/Common/include/drivers/CDriverBase.hpp) so they can be inherited by all other drivers. These changes should not break compatibility with the FSI module (aside from some function renaming).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925
https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925:553,Integrability,wrap,wrapper,553,"> Hi and thank you for this PR, I think it will be really useful. I noticed that you removed several functions in the python wrapper, and also renamed others. This will break the compatibility with the fsi module. May I ask you why you had to remove it? We can maybe find a solution that keeps the possibility to use the fsi module as well. Hi Nicola! Are you asking about methods relating to number of vertices, global indices, coordinates, deformable marker tags, etc.? If so, we have not removed those and they are still available through the Python wrapper. These functions were relocated to [CDriverBase](https://github.com/su2code/SU2/blob/feature_pysu2_DEF/Common/include/drivers/CDriverBase.hpp) so they can be inherited by all other drivers. These changes should not break compatibility with the FSI module (aside from some function renaming).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925
https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925:719,Modifiability,inherit,inherited,719,"> Hi and thank you for this PR, I think it will be really useful. I noticed that you removed several functions in the python wrapper, and also renamed others. This will break the compatibility with the fsi module. May I ask you why you had to remove it? We can maybe find a solution that keeps the possibility to use the fsi module as well. Hi Nicola! Are you asking about methods relating to number of vertices, global indices, coordinates, deformable marker tags, etc.? If so, we have not removed those and they are still available through the Python wrapper. These functions were relocated to [CDriverBase](https://github.com/su2code/SU2/blob/feature_pysu2_DEF/Common/include/drivers/CDriverBase.hpp) so they can be inherited by all other drivers. These changes should not break compatibility with the FSI module (aside from some function renaming).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925
https://github.com/su2code/SU2/pull/1300#issuecomment-1354484568:382,Testability,test,test,382,"Hi @patelha57 , yes I meant those functions. I could not find them because I did a fast ctrl+f search in the files and it did not work because of the renaming. I should have read more carefully. I think it would have been better to keep the old names, as renaming tends to create small issues here and there. However, I see that you fixed that almost everywhere, also in the python test cases. Thank you!; Probably only the fsi_interface and fsi_computation files are missing",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1354484568
https://github.com/su2code/SU2/pull/1300#issuecomment-1378164143:20,Testability,test,tests,20,Okay the regression tests are all finally passing! ; Can you advise on what to do about the CodeQL alerts? Any other comments or suggestions in general?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1378164143
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:18,Availability,down,down,18,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:988,Availability,mainten,maintenance,988,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:1643,Availability,mainten,maintenance,1643,"ch request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix instead of lists of lists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:639,Energy Efficiency,efficient,efficient,639,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:1722,Energy Efficiency,efficient,efficient,1722,"ch request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix instead of lists of lists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:1953,Energy Efficiency,efficient,efficient,1953,"ch request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix instead of lists of lists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:106,Integrability,interface,interface,106,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:179,Integrability,interface,interface,179,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:221,Integrability,wrap,wrapper,221,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:283,Integrability,wrap,wrapper,283,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:1875,Integrability,wrap,wrapper,1875,"ch request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix instead of lists of lists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:652,Security,access,access,652,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:1803,Security,access,access,1803,"ch request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix instead of lists of lists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:47,Usability,clear,clearer,47,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:255,Usability,learn,learn,255,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827
https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772:400,Integrability,wrap,wrapper,400,"I've been testing this a bit this afternoon, things look ok.; We can revisit the accessor functions for the entire domain once we can return the container by reference instead of copying the data first.; We can also look into code-generating accessors for markers for whatever volume accessors we define, once the names stabilize a bit, there are some inconsistencies in the naming of the old python wrapper functions. This needs regression tests now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772
https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772:81,Security,access,accessor,81,"I've been testing this a bit this afternoon, things look ok.; We can revisit the accessor functions for the entire domain once we can return the container by reference instead of copying the data first.; We can also look into code-generating accessors for markers for whatever volume accessors we define, once the names stabilize a bit, there are some inconsistencies in the naming of the old python wrapper functions. This needs regression tests now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772
https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772:242,Security,access,accessors,242,"I've been testing this a bit this afternoon, things look ok.; We can revisit the accessor functions for the entire domain once we can return the container by reference instead of copying the data first.; We can also look into code-generating accessors for markers for whatever volume accessors we define, once the names stabilize a bit, there are some inconsistencies in the naming of the old python wrapper functions. This needs regression tests now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772
https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772:284,Security,access,accessors,284,"I've been testing this a bit this afternoon, things look ok.; We can revisit the accessor functions for the entire domain once we can return the container by reference instead of copying the data first.; We can also look into code-generating accessors for markers for whatever volume accessors we define, once the names stabilize a bit, there are some inconsistencies in the naming of the old python wrapper functions. This needs regression tests now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772
https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772:10,Testability,test,testing,10,"I've been testing this a bit this afternoon, things look ok.; We can revisit the accessor functions for the entire domain once we can return the container by reference instead of copying the data first.; We can also look into code-generating accessors for markers for whatever volume accessors we define, once the names stabilize a bit, there are some inconsistencies in the naming of the old python wrapper functions. This needs regression tests now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772
https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772:441,Testability,test,tests,441,"I've been testing this a bit this afternoon, things look ok.; We can revisit the accessor functions for the entire domain once we can return the container by reference instead of copying the data first.; We can also look into code-generating accessors for markers for whatever volume accessors we define, once the names stabilize a bit, there are some inconsistencies in the naming of the old python wrapper functions. This needs regression tests now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772
https://github.com/su2code/SU2/pull/1300#issuecomment-1605845588:59,Availability,error,error,59,I'm trying to build SU2 with NVIDIA HPC compiler.; I found error with meson about dependency problem.; I found cond_config.hpp without NVIDIA HPC macro check. Does this mean SU2 didn't consider NVIDIA HPC compiler?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1605845588
https://github.com/su2code/SU2/pull/1300#issuecomment-1605845588:82,Integrability,depend,dependency,82,I'm trying to build SU2 with NVIDIA HPC compiler.; I found error with meson about dependency problem.; I found cond_config.hpp without NVIDIA HPC macro check. Does this mean SU2 didn't consider NVIDIA HPC compiler?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1605845588
https://github.com/su2code/SU2/issues/1304#issuecomment-862079938:472,Energy Efficiency,Monitor,Monitor,472,"I think we lost this functionality around version 7 (at the time I did not know we had it) maybe because it was complicated to guarantee the right file outputs when the simulation is stopped this way, especially for discrete adjoint problems.; The poor mans version of this feature is to increase the file output frequency and kill the execution :shrug: ; Nevertheless, the mechanism to change the number of time iterations at runtime can still be found in `CFluidDriver::Monitor`, which is currently used by turbomachinery problems.; If someone wants to bring the feature back that would be a good place to start, although I think this type of runtime interaction is a bad investment, it would be better to use the python wrapper.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862079938
https://github.com/su2code/SU2/issues/1304#issuecomment-862079938:723,Integrability,wrap,wrapper,723,"I think we lost this functionality around version 7 (at the time I did not know we had it) maybe because it was complicated to guarantee the right file outputs when the simulation is stopped this way, especially for discrete adjoint problems.; The poor mans version of this feature is to increase the file output frequency and kill the execution :shrug: ; Nevertheless, the mechanism to change the number of time iterations at runtime can still be found in `CFluidDriver::Monitor`, which is currently used by turbomachinery problems.; If someone wants to bring the feature back that would be a good place to start, although I think this type of runtime interaction is a bad investment, it would be better to use the python wrapper.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862079938
https://github.com/su2code/SU2/issues/1304#issuecomment-862344695:109,Availability,avail,available,109,"I haven't looked at the python wrapper in detail, we had previously tracked several properties which are not available in the conventional convergence tracker (such as Cmy) and used the stop file to obtain the data when appropriate. We have considered increasing the save frequency, but there are several files which are not created at every save point; thereby forcing each ""standard"" run to become a ""run to nearest save"" then ""resume for 1 time-step to get the actual output data"". As the decomposition and some of the file writes take a significant amount of time, it is a non-starter for commercial applications. We would switch back to v6 (which had the capability) but we need some of the other features in v7. I'll take a look at the python wrapper. Thank you for your candor.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862344695
https://github.com/su2code/SU2/issues/1304#issuecomment-862344695:31,Integrability,wrap,wrapper,31,"I haven't looked at the python wrapper in detail, we had previously tracked several properties which are not available in the conventional convergence tracker (such as Cmy) and used the stop file to obtain the data when appropriate. We have considered increasing the save frequency, but there are several files which are not created at every save point; thereby forcing each ""standard"" run to become a ""run to nearest save"" then ""resume for 1 time-step to get the actual output data"". As the decomposition and some of the file writes take a significant amount of time, it is a non-starter for commercial applications. We would switch back to v6 (which had the capability) but we need some of the other features in v7. I'll take a look at the python wrapper. Thank you for your candor.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862344695
https://github.com/su2code/SU2/issues/1304#issuecomment-862344695:749,Integrability,wrap,wrapper,749,"I haven't looked at the python wrapper in detail, we had previously tracked several properties which are not available in the conventional convergence tracker (such as Cmy) and used the stop file to obtain the data when appropriate. We have considered increasing the save frequency, but there are several files which are not created at every save point; thereby forcing each ""standard"" run to become a ""run to nearest save"" then ""resume for 1 time-step to get the actual output data"". As the decomposition and some of the file writes take a significant amount of time, it is a non-starter for commercial applications. We would switch back to v6 (which had the capability) but we need some of the other features in v7. I'll take a look at the python wrapper. Thank you for your candor.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862344695
https://github.com/su2code/SU2/issues/1304#issuecomment-862344695:430,Usability,resume,resume,430,"I haven't looked at the python wrapper in detail, we had previously tracked several properties which are not available in the conventional convergence tracker (such as Cmy) and used the stop file to obtain the data when appropriate. We have considered increasing the save frequency, but there are several files which are not created at every save point; thereby forcing each ""standard"" run to become a ""run to nearest save"" then ""resume for 1 time-step to get the actual output data"". As the decomposition and some of the file writes take a significant amount of time, it is a non-starter for commercial applications. We would switch back to v6 (which had the capability) but we need some of the other features in v7. I'll take a look at the python wrapper. Thank you for your candor.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862344695
https://github.com/su2code/SU2/issues/1304#issuecomment-862396862:98,Modifiability,flexible,flexible,98,"Can you describe a bit more the stopping strategy you want? The new output structure is much more flexible than before, and you can even use Cauchy criteria based on time averages (of pretty much any coefficient), with different windowing methods and so on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862396862
https://github.com/su2code/SU2/issues/1304#issuecomment-863322166:421,Integrability,DEPEND,DEPENDENT,421,"> Can you describe a bit more the stopping strategy you want? The new output structure is much more flexible than before, and you can even use Cauchy criteria based on time averages (of pretty much any coefficient), with different windowing methods and so on. Does Cauchy criteria based on time averages only work for time-independent flows? Because it seems that WINDOW_START_ITER needs to be set in the section of TIME-DEPENDENT SIMULATION in the input .cfg file. Thank you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-863322166
https://github.com/su2code/SU2/issues/1304#issuecomment-863322166:100,Modifiability,flexible,flexible,100,"> Can you describe a bit more the stopping strategy you want? The new output structure is much more flexible than before, and you can even use Cauchy criteria based on time averages (of pretty much any coefficient), with different windowing methods and so on. Does Cauchy criteria based on time averages only work for time-independent flows? Because it seems that WINDOW_START_ITER needs to be set in the section of TIME-DEPENDENT SIMULATION in the input .cfg file. Thank you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-863322166
https://github.com/su2code/SU2/issues/1304#issuecomment-900263111:131,Integrability,wrap,wrapper,131,"For those who find this via google - resolution options: 1) see if any anyone has restored the functionality, or 2) use the python wrapper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-900263111
https://github.com/su2code/SU2/issues/1307#issuecomment-866983616:0,Deployability,Update,Update,0,"Update to the current version of SU2 please, we updated the Metis partitioning strategy here: https://github.com/su2code/SU2/pull/1059",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307#issuecomment-866983616
https://github.com/su2code/SU2/issues/1307#issuecomment-866983616:48,Deployability,update,updated,48,"Update to the current version of SU2 please, we updated the Metis partitioning strategy here: https://github.com/su2code/SU2/pull/1059",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307#issuecomment-866983616
https://github.com/su2code/SU2/issues/1307#issuecomment-867007424:520,Performance,perform,performance,520,"Oops, there was a typo: the SU2 version is actually 7.1.0 not 7.0.1. I'm glad you had looked into it. On high DOF counts per partition, I know they tend to be fairly similar. I only see big differences on meshes with 20M DOF on >200 partitions (i.e. where accounting for partition connectivity is more important). While having the option for different partitioners would be a nice feature, I do not know if the SU2 user-base would actually have much interest in it. The last time we tried a hybrid parallel approach our performance improvement was quite low (<10%). Thank you for your input.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307#issuecomment-867007424
https://github.com/su2code/SU2/issues/1307#issuecomment-867062213:600,Energy Efficiency,reduce,reduces,600,"Ah! Ok, so you may try to tweek PARMETIS_POINT_WEIGHT and PARMETIS_EDGE_WEIGHT.; To balance edges perfectly the point weight may have to be set to a negative value. Those values must be integers. With certain features it is important to have good defaults because a lot of users will not be aware of all the details. So if scotch proves to be much better for large problems, we can create interest. The cost model we use for partitioning is limited, it does not account for boundaries or for multigrid. If you have large symmetry planes this might create imbalance.; The hybrid implementation in SU2 reduces the number of partitions created, which might help parmetis in your case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307#issuecomment-867062213
https://github.com/su2code/SU2/issues/1307#issuecomment-867067131:82,Modifiability,variab,variables,82,"Ooh, that sounds like exactly what I'm looking for. Do I set those as environment variables or in a different manner?. I'll have to check the hybrid again to see how it does. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307#issuecomment-867067131
https://github.com/su2code/SU2/issues/1307#issuecomment-867121983:13,Modifiability,config,config,13,They are SU2 config options. I think they are explained in the config_template in more detail (98% sure).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307#issuecomment-867121983
https://github.com/su2code/SU2/pull/1310#issuecomment-870282236:412,Energy Efficiency,efficient,efficiently,412,"There are some post-processing steps involved, so I think it would be a good idea for me to include an example. . The features in this PR are one step to a bigger projection-based ROM process. The code for the bigger process is in feature_MOR, and will take some time for me to prepare the code from ""make it work"" to ""actually good code"". . However, this feature-PR can be used by itself by anyone who wants to efficiently compute the POD of SU2 simulation data, and then use the POD for other modeling strategies.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310#issuecomment-870282236
https://github.com/su2code/SU2/pull/1326#issuecomment-882945414:41,Deployability,update,update,41,Everything is up-to-date. I just need to update the TestCase folder....not sure what that order is...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326#issuecomment-882945414
https://github.com/su2code/SU2/pull/1326#issuecomment-882945414:52,Testability,Test,TestCase,52,Everything is up-to-date. I just need to update the TestCase folder....not sure what that order is...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326#issuecomment-882945414
https://github.com/su2code/SU2/pull/1329#issuecomment-883448046:328,Security,access,accessible,328,"Great!; I see, I will propose different times for the meetings on the Slack channel (https://join.slack.com/t/su2devteam/shared_invite/zt-af0uuqf8-8XNExKMV9G~UVsnkvi5uVA), even for some folks in the US it is very early.; Join the channel if you would like and you can help to pick better times, we want all aspects of SU2 to be accessible worldwide.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-883448046
https://github.com/su2code/SU2/pull/1329#issuecomment-884793528:766,Deployability,continuous,continuous,766,"Hi @TobiKattmann, thanks for your review. I'll try to do what I can within this week as I don't have much time from next week. > Hi Yuki, Thanks for this contribution bouquet I have a few comments in the review. You didn't write the code initially but it might still be good idea to make the code a bit nicer overall. In case there are things that are not understandable please let me know. As for things that I don't understand, see below although I would like to separate them from this PR.; - WeightNF.dat; - I don't understand what this is for. It is read in `CAdjEulerSolver::SetIntBoundary_Jump` to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?; - VENKATAKRISHNAN limiter; - With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); - `Bad match for point 47742.	Nearest donor distance: 3.6066950142e+00.`; - Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-884793528
https://github.com/su2code/SU2/pull/1329#issuecomment-884793528:1117,Integrability,message,message,1117,"Hi @TobiKattmann, thanks for your review. I'll try to do what I can within this week as I don't have much time from next week. > Hi Yuki, Thanks for this contribution bouquet I have a few comments in the review. You didn't write the code initially but it might still be good idea to make the code a bit nicer overall. In case there are things that are not understandable please let me know. As for things that I don't understand, see below although I would like to separate them from this PR.; - WeightNF.dat; - I don't understand what this is for. It is read in `CAdjEulerSolver::SetIntBoundary_Jump` to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?; - VENKATAKRISHNAN limiter; - With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); - `Bad match for point 47742.	Nearest donor distance: 3.6066950142e+00.`; - Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-884793528
https://github.com/su2code/SU2/pull/1329#issuecomment-884793528:1158,Integrability,message,message,1158,"Hi @TobiKattmann, thanks for your review. I'll try to do what I can within this week as I don't have much time from next week. > Hi Yuki, Thanks for this contribution bouquet I have a few comments in the review. You didn't write the code initially but it might still be good idea to make the code a bit nicer overall. In case there are things that are not understandable please let me know. As for things that I don't understand, see below although I would like to separate them from this PR.; - WeightNF.dat; - I don't understand what this is for. It is read in `CAdjEulerSolver::SetIntBoundary_Jump` to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?; - VENKATAKRISHNAN limiter; - With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); - `Bad match for point 47742.	Nearest donor distance: 3.6066950142e+00.`; - Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-884793528
https://github.com/su2code/SU2/pull/1329#issuecomment-884793528:1014,Testability,test,test,1014,"Hi @TobiKattmann, thanks for your review. I'll try to do what I can within this week as I don't have much time from next week. > Hi Yuki, Thanks for this contribution bouquet I have a few comments in the review. You didn't write the code initially but it might still be good idea to make the code a bit nicer overall. In case there are things that are not understandable please let me know. As for things that I don't understand, see below although I would like to separate them from this PR.; - WeightNF.dat; - I don't understand what this is for. It is read in `CAdjEulerSolver::SetIntBoundary_Jump` to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?; - VENKATAKRISHNAN limiter; - With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); - `Bad match for point 47742.	Nearest donor distance: 3.6066950142e+00.`; - Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-884793528
https://github.com/su2code/SU2/pull/1329#issuecomment-885462629:273,Deployability,continuous,continuous,273,"Hi ; > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?. As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.). you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them. That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629
https://github.com/su2code/SU2/pull/1329#issuecomment-885462629:631,Deployability,continuous,continuous,631,"Hi ; > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?. As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.). you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them. That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629
https://github.com/su2code/SU2/pull/1329#issuecomment-885462629:787,Deployability,continuous,continuous,787,"Hi ; > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?. As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.). you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them. That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629
https://github.com/su2code/SU2/pull/1329#issuecomment-885462629:1376,Integrability,message,message,1376,"Hi ; > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?. As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.). you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them. That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629
https://github.com/su2code/SU2/pull/1329#issuecomment-885462629:1417,Integrability,message,message,1417,"Hi ; > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?. As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.). you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them. That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629
https://github.com/su2code/SU2/pull/1329#issuecomment-885462629:1212,Performance,tune,tune,1212,"Hi ; > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?. As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.). you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them. That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629
https://github.com/su2code/SU2/pull/1329#issuecomment-885462629:1177,Testability,test,test,1177,"Hi ; > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?. As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.). you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them. That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629
https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:270,Deployability,continuous,continuous,270,"> > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?; > ; > As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. I",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847
https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:634,Deployability,continuous,continuous,634,"> > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?; > ; > As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. I",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847
https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:792,Deployability,continuous,continuous,792,"> > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?; > ; > As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. I",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847
https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:1660,Integrability,message,message,1660,"appening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847
https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:1701,Integrability,message,message,1701,"appening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847
https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:1314,Performance,tune,tune,1314,"ot be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847
https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:1273,Testability,test,test,1273,"ive. Is it for continuous adjoint?; > ; > As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CP",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847
https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:1421,Testability,test,tested,1421,"led by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847
https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:2209,Testability,test,tested,2209,"appening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847
https://github.com/su2code/SU2/pull/1329#issuecomment-894628152:776,Availability,down,down,776,"@TobiKattmann ; I have added `README.md` to the testcase folder. Let me know what you think. I'm not exactly sure what I should write as expected outcome for discrete adjoint solver. Ultimately, it is used for shape optimization, so getting a better objective function is what I need to confirm but I cannot run a complete shape optimization in the test case with only a few iterations. What do you usually look for to confirm adjoint calculation is working as expected?. > I would highly appreciate if you add a little `README.md` to your testcase folder and explain a bit what that testcase is meant to showcase and what one is meant to see/look out for/expected outcome and just a hint how to use it (if that is explained in the cfg then just mention that). This will help down the road for anyone that wonders or has to fix a failing reg test and wonders what this is all about. You might also mention the PR number 1329 in there. Doesn't need to be a long text.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152
https://github.com/su2code/SU2/pull/1329#issuecomment-894628152:216,Performance,optimiz,optimization,216,"@TobiKattmann ; I have added `README.md` to the testcase folder. Let me know what you think. I'm not exactly sure what I should write as expected outcome for discrete adjoint solver. Ultimately, it is used for shape optimization, so getting a better objective function is what I need to confirm but I cannot run a complete shape optimization in the test case with only a few iterations. What do you usually look for to confirm adjoint calculation is working as expected?. > I would highly appreciate if you add a little `README.md` to your testcase folder and explain a bit what that testcase is meant to showcase and what one is meant to see/look out for/expected outcome and just a hint how to use it (if that is explained in the cfg then just mention that). This will help down the road for anyone that wonders or has to fix a failing reg test and wonders what this is all about. You might also mention the PR number 1329 in there. Doesn't need to be a long text.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152
https://github.com/su2code/SU2/pull/1329#issuecomment-894628152:329,Performance,optimiz,optimization,329,"@TobiKattmann ; I have added `README.md` to the testcase folder. Let me know what you think. I'm not exactly sure what I should write as expected outcome for discrete adjoint solver. Ultimately, it is used for shape optimization, so getting a better objective function is what I need to confirm but I cannot run a complete shape optimization in the test case with only a few iterations. What do you usually look for to confirm adjoint calculation is working as expected?. > I would highly appreciate if you add a little `README.md` to your testcase folder and explain a bit what that testcase is meant to showcase and what one is meant to see/look out for/expected outcome and just a hint how to use it (if that is explained in the cfg then just mention that). This will help down the road for anyone that wonders or has to fix a failing reg test and wonders what this is all about. You might also mention the PR number 1329 in there. Doesn't need to be a long text.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152
https://github.com/su2code/SU2/pull/1329#issuecomment-894628152:48,Testability,test,testcase,48,"@TobiKattmann ; I have added `README.md` to the testcase folder. Let me know what you think. I'm not exactly sure what I should write as expected outcome for discrete adjoint solver. Ultimately, it is used for shape optimization, so getting a better objective function is what I need to confirm but I cannot run a complete shape optimization in the test case with only a few iterations. What do you usually look for to confirm adjoint calculation is working as expected?. > I would highly appreciate if you add a little `README.md` to your testcase folder and explain a bit what that testcase is meant to showcase and what one is meant to see/look out for/expected outcome and just a hint how to use it (if that is explained in the cfg then just mention that). This will help down the road for anyone that wonders or has to fix a failing reg test and wonders what this is all about. You might also mention the PR number 1329 in there. Doesn't need to be a long text.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152
https://github.com/su2code/SU2/pull/1329#issuecomment-894628152:349,Testability,test,test,349,"@TobiKattmann ; I have added `README.md` to the testcase folder. Let me know what you think. I'm not exactly sure what I should write as expected outcome for discrete adjoint solver. Ultimately, it is used for shape optimization, so getting a better objective function is what I need to confirm but I cannot run a complete shape optimization in the test case with only a few iterations. What do you usually look for to confirm adjoint calculation is working as expected?. > I would highly appreciate if you add a little `README.md` to your testcase folder and explain a bit what that testcase is meant to showcase and what one is meant to see/look out for/expected outcome and just a hint how to use it (if that is explained in the cfg then just mention that). This will help down the road for anyone that wonders or has to fix a failing reg test and wonders what this is all about. You might also mention the PR number 1329 in there. Doesn't need to be a long text.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152
https://github.com/su2code/SU2/pull/1329#issuecomment-894628152:540,Testability,test,testcase,540,"@TobiKattmann ; I have added `README.md` to the testcase folder. Let me know what you think. I'm not exactly sure what I should write as expected outcome for discrete adjoint solver. Ultimately, it is used for shape optimization, so getting a better objective function is what I need to confirm but I cannot run a complete shape optimization in the test case with only a few iterations. What do you usually look for to confirm adjoint calculation is working as expected?. > I would highly appreciate if you add a little `README.md` to your testcase folder and explain a bit what that testcase is meant to showcase and what one is meant to see/look out for/expected outcome and just a hint how to use it (if that is explained in the cfg then just mention that). This will help down the road for anyone that wonders or has to fix a failing reg test and wonders what this is all about. You might also mention the PR number 1329 in there. Doesn't need to be a long text.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152
https://github.com/su2code/SU2/pull/1329#issuecomment-894628152:584,Testability,test,testcase,584,"@TobiKattmann ; I have added `README.md` to the testcase folder. Let me know what you think. I'm not exactly sure what I should write as expected outcome for discrete adjoint solver. Ultimately, it is used for shape optimization, so getting a better objective function is what I need to confirm but I cannot run a complete shape optimization in the test case with only a few iterations. What do you usually look for to confirm adjoint calculation is working as expected?. > I would highly appreciate if you add a little `README.md` to your testcase folder and explain a bit what that testcase is meant to showcase and what one is meant to see/look out for/expected outcome and just a hint how to use it (if that is explained in the cfg then just mention that). This will help down the road for anyone that wonders or has to fix a failing reg test and wonders what this is all about. You might also mention the PR number 1329 in there. Doesn't need to be a long text.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152
https://github.com/su2code/SU2/pull/1329#issuecomment-894628152:842,Testability,test,test,842,"@TobiKattmann ; I have added `README.md` to the testcase folder. Let me know what you think. I'm not exactly sure what I should write as expected outcome for discrete adjoint solver. Ultimately, it is used for shape optimization, so getting a better objective function is what I need to confirm but I cannot run a complete shape optimization in the test case with only a few iterations. What do you usually look for to confirm adjoint calculation is working as expected?. > I would highly appreciate if you add a little `README.md` to your testcase folder and explain a bit what that testcase is meant to showcase and what one is meant to see/look out for/expected outcome and just a hint how to use it (if that is explained in the cfg then just mention that). This will help down the road for anyone that wonders or has to fix a failing reg test and wonders what this is all about. You might also mention the PR number 1329 in there. Doesn't need to be a long text.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152
https://github.com/su2code/SU2/pull/1329#issuecomment-894761404:597,Deployability,update,update,597,"> > Have you been able to converge the adjoint now that MPI problems are fixed, and verify the derivatives you obtain?; > ; > For convergence, yes. For verifying the derivatives, I'm looking for a way to do it now. It seems that I can use the following python scripts to get derivatives. - `discrete_adjoint.py`; - `finite_differences.py`; - `direct_differentiation.py` (not exactly sure what this is doing though). `discrete_adjoint.py` and `direct_differentiation.py` matched pretty well. `finite_differences.py` output values differ sometimes by 20% or so. Is such difference expected?. I will update the config file and the mesh file so that this verification can be done with the same files.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894761404
https://github.com/su2code/SU2/pull/1329#issuecomment-894761404:608,Modifiability,config,config,608,"> > Have you been able to converge the adjoint now that MPI problems are fixed, and verify the derivatives you obtain?; > ; > For convergence, yes. For verifying the derivatives, I'm looking for a way to do it now. It seems that I can use the following python scripts to get derivatives. - `discrete_adjoint.py`; - `finite_differences.py`; - `direct_differentiation.py` (not exactly sure what this is doing though). `discrete_adjoint.py` and `direct_differentiation.py` matched pretty well. `finite_differences.py` output values differ sometimes by 20% or so. Is such difference expected?. I will update the config file and the mesh file so that this verification can be done with the same files.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894761404
https://github.com/su2code/SU2/pull/1329#issuecomment-894777086:198,Availability,error,error,198,"I would focus more on discrete adjoint Vs finite differences, the direct mode can be tricky sometimes.; About the discrepancy, you can try changing the finite difference step (especially if the 20% error is for small derivatives)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894777086
https://github.com/su2code/SU2/pull/1329#issuecomment-894791318:128,Deployability,update,update,128,"> Ah! You commited different version of codi and opdi submodules, you need to revert that.; > Checkout develop; > Git submodule update externals/codi and opdi; > Checkout this branch; > Commit -a; > (Checkout does not update submodules). Hmm, nothing happened by `git submodule update`. I did some research on the web and I did `git submodule foreach git pull origin master`. It updated medi, meson, ninja, and mutationpp instead of codi and opdi. I'll try to fix it tomorrow. [Edit]; I followed instruction in the answer below. It still shows many changes in codi and opdi. Did I do it correctly?; https://stackoverflow.com/questions/5828324/update-git-submodule-to-latest-commit-on-origin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894791318
https://github.com/su2code/SU2/pull/1329#issuecomment-894791318:218,Deployability,update,update,218,"> Ah! You commited different version of codi and opdi submodules, you need to revert that.; > Checkout develop; > Git submodule update externals/codi and opdi; > Checkout this branch; > Commit -a; > (Checkout does not update submodules). Hmm, nothing happened by `git submodule update`. I did some research on the web and I did `git submodule foreach git pull origin master`. It updated medi, meson, ninja, and mutationpp instead of codi and opdi. I'll try to fix it tomorrow. [Edit]; I followed instruction in the answer below. It still shows many changes in codi and opdi. Did I do it correctly?; https://stackoverflow.com/questions/5828324/update-git-submodule-to-latest-commit-on-origin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894791318
https://github.com/su2code/SU2/pull/1329#issuecomment-894791318:278,Deployability,update,update,278,"> Ah! You commited different version of codi and opdi submodules, you need to revert that.; > Checkout develop; > Git submodule update externals/codi and opdi; > Checkout this branch; > Commit -a; > (Checkout does not update submodules). Hmm, nothing happened by `git submodule update`. I did some research on the web and I did `git submodule foreach git pull origin master`. It updated medi, meson, ninja, and mutationpp instead of codi and opdi. I'll try to fix it tomorrow. [Edit]; I followed instruction in the answer below. It still shows many changes in codi and opdi. Did I do it correctly?; https://stackoverflow.com/questions/5828324/update-git-submodule-to-latest-commit-on-origin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894791318
https://github.com/su2code/SU2/pull/1329#issuecomment-894791318:379,Deployability,update,updated,379,"> Ah! You commited different version of codi and opdi submodules, you need to revert that.; > Checkout develop; > Git submodule update externals/codi and opdi; > Checkout this branch; > Commit -a; > (Checkout does not update submodules). Hmm, nothing happened by `git submodule update`. I did some research on the web and I did `git submodule foreach git pull origin master`. It updated medi, meson, ninja, and mutationpp instead of codi and opdi. I'll try to fix it tomorrow. [Edit]; I followed instruction in the answer below. It still shows many changes in codi and opdi. Did I do it correctly?; https://stackoverflow.com/questions/5828324/update-git-submodule-to-latest-commit-on-origin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894791318
https://github.com/su2code/SU2/pull/1329#issuecomment-894791318:643,Deployability,update,update-git-submodule-to-latest-commit-on-origin,643,"> Ah! You commited different version of codi and opdi submodules, you need to revert that.; > Checkout develop; > Git submodule update externals/codi and opdi; > Checkout this branch; > Commit -a; > (Checkout does not update submodules). Hmm, nothing happened by `git submodule update`. I did some research on the web and I did `git submodule foreach git pull origin master`. It updated medi, meson, ninja, and mutationpp instead of codi and opdi. I'll try to fix it tomorrow. [Edit]; I followed instruction in the answer below. It still shows many changes in codi and opdi. Did I do it correctly?; https://stackoverflow.com/questions/5828324/update-git-submodule-to-latest-commit-on-origin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894791318
https://github.com/su2code/SU2/pull/1329#issuecomment-894791720:279,Deployability,update,updates,279,> Thank you again for reviving this feature.; > I think this is good to go but let's give Tobi and others some time to also take a final look. Thank you for giving me a lot of advice. I noticed the number of comments on this PR is much larger than others. I will still make some updates while waiting for others to review.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894791720
https://github.com/su2code/SU2/pull/1329#issuecomment-894794184:202,Availability,error,error,202,"> I would focus more on discrete adjoint Vs finite differences, the direct mode can be tricky sometimes.; > About the discrepancy, you can try changing the finite difference step (especially if the 20% error is for small derivatives). I have reduced FIN_DIFF_STEP from 0.001 to 0.0001. Discrepancy is about 2% now. Can I consider this is acceptable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894794184
https://github.com/su2code/SU2/pull/1329#issuecomment-894794184:242,Energy Efficiency,reduce,reduced,242,"> I would focus more on discrete adjoint Vs finite differences, the direct mode can be tricky sometimes.; > About the discrepancy, you can try changing the finite difference step (especially if the 20% error is for small derivatives). I have reduced FIN_DIFF_STEP from 0.001 to 0.0001. Discrepancy is about 2% now. Can I consider this is acceptable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894794184
https://github.com/su2code/SU2/pull/1329#issuecomment-894929286:108,Integrability,message,message,108,"Hi @TobiKattmann . > > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > > ; > > ; > > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth; > ; > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1. I tested with single core and this message appears as well. Again, I don't see a point of this message and need to know the original intent.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286
https://github.com/su2code/SU2/pull/1329#issuecomment-894929286:149,Integrability,message,message,149,"Hi @TobiKattmann . > > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > > ; > > ; > > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth; > ; > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1. I tested with single core and this message appears as well. Again, I don't see a point of this message and need to know the original intent.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286
https://github.com/su2code/SU2/pull/1329#issuecomment-894929286:1071,Integrability,message,message,1071,"Hi @TobiKattmann . > > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > > ; > > ; > > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth; > ; > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1. I tested with single core and this message appears as well. Again, I don't see a point of this message and need to know the original intent.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286
https://github.com/su2code/SU2/pull/1329#issuecomment-894929286:1131,Integrability,message,message,1131,"Hi @TobiKattmann . > > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > > ; > > ; > > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth; > ; > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1. I tested with single core and this message appears as well. Again, I don't see a point of this message and need to know the original intent.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286
https://github.com/su2code/SU2/pull/1329#issuecomment-894929286:673,Testability,test,tested,673,"Hi @TobiKattmann . > > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > > ; > > ; > > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth; > ; > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1. I tested with single core and this message appears as well. Again, I don't see a point of this message and need to know the original intent.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286
https://github.com/su2code/SU2/pull/1329#issuecomment-894929286:1038,Testability,test,tested,1038,"Hi @TobiKattmann . > > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > > ; > > ; > > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth; > ; > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1. I tested with single core and this message appears as well. Again, I don't see a point of this message and need to know the original intent.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286
https://github.com/su2code/SU2/pull/1329#issuecomment-894934546:161,Deployability,update,update,161,"I think I have addressed all the comments. Let me know if there is anything that still needs to be fixed.; I have created a PR#69 in the TestCases repository to update FFD box in the mesh file. Please merge it. It is not required for regression but it is required if someone wants to check derivatives are correctly calculated. As I mentioned in the previous [post](https://github.com/su2code/SU2/pull/1329#issuecomment-884793528), there are still some remaining issues shown below. They were there before this PR. I would like to defer them to future PRs once I understand more about how SU2 works. - WeightNF.dat; - VENKATAKRISHNAN limiter; - `Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894934546
https://github.com/su2code/SU2/pull/1329#issuecomment-894934546:137,Testability,Test,TestCases,137,"I think I have addressed all the comments. Let me know if there is anything that still needs to be fixed.; I have created a PR#69 in the TestCases repository to update FFD box in the mesh file. Please merge it. It is not required for regression but it is required if someone wants to check derivatives are correctly calculated. As I mentioned in the previous [post](https://github.com/su2code/SU2/pull/1329#issuecomment-884793528), there are still some remaining issues shown below. They were there before this PR. I would like to defer them to future PRs once I understand more about how SU2 works. - WeightNF.dat; - VENKATAKRISHNAN limiter; - `Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894934546
https://github.com/su2code/SU2/pull/1329#issuecomment-897754020:50,Testability,test,tested,50,"> Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField, ; the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have ; real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance ; exceeding 1e-1. Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-897754020
https://github.com/su2code/SU2/pull/1329#issuecomment-897967394:12,Energy Efficiency,Green,Green-Gauss,12,For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-897967394
https://github.com/su2code/SU2/pull/1329#issuecomment-898144522:1539,Energy Efficiency,Green,Green-Gauss,1539,"Hi @TobiKattmann . Thank you for making lots of suggestions. I'm out of town now, so I'll address those once I get back later this week. > > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > exceeding 1e-1.; > ; > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :). Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. > For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones. @pcarruscag So, I need to make something similar to internal boundaries? The flowfield looked reasonable though except when I use the VENKATAKRISHNAN limiter where the nearfield boundary seemed to act like half permeable wall.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522
https://github.com/su2code/SU2/pull/1329#issuecomment-898144522:1391,Integrability,message,message,1391,"Hi @TobiKattmann . Thank you for making lots of suggestions. I'm out of town now, so I'll address those once I get back later this week. > > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > exceeding 1e-1.; > ; > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :). Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. > For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones. @pcarruscag So, I need to make something similar to internal boundaries? The flowfield looked reasonable though except when I use the VENKATAKRISHNAN limiter where the nearfield boundary seemed to act like half permeable wall.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522
https://github.com/su2code/SU2/pull/1329#issuecomment-898144522:189,Testability,test,tested,189,"Hi @TobiKattmann . Thank you for making lots of suggestions. I'm out of town now, so I'll address those once I get back later this week. > > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > exceeding 1e-1.; > ; > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :). Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. > For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones. @pcarruscag So, I need to make something similar to internal boundaries? The flowfield looked reasonable though except when I use the VENKATAKRISHNAN limiter where the nearfield boundary seemed to act like half permeable wall.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522
https://github.com/su2code/SU2/pull/1329#issuecomment-898476956:80,Integrability,rout,routine,80,@pcarruscag I guess the last to changes were in the equivalent area computation routine so they shouldn't alter the result of 'discadj_incomp_cylinder' in hybrid_regression_AD? Why does it fail?. In the flamelet PR I am currently fixing all regression tests and conflicts and I noticed in one of the recent runs that hybrid_regression_AD failed for a case which I couldn't explain at all. Rerunning the regression tests without any code modification solved that problem... so there seems to be some non-deterministic behavior maybe. @jblueh have you noticed such behaviour over at #1294 ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898476956
https://github.com/su2code/SU2/pull/1329#issuecomment-898476956:252,Testability,test,tests,252,@pcarruscag I guess the last to changes were in the equivalent area computation routine so they shouldn't alter the result of 'discadj_incomp_cylinder' in hybrid_regression_AD? Why does it fail?. In the flamelet PR I am currently fixing all regression tests and conflicts and I noticed in one of the recent runs that hybrid_regression_AD failed for a case which I couldn't explain at all. Rerunning the regression tests without any code modification solved that problem... so there seems to be some non-deterministic behavior maybe. @jblueh have you noticed such behaviour over at #1294 ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898476956
https://github.com/su2code/SU2/pull/1329#issuecomment-898476956:414,Testability,test,tests,414,@pcarruscag I guess the last to changes were in the equivalent area computation routine so they shouldn't alter the result of 'discadj_incomp_cylinder' in hybrid_regression_AD? Why does it fail?. In the flamelet PR I am currently fixing all regression tests and conflicts and I noticed in one of the recent runs that hybrid_regression_AD failed for a case which I couldn't explain at all. Rerunning the regression tests without any code modification solved that problem... so there seems to be some non-deterministic behavior maybe. @jblueh have you noticed such behaviour over at #1294 ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898476956
https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:2087,Deployability,configurat,configuration,2087," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111
https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:1985,Energy Efficiency,adapt,adaptation,1985," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111
https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:2054,Energy Efficiency,adapt,adaptation,2054," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111
https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:2153,Energy Efficiency,adapt,adaptation,2153," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111
https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:1427,Integrability,message,message,1427," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111
https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:1608,Integrability,message,message,1608," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111
https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:1985,Modifiability,adapt,adaptation,1985," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111
https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:2054,Modifiability,adapt,adaptation,2054," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111
https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:2087,Modifiability,config,configuration,2087," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111
https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:2153,Modifiability,adapt,adaptation,2153," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111
https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:203,Testability,test,tested,203,"> Hi @TobiKattmann; > ; > Thank you for making lots of suggestions. I'm out of town now, so I'll address those once I get back later this week.; > ; > > > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to ma",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111
https://github.com/su2code/SU2/pull/1329#issuecomment-899009860:16,Energy Efficiency,Green,Green-Gauss,16,"> > For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones.; > ; > @pcarruscag So, I need to make something similar to internal boundaries? The flowfield looked reasonable though except when I use the VENKATAKRISHNAN limiter where the nearfield boundary seemed to act like half permeable wall. I am doing some trials after `NEARFIELD_BOUNDARY` is excluded in `computeGradientsGreenGauss` like `INTERNAL_BOUNDARY`. The result looks more reasonable and also the issue I encountered with VENKATAKRISHNAN limiter appears to have been fixed. Can I add changes in this PR or should I create a new PR to address it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-899009860
https://github.com/su2code/SU2/pull/1330#issuecomment-897951125:40,Deployability,release,release,40,"It helps me with the manual edit of the release notes, to know what was not merged yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-897951125
https://github.com/su2code/SU2/pull/1330#issuecomment-905608752:37,Modifiability,Variab,Variable,37,"Things done:; - Create CScalarSolver/Variable classes that now sits between CSolver/Variable and CTurbSolver/Variable; - Move variables/methods to CScalar-land for which one can reasonably assume that they will be useful for future children of the CScalar-family; - That implies, that the rest remains in Turbulence land mostly(!) untouched; - Mostly, because I renamed (Set)TurbVar[-,Gradient] variables/methods in CNumerics which result in changing that all over turb_diff/conv/sources. They hear by the name (Set)ScalarVar* now; And that's it for now. I added some personal comments in the code here and there that will be removed. Next up (coming to a PR near you soon):; - add CSpeciesSolver/Variable with appropriate Upwind/Viscous_Residual and Boundary conditions; - The first step will be a truly Passive Species transport but then ...; - ...introduce the mixture properties of @mheimgartner from #1332 i.e. make the transport equation 'active'. This comes along with some more necessary changes to CConfig. I am not sure yet what is the best order of tackling that. We'll see...; - @mheimgartner work concentrates on 1 additional transport equation. The idea is of course to make it as general as possible but it might be wiser to just go with 1 for the beginning.; - For that setup (2 components mixing) we'll want to get validated gradients going; - The more general way will be needed to merge with @danielmayer #1223 but that would be the step after the above mentioned. @bigfooted that i what I currently have in mind but feel free to chime in here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-905608752
https://github.com/su2code/SU2/pull/1330#issuecomment-905608752:84,Modifiability,Variab,Variable,84,"Things done:; - Create CScalarSolver/Variable classes that now sits between CSolver/Variable and CTurbSolver/Variable; - Move variables/methods to CScalar-land for which one can reasonably assume that they will be useful for future children of the CScalar-family; - That implies, that the rest remains in Turbulence land mostly(!) untouched; - Mostly, because I renamed (Set)TurbVar[-,Gradient] variables/methods in CNumerics which result in changing that all over turb_diff/conv/sources. They hear by the name (Set)ScalarVar* now; And that's it for now. I added some personal comments in the code here and there that will be removed. Next up (coming to a PR near you soon):; - add CSpeciesSolver/Variable with appropriate Upwind/Viscous_Residual and Boundary conditions; - The first step will be a truly Passive Species transport but then ...; - ...introduce the mixture properties of @mheimgartner from #1332 i.e. make the transport equation 'active'. This comes along with some more necessary changes to CConfig. I am not sure yet what is the best order of tackling that. We'll see...; - @mheimgartner work concentrates on 1 additional transport equation. The idea is of course to make it as general as possible but it might be wiser to just go with 1 for the beginning.; - For that setup (2 components mixing) we'll want to get validated gradients going; - The more general way will be needed to merge with @danielmayer #1223 but that would be the step after the above mentioned. @bigfooted that i what I currently have in mind but feel free to chime in here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-905608752
https://github.com/su2code/SU2/pull/1330#issuecomment-905608752:109,Modifiability,Variab,Variable,109,"Things done:; - Create CScalarSolver/Variable classes that now sits between CSolver/Variable and CTurbSolver/Variable; - Move variables/methods to CScalar-land for which one can reasonably assume that they will be useful for future children of the CScalar-family; - That implies, that the rest remains in Turbulence land mostly(!) untouched; - Mostly, because I renamed (Set)TurbVar[-,Gradient] variables/methods in CNumerics which result in changing that all over turb_diff/conv/sources. They hear by the name (Set)ScalarVar* now; And that's it for now. I added some personal comments in the code here and there that will be removed. Next up (coming to a PR near you soon):; - add CSpeciesSolver/Variable with appropriate Upwind/Viscous_Residual and Boundary conditions; - The first step will be a truly Passive Species transport but then ...; - ...introduce the mixture properties of @mheimgartner from #1332 i.e. make the transport equation 'active'. This comes along with some more necessary changes to CConfig. I am not sure yet what is the best order of tackling that. We'll see...; - @mheimgartner work concentrates on 1 additional transport equation. The idea is of course to make it as general as possible but it might be wiser to just go with 1 for the beginning.; - For that setup (2 components mixing) we'll want to get validated gradients going; - The more general way will be needed to merge with @danielmayer #1223 but that would be the step after the above mentioned. @bigfooted that i what I currently have in mind but feel free to chime in here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-905608752
https://github.com/su2code/SU2/pull/1330#issuecomment-905608752:126,Modifiability,variab,variables,126,"Things done:; - Create CScalarSolver/Variable classes that now sits between CSolver/Variable and CTurbSolver/Variable; - Move variables/methods to CScalar-land for which one can reasonably assume that they will be useful for future children of the CScalar-family; - That implies, that the rest remains in Turbulence land mostly(!) untouched; - Mostly, because I renamed (Set)TurbVar[-,Gradient] variables/methods in CNumerics which result in changing that all over turb_diff/conv/sources. They hear by the name (Set)ScalarVar* now; And that's it for now. I added some personal comments in the code here and there that will be removed. Next up (coming to a PR near you soon):; - add CSpeciesSolver/Variable with appropriate Upwind/Viscous_Residual and Boundary conditions; - The first step will be a truly Passive Species transport but then ...; - ...introduce the mixture properties of @mheimgartner from #1332 i.e. make the transport equation 'active'. This comes along with some more necessary changes to CConfig. I am not sure yet what is the best order of tackling that. We'll see...; - @mheimgartner work concentrates on 1 additional transport equation. The idea is of course to make it as general as possible but it might be wiser to just go with 1 for the beginning.; - For that setup (2 components mixing) we'll want to get validated gradients going; - The more general way will be needed to merge with @danielmayer #1223 but that would be the step after the above mentioned. @bigfooted that i what I currently have in mind but feel free to chime in here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-905608752
https://github.com/su2code/SU2/pull/1330#issuecomment-905608752:395,Modifiability,variab,variables,395,"Things done:; - Create CScalarSolver/Variable classes that now sits between CSolver/Variable and CTurbSolver/Variable; - Move variables/methods to CScalar-land for which one can reasonably assume that they will be useful for future children of the CScalar-family; - That implies, that the rest remains in Turbulence land mostly(!) untouched; - Mostly, because I renamed (Set)TurbVar[-,Gradient] variables/methods in CNumerics which result in changing that all over turb_diff/conv/sources. They hear by the name (Set)ScalarVar* now; And that's it for now. I added some personal comments in the code here and there that will be removed. Next up (coming to a PR near you soon):; - add CSpeciesSolver/Variable with appropriate Upwind/Viscous_Residual and Boundary conditions; - The first step will be a truly Passive Species transport but then ...; - ...introduce the mixture properties of @mheimgartner from #1332 i.e. make the transport equation 'active'. This comes along with some more necessary changes to CConfig. I am not sure yet what is the best order of tackling that. We'll see...; - @mheimgartner work concentrates on 1 additional transport equation. The idea is of course to make it as general as possible but it might be wiser to just go with 1 for the beginning.; - For that setup (2 components mixing) we'll want to get validated gradients going; - The more general way will be needed to merge with @danielmayer #1223 but that would be the step after the above mentioned. @bigfooted that i what I currently have in mind but feel free to chime in here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-905608752
https://github.com/su2code/SU2/pull/1330#issuecomment-905608752:697,Modifiability,Variab,Variable,697,"Things done:; - Create CScalarSolver/Variable classes that now sits between CSolver/Variable and CTurbSolver/Variable; - Move variables/methods to CScalar-land for which one can reasonably assume that they will be useful for future children of the CScalar-family; - That implies, that the rest remains in Turbulence land mostly(!) untouched; - Mostly, because I renamed (Set)TurbVar[-,Gradient] variables/methods in CNumerics which result in changing that all over turb_diff/conv/sources. They hear by the name (Set)ScalarVar* now; And that's it for now. I added some personal comments in the code here and there that will be removed. Next up (coming to a PR near you soon):; - add CSpeciesSolver/Variable with appropriate Upwind/Viscous_Residual and Boundary conditions; - The first step will be a truly Passive Species transport but then ...; - ...introduce the mixture properties of @mheimgartner from #1332 i.e. make the transport equation 'active'. This comes along with some more necessary changes to CConfig. I am not sure yet what is the best order of tackling that. We'll see...; - @mheimgartner work concentrates on 1 additional transport equation. The idea is of course to make it as general as possible but it might be wiser to just go with 1 for the beginning.; - For that setup (2 components mixing) we'll want to get validated gradients going; - The more general way will be needed to merge with @danielmayer #1223 but that would be the step after the above mentioned. @bigfooted that i what I currently have in mind but feel free to chime in here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-905608752
https://github.com/su2code/SU2/pull/1330#issuecomment-905608752:1332,Security,validat,validated,1332,"Things done:; - Create CScalarSolver/Variable classes that now sits between CSolver/Variable and CTurbSolver/Variable; - Move variables/methods to CScalar-land for which one can reasonably assume that they will be useful for future children of the CScalar-family; - That implies, that the rest remains in Turbulence land mostly(!) untouched; - Mostly, because I renamed (Set)TurbVar[-,Gradient] variables/methods in CNumerics which result in changing that all over turb_diff/conv/sources. They hear by the name (Set)ScalarVar* now; And that's it for now. I added some personal comments in the code here and there that will be removed. Next up (coming to a PR near you soon):; - add CSpeciesSolver/Variable with appropriate Upwind/Viscous_Residual and Boundary conditions; - The first step will be a truly Passive Species transport but then ...; - ...introduce the mixture properties of @mheimgartner from #1332 i.e. make the transport equation 'active'. This comes along with some more necessary changes to CConfig. I am not sure yet what is the best order of tackling that. We'll see...; - @mheimgartner work concentrates on 1 additional transport equation. The idea is of course to make it as general as possible but it might be wiser to just go with 1 for the beginning.; - For that setup (2 components mixing) we'll want to get validated gradients going; - The more general way will be needed to merge with @danielmayer #1223 but that would be the step after the above mentioned. @bigfooted that i what I currently have in mind but feel free to chime in here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-905608752
https://github.com/su2code/SU2/pull/1330#issuecomment-925066101:632,Modifiability,Extend,Extend,632,"Thanks @pcarruscag for making this PR a lot better. @bigfooted @danielmayer @mheimgartner ; To layout future steps as discussed after this merge: ; 1. Merge these changes into feature_flamelet (and then feature_multicomp). Therefore the `CScalar*` things that are currently present in these branches will be renamed to CLegacyScalar* to not overwrite files. This has the advantage that those branches are kept up-to-date with develop.; 2. Implement a rudimentary (passive) CSpeciesSolver (specifically does not contain multicomponent mixing from #1332 ) and merge that. Finding a good (validation) Testcase would be great here.; 3. Extend the CSpeciesSolver by #1332 mixing models. Either by cutting away all the flamelet specific parts or by porting the additions to a new PR.; 4. Make feature_flamelet switch to the new structure. This is an in-place change as both implementations are then present but just one will be kept. This will shrink the PR size of #1223 by quite a bit . Additionally the heat and radiation solver should be ported into this new structure, but that is independent work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-925066101
https://github.com/su2code/SU2/pull/1330#issuecomment-925066101:586,Security,validat,validation,586,"Thanks @pcarruscag for making this PR a lot better. @bigfooted @danielmayer @mheimgartner ; To layout future steps as discussed after this merge: ; 1. Merge these changes into feature_flamelet (and then feature_multicomp). Therefore the `CScalar*` things that are currently present in these branches will be renamed to CLegacyScalar* to not overwrite files. This has the advantage that those branches are kept up-to-date with develop.; 2. Implement a rudimentary (passive) CSpeciesSolver (specifically does not contain multicomponent mixing from #1332 ) and merge that. Finding a good (validation) Testcase would be great here.; 3. Extend the CSpeciesSolver by #1332 mixing models. Either by cutting away all the flamelet specific parts or by porting the additions to a new PR.; 4. Make feature_flamelet switch to the new structure. This is an in-place change as both implementations are then present but just one will be kept. This will shrink the PR size of #1223 by quite a bit . Additionally the heat and radiation solver should be ported into this new structure, but that is independent work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-925066101
https://github.com/su2code/SU2/pull/1330#issuecomment-925066101:598,Testability,Test,Testcase,598,"Thanks @pcarruscag for making this PR a lot better. @bigfooted @danielmayer @mheimgartner ; To layout future steps as discussed after this merge: ; 1. Merge these changes into feature_flamelet (and then feature_multicomp). Therefore the `CScalar*` things that are currently present in these branches will be renamed to CLegacyScalar* to not overwrite files. This has the advantage that those branches are kept up-to-date with develop.; 2. Implement a rudimentary (passive) CSpeciesSolver (specifically does not contain multicomponent mixing from #1332 ) and merge that. Finding a good (validation) Testcase would be great here.; 3. Extend the CSpeciesSolver by #1332 mixing models. Either by cutting away all the flamelet specific parts or by porting the additions to a new PR.; 4. Make feature_flamelet switch to the new structure. This is an in-place change as both implementations are then present but just one will be kept. This will shrink the PR size of #1223 by quite a bit . Additionally the heat and radiation solver should be ported into this new structure, but that is independent work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-925066101
https://github.com/su2code/SU2/issues/1331#issuecomment-894827611:65,Testability,test,tests,65,I cannot reproduce the problem with the develop branch and these tests run very very often.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331#issuecomment-894827611
https://github.com/su2code/SU2/pull/1332#issuecomment-885546022:120,Availability,error,errors,120,"@mheimgartner first of all congrats to this openend PR. For the builds in the tests, compiler warnings are treated like errors. I.e. the code compiles and works on your side but the test-builds won't if certain warnings are present (like unused variables). ; For more information where to look, see the `Details` button next to the individual builds. Click and wait a moment ... that will automatically scroll down for you. ; The failing builds will be for the same code bits probably, so looking at BaseNoMPI for the start should suffice. To look in the `Details` and change code from there might be tedious so you can see the warnings locally by setting `./meson.py <your build folder> ... --warnlevel=3 ...`. Work through the warnings until there are none left -> commit the changes and push. That will probably calm the compiler-warnings-are-errors gods and grant you access to the regression test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022
https://github.com/su2code/SU2/pull/1332#issuecomment-885546022:410,Availability,down,down,410,"@mheimgartner first of all congrats to this openend PR. For the builds in the tests, compiler warnings are treated like errors. I.e. the code compiles and works on your side but the test-builds won't if certain warnings are present (like unused variables). ; For more information where to look, see the `Details` button next to the individual builds. Click and wait a moment ... that will automatically scroll down for you. ; The failing builds will be for the same code bits probably, so looking at BaseNoMPI for the start should suffice. To look in the `Details` and change code from there might be tedious so you can see the warnings locally by setting `./meson.py <your build folder> ... --warnlevel=3 ...`. Work through the warnings until there are none left -> commit the changes and push. That will probably calm the compiler-warnings-are-errors gods and grant you access to the regression test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022
https://github.com/su2code/SU2/pull/1332#issuecomment-885546022:846,Availability,error,errors,846,"@mheimgartner first of all congrats to this openend PR. For the builds in the tests, compiler warnings are treated like errors. I.e. the code compiles and works on your side but the test-builds won't if certain warnings are present (like unused variables). ; For more information where to look, see the `Details` button next to the individual builds. Click and wait a moment ... that will automatically scroll down for you. ; The failing builds will be for the same code bits probably, so looking at BaseNoMPI for the start should suffice. To look in the `Details` and change code from there might be tedious so you can see the warnings locally by setting `./meson.py <your build folder> ... --warnlevel=3 ...`. Work through the warnings until there are none left -> commit the changes and push. That will probably calm the compiler-warnings-are-errors gods and grant you access to the regression test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022
https://github.com/su2code/SU2/pull/1332#issuecomment-885546022:245,Modifiability,variab,variables,245,"@mheimgartner first of all congrats to this openend PR. For the builds in the tests, compiler warnings are treated like errors. I.e. the code compiles and works on your side but the test-builds won't if certain warnings are present (like unused variables). ; For more information where to look, see the `Details` button next to the individual builds. Click and wait a moment ... that will automatically scroll down for you. ; The failing builds will be for the same code bits probably, so looking at BaseNoMPI for the start should suffice. To look in the `Details` and change code from there might be tedious so you can see the warnings locally by setting `./meson.py <your build folder> ... --warnlevel=3 ...`. Work through the warnings until there are none left -> commit the changes and push. That will probably calm the compiler-warnings-are-errors gods and grant you access to the regression test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022
https://github.com/su2code/SU2/pull/1332#issuecomment-885546022:872,Security,access,access,872,"@mheimgartner first of all congrats to this openend PR. For the builds in the tests, compiler warnings are treated like errors. I.e. the code compiles and works on your side but the test-builds won't if certain warnings are present (like unused variables). ; For more information where to look, see the `Details` button next to the individual builds. Click and wait a moment ... that will automatically scroll down for you. ; The failing builds will be for the same code bits probably, so looking at BaseNoMPI for the start should suffice. To look in the `Details` and change code from there might be tedious so you can see the warnings locally by setting `./meson.py <your build folder> ... --warnlevel=3 ...`. Work through the warnings until there are none left -> commit the changes and push. That will probably calm the compiler-warnings-are-errors gods and grant you access to the regression test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022
https://github.com/su2code/SU2/pull/1332#issuecomment-885546022:78,Testability,test,tests,78,"@mheimgartner first of all congrats to this openend PR. For the builds in the tests, compiler warnings are treated like errors. I.e. the code compiles and works on your side but the test-builds won't if certain warnings are present (like unused variables). ; For more information where to look, see the `Details` button next to the individual builds. Click and wait a moment ... that will automatically scroll down for you. ; The failing builds will be for the same code bits probably, so looking at BaseNoMPI for the start should suffice. To look in the `Details` and change code from there might be tedious so you can see the warnings locally by setting `./meson.py <your build folder> ... --warnlevel=3 ...`. Work through the warnings until there are none left -> commit the changes and push. That will probably calm the compiler-warnings-are-errors gods and grant you access to the regression test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022
https://github.com/su2code/SU2/pull/1332#issuecomment-885546022:182,Testability,test,test-builds,182,"@mheimgartner first of all congrats to this openend PR. For the builds in the tests, compiler warnings are treated like errors. I.e. the code compiles and works on your side but the test-builds won't if certain warnings are present (like unused variables). ; For more information where to look, see the `Details` button next to the individual builds. Click and wait a moment ... that will automatically scroll down for you. ; The failing builds will be for the same code bits probably, so looking at BaseNoMPI for the start should suffice. To look in the `Details` and change code from there might be tedious so you can see the warnings locally by setting `./meson.py <your build folder> ... --warnlevel=3 ...`. Work through the warnings until there are none left -> commit the changes and push. That will probably calm the compiler-warnings-are-errors gods and grant you access to the regression test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022
https://github.com/su2code/SU2/pull/1332#issuecomment-885546022:897,Testability,test,test,897,"@mheimgartner first of all congrats to this openend PR. For the builds in the tests, compiler warnings are treated like errors. I.e. the code compiles and works on your side but the test-builds won't if certain warnings are present (like unused variables). ; For more information where to look, see the `Details` button next to the individual builds. Click and wait a moment ... that will automatically scroll down for you. ; The failing builds will be for the same code bits probably, so looking at BaseNoMPI for the start should suffice. To look in the `Details` and change code from there might be tedious so you can see the warnings locally by setting `./meson.py <your build folder> ... --warnlevel=3 ...`. Work through the warnings until there are none left -> commit the changes and push. That will probably calm the compiler-warnings-are-errors gods and grant you access to the regression test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022
https://github.com/su2code/SU2/pull/1332#issuecomment-889692434:434,Availability,avail,available,434,"> Hi @mheimgartner, thanks for the PR. I think this is a good use of the fluidmodel classes. There seems to be a lot of potential to generalize some aspects of Mixture_Fluid_Model and CNEMOGas. Im not sure what the best plan to approach this may be, but I think its something worth discussing. @WallyMaier I think there might be some overlap in fluid properties like mixing models as well, but I do not know what information you have available in a library like mutation++. I assume that it has general fluid property calculations and mixing rules available that could be used (wilke rule, kinetic models, etc)?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-889692434
https://github.com/su2code/SU2/pull/1332#issuecomment-889692434:548,Availability,avail,available,548,"> Hi @mheimgartner, thanks for the PR. I think this is a good use of the fluidmodel classes. There seems to be a lot of potential to generalize some aspects of Mixture_Fluid_Model and CNEMOGas. Im not sure what the best plan to approach this may be, but I think its something worth discussing. @WallyMaier I think there might be some overlap in fluid properties like mixing models as well, but I do not know what information you have available in a library like mutation++. I assume that it has general fluid property calculations and mixing rules available that could be used (wilke rule, kinetic models, etc)?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-889692434
https://github.com/su2code/SU2/pull/1332#issuecomment-889993718:443,Availability,avail,available,443,"> > Hi @mheimgartner, thanks for the PR. I think this is a good use of the fluidmodel classes. There seems to be a lot of potential to generalize some aspects of Mixture_Fluid_Model and CNEMOGas. Im not sure what the best plan to approach this may be, but I think its something worth discussing.; > ; > @WallyMaier I think there might be some overlap in fluid properties like mixing models as well, but I do not know what information you have available in a library like mutation++. I assume that it has general fluid property calculations and mixing rules available that could be used (wilke rule, kinetic models, etc)?. @bigfooted Thats correct! Both the CNEMOGas fluid models (SU2TCLib and CMutation++) have thermodynamic properties and transport properties. I imagine there would be a smart way to reduce overlap, though Im not sure what the best approach would be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-889993718
https://github.com/su2code/SU2/pull/1332#issuecomment-889993718:557,Availability,avail,available,557,"> > Hi @mheimgartner, thanks for the PR. I think this is a good use of the fluidmodel classes. There seems to be a lot of potential to generalize some aspects of Mixture_Fluid_Model and CNEMOGas. Im not sure what the best plan to approach this may be, but I think its something worth discussing.; > ; > @WallyMaier I think there might be some overlap in fluid properties like mixing models as well, but I do not know what information you have available in a library like mutation++. I assume that it has general fluid property calculations and mixing rules available that could be used (wilke rule, kinetic models, etc)?. @bigfooted Thats correct! Both the CNEMOGas fluid models (SU2TCLib and CMutation++) have thermodynamic properties and transport properties. I imagine there would be a smart way to reduce overlap, though Im not sure what the best approach would be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-889993718
https://github.com/su2code/SU2/pull/1332#issuecomment-889993718:802,Energy Efficiency,reduce,reduce,802,"> > Hi @mheimgartner, thanks for the PR. I think this is a good use of the fluidmodel classes. There seems to be a lot of potential to generalize some aspects of Mixture_Fluid_Model and CNEMOGas. Im not sure what the best plan to approach this may be, but I think its something worth discussing.; > ; > @WallyMaier I think there might be some overlap in fluid properties like mixing models as well, but I do not know what information you have available in a library like mutation++. I assume that it has general fluid property calculations and mixing rules available that could be used (wilke rule, kinetic models, etc)?. @bigfooted Thats correct! Both the CNEMOGas fluid models (SU2TCLib and CMutation++) have thermodynamic properties and transport properties. I imagine there would be a smart way to reduce overlap, though Im not sure what the best approach would be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-889993718
https://github.com/su2code/SU2/pull/1332#issuecomment-898048781:36,Testability,test,testcases,36,I hope to have fixed all regression testcases over at feature_flamelet so please merge and see whether we can get some ✔️'s here as well,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-898048781
https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:343,Deployability,update,update,343,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447
https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:506,Deployability,update,update,506,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447
https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:596,Integrability,depend,depending,596,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447
https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:845,Modifiability,variab,variable,845,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447
https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:93,Testability,Test,Testcases,93,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447
https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:299,Testability,test,test,299,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447
https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:917,Testability,test,tested,917,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447
https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:1374,Testability,test,test,1374,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447
https://github.com/su2code/SU2/issues/1335#issuecomment-1000842111:364,Deployability,install,installed,364,"Right... I've finally fix this. The manual/offline build with meson will work in the next version.; For completeness, there is another way to work ""offline"", on a machine with internet access clone the SU2 repo using `git clone`, then run meson which will initialize the submodules, finally copy **everything** to the offline machine.; If this machine **has git** installed, it will detect that the submodules are present.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335#issuecomment-1000842111
https://github.com/su2code/SU2/issues/1335#issuecomment-1000842111:383,Safety,detect,detect,383,"Right... I've finally fix this. The manual/offline build with meson will work in the next version.; For completeness, there is another way to work ""offline"", on a machine with internet access clone the SU2 repo using `git clone`, then run meson which will initialize the submodules, finally copy **everything** to the offline machine.; If this machine **has git** installed, it will detect that the submodules are present.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335#issuecomment-1000842111
https://github.com/su2code/SU2/issues/1335#issuecomment-1000842111:185,Security,access,access,185,"Right... I've finally fix this. The manual/offline build with meson will work in the next version.; For completeness, there is another way to work ""offline"", on a machine with internet access clone the SU2 repo using `git clone`, then run meson which will initialize the submodules, finally copy **everything** to the offline machine.; If this machine **has git** installed, it will detect that the submodules are present.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335#issuecomment-1000842111
https://github.com/su2code/SU2/issues/1336#issuecomment-889916141:118,Testability,test,tests,118,I just noticed that this also means that e.g. SURFACE_STATIC PRESSURE in screen outputs cannot be used for regression tests as the python script needs a delimiter in between values which is not the case with that doubled output.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1336#issuecomment-889916141
https://github.com/su2code/SU2/pull/1340#issuecomment-890297817:305,Modifiability,config,config,305,"> Thanks @fmpmorgado! NEMO definitely needs some speed up! This looks good!; > ; > Regarding the preprocessing, why is the ComputeSoundSpeed() function returning slightly different results?. @WallyMaier . Inside the CNEMOEulerVariable, you set the fluidmodel with the freestream conditions written in the config file and use the ComputeSoundSpeed(). However, in the CNEMOEulerSolver, in the deleted loop, you had GetSoundSpeed(), which retrieves the solution already estabilished in the Primitive Matrix. The Primitive Matrix was estabilished inside the SetPrimVar() function. However, inside the function, we set the fluidmodel with slightly different values than the ones used in the config file, because we first run the iterative process to find the translational and vibrational temperature with the given energies. This iterative process provides slightly different temperatures than the ones in the config file, thus computing slightly different sound speeds",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340#issuecomment-890297817
https://github.com/su2code/SU2/pull/1340#issuecomment-890297817:686,Modifiability,config,config,686,"> Thanks @fmpmorgado! NEMO definitely needs some speed up! This looks good!; > ; > Regarding the preprocessing, why is the ComputeSoundSpeed() function returning slightly different results?. @WallyMaier . Inside the CNEMOEulerVariable, you set the fluidmodel with the freestream conditions written in the config file and use the ComputeSoundSpeed(). However, in the CNEMOEulerSolver, in the deleted loop, you had GetSoundSpeed(), which retrieves the solution already estabilished in the Primitive Matrix. The Primitive Matrix was estabilished inside the SetPrimVar() function. However, inside the function, we set the fluidmodel with slightly different values than the ones used in the config file, because we first run the iterative process to find the translational and vibrational temperature with the given energies. This iterative process provides slightly different temperatures than the ones in the config file, thus computing slightly different sound speeds",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340#issuecomment-890297817
https://github.com/su2code/SU2/pull/1340#issuecomment-890297817:906,Modifiability,config,config,906,"> Thanks @fmpmorgado! NEMO definitely needs some speed up! This looks good!; > ; > Regarding the preprocessing, why is the ComputeSoundSpeed() function returning slightly different results?. @WallyMaier . Inside the CNEMOEulerVariable, you set the fluidmodel with the freestream conditions written in the config file and use the ComputeSoundSpeed(). However, in the CNEMOEulerSolver, in the deleted loop, you had GetSoundSpeed(), which retrieves the solution already estabilished in the Primitive Matrix. The Primitive Matrix was estabilished inside the SetPrimVar() function. However, inside the function, we set the fluidmodel with slightly different values than the ones used in the config file, because we first run the iterative process to find the translational and vibrational temperature with the given energies. This iterative process provides slightly different temperatures than the ones in the config file, thus computing slightly different sound speeds",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340#issuecomment-890297817
https://github.com/su2code/SU2/pull/1342#issuecomment-890918675:11,Testability,test,testing,11,"Thanks for testing. Yep I'm not an expert either, but hopefully we'll have this tested on 4/5 systems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-890918675
https://github.com/su2code/SU2/pull/1342#issuecomment-890918675:80,Testability,test,tested,80,"Thanks for testing. Yep I'm not an expert either, but hopefully we'll have this tested on 4/5 systems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-890918675
https://github.com/su2code/SU2/pull/1342#issuecomment-891801906:33,Deployability,patch,patch,33,"Hello, thank you for posting the patch. I did an initial test yesterday (replaced CParallelFileWriter with this version, and re-compiled (./ninja build install)) and it got hung for >12 hrs on jacobian initialization. I am presently restarting the systems to ensure nothing else is interacting with SU2 prior to attempting the run again. I will let you know how it goes on today's run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891801906
https://github.com/su2code/SU2/pull/1342#issuecomment-891801906:152,Deployability,install,install,152,"Hello, thank you for posting the patch. I did an initial test yesterday (replaced CParallelFileWriter with this version, and re-compiled (./ninja build install)) and it got hung for >12 hrs on jacobian initialization. I am presently restarting the systems to ensure nothing else is interacting with SU2 prior to attempting the run again. I will let you know how it goes on today's run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891801906
https://github.com/su2code/SU2/pull/1342#issuecomment-891801906:57,Testability,test,test,57,"Hello, thank you for posting the patch. I did an initial test yesterday (replaced CParallelFileWriter with this version, and re-compiled (./ninja build install)) and it got hung for >12 hrs on jacobian initialization. I am presently restarting the systems to ensure nothing else is interacting with SU2 prior to attempting the run again. I will let you know how it goes on today's run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891801906
https://github.com/su2code/SU2/pull/1342#issuecomment-891864769:74,Deployability,update,update,74,"Running without restart file: no problems; Running from a (pre- and post- update) restart file: problems - freezes after ""Initialize Jacobian structure (SST model)."" solution_flow.dat-#-#.lock is present in the directory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891864769
https://github.com/su2code/SU2/pull/1342#issuecomment-891983112:77,Deployability,update,update,77,Give me some more details please... I don't know what you mean by pre- post- update.; Does it freeze when you try to run with a restart?; Is the restart created by a previous run on the same folder?; And you are running this back-to-back?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891983112
https://github.com/su2code/SU2/pull/1342#issuecomment-891988465:15,Deployability,update,update,15,"pre- and post- update are referring to restart files created before applying this updated file and restart files created by this updated file, respectively.; When I try to run a restart file, the output proceeds to ""Initialize Jacobian structure (SST model)."" and then does not progress any further.; The restart files were created in the same folder.; Copies of the files were made in between the runs, but otherwise, I believe it still qualifies as back-to-back. (For the post-updated file; the pre-updated restart case is not ""back-to-back"" in a strict interpretation as the software was updated)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891988465
https://github.com/su2code/SU2/pull/1342#issuecomment-891988465:82,Deployability,update,updated,82,"pre- and post- update are referring to restart files created before applying this updated file and restart files created by this updated file, respectively.; When I try to run a restart file, the output proceeds to ""Initialize Jacobian structure (SST model)."" and then does not progress any further.; The restart files were created in the same folder.; Copies of the files were made in between the runs, but otherwise, I believe it still qualifies as back-to-back. (For the post-updated file; the pre-updated restart case is not ""back-to-back"" in a strict interpretation as the software was updated)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891988465
https://github.com/su2code/SU2/pull/1342#issuecomment-891988465:129,Deployability,update,updated,129,"pre- and post- update are referring to restart files created before applying this updated file and restart files created by this updated file, respectively.; When I try to run a restart file, the output proceeds to ""Initialize Jacobian structure (SST model)."" and then does not progress any further.; The restart files were created in the same folder.; Copies of the files were made in between the runs, but otherwise, I believe it still qualifies as back-to-back. (For the post-updated file; the pre-updated restart case is not ""back-to-back"" in a strict interpretation as the software was updated)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891988465
https://github.com/su2code/SU2/pull/1342#issuecomment-891988465:479,Deployability,update,updated,479,"pre- and post- update are referring to restart files created before applying this updated file and restart files created by this updated file, respectively.; When I try to run a restart file, the output proceeds to ""Initialize Jacobian structure (SST model)."" and then does not progress any further.; The restart files were created in the same folder.; Copies of the files were made in between the runs, but otherwise, I believe it still qualifies as back-to-back. (For the post-updated file; the pre-updated restart case is not ""back-to-back"" in a strict interpretation as the software was updated)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891988465
https://github.com/su2code/SU2/pull/1342#issuecomment-891988465:501,Deployability,update,updated,501,"pre- and post- update are referring to restart files created before applying this updated file and restart files created by this updated file, respectively.; When I try to run a restart file, the output proceeds to ""Initialize Jacobian structure (SST model)."" and then does not progress any further.; The restart files were created in the same folder.; Copies of the files were made in between the runs, but otherwise, I believe it still qualifies as back-to-back. (For the post-updated file; the pre-updated restart case is not ""back-to-back"" in a strict interpretation as the software was updated)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891988465
https://github.com/su2code/SU2/pull/1342#issuecomment-891988465:591,Deployability,update,updated,591,"pre- and post- update are referring to restart files created before applying this updated file and restart files created by this updated file, respectively.; When I try to run a restart file, the output proceeds to ""Initialize Jacobian structure (SST model)."" and then does not progress any further.; The restart files were created in the same folder.; Copies of the files were made in between the runs, but otherwise, I believe it still qualifies as back-to-back. (For the post-updated file; the pre-updated restart case is not ""back-to-back"" in a strict interpretation as the software was updated)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891988465
https://github.com/su2code/SU2/pull/1342#issuecomment-891991181:13,Usability,clear,clear,13,"Ok, so to be clear, if you take a fresh directory, place the restart file there and run the code, will it still have this issue?; It sounds like this does not have anything to do with writing, but reading instead... :thinking:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891991181
https://github.com/su2code/SU2/pull/1342#issuecomment-892025673:50,Testability,test,test,50,"I agree that it is very odd.; Having just run the test, I can confirm that a clean folder with the restart file hangs (30+ min).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-892025673
https://github.com/su2code/SU2/pull/1342#issuecomment-894820999:41,Testability,test,testing,41,Thanks @TobiKattmann and @WallyMaier for testing!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-894820999
https://github.com/su2code/SU2/pull/1343#issuecomment-892095823:51,Testability,test,testcases,51,@WallyMaier @CatarinaGarbacz just checked with the testcases Wally provided. All of them pass,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343#issuecomment-892095823
https://github.com/su2code/SU2/pull/1344#issuecomment-892577112:189,Modifiability,variab,variables,189,"By ""Sliding State layer"", do you mean a virtual `CVariable::GetSlidingMeshDonorVariable` that returns 0 by default, but forwards to `GetSolution` on the flow and `GetPrimitive` on the turb variables?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344#issuecomment-892577112
https://github.com/su2code/SU2/pull/1344#issuecomment-896775901:157,Integrability,interface,interfaces,157,Thanks @maxaehle 💐. Not sure how this will interact with scalar solvers (species transport) to come ... but in case someone there wants to work with sliding interfaces then I guess one has to test that a priori,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344#issuecomment-896775901
https://github.com/su2code/SU2/pull/1344#issuecomment-896775901:192,Testability,test,test,192,Thanks @maxaehle 💐. Not sure how this will interact with scalar solvers (species transport) to come ... but in case someone there wants to work with sliding interfaces then I guess one has to test that a priori,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344#issuecomment-896775901
https://github.com/su2code/SU2/issues/1345#issuecomment-892953950:220,Energy Efficiency,efficient,efficient,220,I think you are right.; You joined the dev meeting today as we were ending right? Maybe the European summertime misled you.; Can you open a pull request for this? There are other parts of that function that are not very efficient.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345#issuecomment-892953950
https://github.com/su2code/SU2/pull/1346#issuecomment-895004707:334,Testability,test,tests,334,"The previous commit 4eeb6f9 replaces `std::unordered_set` by `std::set` for the collection of neighbors of a vertex. . For an `unordered_set`, it is not specified in which order the elements show up in the iteration over all neighbors. Through floating-point arithmetics, the order probably influences the residuals in the regression tests; I think few testcases failed because a different order was used. With `unordered_set`, testcases would fail already if another implementation of the standard library is used. In contrast, `set` is sorted by `std::less` by default. `unordered_set` is also used in other places in the code, where it is ok:; - `Point_Map` in `CPhysicalGeometry::DistributeColoring`: only used to sort into `Global2Local`; - `processedMarkers` in `CFlowTractionInterface::ComputeVertexAreas`: not iterated through; - `markerPoints` in `CFEASolver::Set_VertexEliminationSchedule`: not iterated through",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895004707
https://github.com/su2code/SU2/pull/1346#issuecomment-895004707:353,Testability,test,testcases,353,"The previous commit 4eeb6f9 replaces `std::unordered_set` by `std::set` for the collection of neighbors of a vertex. . For an `unordered_set`, it is not specified in which order the elements show up in the iteration over all neighbors. Through floating-point arithmetics, the order probably influences the residuals in the regression tests; I think few testcases failed because a different order was used. With `unordered_set`, testcases would fail already if another implementation of the standard library is used. In contrast, `set` is sorted by `std::less` by default. `unordered_set` is also used in other places in the code, where it is ok:; - `Point_Map` in `CPhysicalGeometry::DistributeColoring`: only used to sort into `Global2Local`; - `processedMarkers` in `CFlowTractionInterface::ComputeVertexAreas`: not iterated through; - `markerPoints` in `CFEASolver::Set_VertexEliminationSchedule`: not iterated through",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895004707
https://github.com/su2code/SU2/pull/1346#issuecomment-895004707:428,Testability,test,testcases,428,"The previous commit 4eeb6f9 replaces `std::unordered_set` by `std::set` for the collection of neighbors of a vertex. . For an `unordered_set`, it is not specified in which order the elements show up in the iteration over all neighbors. Through floating-point arithmetics, the order probably influences the residuals in the regression tests; I think few testcases failed because a different order was used. With `unordered_set`, testcases would fail already if another implementation of the standard library is used. In contrast, `set` is sorted by `std::less` by default. `unordered_set` is also used in other places in the code, where it is ok:; - `Point_Map` in `CPhysicalGeometry::DistributeColoring`: only used to sort into `Global2Local`; - `processedMarkers` in `CFlowTractionInterface::ComputeVertexAreas`: not iterated through; - `markerPoints` in `CFEASolver::Set_VertexEliminationSchedule`: not iterated through",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895004707
https://github.com/su2code/SU2/pull/1346#issuecomment-895007670:233,Energy Efficiency,adapt,adapted,233,"Only the testcases `channel_2D`, `channel_3D` fail. Both use sliding mesh interfaces, but there are also other sliding mesh testcases that do not fail. The residuals are still very close and also the flow fields look similar. I thus adapted the stored residuals in 9d8f194. Let me know if you would like to investigate the changed residuals further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670
https://github.com/su2code/SU2/pull/1346#issuecomment-895007670:74,Integrability,interface,interfaces,74,"Only the testcases `channel_2D`, `channel_3D` fail. Both use sliding mesh interfaces, but there are also other sliding mesh testcases that do not fail. The residuals are still very close and also the flow fields look similar. I thus adapted the stored residuals in 9d8f194. Let me know if you would like to investigate the changed residuals further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670
https://github.com/su2code/SU2/pull/1346#issuecomment-895007670:233,Modifiability,adapt,adapted,233,"Only the testcases `channel_2D`, `channel_3D` fail. Both use sliding mesh interfaces, but there are also other sliding mesh testcases that do not fail. The residuals are still very close and also the flow fields look similar. I thus adapted the stored residuals in 9d8f194. Let me know if you would like to investigate the changed residuals further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670
https://github.com/su2code/SU2/pull/1346#issuecomment-895007670:9,Testability,test,testcases,9,"Only the testcases `channel_2D`, `channel_3D` fail. Both use sliding mesh interfaces, but there are also other sliding mesh testcases that do not fail. The residuals are still very close and also the flow fields look similar. I thus adapted the stored residuals in 9d8f194. Let me know if you would like to investigate the changed residuals further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670
https://github.com/su2code/SU2/pull/1346#issuecomment-895007670:124,Testability,test,testcases,124,"Only the testcases `channel_2D`, `channel_3D` fail. Both use sliding mesh interfaces, but there are also other sliding mesh testcases that do not fail. The residuals are still very close and also the flow fields look similar. I thus adapted the stored residuals in 9d8f194. Let me know if you would like to investigate the changed residuals further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670
https://github.com/su2code/SU2/pull/1346#issuecomment-895019157:89,Testability,test,tests,89,No need to dig anymore. And nevermind the failing hybrid regression (it looks like those tests were waiting to be merged to become flaky 😠 ),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895019157
https://github.com/su2code/SU2/pull/1346#issuecomment-895022534:37,Testability,test,testcase,37,"That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit c68cf13, then I changed the stored residuals of unrelated testcases in 9d8f194 and the testcase fails... I'll run clang-format now, let's see what happens ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895022534
https://github.com/su2code/SU2/pull/1346#issuecomment-895022534:159,Testability,test,testcases,159,"That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit c68cf13, then I changed the stored residuals of unrelated testcases in 9d8f194 and the testcase fails... I'll run clang-format now, let's see what happens ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895022534
https://github.com/su2code/SU2/pull/1346#issuecomment-895022534:188,Testability,test,testcase,188,"That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit c68cf13, then I changed the stored residuals of unrelated testcases in 9d8f194 and the testcase fails... I'll run clang-format now, let's see what happens ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895022534
https://github.com/su2code/SU2/pull/1346#issuecomment-895063802:83,Availability,error,error,83,"I restarted the CI pipeline for 6d9e103. In the first run, there was an additional error that mesh files were missing (??). Now in the second run, the regression tests pass...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895063802
https://github.com/su2code/SU2/pull/1346#issuecomment-895063802:19,Deployability,pipeline,pipeline,19,"I restarted the CI pipeline for 6d9e103. In the first run, there was an additional error that mesh files were missing (??). Now in the second run, the regression tests pass...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895063802
https://github.com/su2code/SU2/pull/1346#issuecomment-895063802:162,Testability,test,tests,162,"I restarted the CI pipeline for 6d9e103. In the first run, there was an additional error that mesh files were missing (??). Now in the second run, the regression tests pass...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895063802
https://github.com/su2code/SU2/pull/1346#issuecomment-898880576:47,Testability,test,testcase,47,"> ; > ; > That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit [c68cf13](https://github.com/su2code/SU2/commit/c68cf13552bc1412b98bda281a92f0b4bd4799ba), then I changed the stored residuals of unrelated testcases in [9d8f194](https://github.com/su2code/SU2/commit/9d8f194eeb4523440b51b3ff4c08018492974198) and the testcase fails... I'll run clang-format now, let's see what happens ;). I had a similar thing over at the flamelet branch and a re-run of the regression tests solved that :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-898880576
https://github.com/su2code/SU2/pull/1346#issuecomment-898880576:251,Testability,test,testcases,251,"> ; > ; > That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit [c68cf13](https://github.com/su2code/SU2/commit/c68cf13552bc1412b98bda281a92f0b4bd4799ba), then I changed the stored residuals of unrelated testcases in [9d8f194](https://github.com/su2code/SU2/commit/9d8f194eeb4523440b51b3ff4c08018492974198) and the testcase fails... I'll run clang-format now, let's see what happens ;). I had a similar thing over at the flamelet branch and a re-run of the regression tests solved that :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-898880576
https://github.com/su2code/SU2/pull/1346#issuecomment-898880576:362,Testability,test,testcase,362,"> ; > ; > That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit [c68cf13](https://github.com/su2code/SU2/commit/c68cf13552bc1412b98bda281a92f0b4bd4799ba), then I changed the stored residuals of unrelated testcases in [9d8f194](https://github.com/su2code/SU2/commit/9d8f194eeb4523440b51b3ff4c08018492974198) and the testcase fails... I'll run clang-format now, let's see what happens ;). I had a similar thing over at the flamelet branch and a re-run of the regression tests solved that :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-898880576
https://github.com/su2code/SU2/pull/1346#issuecomment-898880576:515,Testability,test,tests,515,"> ; > ; > That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit [c68cf13](https://github.com/su2code/SU2/commit/c68cf13552bc1412b98bda281a92f0b4bd4799ba), then I changed the stored residuals of unrelated testcases in [9d8f194](https://github.com/su2code/SU2/commit/9d8f194eeb4523440b51b3ff4c08018492974198) and the testcase fails... I'll run clang-format now, let's see what happens ;). I had a similar thing over at the flamelet branch and a re-run of the regression tests solved that :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-898880576
https://github.com/su2code/SU2/pull/1346#issuecomment-898887334:10,Testability,test,tests,10,"Hybrid AD tests are a bit flaky ATM :shrug: you can merge things without those tests passing, but if more than 1 fails let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-898887334
https://github.com/su2code/SU2/pull/1346#issuecomment-898887334:79,Testability,test,tests,79,"Hybrid AD tests are a bit flaky ATM :shrug: you can merge things without those tests passing, but if more than 1 fails let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-898887334
https://github.com/su2code/SU2/pull/1346#issuecomment-899299081:41,Testability,test,testcase,41,"> > That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit [c68cf13](https://github.com/su2code/SU2/commit/c68cf13552bc1412b98bda281a92f0b4bd4799ba), then I changed the stored residuals of unrelated testcases in [9d8f194](https://github.com/su2code/SU2/commit/9d8f194eeb4523440b51b3ff4c08018492974198) and the testcase fails... I'll run clang-format now, let's see what happens ;); > ; > I had a similar thing over at the flamelet branch and a re-run of the regression tests solved that :). Seems to be like that here as well:; After e95cdfa, only `transonic_stator` in `hybrid_regression_AD.py` failed.; After 475c697, only `discadj_incomp_turb_NACA0012_sa` in `hybrid_regression_AD.py` failed.; After b704f9e no test in `hybrid_regression_AD.py` failed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-899299081
https://github.com/su2code/SU2/pull/1346#issuecomment-899299081:245,Testability,test,testcases,245,"> > That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit [c68cf13](https://github.com/su2code/SU2/commit/c68cf13552bc1412b98bda281a92f0b4bd4799ba), then I changed the stored residuals of unrelated testcases in [9d8f194](https://github.com/su2code/SU2/commit/9d8f194eeb4523440b51b3ff4c08018492974198) and the testcase fails... I'll run clang-format now, let's see what happens ;); > ; > I had a similar thing over at the flamelet branch and a re-run of the regression tests solved that :). Seems to be like that here as well:; After e95cdfa, only `transonic_stator` in `hybrid_regression_AD.py` failed.; After 475c697, only `discadj_incomp_turb_NACA0012_sa` in `hybrid_regression_AD.py` failed.; After b704f9e no test in `hybrid_regression_AD.py` failed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-899299081
https://github.com/su2code/SU2/pull/1346#issuecomment-899299081:356,Testability,test,testcase,356,"> > That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit [c68cf13](https://github.com/su2code/SU2/commit/c68cf13552bc1412b98bda281a92f0b4bd4799ba), then I changed the stored residuals of unrelated testcases in [9d8f194](https://github.com/su2code/SU2/commit/9d8f194eeb4523440b51b3ff4c08018492974198) and the testcase fails... I'll run clang-format now, let's see what happens ;); > ; > I had a similar thing over at the flamelet branch and a re-run of the regression tests solved that :). Seems to be like that here as well:; After e95cdfa, only `transonic_stator` in `hybrid_regression_AD.py` failed.; After 475c697, only `discadj_incomp_turb_NACA0012_sa` in `hybrid_regression_AD.py` failed.; After b704f9e no test in `hybrid_regression_AD.py` failed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-899299081
https://github.com/su2code/SU2/pull/1346#issuecomment-899299081:515,Testability,test,tests,515,"> > That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit [c68cf13](https://github.com/su2code/SU2/commit/c68cf13552bc1412b98bda281a92f0b4bd4799ba), then I changed the stored residuals of unrelated testcases in [9d8f194](https://github.com/su2code/SU2/commit/9d8f194eeb4523440b51b3ff4c08018492974198) and the testcase fails... I'll run clang-format now, let's see what happens ;); > ; > I had a similar thing over at the flamelet branch and a re-run of the regression tests solved that :). Seems to be like that here as well:; After e95cdfa, only `transonic_stator` in `hybrid_regression_AD.py` failed.; After 475c697, only `discadj_incomp_turb_NACA0012_sa` in `hybrid_regression_AD.py` failed.; After b704f9e no test in `hybrid_regression_AD.py` failed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-899299081
https://github.com/su2code/SU2/pull/1346#issuecomment-899299081:760,Testability,test,test,760,"> > That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit [c68cf13](https://github.com/su2code/SU2/commit/c68cf13552bc1412b98bda281a92f0b4bd4799ba), then I changed the stored residuals of unrelated testcases in [9d8f194](https://github.com/su2code/SU2/commit/9d8f194eeb4523440b51b3ff4c08018492974198) and the testcase fails... I'll run clang-format now, let's see what happens ;); > ; > I had a similar thing over at the flamelet branch and a re-run of the regression tests solved that :). Seems to be like that here as well:; After e95cdfa, only `transonic_stator` in `hybrid_regression_AD.py` failed.; After 475c697, only `discadj_incomp_turb_NACA0012_sa` in `hybrid_regression_AD.py` failed.; After b704f9e no test in `hybrid_regression_AD.py` failed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-899299081
https://github.com/su2code/SU2/pull/1347#issuecomment-900695735:34,Deployability,update,update,34,Thanks! It looks like I needed to update a regression with change...strange. But its done.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347#issuecomment-900695735
https://github.com/su2code/SU2/pull/1348#issuecomment-964331342:360,Deployability,release,released,360,This pull request **introduces 10 alerts** when merging e431c51d3b4d217d40d555c331c5cb4ffb35be89 into ccc1c6e58e6f00811f1bb3a176ed4468a113417a - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-0f3a248171ab79a1da0137d72e46bc2e46617e62). **new alerts:**. * 7 for Comparison of narrow type with wide type in loop condition; * 1 for Resource not released in destructor; * 1 for Multiplication result converted to larger type; * 1 for &#39;new\[\]&#39; array freed with &#39;delete&#39;,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348#issuecomment-964331342
https://github.com/su2code/SU2/issues/1349#issuecomment-894776414:138,Testability,Test,TestCases,138,Mpi4 is not compatible with the version of pastix we support.; And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-894776414
https://github.com/su2code/SU2/issues/1349#issuecomment-894838291:142,Testability,Test,TestCases,142,> Mpi4 is not compatible with the version of pastix we support.; > And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2. Thanks for the clarification! I use Mpi4 for most of my programs so that's why I built it that way. I followed this guide for pastix: https://solverstack.gitlabpages.inria.fr/pastix/md_docs_doxygen_chapters_Pastix_Runtime.html. So I build pastix 6.X.X. I will check the test cases directory though for the instructions. Also how does changing openmpi change c++ command line option ? . Thanks 😊,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-894838291
https://github.com/su2code/SU2/issues/1349#issuecomment-894838291:460,Testability,test,test,460,> Mpi4 is not compatible with the version of pastix we support.; > And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2. Thanks for the clarification! I use Mpi4 for most of my programs so that's why I built it that way. I followed this guide for pastix: https://solverstack.gitlabpages.inria.fr/pastix/md_docs_doxygen_chapters_Pastix_Runtime.html. So I build pastix 6.X.X. I will check the test cases directory though for the instructions. Also how does changing openmpi change c++ command line option ? . Thanks 😊,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-894838291
https://github.com/su2code/SU2/issues/1349#issuecomment-894838291:306,Usability,guid,guide,306,> Mpi4 is not compatible with the version of pastix we support.; > And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2. Thanks for the clarification! I use Mpi4 for most of my programs so that's why I built it that way. I followed this guide for pastix: https://solverstack.gitlabpages.inria.fr/pastix/md_docs_doxygen_chapters_Pastix_Runtime.html. So I build pastix 6.X.X. I will check the test cases directory though for the instructions. Also how does changing openmpi change c++ command line option ? . Thanks 😊,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-894838291
https://github.com/su2code/SU2/issues/1349#issuecomment-895069863:294,Availability,error,error,294,> Mpi4 is not compatible with the version of pastix we support.; > And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2. Just followed the pastix instructions from the testcase directory. compilation stops at 443/1058 saying error Cannot use PaStiX with forward mode AD. Picture:; ![image](https://user-images.githubusercontent.com/24353606/128684248-2aae9693-806b-421c-9c13-b2fedbcbe5f1.png). So what am I missing? Also is PasTiX necessary for me to run/use all solvers needed for tutorials/test cases?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895069863
https://github.com/su2code/SU2/issues/1349#issuecomment-895069863:142,Testability,Test,TestCases,142,> Mpi4 is not compatible with the version of pastix we support.; > And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2. Just followed the pastix instructions from the testcase directory. compilation stops at 443/1058 saying error Cannot use PaStiX with forward mode AD. Picture:; ![image](https://user-images.githubusercontent.com/24353606/128684248-2aae9693-806b-421c-9c13-b2fedbcbe5f1.png). So what am I missing? Also is PasTiX necessary for me to run/use all solvers needed for tutorials/test cases?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895069863
https://github.com/su2code/SU2/issues/1349#issuecomment-895069863:237,Testability,test,testcase,237,> Mpi4 is not compatible with the version of pastix we support.; > And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2. Just followed the pastix instructions from the testcase directory. compilation stops at 443/1058 saying error Cannot use PaStiX with forward mode AD. Picture:; ![image](https://user-images.githubusercontent.com/24353606/128684248-2aae9693-806b-421c-9c13-b2fedbcbe5f1.png). So what am I missing? Also is PasTiX necessary for me to run/use all solvers needed for tutorials/test cases?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895069863
https://github.com/su2code/SU2/issues/1349#issuecomment-895069863:561,Testability,test,test,561,> Mpi4 is not compatible with the version of pastix we support.; > And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2. Just followed the pastix instructions from the testcase directory. compilation stops at 443/1058 saying error Cannot use PaStiX with forward mode AD. Picture:; ![image](https://user-images.githubusercontent.com/24353606/128684248-2aae9693-806b-421c-9c13-b2fedbcbe5f1.png). So what am I missing? Also is PasTiX necessary for me to run/use all solvers needed for tutorials/test cases?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895069863
https://github.com/su2code/SU2/issues/1349#issuecomment-895402651:220,Availability,error,error,220,"> It is useful in the circumstances listed here:; > https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#linear-algebra-options; > Not needed for tutorials. Thanks for the clarification, so do you know why I got the error saying it cannot be used for forward mode AD? Is that a known limitation or am I missing something ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895402651
https://github.com/su2code/SU2/issues/1349#issuecomment-895748919:725,Availability,error,error,725,"@pcarruscag ; [config-and-makefile-for-scotch-and-pastix.zip](https://github.com/su2code/SU2/files/6959270/config-and-makefile-for-scotch-and-pastix.zip). So very good news, I compiled successfully on Fedora 34 using GCC-11.2 and OpenMPI-4.1.1 using Scotch-6.0.6 and Pastix-5.2.3. I have attached the relevant config and make-file with my relevant edits for reference. Newer openmpi works if you are willing to edit the CCFLAGS pointing to their bin, lib and include file. Currently had no issues running test cases such as fea and aeroelastic. However I don't know which one specifically uses pastix so i can test that but if you do know, let me know. I disabled forward mode ad during meson config so I didn't run into the error. I also enabled shared libraries for both scotch and pastix. . Looking forward to your response =)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919
https://github.com/su2code/SU2/issues/1349#issuecomment-895748919:15,Modifiability,config,config-and-makefile-for-scotch-and-pastix,15,"@pcarruscag ; [config-and-makefile-for-scotch-and-pastix.zip](https://github.com/su2code/SU2/files/6959270/config-and-makefile-for-scotch-and-pastix.zip). So very good news, I compiled successfully on Fedora 34 using GCC-11.2 and OpenMPI-4.1.1 using Scotch-6.0.6 and Pastix-5.2.3. I have attached the relevant config and make-file with my relevant edits for reference. Newer openmpi works if you are willing to edit the CCFLAGS pointing to their bin, lib and include file. Currently had no issues running test cases such as fea and aeroelastic. However I don't know which one specifically uses pastix so i can test that but if you do know, let me know. I disabled forward mode ad during meson config so I didn't run into the error. I also enabled shared libraries for both scotch and pastix. . Looking forward to your response =)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919
https://github.com/su2code/SU2/issues/1349#issuecomment-895748919:107,Modifiability,config,config-and-makefile-for-scotch-and-pastix,107,"@pcarruscag ; [config-and-makefile-for-scotch-and-pastix.zip](https://github.com/su2code/SU2/files/6959270/config-and-makefile-for-scotch-and-pastix.zip). So very good news, I compiled successfully on Fedora 34 using GCC-11.2 and OpenMPI-4.1.1 using Scotch-6.0.6 and Pastix-5.2.3. I have attached the relevant config and make-file with my relevant edits for reference. Newer openmpi works if you are willing to edit the CCFLAGS pointing to their bin, lib and include file. Currently had no issues running test cases such as fea and aeroelastic. However I don't know which one specifically uses pastix so i can test that but if you do know, let me know. I disabled forward mode ad during meson config so I didn't run into the error. I also enabled shared libraries for both scotch and pastix. . Looking forward to your response =)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919
https://github.com/su2code/SU2/issues/1349#issuecomment-895748919:310,Modifiability,config,config,310,"@pcarruscag ; [config-and-makefile-for-scotch-and-pastix.zip](https://github.com/su2code/SU2/files/6959270/config-and-makefile-for-scotch-and-pastix.zip). So very good news, I compiled successfully on Fedora 34 using GCC-11.2 and OpenMPI-4.1.1 using Scotch-6.0.6 and Pastix-5.2.3. I have attached the relevant config and make-file with my relevant edits for reference. Newer openmpi works if you are willing to edit the CCFLAGS pointing to their bin, lib and include file. Currently had no issues running test cases such as fea and aeroelastic. However I don't know which one specifically uses pastix so i can test that but if you do know, let me know. I disabled forward mode ad during meson config so I didn't run into the error. I also enabled shared libraries for both scotch and pastix. . Looking forward to your response =)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919
https://github.com/su2code/SU2/issues/1349#issuecomment-895748919:693,Modifiability,config,config,693,"@pcarruscag ; [config-and-makefile-for-scotch-and-pastix.zip](https://github.com/su2code/SU2/files/6959270/config-and-makefile-for-scotch-and-pastix.zip). So very good news, I compiled successfully on Fedora 34 using GCC-11.2 and OpenMPI-4.1.1 using Scotch-6.0.6 and Pastix-5.2.3. I have attached the relevant config and make-file with my relevant edits for reference. Newer openmpi works if you are willing to edit the CCFLAGS pointing to their bin, lib and include file. Currently had no issues running test cases such as fea and aeroelastic. However I don't know which one specifically uses pastix so i can test that but if you do know, let me know. I disabled forward mode ad during meson config so I didn't run into the error. I also enabled shared libraries for both scotch and pastix. . Looking forward to your response =)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919
https://github.com/su2code/SU2/issues/1349#issuecomment-895748919:505,Testability,test,test,505,"@pcarruscag ; [config-and-makefile-for-scotch-and-pastix.zip](https://github.com/su2code/SU2/files/6959270/config-and-makefile-for-scotch-and-pastix.zip). So very good news, I compiled successfully on Fedora 34 using GCC-11.2 and OpenMPI-4.1.1 using Scotch-6.0.6 and Pastix-5.2.3. I have attached the relevant config and make-file with my relevant edits for reference. Newer openmpi works if you are willing to edit the CCFLAGS pointing to their bin, lib and include file. Currently had no issues running test cases such as fea and aeroelastic. However I don't know which one specifically uses pastix so i can test that but if you do know, let me know. I disabled forward mode ad during meson config so I didn't run into the error. I also enabled shared libraries for both scotch and pastix. . Looking forward to your response =)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919
https://github.com/su2code/SU2/issues/1349#issuecomment-895748919:610,Testability,test,test,610,"@pcarruscag ; [config-and-makefile-for-scotch-and-pastix.zip](https://github.com/su2code/SU2/files/6959270/config-and-makefile-for-scotch-and-pastix.zip). So very good news, I compiled successfully on Fedora 34 using GCC-11.2 and OpenMPI-4.1.1 using Scotch-6.0.6 and Pastix-5.2.3. I have attached the relevant config and make-file with my relevant edits for reference. Newer openmpi works if you are willing to edit the CCFLAGS pointing to their bin, lib and include file. Currently had no issues running test cases such as fea and aeroelastic. However I don't know which one specifically uses pastix so i can test that but if you do know, let me know. I disabled forward mode ad during meson config so I didn't run into the error. I also enabled shared libraries for both scotch and pastix. . Looking forward to your response =)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919
https://github.com/su2code/SU2/issues/1349#issuecomment-895948814:59,Usability,simpl,simple,59,I'm glad you made it work. Like I said it's not needed for simple tutorials.; The general conditions in which you may find it useful are described here: https://su2code.github.io/docs_v7/Linear-Solvers-and-Preconditioners/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895948814
https://github.com/su2code/SU2/pull/1351#issuecomment-899099971:68,Deployability,update,updated,68,"@snow54 I think the solution file for your testcase will have to be updated, can you have a look please to make sure the discrete adjoint still works?; This should also fix the problems you had with the Venkatakrishnan limiter.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899099971
https://github.com/su2code/SU2/pull/1351#issuecomment-899099971:43,Testability,test,testcase,43,"@snow54 I think the solution file for your testcase will have to be updated, can you have a look please to make sure the discrete adjoint still works?; This should also fix the problems you had with the Venkatakrishnan limiter.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899099971
https://github.com/su2code/SU2/pull/1351#issuecomment-899276864:114,Deployability,update,update,114,"@pcarruscag Thanks for the cleanup. I have made a [pull request](https://github.com/su2code/TestCases/pull/72) to update solution file for the test case. You have deleted codes that create WeightNF.dat so I have deleted it from python codes as well. (I tried to push as a suggestion but it didn't work as I expected). > I think nearfield was a kind of internal interface between two boundaries with the same points, so not a ""do nothing"" group of points but more like an actuator disk without any jump. I thought so when I was trying to make it work in ver.6 but, when I tried with mesh with two boundaries with the same points, it didn't work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899276864
https://github.com/su2code/SU2/pull/1351#issuecomment-899276864:361,Integrability,interface,interface,361,"@pcarruscag Thanks for the cleanup. I have made a [pull request](https://github.com/su2code/TestCases/pull/72) to update solution file for the test case. You have deleted codes that create WeightNF.dat so I have deleted it from python codes as well. (I tried to push as a suggestion but it didn't work as I expected). > I think nearfield was a kind of internal interface between two boundaries with the same points, so not a ""do nothing"" group of points but more like an actuator disk without any jump. I thought so when I was trying to make it work in ver.6 but, when I tried with mesh with two boundaries with the same points, it didn't work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899276864
https://github.com/su2code/SU2/pull/1351#issuecomment-899276864:92,Testability,Test,TestCases,92,"@pcarruscag Thanks for the cleanup. I have made a [pull request](https://github.com/su2code/TestCases/pull/72) to update solution file for the test case. You have deleted codes that create WeightNF.dat so I have deleted it from python codes as well. (I tried to push as a suggestion but it didn't work as I expected). > I think nearfield was a kind of internal interface between two boundaries with the same points, so not a ""do nothing"" group of points but more like an actuator disk without any jump. I thought so when I was trying to make it work in ver.6 but, when I tried with mesh with two boundaries with the same points, it didn't work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899276864
https://github.com/su2code/SU2/pull/1351#issuecomment-899276864:143,Testability,test,test,143,"@pcarruscag Thanks for the cleanup. I have made a [pull request](https://github.com/su2code/TestCases/pull/72) to update solution file for the test case. You have deleted codes that create WeightNF.dat so I have deleted it from python codes as well. (I tried to push as a suggestion but it didn't work as I expected). > I think nearfield was a kind of internal interface between two boundaries with the same points, so not a ""do nothing"" group of points but more like an actuator disk without any jump. I thought so when I was trying to make it work in ver.6 but, when I tried with mesh with two boundaries with the same points, it didn't work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899276864
https://github.com/su2code/SU2/pull/1351#issuecomment-899443948:340,Deployability,update,update,340,"Thank you for updating the solution file @snow54 , there's quite a big difference in the adjoint residuals, do the final derivatives still make sense? Is the flow field noticeably different (for the better, e.g. smoother? or equivalent to not having the boundary at all?) now that nearfield is treated as an internal boundary?; If so let's update the residuals and merge. I'm sorry that you had to spend time fixing that MPI code... But at least we found out we could clean all this obsolete code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899443948
https://github.com/su2code/SU2/pull/1351#issuecomment-899498618:344,Deployability,update,update,344,"> Thank you for updating the solution file @snow54 , there's quite a big difference in the adjoint residuals, do the final derivatives still make sense? Is the flow field noticeably different (for the better, e.g. smoother? or equivalent to not having the boundary at all?) now that nearfield is treated as an internal boundary?; > If so let's update the residuals and merge. I think we can update the residuals. Gradients between adjoint and finite difference match quite well as shown below. I haven't finished calculating for all design variables, but I think it is enough. ![Comparison_gradient](https://user-images.githubusercontent.com/18245846/129564585-d7812108-d315-4606-83d9-e39a8c9403b3.png). In terms of flow field, the capture below is from the current develop branch. The boundary between structured grid and unstructured gird is a nearfield boundary. An object is above this capture and pressure wave propagates from there. Since this grid is inclined by Mach angle, pressure distribution on the nearfield should be fairly similar to the region above but this capture shows some strange pressure disturbance. Limiter: VAN_ALBADA_EDGE; ![NF_before](https://user-images.githubusercontent.com/18245846/129564639-030fe1b7-7e50-4bb1-9951-21f5ea27bb52.png). Limiter: VENKATAKRISHNAN_WANG; ![NF_before_VEN](https://user-images.githubusercontent.com/18245846/129568934-137681db-04db-40f1-819f-7bcc8c7e0d88.png). The capture below is from the branch with this PR. The issue I mentioned above does not exist. Limiter: VAN_ALBADA_EDGE; ![NF_after](https://user-images.githubusercontent.com/18245846/129564659-cec5a848-1b0b-4051-8298-e3d383dacc6d.png). I think the residuals for direct solver will be different like the adjoint if you run it for some hundreds more iterations (currently, the test case has only 20 iterations). However, since the nearfield boundary is a bit far from an object, it takes some iterations for pressure waves to reach the nearfield boundary. This PR also solves an issu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618
https://github.com/su2code/SU2/pull/1351#issuecomment-899498618:391,Deployability,update,update,391,"> Thank you for updating the solution file @snow54 , there's quite a big difference in the adjoint residuals, do the final derivatives still make sense? Is the flow field noticeably different (for the better, e.g. smoother? or equivalent to not having the boundary at all?) now that nearfield is treated as an internal boundary?; > If so let's update the residuals and merge. I think we can update the residuals. Gradients between adjoint and finite difference match quite well as shown below. I haven't finished calculating for all design variables, but I think it is enough. ![Comparison_gradient](https://user-images.githubusercontent.com/18245846/129564585-d7812108-d315-4606-83d9-e39a8c9403b3.png). In terms of flow field, the capture below is from the current develop branch. The boundary between structured grid and unstructured gird is a nearfield boundary. An object is above this capture and pressure wave propagates from there. Since this grid is inclined by Mach angle, pressure distribution on the nearfield should be fairly similar to the region above but this capture shows some strange pressure disturbance. Limiter: VAN_ALBADA_EDGE; ![NF_before](https://user-images.githubusercontent.com/18245846/129564639-030fe1b7-7e50-4bb1-9951-21f5ea27bb52.png). Limiter: VENKATAKRISHNAN_WANG; ![NF_before_VEN](https://user-images.githubusercontent.com/18245846/129568934-137681db-04db-40f1-819f-7bcc8c7e0d88.png). The capture below is from the branch with this PR. The issue I mentioned above does not exist. Limiter: VAN_ALBADA_EDGE; ![NF_after](https://user-images.githubusercontent.com/18245846/129564659-cec5a848-1b0b-4051-8298-e3d383dacc6d.png). I think the residuals for direct solver will be different like the adjoint if you run it for some hundreds more iterations (currently, the test case has only 20 iterations). However, since the nearfield boundary is a bit far from an object, it takes some iterations for pressure waves to reach the nearfield boundary. This PR also solves an issu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618
https://github.com/su2code/SU2/pull/1351#issuecomment-899498618:540,Modifiability,variab,variables,540,"> Thank you for updating the solution file @snow54 , there's quite a big difference in the adjoint residuals, do the final derivatives still make sense? Is the flow field noticeably different (for the better, e.g. smoother? or equivalent to not having the boundary at all?) now that nearfield is treated as an internal boundary?; > If so let's update the residuals and merge. I think we can update the residuals. Gradients between adjoint and finite difference match quite well as shown below. I haven't finished calculating for all design variables, but I think it is enough. ![Comparison_gradient](https://user-images.githubusercontent.com/18245846/129564585-d7812108-d315-4606-83d9-e39a8c9403b3.png). In terms of flow field, the capture below is from the current develop branch. The boundary between structured grid and unstructured gird is a nearfield boundary. An object is above this capture and pressure wave propagates from there. Since this grid is inclined by Mach angle, pressure distribution on the nearfield should be fairly similar to the region above but this capture shows some strange pressure disturbance. Limiter: VAN_ALBADA_EDGE; ![NF_before](https://user-images.githubusercontent.com/18245846/129564639-030fe1b7-7e50-4bb1-9951-21f5ea27bb52.png). Limiter: VENKATAKRISHNAN_WANG; ![NF_before_VEN](https://user-images.githubusercontent.com/18245846/129568934-137681db-04db-40f1-819f-7bcc8c7e0d88.png). The capture below is from the branch with this PR. The issue I mentioned above does not exist. Limiter: VAN_ALBADA_EDGE; ![NF_after](https://user-images.githubusercontent.com/18245846/129564659-cec5a848-1b0b-4051-8298-e3d383dacc6d.png). I think the residuals for direct solver will be different like the adjoint if you run it for some hundreds more iterations (currently, the test case has only 20 iterations). However, since the nearfield boundary is a bit far from an object, it takes some iterations for pressure waves to reach the nearfield boundary. This PR also solves an issu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618
https://github.com/su2code/SU2/pull/1351#issuecomment-899498618:1795,Testability,test,test,1795,"te well as shown below. I haven't finished calculating for all design variables, but I think it is enough. ![Comparison_gradient](https://user-images.githubusercontent.com/18245846/129564585-d7812108-d315-4606-83d9-e39a8c9403b3.png). In terms of flow field, the capture below is from the current develop branch. The boundary between structured grid and unstructured gird is a nearfield boundary. An object is above this capture and pressure wave propagates from there. Since this grid is inclined by Mach angle, pressure distribution on the nearfield should be fairly similar to the region above but this capture shows some strange pressure disturbance. Limiter: VAN_ALBADA_EDGE; ![NF_before](https://user-images.githubusercontent.com/18245846/129564639-030fe1b7-7e50-4bb1-9951-21f5ea27bb52.png). Limiter: VENKATAKRISHNAN_WANG; ![NF_before_VEN](https://user-images.githubusercontent.com/18245846/129568934-137681db-04db-40f1-819f-7bcc8c7e0d88.png). The capture below is from the branch with this PR. The issue I mentioned above does not exist. Limiter: VAN_ALBADA_EDGE; ![NF_after](https://user-images.githubusercontent.com/18245846/129564659-cec5a848-1b0b-4051-8298-e3d383dacc6d.png). I think the residuals for direct solver will be different like the adjoint if you run it for some hundreds more iterations (currently, the test case has only 20 iterations). However, since the nearfield boundary is a bit far from an object, it takes some iterations for pressure waves to reach the nearfield boundary. This PR also solves an issue with VENKATAKRISHNAN_WANG limiter. It seems to be much easier for convergence than VAN_ALBADA_EDGE, so it is fairly useful. I still have a gradient un-match issue with my bigger mesh but I believe it is coming from something else. > I'm sorry that you had to spend time fixing that MPI code... But at least we found out we could clean all this obsolete code. Yeah, I noticed it had been deleted. It's OK. It was still a good opportunity for me to learn how MPI works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618
https://github.com/su2code/SU2/pull/1351#issuecomment-899498618:2450,Usability,learn,learn,2450,"te well as shown below. I haven't finished calculating for all design variables, but I think it is enough. ![Comparison_gradient](https://user-images.githubusercontent.com/18245846/129564585-d7812108-d315-4606-83d9-e39a8c9403b3.png). In terms of flow field, the capture below is from the current develop branch. The boundary between structured grid and unstructured gird is a nearfield boundary. An object is above this capture and pressure wave propagates from there. Since this grid is inclined by Mach angle, pressure distribution on the nearfield should be fairly similar to the region above but this capture shows some strange pressure disturbance. Limiter: VAN_ALBADA_EDGE; ![NF_before](https://user-images.githubusercontent.com/18245846/129564639-030fe1b7-7e50-4bb1-9951-21f5ea27bb52.png). Limiter: VENKATAKRISHNAN_WANG; ![NF_before_VEN](https://user-images.githubusercontent.com/18245846/129568934-137681db-04db-40f1-819f-7bcc8c7e0d88.png). The capture below is from the branch with this PR. The issue I mentioned above does not exist. Limiter: VAN_ALBADA_EDGE; ![NF_after](https://user-images.githubusercontent.com/18245846/129564659-cec5a848-1b0b-4051-8298-e3d383dacc6d.png). I think the residuals for direct solver will be different like the adjoint if you run it for some hundreds more iterations (currently, the test case has only 20 iterations). However, since the nearfield boundary is a bit far from an object, it takes some iterations for pressure waves to reach the nearfield boundary. This PR also solves an issue with VENKATAKRISHNAN_WANG limiter. It seems to be much easier for convergence than VAN_ALBADA_EDGE, so it is fairly useful. I still have a gradient un-match issue with my bigger mesh but I believe it is coming from something else. > I'm sorry that you had to spend time fixing that MPI code... But at least we found out we could clean all this obsolete code. Yeah, I noticed it had been deleted. It's OK. It was still a good opportunity for me to learn how MPI works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618
https://github.com/su2code/SU2/pull/1352#issuecomment-903237756:674,Modifiability,variab,variables,674,"I had a chat with @pcarruscag in the meantime. Summary of the recent changes:; - All the non-FEM classes derived from CPrimalGrid (CLine, CTriangle etc) declared the static members for the connectivity themselves. So they all had to override the virtual getter functions for the connectivity themselves, resulting in a lot of code duplication. -> Now we have an intermediate class `CPrimalGridWithConnectivity<Connectivity>` that overrides them once, accessing the static members of `Connectivity` = `CLineConnectivity`, `CTriangleConnectivity` etc.; - `type*` array -> `std::vector<type>`. As a special case for a fixed-size boolean array, `std::bitset`.; - removed unused variables and functions",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1352#issuecomment-903237756
https://github.com/su2code/SU2/pull/1352#issuecomment-903237756:451,Security,access,accessing,451,"I had a chat with @pcarruscag in the meantime. Summary of the recent changes:; - All the non-FEM classes derived from CPrimalGrid (CLine, CTriangle etc) declared the static members for the connectivity themselves. So they all had to override the virtual getter functions for the connectivity themselves, resulting in a lot of code duplication. -> Now we have an intermediate class `CPrimalGridWithConnectivity<Connectivity>` that overrides them once, accessing the static members of `Connectivity` = `CLineConnectivity`, `CTriangleConnectivity` etc.; - `type*` array -> `std::vector<type>`. As a special case for a fixed-size boolean array, `std::bitset`.; - removed unused variables and functions",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1352#issuecomment-903237756
https://github.com/su2code/SU2/pull/1355#issuecomment-899867464:308,Deployability,release,released,308,This pull request **introduces 4 alerts** and **fixes 72** when merging 3ec1c6803da5ece22f14cb3b17685f07b4444ba9 into ce07d5c086c846252d200132d21e719819ba2296 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-86ba37531ceb7753fd4246cb683c3fa432ae2964). **new alerts:**. * 2 for Resource not released in destructor; * 1 for &#39;import \*&#39; may pollute namespace; * 1 for Multiplication result converted to larger type. **fixed alerts:**. * 34 for Comparison of narrow type with wide type in loop condition; * 14 for Multiplication result converted to larger type; * 9 for &#39;input&#39; function used in Python 2; * 9 for Resource not released in destructor; * 4 for Comparison result is always the same; * 1 for Unused import; * 1 for Result of integer division may be truncated,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1355#issuecomment-899867464
https://github.com/su2code/SU2/pull/1355#issuecomment-899867464:656,Deployability,release,released,656,This pull request **introduces 4 alerts** and **fixes 72** when merging 3ec1c6803da5ece22f14cb3b17685f07b4444ba9 into ce07d5c086c846252d200132d21e719819ba2296 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-86ba37531ceb7753fd4246cb683c3fa432ae2964). **new alerts:**. * 2 for Resource not released in destructor; * 1 for &#39;import \*&#39; may pollute namespace; * 1 for Multiplication result converted to larger type. **fixed alerts:**. * 34 for Comparison of narrow type with wide type in loop condition; * 14 for Multiplication result converted to larger type; * 9 for &#39;input&#39; function used in Python 2; * 9 for Resource not released in destructor; * 4 for Comparison result is always the same; * 1 for Unused import; * 1 for Result of integer division may be truncated,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1355#issuecomment-899867464
https://github.com/su2code/SU2/pull/1356#issuecomment-903146247:291,Deployability,release,released,291,This pull request **introduces 4 alerts** when merging 0a575667060f6369c7cbc14c0e0c48215eba269a into 3ec1c6803da5ece22f14cb3b17685f07b4444ba9 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-3d2228e63f322f8b24e86847e086ca35ac965d42). **new alerts:**. * 3 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-903146247
https://github.com/su2code/SU2/pull/1356#issuecomment-916387302:291,Deployability,release,released,291,This pull request **introduces 3 alerts** when merging af04e39afe2dd752d3e89e32b36602b94c9132d4 into 34c46b6eed96ef465b32ad9a80585f64b44a7669 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-98e31d456aea075ca340118db38cf191da91ed58). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-916387302
https://github.com/su2code/SU2/pull/1356#issuecomment-917295078:291,Deployability,release,released,291,This pull request **introduces 3 alerts** when merging b675853030e41680b0b5dacd788a6043daa1eed4 into 34c46b6eed96ef465b32ad9a80585f64b44a7669 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-db725199b942f636844b7de3e1a3034dd3d8cbdb). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-917295078
https://github.com/su2code/SU2/pull/1356#issuecomment-930603822:291,Deployability,release,released,291,This pull request **introduces 3 alerts** when merging 2c1a1fca1aeef203da6f117c340729611211dff3 into 057da5b2e3791db446d1641dcf44b1d25559cf95 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-567514306f7333931146f1aa02dcee5390853732). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-930603822
https://github.com/su2code/SU2/pull/1356#issuecomment-930647783:291,Deployability,release,released,291,This pull request **introduces 3 alerts** when merging 9e5803bd38d5504d304a8f45e291b5baa0789052 into 057da5b2e3791db446d1641dcf44b1d25559cf95 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-89761b3349309b47c988340738a8657111cb6b0e). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-930647783
https://github.com/su2code/SU2/pull/1356#issuecomment-931812266:291,Deployability,release,released,291,This pull request **introduces 3 alerts** when merging ab4a4a34d76ccd1055bbd14c545923f67e980fa6 into 58c580b84860fff31340e3fa3593257a2dd7fb3f - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-5f57cd07a07f7e0d6bfd9bd7e827213c20916f99). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-931812266
https://github.com/su2code/SU2/pull/1356#issuecomment-932024096:291,Deployability,release,released,291,This pull request **introduces 3 alerts** when merging 966c9aea38a062b62665678b78b5457983361180 into 58c580b84860fff31340e3fa3593257a2dd7fb3f - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-a35bf2f1c0ff449a89585178cd6f8e6dc49cbe59). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-932024096
https://github.com/su2code/SU2/pull/1356#issuecomment-932851913:291,Deployability,release,released,291,This pull request **introduces 4 alerts** when merging 7aacabbb21611ddef01784812130778d5006690d into 58c580b84860fff31340e3fa3593257a2dd7fb3f - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b3443d9e57183f00339618362a76ce60b2a68b6c). **new alerts:**. * 2 for Resource not released in destructor; * 2 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-932851913
https://github.com/su2code/SU2/pull/1356#issuecomment-932870005:291,Deployability,release,released,291,This pull request **introduces 4 alerts** when merging dfdd090f453cb1beb6fb51ed55c831eecfebb42b into 58c580b84860fff31340e3fa3593257a2dd7fb3f - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-c4807a1cbabf8717bcb1157b75476979099cd326). **new alerts:**. * 2 for Resource not released in destructor; * 2 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-932870005
https://github.com/su2code/SU2/pull/1356#issuecomment-933000397:291,Deployability,release,released,291,This pull request **introduces 4 alerts** when merging 637eb274c32fb5c7fdca7e91ee87192597838671 into bd586f6503fd6bdb94f18c51d308c6171070bfb3 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-2fdd443b42b0493a8fe88d37d96e95800ec73425). **new alerts:**. * 2 for Resource not released in destructor; * 2 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-933000397
https://github.com/su2code/SU2/pull/1356#issuecomment-933257525:359,Deployability,release,released,359,This pull request **introduces 6 alerts** when merging 464e1beb057da2b7151212930d34d6560428189d into 9f25ad60ed031fa4e1c7d1d009016cc91f6ab587 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-9453c2facae7dceb3523fbef2285786e3545355b). **new alerts:**. * 4 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-933257525
https://github.com/su2code/SU2/pull/1356#issuecomment-933698963:359,Deployability,release,released,359,This pull request **introduces 8 alerts** when merging 505b44923aa55f797de71930580fda5f1065b914 into 9f25ad60ed031fa4e1c7d1d009016cc91f6ab587 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-7890ae5a72f2339118332b019cc81b77a08deaa3). **new alerts:**. * 6 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-933698963
https://github.com/su2code/SU2/pull/1356#issuecomment-936729789:359,Deployability,release,released,359,This pull request **introduces 8 alerts** when merging 0e416349defcd44406a1374700a131fdbd7b3a63 into 54e74cc214aba3217c7b1c6632b8d1e82da58f6d - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-a094eb31c33304cd8f9feb72d2c8028be65a833b). **new alerts:**. * 6 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-936729789
https://github.com/su2code/SU2/pull/1356#issuecomment-937431599:359,Deployability,release,released,359,This pull request **introduces 8 alerts** when merging 35e0d76ea50f660ea28a188e92394be61139d11b into 54e74cc214aba3217c7b1c6632b8d1e82da58f6d - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-eeee53f19ea512400f066f3c9205eaaf8f85119b). **new alerts:**. * 6 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-937431599
https://github.com/su2code/SU2/pull/1357#issuecomment-903274510:308,Modifiability,variab,variable,308,This pull request **introduces 2 alerts** and **fixes 19** when merging 0cf08d4d50535f6c145d0a974f0e5cc9521a9b1a into c2c78e2bc56160c2724fb34102c1fd2c2542c2a1 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-bc742e5740e7fde7e8efae25d0be0ca4e1117e11). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357#issuecomment-903274510
https://github.com/su2code/SU2/pull/1357#issuecomment-903274510:326,Modifiability,Variab,Variable,326,This pull request **introduces 2 alerts** and **fixes 19** when merging 0cf08d4d50535f6c145d0a974f0e5cc9521a9b1a into c2c78e2bc56160c2724fb34102c1fd2c2542c2a1 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-bc742e5740e7fde7e8efae25d0be0ca4e1117e11). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357#issuecomment-903274510
https://github.com/su2code/SU2/pull/1357#issuecomment-903274510:387,Modifiability,Variab,Variable,387,This pull request **introduces 2 alerts** and **fixes 19** when merging 0cf08d4d50535f6c145d0a974f0e5cc9521a9b1a into c2c78e2bc56160c2724fb34102c1fd2c2542c2a1 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-bc742e5740e7fde7e8efae25d0be0ca4e1117e11). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357#issuecomment-903274510
https://github.com/su2code/SU2/pull/1357#issuecomment-903529424:308,Modifiability,variab,variable,308,This pull request **introduces 2 alerts** and **fixes 19** when merging 4ecf3eab71954a9e30a0da5242bc90e2c0eab82f into c2c78e2bc56160c2724fb34102c1fd2c2542c2a1 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b65cf99f0149c4b378622df6b284bab9578714f9). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357#issuecomment-903529424
https://github.com/su2code/SU2/pull/1357#issuecomment-903529424:326,Modifiability,Variab,Variable,326,This pull request **introduces 2 alerts** and **fixes 19** when merging 4ecf3eab71954a9e30a0da5242bc90e2c0eab82f into c2c78e2bc56160c2724fb34102c1fd2c2542c2a1 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b65cf99f0149c4b378622df6b284bab9578714f9). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357#issuecomment-903529424
https://github.com/su2code/SU2/pull/1357#issuecomment-903529424:387,Modifiability,Variab,Variable,387,This pull request **introduces 2 alerts** and **fixes 19** when merging 4ecf3eab71954a9e30a0da5242bc90e2c0eab82f into c2c78e2bc56160c2724fb34102c1fd2c2542c2a1 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b65cf99f0149c4b378622df6b284bab9578714f9). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357#issuecomment-903529424
https://github.com/su2code/SU2/pull/1359#issuecomment-904506621:134,Availability,error,error,134,"I definitely closed #1357 too fast, so no problem. I tried to implement all your suggestions. Regarding the possibility of running by error in parallel the structural solver, this is not possible. That part of the code is meant to solve a small system of structural equations, so it is only implemented in serial mode.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1359#issuecomment-904506621
https://github.com/su2code/SU2/pull/1360#issuecomment-937761007:69,Testability,test,tests,69,Changes that are necessary in a follow-up PR:; - [ ] Move regression tests to parallel regression and hybrid reg. Maybe the 4 cases can be split over those.; - [ ] Find similarities between IncNS and NS TauWallWF implementation and make it a common implementation. . Please add to this post other things (I am fine with others editing this),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360#issuecomment-937761007
https://github.com/su2code/SU2/pull/1360#issuecomment-944909404:16,Testability,Test,Test,16,i made a little Test for the Non-dimensionalization: Turns out the inc Testcases did not specify `INC_NONDIM` where the default is INITIAL_VALUES. I will specify that for the reg tests. I think the non-dim is currently correct: attached the incomp-SA case comparison INITIAL_VALUES against DIMENSIONAL. . ![image](https://user-images.githubusercontent.com/31306376/137587702-902059e6-dba4-4313-b6a9-360d725f3c4d.png). Here the non-dim value is dimensionalized using what gets printed in the screen output; ![image](https://user-images.githubusercontent.com/31306376/137587688-662b3d91-b478-4cbb-80f6-c374de39473d.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360#issuecomment-944909404
https://github.com/su2code/SU2/pull/1360#issuecomment-944909404:71,Testability,Test,Testcases,71,i made a little Test for the Non-dimensionalization: Turns out the inc Testcases did not specify `INC_NONDIM` where the default is INITIAL_VALUES. I will specify that for the reg tests. I think the non-dim is currently correct: attached the incomp-SA case comparison INITIAL_VALUES against DIMENSIONAL. . ![image](https://user-images.githubusercontent.com/31306376/137587702-902059e6-dba4-4313-b6a9-360d725f3c4d.png). Here the non-dim value is dimensionalized using what gets printed in the screen output; ![image](https://user-images.githubusercontent.com/31306376/137587688-662b3d91-b478-4cbb-80f6-c374de39473d.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360#issuecomment-944909404
https://github.com/su2code/SU2/pull/1360#issuecomment-944909404:179,Testability,test,tests,179,i made a little Test for the Non-dimensionalization: Turns out the inc Testcases did not specify `INC_NONDIM` where the default is INITIAL_VALUES. I will specify that for the reg tests. I think the non-dim is currently correct: attached the incomp-SA case comparison INITIAL_VALUES against DIMENSIONAL. . ![image](https://user-images.githubusercontent.com/31306376/137587702-902059e6-dba4-4313-b6a9-360d725f3c4d.png). Here the non-dim value is dimensionalized using what gets printed in the screen output; ![image](https://user-images.githubusercontent.com/31306376/137587688-662b3d91-b478-4cbb-80f6-c374de39473d.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360#issuecomment-944909404
https://github.com/su2code/SU2/pull/1362#issuecomment-907033127:226,Modifiability,config,config,226,You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced. The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-907033127
https://github.com/su2code/SU2/pull/1362#issuecomment-907033127:211,Security,expose,expose,211,You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced. The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-907033127
https://github.com/su2code/SU2/pull/1362#issuecomment-907513414:63,Testability,test,tests,63,@suargi Just a service note on the hybrid_regression_AD.py reg tests that fail: They seem to sometimes fail due to mood swings or idk. So if you Re-run them in the `Checks` tab above or merge the latest develop they might not fail on you,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-907513414
https://github.com/su2code/SU2/pull/1362#issuecomment-908181097:369,Energy Efficiency,reduce,reduce,369,"> You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced.; > ; > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want. Your suggestion is also valid, but in my opinion it would be more coherent, in terms of code structure, to reduce the finest mesh level whenever we modify the number of multigrid levels. So in CMultiGridGeometry::CMultiGridGeometry add this line of code; `config->SetFinestMesh(iMesh-1);`; after reducing the number of MGLevels. > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.; I can do that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097
https://github.com/su2code/SU2/pull/1362#issuecomment-908181097:235,Modifiability,config,config,235,"> You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced.; > ; > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want. Your suggestion is also valid, but in my opinion it would be more coherent, in terms of code structure, to reduce the finest mesh level whenever we modify the number of multigrid levels. So in CMultiGridGeometry::CMultiGridGeometry add this line of code; `config->SetFinestMesh(iMesh-1);`; after reducing the number of MGLevels. > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.; I can do that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097
https://github.com/su2code/SU2/pull/1362#issuecomment-908181097:518,Modifiability,config,config,518,"> You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced.; > ; > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want. Your suggestion is also valid, but in my opinion it would be more coherent, in terms of code structure, to reduce the finest mesh level whenever we modify the number of multigrid levels. So in CMultiGridGeometry::CMultiGridGeometry add this line of code; `config->SetFinestMesh(iMesh-1);`; after reducing the number of MGLevels. > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.; I can do that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097
https://github.com/su2code/SU2/pull/1362#issuecomment-908181097:669,Modifiability,config,config,669,"> You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced.; > ; > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want. Your suggestion is also valid, but in my opinion it would be more coherent, in terms of code structure, to reduce the finest mesh level whenever we modify the number of multigrid levels. So in CMultiGridGeometry::CMultiGridGeometry add this line of code; `config->SetFinestMesh(iMesh-1);`; after reducing the number of MGLevels. > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.; I can do that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097
https://github.com/su2code/SU2/pull/1362#issuecomment-908181097:220,Security,expose,expose,220,"> You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced.; > ; > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want. Your suggestion is also valid, but in my opinion it would be more coherent, in terms of code structure, to reduce the finest mesh level whenever we modify the number of multigrid levels. So in CMultiGridGeometry::CMultiGridGeometry add this line of code; `config->SetFinestMesh(iMesh-1);`; after reducing the number of MGLevels. > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.; I can do that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097
https://github.com/su2code/SU2/pull/1362#issuecomment-908181097:654,Security,expose,expose,654,"> You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced.; > ; > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want. Your suggestion is also valid, but in my opinion it would be more coherent, in terms of code structure, to reduce the finest mesh level whenever we modify the number of multigrid levels. So in CMultiGridGeometry::CMultiGridGeometry add this line of code; `config->SetFinestMesh(iMesh-1);`; after reducing the number of MGLevels. > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.; I can do that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097
https://github.com/su2code/SU2/pull/1362#issuecomment-908181718:65,Testability,test,tests,65,> @suargi Just a service note on the hybrid_regression_AD.py reg tests that fail: They seem to sometimes fail due to mood swings or idk. So if you Re-run them in the `Checks` tab above or merge the latest develop they might not fail on you. Thank you @TobiKattmann. I will keep it in mind!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181718
https://github.com/su2code/SU2/pull/1362#issuecomment-908279055:172,Availability,fault,fault,172,That sounds great. After introducing those fixes I can definitely create a regression test to cover the fullmultigrid feature. Nevertheless there is still the segmentation fault problem when using mpirun. I have to delve into that.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908279055
https://github.com/su2code/SU2/pull/1362#issuecomment-908279055:86,Testability,test,test,86,That sounds great. After introducing those fixes I can definitely create a regression test to cover the fullmultigrid feature. Nevertheless there is still the segmentation fault problem when using mpirun. I have to delve into that.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908279055
https://github.com/su2code/SU2/pull/1362#issuecomment-964163647:209,Availability,fault,fault,209,"Let me recall the other sub-issues reported by @suargi:. **Third issue**; > After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. I was able to partially reproduce this with @suargi's help, by modifying `SU2/TestCases/rans/rae2822/turb_SA_RAE2822.cfg`, setting MGLEVEL=6 (instead of 3) and MGCYCLE=FULLMG_CYCLE (instead of W_CYCLE). This could become the new regression test by the way. Both with `mpirun -n 3` and `mpiexec -n 3` we observed non-existing point IDs of the normal neighbor. In #1430 I describe what I think is the problem. For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. We did not see a difference in behaviour of `mpirun` and `mpiexec` on my system however. **Edit**: My version are `mpirun (Open MPI) 4.1.0` and `mpiexec (OpenRTE) 4.1.0`. **Fourth issue**; > Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647
https://github.com/su2code/SU2/pull/1362#issuecomment-964163647:911,Availability,error,error,911,"Let me recall the other sub-issues reported by @suargi:. **Third issue**; > After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. I was able to partially reproduce this with @suargi's help, by modifying `SU2/TestCases/rans/rae2822/turb_SA_RAE2822.cfg`, setting MGLEVEL=6 (instead of 3) and MGCYCLE=FULLMG_CYCLE (instead of W_CYCLE). This could become the new regression test by the way. Both with `mpirun -n 3` and `mpiexec -n 3` we observed non-existing point IDs of the normal neighbor. In #1430 I describe what I think is the problem. For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. We did not see a difference in behaviour of `mpirun` and `mpiexec` on my system however. **Edit**: My version are `mpirun (Open MPI) 4.1.0` and `mpiexec (OpenRTE) 4.1.0`. **Fourth issue**; > Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647
https://github.com/su2code/SU2/pull/1362#issuecomment-964163647:1243,Deployability,update,updated,1243,"Let me recall the other sub-issues reported by @suargi:. **Third issue**; > After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. I was able to partially reproduce this with @suargi's help, by modifying `SU2/TestCases/rans/rae2822/turb_SA_RAE2822.cfg`, setting MGLEVEL=6 (instead of 3) and MGCYCLE=FULLMG_CYCLE (instead of W_CYCLE). This could become the new regression test by the way. Both with `mpirun -n 3` and `mpiexec -n 3` we observed non-existing point IDs of the normal neighbor. In #1430 I describe what I think is the problem. For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. We did not see a difference in behaviour of `mpirun` and `mpiexec` on my system however. **Edit**: My version are `mpirun (Open MPI) 4.1.0` and `mpiexec (OpenRTE) 4.1.0`. **Fourth issue**; > Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647
https://github.com/su2code/SU2/pull/1362#issuecomment-964163647:127,Integrability,depend,depending,127,"Let me recall the other sub-issues reported by @suargi:. **Third issue**; > After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. I was able to partially reproduce this with @suargi's help, by modifying `SU2/TestCases/rans/rae2822/turb_SA_RAE2822.cfg`, setting MGLEVEL=6 (instead of 3) and MGCYCLE=FULLMG_CYCLE (instead of W_CYCLE). This could become the new regression test by the way. Both with `mpirun -n 3` and `mpiexec -n 3` we observed non-existing point IDs of the normal neighbor. In #1430 I describe what I think is the problem. For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. We did not see a difference in behaviour of `mpirun` and `mpiexec` on my system however. **Edit**: My version are `mpirun (Open MPI) 4.1.0` and `mpiexec (OpenRTE) 4.1.0`. **Fourth issue**; > Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647
https://github.com/su2code/SU2/pull/1362#issuecomment-964163647:522,Testability,Test,TestCases,522,"Let me recall the other sub-issues reported by @suargi:. **Third issue**; > After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. I was able to partially reproduce this with @suargi's help, by modifying `SU2/TestCases/rans/rae2822/turb_SA_RAE2822.cfg`, setting MGLEVEL=6 (instead of 3) and MGCYCLE=FULLMG_CYCLE (instead of W_CYCLE). This could become the new regression test by the way. Both with `mpirun -n 3` and `mpiexec -n 3` we observed non-existing point IDs of the normal neighbor. In #1430 I describe what I think is the problem. For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. We did not see a difference in behaviour of `mpirun` and `mpiexec` on my system however. **Edit**: My version are `mpirun (Open MPI) 4.1.0` and `mpiexec (OpenRTE) 4.1.0`. **Fourth issue**; > Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647
https://github.com/su2code/SU2/pull/1362#issuecomment-964163647:684,Testability,test,test,684,"Let me recall the other sub-issues reported by @suargi:. **Third issue**; > After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. I was able to partially reproduce this with @suargi's help, by modifying `SU2/TestCases/rans/rae2822/turb_SA_RAE2822.cfg`, setting MGLEVEL=6 (instead of 3) and MGCYCLE=FULLMG_CYCLE (instead of W_CYCLE). This could become the new regression test by the way. Both with `mpirun -n 3` and `mpiexec -n 3` we observed non-existing point IDs of the normal neighbor. In #1430 I describe what I think is the problem. For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. We did not see a difference in behaviour of `mpirun` and `mpiexec` on my system however. **Edit**: My version are `mpirun (Open MPI) 4.1.0` and `mpiexec (OpenRTE) 4.1.0`. **Fourth issue**; > Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647
https://github.com/su2code/SU2/pull/1362#issuecomment-964332198:61,Availability,error,error,61,"> For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. I had a look at the following part of the output:. Setting the multigrid structure.; +-------------------------------------------+; | MG Level| CVs|Aggl. Rate| CFL|; +-------------------------------------------+; | 0| 14165| 1/1.00| 2.5|; | 1| 3892| 1/3.64| 1.96566|; | 2| 1031| 1/3.77| 1.51755|; | 3| 276| 1/3.74| 1.17777|; | 4| 70| 1/3.94| 0.889704|; | 5| 19| 1/3.68| 0.695288|. So I think that MGLEVEL=6 is too high, it makes the coarsest mesh have too few points. We should choose e.g. MGLEVEL=4 for testing. The `turb_SA_RAE2822.cfg` with MGLEVEL=4, MGCYCLE=FULLMG_CYCLE runs without error with `mpirun -n 2`. With `mpirun -n 3`, I get an error sometimes. I think this is related to the third issue / #1430 .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964332198
https://github.com/su2code/SU2/pull/1362#issuecomment-964332198:688,Availability,error,error,688,"> For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. I had a look at the following part of the output:. Setting the multigrid structure.; +-------------------------------------------+; | MG Level| CVs|Aggl. Rate| CFL|; +-------------------------------------------+; | 0| 14165| 1/1.00| 2.5|; | 1| 3892| 1/3.64| 1.96566|; | 2| 1031| 1/3.77| 1.51755|; | 3| 276| 1/3.74| 1.17777|; | 4| 70| 1/3.94| 0.889704|; | 5| 19| 1/3.68| 0.695288|. So I think that MGLEVEL=6 is too high, it makes the coarsest mesh have too few points. We should choose e.g. MGLEVEL=4 for testing. The `turb_SA_RAE2822.cfg` with MGLEVEL=4, MGCYCLE=FULLMG_CYCLE runs without error with `mpirun -n 2`. With `mpirun -n 3`, I get an error sometimes. I think this is related to the third issue / #1430 .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964332198
https://github.com/su2code/SU2/pull/1362#issuecomment-964332198:743,Availability,error,error,743,"> For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. I had a look at the following part of the output:. Setting the multigrid structure.; +-------------------------------------------+; | MG Level| CVs|Aggl. Rate| CFL|; +-------------------------------------------+; | 0| 14165| 1/1.00| 2.5|; | 1| 3892| 1/3.64| 1.96566|; | 2| 1031| 1/3.77| 1.51755|; | 3| 276| 1/3.74| 1.17777|; | 4| 70| 1/3.94| 0.889704|; | 5| 19| 1/3.68| 0.695288|. So I think that MGLEVEL=6 is too high, it makes the coarsest mesh have too few points. We should choose e.g. MGLEVEL=4 for testing. The `turb_SA_RAE2822.cfg` with MGLEVEL=4, MGCYCLE=FULLMG_CYCLE runs without error with `mpirun -n 2`. With `mpirun -n 3`, I get an error sometimes. I think this is related to the third issue / #1430 .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964332198
https://github.com/su2code/SU2/pull/1362#issuecomment-964332198:603,Testability,test,testing,603,"> For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. I had a look at the following part of the output:. Setting the multigrid structure.; +-------------------------------------------+; | MG Level| CVs|Aggl. Rate| CFL|; +-------------------------------------------+; | 0| 14165| 1/1.00| 2.5|; | 1| 3892| 1/3.64| 1.96566|; | 2| 1031| 1/3.77| 1.51755|; | 3| 276| 1/3.74| 1.17777|; | 4| 70| 1/3.94| 0.889704|; | 5| 19| 1/3.68| 0.695288|. So I think that MGLEVEL=6 is too high, it makes the coarsest mesh have too few points. We should choose e.g. MGLEVEL=4 for testing. The `turb_SA_RAE2822.cfg` with MGLEVEL=4, MGCYCLE=FULLMG_CYCLE runs without error with `mpirun -n 2`. With `mpirun -n 3`, I get an error sometimes. I think this is related to the third issue / #1430 .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964332198
https://github.com/su2code/SU2/pull/1362#issuecomment-1114979082:144,Deployability,update,update,144,"The following tasks have been finished:; - First issue: Missing initialization in `CTurbSSTSolver()`, fixed in c06e65e; - Second issue: Missing update of `FinestMesh`, fixed in a458251 ; - Third issue: Probably related to #1430, (partially?) fixed in f6f986e . The following optional tasks remain:; - Fourth issue: Missing update of `Convergence_FullMG`, not fixed yet.; - Regression test: E.g. as proposed in https://github.com/su2code/SU2/pull/1362#issuecomment-964163647, not added yet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-1114979082
https://github.com/su2code/SU2/pull/1362#issuecomment-1114979082:323,Deployability,update,update,323,"The following tasks have been finished:; - First issue: Missing initialization in `CTurbSSTSolver()`, fixed in c06e65e; - Second issue: Missing update of `FinestMesh`, fixed in a458251 ; - Third issue: Probably related to #1430, (partially?) fixed in f6f986e . The following optional tasks remain:; - Fourth issue: Missing update of `Convergence_FullMG`, not fixed yet.; - Regression test: E.g. as proposed in https://github.com/su2code/SU2/pull/1362#issuecomment-964163647, not added yet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-1114979082
https://github.com/su2code/SU2/pull/1362#issuecomment-1114979082:384,Testability,test,test,384,"The following tasks have been finished:; - First issue: Missing initialization in `CTurbSSTSolver()`, fixed in c06e65e; - Second issue: Missing update of `FinestMesh`, fixed in a458251 ; - Third issue: Probably related to #1430, (partially?) fixed in f6f986e . The following optional tasks remain:; - Fourth issue: Missing update of `Convergence_FullMG`, not fixed yet.; - Regression test: E.g. as proposed in https://github.com/su2code/SU2/pull/1362#issuecomment-964163647, not added yet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-1114979082
https://github.com/su2code/SU2/issues/1364#issuecomment-907388593:206,Modifiability,config,config,206,"Let's continue this here @suargi as it should be more visible for everyone. In principle, I like what you suggest, it is clean and concise.; However, I see one big issue with backwards compatibility of the config. KIND_TURB_MODEL is in almost every config (in the world) and we cannot simply break compatibility, something with this much impact would require SU2 v8 :smile: . This is not to say you could not implement what you propose, just that you need to make it compatible with the status quo.; For example:; KIND_TURB_MODEL= SA-NEQ; QCR= YES; (I'm not even sure if that makes sense but anyway); Needs to be converted internally to:; KIND_TURB_MODEL= SA; TURB_MODEL_CORRECTIONS= SA-NEG, SA-QCR2000. And of course, if someone uses the new option TURB_MODEL_CORRECTIONS you can enforce that KIND_TURB_MODEL only contains NONE, or SA, or SST, and that corrections do not appear in the config in any other way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-907388593
https://github.com/su2code/SU2/issues/1364#issuecomment-907388593:249,Modifiability,config,config,249,"Let's continue this here @suargi as it should be more visible for everyone. In principle, I like what you suggest, it is clean and concise.; However, I see one big issue with backwards compatibility of the config. KIND_TURB_MODEL is in almost every config (in the world) and we cannot simply break compatibility, something with this much impact would require SU2 v8 :smile: . This is not to say you could not implement what you propose, just that you need to make it compatible with the status quo.; For example:; KIND_TURB_MODEL= SA-NEQ; QCR= YES; (I'm not even sure if that makes sense but anyway); Needs to be converted internally to:; KIND_TURB_MODEL= SA; TURB_MODEL_CORRECTIONS= SA-NEG, SA-QCR2000. And of course, if someone uses the new option TURB_MODEL_CORRECTIONS you can enforce that KIND_TURB_MODEL only contains NONE, or SA, or SST, and that corrections do not appear in the config in any other way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-907388593
https://github.com/su2code/SU2/issues/1364#issuecomment-907388593:887,Modifiability,config,config,887,"Let's continue this here @suargi as it should be more visible for everyone. In principle, I like what you suggest, it is clean and concise.; However, I see one big issue with backwards compatibility of the config. KIND_TURB_MODEL is in almost every config (in the world) and we cannot simply break compatibility, something with this much impact would require SU2 v8 :smile: . This is not to say you could not implement what you propose, just that you need to make it compatible with the status quo.; For example:; KIND_TURB_MODEL= SA-NEQ; QCR= YES; (I'm not even sure if that makes sense but anyway); Needs to be converted internally to:; KIND_TURB_MODEL= SA; TURB_MODEL_CORRECTIONS= SA-NEG, SA-QCR2000. And of course, if someone uses the new option TURB_MODEL_CORRECTIONS you can enforce that KIND_TURB_MODEL only contains NONE, or SA, or SST, and that corrections do not appear in the config in any other way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-907388593
https://github.com/su2code/SU2/issues/1364#issuecomment-907388593:285,Usability,simpl,simply,285,"Let's continue this here @suargi as it should be more visible for everyone. In principle, I like what you suggest, it is clean and concise.; However, I see one big issue with backwards compatibility of the config. KIND_TURB_MODEL is in almost every config (in the world) and we cannot simply break compatibility, something with this much impact would require SU2 v8 :smile: . This is not to say you could not implement what you propose, just that you need to make it compatible with the status quo.; For example:; KIND_TURB_MODEL= SA-NEQ; QCR= YES; (I'm not even sure if that makes sense but anyway); Needs to be converted internally to:; KIND_TURB_MODEL= SA; TURB_MODEL_CORRECTIONS= SA-NEG, SA-QCR2000. And of course, if someone uses the new option TURB_MODEL_CORRECTIONS you can enforce that KIND_TURB_MODEL only contains NONE, or SA, or SST, and that corrections do not appear in the config in any other way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-907388593
https://github.com/su2code/SU2/issues/1364#issuecomment-907393264:185,Safety,avoid,avoid,185,"Oh and let's please discuss the plan for modifying the code in one of the developer meetings.; It would be good to start just with the options that are in the code and clean them up to avoid duplication, which would probably give some clues for how to handle new options without duplicating anything.; To do this safely we should have unit tests for each of the source terms (because I doubt we have full coverage in the regressions for all turbulence options).; etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-907393264
https://github.com/su2code/SU2/issues/1364#issuecomment-907393264:313,Safety,safe,safely,313,"Oh and let's please discuss the plan for modifying the code in one of the developer meetings.; It would be good to start just with the options that are in the code and clean them up to avoid duplication, which would probably give some clues for how to handle new options without duplicating anything.; To do this safely we should have unit tests for each of the source terms (because I doubt we have full coverage in the regressions for all turbulence options).; etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-907393264
https://github.com/su2code/SU2/issues/1364#issuecomment-907393264:340,Testability,test,tests,340,"Oh and let's please discuss the plan for modifying the code in one of the developer meetings.; It would be good to start just with the options that are in the code and clean them up to avoid duplication, which would probably give some clues for how to handle new options without duplicating anything.; To do this safely we should have unit tests for each of the source terms (because I doubt we have full coverage in the regressions for all turbulence options).; etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-907393264
https://github.com/su2code/SU2/issues/1364#issuecomment-916890178:156,Modifiability,config,config,156,"As discussed I will follow your suggestions and implement the new procedure of specifying the turbulence models guaranteeing backwards compatibility of the config file. ; ; Besides, the baseline or standalone Spalart-Allmaras turbulence model currently implemented in SU2 is actually its ft2=0 variation, a.k.a noft2. To keep compatibility with previous SU2 versions results it is preferable to keep the current nomenclature, i.e., SA will refer to the SA-noft2 variant. In that sense, to introduce the actual baseline version an additional variant should be implemented, yesft2 :), corresponding to the standard model found in the literature. I will make sure to properly document this matter in the SU2 website.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-916890178
https://github.com/su2code/SU2/issues/1364#issuecomment-917575455:437,Testability,log,logic,437,"The ft2 term was a ""not a very successful"" attempt to allow computation of transitional flow or relaminarization, where a region exists without turbulent diffusion. During the time that passed since the nineties, it was commonly considered ineffective. I think Philipe also agrees with that. That way, though historically it is not correct, I think the basic SA model should be with ft2=0; I appreciate your effort. I put some order and logic in a combination that creates a lot of misunderstanding by many; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-917575455
https://github.com/su2code/SU2/pull/1366#issuecomment-910441955:2,Deployability,update,updated,2,I updated the restart file in the TestCases directory so I suppose regressions apart from this branch will break until this PR is merged. Sorry,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1366#issuecomment-910441955
https://github.com/su2code/SU2/pull/1366#issuecomment-910441955:34,Testability,Test,TestCases,34,I updated the restart file in the TestCases directory so I suppose regressions apart from this branch will break until this PR is merged. Sorry,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1366#issuecomment-910441955
https://github.com/su2code/SU2/pull/1366#issuecomment-910525512:171,Testability,Test,TestCases,171,Yes it did but it's unrelated. Surprised this bug here could creep in. For the regression it seems like it is still using the old restart file and not the one I pushed to TestCases master a few hours ago. Not sure what I am missing here,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1366#issuecomment-910525512
https://github.com/su2code/SU2/issues/1373#issuecomment-922443848:55,Deployability,release,released,55,"Correction, they were fixed in the develop branch, not released yet #1366",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-922443848
https://github.com/su2code/SU2/issues/1373#issuecomment-932510910:109,Energy Efficiency,energy,energy,109,"I just ran the case and I see this as well, even after complete convergence. You clearly can see this in the energy and pressure (and density) but not in the momentum terms. The temperature field also looks smooth. So may be related to density/pressure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-932510910
https://github.com/su2code/SU2/issues/1373#issuecomment-932510910:81,Usability,clear,clearly,81,"I just ran the case and I see this as well, even after complete convergence. You clearly can see this in the energy and pressure (and density) but not in the momentum terms. The temperature field also looks smooth. So may be related to density/pressure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-932510910
https://github.com/su2code/SU2/issues/1373#issuecomment-932666689:120,Energy Efficiency,energy,energy,120,"What I found is that density unrelated values look smooth for example, velocities (I got it Momentum/Density) and total energy (Energy/Density). As I understand, pressure is calculated assuming perfect gas:; ![image](https://user-images.githubusercontent.com/74228020/135700745-843827fc-3b3c-4e4e-8d25-fd501d39f238.png); and temperature is ; ![image](https://user-images.githubusercontent.com/74228020/135700969-8c5b23b2-e6ae-42fc-a45f-949e455e2791.png); Pressure is function of density but temperature is not. I guess that's why temperature looks good. However, I don't know why momentum has no problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-932666689
https://github.com/su2code/SU2/issues/1373#issuecomment-932666689:128,Energy Efficiency,Energy,Energy,128,"What I found is that density unrelated values look smooth for example, velocities (I got it Momentum/Density) and total energy (Energy/Density). As I understand, pressure is calculated assuming perfect gas:; ![image](https://user-images.githubusercontent.com/74228020/135700745-843827fc-3b3c-4e4e-8d25-fd501d39f238.png); and temperature is ; ![image](https://user-images.githubusercontent.com/74228020/135700969-8c5b23b2-e6ae-42fc-a45f-949e455e2791.png); Pressure is function of density but temperature is not. I guess that's why temperature looks good. However, I don't know why momentum has no problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-932666689
https://github.com/su2code/SU2/issues/1373#issuecomment-938657587:7,Testability,test,tested,7,"I just tested some boundary conditions on O cylinder case.; And I found this issue occurs at near axis when AXISYMMETRIC = YES regardless of which BC is applied at axis (y=0). For example, this also arises on BC_HeatFlux_Wall with zero heat flux.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-938657587
https://github.com/su2code/SU2/issues/1373#issuecomment-938679304:43,Energy Efficiency,Green,Green-Gauss,43,Have you tried different gradient methods? Green-Gauss v Weighted Least Squares,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-938679304
https://github.com/su2code/SU2/issues/1373#issuecomment-1028187842:43,Performance,perform,performing,43,"Not sure if this issue is related, but I'm performing axisymmetric simulations of a convergent nozzle. Throughout most of the domain the axis values seem fine, but there is a region where density behaves quite strangely at the axis. What is seen here is the density gradient, just to make it more visible:; ![grafik](https://user-images.githubusercontent.com/42602495/152206391-755443cc-7c7e-43f1-812a-2335879027c4.png). Results obtained with SLAU2, 2nd order euler.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1028187842
https://github.com/su2code/SU2/issues/1373#issuecomment-1464335191:56,Usability,simpl,simple,56,"Just my 2¢ here. I've been struggling with a relatively simple simulation, Euler, 2D axisymmetric, supersonic, AUSM (SU2 7.5.1). I tried several meshes (and meshers) and always diverged no matter what (quality is ok, CFL as well). Conditions were ok, and were mimicking inv_wedge tutorial (which, btw was running ok even with axisymmetry ON). Long story short, I opened with a text editor the original geometry STEP file, and noticed it was carrying from the CAD some (engineering wise negligible) numerical terms (say, point 0, 0 was actually 0, 1e-6). Hence the symmetry axis was somewhat off. By correcting the STEP file, everything went fine. I wonder whether this is the expected behavior of this kind of simulation, and / or if there is any artificial diffusion parameter (such as ENTROPY_FIX_COEFF) that actually can sort things out for the EULER mode. Did any of you experienced anything similar?. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1464335191
https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891:340,Availability,toler,tolerance,340,"Thank you Pedro for the lightning reply! ; Yes, I see, unfortunately, I can't cross-check the log right now to see whether the ""STRAIGHT EDGE"" string was triggered, but I'll pay attention to that in the future for sure. . Anyway, I wonder whether the axis treatment is looking for a ""numerical 0"", or does perform some sort of filtering or tolerance on the mesh ( in some ways similar to what some CADs do). In my case, the body was in the order of meters, and the domain was in the order of 100 m.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891
https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891:449,Energy Efficiency,meter,meters,449,"Thank you Pedro for the lightning reply! ; Yes, I see, unfortunately, I can't cross-check the log right now to see whether the ""STRAIGHT EDGE"" string was triggered, but I'll pay attention to that in the future for sure. . Anyway, I wonder whether the axis treatment is looking for a ""numerical 0"", or does perform some sort of filtering or tolerance on the mesh ( in some ways similar to what some CADs do). In my case, the body was in the order of meters, and the domain was in the order of 100 m.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891
https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891:306,Performance,perform,perform,306,"Thank you Pedro for the lightning reply! ; Yes, I see, unfortunately, I can't cross-check the log right now to see whether the ""STRAIGHT EDGE"" string was triggered, but I'll pay attention to that in the future for sure. . Anyway, I wonder whether the axis treatment is looking for a ""numerical 0"", or does perform some sort of filtering or tolerance on the mesh ( in some ways similar to what some CADs do). In my case, the body was in the order of meters, and the domain was in the order of 100 m.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891
https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891:94,Testability,log,log,94,"Thank you Pedro for the lightning reply! ; Yes, I see, unfortunately, I can't cross-check the log right now to see whether the ""STRAIGHT EDGE"" string was triggered, but I'll pay attention to that in the future for sure. . Anyway, I wonder whether the axis treatment is looking for a ""numerical 0"", or does perform some sort of filtering or tolerance on the mesh ( in some ways similar to what some CADs do). In my case, the body was in the order of meters, and the domain was in the order of 100 m.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891
https://github.com/su2code/SU2/pull/1375#issuecomment-923111383:86,Integrability,rout,routines,86,@pcarruscag LGTM! Thanks for putting in the work and abstracting more of the repeated routines.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375#issuecomment-923111383
https://github.com/su2code/SU2/issues/1378#issuecomment-924779452:1226,Deployability,configurat,configuration,1226,"Hi, I've seen this with some (one) cgns file but not others (larger ones), for example I never had any issue with the finest HL-CRM reference grids on nodes with 128 cores.; I suspect this has something to do with how the files are generated, but I did not investigate further. I think the HL-CRM are made by Pointwise but I do not know the export settings used, do let us know if you find a solution.; Regarding the ASCII format, we have recently improved the mesh reader (in the develop branch), if you are generating the file yourself, and if you list the ""points"" before the ""elements"" in the file, it may be up to 4 times faster to read it.; Finally, the file systems used in the clusters of some very fine institutions are absolute trash (not saying this is your case, just making you aware of the fact), and they respond very badly to having many cores reading the same file. Especially for ASCII because here all cores read the entire file, and not just some sections.; If you run the hybrid parallel version of SU2 this will be less of a problem because fewer cores will be participating in file-IO (but all of them will still be used for computation).; https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#basic-configuration; https://su2foundation.org/wp-content/uploads/2020/06/Gomes.pdf; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-924779452
https://github.com/su2code/SU2/issues/1378#issuecomment-924779452:1226,Modifiability,config,configuration,1226,"Hi, I've seen this with some (one) cgns file but not others (larger ones), for example I never had any issue with the finest HL-CRM reference grids on nodes with 128 cores.; I suspect this has something to do with how the files are generated, but I did not investigate further. I think the HL-CRM are made by Pointwise but I do not know the export settings used, do let us know if you find a solution.; Regarding the ASCII format, we have recently improved the mesh reader (in the develop branch), if you are generating the file yourself, and if you list the ""points"" before the ""elements"" in the file, it may be up to 4 times faster to read it.; Finally, the file systems used in the clusters of some very fine institutions are absolute trash (not saying this is your case, just making you aware of the fact), and they respond very badly to having many cores reading the same file. Especially for ASCII because here all cores read the entire file, and not just some sections.; If you run the hybrid parallel version of SU2 this will be less of a problem because fewer cores will be participating in file-IO (but all of them will still be used for computation).; https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#basic-configuration; https://su2foundation.org/wp-content/uploads/2020/06/Gomes.pdf; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-924779452
https://github.com/su2code/SU2/issues/1378#issuecomment-986854142:92,Energy Efficiency,reduce,reduces,92,"Hi, I can confirm that the ASCII mesh reader has been improved a lot in version 7.2.1. This reduces the need for CGNS format. Hybrid parallel helps also, thanks for the hints. I did not find a way for the CGNS to work yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-986854142
https://github.com/su2code/SU2/issues/1378#issuecomment-1003706110:170,Energy Efficiency,reduce,reduce,170,Hi @jf-thomas which version of CGNS are you using ? Maybe applying a cgnsupdate on the mesh file prior to running SU2 might help since SU2 rely on recent cgns version to reduce memory footprint.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-1003706110
https://github.com/su2code/SU2/issues/1378#issuecomment-1004135503:131,Deployability,upgrade,upgrade,131,"Hi @MicK7, I am using CGNS version 2.55 which comes from the meshing tool. I did not know about the cgnsupdate tool, I will try to upgrade the CGNS with this. Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-1004135503
https://github.com/su2code/SU2/issues/1378#issuecomment-1816802569:473,Deployability,update,updated,473,"Hi all,; I am facing the same issue as @jf-thomas with SU2 v7.5. The only persistent problem is that updating CGNS mesh version from 3.2 to 4.3 now raises a conflict with the CGNS library version and the run fails. I acknowledge the warning message following this thread when using old CGNS versions:; ```c++; WARNING: The CGNS file version (3.21) is old and may cause high memory usage issues, consider updating the file with the cgnsupdate tool.; ``` ; However, with the updated CGNS mesh 4.3:; ```c++; *** Warning:The file being read is more recent that the CGNS library used ***; ``` ; Checking in SU2/externals/cgns/cgnslib.c where the above message is encoded, there is a comment stating that:; ```c++; /* This code allows reading version newer than the lib, as long as the 1st digit of the versions are equal */; ``` ; The same issue is manifest with SU2 v8. ; Should one only use the exact CGNS 4.0? I wonder if @jf-thomas faced this issue with v4.2 before doing the trick with hdf5?; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-1816802569
https://github.com/su2code/SU2/issues/1378#issuecomment-1816802569:241,Integrability,message,message,241,"Hi all,; I am facing the same issue as @jf-thomas with SU2 v7.5. The only persistent problem is that updating CGNS mesh version from 3.2 to 4.3 now raises a conflict with the CGNS library version and the run fails. I acknowledge the warning message following this thread when using old CGNS versions:; ```c++; WARNING: The CGNS file version (3.21) is old and may cause high memory usage issues, consider updating the file with the cgnsupdate tool.; ``` ; However, with the updated CGNS mesh 4.3:; ```c++; *** Warning:The file being read is more recent that the CGNS library used ***; ``` ; Checking in SU2/externals/cgns/cgnslib.c where the above message is encoded, there is a comment stating that:; ```c++; /* This code allows reading version newer than the lib, as long as the 1st digit of the versions are equal */; ``` ; The same issue is manifest with SU2 v8. ; Should one only use the exact CGNS 4.0? I wonder if @jf-thomas faced this issue with v4.2 before doing the trick with hdf5?; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-1816802569
https://github.com/su2code/SU2/issues/1378#issuecomment-1816802569:647,Integrability,message,message,647,"Hi all,; I am facing the same issue as @jf-thomas with SU2 v7.5. The only persistent problem is that updating CGNS mesh version from 3.2 to 4.3 now raises a conflict with the CGNS library version and the run fails. I acknowledge the warning message following this thread when using old CGNS versions:; ```c++; WARNING: The CGNS file version (3.21) is old and may cause high memory usage issues, consider updating the file with the cgnsupdate tool.; ``` ; However, with the updated CGNS mesh 4.3:; ```c++; *** Warning:The file being read is more recent that the CGNS library used ***; ``` ; Checking in SU2/externals/cgns/cgnslib.c where the above message is encoded, there is a comment stating that:; ```c++; /* This code allows reading version newer than the lib, as long as the 1st digit of the versions are equal */; ``` ; The same issue is manifest with SU2 v8. ; Should one only use the exact CGNS 4.0? I wonder if @jf-thomas faced this issue with v4.2 before doing the trick with hdf5?; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-1816802569
https://github.com/su2code/SU2/issues/1378#issuecomment-1835515276:84,Availability,down,down,84,Maybe you should open a separate issue to have more visibility.; The solution comes down to upgrading the cgns version of su2 (see #2179),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-1835515276
https://github.com/su2code/SU2/issues/1379#issuecomment-925310740:9,Availability,error,error,9,"The next error I got when trying to build was a ""getline()"" undefined reference. . This is because getline is not a standard C library function and is part of the POSIX package. i.e. the reference does not exist on Mingw/Windows builds. I had to replace all occurrences of getline with fgets. Hope this doesn't break anything in the future.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379#issuecomment-925310740
https://github.com/su2code/SU2/pull/1382#issuecomment-927138184:182,Usability,simpl,simpler,182,"Have a look at my last comment in #763, I think there is a better way of handling linear system periodicity instead of what we do, which may allow you to run at higher CFL (and with simpler periodic comms). But at the moment you are missing the PERIODIC_IMPLICIT comms after solving the linear system, see CompleteImplicitIteration_impl in CFVMFlowSolverBase.hpp.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927138184
https://github.com/su2code/SU2/pull/1382#issuecomment-927303571:404,Usability,simpl,simpler,404,"Thanks @pcarruscag , I had to do a few additional things together with the PERIODIC_IMPLICIT communication to make it work, but that also brought me on the right track 👍 Now it works really nicely from my point of view. > Have a look at my last comment in #763, I think there is a better way of handling linear system periodicity instead of what we do, which may allow you to run at higher CFL (and with simpler periodic comms). I need to have a second look at this. So non of your thoughts back then are yet incorporated in this PR",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927303571
https://github.com/su2code/SU2/pull/1382#issuecomment-927306822:5,Energy Efficiency,adapt,adapt,5,I'll adapt one of the existing Testcases to use this feature,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927306822
https://github.com/su2code/SU2/pull/1382#issuecomment-927306822:5,Modifiability,adapt,adapt,5,I'll adapt one of the existing Testcases to use this feature,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927306822
https://github.com/su2code/SU2/pull/1382#issuecomment-927306822:31,Testability,Test,Testcases,31,I'll adapt one of the existing Testcases to use this feature,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927306822
https://github.com/su2code/SU2/pull/1382#issuecomment-927571088:44,Testability,test,testing,44,@TobiKattmann Thanks for sharing! I will be testing this part of the code with our test case soon.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927571088
https://github.com/su2code/SU2/pull/1382#issuecomment-927571088:83,Testability,test,test,83,@TobiKattmann Thanks for sharing! I will be testing this part of the code with our test case soon.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927571088
https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:15,Energy Efficiency,adapt,adapt,15,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843
https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:130,Energy Efficiency,adapt,adapt,130,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843
https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:15,Modifiability,adapt,adapt,15,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843
https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:130,Modifiability,adapt,adapt,130,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843
https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:41,Testability,Test,Testcases,41,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843
https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:288,Testability,Test,Testcase,288,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843
https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:481,Testability,Test,Testcase,481,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843
https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:552,Testability,Test,Testcase,552,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843
https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:617,Testability,Test,Testcases,617,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843
https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:710,Testability,Test,Testcase,710,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843
https://github.com/su2code/SU2/issues/1384#issuecomment-932169245:67,Testability,test,testset,67,Yep and as a first check one can of course always re-run the whole testset by clicking `re-run jobs` in the top right corner of the actions tab,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1384#issuecomment-932169245
https://github.com/su2code/SU2/pull/1387#issuecomment-938505427:39,Availability,error,error,39,"Hi @pcarruscag, it sounds strange this error since before opening the PR I ran the same tests on my repository and it compliled correctly. Here you can have a look at it [https://github.com/baldang/SU2/runs/3778439078?check_suite_focus=true](https://github.com/baldang/SU2/runs/3778439078?check_suite_focus=true) . I will let you know if I find a solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-938505427
https://github.com/su2code/SU2/pull/1387#issuecomment-938505427:88,Testability,test,tests,88,"Hi @pcarruscag, it sounds strange this error since before opening the PR I ran the same tests on my repository and it compliled correctly. Here you can have a look at it [https://github.com/baldang/SU2/runs/3778439078?check_suite_focus=true](https://github.com/baldang/SU2/runs/3778439078?check_suite_focus=true) . I will let you know if I find a solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-938505427
https://github.com/su2code/SU2/pull/1387#issuecomment-938511465:26,Testability,test,tests,26,"Hmm ok I'm re-running the tests, maybe something went wrong because I merged without merging develop first.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-938511465
https://github.com/su2code/SU2/pull/1387#issuecomment-938518710:56,Testability,test,tests,56,The win build failed again but I have just ran the same tests on my forked repository and it builds correctly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-938518710
https://github.com/su2code/SU2/pull/1387#issuecomment-940432671:34,Availability,error,error,34,"Hi @pcarruscag, I went trough the error in the Windows build and it is related to `cgsize_t` type definition contained in the CGNS library and not in the implemented code. It sounds strange since that part of code was already present in the code and `cgsize_t` was already used in `CCGNSMeshReaderFVM` class. To be sure, I removed the forked SU2 from my repositories and then I forked it again to have an exact copy of `develop` branch. I ran ""Relase Management"" pipeline and everything is fine. Do you have any suggestion regarding this issue?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-940432671
https://github.com/su2code/SU2/pull/1387#issuecomment-940432671:463,Deployability,pipeline,pipeline,463,"Hi @pcarruscag, I went trough the error in the Windows build and it is related to `cgsize_t` type definition contained in the CGNS library and not in the implemented code. It sounds strange since that part of code was already present in the code and `cgsize_t` was already used in `CCGNSMeshReaderFVM` class. To be sure, I removed the forked SU2 from my repositories and then I forked it again to have an exact copy of `develop` branch. I ran ""Relase Management"" pipeline and everything is fine. Do you have any suggestion regarding this issue?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-940432671
https://github.com/su2code/SU2/pull/1387#issuecomment-941136807:185,Integrability,message,message,185,"Hi @baldang, problem solved: https://github.com/su2code/SU2/commit/bba499e6bbb3a91cdec5beca94a095cf1bf4576c; I kinda found the solution here https://sourceforge.net/p/mingw-w64/mailman/message/24692038/; I don't know why this built in your fork.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-941136807
https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:916,Availability,redundant,redundant,916,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996
https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:113,Energy Efficiency,adapt,adapted,113,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996
https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:166,Energy Efficiency,adapt,adapted,166,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996
https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:113,Modifiability,adapt,adapted,113,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996
https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:166,Modifiability,adapt,adapted,166,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996
https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:492,Modifiability,variab,variable,492,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996
https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:910,Safety,Avoid,Avoid,910,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996
https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:916,Safety,redund,redundant,916,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996
https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:1298,Security,validat,validation,1298,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996
https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:212,Testability,Test,Testcase,212,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996
https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:740,Testability,test,testcase,740,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996
https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:1240,Testability,test,testing,1240,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996
https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:392,Usability,simpl,simple,392,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996
https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:790,Availability,avail,available,790,"There is sth weird going on with the added inlet regression test. And I got to believe that it has to do with the primitive-container-indexing that took place in #1392 because when I revert to commit fe6ba90aab388ed6d9ff77fa3cb03434fe86654c right before that merge took place everything works fine. Maybe I also did a mistake when porting the CSpeciesSolver to that new structure. I am trying to do a verification of the inlet files by using the written example_inlet_file as input which should result in the very same history as the non-inlet version. I see a difference in Residuals which is sometimes not consistent (I had cases where I cycled through 3 different outcomes for the inlet version in a random order...wtf). It has nothing to do with the wrong values being read in and made available to the Solver, they are perfect. I now did 2 full-time days of debugging and I a don't get it. I have traced the problem down quite a bit and know which code lines I have to comment to make the problem go away ... but it doesnt make sense: I am not allowed (I can, but then I have non-equal diffs) to write anything (but zero!) in certain blocks of the local variable `profileData` in `CMarkerProfileReader`. That is only the case for more than 1 species equation! I also overwrote the `Inlet_Species_Var` using the `SetUnformInlet` which just takes the cfg-Marker values. . It seems to be some memory-problem and valgrind trys to speak to me but can only point me to the constructor of the Avg_GradSpecies for the volume in CDriver and tells me about a `Conditional jump or move depends on uninitialised value(s)` in `CSysSolve.cpp:131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](un",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603
https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:921,Availability,down,down,921,"There is sth weird going on with the added inlet regression test. And I got to believe that it has to do with the primitive-container-indexing that took place in #1392 because when I revert to commit fe6ba90aab388ed6d9ff77fa3cb03434fe86654c right before that merge took place everything works fine. Maybe I also did a mistake when porting the CSpeciesSolver to that new structure. I am trying to do a verification of the inlet files by using the written example_inlet_file as input which should result in the very same history as the non-inlet version. I see a difference in Residuals which is sometimes not consistent (I had cases where I cycled through 3 different outcomes for the inlet version in a random order...wtf). It has nothing to do with the wrong values being read in and made available to the Solver, they are perfect. I now did 2 full-time days of debugging and I a don't get it. I have traced the problem down quite a bit and know which code lines I have to comment to make the problem go away ... but it doesnt make sense: I am not allowed (I can, but then I have non-equal diffs) to write anything (but zero!) in certain blocks of the local variable `profileData` in `CMarkerProfileReader`. That is only the case for more than 1 species equation! I also overwrote the `Inlet_Species_Var` using the `SetUnformInlet` which just takes the cfg-Marker values. . It seems to be some memory-problem and valgrind trys to speak to me but can only point me to the constructor of the Avg_GradSpecies for the volume in CDriver and tells me about a `Conditional jump or move depends on uninitialised value(s)` in `CSysSolve.cpp:131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](un",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603
https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:5664,Availability,error,error,5664,"alue was created by a heap allocation; 355 ==139924== at 0x4C2A1E3: operator new(unsigned long) (vg_replace_malloc.c:334); 356 ==139924== by 0x47A2CF: void CDriver::InstantiateSpeciesNumerics<CIncEulerVariable::CIndices<unsigned short> >(unsigned short, int, CConfig const*, CSolver const*, CNumerics****&) const (CDriver.cpp:1366); 357 ==139924== by 0x463C0B: CDriver::Numerics_Preprocessing(CConfig*, CGeometry**, CSolver***, CNumerics****&) const (CDriver.cpp:2053); 358 ==139924== by 0x458FAB: CDriver::CDriver(char*, unsigned short, ompi_communicator_t*, bool) (CDriver.cpp:207); 359 ==139924== by 0x48ADD5: CSinglezoneDriver::CSinglezoneDriver(char*, unsigned short, ompi_communicator_t*) (CSinglezoneDriver.cpp:38); 360 ==139924== by 0x415ACE: main (SU2_CFD.cpp:124); ```; i.e. the norm of the residual; (this does not occur for the same case with only 1 species). My first thought: ok if it comes from species_diffusion and i get pointed to the `nrm` then it sth going with the residual so I put a conditional for the `Flux` after its computation which should trigger valgrind to show another error there which it doesn't. ... And it only shows up when using inlet files with more than 1 species (meanign the general problem and the above valgrind problem). . That whole debugging experience was total garbage because the whole problem is super flaky where I feel I cannot rely on the problem to show up consistently and seemingly unrelated changes shift the whole problem... my favorite was: at some point I got the classic `FGMRES diverged` thing at the simulation start -> I thought lets go and check for NAN's and comment in fenv -> with the two additonal lines commented in + compiled the problem was gone -> ok, well revert the change and test again -> Problem Still gone and not seen again UNTIL i look at what the github regression test do because there it shows up again whereas I can run that no problem locally. ; I dont know what to do about this, I tried quite a few things withou",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603
https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:1580,Integrability,depend,depends,1580," in the very same history as the non-inlet version. I see a difference in Residuals which is sometimes not consistent (I had cases where I cycled through 3 different outcomes for the inlet version in a random order...wtf). It has nothing to do with the wrong values being read in and made available to the Solver, they are perfect. I now did 2 full-time days of debugging and I a don't get it. I have traced the problem down quite a bit and know which code lines I have to comment to make the problem go away ... but it doesnt make sense: I am not allowed (I can, but then I have non-equal diffs) to write anything (but zero!) in certain blocks of the local variable `profileData` in `CMarkerProfileReader`. That is only the case for more than 1 species equation! I also overwrote the `Inlet_Species_Var` using the `SetUnformInlet` which just takes the cfg-Marker values. . It seems to be some memory-problem and valgrind trys to speak to me but can only point me to the constructor of the Avg_GradSpecies for the volume in CDriver and tells me about a `Conditional jump or move depends on uninitialised value(s)` in `CSysSolve.cpp:131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x4c2a801 (operator new[](unsigned long)); 339 --139924-- REDIR: 0x53da3e0 (libstdc++.so.6:operator delete[](void*)) redirected to 0x4c2b596 (operator delete[](void*)); 340 --139924-- REDIR: 0x53dc2e0 (libstdc++.so.6:operator new(unsigned long, std::nothrow_t const&)) redirected to 0x4c2a3af (operator new(unsigned long, std::nothrow_t const&)); 341 --139924-- REDIR: 0x53da3d0 (libstdc++.so.6:operator delete(void*, std::nothrow_t const&)) redirected to 0x4c2b2a8 (operat",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603
https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:2584,Integrability,depend,depends,2584,"131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x4c2a801 (operator new[](unsigned long)); 339 --139924-- REDIR: 0x53da3e0 (libstdc++.so.6:operator delete[](void*)) redirected to 0x4c2b596 (operator delete[](void*)); 340 --139924-- REDIR: 0x53dc2e0 (libstdc++.so.6:operator new(unsigned long, std::nothrow_t const&)) redirected to 0x4c2a3af (operator new(unsigned long, std::nothrow_t const&)); 341 --139924-- REDIR: 0x53da3d0 (libstdc++.so.6:operator delete(void*, std::nothrow_t const&)) redirected to 0x4c2b2a8 (operator delete(void*, std::nothrow_t const&)); 342 ==139924== Conditional jump or move depends on uninitialised value(s); 343 ==139924== at 0xE2D19C: CSysSolve<double>::ModGramSchmidt(int, C2DContainer<unsigned long, double, (StorageType)0, 64ul, 0ul, 0ul>&, std::vector<CSysVector<double>, std::allocator<CSysVector<double> > >&) const (CSysSolve.cpp:131); 344 ==139924== by 0xE2F292: CSysSolve<double>::FGMRES_LinSolver(CSysVector<double> const&, CSysVector<double>&, CMatrixVectorProduct<double> const&, CPreconditioner<double> const&, double, unsigned long, double&, bool, CConfig const*) const (CSysSolve.cpp:456); 345 ==139924== by 0xE3187E: CSysSolve<double>::Solve(CSysMatrix<double>&, CSysVector<double> const&, CSysVector<double>&, CGeometry*, CConfig const*) (CSysSolve.cpp:899); 346 ==139924== by 0x88070D: CScalarSolver<CSpeciesVariable>::ImplicitEuler_Iteration(CGeometry*, CSolver**, CConfig*) (CScalarSolver.inl:395); 347 ==139924== by 0xB8D475: CIntegration::Time_Integration(CGeometry*, CSolver**, CConfig*, unsigned short, unsigned short) (CIntegration.cpp:208); 348 ==139924== by 0x4AD428: CSingleGridIntegration::Sin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603
https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:1159,Modifiability,variab,variable,1159,"the primitive-container-indexing that took place in #1392 because when I revert to commit fe6ba90aab388ed6d9ff77fa3cb03434fe86654c right before that merge took place everything works fine. Maybe I also did a mistake when porting the CSpeciesSolver to that new structure. I am trying to do a verification of the inlet files by using the written example_inlet_file as input which should result in the very same history as the non-inlet version. I see a difference in Residuals which is sometimes not consistent (I had cases where I cycled through 3 different outcomes for the inlet version in a random order...wtf). It has nothing to do with the wrong values being read in and made available to the Solver, they are perfect. I now did 2 full-time days of debugging and I a don't get it. I have traced the problem down quite a bit and know which code lines I have to comment to make the problem go away ... but it doesnt make sense: I am not allowed (I can, but then I have non-equal diffs) to write anything (but zero!) in certain blocks of the local variable `profileData` in `CMarkerProfileReader`. That is only the case for more than 1 species equation! I also overwrote the `Inlet_Species_Var` using the `SetUnformInlet` which just takes the cfg-Marker values. . It seems to be some memory-problem and valgrind trys to speak to me but can only point me to the constructor of the Avg_GradSpecies for the volume in CDriver and tells me about a `Conditional jump or move depends on uninitialised value(s)` in `CSysSolve.cpp:131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x4c2a801 (operator new[](unsigned long)); 339 --139924-- REDIR: 0x53da3e0 (libstd",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603
https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:1913,Modifiability,config,config,1913,"days of debugging and I a don't get it. I have traced the problem down quite a bit and know which code lines I have to comment to make the problem go away ... but it doesnt make sense: I am not allowed (I can, but then I have non-equal diffs) to write anything (but zero!) in certain blocks of the local variable `profileData` in `CMarkerProfileReader`. That is only the case for more than 1 species equation! I also overwrote the `Inlet_Species_Var` using the `SetUnformInlet` which just takes the cfg-Marker values. . It seems to be some memory-problem and valgrind trys to speak to me but can only point me to the constructor of the Avg_GradSpecies for the volume in CDriver and tells me about a `Conditional jump or move depends on uninitialised value(s)` in `CSysSolve.cpp:131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x4c2a801 (operator new[](unsigned long)); 339 --139924-- REDIR: 0x53da3e0 (libstdc++.so.6:operator delete[](void*)) redirected to 0x4c2b596 (operator delete[](void*)); 340 --139924-- REDIR: 0x53dc2e0 (libstdc++.so.6:operator new(unsigned long, std::nothrow_t const&)) redirected to 0x4c2a3af (operator new(unsigned long, std::nothrow_t const&)); 341 --139924-- REDIR: 0x53da3d0 (libstdc++.so.6:operator delete(void*, std::nothrow_t const&)) redirected to 0x4c2b2a8 (operator delete(void*, std::nothrow_t const&)); 342 ==139924== Conditional jump or move depends on uninitialised value(s); 343 ==139924== at 0xE2D19C: CSysSolve<double>::ModGramSchmidt(int, C2DContainer<unsigned long, double, (StorageType)0, 64ul, 0ul, 0ul>&, std::vector<CSysVector<double>, std::allocator<CSysVector<double> > >&) const (CSysSolve.cpp:131); 3",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603
https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:60,Testability,test,test,60,"There is sth weird going on with the added inlet regression test. And I got to believe that it has to do with the primitive-container-indexing that took place in #1392 because when I revert to commit fe6ba90aab388ed6d9ff77fa3cb03434fe86654c right before that merge took place everything works fine. Maybe I also did a mistake when porting the CSpeciesSolver to that new structure. I am trying to do a verification of the inlet files by using the written example_inlet_file as input which should result in the very same history as the non-inlet version. I see a difference in Residuals which is sometimes not consistent (I had cases where I cycled through 3 different outcomes for the inlet version in a random order...wtf). It has nothing to do with the wrong values being read in and made available to the Solver, they are perfect. I now did 2 full-time days of debugging and I a don't get it. I have traced the problem down quite a bit and know which code lines I have to comment to make the problem go away ... but it doesnt make sense: I am not allowed (I can, but then I have non-equal diffs) to write anything (but zero!) in certain blocks of the local variable `profileData` in `CMarkerProfileReader`. That is only the case for more than 1 species equation! I also overwrote the `Inlet_Species_Var` using the `SetUnformInlet` which just takes the cfg-Marker values. . It seems to be some memory-problem and valgrind trys to speak to me but can only point me to the constructor of the Avg_GradSpecies for the volume in CDriver and tells me about a `Conditional jump or move depends on uninitialised value(s)` in `CSysSolve.cpp:131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](un",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603
https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:6316,Testability,test,test,6316,"tantiateSpeciesNumerics<CIncEulerVariable::CIndices<unsigned short> >(unsigned short, int, CConfig const*, CSolver const*, CNumerics****&) const (CDriver.cpp:1366); 357 ==139924== by 0x463C0B: CDriver::Numerics_Preprocessing(CConfig*, CGeometry**, CSolver***, CNumerics****&) const (CDriver.cpp:2053); 358 ==139924== by 0x458FAB: CDriver::CDriver(char*, unsigned short, ompi_communicator_t*, bool) (CDriver.cpp:207); 359 ==139924== by 0x48ADD5: CSinglezoneDriver::CSinglezoneDriver(char*, unsigned short, ompi_communicator_t*) (CSinglezoneDriver.cpp:38); 360 ==139924== by 0x415ACE: main (SU2_CFD.cpp:124); ```; i.e. the norm of the residual; (this does not occur for the same case with only 1 species). My first thought: ok if it comes from species_diffusion and i get pointed to the `nrm` then it sth going with the residual so I put a conditional for the `Flux` after its computation which should trigger valgrind to show another error there which it doesn't. ... And it only shows up when using inlet files with more than 1 species (meanign the general problem and the above valgrind problem). . That whole debugging experience was total garbage because the whole problem is super flaky where I feel I cannot rely on the problem to show up consistently and seemingly unrelated changes shift the whole problem... my favorite was: at some point I got the classic `FGMRES diverged` thing at the simulation start -> I thought lets go and check for NAN's and comment in fenv -> with the two additonal lines commented in + compiled the problem was gone -> ok, well revert the change and test again -> Problem Still gone and not seen again UNTIL i look at what the github regression test do because there it shows up again whereas I can run that no problem locally. ; I dont know what to do about this, I tried quite a few things without success but I am glad for each suggestion. Oh and in all of this the mean flow (and turbulence) residuals are perfectly matching. So it is a species specific problem",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603
https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:6411,Testability,test,test,6411,"tantiateSpeciesNumerics<CIncEulerVariable::CIndices<unsigned short> >(unsigned short, int, CConfig const*, CSolver const*, CNumerics****&) const (CDriver.cpp:1366); 357 ==139924== by 0x463C0B: CDriver::Numerics_Preprocessing(CConfig*, CGeometry**, CSolver***, CNumerics****&) const (CDriver.cpp:2053); 358 ==139924== by 0x458FAB: CDriver::CDriver(char*, unsigned short, ompi_communicator_t*, bool) (CDriver.cpp:207); 359 ==139924== by 0x48ADD5: CSinglezoneDriver::CSinglezoneDriver(char*, unsigned short, ompi_communicator_t*) (CSinglezoneDriver.cpp:38); 360 ==139924== by 0x415ACE: main (SU2_CFD.cpp:124); ```; i.e. the norm of the residual; (this does not occur for the same case with only 1 species). My first thought: ok if it comes from species_diffusion and i get pointed to the `nrm` then it sth going with the residual so I put a conditional for the `Flux` after its computation which should trigger valgrind to show another error there which it doesn't. ... And it only shows up when using inlet files with more than 1 species (meanign the general problem and the above valgrind problem). . That whole debugging experience was total garbage because the whole problem is super flaky where I feel I cannot rely on the problem to show up consistently and seemingly unrelated changes shift the whole problem... my favorite was: at some point I got the classic `FGMRES diverged` thing at the simulation start -> I thought lets go and check for NAN's and comment in fenv -> with the two additonal lines commented in + compiled the problem was gone -> ok, well revert the change and test again -> Problem Still gone and not seen again UNTIL i look at what the github regression test do because there it shows up again whereas I can run that no problem locally. ; I dont know what to do about this, I tried quite a few things without success but I am glad for each suggestion. Oh and in all of this the mean flow (and turbulence) residuals are perfectly matching. So it is a species specific problem",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603
https://github.com/su2code/SU2/pull/1388#issuecomment-976586367:413,Testability,log,logic,413,"I still want to; - [x] make a `ScalarOutput` instead of `Turboutput` section for history and volume and add it to comp/nemo as well (Edit: See 8d87b35 and the two following commits); - [x] add surface species variance as an output quantity (Edit: 048cb3a The impl right now is a bit ugly, but it works as intended); - [x] Ensure that the restarts are working perfectly 8f8952... ; - [x] ... and move the pre-post logic to the species solver exclusively 156d0c5; - [x] Clean the regression test and add suitable README files that explain a bit the purpose of each; - [x] Clean all of my `TK::` comments and make sure none of my notes gets forgotten. all small aspects but hopefully I am finished by the end of the week",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-976586367
https://github.com/su2code/SU2/pull/1388#issuecomment-976586367:489,Testability,test,test,489,"I still want to; - [x] make a `ScalarOutput` instead of `Turboutput` section for history and volume and add it to comp/nemo as well (Edit: See 8d87b35 and the two following commits); - [x] add surface species variance as an output quantity (Edit: 048cb3a The impl right now is a bit ugly, but it works as intended); - [x] Ensure that the restarts are working perfectly 8f8952... ; - [x] ... and move the pre-post logic to the species solver exclusively 156d0c5; - [x] Clean the regression test and add suitable README files that explain a bit the purpose of each; - [x] Clean all of my `TK::` comments and make sure none of my notes gets forgotten. all small aspects but hopefully I am finished by the end of the week",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-976586367
https://github.com/su2code/SU2/pull/1388#issuecomment-982771284:28,Security,validat,validation,28,"I also just made a gradient validation with the species variance OF ... will have the small additions in a follow up PR.; Small and easy case but with SST and 2 species transport equations; ```; SURFACE_SPECIES_VARIANCE gradient ; +-----------+-------------------+-------------------+-------------------+-------------------+-------------+; | DV number | DA gradient | FD gradient | absolute diff | relative diff [%] | sign change |; +-----------+-------------------+-------------------+-------------------+-------------------+-------------+; | 0 | -0.0015565547 | -0.0015568653 | 0.0000003106 | 0.0199523955 | 0 |; | 1 | -0.0002704356 | -0.0002704940 | 0.0000000584 | 0.0215893397 | 0 |; | 2 | 0.0005546628 | 0.0005546735 | -0.0000000107 | -0.0019320096 | 0 |; | 3 | 0.0008743823 | 0.0008743497 | 0.0000000325 | 0.0037214309 | 0 |; | 4 | 0.0008629093 | 0.0008627899 | 0.0000001194 | 0.0138354969 | 0 |; | 5 | -0.0015565547 | -0.0015568653 | 0.0000003106 | 0.0199522614 | 0 |; | 6 | -0.0002704356 | -0.0002704940 | 0.0000000584 | 0.0215901515 | 0 |; | 7 | 0.0005546628 | 0.0005546735 | -0.0000000107 | -0.0019318288 | 0 |; | 8 | 0.0008743823 | 0.0008743497 | 0.0000000325 | 0.0037199429 | 0 |; | 9 | 0.0008629093 | 0.0008627899 | 0.0000001194 | 0.0138353462 | 0 |; +-----------+-------------------+-------------------+-------------------+-------------------+-------------+. ```. I only consider the y-direction of the points and and fixed the first two ""columns"" to have a smooth transition. Additionally during deformation i have the outlet as MARKER_SYM for smooth Volume mesh morphing , i.e. only the wall is in DV_MARKER. This Gradient validation was brought to you by: FADO :); ![image](https://user-images.githubusercontent.com/31306376/144081781-2c02eae0-f135-4235-8ebf-bc6c83c65345.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-982771284
https://github.com/su2code/SU2/pull/1388#issuecomment-982771284:1639,Security,validat,validation,1639,"I also just made a gradient validation with the species variance OF ... will have the small additions in a follow up PR.; Small and easy case but with SST and 2 species transport equations; ```; SURFACE_SPECIES_VARIANCE gradient ; +-----------+-------------------+-------------------+-------------------+-------------------+-------------+; | DV number | DA gradient | FD gradient | absolute diff | relative diff [%] | sign change |; +-----------+-------------------+-------------------+-------------------+-------------------+-------------+; | 0 | -0.0015565547 | -0.0015568653 | 0.0000003106 | 0.0199523955 | 0 |; | 1 | -0.0002704356 | -0.0002704940 | 0.0000000584 | 0.0215893397 | 0 |; | 2 | 0.0005546628 | 0.0005546735 | -0.0000000107 | -0.0019320096 | 0 |; | 3 | 0.0008743823 | 0.0008743497 | 0.0000000325 | 0.0037214309 | 0 |; | 4 | 0.0008629093 | 0.0008627899 | 0.0000001194 | 0.0138354969 | 0 |; | 5 | -0.0015565547 | -0.0015568653 | 0.0000003106 | 0.0199522614 | 0 |; | 6 | -0.0002704356 | -0.0002704940 | 0.0000000584 | 0.0215901515 | 0 |; | 7 | 0.0005546628 | 0.0005546735 | -0.0000000107 | -0.0019318288 | 0 |; | 8 | 0.0008743823 | 0.0008743497 | 0.0000000325 | 0.0037199429 | 0 |; | 9 | 0.0008629093 | 0.0008627899 | 0.0000001194 | 0.0138353462 | 0 |; +-----------+-------------------+-------------------+-------------------+-------------------+-------------+. ```. I only consider the y-direction of the points and and fixed the first two ""columns"" to have a smooth transition. Additionally during deformation i have the outlet as MARKER_SYM for smooth Volume mesh morphing , i.e. only the wall is in DV_MARKER. This Gradient validation was brought to you by: FADO :); ![image](https://user-images.githubusercontent.com/31306376/144081781-2c02eae0-f135-4235-8ebf-bc6c83c65345.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-982771284
https://github.com/su2code/SU2/pull/1388#issuecomment-983566164:306,Deployability,release,released,306,This pull request **introduces 1 alert** and **fixes 2** when merging d7757db62a443b0c65ca760f3705a495415602e5 into 42dcf5a965a895aac2afea14b65023a7591826c0 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-90f5ff9135176589ef220cf362b956ff22fea828). **new alerts:**. * 1 for Resource not released in destructor. **fixed alerts:**. * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-983566164
https://github.com/su2code/SU2/pull/1388#issuecomment-983566164:370,Deployability,release,released,370,This pull request **introduces 1 alert** and **fixes 2** when merging d7757db62a443b0c65ca760f3705a495415602e5 into 42dcf5a965a895aac2afea14b65023a7591826c0 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-90f5ff9135176589ef220cf362b956ff22fea828). **new alerts:**. * 1 for Resource not released in destructor. **fixed alerts:**. * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-983566164
https://github.com/su2code/SU2/pull/1391#issuecomment-934104439:231,Safety,safe,safe,231,"> @jtneedels Im a bit confused why this is necessary? Why do files need extra lines? versus not?. Github flags it as an issue, I think the main concern is it can cause problems when files are concatenated. Basically just a ""better safe than sorry"" situation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1391#issuecomment-934104439
https://github.com/su2code/SU2/pull/1396#issuecomment-937384173:308,Modifiability,variab,variable,308,This pull request **introduces 2 alerts** and **fixes 29** when merging 1577def85c64c7165c45f3b39ed30d0d1d426af2 into a1a88d1f8494c5dc0a9cda407b26806e7a3a8d72 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-384f1d4abd4d5c3f707768fe6f28b54ea7574463). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 10 for Comparison of narrow type with wide type in loop condition; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1396#issuecomment-937384173
https://github.com/su2code/SU2/pull/1396#issuecomment-937384173:326,Modifiability,Variab,Variable,326,This pull request **introduces 2 alerts** and **fixes 29** when merging 1577def85c64c7165c45f3b39ed30d0d1d426af2 into a1a88d1f8494c5dc0a9cda407b26806e7a3a8d72 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-384f1d4abd4d5c3f707768fe6f28b54ea7574463). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 10 for Comparison of narrow type with wide type in loop condition; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1396#issuecomment-937384173
https://github.com/su2code/SU2/pull/1396#issuecomment-937384173:387,Modifiability,Variab,Variable,387,This pull request **introduces 2 alerts** and **fixes 29** when merging 1577def85c64c7165c45f3b39ed30d0d1d426af2 into a1a88d1f8494c5dc0a9cda407b26806e7a3a8d72 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-384f1d4abd4d5c3f707768fe6f28b54ea7574463). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 10 for Comparison of narrow type with wide type in loop condition; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1396#issuecomment-937384173
https://github.com/su2code/SU2/pull/1399#issuecomment-939210059:359,Deployability,release,released,359,This pull request **introduces 7 alerts** when merging 88e9e9f32d1d797eacd114a96387f18c2adaf62d into b1a47bbbbf48dbcf5ceb754bc52c4e00057c3fd6 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-c9af5862483834bcf116dd973649d46a8ca541d6). **new alerts:**. * 5 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1399#issuecomment-939210059
https://github.com/su2code/SU2/pull/1402#issuecomment-940882471:308,Modifiability,variab,variable,308,This pull request **introduces 2 alerts** and **fixes 19** when merging a28a4d810429bbb289104f27e1b2f0fc46ce11a0 into a1a88d1f8494c5dc0a9cda407b26806e7a3a8d72 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-6f51530a24240894df3db8346a8c6a07062dfcd2). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-940882471
https://github.com/su2code/SU2/pull/1402#issuecomment-940882471:326,Modifiability,Variab,Variable,326,This pull request **introduces 2 alerts** and **fixes 19** when merging a28a4d810429bbb289104f27e1b2f0fc46ce11a0 into a1a88d1f8494c5dc0a9cda407b26806e7a3a8d72 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-6f51530a24240894df3db8346a8c6a07062dfcd2). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-940882471
https://github.com/su2code/SU2/pull/1402#issuecomment-940882471:387,Modifiability,Variab,Variable,387,This pull request **introduces 2 alerts** and **fixes 19** when merging a28a4d810429bbb289104f27e1b2f0fc46ce11a0 into a1a88d1f8494c5dc0a9cda407b26806e7a3a8d72 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-6f51530a24240894df3db8346a8c6a07062dfcd2). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-940882471
https://github.com/su2code/SU2/pull/1402#issuecomment-941017233:1488,Availability,error,errors,1488,"Hello Pedro,. Unfortunately, I will not be able to attend in the developer meeting tomorrow. However, I will try to shed some light on the PR internals.; 1.	I added ‘**rapidjson**’ subfolder into the externals which is actually a set of files from ; https://github.com/Tencent/rapidjson/tree/master/include/rapidjson catalog.; These header files are the essence of the ‘**rapidjson**’ library, which makes working with _json_ files much easier. I guess the rapidjson’s headers make up more than 1/3 of the total code size within PR.; 2.	The **CPengRobinsonCoolPropAncillaries.hpp** file contains char array ‘**_all_cubics_extended_JSON_binary_**’ that is the binary representation of all the fluid ‘json’ files extracted from **CoolProp** sources and translated into single compiled variable. Such a solution lets keep all raw data of the fluids in a single place without necessity to work with file system. The definition of ‘**_all_cubics_extended_JSON_binary_**’ variable consists of 11.7k lines of codes. ; 3.	The key files of the PR are the **CPengRobinsonCoolProp.hpp** and **CPengRobinsonCoolProp.cpp** (about 1.7k lines of code in sum). All the source codes of the fluid model are contained exclusively in these files and there are no calls to external libraries inside except **rapidjson** library (in constructor of the class). If you have any other questions, just let me know. ; Sincerely and best wishes. P.S. I faced with the issue while running LGTM code analysis (compile errors). Honestly, I need some time to fix it because I am working on Windows (**mingw-w64** and **Visual Studio**) and I haven’t encountered similar errors. This is my fault and I promise to check my sources on Linux before pushing the commits.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-941017233
https://github.com/su2code/SU2/pull/1402#issuecomment-941017233:1638,Availability,error,errors,1638,"Hello Pedro,. Unfortunately, I will not be able to attend in the developer meeting tomorrow. However, I will try to shed some light on the PR internals.; 1.	I added ‘**rapidjson**’ subfolder into the externals which is actually a set of files from ; https://github.com/Tencent/rapidjson/tree/master/include/rapidjson catalog.; These header files are the essence of the ‘**rapidjson**’ library, which makes working with _json_ files much easier. I guess the rapidjson’s headers make up more than 1/3 of the total code size within PR.; 2.	The **CPengRobinsonCoolPropAncillaries.hpp** file contains char array ‘**_all_cubics_extended_JSON_binary_**’ that is the binary representation of all the fluid ‘json’ files extracted from **CoolProp** sources and translated into single compiled variable. Such a solution lets keep all raw data of the fluids in a single place without necessity to work with file system. The definition of ‘**_all_cubics_extended_JSON_binary_**’ variable consists of 11.7k lines of codes. ; 3.	The key files of the PR are the **CPengRobinsonCoolProp.hpp** and **CPengRobinsonCoolProp.cpp** (about 1.7k lines of code in sum). All the source codes of the fluid model are contained exclusively in these files and there are no calls to external libraries inside except **rapidjson** library (in constructor of the class). If you have any other questions, just let me know. ; Sincerely and best wishes. P.S. I faced with the issue while running LGTM code analysis (compile errors). Honestly, I need some time to fix it because I am working on Windows (**mingw-w64** and **Visual Studio**) and I haven’t encountered similar errors. This is my fault and I promise to check my sources on Linux before pushing the commits.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-941017233
https://github.com/su2code/SU2/pull/1402#issuecomment-941017233:1657,Availability,fault,fault,1657,"Hello Pedro,. Unfortunately, I will not be able to attend in the developer meeting tomorrow. However, I will try to shed some light on the PR internals.; 1.	I added ‘**rapidjson**’ subfolder into the externals which is actually a set of files from ; https://github.com/Tencent/rapidjson/tree/master/include/rapidjson catalog.; These header files are the essence of the ‘**rapidjson**’ library, which makes working with _json_ files much easier. I guess the rapidjson’s headers make up more than 1/3 of the total code size within PR.; 2.	The **CPengRobinsonCoolPropAncillaries.hpp** file contains char array ‘**_all_cubics_extended_JSON_binary_**’ that is the binary representation of all the fluid ‘json’ files extracted from **CoolProp** sources and translated into single compiled variable. Such a solution lets keep all raw data of the fluids in a single place without necessity to work with file system. The definition of ‘**_all_cubics_extended_JSON_binary_**’ variable consists of 11.7k lines of codes. ; 3.	The key files of the PR are the **CPengRobinsonCoolProp.hpp** and **CPengRobinsonCoolProp.cpp** (about 1.7k lines of code in sum). All the source codes of the fluid model are contained exclusively in these files and there are no calls to external libraries inside except **rapidjson** library (in constructor of the class). If you have any other questions, just let me know. ; Sincerely and best wishes. P.S. I faced with the issue while running LGTM code analysis (compile errors). Honestly, I need some time to fix it because I am working on Windows (**mingw-w64** and **Visual Studio**) and I haven’t encountered similar errors. This is my fault and I promise to check my sources on Linux before pushing the commits.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-941017233
https://github.com/su2code/SU2/pull/1402#issuecomment-941017233:783,Modifiability,variab,variable,783,"Hello Pedro,. Unfortunately, I will not be able to attend in the developer meeting tomorrow. However, I will try to shed some light on the PR internals.; 1.	I added ‘**rapidjson**’ subfolder into the externals which is actually a set of files from ; https://github.com/Tencent/rapidjson/tree/master/include/rapidjson catalog.; These header files are the essence of the ‘**rapidjson**’ library, which makes working with _json_ files much easier. I guess the rapidjson’s headers make up more than 1/3 of the total code size within PR.; 2.	The **CPengRobinsonCoolPropAncillaries.hpp** file contains char array ‘**_all_cubics_extended_JSON_binary_**’ that is the binary representation of all the fluid ‘json’ files extracted from **CoolProp** sources and translated into single compiled variable. Such a solution lets keep all raw data of the fluids in a single place without necessity to work with file system. The definition of ‘**_all_cubics_extended_JSON_binary_**’ variable consists of 11.7k lines of codes. ; 3.	The key files of the PR are the **CPengRobinsonCoolProp.hpp** and **CPengRobinsonCoolProp.cpp** (about 1.7k lines of code in sum). All the source codes of the fluid model are contained exclusively in these files and there are no calls to external libraries inside except **rapidjson** library (in constructor of the class). If you have any other questions, just let me know. ; Sincerely and best wishes. P.S. I faced with the issue while running LGTM code analysis (compile errors). Honestly, I need some time to fix it because I am working on Windows (**mingw-w64** and **Visual Studio**) and I haven’t encountered similar errors. This is my fault and I promise to check my sources on Linux before pushing the commits.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-941017233
https://github.com/su2code/SU2/pull/1402#issuecomment-941017233:966,Modifiability,variab,variable,966,"Hello Pedro,. Unfortunately, I will not be able to attend in the developer meeting tomorrow. However, I will try to shed some light on the PR internals.; 1.	I added ‘**rapidjson**’ subfolder into the externals which is actually a set of files from ; https://github.com/Tencent/rapidjson/tree/master/include/rapidjson catalog.; These header files are the essence of the ‘**rapidjson**’ library, which makes working with _json_ files much easier. I guess the rapidjson’s headers make up more than 1/3 of the total code size within PR.; 2.	The **CPengRobinsonCoolPropAncillaries.hpp** file contains char array ‘**_all_cubics_extended_JSON_binary_**’ that is the binary representation of all the fluid ‘json’ files extracted from **CoolProp** sources and translated into single compiled variable. Such a solution lets keep all raw data of the fluids in a single place without necessity to work with file system. The definition of ‘**_all_cubics_extended_JSON_binary_**’ variable consists of 11.7k lines of codes. ; 3.	The key files of the PR are the **CPengRobinsonCoolProp.hpp** and **CPengRobinsonCoolProp.cpp** (about 1.7k lines of code in sum). All the source codes of the fluid model are contained exclusively in these files and there are no calls to external libraries inside except **rapidjson** library (in constructor of the class). If you have any other questions, just let me know. ; Sincerely and best wishes. P.S. I faced with the issue while running LGTM code analysis (compile errors). Honestly, I need some time to fix it because I am working on Windows (**mingw-w64** and **Visual Studio**) and I haven’t encountered similar errors. This is my fault and I promise to check my sources on Linux before pushing the commits.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-941017233
https://github.com/su2code/SU2/pull/1402#issuecomment-942054879:570,Modifiability,variab,variable,570,"Both ‘**rapidjson**’ and ‘**CoolProp**’ are licensed under the shortest and simplest permissive **MIT** license. I am not an expert but whether indicating the text of the licenses and copyright marks at the beginning of each of my files is reasonable?. Honestly, I don’t like the idea to treat **rapidjson** as a git submodule because some **rapidjson** internals are Windows specific (e.g., _/include/rapidjson/msinttypes_ subfolder content) and I don’t really confident with Meson build setup procedure. . Actually, I generated the **all_cubics_extended_JSON_binary** variable in the following way.; **CoolProp** library contains dozens of json files from which I assembled the single file for my own needs. Then, I made some modifications to the _generate_headers.py_ file (under _/dev_ subfolder of the **CoolProp** root) and run it in order to translate my large json file into the C++ header file. The generated file is not as large (~1.3 MB) as it seems but verbose a little bit. Could you clarify what **tecplot** sources do you mean?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-942054879
https://github.com/su2code/SU2/pull/1402#issuecomment-942054879:76,Usability,simpl,simplest,76,"Both ‘**rapidjson**’ and ‘**CoolProp**’ are licensed under the shortest and simplest permissive **MIT** license. I am not an expert but whether indicating the text of the licenses and copyright marks at the beginning of each of my files is reasonable?. Honestly, I don’t like the idea to treat **rapidjson** as a git submodule because some **rapidjson** internals are Windows specific (e.g., _/include/rapidjson/msinttypes_ subfolder content) and I don’t really confident with Meson build setup procedure. . Actually, I generated the **all_cubics_extended_JSON_binary** variable in the following way.; **CoolProp** library contains dozens of json files from which I assembled the single file for my own needs. Then, I made some modifications to the _generate_headers.py_ file (under _/dev_ subfolder of the **CoolProp** root) and run it in order to translate my large json file into the C++ header file. The generated file is not as large (~1.3 MB) as it seems but verbose a little bit. Could you clarify what **tecplot** sources do you mean?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-942054879
https://github.com/su2code/SU2/pull/1402#issuecomment-942218768:282,Availability,mainten,maintenance,282,"Have a look at the LICENSE.md file of SU2 and I think you'll see what I mean, it has sections for CGNS, ParMetis, etc. It is because of platform-specific aspects like those you mentioned that we should use libraries directly instead of taking only parts of them, not to mention the maintenance that the folks who work on those libraries provide. Make the change please. I see, and is that the only (or preferred) way to use coolprop? (via generate headers) or can it be compiled into a library and linked with SU2 to then generate the ""tables"" (I guess they are lookup tables?) at runtime?. I think this feature could be of value for the community (there is a lot of work on fluid models right now). I'm just trying to make sure we pick one good strategy and not all possible strategies. Nevermind about tecplot, I was ""misremembering"".",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-942218768
https://github.com/su2code/SU2/issues/1407#issuecomment-947489209:55,Usability,simpl,simpler,55,"There is no automatic way of doing that. If you want a simpler code to port to GPU, the best advice I can give you is to chose something else other than SU2. In the future please open ""discussions"" instead of issues, these are not SU2 code issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407#issuecomment-947489209
https://github.com/su2code/SU2/issues/1407#issuecomment-947511482:44,Testability,test,test,44,"I found parallel execution commands for SU2 test case using mpirun. For example, to run the CFD solver on 8 cores, you might enter: $ mpirun -n 8 SU2_CFD default.cfg. Also noted OpenMP header files and c++ files at **~SU2/Common/include/parallelization/ path.** . OpenMP (shared memory) – Parallel programming on a single node. ; MPI (distributed memory) – Parallel computing running on multiple nodes. SU2 supports both OpenMP and MPI. So, we hope that CUDA C++ can be supported by SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407#issuecomment-947511482
https://github.com/su2code/SU2/pull/1413#issuecomment-1053528343:153,Availability,checkpoint,checkpoint,153,"There is already a lot of nice work here in identifying the meaningful differences between different SA variants and reducing code duplication, so let's checkpoint this into develop before some other changes are made to turbulence models.; The alternative way to specify corrections/variants in the config can be done in a different PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413#issuecomment-1053528343
https://github.com/su2code/SU2/pull/1413#issuecomment-1053528343:299,Modifiability,config,config,299,"There is already a lot of nice work here in identifying the meaningful differences between different SA variants and reducing code duplication, so let's checkpoint this into develop before some other changes are made to turbulence models.; The alternative way to specify corrections/variants in the config can be done in a different PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413#issuecomment-1053528343
https://github.com/su2code/SU2/pull/1413#issuecomment-1054045131:226,Availability,checkpoint,checkpoint,226,"Really nice work @pcarruscag :+1: ; It looks good to me. I agree with. > There is already a lot of nice work here in identifying the meaningful differences between different SA variants and reducing code duplication, so let's checkpoint this into develop before some other changes are made to turbulence models. The alternative way to specify corrections/variants in the config can be done in a different PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413#issuecomment-1054045131
https://github.com/su2code/SU2/pull/1413#issuecomment-1054045131:371,Modifiability,config,config,371,"Really nice work @pcarruscag :+1: ; It looks good to me. I agree with. > There is already a lot of nice work here in identifying the meaningful differences between different SA variants and reducing code duplication, so let's checkpoint this into develop before some other changes are made to turbulence models. The alternative way to specify corrections/variants in the config can be done in a different PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413#issuecomment-1054045131
https://github.com/su2code/SU2/pull/1413#issuecomment-1057834812:264,Testability,test,testcases,264,"hmm, [](https://github.com/su2code/SU2/pull/1413/commits/0f4977f4b761df87737ac283518870fb7cbbd466)[0f4977f](https://github.com/su2code/SU2/pull/1413/commits/0f4977f4b761df87737ac283518870fb7cbbd466) must have introduced sth that made the two (streamwise periodic) testcases fail. I think the defining feature here is, that they use the SST-turb model. But looking at the mentioned commit, the changes look equal to me :thinking:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413#issuecomment-1057834812
https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:1070,Availability,robust,robust,1070,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509
https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:333,Integrability,interface,interface,333,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509
https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:775,Integrability,interface,interface,775,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509
https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:1011,Integrability,interface,interface,1011,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509
https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:1089,Integrability,interface,interface,1089,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509
https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:1112,Modifiability,coupling,coupling,1112,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509
https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:45,Security,expose,exposed,45,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509
https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:1161,Usability,simpl,simplest,1161,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509
https://github.com/su2code/SU2/issues/1414#issuecomment-953043430:36,Modifiability,coupling,coupling,36,"Thanks Pedro for hinting me at this coupling issue again, now I think I understand it! . **For the record**, here is what I talked about in today's developer meeting:; When I make the following changes in the `issue_simplified/multizone/multizone-i.cfg` :. 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT. then the simplified multizone setup converges, albeit to a different solution:; ![simplified-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096529-5063dbe7-8ee8-4c53-a7c6-a2b6b3a031a1.png); than what the simplified singlezone setup (from above) converged to: ; ![simplified-singlezone-density](https://user-images.githubusercontent.com/72806890/139096586-7d096c5f-4d34-4ddb-94fa-0deab52df5e4.png). The same observation can be made analogously for `issue_complicated`:; The multizone setup with explicit Euler and CFL=0.1 (nearly) converges (actually the residual stalls at `avg[bgs][0]` approximately -13) to the following limit:; ![complicated-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096973-e9547f9f-521e-4920-aba5-2621fad79944.png); while the singlezone solution (with implicit Euler and CFL 1000) is (**EDIT**: was momentum plot, replaced by density plot); ![complicated-singlezone-density](https://user-images.githubusercontent.com/72806890/139109790-e5cae4be-041e-4c29-93a5-e086a26f72a4.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-953043430
https://github.com/su2code/SU2/issues/1414#issuecomment-953043430:491,Usability,simpl,simplified,491,"Thanks Pedro for hinting me at this coupling issue again, now I think I understand it! . **For the record**, here is what I talked about in today's developer meeting:; When I make the following changes in the `issue_simplified/multizone/multizone-i.cfg` :. 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT. then the simplified multizone setup converges, albeit to a different solution:; ![simplified-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096529-5063dbe7-8ee8-4c53-a7c6-a2b6b3a031a1.png); than what the simplified singlezone setup (from above) converged to: ; ![simplified-singlezone-density](https://user-images.githubusercontent.com/72806890/139096586-7d096c5f-4d34-4ddb-94fa-0deab52df5e4.png). The same observation can be made analogously for `issue_complicated`:; The multizone setup with explicit Euler and CFL=0.1 (nearly) converges (actually the residual stalls at `avg[bgs][0]` approximately -13) to the following limit:; ![complicated-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096973-e9547f9f-521e-4920-aba5-2621fad79944.png); while the singlezone solution (with implicit Euler and CFL 1000) is (**EDIT**: was momentum plot, replaced by density plot); ![complicated-singlezone-density](https://user-images.githubusercontent.com/72806890/139109790-e5cae4be-041e-4c29-93a5-e086a26f72a4.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-953043430
https://github.com/su2code/SU2/issues/1414#issuecomment-953043430:564,Usability,simpl,simplified-multizone-explicit-,564,"Thanks Pedro for hinting me at this coupling issue again, now I think I understand it! . **For the record**, here is what I talked about in today's developer meeting:; When I make the following changes in the `issue_simplified/multizone/multizone-i.cfg` :. 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT. then the simplified multizone setup converges, albeit to a different solution:; ![simplified-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096529-5063dbe7-8ee8-4c53-a7c6-a2b6b3a031a1.png); than what the simplified singlezone setup (from above) converged to: ; ![simplified-singlezone-density](https://user-images.githubusercontent.com/72806890/139096586-7d096c5f-4d34-4ddb-94fa-0deab52df5e4.png). The same observation can be made analogously for `issue_complicated`:; The multizone setup with explicit Euler and CFL=0.1 (nearly) converges (actually the residual stalls at `avg[bgs][0]` approximately -13) to the following limit:; ![complicated-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096973-e9547f9f-521e-4920-aba5-2621fad79944.png); while the singlezone solution (with implicit Euler and CFL 1000) is (**EDIT**: was momentum plot, replaced by density plot); ![complicated-singlezone-density](https://user-images.githubusercontent.com/72806890/139109790-e5cae4be-041e-4c29-93a5-e086a26f72a4.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-953043430
https://github.com/su2code/SU2/issues/1414#issuecomment-953043430:727,Usability,simpl,simplified,727,"Thanks Pedro for hinting me at this coupling issue again, now I think I understand it! . **For the record**, here is what I talked about in today's developer meeting:; When I make the following changes in the `issue_simplified/multizone/multizone-i.cfg` :. 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT. then the simplified multizone setup converges, albeit to a different solution:; ![simplified-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096529-5063dbe7-8ee8-4c53-a7c6-a2b6b3a031a1.png); than what the simplified singlezone setup (from above) converged to: ; ![simplified-singlezone-density](https://user-images.githubusercontent.com/72806890/139096586-7d096c5f-4d34-4ddb-94fa-0deab52df5e4.png). The same observation can be made analogously for `issue_complicated`:; The multizone setup with explicit Euler and CFL=0.1 (nearly) converges (actually the residual stalls at `avg[bgs][0]` approximately -13) to the following limit:; ![complicated-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096973-e9547f9f-521e-4920-aba5-2621fad79944.png); while the singlezone solution (with implicit Euler and CFL 1000) is (**EDIT**: was momentum plot, replaced by density plot); ![complicated-singlezone-density](https://user-images.githubusercontent.com/72806890/139109790-e5cae4be-041e-4c29-93a5-e086a26f72a4.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-953043430
https://github.com/su2code/SU2/issues/1414#issuecomment-953043430:786,Usability,simpl,simplified-singlezone-density,786,"Thanks Pedro for hinting me at this coupling issue again, now I think I understand it! . **For the record**, here is what I talked about in today's developer meeting:; When I make the following changes in the `issue_simplified/multizone/multizone-i.cfg` :. 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT. then the simplified multizone setup converges, albeit to a different solution:; ![simplified-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096529-5063dbe7-8ee8-4c53-a7c6-a2b6b3a031a1.png); than what the simplified singlezone setup (from above) converged to: ; ![simplified-singlezone-density](https://user-images.githubusercontent.com/72806890/139096586-7d096c5f-4d34-4ddb-94fa-0deab52df5e4.png). The same observation can be made analogously for `issue_complicated`:; The multizone setup with explicit Euler and CFL=0.1 (nearly) converges (actually the residual stalls at `avg[bgs][0]` approximately -13) to the following limit:; ![complicated-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096973-e9547f9f-521e-4920-aba5-2621fad79944.png); while the singlezone solution (with implicit Euler and CFL 1000) is (**EDIT**: was momentum plot, replaced by density plot); ![complicated-singlezone-density](https://user-images.githubusercontent.com/72806890/139109790-e5cae4be-041e-4c29-93a5-e086a26f72a4.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-953043430
https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:2499,Integrability,interface,interface,2499,"---------------------------------------------------------+. The density plot is; - different from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/turb_NACA0012_sst.cfg) is as follows?. 27c27; < RESTART_SOL= NO; ---; > RESTART_SOL= YES; 45c45; < REYNOLDS_NUMBER= 1.0E6; ---; > REYNOLDS_NUMBER= 6.0E6; 70c70; < MARKER_HEATFLUX= ( circle, 0.0 ); ---; > MARKER_HEATFLUX= ( airfoil, 0.0 ); 76c76; < MARKER_PLOTTING= ( circle ); ---; > MARKER_PLOTTING= ( airfoil ); 79c79; < MARKER_MONITORING= ( circle ); ---; > MARKER_MONITORING= ( airfoil ); 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 101c101; < ITER= 9999900; ---; > ITER= 99999; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULE",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195
https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:2707,Testability,Test,TestCases,2707,"from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/turb_NACA0012_sst.cfg) is as follows?. 27c27; < RESTART_SOL= NO; ---; > RESTART_SOL= YES; 45c45; < REYNOLDS_NUMBER= 1.0E6; ---; > REYNOLDS_NUMBER= 6.0E6; 70c70; < MARKER_HEATFLUX= ( circle, 0.0 ); ---; > MARKER_HEATFLUX= ( airfoil, 0.0 ); 76c76; < MARKER_PLOTTING= ( circle ); ---; > MARKER_PLOTTING= ( airfoil ); 79c79; < MARKER_MONITORING= ( circle ); ---; > MARKER_MONITORING= ( airfoil ); 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 101c101; < ITER= 9999900; ---; > ITER= 99999; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT; 203c203; < MESH_FILENAME= singlezone.su2; ---; > MESH_FILENAME= n0012_225-65.su2",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195
https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:2797,Testability,Test,TestCases,2797,"from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/turb_NACA0012_sst.cfg) is as follows?. 27c27; < RESTART_SOL= NO; ---; > RESTART_SOL= YES; 45c45; < REYNOLDS_NUMBER= 1.0E6; ---; > REYNOLDS_NUMBER= 6.0E6; 70c70; < MARKER_HEATFLUX= ( circle, 0.0 ); ---; > MARKER_HEATFLUX= ( airfoil, 0.0 ); 76c76; < MARKER_PLOTTING= ( circle ); ---; > MARKER_PLOTTING= ( airfoil ); 79c79; < MARKER_MONITORING= ( circle ); ---; > MARKER_MONITORING= ( airfoil ); 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 101c101; < ITER= 9999900; ---; > ITER= 99999; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT; 203c203; < MESH_FILENAME= singlezone.su2; ---; > MESH_FILENAME= n0012_225-65.su2",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195
https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:366,Usability,simpl,simplified-singlezone-expliciteuler-density,366,"> I assume that your results with explicit/implicit Euler for single zone are the same?. It turns out that they are not. When I applied the above modifications (CFL: 1000 -> 0.1, TIME_DISCRE_*: EULER_IMPLICIT->EULER_EXPLICIT; additionally I had to increase ITER) to the `issue_simplified` singlezone setup (the one with AoA=10°), I obtain the following solution:. ![simplified-singlezone-expliciteuler-density](https://user-images.githubusercontent.com/72806890/140885244-abb72de1-0d2d-4dc8-bde9-e0772786e2cd.png). with the following convergence history:. +------------------------------------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[k]| rms[w]| CL| CD| LinSolRes|; +------------------------------------------------------------------------------------------+; | 0| -3.131336| -inf| -inf| 0.000000| 2.232692| -inf|; | 1| -3.281025| -inf| -inf| 0.000000| 3.198384| -inf|; ...; | 9531740| -11.999999| -inf| -inf| -0.006045| 1.258662| -inf|; | 9531741| -12.000000| -inf| -inf| -0.006045| 1.258662| -inf|; | 9531742| -12.000000| -inf| -inf| -0.006045| 1.258662| -inf|; ; ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; +-----------------------------------------------------------------------+; | Convergence Field | Value | Criterion | Converged |; +-----------------------------------------------------------------------+; | rms[Rho]| -12| < -12| Yes|; +-----------------------------------------------------------------------+. The density plot is; - different from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195
https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:1838,Usability,simpl,simplified-singlezone-impliciteuler,1838,"inf| -inf| 0.000000| 2.232692| -inf|; | 1| -3.281025| -inf| -inf| 0.000000| 3.198384| -inf|; ...; | 9531740| -11.999999| -inf| -inf| -0.006045| 1.258662| -inf|; | 9531741| -12.000000| -inf| -inf| -0.006045| 1.258662| -inf|; | 9531742| -12.000000| -inf| -inf| -0.006045| 1.258662| -inf|; ; ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; +-----------------------------------------------------------------------+; | Convergence Field | Value | Criterion | Converged |; +-----------------------------------------------------------------------+; | rms[Rho]| -12| < -12| Yes|; +-----------------------------------------------------------------------+. The density plot is; - different from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195
https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:2041,Usability,simpl,simplified-singlezone-expliciteuler,2041,"0| -inf| -inf| -0.006045| 1.258662| -inf|; ; ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; +-----------------------------------------------------------------------+; | Convergence Field | Value | Criterion | Converged |; +-----------------------------------------------------------------------+; | rms[Rho]| -12| < -12| Yes|; +-----------------------------------------------------------------------+. The density plot is; - different from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/turb_NACA0012_sst.cfg) is as follows?. 27c27; < RESTART_SOL= NO; ---; > RESTART_SOL= YES; 45c45; < REYNOLDS_NUMBER= 1.0E6; ---; > REYNOLDS_NUMBER= 6.0E6; 70c70; < MARKER_HEATFLUX= ( circle, 0.0 ); ---; > MARKER_HEATFLUX= ( airfoil, 0.0 ); 76c76",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195
https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:2643,Usability,simpl,simplfied-expliciteuler-,2643,"from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/turb_NACA0012_sst.cfg) is as follows?. 27c27; < RESTART_SOL= NO; ---; > RESTART_SOL= YES; 45c45; < REYNOLDS_NUMBER= 1.0E6; ---; > REYNOLDS_NUMBER= 6.0E6; 70c70; < MARKER_HEATFLUX= ( circle, 0.0 ); ---; > MARKER_HEATFLUX= ( airfoil, 0.0 ); 76c76; < MARKER_PLOTTING= ( circle ); ---; > MARKER_PLOTTING= ( airfoil ); 79c79; < MARKER_MONITORING= ( circle ); ---; > MARKER_MONITORING= ( airfoil ); 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 101c101; < ITER= 9999900; ---; > ITER= 99999; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT; 203c203; < MESH_FILENAME= singlezone.su2; ---; > MESH_FILENAME= n0012_225-65.su2",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195
https://github.com/su2code/SU2/issues/1414#issuecomment-964236535:52,Deployability,integrat,integration,52,"I noticed that ; - the distinction between the time integration schemes (implicit Euler, explicit Euler, ...) is made in `CIntegration::Time_Integration`: Exactly one of the functions `CSolver::ImplicitEuler_Iteration`, `CSolver::ExplicitEuler_Iteration`,`ExplicitRK_Iteration`, `ClassicalRK4_Iteration` is called.; - These are virtual functions, defined as ""do nothing"" in `CSolver`.; - Regarding the flow equations, `CFVMFlowSolverBase<>` overrides `ImplicitEuler_Iteration`, and `CEulerSolver`/`CIncEulerSolver` override the other three functions.; - Regarding the turbulence equation, `CTurbSolver` overrides `ImplicitEuler_Iteration` only. Thus probably I can use `TIME_DISCRE_FLOW=EULER_EXPLICIT` but not `TIME_DISCRE_TURB=EULER_EXPLICIT`?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-964236535
https://github.com/su2code/SU2/issues/1414#issuecomment-964236535:52,Integrability,integrat,integration,52,"I noticed that ; - the distinction between the time integration schemes (implicit Euler, explicit Euler, ...) is made in `CIntegration::Time_Integration`: Exactly one of the functions `CSolver::ImplicitEuler_Iteration`, `CSolver::ExplicitEuler_Iteration`,`ExplicitRK_Iteration`, `ClassicalRK4_Iteration` is called.; - These are virtual functions, defined as ""do nothing"" in `CSolver`.; - Regarding the flow equations, `CFVMFlowSolverBase<>` overrides `ImplicitEuler_Iteration`, and `CEulerSolver`/`CIncEulerSolver` override the other three functions.; - Regarding the turbulence equation, `CTurbSolver` overrides `ImplicitEuler_Iteration` only. Thus probably I can use `TIME_DISCRE_FLOW=EULER_EXPLICIT` but not `TIME_DISCRE_TURB=EULER_EXPLICIT`?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-964236535
https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206:33,Availability,down,downloaded,33,"The config and mesh files can be downloaded from https://seafile.rlp.net/d/bb0fbb16eb414263b642/ and more information on them is provided [above](https://github.com/su2code/SU2/issues/1414#issue-1036103020). . I ran the four cases in the current develop branch at 58cf2d4a3829e5a60c35eda2a788b1107338e850, configuring the build with `--buildtype=debug`. . **`SU2_CFD singlezone.cfg` in `issue_simplified/singlezone`** gives; ```; +------------------------------------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[k]| rms[w]| CL| CD| LinSolRes|; +------------------------------------------------------------------------------------------+; | 0| -3.131336| -3.358218| 2.356417| 0.021774| 45.825257| -2.955766|; ...; | 12377| -11.999782| -15.033189| -10.208063| 0.003434| 0.989679| -4.378694|; | 12378| -12.000141| -15.033858| -10.208411| 0.003434| 0.989679| -4.378353|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD multizone.cfg` in `issue_simplified/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.259741| -0.741089|; | 1| -1.224321| -2.240439|. ...; | 841| -0.356891| 0.285076|; | 842| -0.124937| 0.178422|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. **`mpirun SU2_CFD mz-0.cfg` in `issue_complicated/singlezone`** with 24 MPI ranks (because it needs so many iterations) gives; ```; +----------------------------------------------------------------+; | Inner_Iter| Time(sec)| rms[Rho]| CL| CD|; +----------------------------------------------------------------+; | 0| 4.5727e-02| -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206
https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206:1405,Availability,Error,Error,1405,"-------------------------+; | Inner_Iter| rms[Rho]| rms[k]| rms[w]| CL| CD| LinSolRes|; +------------------------------------------------------------------------------------------+; | 0| -3.131336| -3.358218| 2.356417| 0.021774| 45.825257| -2.955766|; ...; | 12377| -11.999782| -15.033189| -10.208063| 0.003434| 0.989679| -4.378694|; | 12378| -12.000141| -15.033858| -10.208411| 0.003434| 0.989679| -4.378353|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD multizone.cfg` in `issue_simplified/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.259741| -0.741089|; | 1| -1.224321| -2.240439|. ...; | 841| -0.356891| 0.285076|; | 842| -0.124937| 0.178422|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. **`mpirun SU2_CFD mz-0.cfg` in `issue_complicated/singlezone`** with 24 MPI ranks (because it needs so many iterations) gives; ```; +----------------------------------------------------------------+; | Inner_Iter| Time(sec)| rms[Rho]| CL| CD|; +----------------------------------------------------------------+; | 0| 4.5727e-02| -3.131336| -0.000000| 47.049080|; | 1| 3.9651e-02| -3.399537| -0.000000| 43.567743|; ...; | 1304734| 3.6630e-02| -12.000000| -0.000000| 1.003811|; | 1304735| 3.6630e-02| -12.000003| -0.000000| 1.003811|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD mz-all.cfg` in `issue_complicated/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206
https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206:1622,Availability,Error,Error,1622,"----------------------------------------------+; | 0| -3.131336| -3.358218| 2.356417| 0.021774| 45.825257| -2.955766|; ...; | 12377| -11.999782| -15.033189| -10.208063| 0.003434| 0.989679| -4.378694|; | 12378| -12.000141| -15.033858| -10.208411| 0.003434| 0.989679| -4.378353|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD multizone.cfg` in `issue_simplified/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.259741| -0.741089|; | 1| -1.224321| -2.240439|. ...; | 841| -0.356891| 0.285076|; | 842| -0.124937| 0.178422|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. **`mpirun SU2_CFD mz-0.cfg` in `issue_complicated/singlezone`** with 24 MPI ranks (because it needs so many iterations) gives; ```; +----------------------------------------------------------------+; | Inner_Iter| Time(sec)| rms[Rho]| CL| CD|; +----------------------------------------------------------------+; | 0| 4.5727e-02| -3.131336| -0.000000| 47.049080|; | 1| 3.9651e-02| -3.399537| -0.000000| 43.567743|; ...; | 1304734| 3.6630e-02| -12.000000| -0.000000| 1.003811|; | 1304735| 3.6630e-02| -12.000003| -0.000000| 1.003811|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD mz-all.cfg` in `issue_complicated/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.937734| -2.766626|; | 1| -2.167353| -6.48",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206
https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206:2704,Availability,Error,Error,2704,"------------; All convergence criteria satisfied.; ```. **`SU2_CFD multizone.cfg` in `issue_simplified/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.259741| -0.741089|; | 1| -1.224321| -2.240439|. ...; | 841| -0.356891| 0.285076|; | 842| -0.124937| 0.178422|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. **`mpirun SU2_CFD mz-0.cfg` in `issue_complicated/singlezone`** with 24 MPI ranks (because it needs so many iterations) gives; ```; +----------------------------------------------------------------+; | Inner_Iter| Time(sec)| rms[Rho]| CL| CD|; +----------------------------------------------------------------+; | 0| 4.5727e-02| -3.131336| -0.000000| 47.049080|; | 1| 3.9651e-02| -3.399537| -0.000000| 43.567743|; ...; | 1304734| 3.6630e-02| -12.000000| -0.000000| 1.003811|; | 1304735| 3.6630e-02| -12.000003| -0.000000| 1.003811|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD mz-all.cfg` in `issue_complicated/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.937734| -2.766626|; | 1| -2.167353| -6.482096|. ...; | 6546| -0.859233| -0.793018|; | 6547| -0.865290| -0.739081|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206
https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206:2921,Availability,Error,Error,2921,"------------; All convergence criteria satisfied.; ```. **`SU2_CFD multizone.cfg` in `issue_simplified/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.259741| -0.741089|; | 1| -1.224321| -2.240439|. ...; | 841| -0.356891| 0.285076|; | 842| -0.124937| 0.178422|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. **`mpirun SU2_CFD mz-0.cfg` in `issue_complicated/singlezone`** with 24 MPI ranks (because it needs so many iterations) gives; ```; +----------------------------------------------------------------+; | Inner_Iter| Time(sec)| rms[Rho]| CL| CD|; +----------------------------------------------------------------+; | 0| 4.5727e-02| -3.131336| -0.000000| 47.049080|; | 1| 3.9651e-02| -3.399537| -0.000000| 43.567743|; ...; | 1304734| 3.6630e-02| -12.000000| -0.000000| 1.003811|; | 1304735| 3.6630e-02| -12.000003| -0.000000| 1.003811|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD mz-all.cfg` in `issue_complicated/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.937734| -2.766626|; | 1| -2.167353| -6.482096|. ...; | 6546| -0.859233| -0.793018|; | 6547| -0.865290| -0.739081|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206
https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206:4,Modifiability,config,config,4,"The config and mesh files can be downloaded from https://seafile.rlp.net/d/bb0fbb16eb414263b642/ and more information on them is provided [above](https://github.com/su2code/SU2/issues/1414#issue-1036103020). . I ran the four cases in the current develop branch at 58cf2d4a3829e5a60c35eda2a788b1107338e850, configuring the build with `--buildtype=debug`. . **`SU2_CFD singlezone.cfg` in `issue_simplified/singlezone`** gives; ```; +------------------------------------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[k]| rms[w]| CL| CD| LinSolRes|; +------------------------------------------------------------------------------------------+; | 0| -3.131336| -3.358218| 2.356417| 0.021774| 45.825257| -2.955766|; ...; | 12377| -11.999782| -15.033189| -10.208063| 0.003434| 0.989679| -4.378694|; | 12378| -12.000141| -15.033858| -10.208411| 0.003434| 0.989679| -4.378353|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD multizone.cfg` in `issue_simplified/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.259741| -0.741089|; | 1| -1.224321| -2.240439|. ...; | 841| -0.356891| 0.285076|; | 842| -0.124937| 0.178422|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. **`mpirun SU2_CFD mz-0.cfg` in `issue_complicated/singlezone`** with 24 MPI ranks (because it needs so many iterations) gives; ```; +----------------------------------------------------------------+; | Inner_Iter| Time(sec)| rms[Rho]| CL| CD|; +----------------------------------------------------------------+; | 0| 4.5727e-02| -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206
https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206:306,Modifiability,config,configuring,306,"The config and mesh files can be downloaded from https://seafile.rlp.net/d/bb0fbb16eb414263b642/ and more information on them is provided [above](https://github.com/su2code/SU2/issues/1414#issue-1036103020). . I ran the four cases in the current develop branch at 58cf2d4a3829e5a60c35eda2a788b1107338e850, configuring the build with `--buildtype=debug`. . **`SU2_CFD singlezone.cfg` in `issue_simplified/singlezone`** gives; ```; +------------------------------------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[k]| rms[w]| CL| CD| LinSolRes|; +------------------------------------------------------------------------------------------+; | 0| -3.131336| -3.358218| 2.356417| 0.021774| 45.825257| -2.955766|; ...; | 12377| -11.999782| -15.033189| -10.208063| 0.003434| 0.989679| -4.378694|; | 12378| -12.000141| -15.033858| -10.208411| 0.003434| 0.989679| -4.378353|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD multizone.cfg` in `issue_simplified/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.259741| -0.741089|; | 1| -1.224321| -2.240439|. ...; | 841| -0.356891| 0.285076|; | 842| -0.124937| 0.178422|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. **`mpirun SU2_CFD mz-0.cfg` in `issue_complicated/singlezone`** with 24 MPI ranks (because it needs so many iterations) gives; ```; +----------------------------------------------------------------+; | Inner_Iter| Time(sec)| rms[Rho]| CL| CD|; +----------------------------------------------------------------+; | 0| 4.5727e-02| -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206
https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206:1579,Safety,detect,detected,1579,"-------------------------+; | Inner_Iter| rms[Rho]| rms[k]| rms[w]| CL| CD| LinSolRes|; +------------------------------------------------------------------------------------------+; | 0| -3.131336| -3.358218| 2.356417| 0.021774| 45.825257| -2.955766|; ...; | 12377| -11.999782| -15.033189| -10.208063| 0.003434| 0.989679| -4.378694|; | 12378| -12.000141| -15.033858| -10.208411| 0.003434| 0.989679| -4.378353|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD multizone.cfg` in `issue_simplified/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.259741| -0.741089|; | 1| -1.224321| -2.240439|. ...; | 841| -0.356891| 0.285076|; | 842| -0.124937| 0.178422|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. **`mpirun SU2_CFD mz-0.cfg` in `issue_complicated/singlezone`** with 24 MPI ranks (because it needs so many iterations) gives; ```; +----------------------------------------------------------------+; | Inner_Iter| Time(sec)| rms[Rho]| CL| CD|; +----------------------------------------------------------------+; | 0| 4.5727e-02| -3.131336| -0.000000| 47.049080|; | 1| 3.9651e-02| -3.399537| -0.000000| 43.567743|; ...; | 1304734| 3.6630e-02| -12.000000| -0.000000| 1.003811|; | 1304735| 3.6630e-02| -12.000003| -0.000000| 1.003811|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD mz-all.cfg` in `issue_complicated/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206
https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206:2878,Safety,detect,detected,2878,"------------; All convergence criteria satisfied.; ```. **`SU2_CFD multizone.cfg` in `issue_simplified/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.259741| -0.741089|; | 1| -1.224321| -2.240439|. ...; | 841| -0.356891| 0.285076|; | 842| -0.124937| 0.178422|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. **`mpirun SU2_CFD mz-0.cfg` in `issue_complicated/singlezone`** with 24 MPI ranks (because it needs so many iterations) gives; ```; +----------------------------------------------------------------+; | Inner_Iter| Time(sec)| rms[Rho]| CL| CD|; +----------------------------------------------------------------+; | 0| 4.5727e-02| -3.131336| -0.000000| 47.049080|; | 1| 3.9651e-02| -3.399537| -0.000000| 43.567743|; ...; | 1304734| 3.6630e-02| -12.000000| -0.000000| 1.003811|; | 1304735| 3.6630e-02| -12.000003| -0.000000| 1.003811|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD mz-all.cfg` in `issue_complicated/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.937734| -2.766626|; | 1| -2.167353| -6.482096|. ...; | 6546| -0.859233| -0.793018|; | 6547| -0.865290| -0.739081|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206
https://github.com/su2code/SU2/pull/1416#issuecomment-954843944:118,Availability,mainten,maintenance,118,"👍 https://github.com/su2code/SU2/releases/tag/v7.2.1 I am just curious: was this splitting in features, bug fixes and maintenance a manual task or did some script fail to do that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1416#issuecomment-954843944
https://github.com/su2code/SU2/pull/1416#issuecomment-954843944:33,Deployability,release,releases,33,"👍 https://github.com/su2code/SU2/releases/tag/v7.2.1 I am just curious: was this splitting in features, bug fixes and maintenance a manual task or did some script fail to do that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1416#issuecomment-954843944
https://github.com/su2code/SU2/pull/1416#issuecomment-954872759:308,Modifiability,variab,variable,308,This pull request **introduces 2 alerts** and **fixes 29** when merging b718c1f697b28ceb9c6b3636869b923767f6fde7 into a1a88d1f8494c5dc0a9cda407b26806e7a3a8d72 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-09da455b036edabab1f34277beeb4185ef2ad75c). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 10 for Comparison of narrow type with wide type in loop condition; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1416#issuecomment-954872759
https://github.com/su2code/SU2/pull/1416#issuecomment-954872759:326,Modifiability,Variab,Variable,326,This pull request **introduces 2 alerts** and **fixes 29** when merging b718c1f697b28ceb9c6b3636869b923767f6fde7 into a1a88d1f8494c5dc0a9cda407b26806e7a3a8d72 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-09da455b036edabab1f34277beeb4185ef2ad75c). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 10 for Comparison of narrow type with wide type in loop condition; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1416#issuecomment-954872759
https://github.com/su2code/SU2/pull/1416#issuecomment-954872759:387,Modifiability,Variab,Variable,387,This pull request **introduces 2 alerts** and **fixes 29** when merging b718c1f697b28ceb9c6b3636869b923767f6fde7 into a1a88d1f8494c5dc0a9cda407b26806e7a3a8d72 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-09da455b036edabab1f34277beeb4185ef2ad75c). **new alerts:**. * 1 for Unused local variable; * 1 for Variable defined multiple times. **fixed alerts:**. * 13 for Variable defined multiple times; * 10 for Comparison of narrow type with wide type in loop condition; * 6 for Unused import,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1416#issuecomment-954872759
https://github.com/su2code/SU2/pull/1417#issuecomment-1062589336:7,Deployability,update,updated,7,"I just updated to develop. Trying to ""unstale"" this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417#issuecomment-1062589336
https://github.com/su2code/SU2/pull/1418#issuecomment-957314740:123,Availability,ERROR,ERROR,123,"As stated in #1384 some hybrid parallel AD regression tests failed.; The regression test `visc_cone` has also failed with `ERROR: The code was not able to get to the ""Begin solver"" section.` for both serial_regression.py and parallel_regression.py.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-957314740
https://github.com/su2code/SU2/pull/1418#issuecomment-957314740:54,Testability,test,tests,54,"As stated in #1384 some hybrid parallel AD regression tests failed.; The regression test `visc_cone` has also failed with `ERROR: The code was not able to get to the ""Begin solver"" section.` for both serial_regression.py and parallel_regression.py.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-957314740
https://github.com/su2code/SU2/pull/1418#issuecomment-957314740:84,Testability,test,test,84,"As stated in #1384 some hybrid parallel AD regression tests failed.; The regression test `visc_cone` has also failed with `ERROR: The code was not able to get to the ""Begin solver"" section.` for both serial_regression.py and parallel_regression.py.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-957314740
https://github.com/su2code/SU2/pull/1418#issuecomment-958158548:11,Deployability,update,update,11,@suargi An update to the TestCases repo renamed a folder for the visc_cone. I have a PR open to fix the problem ---> Should be fixed now.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958158548
https://github.com/su2code/SU2/pull/1418#issuecomment-958158548:25,Testability,Test,TestCases,25,@suargi An update to the TestCases repo renamed a folder for the visc_cone. I have a PR open to fix the problem ---> Should be fixed now.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958158548
https://github.com/su2code/SU2/pull/1418#issuecomment-958192673:13,Deployability,update,update,13,> @suargi An update to the TestCases repo renamed a folder for the visc_cone. I have a PR open to fix the problem ---> Should be fixed now. Thanks @WallyMaier. Now serial and parallel regression test work smoothly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958192673
https://github.com/su2code/SU2/pull/1418#issuecomment-958192673:27,Testability,Test,TestCases,27,> @suargi An update to the TestCases repo renamed a folder for the visc_cone. I have a PR open to fix the problem ---> Should be fixed now. Thanks @WallyMaier. Now serial and parallel regression test work smoothly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958192673
https://github.com/su2code/SU2/pull/1418#issuecomment-958192673:195,Testability,test,test,195,> @suargi An update to the TestCases repo renamed a folder for the visc_cone. I have a PR open to fix the problem ---> Should be fixed now. Thanks @WallyMaier. Now serial and parallel regression test work smoothly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958192673
https://github.com/su2code/SU2/pull/1418#issuecomment-958936613:187,Deployability,update,updated,187,> Thanks for this +1 Please strip all the comments and non relevant options from the configs. Thank you Pedro for all your suggestions.; I have reverted the serial_regression.py file and updated the configuration files. This work is done in 84c9584d430e23ea62b4371cad3d0a96d9717cdb.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958936613
https://github.com/su2code/SU2/pull/1418#issuecomment-958936613:199,Deployability,configurat,configuration,199,> Thanks for this +1 Please strip all the comments and non relevant options from the configs. Thank you Pedro for all your suggestions.; I have reverted the serial_regression.py file and updated the configuration files. This work is done in 84c9584d430e23ea62b4371cad3d0a96d9717cdb.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958936613
https://github.com/su2code/SU2/pull/1418#issuecomment-958936613:85,Modifiability,config,configs,85,> Thanks for this +1 Please strip all the comments and non relevant options from the configs. Thank you Pedro for all your suggestions.; I have reverted the serial_regression.py file and updated the configuration files. This work is done in 84c9584d430e23ea62b4371cad3d0a96d9717cdb.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958936613
https://github.com/su2code/SU2/pull/1418#issuecomment-958936613:199,Modifiability,config,configuration,199,> Thanks for this +1 Please strip all the comments and non relevant options from the configs. Thank you Pedro for all your suggestions.; I have reverted the serial_regression.py file and updated the configuration files. This work is done in 84c9584d430e23ea62b4371cad3d0a96d9717cdb.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958936613
https://github.com/su2code/SU2/issues/1420#issuecomment-958677226:27,Availability,error,error,27,"There was actually another error before The Meson build system-output. > warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [1/29] CXX build/browse.oninja: fatal: posix_spawn: Resource temporarily unavailable; Traceback (most recent call last):; File ""configure.py"", line 709, in <module>; subprocess.check_call(rebuild_args); File ""/home/FDa/FDa045/anaconda3/lib/python3.7/subprocess.py"", line 363, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '['./ninja']' returned non-zero exit status 1.; /bin/sh: fork: retry: No child processes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420#issuecomment-958677226
https://github.com/su2code/SU2/issues/1420#issuecomment-958677226:373,Modifiability,config,configure,373,"There was actually another error before The Meson build system-output. > warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [1/29] CXX build/browse.oninja: fatal: posix_spawn: Resource temporarily unavailable; Traceback (most recent call last):; File ""configure.py"", line 709, in <module>; subprocess.check_call(rebuild_args); File ""/home/FDa/FDa045/anaconda3/lib/python3.7/subprocess.py"", line 363, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '['./ninja']' returned non-zero exit status 1.; /bin/sh: fork: retry: No child processes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420#issuecomment-958677226
https://github.com/su2code/SU2/pull/1427#issuecomment-965125694:70,Testability,test,testcase,70,From my perspective this is finished. As mentioned above I will add a testcase with Mean-flow+SST+2Species for 2 inlets over at #1388 once this is merged.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427#issuecomment-965125694
https://github.com/su2code/SU2/pull/1428#issuecomment-972139855:123,Modifiability,variab,variable,123,"So instead of using arrays, since we are only choosing the smallest limiter value, it seems like we can just store a local variable in computing the Van Albada limiter. Does this look okay?. I have the feeling we want to generalize this for other limiters in the future, but this seems like the most efficien option for an implementation in CNEMOEulerSolver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-972139855
https://github.com/su2code/SU2/pull/1428#issuecomment-972424036:109,Testability,test,test,109,"I think this is working now, I'm seeing some non-physical reconstructed points initially for the axi_viscone test case, but these seem to go away after a few hundred iters using Van Albada. The solution looks physical. I'd like to change the regression tests to support these new values, but it would be great if everyone could double-check this before I make that change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-972424036
https://github.com/su2code/SU2/pull/1428#issuecomment-972424036:253,Testability,test,tests,253,"I think this is working now, I'm seeing some non-physical reconstructed points initially for the axi_viscone test case, but these seem to go away after a few hundred iters using Van Albada. The solution looks physical. I'd like to change the regression tests to support these new values, but it would be great if everyone could double-check this before I make that change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-972424036
https://github.com/su2code/SU2/pull/1428#issuecomment-974716725:92,Testability,test,test,92,> LGTM! Thanks for doing this!; > ; > Could you possibly post a before and after of a basic test case?. before and after for the residuals? Or for the solution?. Here are the residuals for the serial regression of the axisymmetric viscous cone: . ![image](https://user-images.githubusercontent.com/44848904/142783736-0769b2e3-cce5-4c45-83b8-b25961cd1a66.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-974716725
https://github.com/su2code/SU2/pull/1428#issuecomment-977172205:161,Testability,test,test,161,"Hi @pcarruscag , I notice that I get very slightly different residuals for the parallel regression running with 2 cores on my laptop vs in the Github regression test. @WallyMaier said this might be due to difference in partitioning, should I just use the residual values from the Github regression so the test passes, or are there other checks I should run?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-977172205
https://github.com/su2code/SU2/pull/1428#issuecomment-977172205:305,Testability,test,test,305,"Hi @pcarruscag , I notice that I get very slightly different residuals for the parallel regression running with 2 cores on my laptop vs in the Github regression test. @WallyMaier said this might be due to difference in partitioning, should I just use the residual values from the Github regression so the test passes, or are there other checks I should run?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-977172205
https://github.com/su2code/SU2/pull/1428#issuecomment-977255994:90,Testability,test,tests,90,"More likely to be due to compiler differences, yes please take the values from the github tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-977255994
https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015:134,Availability,error,errors,134,"@AmauryBilocq Thanks for your post. Can you please check that you are actually not running out of memory, as that can also raise such errors? Second, if Giles BC is the issue I think you will still be able to run the case with Riemann which is a bit simpler than Giles. Can you also test that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015
https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015:283,Testability,test,test,283,"@AmauryBilocq Thanks for your post. Can you please check that you are actually not running out of memory, as that can also raise such errors? Second, if Giles BC is the issue I think you will still be able to run the case with Riemann which is a bit simpler than Giles. Can you also test that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015
https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015:250,Usability,simpl,simpler,250,"@AmauryBilocq Thanks for your post. Can you please check that you are actually not running out of memory, as that can also raise such errors? Second, if Giles BC is the issue I think you will still be able to run the case with Riemann which is a bit simpler than Giles. Can you also test that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015
https://github.com/su2code/SU2/issues/1429#issuecomment-1025414575:60,Availability,error,errors,60,"@AmauryBilocq Initial tests do show that Giles BC is giving errors however, the Riemann is working just fine. Unfortunately, I do not have access to my workstation these days and cannot deep-dive into the problem. Possibly, next week I will be able to give you a more detailed view of the problem. @pcarruscag If you are able to find some leads in the meantime do let me know. Thanks !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429#issuecomment-1025414575
https://github.com/su2code/SU2/issues/1429#issuecomment-1025414575:139,Security,access,access,139,"@AmauryBilocq Initial tests do show that Giles BC is giving errors however, the Riemann is working just fine. Unfortunately, I do not have access to my workstation these days and cannot deep-dive into the problem. Possibly, next week I will be able to give you a more detailed view of the problem. @pcarruscag If you are able to find some leads in the meantime do let me know. Thanks !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429#issuecomment-1025414575
https://github.com/su2code/SU2/issues/1429#issuecomment-1025414575:22,Testability,test,tests,22,"@AmauryBilocq Initial tests do show that Giles BC is giving errors however, the Riemann is working just fine. Unfortunately, I do not have access to my workstation these days and cannot deep-dive into the problem. Possibly, next week I will be able to give you a more detailed view of the problem. @pcarruscag If you are able to find some leads in the meantime do let me know. Thanks !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429#issuecomment-1025414575
https://github.com/su2code/SU2/issues/1430#issuecomment-964531526:12,Testability,test,testcase,12,"Yes, in the testcase described here: https://github.com/su2code/SU2/pull/1362#issuecomment-964163647 I saw in the debugger that halo vertices occur in the loop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430#issuecomment-964531526
https://github.com/su2code/SU2/issues/1430#issuecomment-965077124:82,Safety,avoid,avoiding,82,"Right, in the viscous forces case, it should be ok to move the ""if Domain"" up and avoiding computations on halo points.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430#issuecomment-965077124
https://github.com/su2code/SU2/issues/1430#issuecomment-966266235:284,Availability,down,down,284,"> in the viscous forces case, it should be ok to move the ""if Domain"" up and avoiding computations on halo points. Corrected in commit f6f986ec256a1c47199703ef6540145506dbbdc3 in #1362 similar to that, moving the code depending on the nearest neighbor access (i.e. YPlus calculation) down into an ""if Domain"" block. Note however that after this change YPlus is not computed on halo cells any more, which might be problematic e.g. for [CTurbSSTSolver::SetTurbVars_WF](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/SU2_CFD/src/solvers/CTurbSSTSolver.cpp#L494).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430#issuecomment-966266235
https://github.com/su2code/SU2/issues/1430#issuecomment-966266235:218,Integrability,depend,depending,218,"> in the viscous forces case, it should be ok to move the ""if Domain"" up and avoiding computations on halo points. Corrected in commit f6f986ec256a1c47199703ef6540145506dbbdc3 in #1362 similar to that, moving the code depending on the nearest neighbor access (i.e. YPlus calculation) down into an ""if Domain"" block. Note however that after this change YPlus is not computed on halo cells any more, which might be problematic e.g. for [CTurbSSTSolver::SetTurbVars_WF](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/SU2_CFD/src/solvers/CTurbSSTSolver.cpp#L494).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430#issuecomment-966266235
https://github.com/su2code/SU2/issues/1430#issuecomment-966266235:77,Safety,avoid,avoiding,77,"> in the viscous forces case, it should be ok to move the ""if Domain"" up and avoiding computations on halo points. Corrected in commit f6f986ec256a1c47199703ef6540145506dbbdc3 in #1362 similar to that, moving the code depending on the nearest neighbor access (i.e. YPlus calculation) down into an ""if Domain"" block. Note however that after this change YPlus is not computed on halo cells any more, which might be problematic e.g. for [CTurbSSTSolver::SetTurbVars_WF](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/SU2_CFD/src/solvers/CTurbSSTSolver.cpp#L494).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430#issuecomment-966266235
https://github.com/su2code/SU2/issues/1430#issuecomment-966266235:252,Security,access,access,252,"> in the viscous forces case, it should be ok to move the ""if Domain"" up and avoiding computations on halo points. Corrected in commit f6f986ec256a1c47199703ef6540145506dbbdc3 in #1362 similar to that, moving the code depending on the nearest neighbor access (i.e. YPlus calculation) down into an ""if Domain"" block. Note however that after this change YPlus is not computed on halo cells any more, which might be problematic e.g. for [CTurbSSTSolver::SetTurbVars_WF](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/SU2_CFD/src/solvers/CTurbSSTSolver.cpp#L494).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430#issuecomment-966266235
https://github.com/su2code/SU2/pull/1435#issuecomment-966491089:464,Energy Efficiency,adapt,adaptations,464,"The added lines are a combination of the explicit Euler in CHeatSolver and the implicit Euler in CScalarSolver. Do you consider this approach to be correct?. For the testcase `SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg`, explicit Euler for both flow and turbulence equations and CFL=0.1 converges from the restart solution. Some more details:; - `CHeatSolver` does something with `CVariable::Res_TruncError`, which is related to multigrid. Maybe additional adaptations are necessary here.; - `PrepareExplicitIteration` was copied from `PrepareImplicitIteration`, except for the computation of the matrix of the linear system. We can remove duplicate code here.; - `CompleteImplicitIteration` could be renamed as ""add `LinSysSol` to solution""; .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089
https://github.com/su2code/SU2/pull/1435#issuecomment-966491089:464,Modifiability,adapt,adaptations,464,"The added lines are a combination of the explicit Euler in CHeatSolver and the implicit Euler in CScalarSolver. Do you consider this approach to be correct?. For the testcase `SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg`, explicit Euler for both flow and turbulence equations and CFL=0.1 converges from the restart solution. Some more details:; - `CHeatSolver` does something with `CVariable::Res_TruncError`, which is related to multigrid. Maybe additional adaptations are necessary here.; - `PrepareExplicitIteration` was copied from `PrepareImplicitIteration`, except for the computation of the matrix of the linear system. We can remove duplicate code here.; - `CompleteImplicitIteration` could be renamed as ""add `LinSysSol` to solution""; .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089
https://github.com/su2code/SU2/pull/1435#issuecomment-966491089:166,Testability,test,testcase,166,"The added lines are a combination of the explicit Euler in CHeatSolver and the implicit Euler in CScalarSolver. Do you consider this approach to be correct?. For the testcase `SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg`, explicit Euler for both flow and turbulence equations and CFL=0.1 converges from the restart solution. Some more details:; - `CHeatSolver` does something with `CVariable::Res_TruncError`, which is related to multigrid. Maybe additional adaptations are necessary here.; - `PrepareExplicitIteration` was copied from `PrepareImplicitIteration`, except for the computation of the matrix of the linear system. We can remove duplicate code here.; - `CompleteImplicitIteration` could be renamed as ""add `LinSysSol` to solution""; .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089
https://github.com/su2code/SU2/pull/1435#issuecomment-966491089:180,Testability,Test,TestCases,180,"The added lines are a combination of the explicit Euler in CHeatSolver and the implicit Euler in CScalarSolver. Do you consider this approach to be correct?. For the testcase `SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg`, explicit Euler for both flow and turbulence equations and CFL=0.1 converges from the restart solution. Some more details:; - `CHeatSolver` does something with `CVariable::Res_TruncError`, which is related to multigrid. Maybe additional adaptations are necessary here.; - `PrepareExplicitIteration` was copied from `PrepareImplicitIteration`, except for the computation of the matrix of the linear system. We can remove duplicate code here.; - `CompleteImplicitIteration` could be renamed as ""add `LinSysSol` to solution""; .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089
https://github.com/su2code/SU2/pull/1435#issuecomment-976418121:113,Testability,test,test,113,"@maxaehle as far as I see there are no further comments from pedro or me, so if you merge develop + pass the reg test feel free to merge this. (of course if you also have no further plans with this PR); Thanks again for this contribution!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435#issuecomment-976418121
https://github.com/su2code/SU2/pull/1437#issuecomment-968062780:134,Testability,Test,Testcases,134,"Yes there is a discrepancy in the last digit for one the gradient values.; Since the reference file for the gradient values is in the Testcases repository and not the SU2 repository, I created a small pull request there to change the value. See su2code/TestCases/pull/84.; Together the changes lead to the test passing as expected.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437#issuecomment-968062780
https://github.com/su2code/SU2/pull/1437#issuecomment-968062780:253,Testability,Test,TestCases,253,"Yes there is a discrepancy in the last digit for one the gradient values.; Since the reference file for the gradient values is in the Testcases repository and not the SU2 repository, I created a small pull request there to change the value. See su2code/TestCases/pull/84.; Together the changes lead to the test passing as expected.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437#issuecomment-968062780
https://github.com/su2code/SU2/pull/1437#issuecomment-968062780:306,Testability,test,test,306,"Yes there is a discrepancy in the last digit for one the gradient values.; Since the reference file for the gradient values is in the Testcases repository and not the SU2 repository, I created a small pull request there to change the value. See su2code/TestCases/pull/84.; Together the changes lead to the test passing as expected.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437#issuecomment-968062780
https://github.com/su2code/SU2/pull/1438#issuecomment-968060030:13,Deployability,update,update,13,restart file update https://github.com/su2code/TestCases/pull/85,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1438#issuecomment-968060030
https://github.com/su2code/SU2/pull/1438#issuecomment-968060030:47,Testability,Test,TestCases,47,restart file update https://github.com/su2code/TestCases/pull/85,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1438#issuecomment-968060030
https://github.com/su2code/SU2/pull/1449#issuecomment-974631156:75,Availability,recover,recover,75,"It's ok, I'll have a look today or tomorrow to see if there is some way to recover those precious deleted lines.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1449#issuecomment-974631156
https://github.com/su2code/SU2/pull/1449#issuecomment-974631156:75,Safety,recover,recover,75,"It's ok, I'll have a look today or tomorrow to see if there is some way to recover those precious deleted lines.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1449#issuecomment-974631156
https://github.com/su2code/SU2/pull/1451#issuecomment-979788570:190,Availability,error,error,190,"I have now added defaults to all getkind_solver switches: the first objective here is to pass the regression tests. It still has to be checked if we need to add solver switches, or throw an error if for some reason we end up in the default switch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1451#issuecomment-979788570
https://github.com/su2code/SU2/pull/1451#issuecomment-979788570:109,Testability,test,tests,109,"I have now added defaults to all getkind_solver switches: the first objective here is to pass the regression tests. It still has to be checked if we need to add solver switches, or throw an error if for some reason we end up in the default switch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1451#issuecomment-979788570
https://github.com/su2code/SU2/issues/1458#issuecomment-984084597:225,Usability,simpl,simple,225,"Hi, please attach the exact files you are using, and commands you are running, to the discussion you already opened. That will make it easier for someone to help.; The best way to get help from a developer is to make it very simple to replicate the problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458#issuecomment-984084597
https://github.com/su2code/SU2/pull/1461#issuecomment-985070634:79,Safety,avoid,avoid,79,"> generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication. Actually I just noticed there is no `CAdjNEMOOutput` or similar. Not sure @WallyMaier , but is the NEMO-tribe not doing in adjoints?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461#issuecomment-985070634
https://github.com/su2code/SU2/issues/1462#issuecomment-985689737:465,Integrability,wrap,wrapped,465,"To everyone searching for the code in latest develop (there also @bigfooted's paper is given maybe, also it might be another from Eduardo Molina?) I posted it below.; It seems you are using an older version of the code so please compare it with the latest which is posted below. (I am too lazy to check myself, and I am also not knowledgeable in this stuff). (@ShiheJia when posting code please dont include every line number, keep the formatting and post the code wrapped in `'''c++ <code> '''` with `'` being the forward pointing tick); ```c++; case SA_EDDES: {; /*--- An Enhanced Version of DES with Rapid Transition from RANS to LES in Separated Flows.; Shur et al.; Flow Turbulence Combust - 2015; ---*/. su2double vortexTiltingMeasure = nodes->GetVortex_Tilting(iPoint);. const su2double omega = GeometryToolbox::Norm(3, vorticity);. su2double ratioOmega[MAXNDIM] = {};. for (auto iDim = 0; iDim < 3; iDim++){; ratioOmega[iDim] = vorticity[iDim]/omega;; }. const su2double deltaDDES = geometry->nodes->GetMaxLength(iPoint);. su2double ln_max = 0.0;; for (const auto jPoint : geometry->nodes->GetPoints(iPoint)) {; const auto coord_j = geometry->nodes->GetCoord(jPoint);; su2double delta[MAXNDIM] = {};; for (auto iDim = 0u; iDim < nDim; iDim++){; delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; }; su2double ln[3];; ln[0] = delta[1]*ratioOmega[2] - delta[2]*ratioOmega[1];; ln[1] = delta[2]*ratioOmega[0] - delta[0]*ratioOmega[2];; ln[2] = delta[0]*ratioOmega[1] - delta[1]*ratioOmega[0];; const su2double aux_ln = sqrt(ln[0]*ln[0] + ln[1]*ln[1] + ln[2]*ln[2]);; ln_max = max(ln_max, aux_ln);; vortexTiltingMeasure += nodes->GetVortex_Tilting(jPoint);; }; vortexTiltingMeasure /= (nNeigh + 1);. const su2double f_kh = max(f_min,; min(f_max,; f_min + ((f_max - f_min)/(a2 - a1)) * (vortexTiltingMeasure - a1)));. const su2double r_d = (kinematicViscosityTurb+kinematicViscosity)/(uijuij*k2*pow(wallDistance, 2.0));; const su2double f_d = 1.0-tanh(pow(8.0*r_d,3.0));. su2double maxDelta = (ln_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-985689737
https://github.com/su2code/SU2/issues/1462#issuecomment-985689737:574,Modifiability,Enhance,Enhanced,574,"To everyone searching for the code in latest develop (there also @bigfooted's paper is given maybe, also it might be another from Eduardo Molina?) I posted it below.; It seems you are using an older version of the code so please compare it with the latest which is posted below. (I am too lazy to check myself, and I am also not knowledgeable in this stuff). (@ShiheJia when posting code please dont include every line number, keep the formatting and post the code wrapped in `'''c++ <code> '''` with `'` being the forward pointing tick); ```c++; case SA_EDDES: {; /*--- An Enhanced Version of DES with Rapid Transition from RANS to LES in Separated Flows.; Shur et al.; Flow Turbulence Combust - 2015; ---*/. su2double vortexTiltingMeasure = nodes->GetVortex_Tilting(iPoint);. const su2double omega = GeometryToolbox::Norm(3, vorticity);. su2double ratioOmega[MAXNDIM] = {};. for (auto iDim = 0; iDim < 3; iDim++){; ratioOmega[iDim] = vorticity[iDim]/omega;; }. const su2double deltaDDES = geometry->nodes->GetMaxLength(iPoint);. su2double ln_max = 0.0;; for (const auto jPoint : geometry->nodes->GetPoints(iPoint)) {; const auto coord_j = geometry->nodes->GetCoord(jPoint);; su2double delta[MAXNDIM] = {};; for (auto iDim = 0u; iDim < nDim; iDim++){; delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; }; su2double ln[3];; ln[0] = delta[1]*ratioOmega[2] - delta[2]*ratioOmega[1];; ln[1] = delta[2]*ratioOmega[0] - delta[0]*ratioOmega[2];; ln[2] = delta[0]*ratioOmega[1] - delta[1]*ratioOmega[0];; const su2double aux_ln = sqrt(ln[0]*ln[0] + ln[1]*ln[1] + ln[2]*ln[2]);; ln_max = max(ln_max, aux_ln);; vortexTiltingMeasure += nodes->GetVortex_Tilting(jPoint);; }; vortexTiltingMeasure /= (nNeigh + 1);. const su2double f_kh = max(f_min,; min(f_max,; f_min + ((f_max - f_min)/(a2 - a1)) * (vortexTiltingMeasure - a1)));. const su2double r_d = (kinematicViscosityTurb+kinematicViscosity)/(uijuij*k2*pow(wallDistance, 2.0));; const su2double f_d = 1.0-tanh(pow(8.0*r_d,3.0));. su2double maxDelta = (ln_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-985689737
https://github.com/su2code/SU2/issues/1462#issuecomment-986239816:108,Deployability,release,released,108,"Sorry for the late reply! Thanks for all the help, and i am afraid i am using a 7.2.0 version and the newly released version 7.2.1 remains the same code. The problem is just lying on ""delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);"" which is also in @TobiKattmann 's code post(thanks for your kind guidance ).; In deed, this part of code should give the credit to @EduardoMolina, and the function is a part of his doctoral thesis(2018) which i just couldnot found a link or doi of. But in this paper(https://www.researchgate.net/publication/318143234; ), he gives the official definition as below without the implementation in above picture.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-986239816
https://github.com/su2code/SU2/issues/1462#issuecomment-986239816:301,Usability,guid,guidance,301,"Sorry for the late reply! Thanks for all the help, and i am afraid i am using a 7.2.0 version and the newly released version 7.2.1 remains the same code. The problem is just lying on ""delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);"" which is also in @TobiKattmann 's code post(thanks for your kind guidance ).; In deed, this part of code should give the credit to @EduardoMolina, and the function is a part of his doctoral thesis(2018) which i just couldnot found a link or doi of. But in this paper(https://www.researchgate.net/publication/318143234; ), he gives the official definition as below without the implementation in above picture.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-986239816
https://github.com/su2code/SU2/issues/1462#issuecomment-988287976:88,Testability,test,tested,88,Hello guys!. @ShiheJia Could you please elaborate why do you think it is a bug? Did you tested the code?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-988287976
https://github.com/su2code/SU2/issues/1462#issuecomment-988581348:51,Testability,test,test,51,"Thanks for the suggestion and I am preparing for a test.; As far as I understand it, I just find that to get the absolute value of r_ij ( showed in the highest equation) in this part of code is unnecessary. The cross-product operation is to find the grid vector mostly parallel to the vorticity vector and the absolute value may cause a nonphysical recognition.; @EduardoMolina, I don't know if I got it wrong and wish more guidance,.; ```; for (auto iDim = 0u; iDim < nDim; iDim++){; delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-988581348
https://github.com/su2code/SU2/issues/1462#issuecomment-988581348:424,Usability,guid,guidance,424,"Thanks for the suggestion and I am preparing for a test.; As far as I understand it, I just find that to get the absolute value of r_ij ( showed in the highest equation) in this part of code is unnecessary. The cross-product operation is to find the grid vector mostly parallel to the vorticity vector and the absolute value may cause a nonphysical recognition.; @EduardoMolina, I don't know if I got it wrong and wish more guidance,.; ```; for (auto iDim = 0u; iDim < nDim; iDim++){; delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-988581348
https://github.com/su2code/SU2/issues/1462#issuecomment-990220976:53,Testability,test,test,53,"> Thanks for the suggestion and I am preparing for a test. As far as I understand it, I just find that to get the absolute value of r_ij ( showed in the highest equation) in this part of code is unnecessary. The cross-product operation is to find the grid vector mostly parallel to the vorticity vector and the absolute value may cause a nonphysical recognition. @EduardoMolina, I don't know if I got it wrong and wish more guidance,.; > ; > ```; > for (auto iDim = 0u; iDim < nDim; iDim++){; > delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; > }; > ```. Hi Shihe,. I checked the implementation and I think it is correctly done. You do need the absolute value (i.e., delta has a unit of [m] or equivalent) to keep the correct dimension of nu_t based on a Smagorinsky-type SGS model. You may find the appendix of this paper useful for your understanding of delta_omg: [https://doi.org/10.1007/s00162-011-0240-z](https://doi.org/10.1007/s00162-011-0240-z). Also note that delta_omg does not always outperforms its peers - vorticity may not be aligned to the rotation axis of a local vortex (e.g., in rotating reference frame, in attached boundary layer, to name a few), in which case the physical meaning of delta_omg becomes vague. See also my work for a brief review of DES-type methods and some applications: [https://doi.org/10.1115/1.4052019](https://doi.org/10.1115/1.4052019)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-990220976
https://github.com/su2code/SU2/issues/1462#issuecomment-990220976:424,Usability,guid,guidance,424,"> Thanks for the suggestion and I am preparing for a test. As far as I understand it, I just find that to get the absolute value of r_ij ( showed in the highest equation) in this part of code is unnecessary. The cross-product operation is to find the grid vector mostly parallel to the vorticity vector and the absolute value may cause a nonphysical recognition. @EduardoMolina, I don't know if I got it wrong and wish more guidance,.; > ; > ```; > for (auto iDim = 0u; iDim < nDim; iDim++){; > delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; > }; > ```. Hi Shihe,. I checked the implementation and I think it is correctly done. You do need the absolute value (i.e., delta has a unit of [m] or equivalent) to keep the correct dimension of nu_t based on a Smagorinsky-type SGS model. You may find the appendix of this paper useful for your understanding of delta_omg: [https://doi.org/10.1007/s00162-011-0240-z](https://doi.org/10.1007/s00162-011-0240-z). Also note that delta_omg does not always outperforms its peers - vorticity may not be aligned to the rotation axis of a local vortex (e.g., in rotating reference frame, in attached boundary layer, to name a few), in which case the physical meaning of delta_omg becomes vague. See also my work for a brief review of DES-type methods and some applications: [https://doi.org/10.1115/1.4052019](https://doi.org/10.1115/1.4052019)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-990220976
https://github.com/su2code/SU2/issues/1462#issuecomment-990788514:954,Deployability,upgrade,upgrade,954,"> Well, I cannot agree with @pcarruscag any more. I try to introduce some comments into this part of code as below.; > ; > ```; > // loop all the neighboorhood point of point i; > for (iNeigh = 0;iNeigh < nNeigh; iNeigh++){; > ; > // get the point number and coordinates; > jPoint = geometry->nodes->GetPoint(iPoint, iNeigh);; > coord_j = geometry->nodes->GetCoord(jPoint);; > ; > // loop dimesion and calculate the vector r_ij; > // the core of the issue; > // !!! should not use absolute here as it changes the vector direction; > for (iDim = 0; iDim < nDim; iDim++){; > delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]); ; > }; > ; > // get delta_max used for DES or DDES that is out of concern here ; > // !!! we do need this here. It will be used when fd<0.999 later.; > deltaDDES = geometry->nodes->GetMaxLength(iPoint);; > ; > // do the cross product of r_ij and n_omega; > // !!! this follows the Eqns. designed for structured solver. We need to upgrade this to the unstructure version.; > ln[0] = delta[1]*ratioOmega[2] - delta[2]*ratioOmega[1];; > ln[1] = delta[2]*ratioOmega[0] - delta[0]*ratioOmega[2];; > ln[2] = delta[0]*ratioOmega[1] - delta[1]*ratioOmega[0];; > ; > // get the length of the cross product result; > aux_ln = sqrt(ln[0]*ln[0] + ln[1]*ln[1] + ln[2]*ln[2]);; > ; > // compare to get a max length value; > ln_max = max(ln_max,aux_ln);; > ; > // used for another function of EDDES that is also out of concern here; > vortexTiltingMeasure += nodes->GetVortex_Tilting(jPoint);; > }; > ```; > ; > And the function is shown here. Just as @pcarruscag said, if we previously make all components of r_ij positive, it may just be unsuitable for may cases. @HexFluid thanks for the recommand of the papers but perhaps I just cannot get you, could you please explain a little more? ; > ### !!! The Eq. below is originally designed for solvers using structured grid, and it is the current version of implementation in SU2. For unstructure solvers please refer to the appendix of [https",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-990788514
https://github.com/su2code/SU2/issues/1463#issuecomment-986002446:171,Integrability,wrap,wrapper,171,"Hi, we don't have an option to ""keep all files"", the intended behaviour in steady state is to have only the last solution.; You could emulate what you want via the python wrapper by running some steps and them saving the files manually.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1463#issuecomment-986002446
https://github.com/su2code/SU2/issues/1463#issuecomment-1013344430:8,Availability,avail,available,8,Will be available in the next release thanks to @bigfooted,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1463#issuecomment-1013344430
https://github.com/su2code/SU2/issues/1463#issuecomment-1013344430:30,Deployability,release,release,30,Will be available in the next release thanks to @bigfooted,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1463#issuecomment-1013344430
https://github.com/su2code/SU2/pull/1464#issuecomment-986925397:364,Deployability,release,released,364,This pull request **introduces 3 alerts** and **fixes 20** when merging 1249f9f6a6a9c6ca13966de3bc40c91d4d14cf8c into 5655d91d7da192ad0b2a231f9ab5334c2235c10a - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-7a1468f6370384a8299cef84312a621e7ca8ae14). **new alerts:**. * 2 for Multiplication result converted to larger type; * 1 for Resource not released in destructor. **fixed alerts:**. * 18 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1464#issuecomment-986925397
https://github.com/su2code/SU2/pull/1464#issuecomment-986925397:497,Deployability,release,released,497,This pull request **introduces 3 alerts** and **fixes 20** when merging 1249f9f6a6a9c6ca13966de3bc40c91d4d14cf8c into 5655d91d7da192ad0b2a231f9ab5334c2235c10a - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-7a1468f6370384a8299cef84312a621e7ca8ae14). **new alerts:**. * 2 for Multiplication result converted to larger type; * 1 for Resource not released in destructor. **fixed alerts:**. * 18 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1464#issuecomment-986925397
https://github.com/su2code/SU2/pull/1465#issuecomment-997344813:99,Modifiability,extend,extend,99,"OK, code is now functional and cleaned up. If the approach for binary restart is fixed, I can will extend it to other outputs. I think the most interesting are the outputs that are used for visualization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-997344813
https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868:268,Availability,avail,availability,268,"Simplest is to just copy the saved file again, with an iteration number appended. No keeping track of what the iteration number at the previous write was, no copying of the final saved file with manually appending the final iteration number, no lag of WRT_FREQ in the availability of the restart_xxx.dat file. It does mean that we do a copy instead of a rename. But I think this is the better (because the simplest) solution. I will extend it to the other file options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868
https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868:433,Modifiability,extend,extend,433,"Simplest is to just copy the saved file again, with an iteration number appended. No keeping track of what the iteration number at the previous write was, no copying of the final saved file with manually appending the final iteration number, no lag of WRT_FREQ in the availability of the restart_xxx.dat file. It does mean that we do a copy instead of a rename. But I think this is the better (because the simplest) solution. I will extend it to the other file options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868
https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868:0,Usability,Simpl,Simplest,0,"Simplest is to just copy the saved file again, with an iteration number appended. No keeping track of what the iteration number at the previous write was, no copying of the final saved file with manually appending the final iteration number, no lag of WRT_FREQ in the availability of the restart_xxx.dat file. It does mean that we do a copy instead of a rename. But I think this is the better (because the simplest) solution. I will extend it to the other file options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868
https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868:406,Usability,simpl,simplest,406,"Simplest is to just copy the saved file again, with an iteration number appended. No keeping track of what the iteration number at the previous write was, no copying of the final saved file with manually appending the final iteration number, no lag of WRT_FREQ in the availability of the restart_xxx.dat file. It does mean that we do a copy instead of a rename. But I think this is the better (because the simplest) solution. I will extend it to the other file options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868
https://github.com/su2code/SU2/pull/1465#issuecomment-1008616812:4,Testability,test,testcases,4,The testcases contain many comments for OUTPUT_FILES and TABULAR_FORMAT that were outdated descriptions. I have removed all comments for these keywords in the testcases. Actually all testcases need to be stripped from descriptive comments and keywords that are not used or use the default value. This will be a cleanup chore for another PR.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-1008616812
https://github.com/su2code/SU2/pull/1465#issuecomment-1008616812:159,Testability,test,testcases,159,The testcases contain many comments for OUTPUT_FILES and TABULAR_FORMAT that were outdated descriptions. I have removed all comments for these keywords in the testcases. Actually all testcases need to be stripped from descriptive comments and keywords that are not used or use the default value. This will be a cleanup chore for another PR.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-1008616812
https://github.com/su2code/SU2/pull/1465#issuecomment-1008616812:183,Testability,test,testcases,183,The testcases contain many comments for OUTPUT_FILES and TABULAR_FORMAT that were outdated descriptions. I have removed all comments for these keywords in the testcases. Actually all testcases need to be stripped from descriptive comments and keywords that are not used or use the default value. This will be a cleanup chore for another PR.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-1008616812
https://github.com/su2code/SU2/issues/1467#issuecomment-990001446:15,Testability,test,test,15,I made a light test case to reproduce the issue. It's a cylinder in a flowfield. It's only 112k cells. ![mesh](https://user-images.githubusercontent.com/91184648/145433376-ec7d4309-acc6-43d2-a172-39502e823147.png); ![swpeptCylinder](https://user-images.githubusercontent.com/91184648/145433398-97123613-824f-4f81-a143-aaae790ce252.png); ![residual_energy](https://user-images.githubusercontent.com/91184648/145433426-e6fc38f8-8482-47be-bd52-dca747b3e3e4.png). The residuals never converge:; ![residual_convergence](https://user-images.githubusercontent.com/91184648/145432900-0c2d7432-807b-4fe4-b24d-abf01cdc7bc4.png); Here is the archive containing the case:; [cyl.zip](https://github.com/su2code/SU2/files/7686715/cyl.zip),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-990001446
https://github.com/su2code/SU2/issues/1467#issuecomment-990776364:99,Testability,test,test,99,"Hi,; I tried with SA instead of SA_NEG, I get the same behavior. I understand that I don't need to test the develop branch then. I am ok with some c++ dev but I am not an expert. How would you improve the current implementation?. Thanks,; Jean-François",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-990776364
https://github.com/su2code/SU2/issues/1467#issuecomment-1017640248:66,Availability,robust,robust,66,"Hi Jean,; Sorry for the delay. The hypothesis I have for the less robust behavior of periodic BC's is that the linear solver is not completely aware of the periodicity. In fact after the linear solve we have to force the matching nodes to have the same value.; This is done in CFVMFlowSolverBase.hpp::CompleteImplicitIteration_impl, in the call to InitiatePeriodicComms.; The idea is to make the linear solver aware of the periodicity, to do so would require including periodic communications in the preconditioners and the matrix-vector product.; These are all in CSysMatrix.cpp, so before each of the `/*--- MPI Parallelization ---*/` bits we would need periodic comms, for preconditioners these comms would simply make the values equal, like in CSolver::InitiatePeriodicComms(PERIODIC_IMPLICIT) whereas for the matrix-vector product we need to add the values (effectively periodicity splits a row of the matrix into two ""half rows"") and this would be similar to what is done with the linear residual in CSolver::InitiatePeriodicComms(PERIODIC_RESIDUAL).; I think @TobiKattmann was also interested in having a look into this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-1017640248
https://github.com/su2code/SU2/issues/1467#issuecomment-1017640248:710,Usability,simpl,simply,710,"Hi Jean,; Sorry for the delay. The hypothesis I have for the less robust behavior of periodic BC's is that the linear solver is not completely aware of the periodicity. In fact after the linear solve we have to force the matching nodes to have the same value.; This is done in CFVMFlowSolverBase.hpp::CompleteImplicitIteration_impl, in the call to InitiatePeriodicComms.; The idea is to make the linear solver aware of the periodicity, to do so would require including periodic communications in the preconditioners and the matrix-vector product.; These are all in CSysMatrix.cpp, so before each of the `/*--- MPI Parallelization ---*/` bits we would need periodic comms, for preconditioners these comms would simply make the values equal, like in CSolver::InitiatePeriodicComms(PERIODIC_IMPLICIT) whereas for the matrix-vector product we need to add the values (effectively periodicity splits a row of the matrix into two ""half rows"") and this would be similar to what is done with the linear residual in CSolver::InitiatePeriodicComms(PERIODIC_RESIDUAL).; I think @TobiKattmann was also interested in having a look into this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-1017640248
https://github.com/su2code/SU2/issues/1467#issuecomment-1017659476:100,Testability,test,test,100,"Yes, indeed. I'll open a (rather empty) Draft PR soon in order to pressure myself a bit to get this test going. I am sorry for the delay :(",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-1017659476
https://github.com/su2code/SU2/issues/1467#issuecomment-1082438068:230,Availability,toler,tolerance,230,"Hi @jf-thomas, hopefully this is still of interest to you, please have a look at the branch from #1585 it seems to fix the issues of your example problem.; Note that to have comparable time per iteration I had to relax the linear tolerance to 0.1 (from 0.01) (in my experience this is fine).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-1082438068
https://github.com/su2code/SU2/issues/1467#issuecomment-1084438279:170,Availability,toler,tolerance,170,"Hi @pcarruscag, thank you for the development. I am testing it right now, I already noticed the struggle to converge the linear system. I lowered the CFL and relaxed the tolerance to 0.1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-1084438279
https://github.com/su2code/SU2/issues/1467#issuecomment-1084438279:52,Testability,test,testing,52,"Hi @pcarruscag, thank you for the development. I am testing it right now, I already noticed the struggle to converge the linear system. I lowered the CFL and relaxed the tolerance to 0.1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-1084438279
https://github.com/su2code/SU2/issues/1467#issuecomment-1102396316:44,Deployability,update,update,44,"Hi @jf-thomas no worries, thank you for the update. Just to clarify, are you referring just to the small example problem? Or also to the 2.5D wing section?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-1102396316
https://github.com/su2code/SU2/issues/1468#issuecomment-1003350752:237,Deployability,install,installation,237,"> Hi, can you try the process mentioned in #1471. Good morning and thanks for the reply.; Even though I did not try the process you mentioned I did find another way to get around the problem: I went for Windows Subsystem for Linux (WSL) installation and I used it to build SU2 in the same manner as I did on my Ubuntu partition.; Now everything works fine.; I will eventually try to follow the process from #1471 in the future.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1468#issuecomment-1003350752
https://github.com/su2code/SU2/issues/1471#issuecomment-997986082:13,Deployability,install,install,13,"1) after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type **set MSMPI_LIB64=\\%MSMPI_LIB64%** in cmd or **$env:MSMPI_LIB64=""\\""+$env:MSMPI_LIB64** in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;; 2)after Configuration, you should find the file named ""build.ninja"" in folder called ""build"", then open it as a text editor, you can look for string ""**-l\\\\**"" through the entire file, you wiil find several of strings like ""-l\\\\D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi"", it's the path of msmpi installation, it may be a little different in your pc, then you should replace all strings with ""D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi.lib"", it's path of **msmpi.lib**, please use your own path;; 3) Last ,type **ninja -C build install** to compile，this time it will be all right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082
https://github.com/su2code/SU2/issues/1471#issuecomment-997986082:358,Deployability,Configurat,Configuration,358,"1) after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type **set MSMPI_LIB64=\\%MSMPI_LIB64%** in cmd or **$env:MSMPI_LIB64=""\\""+$env:MSMPI_LIB64** in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;; 2)after Configuration, you should find the file named ""build.ninja"" in folder called ""build"", then open it as a text editor, you can look for string ""**-l\\\\**"" through the entire file, you wiil find several of strings like ""-l\\\\D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi"", it's the path of msmpi installation, it may be a little different in your pc, then you should replace all strings with ""D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi.lib"", it's path of **msmpi.lib**, please use your own path;; 3) Last ,type **ninja -C build install** to compile，this time it will be all right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082
https://github.com/su2code/SU2/issues/1471#issuecomment-997986082:665,Deployability,install,installation,665,"1) after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type **set MSMPI_LIB64=\\%MSMPI_LIB64%** in cmd or **$env:MSMPI_LIB64=""\\""+$env:MSMPI_LIB64** in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;; 2)after Configuration, you should find the file named ""build.ninja"" in folder called ""build"", then open it as a text editor, you can look for string ""**-l\\\\**"" through the entire file, you wiil find several of strings like ""-l\\\\D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi"", it's the path of msmpi installation, it may be a little different in your pc, then you should replace all strings with ""D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi.lib"", it's path of **msmpi.lib**, please use your own path;; 3) Last ,type **ninja -C build install** to compile，this time it will be all right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082
https://github.com/su2code/SU2/issues/1471#issuecomment-997986082:912,Deployability,install,install,912,"1) after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type **set MSMPI_LIB64=\\%MSMPI_LIB64%** in cmd or **$env:MSMPI_LIB64=""\\""+$env:MSMPI_LIB64** in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;; 2)after Configuration, you should find the file named ""build.ninja"" in folder called ""build"", then open it as a text editor, you can look for string ""**-l\\\\**"" through the entire file, you wiil find several of strings like ""-l\\\\D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi"", it's the path of msmpi installation, it may be a little different in your pc, then you should replace all strings with ""D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi.lib"", it's path of **msmpi.lib**, please use your own path;; 3) Last ,type **ninja -C build install** to compile，this time it will be all right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082
https://github.com/su2code/SU2/issues/1471#issuecomment-997986082:188,Energy Efficiency,power,powershell,188,"1) after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type **set MSMPI_LIB64=\\%MSMPI_LIB64%** in cmd or **$env:MSMPI_LIB64=""\\""+$env:MSMPI_LIB64** in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;; 2)after Configuration, you should find the file named ""build.ninja"" in folder called ""build"", then open it as a text editor, you can look for string ""**-l\\\\**"" through the entire file, you wiil find several of strings like ""-l\\\\D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi"", it's the path of msmpi installation, it may be a little different in your pc, then you should replace all strings with ""D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi.lib"", it's path of **msmpi.lib**, please use your own path;; 3) Last ,type **ninja -C build install** to compile，this time it will be all right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082
https://github.com/su2code/SU2/issues/1471#issuecomment-997986082:58,Modifiability,Variab,Variable,58,"1) after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type **set MSMPI_LIB64=\\%MSMPI_LIB64%** in cmd or **$env:MSMPI_LIB64=""\\""+$env:MSMPI_LIB64** in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;; 2)after Configuration, you should find the file named ""build.ninja"" in folder called ""build"", then open it as a text editor, you can look for string ""**-l\\\\**"" through the entire file, you wiil find several of strings like ""-l\\\\D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi"", it's the path of msmpi installation, it may be a little different in your pc, then you should replace all strings with ""D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi.lib"", it's path of **msmpi.lib**, please use your own path;; 3) Last ,type **ninja -C build install** to compile，this time it will be all right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082
https://github.com/su2code/SU2/issues/1471#issuecomment-997986082:358,Modifiability,Config,Configuration,358,"1) after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type **set MSMPI_LIB64=\\%MSMPI_LIB64%** in cmd or **$env:MSMPI_LIB64=""\\""+$env:MSMPI_LIB64** in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;; 2)after Configuration, you should find the file named ""build.ninja"" in folder called ""build"", then open it as a text editor, you can look for string ""**-l\\\\**"" through the entire file, you wiil find several of strings like ""-l\\\\D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi"", it's the path of msmpi installation, it may be a little different in your pc, then you should replace all strings with ""D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi.lib"", it's path of **msmpi.lib**, please use your own path;; 3) Last ,type **ninja -C build install** to compile，this time it will be all right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082
https://github.com/su2code/SU2/issues/1471#issuecomment-999475401:123,Testability,test,test,123,"Thank you, that looks like the build system is doing something weird, unfortunately I don't have a machine with windows to test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-999475401
https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582:399,Availability,error,error,399,"> after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type set MSMPI_LIB64=\%MSMPI_LIB64% in cmd or $env:MSMPI_LIB64=""\""+$env:MSMPI_LIB64 in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;. @Zcaic Hi zcaic, . I tried this, but it still thow the same error. with message; ```; OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\lib\\C:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'; ```. ⬆️ just from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\libC:\\Program...`. Is that any solutions ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582
https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582:12,Deployability,install,install,12,"> after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type set MSMPI_LIB64=\%MSMPI_LIB64% in cmd or $env:MSMPI_LIB64=""\""+$env:MSMPI_LIB64 in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;. @Zcaic Hi zcaic, . I tried this, but it still thow the same error. with message; ```; OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\lib\\C:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'; ```. ⬆️ just from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\libC:\\Program...`. Is that any solutions ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582
https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582:177,Energy Efficiency,power,powershell,177,"> after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type set MSMPI_LIB64=\%MSMPI_LIB64% in cmd or $env:MSMPI_LIB64=""\""+$env:MSMPI_LIB64 in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;. @Zcaic Hi zcaic, . I tried this, but it still thow the same error. with message; ```; OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\lib\\C:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'; ```. ⬆️ just from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\libC:\\Program...`. Is that any solutions ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582
https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582:411,Integrability,message,message,411,"> after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type set MSMPI_LIB64=\%MSMPI_LIB64% in cmd or $env:MSMPI_LIB64=""\""+$env:MSMPI_LIB64 in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;. @Zcaic Hi zcaic, . I tried this, but it still thow the same error. with message; ```; OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\lib\\C:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'; ```. ⬆️ just from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\libC:\\Program...`. Is that any solutions ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582
https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582:57,Modifiability,Variab,Variable,57,"> after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type set MSMPI_LIB64=\%MSMPI_LIB64% in cmd or $env:MSMPI_LIB64=""\""+$env:MSMPI_LIB64 in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;. @Zcaic Hi zcaic, . I tried this, but it still thow the same error. with message; ```; OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\lib\\C:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'; ```. ⬆️ just from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\libC:\\Program...`. Is that any solutions ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582
https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136:166,Availability,error,error,166,"@Zcaic nope, I add '\\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`. I paste wrong error message before . the actual error message after I change the envirnment variable is ; from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136
https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136:200,Availability,error,error,200,"@Zcaic nope, I add '\\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`. I paste wrong error message before . the actual error message after I change the envirnment variable is ; from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136
https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136:172,Integrability,message,message,172,"@Zcaic nope, I add '\\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`. I paste wrong error message before . the actual error message after I change the envirnment variable is ; from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136
https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136:206,Integrability,message,message,206,"@Zcaic nope, I add '\\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`. I paste wrong error message before . the actual error message after I change the envirnment variable is ; from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136
https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136:244,Modifiability,variab,variable,244,"@Zcaic nope, I add '\\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`. I paste wrong error message before . the actual error message after I change the envirnment variable is ; from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136
https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916:253,Availability,error,error,253,"OK I Solved it by use version 7.2. this problem still exists for version 7.3.1. > @Zcaic nope, I add '\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`; > ; > I paste wrong error message before . the actual error message after I change the envirnment variable is from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916
https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916:287,Availability,error,error,287,"OK I Solved it by use version 7.2. this problem still exists for version 7.3.1. > @Zcaic nope, I add '\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`; > ; > I paste wrong error message before . the actual error message after I change the envirnment variable is from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916
https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916:259,Integrability,message,message,259,"OK I Solved it by use version 7.2. this problem still exists for version 7.3.1. > @Zcaic nope, I add '\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`; > ; > I paste wrong error message before . the actual error message after I change the envirnment variable is from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916
https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916:293,Integrability,message,message,293,"OK I Solved it by use version 7.2. this problem still exists for version 7.3.1. > @Zcaic nope, I add '\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`; > ; > I paste wrong error message before . the actual error message after I change the envirnment variable is from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916
https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916:331,Modifiability,variab,variable,331,"OK I Solved it by use version 7.2. this problem still exists for version 7.3.1. > @Zcaic nope, I add '\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`; > ; > I paste wrong error message before . the actual error message after I change the envirnment variable is from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916
https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507:633,Availability,avail,available,633,"## V&V; Now we have a regression script dedicated to the V&V examples see #1538; I have added a high-lift case to the website ([here](https://github.com/su2code/su2code.github.io/pull/71), and [here](https://su2code.github.io/vandv/30p30n/)).; I think that to avoid the [issue of outdated files](https://github.com/su2code/VandV/pull/3) in V&V repo, the best strategy is to add only meshes and documentation to the V&V repo (without duplicating the website). Then anything needed to run the case should be put under regression (via the TestCases and SU2 repos as usual).; If the meshes are too large for GitHub, and are not publicly available elsewhere, we can use the SU2 Foundation Google drive. The config files can be forced to remain updated by running them in --dry_run mode in the V&V regressions. So I think the next steps would be:; - Revive the configs of the [other V&V cases](https://github.com/su2code/VandV) and put them under regression.; - Add V&V for other areas. So if you have ever done any V&V of an SU2 feature not covered yet please consider **adding the data to the V&V repo, the results to the website, and creating a minimal regression test** for it. If you have never done any V&V, please consider reviving one of the existing ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507
https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507:739,Deployability,update,updated,739,"## V&V; Now we have a regression script dedicated to the V&V examples see #1538; I have added a high-lift case to the website ([here](https://github.com/su2code/su2code.github.io/pull/71), and [here](https://su2code.github.io/vandv/30p30n/)).; I think that to avoid the [issue of outdated files](https://github.com/su2code/VandV/pull/3) in V&V repo, the best strategy is to add only meshes and documentation to the V&V repo (without duplicating the website). Then anything needed to run the case should be put under regression (via the TestCases and SU2 repos as usual).; If the meshes are too large for GitHub, and are not publicly available elsewhere, we can use the SU2 Foundation Google drive. The config files can be forced to remain updated by running them in --dry_run mode in the V&V regressions. So I think the next steps would be:; - Revive the configs of the [other V&V cases](https://github.com/su2code/VandV) and put them under regression.; - Add V&V for other areas. So if you have ever done any V&V of an SU2 feature not covered yet please consider **adding the data to the V&V repo, the results to the website, and creating a minimal regression test** for it. If you have never done any V&V, please consider reviving one of the existing ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507
https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507:702,Modifiability,config,config,702,"## V&V; Now we have a regression script dedicated to the V&V examples see #1538; I have added a high-lift case to the website ([here](https://github.com/su2code/su2code.github.io/pull/71), and [here](https://su2code.github.io/vandv/30p30n/)).; I think that to avoid the [issue of outdated files](https://github.com/su2code/VandV/pull/3) in V&V repo, the best strategy is to add only meshes and documentation to the V&V repo (without duplicating the website). Then anything needed to run the case should be put under regression (via the TestCases and SU2 repos as usual).; If the meshes are too large for GitHub, and are not publicly available elsewhere, we can use the SU2 Foundation Google drive. The config files can be forced to remain updated by running them in --dry_run mode in the V&V regressions. So I think the next steps would be:; - Revive the configs of the [other V&V cases](https://github.com/su2code/VandV) and put them under regression.; - Add V&V for other areas. So if you have ever done any V&V of an SU2 feature not covered yet please consider **adding the data to the V&V repo, the results to the website, and creating a minimal regression test** for it. If you have never done any V&V, please consider reviving one of the existing ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507
https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507:855,Modifiability,config,configs,855,"## V&V; Now we have a regression script dedicated to the V&V examples see #1538; I have added a high-lift case to the website ([here](https://github.com/su2code/su2code.github.io/pull/71), and [here](https://su2code.github.io/vandv/30p30n/)).; I think that to avoid the [issue of outdated files](https://github.com/su2code/VandV/pull/3) in V&V repo, the best strategy is to add only meshes and documentation to the V&V repo (without duplicating the website). Then anything needed to run the case should be put under regression (via the TestCases and SU2 repos as usual).; If the meshes are too large for GitHub, and are not publicly available elsewhere, we can use the SU2 Foundation Google drive. The config files can be forced to remain updated by running them in --dry_run mode in the V&V regressions. So I think the next steps would be:; - Revive the configs of the [other V&V cases](https://github.com/su2code/VandV) and put them under regression.; - Add V&V for other areas. So if you have ever done any V&V of an SU2 feature not covered yet please consider **adding the data to the V&V repo, the results to the website, and creating a minimal regression test** for it. If you have never done any V&V, please consider reviving one of the existing ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507
https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507:260,Safety,avoid,avoid,260,"## V&V; Now we have a regression script dedicated to the V&V examples see #1538; I have added a high-lift case to the website ([here](https://github.com/su2code/su2code.github.io/pull/71), and [here](https://su2code.github.io/vandv/30p30n/)).; I think that to avoid the [issue of outdated files](https://github.com/su2code/VandV/pull/3) in V&V repo, the best strategy is to add only meshes and documentation to the V&V repo (without duplicating the website). Then anything needed to run the case should be put under regression (via the TestCases and SU2 repos as usual).; If the meshes are too large for GitHub, and are not publicly available elsewhere, we can use the SU2 Foundation Google drive. The config files can be forced to remain updated by running them in --dry_run mode in the V&V regressions. So I think the next steps would be:; - Revive the configs of the [other V&V cases](https://github.com/su2code/VandV) and put them under regression.; - Add V&V for other areas. So if you have ever done any V&V of an SU2 feature not covered yet please consider **adding the data to the V&V repo, the results to the website, and creating a minimal regression test** for it. If you have never done any V&V, please consider reviving one of the existing ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507
https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507:536,Testability,Test,TestCases,536,"## V&V; Now we have a regression script dedicated to the V&V examples see #1538; I have added a high-lift case to the website ([here](https://github.com/su2code/su2code.github.io/pull/71), and [here](https://su2code.github.io/vandv/30p30n/)).; I think that to avoid the [issue of outdated files](https://github.com/su2code/VandV/pull/3) in V&V repo, the best strategy is to add only meshes and documentation to the V&V repo (without duplicating the website). Then anything needed to run the case should be put under regression (via the TestCases and SU2 repos as usual).; If the meshes are too large for GitHub, and are not publicly available elsewhere, we can use the SU2 Foundation Google drive. The config files can be forced to remain updated by running them in --dry_run mode in the V&V regressions. So I think the next steps would be:; - Revive the configs of the [other V&V cases](https://github.com/su2code/VandV) and put them under regression.; - Add V&V for other areas. So if you have ever done any V&V of an SU2 feature not covered yet please consider **adding the data to the V&V repo, the results to the website, and creating a minimal regression test** for it. If you have never done any V&V, please consider reviving one of the existing ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507
https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507:1161,Testability,test,test,1161,"## V&V; Now we have a regression script dedicated to the V&V examples see #1538; I have added a high-lift case to the website ([here](https://github.com/su2code/su2code.github.io/pull/71), and [here](https://su2code.github.io/vandv/30p30n/)).; I think that to avoid the [issue of outdated files](https://github.com/su2code/VandV/pull/3) in V&V repo, the best strategy is to add only meshes and documentation to the V&V repo (without duplicating the website). Then anything needed to run the case should be put under regression (via the TestCases and SU2 repos as usual).; If the meshes are too large for GitHub, and are not publicly available elsewhere, we can use the SU2 Foundation Google drive. The config files can be forced to remain updated by running them in --dry_run mode in the V&V regressions. So I think the next steps would be:; - Revive the configs of the [other V&V cases](https://github.com/su2code/VandV) and put them under regression.; - Add V&V for other areas. So if you have ever done any V&V of an SU2 feature not covered yet please consider **adding the data to the V&V repo, the results to the website, and creating a minimal regression test** for it. If you have never done any V&V, please consider reviving one of the existing ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507
https://github.com/su2code/SU2/pull/1492#issuecomment-1012241237:153,Modifiability,variab,variables,153,"I checked and I could not find a place in the code where this option is used explicitly. Since all the drivers split between primary recording for state variables and secondary recording for geometry variables for efficiency. My own use case was for research I did, where I needed to record a tape w.r.t. to both. Since this is not ready to become a pull request any time soon, I do not really need this option. If you suggest I can create a commit to remove the enum option for simplicity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492#issuecomment-1012241237
https://github.com/su2code/SU2/pull/1492#issuecomment-1012241237:200,Modifiability,variab,variables,200,"I checked and I could not find a place in the code where this option is used explicitly. Since all the drivers split between primary recording for state variables and secondary recording for geometry variables for efficiency. My own use case was for research I did, where I needed to record a tape w.r.t. to both. Since this is not ready to become a pull request any time soon, I do not really need this option. If you suggest I can create a commit to remove the enum option for simplicity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492#issuecomment-1012241237
https://github.com/su2code/SU2/pull/1492#issuecomment-1012241237:479,Usability,simpl,simplicity,479,"I checked and I could not find a place in the code where this option is used explicitly. Since all the drivers split between primary recording for state variables and secondary recording for geometry variables for efficiency. My own use case was for research I did, where I needed to record a tape w.r.t. to both. Since this is not ready to become a pull request any time soon, I do not really need this option. If you suggest I can create a commit to remove the enum option for simplicity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492#issuecomment-1012241237
https://github.com/su2code/SU2/issues/1493#issuecomment-1013089978:459,Availability,avail,available,459,"In some parts of the code it looks like the intention was to allow both modes, see; COutput::SetHistoryFile_Header `if (requestedField == field.outputGroup || (requestedField == fieldIdentifier)){`. In principle you ""just"" need to apply that logic to every use of `requestedHistoryFields`. If would be more difficult to make the screen output know about groups, because it uses the names you give to lookup values directly, whereas the history loops over all available values and checks their group against all groups you give it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1493#issuecomment-1013089978
https://github.com/su2code/SU2/issues/1493#issuecomment-1013089978:242,Testability,log,logic,242,"In some parts of the code it looks like the intention was to allow both modes, see; COutput::SetHistoryFile_Header `if (requestedField == field.outputGroup || (requestedField == fieldIdentifier)){`. In principle you ""just"" need to apply that logic to every use of `requestedHistoryFields`. If would be more difficult to make the screen output know about groups, because it uses the names you give to lookup values directly, whereas the history loops over all available values and checks their group against all groups you give it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1493#issuecomment-1013089978
https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577:682,Integrability,wrap,wrap,682,"Hi Sun5k,; Thanks for tackling the Transition models. As far as I see, you are adopting the CScalarSolver-Base style just as is done for the Turbulence or SpeciesTransport solver (cf #1330 #1388 ) :+1: I think you can stay close to how things are handled in these solvers. The Turbulence solver has another class in the middle though: `CScalarSolver -> CTurbSolver -> CTurbSST/SASolver` I am not sure whether sth like this makes sense for transition models? (because I have no clue of Transition models). Otherwise the CSpeciesSolver is directly based on the CScalarSolver. Please limit this PR to 1 model only! So in this case just the LM model maybe. It is much easier for you to wrap this PR up with a limited scope instead of trying to do everything at once :) (and it is easier to review for everyone else) In case you then still want to tackle another one once LM is done :D then just open another PR :+1:; ; As unfinished Transition models (or models with a questionable state) are a bit of a companion of SU2 I would also ask you to provide a meaningful testcase with this PR that proves the usability of this feature. I personally like to think of a suitable case at the beginning of development, to adopt a bit a Test-Driven-Development approach but that is of course fully up to you. In case you did not know about the Developers meeting each Wednesday 4pm Berlin time, now you do. You are kindly invited to ask any questions, just show-and-tell to get some feedback etc. it is a very open round :). Happy coding, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577
https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577:1062,Testability,test,testcase,1062,"Hi Sun5k,; Thanks for tackling the Transition models. As far as I see, you are adopting the CScalarSolver-Base style just as is done for the Turbulence or SpeciesTransport solver (cf #1330 #1388 ) :+1: I think you can stay close to how things are handled in these solvers. The Turbulence solver has another class in the middle though: `CScalarSolver -> CTurbSolver -> CTurbSST/SASolver` I am not sure whether sth like this makes sense for transition models? (because I have no clue of Transition models). Otherwise the CSpeciesSolver is directly based on the CScalarSolver. Please limit this PR to 1 model only! So in this case just the LM model maybe. It is much easier for you to wrap this PR up with a limited scope instead of trying to do everything at once :) (and it is easier to review for everyone else) In case you then still want to tackle another one once LM is done :D then just open another PR :+1:; ; As unfinished Transition models (or models with a questionable state) are a bit of a companion of SU2 I would also ask you to provide a meaningful testcase with this PR that proves the usability of this feature. I personally like to think of a suitable case at the beginning of development, to adopt a bit a Test-Driven-Development approach but that is of course fully up to you. In case you did not know about the Developers meeting each Wednesday 4pm Berlin time, now you do. You are kindly invited to ask any questions, just show-and-tell to get some feedback etc. it is a very open round :). Happy coding, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577
https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577:1223,Testability,Test,Test-Driven-Development,1223,"Hi Sun5k,; Thanks for tackling the Transition models. As far as I see, you are adopting the CScalarSolver-Base style just as is done for the Turbulence or SpeciesTransport solver (cf #1330 #1388 ) :+1: I think you can stay close to how things are handled in these solvers. The Turbulence solver has another class in the middle though: `CScalarSolver -> CTurbSolver -> CTurbSST/SASolver` I am not sure whether sth like this makes sense for transition models? (because I have no clue of Transition models). Otherwise the CSpeciesSolver is directly based on the CScalarSolver. Please limit this PR to 1 model only! So in this case just the LM model maybe. It is much easier for you to wrap this PR up with a limited scope instead of trying to do everything at once :) (and it is easier to review for everyone else) In case you then still want to tackle another one once LM is done :D then just open another PR :+1:; ; As unfinished Transition models (or models with a questionable state) are a bit of a companion of SU2 I would also ask you to provide a meaningful testcase with this PR that proves the usability of this feature. I personally like to think of a suitable case at the beginning of development, to adopt a bit a Test-Driven-Development approach but that is of course fully up to you. In case you did not know about the Developers meeting each Wednesday 4pm Berlin time, now you do. You are kindly invited to ask any questions, just show-and-tell to get some feedback etc. it is a very open round :). Happy coding, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577
https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577:1100,Usability,usab,usability,1100,"Hi Sun5k,; Thanks for tackling the Transition models. As far as I see, you are adopting the CScalarSolver-Base style just as is done for the Turbulence or SpeciesTransport solver (cf #1330 #1388 ) :+1: I think you can stay close to how things are handled in these solvers. The Turbulence solver has another class in the middle though: `CScalarSolver -> CTurbSolver -> CTurbSST/SASolver` I am not sure whether sth like this makes sense for transition models? (because I have no clue of Transition models). Otherwise the CSpeciesSolver is directly based on the CScalarSolver. Please limit this PR to 1 model only! So in this case just the LM model maybe. It is much easier for you to wrap this PR up with a limited scope instead of trying to do everything at once :) (and it is easier to review for everyone else) In case you then still want to tackle another one once LM is done :D then just open another PR :+1:; ; As unfinished Transition models (or models with a questionable state) are a bit of a companion of SU2 I would also ask you to provide a meaningful testcase with this PR that proves the usability of this feature. I personally like to think of a suitable case at the beginning of development, to adopt a bit a Test-Driven-Development approach but that is of course fully up to you. In case you did not know about the Developers meeting each Wednesday 4pm Berlin time, now you do. You are kindly invited to ask any questions, just show-and-tell to get some feedback etc. it is a very open round :). Happy coding, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577
https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577:1469,Usability,feedback,feedback,1469,"Hi Sun5k,; Thanks for tackling the Transition models. As far as I see, you are adopting the CScalarSolver-Base style just as is done for the Turbulence or SpeciesTransport solver (cf #1330 #1388 ) :+1: I think you can stay close to how things are handled in these solvers. The Turbulence solver has another class in the middle though: `CScalarSolver -> CTurbSolver -> CTurbSST/SASolver` I am not sure whether sth like this makes sense for transition models? (because I have no clue of Transition models). Otherwise the CSpeciesSolver is directly based on the CScalarSolver. Please limit this PR to 1 model only! So in this case just the LM model maybe. It is much easier for you to wrap this PR up with a limited scope instead of trying to do everything at once :) (and it is easier to review for everyone else) In case you then still want to tackle another one once LM is done :D then just open another PR :+1:; ; As unfinished Transition models (or models with a questionable state) are a bit of a companion of SU2 I would also ask you to provide a meaningful testcase with this PR that proves the usability of this feature. I personally like to think of a suitable case at the beginning of development, to adopt a bit a Test-Driven-Development approach but that is of course fully up to you. In case you did not know about the Developers meeting each Wednesday 4pm Berlin time, now you do. You are kindly invited to ask any questions, just show-and-tell to get some feedback etc. it is a very open round :). Happy coding, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577
https://github.com/su2code/SU2/pull/1496#issuecomment-1016550498:293,Security,validat,validate,293,"Hey Sun5k! . I am a master student on the University of Twente, based in the Netherlands. I am also starting to work on the implementation of the Langtry and Menter model into the current version of SU2 for my master thesis (although I have not set-up my own branch yet). The goal would be to validate and hopefully work on some application to test and verify the results compared to other work done in literature and the latest AIAA transition modeling workshop (https://transitionmodeling.larc.nasa.gov/workshop_i/). . I would love to know what your plans are with this model and on what timeframe you are working. As we are both working on this topic, it might be beneficial to combine our efforts? If you would like to discuss this, you can send me an email at r.roos@student.utwente.nl. Kind regards,; Richard",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016550498
https://github.com/su2code/SU2/pull/1496#issuecomment-1016550498:344,Testability,test,test,344,"Hey Sun5k! . I am a master student on the University of Twente, based in the Netherlands. I am also starting to work on the implementation of the Langtry and Menter model into the current version of SU2 for my master thesis (although I have not set-up my own branch yet). The goal would be to validate and hopefully work on some application to test and verify the results compared to other work done in literature and the latest AIAA transition modeling workshop (https://transitionmodeling.larc.nasa.gov/workshop_i/). . I would love to know what your plans are with this model and on what timeframe you are working. As we are both working on this topic, it might be beneficial to combine our efforts? If you would like to discuss this, you can send me an email at r.roos@student.utwente.nl. Kind regards,; Richard",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016550498
https://github.com/su2code/SU2/pull/1496#issuecomment-1017587516:1309,Integrability,Message,Message,1309,"I'm at the beginning, so i have no really clear my path. Anyway a soon as; possible i will follow your instructions. Sorry for this difficulty, but to; me a su2 development group is something totally new and i have to clarify; some aspects with my PhD student and with my professor. Thanks for your help; Marco. Il giorno gio 20 gen 2022 alle ore 11:47 Nijso ***@***.***>; ha scritto:. > Hi! If you want to work together over github, you can also create a; > project here:; > https://github.com/su2code/SU2/projects?type=beta and define tasks and; > divide the work. It would be good if you can sort out what the overlap is; > and what the unique parts of your research will be.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1496#issuecomment-1017354022>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AXL7TQXSL55PQIEHSDCPT4LUW7R3TANCNFSM5MC56OYQ>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1017587516
https://github.com/su2code/SU2/pull/1496#issuecomment-1017587516:42,Usability,clear,clear,42,"I'm at the beginning, so i have no really clear my path. Anyway a soon as; possible i will follow your instructions. Sorry for this difficulty, but to; me a su2 development group is something totally new and i have to clarify; some aspects with my PhD student and with my professor. Thanks for your help; Marco. Il giorno gio 20 gen 2022 alle ore 11:47 Nijso ***@***.***>; ha scritto:. > Hi! If you want to work together over github, you can also create a; > project here:; > https://github.com/su2code/SU2/projects?type=beta and define tasks and; > divide the work. It would be good if you can sort out what the overlap is; > and what the unique parts of your research will be.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1496#issuecomment-1017354022>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AXL7TQXSL55PQIEHSDCPT4LUW7R3TANCNFSM5MC56OYQ>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1017587516
https://github.com/su2code/SU2/pull/1496#issuecomment-1083251414:597,Testability,test,tests,597,"Hey @sun5k, I fell in the same trap I am afraid, as I should have replied sooner... As for the work: I started to work on a private version so that I could experiment with the code and Github, because I was not experienced with both. In there I, too, based the implementation of the LM version on the old version of the LM transition of SU2 6.3.0. My original plan was to work on my private version until I understood enough to open a Pull request and continue from there, but you were just a little faster :). So that is why I just continued with my own version. I am now at the point of running tests to compare with the original flatplate simulations. I am getting some promising results, but am still checking whether they are correct. What is your status? Are you still working on this pr? And, if I may ask, what is your main goal with the code? Do you want to use the transition model or are you more focused on the implementation and merging with the main SU2 branch? And lastly, would it be beneficial for us to combine our time, code and results to work on this pr together? :). Thanks in advance!; Richard",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1083251414
https://github.com/su2code/SU2/pull/1500#issuecomment-1015770968:18,Testability,test,tested,18,The branch can be tested by converting an existing testcase cgns file to hdf5.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1015770968
https://github.com/su2code/SU2/pull/1500#issuecomment-1015770968:51,Testability,test,testcase,51,The branch can be tested by converting an existing testcase cgns file to hdf5.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1015770968
https://github.com/su2code/SU2/pull/1500#issuecomment-1016599440:78,Deployability,update,update,78,It seems that LGTM analysis is using a very old version of meson. Can someone update it ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016599440
https://github.com/su2code/SU2/pull/1500#issuecomment-1016641603:15,Deployability,update,update,15,"Thanks for the update @MicK7, this only affects code in externals right? if so there is no need to worry about LGTM, I think it was using the old build system.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016641603
https://github.com/su2code/SU2/pull/1500#issuecomment-1016692673:257,Modifiability,maintainab,maintainability,257,"@pcarruscag yes all the modification are in external. It is just that the LGTM C++ if failing because it is too old and can't cope with cmake syntax. Since I mainly copy pasted the source of hdf5 without modification, I don't really want to modify them for maintainability.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016692673
https://github.com/su2code/SU2/pull/1500#issuecomment-1016693942:14,Deployability,update,update,14,My request to update the meson currently used by LGTM C/C++ is to not create issues for other PR is this one goes in.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016693942
https://github.com/su2code/SU2/pull/1500#issuecomment-1016783113:82,Testability,test,test,82,Does this support a type of CGNS that we didn't before? If so can you add a small test?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016783113
https://github.com/su2code/SU2/pull/1500#issuecomment-1016864662:65,Security,validat,validation,65,@pcarruscag I can change one of the existing testcases to have a validation,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016864662
https://github.com/su2code/SU2/pull/1500#issuecomment-1016864662:45,Testability,test,testcases,45,@pcarruscag I can change one of the existing testcases to have a validation,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016864662
https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584:49,Availability,error,error,49,"I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":. ```; Configuring H5pubconf.h using configuration. externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; ```. I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; LMK if you need the full configure error",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584
https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584:171,Availability,ERROR,ERROR,171,"I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":. ```; Configuring H5pubconf.h using configuration. externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; ```. I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; LMK if you need the full configure error",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584
https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584:417,Availability,error,error,417,"I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":. ```; Configuring H5pubconf.h using configuration. externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; ```. I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; LMK if you need the full configure error",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584
https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584:117,Deployability,configurat,configuration,117,"I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":. ```; Configuring H5pubconf.h using configuration. externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; ```. I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; LMK if you need the full configure error",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584
https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584:87,Modifiability,Config,Configuring,87,"I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":. ```; Configuring H5pubconf.h using configuration. externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; ```. I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; LMK if you need the full configure error",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584
https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584:117,Modifiability,config,configuration,117,"I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":. ```; Configuring H5pubconf.h using configuration. externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; ```. I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; LMK if you need the full configure error",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584
https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584:407,Modifiability,config,configure,407,"I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":. ```; Configuring H5pubconf.h using configuration. externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; ```. I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; LMK if you need the full configure error",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1018249584
https://github.com/su2code/SU2/issues/1507#issuecomment-1018746746:49,Deployability,upgrade,upgrade,49,Which meson version is used ?; Is it possible to upgrade it ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507#issuecomment-1018746746
https://github.com/su2code/SU2/issues/1507#issuecomment-1018767201:117,Availability,error,error,117,"I think that 5e9b709ad0b34d8ac920dff057a5361080c0889b would be enough for the formatter of ""cmake@"" that leads to an error.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507#issuecomment-1018767201
https://github.com/su2code/SU2/pull/1508#issuecomment-1018777822:143,Availability,ERROR,ERROR,143,:+1: Ok @MicK7 PR already open.; Different cross compile issue now https://github.com/su2code/SU2/runs/4900536101?check_suite_focus=true; ```; ERROR: ; Cannot use target H5detect as a generator because it is built for the; host machine and no exe wrapper is defined or needs_exe_wrapper is; true. You might want to set `native: true` instead to build it for; the build machine.; ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508#issuecomment-1018777822
https://github.com/su2code/SU2/pull/1508#issuecomment-1018777822:247,Integrability,wrap,wrapper,247,:+1: Ok @MicK7 PR already open.; Different cross compile issue now https://github.com/su2code/SU2/runs/4900536101?check_suite_focus=true; ```; ERROR: ; Cannot use target H5detect as a generator because it is built for the; host machine and no exe wrapper is defined or needs_exe_wrapper is; true. You might want to set `native: true` instead to build it for; the build machine.; ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508#issuecomment-1018777822
https://github.com/su2code/SU2/issues/1519#issuecomment-1019281442:243,Deployability,update,updated,243,"Hi the same issue is reported here: https://www.cfd-online.com/Forums/su2/240690-stable-solution-version-7-0-0-diverging-7-2-0-a.html; I think it is because of a bug we fixed that could cause the solution in some places to either freeze or be updated very slowly, seeing that the residuals in your 7.0.6 example don't drop, this is likely to be happening.; If you share the mesh you are using I can try suggesting better settings, to get to high CFL number you usually need CFL adaptation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019281442
https://github.com/su2code/SU2/issues/1519#issuecomment-1019281442:478,Energy Efficiency,adapt,adaptation,478,"Hi the same issue is reported here: https://www.cfd-online.com/Forums/su2/240690-stable-solution-version-7-0-0-diverging-7-2-0-a.html; I think it is because of a bug we fixed that could cause the solution in some places to either freeze or be updated very slowly, seeing that the residuals in your 7.0.6 example don't drop, this is likely to be happening.; If you share the mesh you are using I can try suggesting better settings, to get to high CFL number you usually need CFL adaptation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019281442
https://github.com/su2code/SU2/issues/1519#issuecomment-1019281442:478,Modifiability,adapt,adaptation,478,"Hi the same issue is reported here: https://www.cfd-online.com/Forums/su2/240690-stable-solution-version-7-0-0-diverging-7-2-0-a.html; I think it is because of a bug we fixed that could cause the solution in some places to either freeze or be updated very slowly, seeing that the residuals in your 7.0.6 example don't drop, this is likely to be happening.; If you share the mesh you are using I can try suggesting better settings, to get to high CFL number you usually need CFL adaptation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019281442
https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706:14,Energy Efficiency,adapt,adaptive,14,"I tried using adaptive CFL as you suggested for v7.2.1 with settings below;. CFL_ADAPT_PARAM= ( 0.1, 2.0, 1.0, 1e10, 0.001 ). Even though it doesn't diverge it still needs more iterations to converge compared to v7.0.6 and result is pretty much the same with constant CFL 250. Also, with adaptive CFL residuals are changing but they are oscillating in an interval. . What I don't really understand is why using same settings would yield less accurate results in a newer version. Since these settings are working with v7.0.6 and are very common I don't think I need to alter them for a newer version to give the same results. Here is the code output for v7.2.1 with adaptive cfl enabled. [codeOutput_v721_CFLadapt.txt](https://github.com/su2code/SU2/files/7919208/codeOutput_v721_CFLadapt.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706
https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706:288,Energy Efficiency,adapt,adaptive,288,"I tried using adaptive CFL as you suggested for v7.2.1 with settings below;. CFL_ADAPT_PARAM= ( 0.1, 2.0, 1.0, 1e10, 0.001 ). Even though it doesn't diverge it still needs more iterations to converge compared to v7.0.6 and result is pretty much the same with constant CFL 250. Also, with adaptive CFL residuals are changing but they are oscillating in an interval. . What I don't really understand is why using same settings would yield less accurate results in a newer version. Since these settings are working with v7.0.6 and are very common I don't think I need to alter them for a newer version to give the same results. Here is the code output for v7.2.1 with adaptive cfl enabled. [codeOutput_v721_CFLadapt.txt](https://github.com/su2code/SU2/files/7919208/codeOutput_v721_CFLadapt.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706
https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706:665,Energy Efficiency,adapt,adaptive,665,"I tried using adaptive CFL as you suggested for v7.2.1 with settings below;. CFL_ADAPT_PARAM= ( 0.1, 2.0, 1.0, 1e10, 0.001 ). Even though it doesn't diverge it still needs more iterations to converge compared to v7.0.6 and result is pretty much the same with constant CFL 250. Also, with adaptive CFL residuals are changing but they are oscillating in an interval. . What I don't really understand is why using same settings would yield less accurate results in a newer version. Since these settings are working with v7.0.6 and are very common I don't think I need to alter them for a newer version to give the same results. Here is the code output for v7.2.1 with adaptive cfl enabled. [codeOutput_v721_CFLadapt.txt](https://github.com/su2code/SU2/files/7919208/codeOutput_v721_CFLadapt.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706
https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706:14,Modifiability,adapt,adaptive,14,"I tried using adaptive CFL as you suggested for v7.2.1 with settings below;. CFL_ADAPT_PARAM= ( 0.1, 2.0, 1.0, 1e10, 0.001 ). Even though it doesn't diverge it still needs more iterations to converge compared to v7.0.6 and result is pretty much the same with constant CFL 250. Also, with adaptive CFL residuals are changing but they are oscillating in an interval. . What I don't really understand is why using same settings would yield less accurate results in a newer version. Since these settings are working with v7.0.6 and are very common I don't think I need to alter them for a newer version to give the same results. Here is the code output for v7.2.1 with adaptive cfl enabled. [codeOutput_v721_CFLadapt.txt](https://github.com/su2code/SU2/files/7919208/codeOutput_v721_CFLadapt.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706
https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706:288,Modifiability,adapt,adaptive,288,"I tried using adaptive CFL as you suggested for v7.2.1 with settings below;. CFL_ADAPT_PARAM= ( 0.1, 2.0, 1.0, 1e10, 0.001 ). Even though it doesn't diverge it still needs more iterations to converge compared to v7.0.6 and result is pretty much the same with constant CFL 250. Also, with adaptive CFL residuals are changing but they are oscillating in an interval. . What I don't really understand is why using same settings would yield less accurate results in a newer version. Since these settings are working with v7.0.6 and are very common I don't think I need to alter them for a newer version to give the same results. Here is the code output for v7.2.1 with adaptive cfl enabled. [codeOutput_v721_CFLadapt.txt](https://github.com/su2code/SU2/files/7919208/codeOutput_v721_CFLadapt.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706
https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706:665,Modifiability,adapt,adaptive,665,"I tried using adaptive CFL as you suggested for v7.2.1 with settings below;. CFL_ADAPT_PARAM= ( 0.1, 2.0, 1.0, 1e10, 0.001 ). Even though it doesn't diverge it still needs more iterations to converge compared to v7.0.6 and result is pretty much the same with constant CFL 250. Also, with adaptive CFL residuals are changing but they are oscillating in an interval. . What I don't really understand is why using same settings would yield less accurate results in a newer version. Since these settings are working with v7.0.6 and are very common I don't think I need to alter them for a newer version to give the same results. Here is the code output for v7.2.1 with adaptive cfl enabled. [codeOutput_v721_CFLadapt.txt](https://github.com/su2code/SU2/files/7919208/codeOutput_v721_CFLadapt.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706
https://github.com/su2code/SU2/issues/1519#issuecomment-1019359579:54,Usability,guid,guidance,54,If you share the mesh I should be able to give better guidance.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019359579
https://github.com/su2code/SU2/pull/1521#issuecomment-1019304926:364,Deployability,release,released,364,This pull request **introduces 3 alerts** and **fixes 45** when merging f8da2932d68cff663ef7446840df077a13470bcd into 5655d91d7da192ad0b2a231f9ab5334c2235c10a - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-0b2b99a66131b6a046b070a86f69f7ab73916e5c). **new alerts:**. * 2 for Multiplication result converted to larger type; * 1 for Resource not released in destructor. **fixed alerts:**. * 25 for Resource not released in destructor; * 20 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1521#issuecomment-1019304926
https://github.com/su2code/SU2/pull/1521#issuecomment-1019304926:429,Deployability,release,released,429,This pull request **introduces 3 alerts** and **fixes 45** when merging f8da2932d68cff663ef7446840df077a13470bcd into 5655d91d7da192ad0b2a231f9ab5334c2235c10a - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-0b2b99a66131b6a046b070a86f69f7ab73916e5c). **new alerts:**. * 2 for Multiplication result converted to larger type; * 1 for Resource not released in destructor. **fixed alerts:**. * 25 for Resource not released in destructor; * 20 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1521#issuecomment-1019304926
https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747:304,Deployability,configurat,configuration,304,"After a lot of configuring and reconfiguring, it turns out the above issue occurs when the system's meson is used instead of the meson.py that ships with SU2. However, I'm not sure this is correct behavior. Shouldn't the choice of the meson executable script be irrelevant? In other words, shouldn't the configuration be dependent on meson.build and not on meson.py? Using system's installed meson should produce the same result as using the meson.py that ships with SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747
https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747:382,Deployability,install,installed,382,"After a lot of configuring and reconfiguring, it turns out the above issue occurs when the system's meson is used instead of the meson.py that ships with SU2. However, I'm not sure this is correct behavior. Shouldn't the choice of the meson executable script be irrelevant? In other words, shouldn't the configuration be dependent on meson.build and not on meson.py? Using system's installed meson should produce the same result as using the meson.py that ships with SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747
https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747:321,Integrability,depend,dependent,321,"After a lot of configuring and reconfiguring, it turns out the above issue occurs when the system's meson is used instead of the meson.py that ships with SU2. However, I'm not sure this is correct behavior. Shouldn't the choice of the meson executable script be irrelevant? In other words, shouldn't the configuration be dependent on meson.build and not on meson.py? Using system's installed meson should produce the same result as using the meson.py that ships with SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747
https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747:15,Modifiability,config,configuring,15,"After a lot of configuring and reconfiguring, it turns out the above issue occurs when the system's meson is used instead of the meson.py that ships with SU2. However, I'm not sure this is correct behavior. Shouldn't the choice of the meson executable script be irrelevant? In other words, shouldn't the configuration be dependent on meson.build and not on meson.py? Using system's installed meson should produce the same result as using the meson.py that ships with SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747
https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747:304,Modifiability,config,configuration,304,"After a lot of configuring and reconfiguring, it turns out the above issue occurs when the system's meson is used instead of the meson.py that ships with SU2. However, I'm not sure this is correct behavior. Shouldn't the choice of the meson executable script be irrelevant? In other words, shouldn't the configuration be dependent on meson.build and not on meson.py? Using system's installed meson should produce the same result as using the meson.py that ships with SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747
https://github.com/su2code/SU2/issues/1528#issuecomment-1023012372:145,Modifiability,config,configure,145,"It's used to implement #1478, and it was merged into develop.; Are those mesons the same version? Because the meson from Ubuntu 18.04 can't even configure SU2, let alone build.; Our build instructions state that you should use the versions shipped with the code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528#issuecomment-1023012372
https://github.com/su2code/SU2/pull/1530#issuecomment-1025887685:278,Deployability,update,update,278,Thanks already @pcarruscag for the quick suggestions :+1: Let me know if there are more :). 2 linked PR's go with this:; 1. The testases PR needs to be merged before this to make sure the reg tests works (Edit: Done and reg tests work (except hybrid_par_AD...)); 2. The website update (...has more time ;). Otherwise I am happy so far with this PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530#issuecomment-1025887685
https://github.com/su2code/SU2/pull/1530#issuecomment-1025887685:128,Testability,test,testases,128,Thanks already @pcarruscag for the quick suggestions :+1: Let me know if there are more :). 2 linked PR's go with this:; 1. The testases PR needs to be merged before this to make sure the reg tests works (Edit: Done and reg tests work (except hybrid_par_AD...)); 2. The website update (...has more time ;). Otherwise I am happy so far with this PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530#issuecomment-1025887685
https://github.com/su2code/SU2/pull/1530#issuecomment-1025887685:192,Testability,test,tests,192,Thanks already @pcarruscag for the quick suggestions :+1: Let me know if there are more :). 2 linked PR's go with this:; 1. The testases PR needs to be merged before this to make sure the reg tests works (Edit: Done and reg tests work (except hybrid_par_AD...)); 2. The website update (...has more time ;). Otherwise I am happy so far with this PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530#issuecomment-1025887685
https://github.com/su2code/SU2/pull/1530#issuecomment-1025887685:224,Testability,test,tests,224,Thanks already @pcarruscag for the quick suggestions :+1: Let me know if there are more :). 2 linked PR's go with this:; 1. The testases PR needs to be merged before this to make sure the reg tests works (Edit: Done and reg tests work (except hybrid_par_AD...)); 2. The website update (...has more time ;). Otherwise I am happy so far with this PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530#issuecomment-1025887685
https://github.com/su2code/SU2/pull/1532#issuecomment-1027952018:50,Testability,test,tested,50,"Yes, it is an issue on the Elwetritsch cluster. I tested this and the solution works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532#issuecomment-1027952018
https://github.com/su2code/SU2/pull/1532#issuecomment-1027966091:89,Testability,Test,TestCases,89,"Don't mind the failing parallel_regression.py, that is due to https://github.com/su2code/TestCases/pull/91 . The correct residuals will be pushed with https://github.com/su2code/SU2/pull/1530. It is the 3D streamwise periodic case where I changed a wrong NDIME in the mesh. But I guess merging is blocked as parallel_regression.py is required :grimacing:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532#issuecomment-1027966091
https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530:460,Modifiability,variab,variable,460,"> The fixed-Cl mode is not active during adjoints, the AOA is just taken from the metadata. I.e. you would propose to try to disable the delta-pressure udpdate during the adjoint for prescribed massflow? In my understanding that would result in an inconsistent gradient -> which might work good enough for optimizations but in a gradient validation I would expect significant deviations. > If something is determined iteratively, then I think it is a solution variable, [...]. So it is settled then -> I will try to give pressure-drop the same treatment as regular solution variables as mentioned in point 2. of the PR description.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530
https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530:574,Modifiability,variab,variables,574,"> The fixed-Cl mode is not active during adjoints, the AOA is just taken from the metadata. I.e. you would propose to try to disable the delta-pressure udpdate during the adjoint for prescribed massflow? In my understanding that would result in an inconsistent gradient -> which might work good enough for optimizations but in a gradient validation I would expect significant deviations. > If something is determined iteratively, then I think it is a solution variable, [...]. So it is settled then -> I will try to give pressure-drop the same treatment as regular solution variables as mentioned in point 2. of the PR description.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530
https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530:306,Performance,optimiz,optimizations,306,"> The fixed-Cl mode is not active during adjoints, the AOA is just taken from the metadata. I.e. you would propose to try to disable the delta-pressure udpdate during the adjoint for prescribed massflow? In my understanding that would result in an inconsistent gradient -> which might work good enough for optimizations but in a gradient validation I would expect significant deviations. > If something is determined iteratively, then I think it is a solution variable, [...]. So it is settled then -> I will try to give pressure-drop the same treatment as regular solution variables as mentioned in point 2. of the PR description.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530
https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530:338,Security,validat,validation,338,"> The fixed-Cl mode is not active during adjoints, the AOA is just taken from the metadata. I.e. you would propose to try to disable the delta-pressure udpdate during the adjoint for prescribed massflow? In my understanding that would result in an inconsistent gradient -> which might work good enough for optimizations but in a gradient validation I would expect significant deviations. > If something is determined iteratively, then I think it is a solution variable, [...]. So it is settled then -> I will try to give pressure-drop the same treatment as regular solution variables as mentioned in point 2. of the PR description.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530
https://github.com/su2code/SU2/pull/1536#issuecomment-1030102871:429,Security,validat,validation,429,"> In theory mass flow outlets and your periodic mass flow fall in the same category of fixed-Cl. I thought about that as well. If I get the streamwise periodic massflow to work that should be equivalent for massflow outlets. After all, quite a few ideas were taken from that implementation. Maybe a question to @economon in that regard (I surely asked that already but cannot remember :brain: :hammer: ): Did you make a gradient validation for massflow-outlets back in the day? If yes, do you remember whether that went well, or did you see some imperfection that wasn't there for pressure-outlets?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030102871
https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842:551,Integrability,depend,depends,551,"Yes it is inconsistent that's why it would need validation, the worst-case scenario is when your design variable is the thing the primal solver is manipulating to implement the fixed mode.; For example I'm pitching the wing (geometric AOA let's call it) the adjoint gives me a value for dCL / dalpha, but in practice this value is 0 because the primal solver does not allow the CL to change.; But doing the above would be dumb right, the validation question is what happens to the derivatives of other outputs? Is dCD / dalpha correct? I imagine this depends on the relation between CD and CL in this case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842
https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842:104,Modifiability,variab,variable,104,"Yes it is inconsistent that's why it would need validation, the worst-case scenario is when your design variable is the thing the primal solver is manipulating to implement the fixed mode.; For example I'm pitching the wing (geometric AOA let's call it) the adjoint gives me a value for dCL / dalpha, but in practice this value is 0 because the primal solver does not allow the CL to change.; But doing the above would be dumb right, the validation question is what happens to the derivatives of other outputs? Is dCD / dalpha correct? I imagine this depends on the relation between CD and CL in this case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842
https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842:48,Security,validat,validation,48,"Yes it is inconsistent that's why it would need validation, the worst-case scenario is when your design variable is the thing the primal solver is manipulating to implement the fixed mode.; For example I'm pitching the wing (geometric AOA let's call it) the adjoint gives me a value for dCL / dalpha, but in practice this value is 0 because the primal solver does not allow the CL to change.; But doing the above would be dumb right, the validation question is what happens to the derivatives of other outputs? Is dCD / dalpha correct? I imagine this depends on the relation between CD and CL in this case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842
https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842:438,Security,validat,validation,438,"Yes it is inconsistent that's why it would need validation, the worst-case scenario is when your design variable is the thing the primal solver is manipulating to implement the fixed mode.; For example I'm pitching the wing (geometric AOA let's call it) the adjoint gives me a value for dCL / dalpha, but in practice this value is 0 because the primal solver does not allow the CL to change.; But doing the above would be dumb right, the validation question is what happens to the derivatives of other outputs? Is dCD / dalpha correct? I imagine this depends on the relation between CD and CL in this case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842
https://github.com/su2code/SU2/pull/1536#issuecomment-1030109658:21,Testability,test,tested,21,This can probably be tested with a dummy fixed point iteration...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030109658
https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657:406,Deployability,UPDATE,UPDATE,406,With commit [1836f11](https://github.com/su2code/SU2/pull/1536/commits/1836f111c0759eb50946ba6b68ac281ef4b1b717) the gradients (for massflow prescribed in the primal) can now be validated really well (tested for AvgTemp and PRESSURE_DROP OF's). . BUT only for serial execution ... for multiple processes the adjoint diverges after a few iterations. I need to give that parallel treatment another thought.; UPDATE: With [ce164a2](https://github.com/su2code/SU2/pull/1536/commits/ce164a232d6c0f845784f37e45336f7276746d61) also the parallel execution works fine. Please read my explanation attempt in the commit message (in case you are interested) and let me know what you think,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657
https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657:609,Integrability,message,message,609,With commit [1836f11](https://github.com/su2code/SU2/pull/1536/commits/1836f111c0759eb50946ba6b68ac281ef4b1b717) the gradients (for massflow prescribed in the primal) can now be validated really well (tested for AvgTemp and PRESSURE_DROP OF's). . BUT only for serial execution ... for multiple processes the adjoint diverges after a few iterations. I need to give that parallel treatment another thought.; UPDATE: With [ce164a2](https://github.com/su2code/SU2/pull/1536/commits/ce164a232d6c0f845784f37e45336f7276746d61) also the parallel execution works fine. Please read my explanation attempt in the commit message (in case you are interested) and let me know what you think,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657
https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657:178,Security,validat,validated,178,With commit [1836f11](https://github.com/su2code/SU2/pull/1536/commits/1836f111c0759eb50946ba6b68ac281ef4b1b717) the gradients (for massflow prescribed in the primal) can now be validated really well (tested for AvgTemp and PRESSURE_DROP OF's). . BUT only for serial execution ... for multiple processes the adjoint diverges after a few iterations. I need to give that parallel treatment another thought.; UPDATE: With [ce164a2](https://github.com/su2code/SU2/pull/1536/commits/ce164a232d6c0f845784f37e45336f7276746d61) also the parallel execution works fine. Please read my explanation attempt in the commit message (in case you are interested) and let me know what you think,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657
https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657:201,Testability,test,tested,201,With commit [1836f11](https://github.com/su2code/SU2/pull/1536/commits/1836f111c0759eb50946ba6b68ac281ef4b1b717) the gradients (for massflow prescribed in the primal) can now be validated really well (tested for AvgTemp and PRESSURE_DROP OF's). . BUT only for serial execution ... for multiple processes the adjoint diverges after a few iterations. I need to give that parallel treatment another thought.; UPDATE: With [ce164a2](https://github.com/su2code/SU2/pull/1536/commits/ce164a232d6c0f845784f37e45336f7276746d61) also the parallel execution works fine. Please read my explanation attempt in the commit message (in case you are interested) and let me know what you think,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657
https://github.com/su2code/SU2/pull/1536#issuecomment-1031698826:218,Security,validat,validated,218,"So now that the Fluid-only version is reporting correct gradients for prescribed massflow due to the introduced adjoint equation for pressure drop -> the next problem seems to arrive: As of now I did not manage to get validated gradients for a CHT setup. I wonder whether sth additional is necessary there. But as the changes were introduced in the CDiscAdjSolver and CDiscFluidIteration ,always with using proper conditional to assure that the respective code is only excecuted when really needed, I am not sure if the mistake is not somewhere else. Why cant shit just work :disappointed: . btw: for prescribed pressure drop I get nice validated gradients for avgTemp, Drag, massflow",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1031698826
https://github.com/su2code/SU2/pull/1536#issuecomment-1031698826:637,Security,validat,validated,637,"So now that the Fluid-only version is reporting correct gradients for prescribed massflow due to the introduced adjoint equation for pressure drop -> the next problem seems to arrive: As of now I did not manage to get validated gradients for a CHT setup. I wonder whether sth additional is necessary there. But as the changes were introduced in the CDiscAdjSolver and CDiscFluidIteration ,always with using proper conditional to assure that the respective code is only excecuted when really needed, I am not sure if the mistake is not somewhere else. Why cant shit just work :disappointed: . btw: for prescribed pressure drop I get nice validated gradients for avgTemp, Drag, massflow",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1031698826
https://github.com/su2code/SU2/pull/1536#issuecomment-1032360593:0,Deployability,Update,Update,0,"Update/Solution: [d42692f](https://github.com/su2code/SU2/pull/1536/commits/d42692ff23874d84be2c735c3d9b678f77cb1155) and [44bc57b](https://github.com/su2code/SU2/pull/1536/commits/44bc57b8fa4a799dea3a0b84b0ba142cdae78a96) add the Intermediate storage of the adjoint solution and the storage for the external(OF) contribution to the pressure drop adjoint which solves the issue described in this post :blush: . So for CHT the situation is this:. For prescribed massflow I do get a good gradient agreement (DA vs FD). Below a picture with avgTemp and massflow OF; ![image](https://user-images.githubusercontent.com/31306376/152950660-a44bc925-22df-4195-b82b-1704c3f8b258.png). But if I switch to prescribed massflow and look at the avgTemp and pressureDrop OF then the gradient is again bad; ![image](https://user-images.githubusercontent.com/31306376/152951575-2df956a8-1c20-43e9-a68d-a19199025656.png). Here an comparison of sensitivities (wrt to mdot and dp OF (top/bottom)) for massflow and pressure drop precsribed flows (red/orange). The expectation is, that for massflow prescription, the sensitivity wrt to the massflow OF would be zero ... but we see that the sensitivities are very similar to the pressure-drop prescribed flow, so the hypothesis now is, for multizone the algorithm for some reason does not incorporate the pressure-drop adjoint which works like a charm for singlezone ; ![image](https://user-images.githubusercontent.com/31306376/152971870-9c37081b-0e5a-45b7-b320-04a10aafd293.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1032360593
https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456:352,Integrability,rout,routines,352,"Now I am happy with the results of the code but the question now is: How to code this up nicely!; This concept of an additional iterated variable next to the solution variable is ""new"" to SU2.; 1. Add the Adjoint pressure-drop variables always to the existing arrays (`Solution`, `External`, `AD_InputIndex`, etc.) which would make for ugly allocation routines and one would have to mess with `nPoint` as one would prob extend the containers by one element. So I consider this direction to be a bit too intrusive as this concept is not needed for most applications anyway.; 2. Add an `Extended` part to all relevant copide methods and variables and keep that general for the different applications",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456
https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456:137,Modifiability,variab,variable,137,"Now I am happy with the results of the code but the question now is: How to code this up nicely!; This concept of an additional iterated variable next to the solution variable is ""new"" to SU2.; 1. Add the Adjoint pressure-drop variables always to the existing arrays (`Solution`, `External`, `AD_InputIndex`, etc.) which would make for ugly allocation routines and one would have to mess with `nPoint` as one would prob extend the containers by one element. So I consider this direction to be a bit too intrusive as this concept is not needed for most applications anyway.; 2. Add an `Extended` part to all relevant copide methods and variables and keep that general for the different applications",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456
https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456:167,Modifiability,variab,variable,167,"Now I am happy with the results of the code but the question now is: How to code this up nicely!; This concept of an additional iterated variable next to the solution variable is ""new"" to SU2.; 1. Add the Adjoint pressure-drop variables always to the existing arrays (`Solution`, `External`, `AD_InputIndex`, etc.) which would make for ugly allocation routines and one would have to mess with `nPoint` as one would prob extend the containers by one element. So I consider this direction to be a bit too intrusive as this concept is not needed for most applications anyway.; 2. Add an `Extended` part to all relevant copide methods and variables and keep that general for the different applications",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456
https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456:227,Modifiability,variab,variables,227,"Now I am happy with the results of the code but the question now is: How to code this up nicely!; This concept of an additional iterated variable next to the solution variable is ""new"" to SU2.; 1. Add the Adjoint pressure-drop variables always to the existing arrays (`Solution`, `External`, `AD_InputIndex`, etc.) which would make for ugly allocation routines and one would have to mess with `nPoint` as one would prob extend the containers by one element. So I consider this direction to be a bit too intrusive as this concept is not needed for most applications anyway.; 2. Add an `Extended` part to all relevant copide methods and variables and keep that general for the different applications",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456
https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456:420,Modifiability,extend,extend,420,"Now I am happy with the results of the code but the question now is: How to code this up nicely!; This concept of an additional iterated variable next to the solution variable is ""new"" to SU2.; 1. Add the Adjoint pressure-drop variables always to the existing arrays (`Solution`, `External`, `AD_InputIndex`, etc.) which would make for ugly allocation routines and one would have to mess with `nPoint` as one would prob extend the containers by one element. So I consider this direction to be a bit too intrusive as this concept is not needed for most applications anyway.; 2. Add an `Extended` part to all relevant copide methods and variables and keep that general for the different applications",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456
https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456:585,Modifiability,Extend,Extended,585,"Now I am happy with the results of the code but the question now is: How to code this up nicely!; This concept of an additional iterated variable next to the solution variable is ""new"" to SU2.; 1. Add the Adjoint pressure-drop variables always to the existing arrays (`Solution`, `External`, `AD_InputIndex`, etc.) which would make for ugly allocation routines and one would have to mess with `nPoint` as one would prob extend the containers by one element. So I consider this direction to be a bit too intrusive as this concept is not needed for most applications anyway.; 2. Add an `Extended` part to all relevant copide methods and variables and keep that general for the different applications",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456
https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456:635,Modifiability,variab,variables,635,"Now I am happy with the results of the code but the question now is: How to code this up nicely!; This concept of an additional iterated variable next to the solution variable is ""new"" to SU2.; 1. Add the Adjoint pressure-drop variables always to the existing arrays (`Solution`, `External`, `AD_InputIndex`, etc.) which would make for ugly allocation routines and one would have to mess with `nPoint` as one would prob extend the containers by one element. So I consider this direction to be a bit too intrusive as this concept is not needed for most applications anyway.; 2. Add an `Extended` part to all relevant copide methods and variables and keep that general for the different applications",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456
https://github.com/su2code/SU2/pull/1536#issuecomment-1050172065:159,Modifiability,variab,variable,159,"> Looks quite simple to me now, what do you think?. I fully agree. The CVariable footprint is much smaller and no more nasty address handling. (Adding another variable in another solver requires a bit more code though and a little understanding of what is going on than the ""Address""-version, but on the other hand this explicit handling of each primal-solver creates a good separation :+1: )",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1050172065
https://github.com/su2code/SU2/pull/1536#issuecomment-1050172065:14,Usability,simpl,simple,14,"> Looks quite simple to me now, what do you think?. I fully agree. The CVariable footprint is much smaller and no more nasty address handling. (Adding another variable in another solver requires a bit more code though and a little understanding of what is going on than the ""Address""-version, but on the other hand this explicit handling of each primal-solver creates a good separation :+1: )",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1050172065
https://github.com/su2code/SU2/pull/1536#issuecomment-1051838195:195,Testability,test,tests,195,"Thanks for the commit tackling the hardcoded allocation. And of course thanks for all the other suggestions and comments, made the code a lot better :bouquet: very much appreciated. Once the reg tests pass I'll merge this in :+1:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1051838195
https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289:600,Deployability,configurat,configuration,600,"Hello!; Thanks for your help. Writing the line:; OUTPUT_FILES= RESTART_ASCII. enabled the simulation to run past 250 iterations and after 4500 or so iterations, I was able to yield the correct values for Cl and Cd.; However, an issue still persists. The file restart_flow.csv doesn't seem to appear in the directory. I have amended the config file to have the lines:. OUTPUT_WRT_FREQ = 10; OUTPUT_FILES=(RESTART_ASCII). at the very end. However, after 10 iterations, a csv file isn't created.; I am not sure how to go about fixing this issue so any help is appreciated.; I have attatched the amended configuration file and a screenshot from Windows Powershell.; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8008885/turb_NACA0012_sa.txt). Thank you; ![SU2_](https://user-images.githubusercontent.com/99037921/152658358-bdf3c06c-d3a6-4343-aa14-d5d7c7374cb9.png); !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289
https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289:649,Energy Efficiency,Power,Powershell,649,"Hello!; Thanks for your help. Writing the line:; OUTPUT_FILES= RESTART_ASCII. enabled the simulation to run past 250 iterations and after 4500 or so iterations, I was able to yield the correct values for Cl and Cd.; However, an issue still persists. The file restart_flow.csv doesn't seem to appear in the directory. I have amended the config file to have the lines:. OUTPUT_WRT_FREQ = 10; OUTPUT_FILES=(RESTART_ASCII). at the very end. However, after 10 iterations, a csv file isn't created.; I am not sure how to go about fixing this issue so any help is appreciated.; I have attatched the amended configuration file and a screenshot from Windows Powershell.; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8008885/turb_NACA0012_sa.txt). Thank you; ![SU2_](https://user-images.githubusercontent.com/99037921/152658358-bdf3c06c-d3a6-4343-aa14-d5d7c7374cb9.png); !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289
https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289:336,Modifiability,config,config,336,"Hello!; Thanks for your help. Writing the line:; OUTPUT_FILES= RESTART_ASCII. enabled the simulation to run past 250 iterations and after 4500 or so iterations, I was able to yield the correct values for Cl and Cd.; However, an issue still persists. The file restart_flow.csv doesn't seem to appear in the directory. I have amended the config file to have the lines:. OUTPUT_WRT_FREQ = 10; OUTPUT_FILES=(RESTART_ASCII). at the very end. However, after 10 iterations, a csv file isn't created.; I am not sure how to go about fixing this issue so any help is appreciated.; I have attatched the amended configuration file and a screenshot from Windows Powershell.; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8008885/turb_NACA0012_sa.txt). Thank you; ![SU2_](https://user-images.githubusercontent.com/99037921/152658358-bdf3c06c-d3a6-4343-aa14-d5d7c7374cb9.png); !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289
https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289:600,Modifiability,config,configuration,600,"Hello!; Thanks for your help. Writing the line:; OUTPUT_FILES= RESTART_ASCII. enabled the simulation to run past 250 iterations and after 4500 or so iterations, I was able to yield the correct values for Cl and Cd.; However, an issue still persists. The file restart_flow.csv doesn't seem to appear in the directory. I have amended the config file to have the lines:. OUTPUT_WRT_FREQ = 10; OUTPUT_FILES=(RESTART_ASCII). at the very end. However, after 10 iterations, a csv file isn't created.; I am not sure how to go about fixing this issue so any help is appreciated.; I have attatched the amended configuration file and a screenshot from Windows Powershell.; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8008885/turb_NACA0012_sa.txt). Thank you; ![SU2_](https://user-images.githubusercontent.com/99037921/152658358-bdf3c06c-d3a6-4343-aa14-d5d7c7374cb9.png); !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289
https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095:25,Performance,optimiz,optimization,25,"Sounds like a reasonable optimization, the only other place that handles averages is `COutput::Postprocess_HistoryData`, so this should be a very local change and thus a good first issue. Do you want to give it a go at creating a pull request for this? We can give you some pointers. But it should be simple to modify the `addValue` function to take the window type as argument and only `push_back` for non trivial windows.; Even those could be optimized by caching the sum over n-1 elements, this would avoid traversing the entire history of values when only the last entry is modified during inner iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095
https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095:445,Performance,optimiz,optimized,445,"Sounds like a reasonable optimization, the only other place that handles averages is `COutput::Postprocess_HistoryData`, so this should be a very local change and thus a good first issue. Do you want to give it a go at creating a pull request for this? We can give you some pointers. But it should be simple to modify the `addValue` function to take the window type as argument and only `push_back` for non trivial windows.; Even those could be optimized by caching the sum over n-1 elements, this would avoid traversing the entire history of values when only the last entry is modified during inner iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095
https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095:504,Safety,avoid,avoid,504,"Sounds like a reasonable optimization, the only other place that handles averages is `COutput::Postprocess_HistoryData`, so this should be a very local change and thus a good first issue. Do you want to give it a go at creating a pull request for this? We can give you some pointers. But it should be simple to modify the `addValue` function to take the window type as argument and only `push_back` for non trivial windows.; Even those could be optimized by caching the sum over n-1 elements, this would avoid traversing the entire history of values when only the last entry is modified during inner iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095
https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095:301,Usability,simpl,simple,301,"Sounds like a reasonable optimization, the only other place that handles averages is `COutput::Postprocess_HistoryData`, so this should be a very local change and thus a good first issue. Do you want to give it a go at creating a pull request for this? We can give you some pointers. But it should be simple to modify the `addValue` function to take the window type as argument and only `push_back` for non trivial windows.; Even those could be optimized by caching the sum over n-1 elements, this would avoid traversing the entire history of values when only the last entry is modified during inner iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095
https://github.com/su2code/SU2/issues/1545#issuecomment-1039999787:721,Usability,simpl,simply,721,"Unfortunately, I'm still a bit unsure of the math behind the averaging. I assumed, that the average of a new iteration calculates as follows:. avg(it) = (cumulativeWeight(it-1, it+1) * avg(it-1) + Weight(it, it+1)*Value(it)) / (cumulativeWeight(it-1,it+1)+Weight(it,it+1)). Translated into words:; At iteration `it` we define a window of width `it+1`.; The previous average is weighted with the integral of the window from 0 to it-1. The new value arriving at iteration it is weighted with the actual window weight. The weighted sum is then divided by the sum of the weights. For a rectangular window this seems to converge towards the right value, but for the hanning window it does not.; Probably the math behind it is simply wrong. Any idea what the proper weighting should look like?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1039999787
https://github.com/su2code/SU2/issues/1545#issuecomment-1040060714:165,Performance,cache,cache,165,"When the window size changes the weights for each sample change, you do need the history for nontrivial windows and to recompute the weights.; But it is possible to cache the sum over n-1 samples until the number of samples changes again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1040060714
https://github.com/su2code/SU2/issues/1545#issuecomment-1041186428:953,Deployability,update,updates,953,"Doh, of course. Took a while to get some orientation in the code, but before implementing something I'd just like to clarify a few things:. As far as I can see the window size changes each time a new sample is added and the new average is immediatly recomputed and cached in `val`.; https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/COutput.cpp#L1916-L1928; I didn't find any other references to `WindowedUpdate` or `addValue`. Consequently it doesn't really make sense to cache the sum over n-1 samples, right?. Assuming that the windowing-function cannot change at runtime I'd propose the following changes:. - Add a new constructor to CWindowedAverage which takes the windowID as input parameter and stores it in a const field.; - Initialize the map that stores the CWindowedAverages in the COutput constructor with CWindowedAverage objects constructed with the WindowId specifed.; - Merge the code that updates the average (`WindowedUpdate`) into `addValue`, since both are currently called successively anyway. Delete `WindowedUpdate` function.; - Modify `addValue` to only store history for non-trivial windows. Another option might be to make CWindowedAverage (or `CWindowingTools`) an abstract class with `GetWndWeight` as pure virtual function that needs to be implemented for concrete windows. This would get rid of the duplicate code and switch-statements in CWindowedAverage. The constructor of COutput would then have to initialize the map with the right concrete class. Thoughts?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1041186428
https://github.com/su2code/SU2/issues/1545#issuecomment-1041186428:265,Performance,cache,cached,265,"Doh, of course. Took a while to get some orientation in the code, but before implementing something I'd just like to clarify a few things:. As far as I can see the window size changes each time a new sample is added and the new average is immediatly recomputed and cached in `val`.; https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/COutput.cpp#L1916-L1928; I didn't find any other references to `WindowedUpdate` or `addValue`. Consequently it doesn't really make sense to cache the sum over n-1 samples, right?. Assuming that the windowing-function cannot change at runtime I'd propose the following changes:. - Add a new constructor to CWindowedAverage which takes the windowID as input parameter and stores it in a const field.; - Initialize the map that stores the CWindowedAverages in the COutput constructor with CWindowedAverage objects constructed with the WindowId specifed.; - Merge the code that updates the average (`WindowedUpdate`) into `addValue`, since both are currently called successively anyway. Delete `WindowedUpdate` function.; - Modify `addValue` to only store history for non-trivial windows. Another option might be to make CWindowedAverage (or `CWindowingTools`) an abstract class with `GetWndWeight` as pure virtual function that needs to be implemented for concrete windows. This would get rid of the duplicate code and switch-statements in CWindowedAverage. The constructor of COutput would then have to initialize the map with the right concrete class. Thoughts?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1041186428
https://github.com/su2code/SU2/issues/1545#issuecomment-1041186428:519,Performance,cache,cache,519,"Doh, of course. Took a while to get some orientation in the code, but before implementing something I'd just like to clarify a few things:. As far as I can see the window size changes each time a new sample is added and the new average is immediatly recomputed and cached in `val`.; https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/COutput.cpp#L1916-L1928; I didn't find any other references to `WindowedUpdate` or `addValue`. Consequently it doesn't really make sense to cache the sum over n-1 samples, right?. Assuming that the windowing-function cannot change at runtime I'd propose the following changes:. - Add a new constructor to CWindowedAverage which takes the windowID as input parameter and stores it in a const field.; - Initialize the map that stores the CWindowedAverages in the COutput constructor with CWindowedAverage objects constructed with the WindowId specifed.; - Merge the code that updates the average (`WindowedUpdate`) into `addValue`, since both are currently called successively anyway. Delete `WindowedUpdate` function.; - Modify `addValue` to only store history for non-trivial windows. Another option might be to make CWindowedAverage (or `CWindowingTools`) an abstract class with `GetWndWeight` as pure virtual function that needs to be implemented for concrete windows. This would get rid of the duplicate code and switch-statements in CWindowedAverage. The constructor of COutput would then have to initialize the map with the right concrete class. Thoughts?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1041186428
https://github.com/su2code/SU2/issues/1545#issuecomment-1041285090:18,Performance,cache,cache,18,"It makes sense to cache because addValue does not always add a new value, only when the time iteration changes, after the first inner iteration addValue only modifies the last entry of the history.; The changes you mention sound ok, keep the switches, virtual would make everything slower and more complicated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1041285090
https://github.com/su2code/SU2/pull/1548#issuecomment-1047003088:71,Testability,test,tests,71,@ChristianBauerEng Thanks for the opening the PR. In order for the reg tests to run you need to fix the compiler warnings first as we dont allow for any additional warnings (in the primal-only builds at least). You might want to add `--warnlevel=3` to the meson build command to have those on your machine.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548#issuecomment-1047003088
https://github.com/su2code/SU2/pull/1548#issuecomment-1050335681:302,Energy Efficiency,efficient,efficient,302,I hope my somewhat chaotic commits did not cause more work for you than they actually contributed. This was my first time using github pull requests and code editing without IDE (usually I use Visual Studio). On the upside I now have everything set up to make possible future constributions a bit more efficient :-); I assume you're merging this PR when everything is ready?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548#issuecomment-1050335681
https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024:1415,Modifiability,config,config,1415,"Hi,. I observed similar restart issues for multigrid restarts when working with the discrete adjoint solver for Euler test cases.; Here, I created a reproducible setting with the NACA 0012 Euler case (mesh from the tutorials). **Describe the bug**; The primal solver works fine and for the restart there are no issues. ; However, after an adjoint restart, the residuals are completely different.; As a demonstration I run the discrete adjoint solver:; (1) 110 step and (2) 105 steps and restart for 5 steps. Residual output for the last 10 steps of (1):; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; | 105| -5.474745| -10.823494|; | 106| -5.506899| -10.857980|; | 107| -5.539545| -10.893213|; | 108| -5.572670| -10.929211|; | 109| -5.606253| -10.965987|. Residual output for (2):; last 5 steps before restart; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; 5 steps after restart; | 0| -2.958579| -8.264492|; | 1| -3.071182| -8.366287|; | 2| -3.165074| -8.453816|; | 3| -3.237963| -8.506268|; | 4| -3.293038| -8.552713|. When multigrid is turned of I could not observe a jump in residuals after the restart for this test case. **To Reproduce**; Use the NACA012 Euler mesh from the tutorial and the config file: [config.cfg.txt](https://github.com/su2code/SU2/files/8089442/config.cfg.txt); Converge the flow solver and then run the discrete adjoint for 105 steps and restart. **Desktop (please complete the following information):**; - OS: Linux, Fedora 34; - C++ compiler and version: gcc version 11.2.1; - MPI implementation and version: mpirun (Open MPI) 4.1.0; - SU2 Version: current develop",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024
https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024:1429,Modifiability,config,config,1429,"Hi,. I observed similar restart issues for multigrid restarts when working with the discrete adjoint solver for Euler test cases.; Here, I created a reproducible setting with the NACA 0012 Euler case (mesh from the tutorials). **Describe the bug**; The primal solver works fine and for the restart there are no issues. ; However, after an adjoint restart, the residuals are completely different.; As a demonstration I run the discrete adjoint solver:; (1) 110 step and (2) 105 steps and restart for 5 steps. Residual output for the last 10 steps of (1):; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; | 105| -5.474745| -10.823494|; | 106| -5.506899| -10.857980|; | 107| -5.539545| -10.893213|; | 108| -5.572670| -10.929211|; | 109| -5.606253| -10.965987|. Residual output for (2):; last 5 steps before restart; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; 5 steps after restart; | 0| -2.958579| -8.264492|; | 1| -3.071182| -8.366287|; | 2| -3.165074| -8.453816|; | 3| -3.237963| -8.506268|; | 4| -3.293038| -8.552713|. When multigrid is turned of I could not observe a jump in residuals after the restart for this test case. **To Reproduce**; Use the NACA012 Euler mesh from the tutorial and the config file: [config.cfg.txt](https://github.com/su2code/SU2/files/8089442/config.cfg.txt); Converge the flow solver and then run the discrete adjoint for 105 steps and restart. **Desktop (please complete the following information):**; - OS: Linux, Fedora 34; - C++ compiler and version: gcc version 11.2.1; - MPI implementation and version: mpirun (Open MPI) 4.1.0; - SU2 Version: current develop",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024
https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024:1490,Modifiability,config,config,1490,"Hi,. I observed similar restart issues for multigrid restarts when working with the discrete adjoint solver for Euler test cases.; Here, I created a reproducible setting with the NACA 0012 Euler case (mesh from the tutorials). **Describe the bug**; The primal solver works fine and for the restart there are no issues. ; However, after an adjoint restart, the residuals are completely different.; As a demonstration I run the discrete adjoint solver:; (1) 110 step and (2) 105 steps and restart for 5 steps. Residual output for the last 10 steps of (1):; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; | 105| -5.474745| -10.823494|; | 106| -5.506899| -10.857980|; | 107| -5.539545| -10.893213|; | 108| -5.572670| -10.929211|; | 109| -5.606253| -10.965987|. Residual output for (2):; last 5 steps before restart; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; 5 steps after restart; | 0| -2.958579| -8.264492|; | 1| -3.071182| -8.366287|; | 2| -3.165074| -8.453816|; | 3| -3.237963| -8.506268|; | 4| -3.293038| -8.552713|. When multigrid is turned of I could not observe a jump in residuals after the restart for this test case. **To Reproduce**; Use the NACA012 Euler mesh from the tutorial and the config file: [config.cfg.txt](https://github.com/su2code/SU2/files/8089442/config.cfg.txt); Converge the flow solver and then run the discrete adjoint for 105 steps and restart. **Desktop (please complete the following information):**; - OS: Linux, Fedora 34; - C++ compiler and version: gcc version 11.2.1; - MPI implementation and version: mpirun (Open MPI) 4.1.0; - SU2 Version: current develop",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024
https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024:118,Testability,test,test,118,"Hi,. I observed similar restart issues for multigrid restarts when working with the discrete adjoint solver for Euler test cases.; Here, I created a reproducible setting with the NACA 0012 Euler case (mesh from the tutorials). **Describe the bug**; The primal solver works fine and for the restart there are no issues. ; However, after an adjoint restart, the residuals are completely different.; As a demonstration I run the discrete adjoint solver:; (1) 110 step and (2) 105 steps and restart for 5 steps. Residual output for the last 10 steps of (1):; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; | 105| -5.474745| -10.823494|; | 106| -5.506899| -10.857980|; | 107| -5.539545| -10.893213|; | 108| -5.572670| -10.929211|; | 109| -5.606253| -10.965987|. Residual output for (2):; last 5 steps before restart; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; 5 steps after restart; | 0| -2.958579| -8.264492|; | 1| -3.071182| -8.366287|; | 2| -3.165074| -8.453816|; | 3| -3.237963| -8.506268|; | 4| -3.293038| -8.552713|. When multigrid is turned of I could not observe a jump in residuals after the restart for this test case. **To Reproduce**; Use the NACA012 Euler mesh from the tutorial and the config file: [config.cfg.txt](https://github.com/su2code/SU2/files/8089442/config.cfg.txt); Converge the flow solver and then run the discrete adjoint for 105 steps and restart. **Desktop (please complete the following information):**; - OS: Linux, Fedora 34; - C++ compiler and version: gcc version 11.2.1; - MPI implementation and version: mpirun (Open MPI) 4.1.0; - SU2 Version: current develop",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024
https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024:1333,Testability,test,test,1333,"Hi,. I observed similar restart issues for multigrid restarts when working with the discrete adjoint solver for Euler test cases.; Here, I created a reproducible setting with the NACA 0012 Euler case (mesh from the tutorials). **Describe the bug**; The primal solver works fine and for the restart there are no issues. ; However, after an adjoint restart, the residuals are completely different.; As a demonstration I run the discrete adjoint solver:; (1) 110 step and (2) 105 steps and restart for 5 steps. Residual output for the last 10 steps of (1):; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; | 105| -5.474745| -10.823494|; | 106| -5.506899| -10.857980|; | 107| -5.539545| -10.893213|; | 108| -5.572670| -10.929211|; | 109| -5.606253| -10.965987|. Residual output for (2):; last 5 steps before restart; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; 5 steps after restart; | 0| -2.958579| -8.264492|; | 1| -3.071182| -8.366287|; | 2| -3.165074| -8.453816|; | 3| -3.237963| -8.506268|; | 4| -3.293038| -8.552713|. When multigrid is turned of I could not observe a jump in residuals after the restart for this test case. **To Reproduce**; Use the NACA012 Euler mesh from the tutorial and the config file: [config.cfg.txt](https://github.com/su2code/SU2/files/8089442/config.cfg.txt); Converge the flow solver and then run the discrete adjoint for 105 steps and restart. **Desktop (please complete the following information):**; - OS: Linux, Fedora 34; - C++ compiler and version: gcc version 11.2.1; - MPI implementation and version: mpirun (Open MPI) 4.1.0; - SU2 Version: current develop",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024
https://github.com/su2code/SU2/pull/1550#issuecomment-1064176242:13,Integrability,message,message,13,the valgrind message has been solved by the most recent commit,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1550#issuecomment-1064176242
https://github.com/su2code/SU2/pull/1550#issuecomment-1064448056:221,Integrability,depend,depends,221,"@pcarruscag When running SU2_CFD_AD, the solver is DISC_ADJ_INC_RANS, and a number of initializations are skipped when we do not include this check. Most notably setting kind_limiter, which then leads to the 'conditional depends on uninitialized value' message from valgrind.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1550#issuecomment-1064448056
https://github.com/su2code/SU2/pull/1550#issuecomment-1064448056:253,Integrability,message,message,253,"@pcarruscag When running SU2_CFD_AD, the solver is DISC_ADJ_INC_RANS, and a number of initializations are skipped when we do not include this check. Most notably setting kind_limiter, which then leads to the 'conditional depends on uninitialized value' message from valgrind.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1550#issuecomment-1064448056
https://github.com/su2code/SU2/issues/1551#issuecomment-1054496510:547,Testability,test,testing,547,"I'm not active in development anymore, but I do remember some of the history. Some of these decisions came from #797 . @economon specifically said (in that issue):. > I removed the term involving the TKE from the viscous stress tensor in the mean flow equations, as this is often ignored in codes (and omitting it gives better results, including the pressure field). I also fixed a bug in the definition of the eddy viscosity, where strain magnitude was being used when it should be the vorticity magnitude. You can see the motivation, regression testing, and explanations on that issue page.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551#issuecomment-1054496510
https://github.com/su2code/SU2/issues/1551#issuecomment-1054499366:52,Modifiability,refactor,refactoring,52,"The ""Why ignore turb_ke?"" comment originated in the refactoring effort of #1127 .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551#issuecomment-1054499366
https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142:100,Deployability,update,update,100,"And a few other changes in constants. I am absolutely fine with that but I do not have bandwidth to update all the regression tests, re-run validation tests, etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142
https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142:140,Security,validat,validation,140,"And a few other changes in constants. I am absolutely fine with that but I do not have bandwidth to update all the regression tests, re-run validation tests, etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142
https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142:126,Testability,test,tests,126,"And a few other changes in constants. I am absolutely fine with that but I do not have bandwidth to update all the regression tests, re-run validation tests, etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142
https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142:151,Testability,test,tests,151,"And a few other changes in constants. I am absolutely fine with that but I do not have bandwidth to update all the regression tests, re-run validation tests, etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142
https://github.com/su2code/SU2/pull/1552#issuecomment-1057804579:293,Deployability,release,released,293,This pull request **introduces 25 alerts** when merging 6ad89f76b7b03ded1a7de0b4a4b62bd5dd538dc9 into 3832a8fef8005ad9ef43fec12f58883ba7134664 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-c6c1e214b9c4a855083243cd50497e842d4d12d6). **new alerts:**. * 23 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1057804579
https://github.com/su2code/SU2/pull/1552#issuecomment-1058360689:293,Deployability,release,released,293,This pull request **introduces 25 alerts** when merging 63bf74ca093b265bc0e0e81e6c545a62f612e115 into 3832a8fef8005ad9ef43fec12f58883ba7134664 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-53172a30b365340b7c27b0a89ea68668c5048798). **new alerts:**. * 23 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1058360689
https://github.com/su2code/SU2/pull/1552#issuecomment-1058677874:293,Deployability,release,released,293,This pull request **introduces 25 alerts** when merging 527357d8a12079d49a7c69a67bedd3643ee8886c into 2786e5351d24a3bb5d4325b07fb0085f0f03cf7e - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-c58ff5f55463f2ac0e2520897b6a8de90703a9bd). **new alerts:**. * 23 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1058677874
https://github.com/su2code/SU2/pull/1552#issuecomment-1059151617:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging 5a86fb10c30068591008175e3647c0c8a58a9a69 into 2786e5351d24a3bb5d4325b07fb0085f0f03cf7e - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-a630b3ce6873063f3aab70ccc85be933074f06cc). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1059151617
https://github.com/su2code/SU2/pull/1552#issuecomment-1059209730:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging e8fcf489adf06ab26c20c9cd44813e91710a607c into 2786e5351d24a3bb5d4325b07fb0085f0f03cf7e - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-9f765c12fdd50f461d67a516c0301f40f0f9f21e). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1059209730
https://github.com/su2code/SU2/pull/1552#issuecomment-1059347817:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging ca466b10fcd99c06489309940da7004c67c1fe81 into 2786e5351d24a3bb5d4325b07fb0085f0f03cf7e - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-6cacb48901e54ed75409dc3ce2635de865c80135). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1059347817
https://github.com/su2code/SU2/pull/1552#issuecomment-1068925122:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging 97a1b1ddcae8b9b143ab7bffcadd805f7a197f1f into a28882826ad4515d8f5eea345de56fb273211fee - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b32cec81cda0205c3cc12998e252dedd955e0783). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1068925122
https://github.com/su2code/SU2/pull/1552#issuecomment-1069751369:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging 6ff6acd67bd90d1d53e20e47eb98eded098c2e46 into c8ccde5c80282aee517bbc390f9a469963c2153a - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-8ed9a87b702ededa2878fa363edbfb7850673466). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1069751369
https://github.com/su2code/SU2/pull/1552#issuecomment-1075159473:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging 5a80ab7b020061ed2254c085a5b0faaa0a03482c into 4c3311f4a2cf27a02a757e805d25d065965f6c42 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-92f9fd34c8ba6621a459eb333de38a9a684a7ff9). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1075159473
https://github.com/su2code/SU2/pull/1552#issuecomment-1076386072:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging 5f0af78b145d6348e694bfbd236c10e29d09ce72 into 4c3311f4a2cf27a02a757e805d25d065965f6c42 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-66ab24cbe7085b5e46efa9fc1de8bb6d7e486986). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1076386072
https://github.com/su2code/SU2/pull/1552#issuecomment-1076620503:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging fac06fa2c369d8f6d035be27e3fe179e1e6a06e1 into 3a5b668665eb85b32f36ff7e3a0dfd3041888010 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-51f9be38a9ded9f2524bab2781bbf8e8f137e696). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1076620503
https://github.com/su2code/SU2/pull/1552#issuecomment-1076750120:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging cbf37b14f956263b6bab7a42bc694a0b8dfbd3d3 into 3a5b668665eb85b32f36ff7e3a0dfd3041888010 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-30693e06fce5a6a9a5d4213eb3fe3502a0d8d603). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1076750120
https://github.com/su2code/SU2/pull/1552#issuecomment-1076889967:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging 5309e76b94675dbc2168a9914ceb600344c9824d into 3a5b668665eb85b32f36ff7e3a0dfd3041888010 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-037b1dbb0b3360856714e4987f824f147cc4738d). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1076889967
https://github.com/su2code/SU2/pull/1552#issuecomment-1077441177:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging 7fbc2bd4f1c6038a376a61bfc2d4d5e0bdfa5790 into 4934e1421025e50fd4a4014767989f12dc38d511 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-34b7f4ca603dc2ad27da08ff043482f7f1a479b0). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1077441177
https://github.com/su2code/SU2/pull/1552#issuecomment-1078450896:293,Deployability,release,released,293,This pull request **introduces 22 alerts** when merging 4fd44bb22907e7032d489ef1b2819c85a920984f into cd4ecca8b81d1a78977f05263ffadfb845e52ef1 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-454c3bbd08017bbc1c750f4e4b0ae81b14d52fc2). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1078450896
https://github.com/su2code/SU2/pull/1552#issuecomment-1080434485:18,Testability,test,testcases,18,Modify one of the testcases to exercise this please (even if we don't have a way to check it is doing the right thing).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1080434485
https://github.com/su2code/SU2/pull/1552#issuecomment-1080852262:127,Deployability,update,update,127,> Modify one of the testcases to exercise this please (even if we don't have a way to check it is doing the right thing). I'll update the documentation as well,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1080852262
https://github.com/su2code/SU2/pull/1552#issuecomment-1080852262:20,Testability,test,testcases,20,> Modify one of the testcases to exercise this please (even if we don't have a way to check it is doing the right thing). I'll update the documentation as well,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1080852262
https://github.com/su2code/SU2/pull/1552#issuecomment-1081714870:116,Testability,test,test,116,discadj_incomp_turb_NACA0012_sa now fails with a small difference in residuals. But this case passed the regression test on my machine. I don't see what could have triggered this change.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1081714870
https://github.com/su2code/SU2/issues/1553#issuecomment-1057930032:41,Integrability,wrap,wrapper,41,"This is already possible with the python wrapper, see testcases/py_wrapper/flatPlate_unsteady_CHT_FlatPlate.py; I am against adding any more ""profile files"" to SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1057930032
https://github.com/su2code/SU2/issues/1553#issuecomment-1057930032:54,Testability,test,testcases,54,"This is already possible with the python wrapper, see testcases/py_wrapper/flatPlate_unsteady_CHT_FlatPlate.py; I am against adding any more ""profile files"" to SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1057930032
https://github.com/su2code/SU2/issues/1553#issuecomment-1058017822:40,Energy Efficiency,power,powerful,40,I see. The python wrappers are far more powerful than I thought. But I'm still a bit lost with respect to the API of the driver(s). Where's a good place to start reading into that?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1058017822
https://github.com/su2code/SU2/issues/1553#issuecomment-1058017822:18,Integrability,wrap,wrappers,18,I see. The python wrappers are far more powerful than I thought. But I'm still a bit lost with respect to the API of the driver(s). Where's a good place to start reading into that?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1058017822
https://github.com/su2code/SU2/issues/1553#issuecomment-1058534840:83,Integrability,interface,interface,83,"Sadly no, it is one of the main development areas we have identified in #1487, the interface is not very large, you can scroll over `python_wrapper_structure.cpp` to see the methods that allow modifying things at inputs, and the methods for control flow are in that example I pointed to.; If you join one of our dev meetings we can try to get a working example with what you need.; Wednesdays at 3pm UK - https://meet.jit.si/SU2_DevMeeting",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1058534840
https://github.com/su2code/SU2/issues/1553#issuecomment-1071052958:164,Integrability,wrap,wrapper,164,"If you don't mind I'll leave this question open for now.; I'm planning to provide a simplified example setup later on, once I've had time to properly dive into the wrapper API.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1071052958
https://github.com/su2code/SU2/issues/1553#issuecomment-1071052958:84,Usability,simpl,simplified,84,"If you don't mind I'll leave this question open for now.; I'm planning to provide a simplified example setup later on, once I've had time to properly dive into the wrapper API.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1071052958
https://github.com/su2code/SU2/issues/1553#issuecomment-1173129797:199,Deployability,update,updated,199,I am trying to do the same thing for a loosely coupled cht problem. I have the wall temperature data but cannot implement it to SU2. I have checked the python wrapper code but I think it needs to be updated to be able to work as isothermal wall boundary condition with varying T through x coordinate(or any). Is there any progress about this issue?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1173129797
https://github.com/su2code/SU2/issues/1553#issuecomment-1173129797:159,Integrability,wrap,wrapper,159,I am trying to do the same thing for a loosely coupled cht problem. I have the wall temperature data but cannot implement it to SU2. I have checked the python wrapper code but I think it needs to be updated to be able to work as isothermal wall boundary condition with varying T through x coordinate(or any). Is there any progress about this issue?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1173129797
https://github.com/su2code/SU2/pull/1555#issuecomment-1059553290:52,Testability,test,test,52,"Beyoncé's rule of programming, if you like it put a test on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1555#issuecomment-1059553290
https://github.com/su2code/SU2/pull/1557#issuecomment-1059936471:379,Testability,test,tests,379,"I looked at the transport equations and implemented the SST2003m model (as far as I can tell); I'm not entirely sure about what happens in CTurbSSTSolver::Postprocessing; what's the difference between:; flownodes->; nodes->; geometry->nodes. I also have to check the implementation of the boundary conditions. When the implementation has been checked, I'll tackle the regression tests",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557#issuecomment-1059936471
https://github.com/su2code/SU2/pull/1557#issuecomment-1060630539:698,Deployability,update,update,698,"> make the SST model exactly the SST2003m model according to the NASA website. Does it make sense to change the existing SST model rather than just adding the 2003m-version alongside of the 1994-version? Maybe rename to `SST-1994` and `SST-2003m`, that makes it transparent. One could even keep `SST` while adding a warning that `SST` will be deprecated in the future and that `SST-1994` is the equivalent successor. The upside of doing it like that is that it wouldn't interfere that much with peoples cases (only little cfg change necessary to produce the same results) and it would be much less work for you to change all the regression tests. And although the 2003-version is supposed to be an update to the 1994 version, I would bet there are people who prefer the 1994 version by choice. After all, when the Ancients first implemented SU2 they chose 1994 despite the 2003 version being around for 10 years already. I would be ok with switching to 2003m completely but I dont see really see the benefit as it means more work for everybody (right?).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557#issuecomment-1060630539
https://github.com/su2code/SU2/pull/1557#issuecomment-1060630539:640,Testability,test,tests,640,"> make the SST model exactly the SST2003m model according to the NASA website. Does it make sense to change the existing SST model rather than just adding the 2003m-version alongside of the 1994-version? Maybe rename to `SST-1994` and `SST-2003m`, that makes it transparent. One could even keep `SST` while adding a warning that `SST` will be deprecated in the future and that `SST-1994` is the equivalent successor. The upside of doing it like that is that it wouldn't interfere that much with peoples cases (only little cfg change necessary to produce the same results) and it would be much less work for you to change all the regression tests. And although the 2003-version is supposed to be an update to the 1994 version, I would bet there are people who prefer the 1994 version by choice. After all, when the Ancients first implemented SU2 they chose 1994 despite the 2003 version being around for 10 years already. I would be ok with switching to 2003m completely but I dont see really see the benefit as it means more work for everybody (right?).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557#issuecomment-1060630539
https://github.com/su2code/SU2/pull/1557#issuecomment-1060747618:236,Deployability,update,update,236,"Hi Tobi, Well the thing is that currently we do not have sst1994 nor sst2003. We can implement both version and make one of them the default but in any case it means that the regression tests have to be recalibrated. And if you want to update 'everything' then we also need to redo the V&V cases and make the plots again - preferably with something in place that will auto-create these plots when something changes in the future.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557#issuecomment-1060747618
https://github.com/su2code/SU2/pull/1557#issuecomment-1060747618:186,Testability,test,tests,186,"Hi Tobi, Well the thing is that currently we do not have sst1994 nor sst2003. We can implement both version and make one of them the default but in any case it means that the regression tests have to be recalibrated. And if you want to update 'everything' then we also need to redo the V&V cases and make the plots again - preferably with something in place that will auto-create these plots when something changes in the future.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557#issuecomment-1060747618
https://github.com/su2code/SU2/pull/1557#issuecomment-1060767999:113,Security,Validat,Validate,113,"We should not roll out a new version of SST without having substantial coverage. I think with this PR we can:; - Validate SST-2003m, flatplate and maybe channel bump, NACA0012.; - Assess the changes required in the code, they are fairly subtle so we could consider having the 2 version, SST and 2003m as a ""variant"" specified like @suargi suggests for SA.; - Assess the ""damage"" in the regressions, how many restarts need re-doing etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557#issuecomment-1060767999
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:776,Deployability,configurat,configuration,776,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:1243,Deployability,update,update,1243,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:924,Energy Efficiency,reduce,reduced,924,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:188,Integrability,Depend,Depending,188,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:84,Modifiability,config,config,84,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:298,Modifiability,config,config,298,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:776,Modifiability,config,configuration,776,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:1254,Modifiability,config,config,1254,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:657,Security,attack,attack,657,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:1097,Security,integrity,integrity,1097,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:79,Testability,test,test,79,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:129,Testability,test,test,129,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:363,Testability,test,test,363,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:626,Testability,test,test,626,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:736,Testability,test,tested,736,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:1010,Testability,test,test,1010,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:1198,Testability,test,test,1198,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:33,Usability,feedback,feedback,33,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:487,Usability,simpl,simpler,487,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363
https://github.com/su2code/SU2/pull/1559#issuecomment-1067934368:66,Modifiability,config,config,66,"That is a bit of a necessary evil, I would leave a warning in the config explaining exactly what you just did.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067934368
https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083:201,Energy Efficiency,adapt,adaptions,201,"Thanks for the explanation @suargi . I would personally advocate for that the testcases should converge to some reasonable solution people might use it as a starting point (copy the cfg and doing mild adaptions) for their own stuff. And the Testcases show off the capabilities to some degree, to do so, convergence is beneficial. But as we have a bunch of working 2D airfoils in regression already I recon that adding a clear explanation and warning to the cfg as suggested by Pedro is fine. Otherwise you might try to bisect the AoA ... maybe there is a value that triggers negative SA and does not diverge :thinking: . Knowingly adding a diverging test without a clear warning is not good imo :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083
https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083:201,Modifiability,adapt,adaptions,201,"Thanks for the explanation @suargi . I would personally advocate for that the testcases should converge to some reasonable solution people might use it as a starting point (copy the cfg and doing mild adaptions) for their own stuff. And the Testcases show off the capabilities to some degree, to do so, convergence is beneficial. But as we have a bunch of working 2D airfoils in regression already I recon that adding a clear explanation and warning to the cfg as suggested by Pedro is fine. Otherwise you might try to bisect the AoA ... maybe there is a value that triggers negative SA and does not diverge :thinking: . Knowingly adding a diverging test without a clear warning is not good imo :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083
https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083:78,Testability,test,testcases,78,"Thanks for the explanation @suargi . I would personally advocate for that the testcases should converge to some reasonable solution people might use it as a starting point (copy the cfg and doing mild adaptions) for their own stuff. And the Testcases show off the capabilities to some degree, to do so, convergence is beneficial. But as we have a bunch of working 2D airfoils in regression already I recon that adding a clear explanation and warning to the cfg as suggested by Pedro is fine. Otherwise you might try to bisect the AoA ... maybe there is a value that triggers negative SA and does not diverge :thinking: . Knowingly adding a diverging test without a clear warning is not good imo :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083
https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083:241,Testability,Test,Testcases,241,"Thanks for the explanation @suargi . I would personally advocate for that the testcases should converge to some reasonable solution people might use it as a starting point (copy the cfg and doing mild adaptions) for their own stuff. And the Testcases show off the capabilities to some degree, to do so, convergence is beneficial. But as we have a bunch of working 2D airfoils in regression already I recon that adding a clear explanation and warning to the cfg as suggested by Pedro is fine. Otherwise you might try to bisect the AoA ... maybe there is a value that triggers negative SA and does not diverge :thinking: . Knowingly adding a diverging test without a clear warning is not good imo :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083
